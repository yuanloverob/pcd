{
  "cve_id": "CVE-2016-7411",
  "cve_desc": "ext/standard/var_unserializer.re in PHP before 5.6.26 mishandles object-deserialization failures, which allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via an unserialize call that references a partially constructed object.",
  "repo": "php/php-src",
  "patch_hash": "6a7cc8ff85827fa9ac715b3a83c2d9147f33cd43",
  "patch_info": {
    "commit_hash": "6a7cc8ff85827fa9ac715b3a83c2d9147f33cd43",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/6a7cc8ff85827fa9ac715b3a83c2d9147f33cd43",
    "files": [
      "Zend/zend_objects_API.c",
      "ext/standard/tests/serialize/bug73052.phpt",
      "ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re"
    ],
    "message": "Fix bug #73052 - Memory Corruption in During Deserialized-object Destruction",
    "before_after_code_files": [
      "Zend/zend_objects_API.c||Zend/zend_objects_API.c",
      "ext/standard/tests/serialize/bug73052.phpt||ext/standard/tests/serialize/bug73052.phpt",
      "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
    ]
  },
  "patch_diff": {
    "Zend/zend_objects_API.c||Zend/zend_objects_API.c": [
      "File: Zend/zend_objects_API.c -> Zend/zend_objects_API.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "306: {",
      "307:  zend_object_handle handle = Z_OBJ_HANDLE_P(zobject);",
      "308:  zend_object_store_bucket *obj_bucket = &EG(objects_store).object_buckets[handle];",
      "311:  obj_bucket->destructor_called = 1;",
      "312: }",
      "",
      "[Removed Lines]",
      "310:  obj_bucket->bucket.obj.handlers = Z_OBJ_HT_P(zobject);;",
      "",
      "[Added Lines]",
      "310:  obj_bucket->bucket.obj.handlers = Z_OBJ_HT_P(zobject);",
      "",
      "---------------"
    ],
    "ext/standard/tests/serialize/bug73052.phpt||ext/standard/tests/serialize/bug73052.phpt": [
      "File: ext/standard/tests/serialize/bug73052.phpt -> ext/standard/tests/serialize/bug73052.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #73052: Memory Corruption in During Deserialized-object Destruction",
      "3: --FILE--",
      "4: <?php",
      "6: class obj {",
      "7:     var $ryat;",
      "8:     public function __destruct() {",
      "9:         $this->ryat = null;",
      "10:     }",
      "11: }",
      "13: $poc = 'O:3:\"obj\":1:{';",
      "14: var_dump(unserialize($poc));",
      "15: ?>",
      "16: --EXPECTF--",
      "17: Notice: unserialize(): Error at offset 13 of 13 bytes in %sbug73052.php on line %d",
      "18: bool(false)",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
      "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "438:      if(Z_TYPE_PP(rval) == IS_OBJECT) {",
      "439:         zend_hash_clean(Z_OBJPROP_PP(rval));",
      "440:      }",
      "441:      ZVAL_NULL(*rval);",
      "442:   return 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "440:         zend_object_store_ctor_failed(*rval TSRMLS_CC);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "495: {",
      "496:  YYCTYPE yych;",
      "497:  static const unsigned char yybm[] = {",
      "",
      "[Removed Lines]",
      "494: #line 495 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "495: #line 496 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "551:  yych = *(YYMARKER = ++YYCURSOR);",
      "552:  if (yych == ':') goto yy95;",
      "553: yy3:",
      "555:  { return 0; }",
      "557: yy4:",
      "558:  yych = *(YYMARKER = ++YYCURSOR);",
      "559:  if (yych == ':') goto yy89;",
      "",
      "[Removed Lines]",
      "554: #line 860 \"ext/standard/var_unserializer.re\"",
      "556: #line 557 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "555: #line 861 \"ext/standard/var_unserializer.re\"",
      "557: #line 558 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "596:  goto yy3;",
      "597: yy14:",
      "598:  ++YYCURSOR;",
      "600:  {",
      "602:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
      "604: }",
      "606: yy16:",
      "607:  yych = *++YYCURSOR;",
      "608:  goto yy3;",
      "",
      "[Removed Lines]",
      "599: #line 854 \"ext/standard/var_unserializer.re\"",
      "605: #line 606 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "600: #line 855 \"ext/standard/var_unserializer.re\"",
      "606: #line 607 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "633:  yych = *++YYCURSOR;",
      "634:  if (yych != '\"') goto yy18;",
      "635:  ++YYCURSOR;",
      "637:  {",
      "638:  size_t len, len2, len3, maxlen;",
      "639:  long elements;",
      "",
      "[Removed Lines]",
      "636: #line 707 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "637: #line 708 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "781:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "782: }",
      "784: yy25:",
      "785:  yych = *++YYCURSOR;",
      "786:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "783: #line 784 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "784: #line 785 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "805:  yych = *++YYCURSOR;",
      "806:  if (yych != '\"') goto yy18;",
      "807:  ++YYCURSOR;",
      "809:  {",
      "810:     if (!var_hash) return 0;",
      "",
      "[Removed Lines]",
      "808: #line 698 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "809: #line 699 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "814:  return object_common2(UNSERIALIZE_PASSTHRU,",
      "815:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
      "816: }",
      "818: yy32:",
      "819:  yych = *++YYCURSOR;",
      "820:  if (yych == '+') goto yy33;",
      "",
      "[Removed Lines]",
      "817: #line 818 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "818: #line 819 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "835:  yych = *++YYCURSOR;",
      "836:  if (yych != '{') goto yy18;",
      "837:  ++YYCURSOR;",
      "839:  {",
      "840:  long elements = parse_iv(start + 2);",
      "",
      "[Removed Lines]",
      "838: #line 677 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "839: #line 678 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "857:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
      "858: }",
      "860: yy39:",
      "861:  yych = *++YYCURSOR;",
      "862:  if (yych == '+') goto yy40;",
      "",
      "[Removed Lines]",
      "859: #line 860 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "860: #line 861 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "877:  yych = *++YYCURSOR;",
      "878:  if (yych != '\"') goto yy18;",
      "879:  ++YYCURSOR;",
      "881:  {",
      "882:  size_t len, maxlen;",
      "883:  char *str;",
      "",
      "[Removed Lines]",
      "880: #line 642 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "881: #line 643 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "912:  ZVAL_STRINGL(*rval, str, len, 0);",
      "913:  return 1;",
      "914: }",
      "916: yy46:",
      "917:  yych = *++YYCURSOR;",
      "918:  if (yych == '+') goto yy47;",
      "",
      "[Removed Lines]",
      "915: #line 916 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "916: #line 917 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "933:  yych = *++YYCURSOR;",
      "934:  if (yych != '\"') goto yy18;",
      "935:  ++YYCURSOR;",
      "937:  {",
      "938:  size_t len, maxlen;",
      "939:  char *str;",
      "",
      "[Removed Lines]",
      "936: #line 609 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "937: #line 610 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "966:  ZVAL_STRINGL(*rval, str, len, 1);",
      "967:  return 1;",
      "968: }",
      "970: yy53:",
      "971:  yych = *++YYCURSOR;",
      "972:  if (yych <= '/') {",
      "",
      "[Removed Lines]",
      "969: #line 970 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "970: #line 971 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "1054:  }",
      "1055: yy63:",
      "1056:  ++YYCURSOR;",
      "1058:  {",
      "1059: #if SIZEOF_LONG == 4",
      "1060: use_double:",
      "",
      "[Removed Lines]",
      "1057: #line 599 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1058: #line 600 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "1064:  ZVAL_DOUBLE(*rval, zend_strtod((const char *)start + 2, NULL));",
      "1065:  return 1;",
      "1066: }",
      "1068: yy65:",
      "1069:  yych = *++YYCURSOR;",
      "1070:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1067: #line 1068 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1068: #line 1069 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "1123:  yych = *++YYCURSOR;",
      "1124:  if (yych != ';') goto yy18;",
      "1125:  ++YYCURSOR;",
      "1127:  {",
      "1129:  INIT_PZVAL(*rval);",
      "",
      "[Removed Lines]",
      "1126: #line 584 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1127: #line 585 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "1139:  return 1;",
      "1140: }",
      "1142: yy76:",
      "1143:  yych = *++YYCURSOR;",
      "1144:  if (yych == 'N') goto yy73;",
      "",
      "[Removed Lines]",
      "1141: #line 1142 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1142: #line 1143 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "1165:  if (yych <= '9') goto yy79;",
      "1166:  if (yych != ';') goto yy18;",
      "1167:  ++YYCURSOR;",
      "1169:  {",
      "1170: #if SIZEOF_LONG == 4",
      "1171:  int digits = YYCURSOR - start - 3;",
      "",
      "[Removed Lines]",
      "1168: #line 557 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1169: #line 558 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "1192:  ZVAL_LONG(*rval, parse_iv(start + 2));",
      "1193:  return 1;",
      "1194: }",
      "1196: yy83:",
      "1197:  yych = *++YYCURSOR;",
      "1198:  if (yych <= '/') goto yy18;",
      "",
      "[Removed Lines]",
      "1195: #line 1196 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1196: #line 1197 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "1200:  yych = *++YYCURSOR;",
      "1201:  if (yych != ';') goto yy18;",
      "1202:  ++YYCURSOR;",
      "1204:  {",
      "1206:  INIT_PZVAL(*rval);",
      "1207:  ZVAL_BOOL(*rval, parse_iv(start + 2));",
      "1208:  return 1;",
      "1209: }",
      "1211: yy87:",
      "1212:  ++YYCURSOR;",
      "1214:  {",
      "1216:  INIT_PZVAL(*rval);",
      "1217:  ZVAL_NULL(*rval);",
      "1218:  return 1;",
      "1219: }",
      "1221: yy89:",
      "1222:  yych = *++YYCURSOR;",
      "1223:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1203: #line 550 \"ext/standard/var_unserializer.re\"",
      "1210: #line 1211 \"ext/standard/var_unserializer.c\"",
      "1213: #line 543 \"ext/standard/var_unserializer.re\"",
      "1220: #line 1221 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1204: #line 551 \"ext/standard/var_unserializer.re\"",
      "1211: #line 1212 \"ext/standard/var_unserializer.c\"",
      "1214: #line 544 \"ext/standard/var_unserializer.re\"",
      "1221: #line 1222 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "1240:  if (yych <= '9') goto yy91;",
      "1241:  if (yych != ';') goto yy18;",
      "1242:  ++YYCURSOR;",
      "1244:  {",
      "1245:  long id;",
      "",
      "[Removed Lines]",
      "1243: #line 520 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1244: #line 521 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "1264:  return 1;",
      "1265: }",
      "1267: yy95:",
      "1268:  yych = *++YYCURSOR;",
      "1269:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1266: #line 1267 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1267: #line 1268 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "1286:  if (yych <= '9') goto yy97;",
      "1287:  if (yych != ';') goto yy18;",
      "1288:  ++YYCURSOR;",
      "1290:  {",
      "1291:  long id;",
      "",
      "[Removed Lines]",
      "1289: #line 499 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1290: #line 500 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "1308:  return 1;",
      "1309: }",
      "1311: }",
      "1315:  return 0;",
      "",
      "[Removed Lines]",
      "1310: #line 1311 \"ext/standard/var_unserializer.c\"",
      "1312: #line 862 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1311: #line 1312 \"ext/standard/var_unserializer.c\"",
      "1313: #line 863 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
      "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
      "--- Hunk 1 ---",
      "[Context before]",
      "442:      if(Z_TYPE_PP(rval) == IS_OBJECT) {",
      "443:         zend_hash_clean(Z_OBJPROP_PP(rval));",
      "444:      }",
      "445:      ZVAL_NULL(*rval);",
      "446:   return 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "444:         zend_object_store_ctor_failed(*rval TSRMLS_CC);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fa2125df6766bb7edac0a0bf433940465da9af4b",
      "candidate_info": {
        "commit_hash": "fa2125df6766bb7edac0a0bf433940465da9af4b",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/fa2125df6766bb7edac0a0bf433940465da9af4b",
        "files": [
          "ext/exif/exif.c",
          "ext/exif/tests/bug73737.phpt",
          "ext/exif/tests/bug73737.tiff",
          "ext/phar/phar.c",
          "ext/phar/tests/bug73764.phar",
          "ext/phar/tests/bug73764.phpt",
          "ext/phar/tests/bug73768.phar",
          "ext/phar/tests/bug73768.phpt",
          "ext/standard/tests/serialize/bug73825.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Merge branch 'PHP-5.6.30' into PHP-5.6\n\n* PHP-5.6.30:\n  Fix bug #73737 FPE when parsing a tag format\n  Fix bug #73773 - Seg fault when loading hostile phar\n  Fix bug #73825 - Heap out of bounds read on unserialize in finish_nested_data()\n  Fix bug #73768 - Memory corruption when loading hostile phar\n  Fix int overflows in phar (bug #73764)",
        "before_after_code_files": [
          "ext/exif/exif.c||ext/exif/exif.c",
          "ext/exif/tests/bug73737.phpt||ext/exif/tests/bug73737.phpt",
          "ext/phar/phar.c||ext/phar/phar.c",
          "ext/phar/tests/bug73764.phpt||ext/phar/tests/bug73764.phpt",
          "ext/phar/tests/bug73768.phpt||ext/phar/tests/bug73768.phpt",
          "ext/standard/tests/serialize/bug73825.phpt||ext/standard/tests/serialize/bug73825.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/exif/exif.c||ext/exif/exif.c": [
          "File: ext/exif/exif.c -> ext/exif/exif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1303:    if (s_den == 0) {",
          "1304:     return 0;",
          "1305:    } else {",
          "1307:    }",
          "1309:   case TAG_FMT_SSHORT:    return php_ifd_get16u(value, motorola_intel);",
          "",
          "[Removed Lines]",
          "1306:     return php_ifd_get32s(value, motorola_intel) / s_den;",
          "",
          "[Added Lines]",
          "1306:     return (size_t)((double)php_ifd_get32s(value, motorola_intel) / s_den);",
          "",
          "---------------"
        ],
        "ext/exif/tests/bug73737.phpt||ext/exif/tests/bug73737.phpt": [
          "File: ext/exif/tests/bug73737.phpt -> ext/exif/tests/bug73737.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73737 (Crash when parsing a tag format)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded('exif')) print 'skip exif extension not available';?>",
          "5: --FILE--",
          "6: <?php",
          "7:  $exif = exif_thumbnail(__DIR__ . '/bug73737.tiff');",
          "8:  var_dump($exif);",
          "9: ?>",
          "10: --EXPECTF--",
          "11: Warning: exif_thumbnail(bug73737.tiff): Error in TIFF: filesize(x0030) less than start of IFD dir(x10102) in %s line %d",
          "12: bool(false)",
          "",
          "---------------"
        ],
        "ext/phar/phar.c||ext/phar/phar.c": [
          "File: ext/phar/phar.c -> ext/phar/phar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "982:   if (alias && alias_len && (alias_len != (int)tmp_len || strncmp(alias, buffer, tmp_len)))",
          "983:   {",
          "985:    php_stream_close(fp);",
          "987:    if (signature) {",
          "",
          "[Removed Lines]",
          "984:    buffer[tmp_len] = '\\0';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "989:    }",
          "991:    if (error) {",
          "993:    }",
          "995:    efree(savebuf);",
          "",
          "[Removed Lines]",
          "992:     spprintf(error, 0, \"cannot load phar \\\"%s\\\" with implicit alias \\\"%s\\\" under different alias \\\"%s\\\"\", fname, buffer, alias);",
          "",
          "[Added Lines]",
          "991:     spprintf(error, 0, \"cannot load phar \\\"%s\\\" with implicit alias \\\"%.*s\\\" under different alias \\\"%s\\\"\", fname, tmp_len, buffer, alias);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1055:  entry.is_persistent = mydata->is_persistent;",
          "1057:  for (manifest_index = 0; manifest_index < manifest_count; ++manifest_index) {",
          "1059:    MAPPHAR_FAIL(\"internal corruption of phar \\\"%s\\\" (truncated manifest entry)\")",
          "1060:   }",
          "",
          "[Removed Lines]",
          "1058:   if (buffer + 4 > endbuffer) {",
          "",
          "[Added Lines]",
          "1057:   if (buffer + 28 > endbuffer) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1069:    entry.manifest_pos = manifest_index;",
          "1070:   }",
          "1073:    MAPPHAR_FAIL(\"internal corruption of phar \\\"%s\\\" (truncated manifest entry)\");",
          "1074:   }",
          "",
          "[Removed Lines]",
          "1072:   if (entry.filename_len + 20 > endbuffer - buffer) {",
          "",
          "[Added Lines]",
          "1071:   if (entry.filename_len > endbuffer - buffer - 24) {",
          "",
          "---------------"
        ],
        "ext/phar/tests/bug73764.phpt||ext/phar/tests/bug73764.phpt": [
          "File: ext/phar/tests/bug73764.phpt -> ext/phar/tests/bug73764.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Phar: PHP bug #73764: Crash while loading hostile phar archive",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"phar\")) die(\"skip\"); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: chdir(__DIR__);",
          "8: try {",
          "9: $p = Phar::LoadPhar('bug73764.phar', 'alias.phar');",
          "10: echo \"OK\\n\";",
          "11: } catch(PharException $e) {",
          "12:  echo $e->getMessage();",
          "13: }",
          "14: ?>",
          "15: --EXPECTF--",
          "16: internal corruption of phar \"%sbug73764.phar\" (truncated manifest entry)",
          "",
          "---------------"
        ],
        "ext/phar/tests/bug73768.phpt||ext/phar/tests/bug73768.phpt": [
          "File: ext/phar/tests/bug73768.phpt -> ext/phar/tests/bug73768.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Phar: PHP bug #73768: Memory corruption when loading hostile phar",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"phar\")) die(\"skip\"); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: chdir(__DIR__);",
          "8: try {",
          "9: $p = Phar::LoadPhar('bug73768.phar', 'alias.phar');",
          "10: echo \"OK\\n\";",
          "11: } catch(PharException $e) {",
          "12:  echo $e->getMessage();",
          "13: }",
          "14: ?>",
          "15: --EXPECTF--",
          "16: cannot load phar \"%sbug73768.phar\" with implicit alias \"\" under different alias \"alias.phar\"",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug73825.phpt||ext/standard/tests/serialize/bug73825.phpt": [
          "File: ext/standard/tests/serialize/bug73825.phpt -> ext/standard/tests/serialize/bug73825.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73825 Heap out of bounds read on unserialize in finish_nested_data()",
          "3: --FILE--",
          "4: <?php",
          "5: $obj = unserialize('O:8:\"00000000\":');",
          "6: var_dump($obj);",
          "7: ?>",
          "8: --EXPECTF--",
          "9: Warning: Bad unserialize data in %sbug73825.php on line %d",
          "11: Notice: unserialize(): Error at offset 13 of 15 bytes in %sbug73825.php on line %d",
          "12: bool(false)",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "405: {",
          "406:  long elements;",
          "408:  elements = parse_iv2((*p) + 2, p);",
          "410:  (*p) += 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408:  if( *p >= max - 2) {",
          "409:   zend_error(E_WARNING, \"Bad unserialize data\");",
          "410:   return -1;",
          "411:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "417:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);",
          "419:  }",
          "421:  return elements;",
          "",
          "[Removed Lines]",
          "418:   return 0;",
          "",
          "[Added Lines]",
          "423:   return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "496: {",
          "497:  YYCTYPE yych;",
          "498:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "495: #line 496 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "500: #line 501 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "529:     0,   0,   0,   0,   0,   0,   0,   0,",
          "530:     0,   0,   0,   0,   0,   0,   0,   0,",
          "531:  };",
          "532:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "533:  yych = *YYCURSOR;",
          "534:  switch (yych) {",
          "535:  case 'C':",
          "537:  case 'N': goto yy5;",
          "544:  case 'o': goto yy12;",
          "549:  }",
          "550: yy2:",
          "552: yy3:",
          "554:  { return 0; }",
          "556: yy4:",
          "557:  yych = *(YYMARKER = ++YYCURSOR);",
          "559:  goto yy3;",
          "560: yy5:",
          "561:  yych = *++YYCURSOR;",
          "563:  goto yy3;",
          "564: yy6:",
          "565:  yych = *(YYMARKER = ++YYCURSOR);",
          "567:  goto yy3;",
          "568: yy7:",
          "569:  yych = *(YYMARKER = ++YYCURSOR);",
          "571:  goto yy3;",
          "572: yy8:",
          "573:  yych = *(YYMARKER = ++YYCURSOR);",
          "575:  goto yy3;",
          "576: yy9:",
          "577:  yych = *(YYMARKER = ++YYCURSOR);",
          "579:  goto yy3;",
          "580: yy10:",
          "581:  yych = *(YYMARKER = ++YYCURSOR);",
          "583:  goto yy3;",
          "584: yy11:",
          "585:  yych = *(YYMARKER = ++YYCURSOR);",
          "587:  goto yy3;",
          "588: yy12:",
          "589:  yych = *(YYMARKER = ++YYCURSOR);",
          "591:  goto yy3;",
          "592: yy13:",
          "593:  yych = *(YYMARKER = ++YYCURSOR);",
          "595:  goto yy3;",
          "596: yy14:",
          "601:  ++YYCURSOR;",
          "603:  {",
          "605:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
          "607: }",
          "609: yy17:",
          "610:  yych = *++YYCURSOR;",
          "611:  if (yybm[0+yych] & 128) {",
          "613:  }",
          "615: yy18:",
          "616:  YYCURSOR = YYMARKER;",
          "617:  goto yy3;",
          "618: yy19:",
          "629:  yych = *++YYCURSOR;",
          "638:  }",
          "650:  goto yy18;",
          "653:  if (yych <= '/') goto yy18;",
          "657:  yych = *++YYCURSOR;",
          "666:   }",
          "672:   } else {",
          "675:   }",
          "676:  }",
          "687:  }",
          "698:  }",
          "700:  yych = *++YYCURSOR;",
          "701:  if (yych <= ',') {",
          "704:  } else {",
          "706:   if (yych <= '/') goto yy18;",
          "708:   goto yy18;",
          "709:  }",
          "711:  yych = *++YYCURSOR;",
          "713:  if (yych <= '/') goto yy18;",
          "723:  ++YYCURSOR;",
          "724:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "725:  yych = *YYCURSOR;",
          "729:  if (yych <= '/') goto yy18;",
          "733:  yych = *++YYCURSOR;",
          "737:  ++YYCURSOR;",
          "740:  if (yych <= '/') goto yy18;",
          "741:  if (yych <= '9') goto yy34;",
          "743:  goto yy18;",
          "745:  yych = *++YYCURSOR;",
          "746:  if (yych <= '/') goto yy18;",
          "747:  if (yych >= ':') goto yy18;",
          "749:  ++YYCURSOR;",
          "750:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "751:  yych = *YYCURSOR;",
          "752:  if (yych <= '/') goto yy18;",
          "757:  yych = *++YYCURSOR;",
          "761:  ++YYCURSOR;",
          "786:  }",
          "814:  }",
          "824:  yych = *++YYCURSOR;",
          "825:  if (yych <= '/') goto yy18;",
          "834:  goto yy18;",
          "836:  yych = *++YYCURSOR;",
          "837:  if (yych <= '/') goto yy18;",
          "838:  if (yych >= ':') goto yy18;",
          "840:  ++YYCURSOR;",
          "841:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "842:  yych = *YYCURSOR;",
          "843:  if (yych <= '/') goto yy18;",
          "848:  yych = *++YYCURSOR;",
          "852:  ++YYCURSOR;",
          "855:  if (yych <= '/') goto yy18;",
          "858:  goto yy18;",
          "860:  yych = *++YYCURSOR;",
          "861:  if (yych <= '/') goto yy18;",
          "862:  if (yych >= ':') goto yy18;",
          "864:  ++YYCURSOR;",
          "865:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "866:  yych = *YYCURSOR;",
          "867:  if (yych <= '/') goto yy18;",
          "872:  yych = *++YYCURSOR;",
          "876:  ++YYCURSOR;",
          "878:  {",
          "886:   return 0;",
          "887:  }",
          "891:  }",
          "896:  return 1;",
          "897: }",
          "900:  yych = *++YYCURSOR;",
          "902:  goto yy18;",
          "904:  yych = *++YYCURSOR;",
          "906:  goto yy18;",
          "908:  ++YYCURSOR;",
          "918:  ++YYCURSOR;",
          "919:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "920:  yych = *YYCURSOR;",
          "921:  if (yych <= ';') {",
          "922:   if (yych <= '/') goto yy18;",
          "924:   if (yych <= ':') goto yy18;",
          "925:  } else {",
          "926:   if (yych <= 'E') {",
          "927:    if (yych <= 'D') goto yy18;",
          "929:   } else {",
          "931:    goto yy18;",
          "932:   }",
          "933:  }",
          "935:  ++YYCURSOR;",
          "937:  {",
          "938: #if SIZEOF_LONG == 4",
          "939: use_double:",
          "",
          "[Removed Lines]",
          "536:  case 'O': goto yy4;",
          "538:  case 'R': goto yy6;",
          "539:  case 'S': goto yy7;",
          "540:  case 'a': goto yy8;",
          "541:  case 'b': goto yy9;",
          "542:  case 'd': goto yy10;",
          "543:  case 'i': goto yy11;",
          "545:  case 'r': goto yy13;",
          "546:  case 's': goto yy14;",
          "547:  case '}': goto yy15;",
          "548:  default: goto yy2;",
          "551:  ++YYCURSOR;",
          "553: #line 863 \"ext/standard/var_unserializer.re\"",
          "555: #line 556 \"ext/standard/var_unserializer.c\"",
          "558:  if (yych == ':') goto yy17;",
          "562:  if (yych == ';') goto yy19;",
          "566:  if (yych == ':') goto yy21;",
          "570:  if (yych == ':') goto yy22;",
          "574:  if (yych == ':') goto yy23;",
          "578:  if (yych == ':') goto yy24;",
          "582:  if (yych == ':') goto yy25;",
          "586:  if (yych == ':') goto yy26;",
          "590:  if (yych == ':') goto yy27;",
          "594:  if (yych == ':') goto yy28;",
          "597:  yych = *(YYMARKER = ++YYCURSOR);",
          "598:  if (yych == ':') goto yy29;",
          "599:  goto yy3;",
          "600: yy15:",
          "602: #line 857 \"ext/standard/var_unserializer.re\"",
          "608: #line 609 \"ext/standard/var_unserializer.c\"",
          "612:   goto yy31;",
          "614:  if (yych == '+') goto yy30;",
          "619:  ++YYCURSOR;",
          "620: #line 544 \"ext/standard/var_unserializer.re\"",
          "621:  {",
          "623:  INIT_PZVAL(*rval);",
          "624:  ZVAL_NULL(*rval);",
          "625:  return 1;",
          "626: }",
          "627: #line 628 \"ext/standard/var_unserializer.c\"",
          "628: yy21:",
          "630:  if (yych <= ',') {",
          "631:   if (yych == '+') goto yy33;",
          "632:   goto yy18;",
          "633:  } else {",
          "634:   if (yych <= '-') goto yy33;",
          "635:   if (yych <= '/') goto yy18;",
          "636:   if (yych <= '9') goto yy34;",
          "637:   goto yy18;",
          "639: yy22:",
          "640:  yych = *++YYCURSOR;",
          "641:  if (yych == '+') goto yy36;",
          "642:  if (yych <= '/') goto yy18;",
          "643:  if (yych <= '9') goto yy37;",
          "644:  goto yy18;",
          "645: yy23:",
          "646:  yych = *++YYCURSOR;",
          "647:  if (yych == '+') goto yy39;",
          "648:  if (yych <= '/') goto yy18;",
          "649:  if (yych <= '9') goto yy40;",
          "651: yy24:",
          "652:  yych = *++YYCURSOR;",
          "654:  if (yych <= '1') goto yy42;",
          "655:  goto yy18;",
          "656: yy25:",
          "658:  if (yych <= '/') {",
          "659:   if (yych <= ',') {",
          "660:    if (yych == '+') goto yy43;",
          "661:    goto yy18;",
          "662:   } else {",
          "663:    if (yych <= '-') goto yy44;",
          "664:    if (yych <= '.') goto yy45;",
          "665:    goto yy18;",
          "667:  } else {",
          "668:   if (yych <= 'I') {",
          "669:    if (yych <= '9') goto yy46;",
          "670:    if (yych <= 'H') goto yy18;",
          "671:    goto yy48;",
          "673:    if (yych == 'N') goto yy49;",
          "674:    goto yy18;",
          "677: yy26:",
          "678:  yych = *++YYCURSOR;",
          "679:  if (yych <= ',') {",
          "680:   if (yych == '+') goto yy50;",
          "681:   goto yy18;",
          "682:  } else {",
          "683:   if (yych <= '-') goto yy50;",
          "684:   if (yych <= '/') goto yy18;",
          "685:   if (yych <= '9') goto yy51;",
          "686:   goto yy18;",
          "688: yy27:",
          "689:  yych = *++YYCURSOR;",
          "690:  if (yych <= ',') {",
          "691:   if (yych == '+') goto yy53;",
          "692:   goto yy18;",
          "693:  } else {",
          "694:   if (yych <= '-') goto yy53;",
          "695:   if (yych <= '/') goto yy18;",
          "696:   if (yych <= '9') goto yy54;",
          "697:   goto yy18;",
          "699: yy28:",
          "702:   if (yych == '+') goto yy56;",
          "703:   goto yy18;",
          "705:   if (yych <= '-') goto yy56;",
          "707:   if (yych <= '9') goto yy57;",
          "710: yy29:",
          "712:  if (yych == '+') goto yy59;",
          "714:  if (yych <= '9') goto yy60;",
          "715:  goto yy18;",
          "716: yy30:",
          "717:  yych = *++YYCURSOR;",
          "718:  if (yybm[0+yych] & 128) {",
          "719:   goto yy31;",
          "720:  }",
          "721:  goto yy18;",
          "722: yy31:",
          "726:  if (yybm[0+yych] & 128) {",
          "727:   goto yy31;",
          "728:  }",
          "730:  if (yych <= ':') goto yy62;",
          "731:  goto yy18;",
          "732: yy33:",
          "734:  if (yych <= '/') goto yy18;",
          "735:  if (yych >= ':') goto yy18;",
          "736: yy34:",
          "738:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "739:  yych = *YYCURSOR;",
          "742:  if (yych == ';') goto yy63;",
          "744: yy36:",
          "748: yy37:",
          "753:  if (yych <= '9') goto yy37;",
          "754:  if (yych <= ':') goto yy65;",
          "755:  goto yy18;",
          "756: yy39:",
          "758:  if (yych <= '/') goto yy18;",
          "759:  if (yych >= ':') goto yy18;",
          "760: yy40:",
          "762:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "763:  yych = *YYCURSOR;",
          "764:  if (yych <= '/') goto yy18;",
          "765:  if (yych <= '9') goto yy40;",
          "766:  if (yych <= ':') goto yy66;",
          "767:  goto yy18;",
          "768: yy42:",
          "769:  yych = *++YYCURSOR;",
          "770:  if (yych == ';') goto yy67;",
          "771:  goto yy18;",
          "772: yy43:",
          "773:  yych = *++YYCURSOR;",
          "774:  if (yych == '.') goto yy45;",
          "775:  if (yych <= '/') goto yy18;",
          "776:  if (yych <= '9') goto yy46;",
          "777:  goto yy18;",
          "778: yy44:",
          "779:  yych = *++YYCURSOR;",
          "780:  if (yych <= '/') {",
          "781:   if (yych != '.') goto yy18;",
          "782:  } else {",
          "783:   if (yych <= '9') goto yy46;",
          "784:   if (yych == 'I') goto yy48;",
          "785:   goto yy18;",
          "787: yy45:",
          "788:  yych = *++YYCURSOR;",
          "789:  if (yych <= '/') goto yy18;",
          "790:  if (yych <= '9') goto yy69;",
          "791:  goto yy18;",
          "792: yy46:",
          "793:  ++YYCURSOR;",
          "794:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "795:  yych = *YYCURSOR;",
          "796:  if (yych <= ':') {",
          "797:   if (yych <= '.') {",
          "798:    if (yych <= '-') goto yy18;",
          "799:    goto yy69;",
          "800:   } else {",
          "801:    if (yych <= '/') goto yy18;",
          "802:    if (yych <= '9') goto yy46;",
          "803:    goto yy18;",
          "804:   }",
          "805:  } else {",
          "806:   if (yych <= 'E') {",
          "807:    if (yych <= ';') goto yy71;",
          "808:    if (yych <= 'D') goto yy18;",
          "809:    goto yy73;",
          "810:   } else {",
          "811:    if (yych == 'e') goto yy73;",
          "812:    goto yy18;",
          "813:   }",
          "815: yy48:",
          "816:  yych = *++YYCURSOR;",
          "817:  if (yych == 'N') goto yy74;",
          "818:  goto yy18;",
          "819: yy49:",
          "820:  yych = *++YYCURSOR;",
          "821:  if (yych == 'A') goto yy75;",
          "822:  goto yy18;",
          "823: yy50:",
          "826:  if (yych >= ':') goto yy18;",
          "827: yy51:",
          "828:  ++YYCURSOR;",
          "829:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "830:  yych = *YYCURSOR;",
          "831:  if (yych <= '/') goto yy18;",
          "832:  if (yych <= '9') goto yy51;",
          "833:  if (yych == ';') goto yy76;",
          "835: yy53:",
          "839: yy54:",
          "844:  if (yych <= '9') goto yy54;",
          "845:  if (yych <= ':') goto yy78;",
          "846:  goto yy18;",
          "847: yy56:",
          "849:  if (yych <= '/') goto yy18;",
          "850:  if (yych >= ':') goto yy18;",
          "851: yy57:",
          "853:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "854:  yych = *YYCURSOR;",
          "856:  if (yych <= '9') goto yy57;",
          "857:  if (yych == ';') goto yy79;",
          "859: yy59:",
          "863: yy60:",
          "868:  if (yych <= '9') goto yy60;",
          "869:  if (yych <= ':') goto yy81;",
          "870:  goto yy18;",
          "871: yy62:",
          "873:  if (yych == '\"') goto yy82;",
          "874:  goto yy18;",
          "875: yy63:",
          "877: #line 500 \"ext/standard/var_unserializer.re\"",
          "879:  long id;",
          "882:  if (!var_hash) return 0;",
          "884:  id = parse_iv(start + 2) - 1;",
          "885:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "889:  if (*rval != NULL) {",
          "890:   var_push_dtor_no_addref(var_hash, rval);",
          "893:  Z_ADDREF_PP(rval);",
          "894:  Z_SET_ISREF_PP(rval);",
          "898: #line 899 \"ext/standard/var_unserializer.c\"",
          "899: yy65:",
          "901:  if (yych == '\"') goto yy84;",
          "903: yy66:",
          "905:  if (yych == '{') goto yy86;",
          "907: yy67:",
          "909: #line 551 \"ext/standard/var_unserializer.re\"",
          "910:  {",
          "912:  INIT_PZVAL(*rval);",
          "913:  ZVAL_BOOL(*rval, parse_iv(start + 2));",
          "914:  return 1;",
          "915: }",
          "916: #line 917 \"ext/standard/var_unserializer.c\"",
          "917: yy69:",
          "923:   if (yych <= '9') goto yy69;",
          "928:    goto yy73;",
          "930:    if (yych == 'e') goto yy73;",
          "934: yy71:",
          "936: #line 600 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "542:  case 'O': goto yy13;",
          "544:  case 'R': goto yy2;",
          "545:  case 'S': goto yy10;",
          "546:  case 'a': goto yy11;",
          "547:  case 'b': goto yy6;",
          "548:  case 'd': goto yy8;",
          "549:  case 'i': goto yy7;",
          "551:  case 'r': goto yy4;",
          "552:  case 's': goto yy9;",
          "553:  case '}': goto yy14;",
          "554:  default: goto yy16;",
          "557:  yych = *(YYMARKER = ++YYCURSOR);",
          "558:  if (yych == ':') goto yy95;",
          "560: #line 877 \"ext/standard/var_unserializer.re\"",
          "562: #line 563 \"ext/standard/var_unserializer.c\"",
          "565:  if (yych == ':') goto yy89;",
          "569:  if (yych == ';') goto yy87;",
          "573:  if (yych == ':') goto yy83;",
          "577:  if (yych == ':') goto yy77;",
          "581:  if (yych == ':') goto yy53;",
          "585:  if (yych == ':') goto yy46;",
          "589:  if (yych == ':') goto yy39;",
          "593:  if (yych == ':') goto yy32;",
          "597:  if (yych == ':') goto yy25;",
          "601:  if (yych == ':') goto yy17;",
          "605: #line 871 \"ext/standard/var_unserializer.re\"",
          "611: #line 612 \"ext/standard/var_unserializer.c\"",
          "612: yy16:",
          "613:  yych = *++YYCURSOR;",
          "614:  goto yy3;",
          "618:   goto yy20;",
          "620:  if (yych == '+') goto yy19;",
          "626:  if (yybm[0+yych] & 128) {",
          "627:   goto yy20;",
          "630: yy20:",
          "631:  ++YYCURSOR;",
          "632:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "633:  yych = *YYCURSOR;",
          "634:  if (yybm[0+yych] & 128) {",
          "635:   goto yy20;",
          "636:  }",
          "638:  if (yych >= ';') goto yy18;",
          "640:  if (yych != '\"') goto yy18;",
          "641:  ++YYCURSOR;",
          "642: #line 717 \"ext/standard/var_unserializer.re\"",
          "643:  {",
          "644:  size_t len, len2, len3, maxlen;",
          "645:  long elements;",
          "646:  char *class_name;",
          "647:  zend_class_entry *ce;",
          "648:  zend_class_entry **pce;",
          "649:  int incomplete_class = 0;",
          "651:  int custom_object = 0;",
          "653:  zval *user_func;",
          "654:  zval *retval_ptr;",
          "655:  zval **args[1];",
          "656:  zval *arg_func_name;",
          "658:     if (!var_hash) return 0;",
          "659:  if (*start == 'C') {",
          "660:   custom_object = 1;",
          "661:  }",
          "663:  INIT_PZVAL(*rval);",
          "664:  len2 = len = parse_uiv(start + 2);",
          "665:  maxlen = max - YYCURSOR;",
          "666:  if (maxlen < len || len == 0) {",
          "668:   return 0;",
          "669:  }",
          "671:  class_name = (char*)YYCURSOR;",
          "673:  YYCURSOR += len;",
          "675:  if (*(YYCURSOR) != '\"') {",
          "677:   return 0;",
          "678:  }",
          "679:  if (*(YYCURSOR+1) != ':') {",
          "681:   return 0;",
          "682:  }",
          "684:  len3 = strspn(class_name, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "685:  if (len3 != len)",
          "686:  {",
          "688:   return 0;",
          "689:  }",
          "691:  class_name = estrndup(class_name, len);",
          "693:  do {",
          "695:   BG(serialize_lock)++;",
          "696:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "697:    BG(serialize_lock)--;",
          "698:    if (EG(exception)) {",
          "699:     efree(class_name);",
          "700:     return 0;",
          "701:    }",
          "702:    ce = *pce;",
          "703:    break;",
          "705:   BG(serialize_lock)--;",
          "707:   if (EG(exception)) {",
          "708:    efree(class_name);",
          "709:    return 0;",
          "710:   }",
          "713:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "714:    incomplete_class = 1;",
          "715:    ce = PHP_IC_ENTRY;",
          "716:    break;",
          "717:   }",
          "720:   MAKE_STD_ZVAL(user_func);",
          "721:   ZVAL_STRING(user_func, PG(unserialize_callback_func), 1);",
          "722:   args[0] = &arg_func_name;",
          "723:   MAKE_STD_ZVAL(arg_func_name);",
          "724:   ZVAL_STRING(arg_func_name, class_name, 1);",
          "725:   BG(serialize_lock)++;",
          "726:   if (call_user_function_ex(CG(function_table), NULL, user_func, &retval_ptr, 1, args, 0, NULL TSRMLS_CC) != SUCCESS) {",
          "727:    BG(serialize_lock)--;",
          "728:    if (EG(exception)) {",
          "729:     efree(class_name);",
          "730:     zval_ptr_dtor(&user_func);",
          "731:     zval_ptr_dtor(&arg_func_name);",
          "732:     return 0;",
          "733:    }",
          "734:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"defined (%s) but not found\", user_func->value.str.val);",
          "735:    incomplete_class = 1;",
          "736:    ce = PHP_IC_ENTRY;",
          "737:    zval_ptr_dtor(&user_func);",
          "738:    zval_ptr_dtor(&arg_func_name);",
          "739:    break;",
          "740:   }",
          "741:   BG(serialize_lock)--;",
          "742:   if (retval_ptr) {",
          "743:    zval_ptr_dtor(&retval_ptr);",
          "744:   }",
          "745:   if (EG(exception)) {",
          "746:    efree(class_name);",
          "747:    zval_ptr_dtor(&user_func);",
          "748:    zval_ptr_dtor(&arg_func_name);",
          "749:    return 0;",
          "750:   }",
          "753:   BG(serialize_lock)++;",
          "754:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "755:    ce = *pce;",
          "757:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Function %s() hasn't defined the class it was called for\", user_func->value.str.val);",
          "758:    incomplete_class = 1;",
          "759:    ce = PHP_IC_ENTRY;",
          "760:   }",
          "761:   BG(serialize_lock)--;",
          "763:   zval_ptr_dtor(&user_func);",
          "764:   zval_ptr_dtor(&arg_func_name);",
          "765:   break;",
          "766:  } while (1);",
          "770:  if (custom_object) {",
          "771:   int ret;",
          "773:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "775:   if (ret && incomplete_class) {",
          "776:    php_store_class_name(*rval, class_name, len2);",
          "778:   efree(class_name);",
          "779:   return ret;",
          "782:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "784:  if (elements < 0) {",
          "785:     efree(class_name);",
          "786:     return 0;",
          "789:  if (incomplete_class) {",
          "790:   php_store_class_name(*rval, class_name, len2);",
          "792:  efree(class_name);",
          "794:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "795: }",
          "796: #line 797 \"ext/standard/var_unserializer.c\"",
          "797: yy25:",
          "800:   if (yych != '+') goto yy18;",
          "802:   if (yych <= '-') goto yy26;",
          "804:   if (yych <= '9') goto yy27;",
          "807: yy26:",
          "810:  if (yych >= ':') goto yy18;",
          "811: yy27:",
          "816:  if (yych <= '9') goto yy27;",
          "817:  if (yych >= ';') goto yy18;",
          "819:  if (yych != '\"') goto yy18;",
          "821: #line 704 \"ext/standard/var_unserializer.re\"",
          "822:  {",
          "823:  long elements;",
          "824:     if (!var_hash) return 0;",
          "826:  INIT_PZVAL(*rval);",
          "828:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "829:  if (elements < 0) {",
          "830:   return 0;",
          "831:  }",
          "832:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "833: }",
          "834: #line 835 \"ext/standard/var_unserializer.c\"",
          "835: yy32:",
          "836:  yych = *++YYCURSOR;",
          "837:  if (yych == '+') goto yy33;",
          "841: yy33:",
          "845: yy34:",
          "850:  if (yych <= '9') goto yy34;",
          "851:  if (yych >= ';') goto yy18;",
          "853:  if (yych != '{') goto yy18;",
          "855: #line 683 \"ext/standard/var_unserializer.re\"",
          "856:  {",
          "857:  long elements = parse_iv(start + 2);",
          "860:     if (!var_hash) return 0;",
          "862:  if (elements < 0) {",
          "863:   return 0;",
          "866:  INIT_PZVAL(*rval);",
          "868:  array_init_size(*rval, elements);",
          "870:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_PP(rval), elements, 0)) {",
          "871:   return 0;",
          "874:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "875: }",
          "876: #line 877 \"ext/standard/var_unserializer.c\"",
          "877: yy39:",
          "879:  if (yych == '+') goto yy40;",
          "881:  if (yych <= '9') goto yy41;",
          "883: yy40:",
          "887: yy41:",
          "892:  if (yych <= '9') goto yy41;",
          "893:  if (yych >= ';') goto yy18;",
          "895:  if (yych != '\"') goto yy18;",
          "897: #line 648 \"ext/standard/var_unserializer.re\"",
          "898:  {",
          "899:  size_t len, maxlen;",
          "900:  char *str;",
          "902:  len = parse_uiv(start + 2);",
          "903:  maxlen = max - YYCURSOR;",
          "904:  if (maxlen < len) {",
          "906:   return 0;",
          "907:  }",
          "909:  if ((str = unserialize_str(&YYCURSOR, &len, maxlen)) == NULL) {",
          "910:   return 0;",
          "911:  }",
          "913:  if (*(YYCURSOR) != '\"') {",
          "914:   efree(str);",
          "916:   return 0;",
          "917:  }",
          "919:  if (*(YYCURSOR + 1) != ';') {",
          "920:   efree(str);",
          "922:   return 0;",
          "923:  }",
          "925:  YYCURSOR += 2;",
          "928:  INIT_PZVAL(*rval);",
          "929:  ZVAL_STRINGL(*rval, str, len, 0);",
          "930:  return 1;",
          "931: }",
          "932: #line 933 \"ext/standard/var_unserializer.c\"",
          "933: yy46:",
          "934:  yych = *++YYCURSOR;",
          "935:  if (yych == '+') goto yy47;",
          "937:  if (yych <= '9') goto yy48;",
          "939: yy47:",
          "943: yy48:",
          "948:  if (yych <= '9') goto yy48;",
          "949:  if (yych >= ';') goto yy18;",
          "951:  if (yych != '\"') goto yy18;",
          "953: #line 615 \"ext/standard/var_unserializer.re\"",
          "955:  size_t len, maxlen;",
          "956:  char *str;",
          "958:  len = parse_uiv(start + 2);",
          "959:  maxlen = max - YYCURSOR;",
          "960:  if (maxlen < len) {",
          "962:   return 0;",
          "963:  }",
          "965:  str = (char*)YYCURSOR;",
          "967:  YYCURSOR += len;",
          "969:  if (*(YYCURSOR) != '\"') {",
          "974:  if (*(YYCURSOR + 1) != ';') {",
          "976:   return 0;",
          "979:  YYCURSOR += 2;",
          "982:  INIT_PZVAL(*rval);",
          "983:  ZVAL_STRINGL(*rval, str, len, 1);",
          "986: #line 987 \"ext/standard/var_unserializer.c\"",
          "987: yy53:",
          "988:  yych = *++YYCURSOR;",
          "989:  if (yych <= '/') {",
          "990:   if (yych <= ',') {",
          "991:    if (yych == '+') goto yy57;",
          "992:    goto yy18;",
          "993:   } else {",
          "994:    if (yych <= '-') goto yy55;",
          "995:    if (yych <= '.') goto yy60;",
          "996:    goto yy18;",
          "997:   }",
          "998:  } else {",
          "999:   if (yych <= 'I') {",
          "1000:    if (yych <= '9') goto yy58;",
          "1001:    if (yych <= 'H') goto yy18;",
          "1002:    goto yy56;",
          "1003:   } else {",
          "1004:    if (yych != 'N') goto yy18;",
          "1005:   }",
          "1006:  }",
          "1008:  if (yych == 'A') goto yy76;",
          "1010: yy55:",
          "1011:  yych = *++YYCURSOR;",
          "1012:  if (yych <= '/') {",
          "1013:   if (yych == '.') goto yy60;",
          "1014:   goto yy18;",
          "1015:  } else {",
          "1016:   if (yych <= '9') goto yy58;",
          "1017:   if (yych != 'I') goto yy18;",
          "1018:  }",
          "1019: yy56:",
          "1021:  if (yych == 'N') goto yy72;",
          "1023: yy57:",
          "1024:  yych = *++YYCURSOR;",
          "1025:  if (yych == '.') goto yy60;",
          "1026:  if (yych <= '/') goto yy18;",
          "1027:  if (yych >= ':') goto yy18;",
          "1028: yy58:",
          "1030:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1031:  yych = *YYCURSOR;",
          "1032:  if (yych <= ':') {",
          "1033:   if (yych <= '.') {",
          "1034:    if (yych <= '-') goto yy18;",
          "1035:    goto yy70;",
          "1036:   } else {",
          "1037:    if (yych <= '/') goto yy18;",
          "1038:    if (yych <= '9') goto yy58;",
          "1039:    goto yy18;",
          "1040:   }",
          "1041:  } else {",
          "1042:   if (yych <= 'E') {",
          "1043:    if (yych <= ';') goto yy63;",
          "1044:    if (yych <= 'D') goto yy18;",
          "1045:    goto yy65;",
          "1046:   } else {",
          "1047:    if (yych == 'e') goto yy65;",
          "1048:    goto yy18;",
          "1049:   }",
          "1050:  }",
          "1051: yy60:",
          "1052:  yych = *++YYCURSOR;",
          "1053:  if (yych <= '/') goto yy18;",
          "1054:  if (yych >= ':') goto yy18;",
          "1055: yy61:",
          "1061:   if (yych <= '9') goto yy61;",
          "1066:    goto yy65;",
          "1068:    if (yych == 'e') goto yy65;",
          "1072: yy63:",
          "1074: #line 605 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "943:  ZVAL_DOUBLE(*rval, zend_strtod((const char *)start + 2, NULL));",
          "944:  return 1;",
          "945: }",
          "948:  yych = *++YYCURSOR;",
          "949:  if (yych <= ',') {",
          "952:  } else {",
          "954:   if (yych <= '/') goto yy18;",
          "956:   goto yy18;",
          "957:  }",
          "959:  yych = *++YYCURSOR;",
          "961:  goto yy18;",
          "963:  yych = *++YYCURSOR;",
          "965:  goto yy18;",
          "967:  ++YYCURSOR;",
          "985:   } else {",
          "987:   }",
          "988:  }",
          "991:  INIT_PZVAL(*rval);",
          "993:  return 1;",
          "994: }",
          "997:  yych = *++YYCURSOR;",
          "999:  goto yy18;",
          "1018:  }",
          "1027:  yych = *++YYCURSOR;",
          "1031:  ++YYCURSOR;",
          "1033:  {",
          "1079:  }",
          "1123:    }",
          "1146:   } else {",
          "1167:   }",
          "1170:  }",
          "1180: }",
          "1183:  ++YYCURSOR;",
          "1185:  {",
          "1215:  INIT_PZVAL(*rval);",
          "1217:  return 1;",
          "1218: }",
          "1221:  ++YYCURSOR;",
          "1223:  {",
          "1233:  INIT_PZVAL(*rval);",
          "1242: }",
          "1245:  yych = *++YYCURSOR;",
          "1246:  if (yych <= ',') {",
          "1249:  } else {",
          "1251:   if (yych <= '/') goto yy18;",
          "1253:  }",
          "1255:  ++YYCURSOR;",
          "1256:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1257:  yych = *YYCURSOR;",
          "1258:  if (yych <= '/') goto yy18;",
          "1267:  ++YYCURSOR;",
          "1269:  {",
          "1289:   return 0;",
          "1290:  }",
          "1304:  }",
          "1311:  return 1;",
          "1312: }",
          "1314: yy96:",
          "1315:  yych = *++YYCURSOR;",
          "1316:  if (yych <= '/') goto yy18;",
          "1319: yy97:",
          "1320:  ++YYCURSOR;",
          "1322:  {",
          "1332:  }",
          "1334:  return 1;",
          "1335: }",
          "1337: }",
          "1341:  return 0;",
          "",
          "[Removed Lines]",
          "946: #line 947 \"ext/standard/var_unserializer.c\"",
          "947: yy73:",
          "950:   if (yych == '+') goto yy88;",
          "951:   goto yy18;",
          "953:   if (yych <= '-') goto yy88;",
          "955:   if (yych <= '9') goto yy89;",
          "958: yy74:",
          "960:  if (yych == 'F') goto yy91;",
          "962: yy75:",
          "964:  if (yych == 'N') goto yy91;",
          "966: yy76:",
          "968: #line 558 \"ext/standard/var_unserializer.re\"",
          "969:  {",
          "970: #if SIZEOF_LONG == 4",
          "971:  int digits = YYCURSOR - start - 3;",
          "973:  if (start[2] == '-' || start[2] == '+') {",
          "974:   digits--;",
          "975:  }",
          "978:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "979:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "980:    int cmp = strncmp(YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "982:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "983:     goto use_double;",
          "984:    }",
          "986:    goto use_double;",
          "989: #endif",
          "992:  ZVAL_LONG(*rval, parse_iv(start + 2));",
          "995: #line 996 \"ext/standard/var_unserializer.c\"",
          "996: yy78:",
          "998:  if (yych == '\"') goto yy92;",
          "1000: yy79:",
          "1001:  ++YYCURSOR;",
          "1002: #line 521 \"ext/standard/var_unserializer.re\"",
          "1003:  {",
          "1004:  long id;",
          "1007:  if (!var_hash) return 0;",
          "1009:  id = parse_iv(start + 2) - 1;",
          "1010:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "1011:   return 0;",
          "1012:  }",
          "1014:  if (*rval == *rval_ref) return 0;",
          "1016:  if (*rval != NULL) {",
          "1017:   var_push_dtor_no_addref(var_hash, rval);",
          "1020:  Z_ADDREF_PP(rval);",
          "1021:  Z_UNSET_ISREF_PP(rval);",
          "1023:  return 1;",
          "1024: }",
          "1025: #line 1026 \"ext/standard/var_unserializer.c\"",
          "1026: yy81:",
          "1028:  if (yych == '\"') goto yy94;",
          "1029:  goto yy18;",
          "1030: yy82:",
          "1032: #line 708 \"ext/standard/var_unserializer.re\"",
          "1034:  size_t len, len2, len3, maxlen;",
          "1035:  long elements;",
          "1036:  char *class_name;",
          "1037:  zend_class_entry *ce;",
          "1038:  zend_class_entry **pce;",
          "1039:  int incomplete_class = 0;",
          "1041:  int custom_object = 0;",
          "1043:  zval *user_func;",
          "1044:  zval *retval_ptr;",
          "1045:  zval **args[1];",
          "1046:  zval *arg_func_name;",
          "1048:     if (!var_hash) return 0;",
          "1049:  if (*start == 'C') {",
          "1050:   custom_object = 1;",
          "1051:  }",
          "1053:  INIT_PZVAL(*rval);",
          "1054:  len2 = len = parse_uiv(start + 2);",
          "1055:  maxlen = max - YYCURSOR;",
          "1056:  if (maxlen < len || len == 0) {",
          "1058:   return 0;",
          "1059:  }",
          "1061:  class_name = (char*)YYCURSOR;",
          "1063:  YYCURSOR += len;",
          "1065:  if (*(YYCURSOR) != '\"') {",
          "1067:   return 0;",
          "1068:  }",
          "1069:  if (*(YYCURSOR+1) != ':') {",
          "1071:   return 0;",
          "1072:  }",
          "1074:  len3 = strspn(class_name, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1075:  if (len3 != len)",
          "1076:  {",
          "1078:   return 0;",
          "1081:  class_name = estrndup(class_name, len);",
          "1083:  do {",
          "1085:   BG(serialize_lock)++;",
          "1086:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "1087:    BG(serialize_lock)--;",
          "1088:    if (EG(exception)) {",
          "1089:     efree(class_name);",
          "1090:     return 0;",
          "1091:    }",
          "1092:    ce = *pce;",
          "1093:    break;",
          "1094:   }",
          "1095:   BG(serialize_lock)--;",
          "1097:   if (EG(exception)) {",
          "1098:    efree(class_name);",
          "1099:    return 0;",
          "1100:   }",
          "1103:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1104:    incomplete_class = 1;",
          "1105:    ce = PHP_IC_ENTRY;",
          "1106:    break;",
          "1107:   }",
          "1110:   MAKE_STD_ZVAL(user_func);",
          "1111:   ZVAL_STRING(user_func, PG(unserialize_callback_func), 1);",
          "1112:   args[0] = &arg_func_name;",
          "1113:   MAKE_STD_ZVAL(arg_func_name);",
          "1114:   ZVAL_STRING(arg_func_name, class_name, 1);",
          "1115:   BG(serialize_lock)++;",
          "1116:   if (call_user_function_ex(CG(function_table), NULL, user_func, &retval_ptr, 1, args, 0, NULL TSRMLS_CC) != SUCCESS) {",
          "1117:    BG(serialize_lock)--;",
          "1118:    if (EG(exception)) {",
          "1119:     efree(class_name);",
          "1120:     zval_ptr_dtor(&user_func);",
          "1121:     zval_ptr_dtor(&arg_func_name);",
          "1122:     return 0;",
          "1124:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"defined (%s) but not found\", user_func->value.str.val);",
          "1125:    incomplete_class = 1;",
          "1126:    ce = PHP_IC_ENTRY;",
          "1127:    zval_ptr_dtor(&user_func);",
          "1128:    zval_ptr_dtor(&arg_func_name);",
          "1129:    break;",
          "1130:   }",
          "1131:   BG(serialize_lock)--;",
          "1132:   if (retval_ptr) {",
          "1133:    zval_ptr_dtor(&retval_ptr);",
          "1134:   }",
          "1135:   if (EG(exception)) {",
          "1136:    efree(class_name);",
          "1137:    zval_ptr_dtor(&user_func);",
          "1138:    zval_ptr_dtor(&arg_func_name);",
          "1139:    return 0;",
          "1140:   }",
          "1143:   BG(serialize_lock)++;",
          "1144:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "1145:    ce = *pce;",
          "1147:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Function %s() hasn't defined the class it was called for\", user_func->value.str.val);",
          "1148:    incomplete_class = 1;",
          "1149:    ce = PHP_IC_ENTRY;",
          "1150:   }",
          "1151:   BG(serialize_lock)--;",
          "1153:   zval_ptr_dtor(&user_func);",
          "1154:   zval_ptr_dtor(&arg_func_name);",
          "1155:   break;",
          "1156:  } while (1);",
          "1160:  if (custom_object) {",
          "1161:   int ret;",
          "1163:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1165:   if (ret && incomplete_class) {",
          "1166:    php_store_class_name(*rval, class_name, len2);",
          "1168:   efree(class_name);",
          "1169:   return ret;",
          "1172:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1174:  if (incomplete_class) {",
          "1175:   php_store_class_name(*rval, class_name, len2);",
          "1176:  }",
          "1177:  efree(class_name);",
          "1179:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1181: #line 1182 \"ext/standard/var_unserializer.c\"",
          "1182: yy84:",
          "1184: #line 643 \"ext/standard/var_unserializer.re\"",
          "1186:  size_t len, maxlen;",
          "1187:  char *str;",
          "1189:  len = parse_uiv(start + 2);",
          "1190:  maxlen = max - YYCURSOR;",
          "1191:  if (maxlen < len) {",
          "1193:   return 0;",
          "1194:  }",
          "1196:  if ((str = unserialize_str(&YYCURSOR, &len, maxlen)) == NULL) {",
          "1197:   return 0;",
          "1198:  }",
          "1200:  if (*(YYCURSOR) != '\"') {",
          "1201:   efree(str);",
          "1203:   return 0;",
          "1204:  }",
          "1206:  if (*(YYCURSOR + 1) != ';') {",
          "1207:   efree(str);",
          "1209:   return 0;",
          "1210:  }",
          "1212:  YYCURSOR += 2;",
          "1216:  ZVAL_STRINGL(*rval, str, len, 0);",
          "1219: #line 1220 \"ext/standard/var_unserializer.c\"",
          "1220: yy86:",
          "1222: #line 678 \"ext/standard/var_unserializer.re\"",
          "1224:  long elements = parse_iv(start + 2);",
          "1227:     if (!var_hash) return 0;",
          "1229:  if (elements < 0) {",
          "1230:   return 0;",
          "1231:  }",
          "1235:  array_init_size(*rval, elements);",
          "1237:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_PP(rval), elements, 0)) {",
          "1238:   return 0;",
          "1239:  }",
          "1241:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1243: #line 1244 \"ext/standard/var_unserializer.c\"",
          "1244: yy88:",
          "1247:   if (yych == '+') goto yy96;",
          "1248:   goto yy18;",
          "1250:   if (yych <= '-') goto yy96;",
          "1252:   if (yych >= ':') goto yy18;",
          "1254: yy89:",
          "1259:  if (yych <= '9') goto yy89;",
          "1260:  if (yych == ';') goto yy71;",
          "1261:  goto yy18;",
          "1262: yy91:",
          "1263:  yych = *++YYCURSOR;",
          "1264:  if (yych == ';') goto yy97;",
          "1265:  goto yy18;",
          "1266: yy92:",
          "1268: #line 699 \"ext/standard/var_unserializer.re\"",
          "1270:     if (!var_hash) return 0;",
          "1272:  INIT_PZVAL(*rval);",
          "1274:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "1275:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "1276: }",
          "1277: #line 1278 \"ext/standard/var_unserializer.c\"",
          "1278: yy94:",
          "1279:  ++YYCURSOR;",
          "1280: #line 610 \"ext/standard/var_unserializer.re\"",
          "1281:  {",
          "1282:  size_t len, maxlen;",
          "1283:  char *str;",
          "1285:  len = parse_uiv(start + 2);",
          "1286:  maxlen = max - YYCURSOR;",
          "1287:  if (maxlen < len) {",
          "1292:  str = (char*)YYCURSOR;",
          "1294:  YYCURSOR += len;",
          "1296:  if (*(YYCURSOR) != '\"') {",
          "1298:   return 0;",
          "1299:  }",
          "1301:  if (*(YYCURSOR + 1) != ';') {",
          "1303:   return 0;",
          "1306:  YYCURSOR += 2;",
          "1309:  INIT_PZVAL(*rval);",
          "1310:  ZVAL_STRINGL(*rval, str, len, 1);",
          "1313: #line 1314 \"ext/standard/var_unserializer.c\"",
          "1317:  if (yych <= '9') goto yy89;",
          "1318:  goto yy18;",
          "1321: #line 585 \"ext/standard/var_unserializer.re\"",
          "1324:  INIT_PZVAL(*rval);",
          "1326:  if (!strncmp(start + 2, \"NAN\", 3)) {",
          "1327:   ZVAL_DOUBLE(*rval, php_get_nan());",
          "1328:  } else if (!strncmp(start + 2, \"INF\", 3)) {",
          "1329:   ZVAL_DOUBLE(*rval, php_get_inf());",
          "1330:  } else if (!strncmp(start + 2, \"-INF\", 4)) {",
          "1331:   ZVAL_DOUBLE(*rval, -php_get_inf());",
          "1336: #line 1337 \"ext/standard/var_unserializer.c\"",
          "1338: #line 865 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1084: #line 1085 \"ext/standard/var_unserializer.c\"",
          "1085: yy65:",
          "1088:   if (yych != '+') goto yy18;",
          "1090:   if (yych <= '-') goto yy66;",
          "1092:   if (yych <= '9') goto yy67;",
          "1095: yy66:",
          "1097:  if (yych <= ',') {",
          "1098:   if (yych == '+') goto yy69;",
          "1099:   goto yy18;",
          "1100:  } else {",
          "1101:   if (yych <= '-') goto yy69;",
          "1102:   if (yych <= '/') goto yy18;",
          "1103:   if (yych >= ':') goto yy18;",
          "1104:  }",
          "1105: yy67:",
          "1106:  ++YYCURSOR;",
          "1107:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1108:  yych = *YYCURSOR;",
          "1109:  if (yych <= '/') goto yy18;",
          "1110:  if (yych <= '9') goto yy67;",
          "1111:  if (yych == ';') goto yy63;",
          "1113: yy69:",
          "1115:  if (yych <= '/') goto yy18;",
          "1116:  if (yych <= '9') goto yy67;",
          "1118: yy70:",
          "1120:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1121:  yych = *YYCURSOR;",
          "1122:  if (yych <= ';') {",
          "1123:   if (yych <= '/') goto yy18;",
          "1124:   if (yych <= '9') goto yy70;",
          "1125:   if (yych <= ':') goto yy18;",
          "1126:   goto yy63;",
          "1127:  } else {",
          "1128:   if (yych <= 'E') {",
          "1129:    if (yych <= 'D') goto yy18;",
          "1130:    goto yy65;",
          "1132:    if (yych == 'e') goto yy65;",
          "1133:    goto yy18;",
          "1136: yy72:",
          "1137:  yych = *++YYCURSOR;",
          "1138:  if (yych != 'F') goto yy18;",
          "1139: yy73:",
          "1140:  yych = *++YYCURSOR;",
          "1141:  if (yych != ';') goto yy18;",
          "1142:  ++YYCURSOR;",
          "1143: #line 590 \"ext/standard/var_unserializer.re\"",
          "1144:  {",
          "1148:  if (!strncmp(start + 2, \"NAN\", 3)) {",
          "1149:   ZVAL_DOUBLE(*rval, php_get_nan());",
          "1150:  } else if (!strncmp(start + 2, \"INF\", 3)) {",
          "1151:   ZVAL_DOUBLE(*rval, php_get_inf());",
          "1152:  } else if (!strncmp(start + 2, \"-INF\", 4)) {",
          "1153:   ZVAL_DOUBLE(*rval, -php_get_inf());",
          "1154:  }",
          "1158: #line 1159 \"ext/standard/var_unserializer.c\"",
          "1159: yy76:",
          "1161:  if (yych == 'N') goto yy73;",
          "1163: yy77:",
          "1164:  yych = *++YYCURSOR;",
          "1165:  if (yych <= ',') {",
          "1166:   if (yych != '+') goto yy18;",
          "1167:  } else {",
          "1168:   if (yych <= '-') goto yy78;",
          "1169:   if (yych <= '/') goto yy18;",
          "1170:   if (yych <= '9') goto yy79;",
          "1171:   goto yy18;",
          "1173: yy78:",
          "1175:  if (yych <= '/') goto yy18;",
          "1176:  if (yych >= ':') goto yy18;",
          "1177: yy79:",
          "1179:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1180:  yych = *YYCURSOR;",
          "1181:  if (yych <= '/') goto yy18;",
          "1182:  if (yych <= '9') goto yy79;",
          "1183:  if (yych != ';') goto yy18;",
          "1184:  ++YYCURSOR;",
          "1185: #line 563 \"ext/standard/var_unserializer.re\"",
          "1187: #if SIZEOF_LONG == 4",
          "1188:  int digits = YYCURSOR - start - 3;",
          "1190:  if (start[2] == '-' || start[2] == '+') {",
          "1191:   digits--;",
          "1195:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1196:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1197:    int cmp = strncmp(YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1199:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1200:     goto use_double;",
          "1203:    goto use_double;",
          "1206: #endif",
          "1208:  INIT_PZVAL(*rval);",
          "1209:  ZVAL_LONG(*rval, parse_iv(start + 2));",
          "1210:  return 1;",
          "1212: #line 1213 \"ext/standard/var_unserializer.c\"",
          "1213: yy83:",
          "1214:  yych = *++YYCURSOR;",
          "1215:  if (yych <= '/') goto yy18;",
          "1216:  if (yych >= '2') goto yy18;",
          "1217:  yych = *++YYCURSOR;",
          "1218:  if (yych != ';') goto yy18;",
          "1220: #line 556 \"ext/standard/var_unserializer.re\"",
          "1224:  ZVAL_BOOL(*rval, parse_iv(start + 2));",
          "1227: #line 1228 \"ext/standard/var_unserializer.c\"",
          "1228: yy87:",
          "1230: #line 549 \"ext/standard/var_unserializer.re\"",
          "1234:  ZVAL_NULL(*rval);",
          "1235:  return 1;",
          "1237: #line 1238 \"ext/standard/var_unserializer.c\"",
          "1238: yy89:",
          "1241:   if (yych != '+') goto yy18;",
          "1243:   if (yych <= '-') goto yy90;",
          "1245:   if (yych <= '9') goto yy91;",
          "1246:   goto yy18;",
          "1248: yy90:",
          "1249:  yych = *++YYCURSOR;",
          "1250:  if (yych <= '/') goto yy18;",
          "1251:  if (yych >= ':') goto yy18;",
          "1252: yy91:",
          "1257:  if (yych <= '9') goto yy91;",
          "1258:  if (yych != ';') goto yy18;",
          "1260: #line 526 \"ext/standard/var_unserializer.re\"",
          "1262:  long id;",
          "1265:  if (!var_hash) return 0;",
          "1267:  id = parse_iv(start + 2) - 1;",
          "1268:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "1272:  if (*rval == *rval_ref) return 0;",
          "1274:  if (*rval != NULL) {",
          "1275:   var_push_dtor_no_addref(var_hash, rval);",
          "1278:  Z_ADDREF_PP(rval);",
          "1279:  Z_UNSET_ISREF_PP(rval);",
          "1283: #line 1284 \"ext/standard/var_unserializer.c\"",
          "1284: yy95:",
          "1285:  yych = *++YYCURSOR;",
          "1286:  if (yych <= ',') {",
          "1287:   if (yych != '+') goto yy18;",
          "1288:  } else {",
          "1289:   if (yych <= '-') goto yy96;",
          "1290:   if (yych <= '/') goto yy18;",
          "1291:   if (yych <= '9') goto yy97;",
          "1292:   goto yy18;",
          "1293:  }",
          "1297:  if (yych >= ':') goto yy18;",
          "1300:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1301:  yych = *YYCURSOR;",
          "1302:  if (yych <= '/') goto yy18;",
          "1303:  if (yych <= '9') goto yy97;",
          "1304:  if (yych != ';') goto yy18;",
          "1305:  ++YYCURSOR;",
          "1306: #line 505 \"ext/standard/var_unserializer.re\"",
          "1308:  long id;",
          "1311:  if (!var_hash) return 0;",
          "1313:  id = parse_iv(start + 2) - 1;",
          "1314:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "1315:   return 0;",
          "1316:  }",
          "1318:  if (*rval != NULL) {",
          "1319:   var_push_dtor_no_addref(var_hash, rval);",
          "1322:  Z_ADDREF_PP(rval);",
          "1323:  Z_SET_ISREF_PP(rval);",
          "1327: #line 1328 \"ext/standard/var_unserializer.c\"",
          "1329: #line 879 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "409: {",
          "410:  long elements;",
          "412:  elements = parse_iv2((*p) + 2, p);",
          "414:  (*p) += 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "412:  if( *p >= max - 2) {",
          "413:   zend_error(E_WARNING, \"Bad unserialize data\");",
          "414:   return -1;",
          "415:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "421:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);",
          "423:  }",
          "425:  return elements;",
          "",
          "[Removed Lines]",
          "422:   return 0;",
          "",
          "[Added Lines]",
          "427:   return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "697: }",
          "699: \"o:\" iv \":\" [\"] {",
          "700:     if (!var_hash) return 0;",
          "702:  INIT_PZVAL(*rval);",
          "706: }",
          "708: object \":\" uiv \":\" [\"] {",
          "",
          "[Removed Lines]",
          "704:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "705:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "",
          "[Added Lines]",
          "705:  long elements;",
          "710:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "711:  if (elements < 0) {",
          "712:   return 0;",
          "713:  }",
          "714:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "847:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "849:  if (incomplete_class) {",
          "850:   php_store_class_name(*rval, class_name, len2);",
          "851:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "858:  if (elements < 0) {",
          "859:     efree(class_name);",
          "860:     return 0;",
          "861:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "91fb1edbbffe106d02929fe554ecbd1e5e33f5d1",
      "candidate_info": {
        "commit_hash": "91fb1edbbffe106d02929fe554ecbd1e5e33f5d1",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/91fb1edbbffe106d02929fe554ecbd1e5e33f5d1",
        "files": [
          "NEWS",
          "ext/standard/tests/serialize/bug70963.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Fixed bug #70963 (Unserialize shows UNKNOW in result)\n\nThanks to ryat for reportinig",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug70963.phpt||ext/standard/tests/serialize/bug70963.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug70963.phpt||ext/standard/tests/serialize/bug70963.phpt": [
          "File: ext/standard/tests/serialize/bug70963.phpt -> ext/standard/tests/serialize/bug70963.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70963 (Unserialize shows UNKNOW in result)",
          "3: --FILE--",
          "4: <?php",
          "5: var_dump(unserialize('a:2:{i:0;O:9:\"exception\":1:{s:16:\"'.\"\\0\".'Exception'.\"\\0\".'trace\";s:4:\"test\";}i:1;R:3;}'));",
          "6: ?>",
          "7: --EXPECTF--",
          "8: array(2) {",
          "9:   [0]=>",
          "10:   object(Exception)#%d (5) {",
          "11:     [\"message\":protected]=>",
          "12:     string(0) \"\"",
          "13:     [\"string\":\"Exception\":private]=>",
          "14:     string(0) \"\"",
          "15:     [\"code\":protected]=>",
          "16:     int(0)",
          "17:     [\"file\":protected]=>",
          "18:     string(%d) \"%s\"",
          "19:     [\"line\":protected]=>",
          "20:     int(%d)",
          "21:   }",
          "22: }",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "565:  yych = *(YYMARKER = ++YYCURSOR);",
          "566:  if (yych == ':') goto yy95;",
          "567: yy3:",
          "569:  { return 0; }",
          "570: #line 571 \"ext/standard/var_unserializer.c\"",
          "571: yy4:",
          "",
          "[Removed Lines]",
          "568: #line 851 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "568: #line 857 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "610:  goto yy3;",
          "611: yy14:",
          "612:  ++YYCURSOR;",
          "614:  {",
          "616:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "",
          "[Removed Lines]",
          "613: #line 845 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "613: #line 851 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "646:  yych = *++YYCURSOR;",
          "647:  if (yych != '\"') goto yy18;",
          "648:  ++YYCURSOR;",
          "650:  {",
          "651:  size_t len, len2, len3, maxlen;",
          "652:  zend_long elements;",
          "",
          "[Removed Lines]",
          "649: #line 700 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "649: #line 706 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "816:  yych = *++YYCURSOR;",
          "817:  if (yych != '\"') goto yy18;",
          "818:  ++YYCURSOR;",
          "820:  {",
          "821:     if (!var_hash) return 0;",
          "",
          "[Removed Lines]",
          "819: #line 693 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "819: #line 699 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "844:  yych = *++YYCURSOR;",
          "845:  if (yych != '{') goto yy18;",
          "846:  ++YYCURSOR;",
          "848:  {",
          "849:  zend_long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "847: #line 669 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "847: #line 675 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "889:  yych = *++YYCURSOR;",
          "890:  if (yych != '\"') goto yy18;",
          "891:  ++YYCURSOR;",
          "893:  {",
          "894:  size_t len, maxlen;",
          "895:  zend_string *str;",
          "",
          "[Removed Lines]",
          "892: #line 641 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "892: #line 647 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "938:  yych = *++YYCURSOR;",
          "939:  if (yych != '\"') goto yy18;",
          "940:  ++YYCURSOR;",
          "942:  {",
          "943:  size_t len, maxlen;",
          "944:  char *str;",
          "",
          "[Removed Lines]",
          "941: #line 614 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "941: #line 620 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1053:  }",
          "1054: yy63:",
          "1055:  ++YYCURSOR;",
          "1057:  {",
          "1058: #if SIZEOF_ZEND_LONG == 4",
          "1059: use_double:",
          "",
          "[Removed Lines]",
          "1056: #line 605 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1056: #line 611 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1121:  yych = *++YYCURSOR;",
          "1122:  if (yych != ';') goto yy18;",
          "1123:  ++YYCURSOR;",
          "1125:  {",
          "",
          "[Removed Lines]",
          "1124: #line 589 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1124: #line 595 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1164:  if (yych <= '9') goto yy79;",
          "1165:  if (yych != ';') goto yy18;",
          "1166:  ++YYCURSOR;",
          "1168:  {",
          "1169: #if SIZEOF_ZEND_LONG == 4",
          "1170:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1167: #line 563 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1167: #line 569 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1198:  yych = *++YYCURSOR;",
          "1199:  if (yych != ';') goto yy18;",
          "1200:  ++YYCURSOR;",
          "1202:  {",
          "1204:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "",
          "[Removed Lines]",
          "1201: #line 557 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1201: #line 563 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1207: #line 1208 \"ext/standard/var_unserializer.c\"",
          "1208: yy87:",
          "1209:  ++YYCURSOR;",
          "1211:  {",
          "1213:  ZVAL_NULL(rval);",
          "",
          "[Removed Lines]",
          "1210: #line 551 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1210: #line 557 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1236:  if (yych <= '9') goto yy91;",
          "1237:  if (yych != ';') goto yy18;",
          "1238:  ++YYCURSOR;",
          "1240:  {",
          "1241:  zend_long id;",
          "",
          "[Removed Lines]",
          "1239: #line 535 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1239: #line 541 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1290:  zval_ptr_dtor(rval);",
          "1291:  if (Z_ISREF_P(rval_ref)) {",
          "1293:  } else {",
          "1296:  }",
          "1298:  return 1;",
          "1299: }",
          "1301: }",
          "1305:  return 0;",
          "",
          "[Removed Lines]",
          "1292:   ZVAL_COPY(rval, rval_ref);",
          "1294:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1295:   ZVAL_COPY(rval, rval_ref);",
          "1300: #line 1301 \"ext/standard/var_unserializer.c\"",
          "1302: #line 853 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1292:  if (!Z_ISUNDEF_P(Z_REFVAL_P(rval_ref))) {",
          "1293:  ZVAL_COPY(rval, rval_ref);",
          "1295:  ZVAL_UNDEF(rval);",
          "1296:  }",
          "1297:  } else if (Z_ISUNDEF_P(rval_ref)) {",
          "1298:  ZVAL_UNDEF(rval);",
          "1299:  } else {",
          "1300:  ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1301:  ZVAL_COPY(rval, rval_ref);",
          "1306: #line 1307 \"ext/standard/var_unserializer.c\"",
          "1308: #line 859 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "524:  zval_ptr_dtor(rval);",
          "525:  if (Z_ISREF_P(rval_ref)) {",
          "527:  } else {",
          "530:  }",
          "532:  return 1;",
          "",
          "[Removed Lines]",
          "526:   ZVAL_COPY(rval, rval_ref);",
          "528:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "529:   ZVAL_COPY(rval, rval_ref);",
          "",
          "[Added Lines]",
          "526:  if (!Z_ISUNDEF_P(Z_REFVAL_P(rval_ref))) {",
          "527:  ZVAL_COPY(rval, rval_ref);",
          "528:  } else {",
          "529:  ZVAL_UNDEF(rval);",
          "530:  }",
          "531:  } else if (Z_ISUNDEF_P(rval_ref)) {",
          "532:  ZVAL_UNDEF(rval);",
          "534:  ZVAL_NEW_REF(rval_ref, rval_ref);",
          "535:  ZVAL_COPY(rval, rval_ref);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5bb25776a00e1074d1230a311043b00f7cce9252",
      "candidate_info": {
        "commit_hash": "5bb25776a00e1074d1230a311043b00f7cce9252",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/5bb25776a00e1074d1230a311043b00f7cce9252",
        "files": [
          "Zend/zend.h",
          "Zend/zend_alloc.c",
          "Zend/zend_builtin_functions.c",
          "Zend/zend_compile.c",
          "Zend/zend_constants.c",
          "Zend/zend_constants.h",
          "Zend/zend_exceptions.c",
          "Zend/zend_execute.h",
          "Zend/zend_execute_API.c",
          "Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l",
          "Zend/zend_multiply.h",
          "Zend/zend_objects.c",
          "Zend/zend_strtod.c",
          "ext/standard/filters.c",
          "ext/standard/html.c",
          "ext/standard/http.c",
          "ext/standard/info.c",
          "ext/standard/proc_open.c",
          "ext/standard/streamsfuncs.c",
          "ext/standard/var.c",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "further fixes on core",
        "before_after_code_files": [
          "Zend/zend.h||Zend/zend.h",
          "Zend/zend_alloc.c||Zend/zend_alloc.c",
          "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c",
          "Zend/zend_compile.c||Zend/zend_compile.c",
          "Zend/zend_constants.c||Zend/zend_constants.c",
          "Zend/zend_constants.h||Zend/zend_constants.h",
          "Zend/zend_exceptions.c||Zend/zend_exceptions.c",
          "Zend/zend_execute.h||Zend/zend_execute.h",
          "Zend/zend_execute_API.c||Zend/zend_execute_API.c",
          "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c",
          "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l",
          "Zend/zend_multiply.h||Zend/zend_multiply.h",
          "Zend/zend_objects.c||Zend/zend_objects.c",
          "Zend/zend_strtod.c||Zend/zend_strtod.c",
          "ext/standard/filters.c||ext/standard/filters.c",
          "ext/standard/html.c||ext/standard/html.c",
          "ext/standard/http.c||ext/standard/http.c",
          "ext/standard/info.c||ext/standard/info.c",
          "ext/standard/proc_open.c||ext/standard/proc_open.c",
          "ext/standard/streamsfuncs.c||ext/standard/streamsfuncs.c",
          "ext/standard/var.c||ext/standard/var.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend.h||Zend/zend.h": [
          "File: Zend/zend.h -> Zend/zend.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "390: # define XtOffset(p_type, field) \\",
          "",
          "[Removed Lines]",
          "391:     ((long) (((char *) (&(((p_type)NULL)->field))) - ((char *) NULL)))",
          "",
          "[Added Lines]",
          "391:     ((zend_int_t) (((char *) (&(((p_type)NULL)->field))) - ((char *) NULL)))",
          "",
          "---------------"
        ],
        "Zend/zend_alloc.c||Zend/zend_alloc.c": [
          "File: Zend/zend_alloc.c -> Zend/zend_alloc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1373: #ifdef ZTS",
          "1374:  if (ZEND_MM_BAD_THREAD_ID(p)) {",
          "1375:   if (!silent) {",
          "1377:    had_problems = 1;",
          "1378:   } else {",
          "1379:    return zend_mm_check_ptr(heap, ptr, 0 ZEND_FILE_LINE_RELAY_CC ZEND_FILE_LINE_ORIG_RELAY_CC);",
          "",
          "[Removed Lines]",
          "1376:    zend_debug_alloc_output(\"Invalid pointer: ((thread_id=0x%0.8X) != (expected=0x%0.8X))\\n\", (long)p->thread_id, (long)tsrm_thread_id());",
          "",
          "[Added Lines]",
          "1376:    zend_debug_alloc_output(\"Invalid pointer: ((thread_id=0x%0.8X) != (expected=0x%0.8X))\\n\", (zend_int_t)p->thread_id, (zend_int_t)tsrm_thread_id());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2474: static inline size_t safe_address(size_t nmemb, size_t size, size_t offset)",
          "2475: {",
          "2476:  size_t res = nmemb;",
          "2479:  __asm__ (\"mull %3\\n\\taddl %4,%0\\n\\tadcl $0,%1\"",
          "2480:       : \"=&a\"(res), \"=&d\" (overflow)",
          "",
          "[Removed Lines]",
          "2477:  unsigned long overflow = 0;",
          "",
          "[Added Lines]",
          "2477:  zend_uint_t overflow = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2494: static inline size_t safe_address(size_t nmemb, size_t size, size_t offset)",
          "2495: {",
          "2496:         size_t res = nmemb;",
          "2500: # define LP_SUFF \"l\"",
          "",
          "[Removed Lines]",
          "2497:         unsigned long overflow = 0;",
          "",
          "[Added Lines]",
          "2497:         zend_uint_t overflow = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2523: static inline size_t safe_address(size_t nmemb, size_t size, size_t offset)",
          "2524: {",
          "2525:         size_t res;",
          "2528:         __asm__ (\"umlal %0,%1,%2,%3\"",
          "2529:              : \"=r\"(res), \"=r\"(overflow)",
          "",
          "[Removed Lines]",
          "2526:         unsigned long overflow;",
          "",
          "[Added Lines]",
          "2526:         zend_uint_t overflow;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2544: static inline size_t safe_address(size_t nmemb, size_t size, size_t offset)",
          "2545: {",
          "2546:         size_t res;",
          "2549:         __asm__ (\"mul %0,%2,%3\\n\\tumulh %1,%2,%3\\n\\tadds %0,%0,%4\\n\\tadc %1,%1,xzr\"",
          "2550:              : \"=&r\"(res), \"=&r\"(overflow)",
          "",
          "[Removed Lines]",
          "2547:         unsigned long overflow;",
          "",
          "[Added Lines]",
          "2547:         zend_uint_t overflow;",
          "",
          "---------------"
        ],
        "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c": [
          "File: Zend/zend_builtin_functions.c -> Zend/zend_builtin_functions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "411: {",
          "412:  int arg_count, first_extra_arg;",
          "413:  zval *arg;",
          "415:  zend_execute_data *ex;",
          "418:   return;",
          "419:  }",
          "",
          "[Removed Lines]",
          "414:  long requested_offset;",
          "417:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"l\", &requested_offset) == FAILURE) {",
          "",
          "[Added Lines]",
          "414:  zend_int_t requested_offset;",
          "417:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"i\", &requested_offset) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1907: #ifdef ZTS",
          "1908: ZEND_FUNCTION(zend_thread_id)",
          "1909: {",
          "1911: }",
          "1912: #endif",
          "1913: #endif",
          "",
          "[Removed Lines]",
          "1910:  RETURN_INT((long)tsrm_thread_id());",
          "",
          "[Added Lines]",
          "1910:  RETURN_INT((zend_int_t)tsrm_thread_id());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2111:  const char *include_filename = NULL;",
          "2112:  zval arg_array;",
          "2113:  int indent = 0;",
          "2118:   return;",
          "2119:  }",
          "",
          "[Removed Lines]",
          "2114:  long options = 0;",
          "2115:  long limit = 0;",
          "2117:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"|ll\", &options, &limit) == FAILURE) {",
          "",
          "[Added Lines]",
          "2114:  zend_int_t options = 0;",
          "2115:  zend_int_t limit = 0;",
          "2117:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"|ii\", &options, &limit) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2500: ZEND_FUNCTION(debug_backtrace)",
          "2501: {",
          "2506:   return;",
          "2507:  }",
          "",
          "[Removed Lines]",
          "2502:  long options = DEBUG_BACKTRACE_PROVIDE_OBJECT;",
          "2503:  long limit = 0;",
          "2505:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"|ll\", &options, &limit) == FAILURE) {",
          "",
          "[Added Lines]",
          "2502:  zend_int_t options = DEBUG_BACKTRACE_PROVIDE_OBJECT;",
          "2503:  zend_int_t limit = 0;",
          "2505:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"|ii\", &options, &limit) == FAILURE) {",
          "",
          "---------------"
        ],
        "Zend/zend_compile.c||Zend/zend_compile.c": [
          "File: Zend/zend_compile.c -> Zend/zend_compile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6312:  if (constant_array) {",
          "6314:   zend_uint size;",
          "6316:   zend_string *str;",
          "6318:   if (init_opline->op1_type != IS_UNUSED) {",
          "",
          "[Removed Lines]",
          "6315:   long num;",
          "",
          "[Added Lines]",
          "6315:   zend_int_t num;",
          "",
          "---------------"
        ],
        "Zend/zend_constants.c||Zend/zend_constants.c": [
          "File: Zend/zend_constants.c -> Zend/zend_constants.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "323:  return c ? &c->value : NULL;",
          "324: }",
          "327: {",
          "328:  zend_constant *c;",
          "329:  const char *colon;",
          "",
          "[Removed Lines]",
          "326: ZEND_API zval *zend_get_constant_ex(zend_string *cname, zend_class_entry *scope, ulong flags TSRMLS_DC)",
          "",
          "[Added Lines]",
          "326: ZEND_API zval *zend_get_constant_ex(zend_string *cname, zend_class_entry *scope, zend_uint_t flags TSRMLS_DC)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "449:  }",
          "450: }",
          "453: {",
          "454:  zend_constant *c;",
          "",
          "[Removed Lines]",
          "452: zend_constant *zend_quick_get_constant(const zval *key, ulong flags TSRMLS_DC)",
          "",
          "[Added Lines]",
          "452: zend_constant *zend_quick_get_constant(const zval *key, zend_uint_t flags TSRMLS_DC)",
          "",
          "---------------"
        ],
        "Zend/zend_constants.h||Zend/zend_constants.h": [
          "File: Zend/zend_constants.h -> Zend/zend_constants.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: void clean_non_persistent_constants(TSRMLS_D);",
          "68: ZEND_API zval *zend_get_constant(zend_string *name TSRMLS_DC);",
          "69: ZEND_API zval *zend_get_constant_str(const char *name, uint name_len TSRMLS_DC);",
          "71: ZEND_API void zend_register_bool_constant(const char *name, uint name_len, zend_bool bval, int flags, int module_number TSRMLS_DC);",
          "72: ZEND_API void zend_register_null_constant(const char *name, uint name_len, int flags, int module_number TSRMLS_DC);",
          "73: ZEND_API void zend_register_int_constant(const char *name, uint name_len, zend_int_t lval, int flags, int module_number TSRMLS_DC);",
          "",
          "[Removed Lines]",
          "70: ZEND_API zval *zend_get_constant_ex(zend_string *name, zend_class_entry *scope, ulong flags TSRMLS_DC);",
          "",
          "[Added Lines]",
          "70: ZEND_API zval *zend_get_constant_ex(zend_string *name, zend_class_entry *scope, zend_uint_t flags TSRMLS_DC);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76: ZEND_API void zend_register_stringl_constant(const char *name, uint name_len, char *strval, uint strlen, int flags, int module_number TSRMLS_DC);",
          "77: ZEND_API int zend_register_constant(zend_constant *c TSRMLS_DC);",
          "78: void zend_copy_constants(HashTable *target, HashTable *sourc);",
          "80: END_EXTERN_C()",
          "82: #define ZEND_CONSTANT_DTOR free_zend_constant",
          "",
          "[Removed Lines]",
          "79: zend_constant *zend_quick_get_constant(const zval *key, ulong flags TSRMLS_DC);",
          "",
          "[Added Lines]",
          "79: zend_constant *zend_quick_get_constant(const zval *key, zend_uint_t flags TSRMLS_DC);",
          "",
          "---------------"
        ],
        "Zend/zend_exceptions.c||Zend/zend_exceptions.c": [
          "File: Zend/zend_exceptions.c -> Zend/zend_exceptions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "459:    TRACE_APPEND_STR(\"true, \");",
          "460:    break;",
          "461:   case IS_RESOURCE: {",
          "463:    char s_tmp[MAX_LENGTH_OF_ZEND_INT + 1];",
          "465:    TRACE_APPEND_STR(\"Resource id #\");",
          "",
          "[Removed Lines]",
          "462:    long lval = Z_RES_HANDLE_P(arg);",
          "",
          "[Added Lines]",
          "462:    zend_int_t lval = Z_RES_HANDLE_P(arg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "468:    break;",
          "469:   }",
          "470:   case IS_INT: {",
          "472:    char s_tmp[MAX_LENGTH_OF_ZEND_INT + 1];",
          "474:    TRACE_APPEND_STRL(s_tmp, l_tmp);",
          "",
          "[Removed Lines]",
          "471:    long lval = Z_IVAL_P(arg);",
          "",
          "[Added Lines]",
          "471:    zend_int_t lval = Z_IVAL_P(arg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "584: ZEND_METHOD(exception, getTraceAsString)",
          "585: {",
          "586:  zval *trace, *frame;",
          "588:  zend_string *str, *key;",
          "589:  int num = 0, len;",
          "590:  char s_tmp[MAX_LENGTH_OF_ZEND_INT + 7 + 1 + 1];",
          "",
          "[Removed Lines]",
          "587:  ulong index;",
          "",
          "[Added Lines]",
          "587:  zend_uint_t index;",
          "",
          "---------------"
        ],
        "Zend/zend_execute.h||Zend/zend_execute.h": [
          "File: Zend/zend_execute.h -> Zend/zend_execute.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: ZEND_API int zend_eval_string_ex(char *str, zval *retval_ptr, char *string_name, int handle_exceptions TSRMLS_DC);",
          "49: ZEND_API int zend_eval_stringl_ex(char *str, int str_len, zval *retval_ptr, char *string_name, int handle_exceptions TSRMLS_DC);",
          "52: ZEND_API void zend_verify_arg_error(int error_type, const zend_function *zf, zend_uint arg_num, const char *need_msg, const char *need_kind, const char *given_msg, const char *given_kind, zval *arg TSRMLS_DC);",
          "54: static zend_always_inline void i_zval_ptr_dtor(zval *zval_ptr ZEND_FILE_LINE_DC TSRMLS_DC)",
          "",
          "[Removed Lines]",
          "51: ZEND_API char * zend_verify_arg_class_kind(const zend_arg_info *cur_arg_info, ulong fetch_type, char **class_name, zend_class_entry **pce TSRMLS_DC);",
          "",
          "[Added Lines]",
          "51: ZEND_API char * zend_verify_arg_class_kind(const zend_arg_info *cur_arg_info, zend_uint_t fetch_type, char **class_name, zend_class_entry **pce TSRMLS_DC);",
          "",
          "---------------"
        ],
        "Zend/zend_execute_API.c||Zend/zend_execute_API.c": [
          "File: Zend/zend_execute_API.c -> Zend/zend_execute_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1681:  if (execute_data) {",
          "1682:   if (!execute_data->symbol_table) {",
          "1684:    zend_op_array *op_array = &execute_data->func->op_array;",
          "1685:    int i;",
          "",
          "[Removed Lines]",
          "1683:    zend_ulong h = STR_HASH_VAL(name);",
          "",
          "[Added Lines]",
          "1683:    zend_uint_t h = STR_HASH_VAL(name);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1717:  if (execute_data) {",
          "1718:   if (!execute_data->symbol_table) {",
          "1720:    zend_op_array *op_array = &execute_data->func->op_array;",
          "1721:    int i;",
          "",
          "[Removed Lines]",
          "1719:    zend_ulong h = zend_hash_func(name, len);",
          "",
          "[Added Lines]",
          "1719:    zend_uint_t h = zend_hash_func(name, len);",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner.c||Zend/zend_language_scanner.c": [
          "File: Zend/zend_language_scanner.c -> Zend/zend_language_scanner.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1645:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1646: #line 2153 \"Zend/zend_language_scanner.l\"",
          "1647:   {",
          "1649:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1650:  yyless(1);",
          "1651:  return T_CURLY_OPEN;",
          "",
          "[Removed Lines]",
          "1648:  Z_IVAL_P(zendlval) = (long) '{';",
          "",
          "[Added Lines]",
          "1648:  Z_IVAL_P(zendlval) = (zend_int_t) '{';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1873:   yyleng = YYCURSOR - SCNG(yy_text);",
          "1874: #line 2153 \"Zend/zend_language_scanner.l\"",
          "1875:   {",
          "1877:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "1878:  yyless(1);",
          "1879:  return T_CURLY_OPEN;",
          "",
          "[Removed Lines]",
          "1876:  Z_IVAL_P(zendlval) = (long) '{';",
          "",
          "[Added Lines]",
          "1876:  Z_IVAL_P(zendlval) = (zend_int_t) '{';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2132:   yyleng = YYCURSOR - SCNG(yy_text);",
          "2133: #line 2153 \"Zend/zend_language_scanner.l\"",
          "2134:   {",
          "2136:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2137:  yyless(1);",
          "2138:  return T_CURLY_OPEN;",
          "",
          "[Removed Lines]",
          "2135:  Z_IVAL_P(zendlval) = (long) '{';",
          "",
          "[Added Lines]",
          "2135:  Z_IVAL_P(zendlval) = (zend_int_t) '{';",
          "",
          "---------------"
        ],
        "Zend/zend_language_scanner.l||Zend/zend_language_scanner.l": [
          "File: Zend/zend_language_scanner.l -> Zend/zend_language_scanner.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "2153: <ST_DOUBLE_QUOTES,ST_BACKQUOTE,ST_HEREDOC>\"{$\" {",
          "2155:  yy_push_state(ST_IN_SCRIPTING TSRMLS_CC);",
          "2156:  yyless(1);",
          "2157:  return T_CURLY_OPEN;",
          "",
          "[Removed Lines]",
          "2154:  Z_IVAL_P(zendlval) = (long) '{';",
          "",
          "[Added Lines]",
          "2154:  Z_IVAL_P(zendlval) = (zend_int_t) '{';",
          "",
          "---------------"
        ],
        "Zend/zend_multiply.h||Zend/zend_multiply.h": [
          "File: Zend/zend_multiply.h -> Zend/zend_multiply.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:  }                \\",
          "82: } while (0)",
          "86: #define ZEND_SIGNED_MULTIPLY_INT(a, b, lval, dval, usedval) do { \\",
          "87:  zend_long64 __result = (zend_long64) (a) * (zend_long64) (b); \\",
          "",
          "[Removed Lines]",
          "84: #elif SIZEOF_LONG == 4 && defined(HAVE_ZEND_LONG64)",
          "",
          "[Added Lines]",
          "84: #elif SIZEOF_ZEND_INT == 4 && defined(HAVE_ZEND_LONG64)",
          "",
          "---------------"
        ],
        "Zend/zend_objects.c||Zend/zend_objects.c": [
          "File: Zend/zend_objects.c -> Zend/zend_objects.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "149:  }",
          "150:  if (old_object->properties) {",
          "151:   zval *prop, new_prop;",
          "153:   zend_string *key;",
          "155:   if (!new_object->properties) {",
          "",
          "[Removed Lines]",
          "152:   ulong num_key;",
          "",
          "[Added Lines]",
          "152:   zend_uint_t num_key;",
          "",
          "---------------"
        ],
        "Zend/zend_strtod.c||Zend/zend_strtod.c": [
          "File: Zend/zend_strtod.c -> Zend/zend_strtod.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "174: #endif",
          "176: #define Long    int32_t",
          "179: #ifdef __cplusplus",
          "180: #include \"malloc.h\"",
          "",
          "[Removed Lines]",
          "177: #define ULong   uint32_t",
          "",
          "[Added Lines]",
          "177: #define zend_uint_t   uint32_t",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "273:  typedef union {",
          "274:       double d;",
          "276:  } _double;",
          "277: #define value(x) ((x).d)",
          "278: #ifdef IEEE_LITTLE_ENDIAN",
          "",
          "[Removed Lines]",
          "275:        ULong ul[2];",
          "",
          "[Added Lines]",
          "275:        zend_uint_t ul[2];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "418: struct Bigint {",
          "419:  struct Bigint *next;",
          "420:  int k, maxwds, sign, wds;",
          "422: };",
          "424: typedef struct Bigint Bigint;",
          "",
          "[Removed Lines]",
          "421:  ULong x[1];",
          "",
          "[Added Lines]",
          "421:  zend_uint_t x[1];",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "519: static char * rv_alloc(int i) {",
          "520:  int j, k, *r;",
          "523:  for(k = 0;",
          "525:    j <<= 1) {",
          "526:   k++;",
          "527:  }",
          "",
          "[Removed Lines]",
          "522:  j = sizeof(ULong);",
          "524:    sizeof(Bigint) - sizeof(ULong) - sizeof(int) + j <= i;",
          "",
          "[Added Lines]",
          "522:  j = sizeof(zend_uint_t);",
          "524:    sizeof(Bigint) - sizeof(zend_uint_t) - sizeof(int) + j <= i;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "549: {",
          "550:  int i, wds;",
          "552: #ifdef Pack_32",
          "554: #endif",
          "555:  Bigint *b1;",
          "",
          "[Removed Lines]",
          "551:  ULong *x, y;",
          "553:  ULong xi, z;",
          "",
          "[Added Lines]",
          "551:  zend_uint_t *x, y;",
          "553:  zend_uint_t xi, z;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "584:  return b;",
          "585: }",
          "588: {",
          "589:  int k = 0;",
          "",
          "[Removed Lines]",
          "587: static int hi0bits(ULong x)",
          "",
          "[Added Lines]",
          "587: static int hi0bits(zend_uint_t x)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "613:  return k;",
          "614: }",
          "617: {",
          "618:  int k;",
          "621:  if (x & 7) {",
          "622:   if (x & 1) {",
          "",
          "[Removed Lines]",
          "616: static int lo0bits(ULong *y)",
          "619:  ULong x = *y;",
          "",
          "[Added Lines]",
          "616: static int lo0bits(zend_uint_t *y)",
          "619:  zend_uint_t x = *y;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "671: {",
          "672:  Bigint *c;",
          "673:  int k, wa, wb, wc;",
          "676: #ifdef Pack_32",
          "678: #endif",
          "680:  if (a->wds < b->wds) {",
          "",
          "[Removed Lines]",
          "674:  ULong carry, y, z;",
          "675:  ULong *x, *xa, *xae, *xb, *xbe, *xc, *xc0;",
          "677:  ULong z2;",
          "",
          "[Added Lines]",
          "674:  zend_uint_t carry, y, z;",
          "675:  zend_uint_t *x, *xa, *xae, *xb, *xbe, *xc, *xc0;",
          "677:  zend_uint_t z2;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "751:  return c;",
          "752: }",
          "755: {",
          "756:  Bigint *b;",
          "757:  int i, k;",
          "",
          "[Removed Lines]",
          "754: static Bigint * s2b (CONST char *s, int nd0, int nd, ULong y9)",
          "",
          "[Added Lines]",
          "754: static Bigint * s2b (CONST char *s, int nd0, int nd, zend_uint_t y9)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "830: {",
          "831:  int i, k1, n, n1;",
          "832:  Bigint *b1;",
          "835: #ifdef Pack_32",
          "836:  n = k >> 5;",
          "",
          "[Removed Lines]",
          "833:  ULong *x, *x1, *xe, z;",
          "",
          "[Added Lines]",
          "833:  zend_uint_t *x, *x1, *xe, z;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "887: static int cmp(Bigint *a, Bigint *b)",
          "888: {",
          "890:  int i, j;",
          "892:  i = a->wds;",
          "",
          "[Removed Lines]",
          "889:  ULong *xa, *xa0, *xb, *xb0;",
          "",
          "[Added Lines]",
          "889:  zend_uint_t *xa, *xa0, *xb, *xb0;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "918:  Bigint *c;",
          "919:  int i, wa, wb;",
          "922: #ifdef Pack_32",
          "923:  Long z;",
          "924: #endif",
          "",
          "[Removed Lines]",
          "921:  ULong *xa, *xae, *xb, *xbe, *xc;",
          "",
          "[Added Lines]",
          "921:  zend_uint_t *xa, *xae, *xb, *xbe, *xc;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1030: (Bigint *a, int *e)",
          "1031: #endif",
          "1032: {",
          "1034:  int k;",
          "1035:  volatile _double d;",
          "1036: #ifdef VAX",
          "1038: #else",
          "1039: #define d0 word0(d)",
          "1040: #define d1 word1(d)",
          "",
          "[Removed Lines]",
          "1033:  ULong *xa, *xa0, w, y, z;",
          "1037:  ULong d0, d1;",
          "",
          "[Added Lines]",
          "1033:  zend_uint_t *xa, *xa0, w, y, z;",
          "1037:  zend_uint_t d0, d1;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1097: {",
          "1098:  Bigint *b;",
          "1099:  int de, i, k;",
          "1101:  volatile _double d;",
          "1102: #ifdef VAX",
          "1104: #endif",
          "1106:  value(d) = _d;",
          "",
          "[Removed Lines]",
          "1100:  ULong *x, y, z;",
          "1103:  ULong d0, d1;",
          "",
          "[Added Lines]",
          "1100:  zend_uint_t *x, y, z;",
          "1103:  zend_uint_t d0, d1;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1283: {",
          "1284:  int n;",
          "1285:  Long borrow, y;",
          "1288: #ifdef Pack_32",
          "1289:  Long z;",
          "1291: #endif",
          "1293:  n = S->wds;",
          "",
          "[Removed Lines]",
          "1286:  ULong carry, q, ys;",
          "1287:  ULong *bx, *bxe, *sx, *sxe;",
          "1290:  ULong si, zs;",
          "",
          "[Added Lines]",
          "1286:  zend_uint_t carry, q, ys;",
          "1287:  zend_uint_t *bx, *bxe, *sx, *sxe;",
          "1290:  zend_uint_t si, zs;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1481:  Long L;",
          "1482: #ifndef Sudden_Underflow",
          "1483:  int denorm;",
          "1485: #endif",
          "1486:  Bigint *b, *b1, *delta, *mlo, *mhi, *S, *tmp;",
          "1487:  double ds;",
          "",
          "[Removed Lines]",
          "1484:  ULong x;",
          "",
          "[Added Lines]",
          "1484:  zend_uint_t x;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2044:  volatile double aadj, aadj1, adj;",
          "2045:  volatile _double rv, rv0;",
          "2046:  Long L;",
          "2048:  Bigint *bb, *bb1, *bd, *bd0, *bs, *delta, *tmp;",
          "2049:  double result;",
          "",
          "[Removed Lines]",
          "2047:  ULong y, z;",
          "",
          "[Added Lines]",
          "2047:  zend_uint_t y, z;",
          "",
          "---------------"
        ],
        "ext/standard/filters.c||ext/standard/filters.c": [
          "File: ext/standard/filters.c -> ext/standard/filters.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1232: }",
          "1234: #if IT_WAS_USED",
          "1236: {",
          "1237:  zval **tmpval;",
          "",
          "[Removed Lines]",
          "1235: static php_conv_err_t php_conv_get_long_prop_ex(const HashTable *ht, long *pretval, char *field_name, size_t field_name_len)",
          "",
          "[Added Lines]",
          "1235: static php_conv_err_t php_conv_get_long_prop_ex(const HashTable *ht, php_int_t *pretval, char *field_name, size_t field_name_len)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1255: }",
          "1256: #endif",
          "1259: {",
          "1260:  zval *tmpval;",
          "",
          "[Removed Lines]",
          "1258: static php_conv_err_t php_conv_get_ulong_prop_ex(const HashTable *ht, unsigned long *pretval, char *field_name, size_t field_name_len)",
          "",
          "[Added Lines]",
          "1258: static php_conv_err_t php_conv_get_ulong_prop_ex(const HashTable *ht, php_uint_t *pretval, char *field_name, size_t field_name_len)",
          "",
          "---------------"
        ],
        "ext/standard/html.c||ext/standard/html.c": [
          "File: ext/standard/html.c -> ext/standard/html.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "856: static inline int resolve_named_entity_html(const char *start, size_t length, const entity_ht *ht, unsigned *uni_cp1, unsigned *uni_cp2)",
          "857: {",
          "858:  const entity_cp_map *s;",
          "861:  s = ht->buckets[hash % ht->num_elems];",
          "862:  while (s->entity) {",
          "",
          "[Removed Lines]",
          "859:  ulong hash = zend_inline_hash_func(start, length);",
          "",
          "[Added Lines]",
          "859:  php_uint_t hash = zend_inline_hash_func(start, length);",
          "",
          "---------------"
        ],
        "ext/standard/http.c||ext/standard/http.c": [
          "File: ext/standard/http.c -> ext/standard/http.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:  char *newprefix, *p;",
          "36:  const char *prop_name;",
          "37:  int arg_sep_len, newprefix_len, prop_len;",
          "39:  zval *zdata = NULL, copyzval;",
          "41:  if (!ht) {",
          "",
          "[Removed Lines]",
          "38:  ulong idx;",
          "",
          "[Added Lines]",
          "38:  php_uint_t idx;",
          "",
          "---------------"
        ],
        "ext/standard/info.c||ext/standard/info.c": [
          "File: ext/standard/info.c -> ext/standard/info.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "196: {",
          "197:  zval *data, *tmp, tmp2;",
          "198:  zend_string *string_key;",
          "200:  zend_string *key;",
          "202:  key = STR_INIT(name, name_length, 0);",
          "",
          "[Removed Lines]",
          "199:  ulong num_key;",
          "",
          "[Added Lines]",
          "199:  php_uint_t num_key;",
          "",
          "---------------"
        ],
        "ext/standard/proc_open.c||ext/standard/proc_open.c": [
          "File: ext/standard/proc_open.c -> ext/standard/proc_open.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "427:  int i;",
          "428:  zval *descitem = NULL;",
          "429:  zend_string *str_index;",
          "431:  struct php_proc_open_descriptor_item descriptors[PHP_PROC_OPEN_MAX_DESCRIPTORS];",
          "432: #ifdef PHP_WIN32",
          "433:  PROCESS_INFORMATION pi;",
          "",
          "[Removed Lines]",
          "430:  ulong nindex;",
          "",
          "[Added Lines]",
          "430:  php_uint_t nindex;",
          "",
          "---------------"
        ],
        "ext/standard/streamsfuncs.c||ext/standard/streamsfuncs.c": [
          "File: ext/standard/streamsfuncs.c -> ext/standard/streamsfuncs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "619:  php_stream *stream;",
          "620:  int ret = 0;",
          "621:  zend_string *key;",
          "624:  if (Z_TYPE_P(stream_array) != IS_ARRAY) {",
          "625:   return 0;",
          "",
          "[Removed Lines]",
          "622:  ulong num_ind;",
          "",
          "[Added Lines]",
          "622:  php_uint_t num_ind;",
          "",
          "---------------"
        ],
        "ext/standard/var.c||ext/standard/var.c": [
          "File: ext/standard/var.c -> ext/standard/var.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:  zend_string *class_name;",
          "101:  int is_temp;",
          "102:  int is_ref = 0;",
          "104:  zend_string *key;",
          "105:  zval *val;",
          "",
          "[Removed Lines]",
          "103:  ulong num;",
          "",
          "[Added Lines]",
          "103:  php_uint_t num;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:     php_printf(\"%sobject(unknown class)#%d (%d) {\\n\", COMMON, Z_OBJ_HANDLE_P(struc), myht ? zend_obj_num_elements(myht) : 0);",
          "172:    }",
          "173:    if (myht) {",
          "175:     zend_string *key;",
          "176:     zval *val;",
          "",
          "[Removed Lines]",
          "174:     ulong num;",
          "",
          "[Added Lines]",
          "174:     php_uint_t num;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "271:  zend_string *class_name;",
          "272:  int is_temp = 0;",
          "273:  int is_ref = 0;",
          "275:  zend_string *key;",
          "276:  zval *val;",
          "",
          "[Removed Lines]",
          "274:  ulong index;",
          "",
          "[Added Lines]",
          "274:  php_uint_t index;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "459:  int tmp_len;",
          "460:  zend_string *class_name;",
          "461:  zend_string *ztmp, *ztmp2;",
          "463:  zend_string *key;",
          "464:  zval *val;",
          "",
          "[Removed Lines]",
          "462:  ulong index;",
          "",
          "[Added Lines]",
          "462:  php_uint_t index;",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: typedef struct {",
          "32:  zval *data[VAR_ENTRIES_MAX];",
          "34:  void *next;",
          "35: } var_entries;",
          "37: typedef struct {",
          "38:  zval data[VAR_ENTRIES_MAX];",
          "40:  void *next;",
          "41: } var_dtor_entries;",
          "",
          "[Removed Lines]",
          "33:  long used_slots;",
          "39:  long used_slots;",
          "",
          "[Added Lines]",
          "33:  php_int_t used_slots;",
          "39:  php_int_t used_slots;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120: PHPAPI void var_replace(php_unserialize_data_t *var_hashx, zval *ozval, zval *nzval)",
          "121: {",
          "123:  var_entries *var_hash = (*var_hashx)->first;",
          "124: #if VAR_ENTRIES_DBG",
          "125:  fprintf(stderr, \"var_replace(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(nzval));",
          "",
          "[Removed Lines]",
          "122:  long i;",
          "",
          "[Added Lines]",
          "122:  php_int_t i;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "136:  }",
          "137: }",
          "140: {",
          "141:  var_entries *var_hash = (*var_hashx)->first;",
          "142: #if VAR_ENTRIES_DBG",
          "",
          "[Removed Lines]",
          "139: static zval *var_access(php_unserialize_data_t *var_hashx, long id)",
          "",
          "[Added Lines]",
          "139: static zval *var_access(php_unserialize_data_t *var_hashx, php_int_t id)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "158: PHPAPI void var_destroy(php_unserialize_data_t *var_hashx)",
          "159: {",
          "160:  void *next;",
          "162:  var_entries *var_hash = (*var_hashx)->first;",
          "163:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "164: #if VAR_ENTRIES_DBG",
          "",
          "[Removed Lines]",
          "161:  long i;",
          "",
          "[Added Lines]",
          "161:  php_int_t i;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "242: {",
          "243:  char cursor;",
          "245:  int neg = 0;",
          "247:  switch (*p) {",
          "",
          "[Removed Lines]",
          "241: static inline long parse_iv2(const unsigned char *p, const unsigned char **q)",
          "244:  long result = 0;",
          "",
          "[Added Lines]",
          "241: static inline php_int_t parse_iv2(const unsigned char *p, const unsigned char **q)",
          "244:  php_int_t result = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "266:  return result;",
          "267: }",
          "270: {",
          "271:  return parse_iv2(p, NULL);",
          "272: }",
          "",
          "[Removed Lines]",
          "269: static inline long parse_iv(const unsigned char *p)",
          "",
          "[Added Lines]",
          "269: static inline php_int_t parse_iv(const unsigned char *p)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "296: #define UNSERIALIZE_PARAMETER zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash TSRMLS_DC",
          "297: #define UNSERIALIZE_PASSTHRU rval, p, max, var_hash TSRMLS_CC",
          "300: {",
          "301:  while (elements-- > 0) {",
          "302:   zval key, *data, d, *old_data;",
          "",
          "[Removed Lines]",
          "299: static inline int process_nested_data(UNSERIALIZE_PARAMETER, HashTable *ht, long elements, int objprops)",
          "",
          "[Added Lines]",
          "299: static inline int process_nested_data(UNSERIALIZE_PARAMETER, HashTable *ht, php_int_t elements, int objprops)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "381: static inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "382: {",
          "385:  datalen = parse_iv2((*p) + 2, p);",
          "387:  (*p) += 2;",
          "389:  if (datalen < 0 || (*p) + datalen >= max) {",
          "391:   return 0;",
          "392:  }",
          "",
          "[Removed Lines]",
          "383:  long datalen;",
          "390:   zend_error(E_WARNING, \"Insufficient data for unserializing - %ld required, %ld present\", datalen, (long)(max - (*p)));",
          "",
          "[Added Lines]",
          "383:  php_int_t datalen;",
          "390:   zend_error(E_WARNING, \"Insufficient data for unserializing - %ld required, %ld present\", datalen, (php_int_t)(max - (*p)));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "403:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "404: }",
          "407: {",
          "410:  elements = parse_iv2((*p) + 2, p);",
          "",
          "[Removed Lines]",
          "406: static inline long object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "408:  long elements;",
          "",
          "[Added Lines]",
          "406: static inline php_int_t object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "408:  php_int_t elements;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "426: #ifdef PHP_WIN32",
          "427: # pragma optimize(\"\", off)",
          "428: #endif",
          "430: {",
          "431:  zval retval;",
          "432:  zval fname;",
          "",
          "[Removed Lines]",
          "429: static inline int object_common2(UNSERIALIZE_PARAMETER, long elements)",
          "",
          "[Added Lines]",
          "429: static inline int object_common2(UNSERIALIZE_PARAMETER, php_int_t elements)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "625: #line 681 \"ext/standard/var_unserializer.re\"",
          "626:  {",
          "627:  size_t len, len2, len3, maxlen;",
          "629:  char *str;",
          "630:  zend_string *class_name;",
          "631:  zend_class_entry *ce;",
          "",
          "[Removed Lines]",
          "628:  long elements;",
          "",
          "[Added Lines]",
          "628:  php_int_t elements;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "817:  ++YYCURSOR;",
          "818: #line 652 \"ext/standard/var_unserializer.re\"",
          "819:  {",
          "",
          "[Removed Lines]",
          "820:  long elements = parse_iv(start + 2);",
          "",
          "[Added Lines]",
          "820:  php_int_t elements = parse_iv(start + 2);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1023:  ++YYCURSOR;",
          "1024: #line 588 \"ext/standard/var_unserializer.re\"",
          "1025:  {",
          "1027: use_double:",
          "1028: #endif",
          "",
          "[Removed Lines]",
          "1026: #if SIZEOF_LONG == 4",
          "",
          "[Added Lines]",
          "1026: #if SIZEOF_ZEND_INT == 4",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1134:  ++YYCURSOR;",
          "1135: #line 546 \"ext/standard/var_unserializer.re\"",
          "1136:  {",
          "1138:  int digits = YYCURSOR - start - 3;",
          "1140:  if (start[2] == '-' || start[2] == '+') {",
          "1141:   digits--;",
          "1142:  }",
          "1145:  if (digits >= MAX_LENGTH_OF_ZEND_INT - 1) {",
          "1146:   if (digits == MAX_LENGTH_OF_ZEND_INT - 1) {",
          "1147:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_ZEND_INT, int_min_digits, MAX_LENGTH_OF_ZEND_INT - 1);",
          "",
          "[Removed Lines]",
          "1137: #if SIZEOF_LONG == 4",
          "",
          "[Added Lines]",
          "1137: #if SIZEOF_ZEND_INT == 4",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1206:  ++YYCURSOR;",
          "1207: #line 511 \"ext/standard/var_unserializer.re\"",
          "1208:  {",
          "1212:  if (!var_hash) return 0;",
          "",
          "[Removed Lines]",
          "1209:  long id;",
          "",
          "[Added Lines]",
          "1209:  php_int_t id;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1252:  ++YYCURSOR;",
          "1253: #line 489 \"ext/standard/var_unserializer.re\"",
          "1254:  {",
          "1258:  if (!var_hash) return 0;",
          "",
          "[Removed Lines]",
          "1255:  long id;",
          "",
          "[Added Lines]",
          "1255:  php_int_t id;",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: typedef struct {",
          "30:  zval *data[VAR_ENTRIES_MAX];",
          "32:  void *next;",
          "33: } var_entries;",
          "35: typedef struct {",
          "36:  zval data[VAR_ENTRIES_MAX];",
          "38:  void *next;",
          "39: } var_dtor_entries;",
          "",
          "[Removed Lines]",
          "31:  long used_slots;",
          "37:  long used_slots;",
          "",
          "[Added Lines]",
          "31:  php_int_t used_slots;",
          "37:  php_int_t used_slots;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "118: PHPAPI void var_replace(php_unserialize_data_t *var_hashx, zval *ozval, zval *nzval)",
          "119: {",
          "121:  var_entries *var_hash = (*var_hashx)->first;",
          "122: #if VAR_ENTRIES_DBG",
          "123:  fprintf(stderr, \"var_replace(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(nzval));",
          "",
          "[Removed Lines]",
          "120:  long i;",
          "",
          "[Added Lines]",
          "120:  php_int_t i;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "134:  }",
          "135: }",
          "138: {",
          "139:  var_entries *var_hash = (*var_hashx)->first;",
          "140: #if VAR_ENTRIES_DBG",
          "",
          "[Removed Lines]",
          "137: static zval *var_access(php_unserialize_data_t *var_hashx, long id)",
          "",
          "[Added Lines]",
          "137: static zval *var_access(php_unserialize_data_t *var_hashx, php_int_t id)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "156: PHPAPI void var_destroy(php_unserialize_data_t *var_hashx)",
          "157: {",
          "158:  void *next;",
          "160:  var_entries *var_hash = (*var_hashx)->first;",
          "161:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "162: #if VAR_ENTRIES_DBG",
          "",
          "[Removed Lines]",
          "159:  long i;",
          "",
          "[Added Lines]",
          "159:  php_int_t i;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "246: {",
          "247:  char cursor;",
          "249:  int neg = 0;",
          "251:  switch (*p) {",
          "",
          "[Removed Lines]",
          "245: static inline long parse_iv2(const unsigned char *p, const unsigned char **q)",
          "248:  long result = 0;",
          "",
          "[Added Lines]",
          "245: static inline php_int_t parse_iv2(const unsigned char *p, const unsigned char **q)",
          "248:  php_int_t result = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "270:  return result;",
          "271: }",
          "274: {",
          "275:  return parse_iv2(p, NULL);",
          "276: }",
          "",
          "[Removed Lines]",
          "273: static inline long parse_iv(const unsigned char *p)",
          "",
          "[Added Lines]",
          "273: static inline php_int_t parse_iv(const unsigned char *p)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "300: #define UNSERIALIZE_PARAMETER zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash TSRMLS_DC",
          "301: #define UNSERIALIZE_PASSTHRU rval, p, max, var_hash TSRMLS_CC",
          "304: {",
          "305:  while (elements-- > 0) {",
          "306:   zval key, *data, d, *old_data;",
          "",
          "[Removed Lines]",
          "303: static inline int process_nested_data(UNSERIALIZE_PARAMETER, HashTable *ht, long elements, int objprops)",
          "",
          "[Added Lines]",
          "303: static inline int process_nested_data(UNSERIALIZE_PARAMETER, HashTable *ht, php_int_t elements, int objprops)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "385: static inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "386: {",
          "389:  datalen = parse_iv2((*p) + 2, p);",
          "391:  (*p) += 2;",
          "393:  if (datalen < 0 || (*p) + datalen >= max) {",
          "395:   return 0;",
          "396:  }",
          "",
          "[Removed Lines]",
          "387:  long datalen;",
          "394:   zend_error(E_WARNING, \"Insufficient data for unserializing - %ld required, %ld present\", datalen, (long)(max - (*p)));",
          "",
          "[Added Lines]",
          "387:  php_int_t datalen;",
          "394:   zend_error(E_WARNING, \"Insufficient data for unserializing - %ld required, %ld present\", datalen, (php_int_t)(max - (*p)));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "407:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "408: }",
          "411: {",
          "414:  elements = parse_iv2((*p) + 2, p);",
          "",
          "[Removed Lines]",
          "410: static inline long object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "412:  long elements;",
          "",
          "[Added Lines]",
          "410: static inline php_int_t object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "412:  php_int_t elements;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "430: #ifdef PHP_WIN32",
          "431: # pragma optimize(\"\", off)",
          "432: #endif",
          "434: {",
          "435:  zval retval;",
          "436:  zval fname;",
          "",
          "[Removed Lines]",
          "433: static inline int object_common2(UNSERIALIZE_PARAMETER, long elements)",
          "",
          "[Added Lines]",
          "433: static inline int object_common2(UNSERIALIZE_PARAMETER, php_int_t elements)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "489: \"R:\" iv \";\"  {",
          "493:  if (!var_hash) return 0;",
          "",
          "[Removed Lines]",
          "490:  long id;",
          "",
          "[Added Lines]",
          "490:  php_int_t id;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "509: }",
          "511: \"r:\" iv \";\"  {",
          "515:  if (!var_hash) return 0;",
          "",
          "[Removed Lines]",
          "512:  long id;",
          "",
          "[Added Lines]",
          "512:  php_int_t id;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "544: }",
          "546: \"i:\" iv \";\" {",
          "548:  int digits = YYCURSOR - start - 3;",
          "550:  if (start[2] == '-' || start[2] == '+') {",
          "551:   digits--;",
          "552:  }",
          "555:  if (digits >= MAX_LENGTH_OF_ZEND_INT - 1) {",
          "556:   if (digits == MAX_LENGTH_OF_ZEND_INT - 1) {",
          "557:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_ZEND_INT, int_min_digits, MAX_LENGTH_OF_ZEND_INT - 1);",
          "",
          "[Removed Lines]",
          "547: #if SIZEOF_LONG == 4",
          "",
          "[Added Lines]",
          "547: #if SIZEOF_ZEND_INT == 4",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "586: }",
          "588: \"d:\" (iv | nv | nvexp) \";\" {",
          "590: use_double:",
          "591: #endif",
          "",
          "[Removed Lines]",
          "589: #if SIZEOF_LONG == 4",
          "",
          "[Added Lines]",
          "589: #if SIZEOF_ZEND_INT == 4",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "650: }",
          "652: \"a:\" uiv \":\" \"{\" {",
          "",
          "[Removed Lines]",
          "653:  long elements = parse_iv(start + 2);",
          "",
          "[Added Lines]",
          "653:  php_int_t elements = parse_iv(start + 2);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "681: object \":\" uiv \":\" [\"] {",
          "682:  size_t len, len2, len3, maxlen;",
          "684:  char *str;",
          "685:  zend_string *class_name;",
          "686:  zend_class_entry *ce;",
          "",
          "[Removed Lines]",
          "683:  long elements;",
          "",
          "[Added Lines]",
          "683:  php_int_t elements;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cab5ef5355a709caadd156a2957002325fe85f18",
      "candidate_info": {
        "commit_hash": "cab5ef5355a709caadd156a2957002325fe85f18",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/cab5ef5355a709caadd156a2957002325fe85f18",
        "files": [
          "ext/standard/tests/serialize/bug25378.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Fixed bug #74111\n\n(cherry picked from commit 3a25a56a92ac1d0d6028a8ecd32ccf03bcd71ade)",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug25378.phpt||ext/standard/tests/serialize/bug25378.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug25378.phpt||ext/standard/tests/serialize/bug25378.phpt": [
          "File: ext/standard/tests/serialize/bug25378.phpt -> ext/standard/tests/serialize/bug25378.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: Notice: unserialize(): Error at offset 17 of 33 bytes in %sbug25378.php on line %d",
          "43: bool(false)",
          "46: bool(false)",
          "48: Notice: unserialize(): Error at offset 2 of 13 bytes in %sbug25378.php on line %d",
          "",
          "[Removed Lines]",
          "45: Notice: unserialize(): Error at offset 33 of 32 bytes in %sbug25378.php on line %d",
          "",
          "[Added Lines]",
          "45: Notice: unserialize(): Error at offset 32 of 32 bytes in %sbug25378.php on line %d",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "429: static inline int finish_nested_data(UNSERIALIZE_PARAMETER)",
          "430: {",
          "438: }",
          "440: static inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "",
          "[Removed Lines]",
          "431:  if (*((*p)++) == '}')",
          "432:   return 1;",
          "434: #if SOMETHING_NEW_MIGHT_LEAD_TO_CRASH_ENABLE_IF_YOU_ARE_BRAVE",
          "435:  zval_ptr_dtor(rval);",
          "436: #endif",
          "437:  return 0;",
          "",
          "[Added Lines]",
          "431:  if (*p >= max || **p != '}') {",
          "432:   return 0;",
          "433:  }",
          "435:  (*p)++;",
          "436:  return 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "582:  start = cursor;",
          "586: {",
          "587:  YYCTYPE yych;",
          "588:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "585: #line 586 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "584: #line 585 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "623:  yych = *YYCURSOR;",
          "624:  switch (yych) {",
          "625:  case 'C':",
          "627:  case 'N': goto yy5;",
          "634:  case 'o': goto yy12;",
          "639:  }",
          "640: yy2:",
          "642: yy3:",
          "644:  { return 0; }",
          "645: #line 646 \"ext/standard/var_unserializer.c\"",
          "646: yy4:",
          "647:  yych = *(YYMARKER = ++YYCURSOR);",
          "649:  goto yy3;",
          "650: yy5:",
          "651:  yych = *++YYCURSOR;",
          "653:  goto yy3;",
          "654: yy6:",
          "655:  yych = *(YYMARKER = ++YYCURSOR);",
          "657:  goto yy3;",
          "658: yy7:",
          "659:  yych = *(YYMARKER = ++YYCURSOR);",
          "661:  goto yy3;",
          "662: yy8:",
          "663:  yych = *(YYMARKER = ++YYCURSOR);",
          "665:  goto yy3;",
          "666: yy9:",
          "667:  yych = *(YYMARKER = ++YYCURSOR);",
          "669:  goto yy3;",
          "670: yy10:",
          "671:  yych = *(YYMARKER = ++YYCURSOR);",
          "673:  goto yy3;",
          "674: yy11:",
          "675:  yych = *(YYMARKER = ++YYCURSOR);",
          "677:  goto yy3;",
          "678: yy12:",
          "679:  yych = *(YYMARKER = ++YYCURSOR);",
          "681:  goto yy3;",
          "682: yy13:",
          "683:  yych = *(YYMARKER = ++YYCURSOR);",
          "685:  goto yy3;",
          "686: yy14:",
          "691:  ++YYCURSOR;",
          "693:  {",
          "695:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "697: }",
          "699: yy17:",
          "700:  yych = *++YYCURSOR;",
          "701:  if (yybm[0+yych] & 128) {",
          "703:  }",
          "705: yy18:",
          "706:  YYCURSOR = YYMARKER;",
          "707:  goto yy3;",
          "708: yy19:",
          "718:  yych = *++YYCURSOR;",
          "727:  }",
          "739:  goto yy18;",
          "742:  if (yych <= '/') goto yy18;",
          "746:  yych = *++YYCURSOR;",
          "755:   }",
          "764:   }",
          "765:  }",
          "776:  }",
          "787:  }",
          "789:  yych = *++YYCURSOR;",
          "790:  if (yych <= ',') {",
          "793:  } else {",
          "795:   if (yych <= '/') goto yy18;",
          "797:   goto yy18;",
          "798:  }",
          "800:  yych = *++YYCURSOR;",
          "802:  if (yych <= '/') goto yy18;",
          "812:  ++YYCURSOR;",
          "813:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "814:  yych = *YYCURSOR;",
          "818:  if (yych <= '/') goto yy18;",
          "822:  yych = *++YYCURSOR;",
          "826:  ++YYCURSOR;",
          "829:  if (yych <= '/') goto yy18;",
          "830:  if (yych <= '9') goto yy34;",
          "832:  goto yy18;",
          "834:  yych = *++YYCURSOR;",
          "835:  if (yych <= '/') goto yy18;",
          "836:  if (yych >= ':') goto yy18;",
          "838:  ++YYCURSOR;",
          "839:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "840:  yych = *YYCURSOR;",
          "841:  if (yych <= '/') goto yy18;",
          "846:  yych = *++YYCURSOR;",
          "850:  ++YYCURSOR;",
          "875:  }",
          "903:  }",
          "913:  yych = *++YYCURSOR;",
          "914:  if (yych <= '/') goto yy18;",
          "923:  goto yy18;",
          "925:  yych = *++YYCURSOR;",
          "926:  if (yych <= '/') goto yy18;",
          "927:  if (yych >= ':') goto yy18;",
          "929:  ++YYCURSOR;",
          "930:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "931:  yych = *YYCURSOR;",
          "932:  if (yych <= '/') goto yy18;",
          "937:  yych = *++YYCURSOR;",
          "941:  ++YYCURSOR;",
          "944:  if (yych <= '/') goto yy18;",
          "947:  goto yy18;",
          "949:  yych = *++YYCURSOR;",
          "950:  if (yych <= '/') goto yy18;",
          "951:  if (yych >= ':') goto yy18;",
          "953:  ++YYCURSOR;",
          "954:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "955:  yych = *YYCURSOR;",
          "956:  if (yych <= '/') goto yy18;",
          "961:  yych = *++YYCURSOR;",
          "965:  ++YYCURSOR;",
          "967:  {",
          "975:   return 0;",
          "976:  }",
          "982:  }",
          "988:  }",
          "990:  return 1;",
          "991: }",
          "994:  yych = *++YYCURSOR;",
          "996:  goto yy18;",
          "998:  yych = *++YYCURSOR;",
          "1000:  goto yy18;",
          "1002:  ++YYCURSOR;",
          "1011:  ++YYCURSOR;",
          "1012:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1013:  yych = *YYCURSOR;",
          "1014:  if (yych <= ';') {",
          "1015:   if (yych <= '/') goto yy18;",
          "1017:   if (yych <= ':') goto yy18;",
          "1018:  } else {",
          "1019:   if (yych <= 'E') {",
          "1020:    if (yych <= 'D') goto yy18;",
          "1022:   } else {",
          "1024:    goto yy18;",
          "1025:   }",
          "1026:  }",
          "1028:  ++YYCURSOR;",
          "1030:  {",
          "1031: #if SIZEOF_ZEND_LONG == 4",
          "1032: use_double:",
          "",
          "[Removed Lines]",
          "626:  case 'O': goto yy4;",
          "628:  case 'R': goto yy6;",
          "629:  case 'S': goto yy7;",
          "630:  case 'a': goto yy8;",
          "631:  case 'b': goto yy9;",
          "632:  case 'd': goto yy10;",
          "633:  case 'i': goto yy11;",
          "635:  case 'r': goto yy13;",
          "636:  case 's': goto yy14;",
          "637:  case '}': goto yy15;",
          "638:  default: goto yy2;",
          "641:  ++YYCURSOR;",
          "643: #line 963 \"ext/standard/var_unserializer.re\"",
          "648:  if (yych == ':') goto yy17;",
          "652:  if (yych == ';') goto yy19;",
          "656:  if (yych == ':') goto yy21;",
          "660:  if (yych == ':') goto yy22;",
          "664:  if (yych == ':') goto yy23;",
          "668:  if (yych == ':') goto yy24;",
          "672:  if (yych == ':') goto yy25;",
          "676:  if (yych == ':') goto yy26;",
          "680:  if (yych == ':') goto yy27;",
          "684:  if (yych == ':') goto yy28;",
          "687:  yych = *(YYMARKER = ++YYCURSOR);",
          "688:  if (yych == ':') goto yy29;",
          "689:  goto yy3;",
          "690: yy15:",
          "692: #line 957 \"ext/standard/var_unserializer.re\"",
          "698: #line 699 \"ext/standard/var_unserializer.c\"",
          "702:   goto yy31;",
          "704:  if (yych == '+') goto yy30;",
          "709:  ++YYCURSOR;",
          "710: #line 641 \"ext/standard/var_unserializer.re\"",
          "711:  {",
          "713:  ZVAL_NULL(rval);",
          "714:  return 1;",
          "715: }",
          "716: #line 717 \"ext/standard/var_unserializer.c\"",
          "717: yy21:",
          "719:  if (yych <= ',') {",
          "720:   if (yych == '+') goto yy33;",
          "721:   goto yy18;",
          "722:  } else {",
          "723:   if (yych <= '-') goto yy33;",
          "724:   if (yych <= '/') goto yy18;",
          "725:   if (yych <= '9') goto yy34;",
          "726:   goto yy18;",
          "728: yy22:",
          "729:  yych = *++YYCURSOR;",
          "730:  if (yych == '+') goto yy36;",
          "731:  if (yych <= '/') goto yy18;",
          "732:  if (yych <= '9') goto yy37;",
          "733:  goto yy18;",
          "734: yy23:",
          "735:  yych = *++YYCURSOR;",
          "736:  if (yych == '+') goto yy39;",
          "737:  if (yych <= '/') goto yy18;",
          "738:  if (yych <= '9') goto yy40;",
          "740: yy24:",
          "741:  yych = *++YYCURSOR;",
          "743:  if (yych <= '1') goto yy42;",
          "744:  goto yy18;",
          "745: yy25:",
          "747:  if (yych <= '/') {",
          "748:   if (yych <= ',') {",
          "749:    if (yych == '+') goto yy43;",
          "750:    goto yy18;",
          "751:   } else {",
          "752:    if (yych <= '-') goto yy44;",
          "753:    if (yych <= '.') goto yy45;",
          "754:    goto yy18;",
          "756:  } else {",
          "757:   if (yych <= 'I') {",
          "758:    if (yych <= '9') goto yy46;",
          "759:    if (yych <= 'H') goto yy18;",
          "760:    goto yy48;",
          "761:   } else {",
          "762:    if (yych == 'N') goto yy49;",
          "763:    goto yy18;",
          "766: yy26:",
          "767:  yych = *++YYCURSOR;",
          "768:  if (yych <= ',') {",
          "769:   if (yych == '+') goto yy50;",
          "770:   goto yy18;",
          "771:  } else {",
          "772:   if (yych <= '-') goto yy50;",
          "773:   if (yych <= '/') goto yy18;",
          "774:   if (yych <= '9') goto yy51;",
          "775:   goto yy18;",
          "777: yy27:",
          "778:  yych = *++YYCURSOR;",
          "779:  if (yych <= ',') {",
          "780:   if (yych == '+') goto yy53;",
          "781:   goto yy18;",
          "782:  } else {",
          "783:   if (yych <= '-') goto yy53;",
          "784:   if (yych <= '/') goto yy18;",
          "785:   if (yych <= '9') goto yy54;",
          "786:   goto yy18;",
          "788: yy28:",
          "791:   if (yych == '+') goto yy56;",
          "792:   goto yy18;",
          "794:   if (yych <= '-') goto yy56;",
          "796:   if (yych <= '9') goto yy57;",
          "799: yy29:",
          "801:  if (yych == '+') goto yy59;",
          "803:  if (yych <= '9') goto yy60;",
          "804:  goto yy18;",
          "805: yy30:",
          "806:  yych = *++YYCURSOR;",
          "807:  if (yybm[0+yych] & 128) {",
          "808:   goto yy31;",
          "809:  }",
          "810:  goto yy18;",
          "811: yy31:",
          "815:  if (yybm[0+yych] & 128) {",
          "816:   goto yy31;",
          "817:  }",
          "819:  if (yych <= ':') goto yy62;",
          "820:  goto yy18;",
          "821: yy33:",
          "823:  if (yych <= '/') goto yy18;",
          "824:  if (yych >= ':') goto yy18;",
          "825: yy34:",
          "827:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "828:  yych = *YYCURSOR;",
          "831:  if (yych == ';') goto yy63;",
          "833: yy36:",
          "837: yy37:",
          "842:  if (yych <= '9') goto yy37;",
          "843:  if (yych <= ':') goto yy65;",
          "844:  goto yy18;",
          "845: yy39:",
          "847:  if (yych <= '/') goto yy18;",
          "848:  if (yych >= ':') goto yy18;",
          "849: yy40:",
          "851:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "852:  yych = *YYCURSOR;",
          "853:  if (yych <= '/') goto yy18;",
          "854:  if (yych <= '9') goto yy40;",
          "855:  if (yych <= ':') goto yy66;",
          "856:  goto yy18;",
          "857: yy42:",
          "858:  yych = *++YYCURSOR;",
          "859:  if (yych == ';') goto yy67;",
          "860:  goto yy18;",
          "861: yy43:",
          "862:  yych = *++YYCURSOR;",
          "863:  if (yych == '.') goto yy45;",
          "864:  if (yych <= '/') goto yy18;",
          "865:  if (yych <= '9') goto yy46;",
          "866:  goto yy18;",
          "867: yy44:",
          "868:  yych = *++YYCURSOR;",
          "869:  if (yych <= '/') {",
          "870:   if (yych != '.') goto yy18;",
          "871:  } else {",
          "872:   if (yych <= '9') goto yy46;",
          "873:   if (yych == 'I') goto yy48;",
          "874:   goto yy18;",
          "876: yy45:",
          "877:  yych = *++YYCURSOR;",
          "878:  if (yych <= '/') goto yy18;",
          "879:  if (yych <= '9') goto yy69;",
          "880:  goto yy18;",
          "881: yy46:",
          "882:  ++YYCURSOR;",
          "883:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "884:  yych = *YYCURSOR;",
          "885:  if (yych <= ':') {",
          "886:   if (yych <= '.') {",
          "887:    if (yych <= '-') goto yy18;",
          "888:    goto yy69;",
          "889:   } else {",
          "890:    if (yych <= '/') goto yy18;",
          "891:    if (yych <= '9') goto yy46;",
          "892:    goto yy18;",
          "893:   }",
          "894:  } else {",
          "895:   if (yych <= 'E') {",
          "896:    if (yych <= ';') goto yy71;",
          "897:    if (yych <= 'D') goto yy18;",
          "898:    goto yy73;",
          "899:   } else {",
          "900:    if (yych == 'e') goto yy73;",
          "901:    goto yy18;",
          "902:   }",
          "904: yy48:",
          "905:  yych = *++YYCURSOR;",
          "906:  if (yych == 'N') goto yy74;",
          "907:  goto yy18;",
          "908: yy49:",
          "909:  yych = *++YYCURSOR;",
          "910:  if (yych == 'A') goto yy75;",
          "911:  goto yy18;",
          "912: yy50:",
          "915:  if (yych >= ':') goto yy18;",
          "916: yy51:",
          "917:  ++YYCURSOR;",
          "918:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "919:  yych = *YYCURSOR;",
          "920:  if (yych <= '/') goto yy18;",
          "921:  if (yych <= '9') goto yy51;",
          "922:  if (yych == ';') goto yy76;",
          "924: yy53:",
          "928: yy54:",
          "933:  if (yych <= '9') goto yy54;",
          "934:  if (yych <= ':') goto yy78;",
          "935:  goto yy18;",
          "936: yy56:",
          "938:  if (yych <= '/') goto yy18;",
          "939:  if (yych >= ':') goto yy18;",
          "940: yy57:",
          "942:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "943:  yych = *YYCURSOR;",
          "945:  if (yych <= '9') goto yy57;",
          "946:  if (yych == ';') goto yy79;",
          "948: yy59:",
          "952: yy60:",
          "957:  if (yych <= '9') goto yy60;",
          "958:  if (yych <= ':') goto yy81;",
          "959:  goto yy18;",
          "960: yy62:",
          "962:  if (yych == '\"') goto yy82;",
          "963:  goto yy18;",
          "964: yy63:",
          "966: #line 590 \"ext/standard/var_unserializer.re\"",
          "968:  zend_long id;",
          "971:  if (!var_hash) return 0;",
          "973:  id = parse_iv(start + 2) - 1;",
          "974:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "978:  zval_ptr_dtor(rval);",
          "979:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "980:   ZVAL_UNDEF(rval);",
          "981:   return 1;",
          "983:  if (Z_ISREF_P(rval_ref)) {",
          "984:   ZVAL_COPY(rval, rval_ref);",
          "985:  } else {",
          "986:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "987:   ZVAL_COPY(rval, rval_ref);",
          "992: #line 993 \"ext/standard/var_unserializer.c\"",
          "993: yy65:",
          "995:  if (yych == '\"') goto yy84;",
          "997: yy66:",
          "999:  if (yych == '{') goto yy86;",
          "1001: yy67:",
          "1003: #line 647 \"ext/standard/var_unserializer.re\"",
          "1004:  {",
          "1006:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1007:  return 1;",
          "1008: }",
          "1009: #line 1010 \"ext/standard/var_unserializer.c\"",
          "1010: yy69:",
          "1016:   if (yych <= '9') goto yy69;",
          "1021:    goto yy73;",
          "1023:    if (yych == 'e') goto yy73;",
          "1027: yy71:",
          "1029: #line 695 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "625:  case 'O': goto yy13;",
          "627:  case 'R': goto yy2;",
          "628:  case 'S': goto yy10;",
          "629:  case 'a': goto yy11;",
          "630:  case 'b': goto yy6;",
          "631:  case 'd': goto yy8;",
          "632:  case 'i': goto yy7;",
          "634:  case 'r': goto yy4;",
          "635:  case 's': goto yy9;",
          "636:  case '}': goto yy14;",
          "637:  default: goto yy16;",
          "640:  yych = *(YYMARKER = ++YYCURSOR);",
          "641:  if (yych == ':') goto yy95;",
          "643: #line 962 \"ext/standard/var_unserializer.re\"",
          "648:  if (yych == ':') goto yy89;",
          "652:  if (yych == ';') goto yy87;",
          "656:  if (yych == ':') goto yy83;",
          "660:  if (yych == ':') goto yy77;",
          "664:  if (yych == ':') goto yy53;",
          "668:  if (yych == ':') goto yy46;",
          "672:  if (yych == ':') goto yy39;",
          "676:  if (yych == ':') goto yy32;",
          "680:  if (yych == ':') goto yy25;",
          "684:  if (yych == ':') goto yy17;",
          "688: #line 956 \"ext/standard/var_unserializer.re\"",
          "694: #line 695 \"ext/standard/var_unserializer.c\"",
          "695: yy16:",
          "696:  yych = *++YYCURSOR;",
          "697:  goto yy3;",
          "701:   goto yy20;",
          "703:  if (yych == '+') goto yy19;",
          "709:  if (yybm[0+yych] & 128) {",
          "710:   goto yy20;",
          "713: yy20:",
          "714:  ++YYCURSOR;",
          "715:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "716:  yych = *YYCURSOR;",
          "717:  if (yybm[0+yych] & 128) {",
          "718:   goto yy20;",
          "719:  }",
          "721:  if (yych >= ';') goto yy18;",
          "723:  if (yych != '\"') goto yy18;",
          "724:  ++YYCURSOR;",
          "725: #line 804 \"ext/standard/var_unserializer.re\"",
          "726:  {",
          "727:  size_t len, len2, len3, maxlen;",
          "728:  zend_long elements;",
          "729:  char *str;",
          "730:  zend_string *class_name;",
          "731:  zend_class_entry *ce;",
          "732:  int incomplete_class = 0;",
          "734:  int custom_object = 0;",
          "736:  zval user_func;",
          "737:  zval retval;",
          "738:  zval args[1];",
          "740:     if (!var_hash) return 0;",
          "741:  if (*start == 'C') {",
          "742:   custom_object = 1;",
          "743:  }",
          "745:  len2 = len = parse_uiv(start + 2);",
          "746:  maxlen = max - YYCURSOR;",
          "747:  if (maxlen < len || len == 0) {",
          "749:   return 0;",
          "750:  }",
          "752:  str = (char*)YYCURSOR;",
          "754:  YYCURSOR += len;",
          "756:  if (*(YYCURSOR) != '\"') {",
          "758:   return 0;",
          "759:  }",
          "760:  if (*(YYCURSOR+1) != ':') {",
          "762:   return 0;",
          "763:  }",
          "765:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "766:  if (len3 != len)",
          "767:  {",
          "769:   return 0;",
          "770:  }",
          "772:  class_name = zend_string_init(str, len, 0);",
          "774:  do {",
          "775:   if(!unserialize_allowed_class(class_name, classes)) {",
          "776:    incomplete_class = 1;",
          "777:    ce = PHP_IC_ENTRY;",
          "778:    break;",
          "782:   BG(serialize_lock)++;",
          "783:   ce = zend_lookup_class(class_name);",
          "784:   if (ce) {",
          "785:    BG(serialize_lock)--;",
          "786:    if (EG(exception)) {",
          "787:     zend_string_release(class_name);",
          "788:     return 0;",
          "789:    }",
          "790:    break;",
          "791:   }",
          "792:   BG(serialize_lock)--;",
          "794:   if (EG(exception)) {",
          "795:    zend_string_release(class_name);",
          "796:    return 0;",
          "797:   }",
          "800:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "801:    incomplete_class = 1;",
          "802:    ce = PHP_IC_ENTRY;",
          "803:    break;",
          "804:   }",
          "807:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "809:   ZVAL_STR_COPY(&args[0], class_name);",
          "810:   BG(serialize_lock)++;",
          "811:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "812:    BG(serialize_lock)--;",
          "813:    if (EG(exception)) {",
          "814:     zend_string_release(class_name);",
          "815:     zval_ptr_dtor(&user_func);",
          "816:     zval_ptr_dtor(&args[0]);",
          "817:     return 0;",
          "818:    }",
          "819:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "820:    incomplete_class = 1;",
          "821:    ce = PHP_IC_ENTRY;",
          "822:    zval_ptr_dtor(&user_func);",
          "823:    zval_ptr_dtor(&args[0]);",
          "824:    break;",
          "825:   }",
          "826:   BG(serialize_lock)--;",
          "827:   zval_ptr_dtor(&retval);",
          "828:   if (EG(exception)) {",
          "829:    zend_string_release(class_name);",
          "830:    zval_ptr_dtor(&user_func);",
          "831:    zval_ptr_dtor(&args[0]);",
          "832:    return 0;",
          "833:   }",
          "836:   BG(serialize_lock)++;",
          "837:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "838:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "839:    incomplete_class = 1;",
          "840:    ce = PHP_IC_ENTRY;",
          "841:   }",
          "842:   BG(serialize_lock)--;",
          "844:   zval_ptr_dtor(&user_func);",
          "845:   zval_ptr_dtor(&args[0]);",
          "846:   break;",
          "847:  } while (1);",
          "851:  if (custom_object) {",
          "852:   int ret;",
          "854:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "856:   if (ret && incomplete_class) {",
          "857:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "859:   zend_string_release(class_name);",
          "860:   return ret;",
          "863:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "865:  if (elements < 0) {",
          "866:     zend_string_release(class_name);",
          "867:     return 0;",
          "870:  if (incomplete_class) {",
          "871:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "873:  zend_string_release(class_name);",
          "875:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "876: }",
          "877: #line 878 \"ext/standard/var_unserializer.c\"",
          "878: yy25:",
          "881:   if (yych != '+') goto yy18;",
          "883:   if (yych <= '-') goto yy26;",
          "885:   if (yych <= '9') goto yy27;",
          "888: yy26:",
          "891:  if (yych >= ':') goto yy18;",
          "892: yy27:",
          "897:  if (yych <= '9') goto yy27;",
          "898:  if (yych >= ';') goto yy18;",
          "900:  if (yych != '\"') goto yy18;",
          "902: #line 793 \"ext/standard/var_unserializer.re\"",
          "903:  {",
          "904:  zend_long elements;",
          "905:     if (!var_hash) return 0;",
          "907:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "908:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "909:   return 0;",
          "910:  }",
          "911:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "912: }",
          "913: #line 914 \"ext/standard/var_unserializer.c\"",
          "914: yy32:",
          "915:  yych = *++YYCURSOR;",
          "916:  if (yych == '+') goto yy33;",
          "920: yy33:",
          "924: yy34:",
          "929:  if (yych <= '9') goto yy34;",
          "930:  if (yych >= ';') goto yy18;",
          "932:  if (yych != '{') goto yy18;",
          "934: #line 769 \"ext/standard/var_unserializer.re\"",
          "935:  {",
          "936:  zend_long elements = parse_iv(start + 2);",
          "939:     if (!var_hash) return 0;",
          "941:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "942:   return 0;",
          "945:  array_init_size(rval, elements);",
          "946:  if (elements) {",
          "949:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "952:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "953:   return 0;",
          "954:  }",
          "956:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "957: }",
          "958: #line 959 \"ext/standard/var_unserializer.c\"",
          "959: yy39:",
          "961:  if (yych == '+') goto yy40;",
          "963:  if (yych <= '9') goto yy41;",
          "965: yy40:",
          "969: yy41:",
          "974:  if (yych <= '9') goto yy41;",
          "975:  if (yych >= ';') goto yy18;",
          "977:  if (yych != '\"') goto yy18;",
          "979: #line 735 \"ext/standard/var_unserializer.re\"",
          "980:  {",
          "981:  size_t len, maxlen;",
          "982:  zend_string *str;",
          "984:  len = parse_uiv(start + 2);",
          "985:  maxlen = max - YYCURSOR;",
          "986:  if (maxlen < len) {",
          "988:   return 0;",
          "989:  }",
          "991:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "992:   return 0;",
          "993:  }",
          "995:  if (*(YYCURSOR) != '\"') {",
          "996:   zend_string_free(str);",
          "998:   return 0;",
          "999:  }",
          "1001:  if (*(YYCURSOR + 1) != ';') {",
          "1002:   efree(str);",
          "1004:   return 0;",
          "1005:  }",
          "1007:  YYCURSOR += 2;",
          "1010:  ZVAL_STR(rval, str);",
          "1011:  return 1;",
          "1012: }",
          "1013: #line 1014 \"ext/standard/var_unserializer.c\"",
          "1014: yy46:",
          "1015:  yych = *++YYCURSOR;",
          "1016:  if (yych == '+') goto yy47;",
          "1018:  if (yych <= '9') goto yy48;",
          "1020: yy47:",
          "1024: yy48:",
          "1029:  if (yych <= '9') goto yy48;",
          "1030:  if (yych >= ';') goto yy18;",
          "1032:  if (yych != '\"') goto yy18;",
          "1034: #line 703 \"ext/standard/var_unserializer.re\"",
          "1036:  size_t len, maxlen;",
          "1037:  char *str;",
          "1039:  len = parse_uiv(start + 2);",
          "1040:  maxlen = max - YYCURSOR;",
          "1041:  if (maxlen < len) {",
          "1046:  str = (char*)YYCURSOR;",
          "1048:  YYCURSOR += len;",
          "1050:  if (*(YYCURSOR) != '\"') {",
          "1052:   return 0;",
          "1055:  if (*(YYCURSOR + 1) != ';') {",
          "1057:   return 0;",
          "1060:  YYCURSOR += 2;",
          "1063:  ZVAL_STRINGL(rval, str, len);",
          "1066: #line 1067 \"ext/standard/var_unserializer.c\"",
          "1067: yy53:",
          "1068:  yych = *++YYCURSOR;",
          "1069:  if (yych <= '/') {",
          "1070:   if (yych <= ',') {",
          "1071:    if (yych == '+') goto yy57;",
          "1072:    goto yy18;",
          "1073:   } else {",
          "1074:    if (yych <= '-') goto yy55;",
          "1075:    if (yych <= '.') goto yy60;",
          "1076:    goto yy18;",
          "1077:   }",
          "1078:  } else {",
          "1079:   if (yych <= 'I') {",
          "1080:    if (yych <= '9') goto yy58;",
          "1081:    if (yych <= 'H') goto yy18;",
          "1082:    goto yy56;",
          "1083:   } else {",
          "1084:    if (yych != 'N') goto yy18;",
          "1085:   }",
          "1086:  }",
          "1088:  if (yych == 'A') goto yy76;",
          "1090: yy55:",
          "1091:  yych = *++YYCURSOR;",
          "1092:  if (yych <= '/') {",
          "1093:   if (yych == '.') goto yy60;",
          "1094:   goto yy18;",
          "1095:  } else {",
          "1096:   if (yych <= '9') goto yy58;",
          "1097:   if (yych != 'I') goto yy18;",
          "1098:  }",
          "1099: yy56:",
          "1101:  if (yych == 'N') goto yy72;",
          "1103: yy57:",
          "1104:  yych = *++YYCURSOR;",
          "1105:  if (yych == '.') goto yy60;",
          "1106:  if (yych <= '/') goto yy18;",
          "1107:  if (yych >= ':') goto yy18;",
          "1108: yy58:",
          "1110:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1111:  yych = *YYCURSOR;",
          "1112:  if (yych <= ':') {",
          "1113:   if (yych <= '.') {",
          "1114:    if (yych <= '-') goto yy18;",
          "1115:    goto yy70;",
          "1116:   } else {",
          "1117:    if (yych <= '/') goto yy18;",
          "1118:    if (yych <= '9') goto yy58;",
          "1119:    goto yy18;",
          "1120:   }",
          "1121:  } else {",
          "1122:   if (yych <= 'E') {",
          "1123:    if (yych <= ';') goto yy63;",
          "1124:    if (yych <= 'D') goto yy18;",
          "1125:    goto yy65;",
          "1126:   } else {",
          "1127:    if (yych == 'e') goto yy65;",
          "1128:    goto yy18;",
          "1129:   }",
          "1130:  }",
          "1131: yy60:",
          "1132:  yych = *++YYCURSOR;",
          "1133:  if (yych <= '/') goto yy18;",
          "1134:  if (yych >= ':') goto yy18;",
          "1135: yy61:",
          "1141:   if (yych <= '9') goto yy61;",
          "1146:    goto yy65;",
          "1148:    if (yych == 'e') goto yy65;",
          "1152: yy63:",
          "1154: #line 694 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1035:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1036:  return 1;",
          "1037: }",
          "1040:  yych = *++YYCURSOR;",
          "1041:  if (yych <= ',') {",
          "1044:  } else {",
          "1046:   if (yych <= '/') goto yy18;",
          "1048:   goto yy18;",
          "1049:  }",
          "1051:  yych = *++YYCURSOR;",
          "1053:  goto yy18;",
          "1055:  yych = *++YYCURSOR;",
          "1057:  goto yy18;",
          "1059:  ++YYCURSOR;",
          "1077:   } else {",
          "1079:   }",
          "1080:  }",
          "1088:  yych = *++YYCURSOR;",
          "1092:  ++YYCURSOR;",
          "1094:  {",
          "1112:  }",
          "1116:  return 1;",
          "1117: }",
          "1120:  yych = *++YYCURSOR;",
          "1122:  goto yy18;",
          "1124:  ++YYCURSOR;",
          "1126:  {",
          "1170:  }",
          "1218:    }",
          "1258:   }",
          "1268:  }",
          "1276: }",
          "1279:  ++YYCURSOR;",
          "1281:  {",
          "1312:  return 1;",
          "1313: }",
          "1316:  ++YYCURSOR;",
          "1318:  {",
          "1340: }",
          "1343:  yych = *++YYCURSOR;",
          "1344:  if (yych <= ',') {",
          "1347:  } else {",
          "1349:   if (yych <= '/') goto yy18;",
          "1351:  }",
          "1353:  ++YYCURSOR;",
          "1354:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1355:  yych = *YYCURSOR;",
          "1356:  if (yych <= '/') goto yy18;",
          "1365:  ++YYCURSOR;",
          "1367:  {",
          "1389:   return 0;",
          "1390:  }",
          "1398:   return 0;",
          "1399:  }",
          "1404:  }",
          "1410:  return 1;",
          "1411: }",
          "1413: yy96:",
          "1414:  yych = *++YYCURSOR;",
          "1415:  if (yych <= '/') goto yy18;",
          "1418: yy97:",
          "1419:  ++YYCURSOR;",
          "1421:  {",
          "1430:  } else {",
          "1432:  }",
          "1434:  return 1;",
          "1435: }",
          "1437: }",
          "1441:  return 0;",
          "",
          "[Removed Lines]",
          "1038: #line 1039 \"ext/standard/var_unserializer.c\"",
          "1039: yy73:",
          "1042:   if (yych == '+') goto yy88;",
          "1043:   goto yy18;",
          "1045:   if (yych <= '-') goto yy88;",
          "1047:   if (yych <= '9') goto yy89;",
          "1050: yy74:",
          "1052:  if (yych == 'F') goto yy91;",
          "1054: yy75:",
          "1056:  if (yych == 'N') goto yy91;",
          "1058: yy76:",
          "1060: #line 653 \"ext/standard/var_unserializer.re\"",
          "1061:  {",
          "1062: #if SIZEOF_ZEND_LONG == 4",
          "1063:  int digits = YYCURSOR - start - 3;",
          "1065:  if (start[2] == '-' || start[2] == '+') {",
          "1066:   digits--;",
          "1067:  }",
          "1070:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1071:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1072:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1074:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1075:     goto use_double;",
          "1076:    }",
          "1078:    goto use_double;",
          "1081: #endif",
          "1083:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1084:  return 1;",
          "1085: }",
          "1086: #line 1087 \"ext/standard/var_unserializer.c\"",
          "1087: yy78:",
          "1089:  if (yych == '\"') goto yy92;",
          "1090:  goto yy18;",
          "1091: yy79:",
          "1093: #line 616 \"ext/standard/var_unserializer.re\"",
          "1095:  zend_long id;",
          "1098:  if (!var_hash) return 0;",
          "1100:  id = parse_iv(start + 2) - 1;",
          "1101:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1102:   return 0;",
          "1103:  }",
          "1105:  if (rval_ref == rval) {",
          "1106:   return 0;",
          "1107:  }",
          "1109:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1110:   ZVAL_UNDEF(rval);",
          "1111:   return 1;",
          "1114:  ZVAL_COPY(rval, rval_ref);",
          "1118: #line 1119 \"ext/standard/var_unserializer.c\"",
          "1119: yy81:",
          "1121:  if (yych == '\"') goto yy94;",
          "1123: yy82:",
          "1125: #line 805 \"ext/standard/var_unserializer.re\"",
          "1127:  size_t len, len2, len3, maxlen;",
          "1128:  zend_long elements;",
          "1129:  char *str;",
          "1130:  zend_string *class_name;",
          "1131:  zend_class_entry *ce;",
          "1132:  int incomplete_class = 0;",
          "1134:  int custom_object = 0;",
          "1136:  zval user_func;",
          "1137:  zval retval;",
          "1138:  zval args[1];",
          "1140:     if (!var_hash) return 0;",
          "1141:  if (*start == 'C') {",
          "1142:   custom_object = 1;",
          "1143:  }",
          "1145:  len2 = len = parse_uiv(start + 2);",
          "1146:  maxlen = max - YYCURSOR;",
          "1147:  if (maxlen < len || len == 0) {",
          "1149:   return 0;",
          "1150:  }",
          "1152:  str = (char*)YYCURSOR;",
          "1154:  YYCURSOR += len;",
          "1156:  if (*(YYCURSOR) != '\"') {",
          "1158:   return 0;",
          "1159:  }",
          "1160:  if (*(YYCURSOR+1) != ':') {",
          "1162:   return 0;",
          "1163:  }",
          "1165:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1166:  if (len3 != len)",
          "1167:  {",
          "1169:   return 0;",
          "1172:  class_name = zend_string_init(str, len, 0);",
          "1174:  do {",
          "1175:   if(!unserialize_allowed_class(class_name, classes)) {",
          "1176:    incomplete_class = 1;",
          "1177:    ce = PHP_IC_ENTRY;",
          "1178:    break;",
          "1179:   }",
          "1182:   BG(serialize_lock)++;",
          "1183:   ce = zend_lookup_class(class_name);",
          "1184:   if (ce) {",
          "1185:    BG(serialize_lock)--;",
          "1186:    if (EG(exception)) {",
          "1187:     zend_string_release(class_name);",
          "1188:     return 0;",
          "1189:    }",
          "1190:    break;",
          "1191:   }",
          "1192:   BG(serialize_lock)--;",
          "1194:   if (EG(exception)) {",
          "1195:    zend_string_release(class_name);",
          "1196:    return 0;",
          "1197:   }",
          "1200:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1201:    incomplete_class = 1;",
          "1202:    ce = PHP_IC_ENTRY;",
          "1203:    break;",
          "1204:   }",
          "1207:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1209:   ZVAL_STR_COPY(&args[0], class_name);",
          "1210:   BG(serialize_lock)++;",
          "1211:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1212:    BG(serialize_lock)--;",
          "1213:    if (EG(exception)) {",
          "1214:     zend_string_release(class_name);",
          "1215:     zval_ptr_dtor(&user_func);",
          "1216:     zval_ptr_dtor(&args[0]);",
          "1217:     return 0;",
          "1219:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1220:    incomplete_class = 1;",
          "1221:    ce = PHP_IC_ENTRY;",
          "1222:    zval_ptr_dtor(&user_func);",
          "1223:    zval_ptr_dtor(&args[0]);",
          "1224:    break;",
          "1225:   }",
          "1226:   BG(serialize_lock)--;",
          "1227:   zval_ptr_dtor(&retval);",
          "1228:   if (EG(exception)) {",
          "1229:    zend_string_release(class_name);",
          "1230:    zval_ptr_dtor(&user_func);",
          "1231:    zval_ptr_dtor(&args[0]);",
          "1232:    return 0;",
          "1233:   }",
          "1236:   BG(serialize_lock)++;",
          "1237:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1238:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1239:    incomplete_class = 1;",
          "1240:    ce = PHP_IC_ENTRY;",
          "1241:   }",
          "1242:   BG(serialize_lock)--;",
          "1244:   zval_ptr_dtor(&user_func);",
          "1245:   zval_ptr_dtor(&args[0]);",
          "1246:   break;",
          "1247:  } while (1);",
          "1251:  if (custom_object) {",
          "1252:   int ret;",
          "1254:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1256:   if (ret && incomplete_class) {",
          "1257:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1259:   zend_string_release(class_name);",
          "1260:   return ret;",
          "1261:  }",
          "1263:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1265:  if (elements < 0) {",
          "1266:     zend_string_release(class_name);",
          "1267:     return 0;",
          "1270:  if (incomplete_class) {",
          "1271:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1272:  }",
          "1273:  zend_string_release(class_name);",
          "1275:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1277: #line 1278 \"ext/standard/var_unserializer.c\"",
          "1278: yy84:",
          "1280: #line 736 \"ext/standard/var_unserializer.re\"",
          "1282:  size_t len, maxlen;",
          "1283:  zend_string *str;",
          "1285:  len = parse_uiv(start + 2);",
          "1286:  maxlen = max - YYCURSOR;",
          "1287:  if (maxlen < len) {",
          "1289:   return 0;",
          "1290:  }",
          "1292:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1293:   return 0;",
          "1294:  }",
          "1296:  if (*(YYCURSOR) != '\"') {",
          "1297:   zend_string_free(str);",
          "1299:   return 0;",
          "1300:  }",
          "1302:  if (*(YYCURSOR + 1) != ';') {",
          "1303:   efree(str);",
          "1305:   return 0;",
          "1306:  }",
          "1308:  YYCURSOR += 2;",
          "1311:  ZVAL_STR(rval, str);",
          "1314: #line 1315 \"ext/standard/var_unserializer.c\"",
          "1315: yy86:",
          "1317: #line 770 \"ext/standard/var_unserializer.re\"",
          "1319:  zend_long elements = parse_iv(start + 2);",
          "1322:     if (!var_hash) return 0;",
          "1324:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "1325:   return 0;",
          "1326:  }",
          "1328:  array_init_size(rval, elements);",
          "1329:  if (elements) {",
          "1332:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1333:  }",
          "1335:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1336:   return 0;",
          "1337:  }",
          "1339:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1341: #line 1342 \"ext/standard/var_unserializer.c\"",
          "1342: yy88:",
          "1345:   if (yych == '+') goto yy96;",
          "1346:   goto yy18;",
          "1348:   if (yych <= '-') goto yy96;",
          "1350:   if (yych >= ':') goto yy18;",
          "1352: yy89:",
          "1357:  if (yych <= '9') goto yy89;",
          "1358:  if (yych == ';') goto yy71;",
          "1359:  goto yy18;",
          "1360: yy91:",
          "1361:  yych = *++YYCURSOR;",
          "1362:  if (yych == ';') goto yy97;",
          "1363:  goto yy18;",
          "1364: yy92:",
          "1366: #line 794 \"ext/standard/var_unserializer.re\"",
          "1368:  zend_long elements;",
          "1369:     if (!var_hash) return 0;",
          "1371:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "1372:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "1373:   return 0;",
          "1374:  }",
          "1375:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1376: }",
          "1377: #line 1378 \"ext/standard/var_unserializer.c\"",
          "1378: yy94:",
          "1379:  ++YYCURSOR;",
          "1380: #line 704 \"ext/standard/var_unserializer.re\"",
          "1381:  {",
          "1382:  size_t len, maxlen;",
          "1383:  char *str;",
          "1385:  len = parse_uiv(start + 2);",
          "1386:  maxlen = max - YYCURSOR;",
          "1387:  if (maxlen < len) {",
          "1392:  str = (char*)YYCURSOR;",
          "1394:  YYCURSOR += len;",
          "1396:  if (*(YYCURSOR) != '\"') {",
          "1401:  if (*(YYCURSOR + 1) != ';') {",
          "1403:   return 0;",
          "1406:  YYCURSOR += 2;",
          "1409:  ZVAL_STRINGL(rval, str, len);",
          "1412: #line 1413 \"ext/standard/var_unserializer.c\"",
          "1416:  if (yych <= '9') goto yy89;",
          "1417:  goto yy18;",
          "1420: #line 679 \"ext/standard/var_unserializer.re\"",
          "1424:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1425:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1426:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1427:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1428:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1429:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1431:   ZVAL_NULL(rval);",
          "1436: #line 1437 \"ext/standard/var_unserializer.c\"",
          "1438: #line 965 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1163: #line 1164 \"ext/standard/var_unserializer.c\"",
          "1164: yy65:",
          "1167:   if (yych != '+') goto yy18;",
          "1169:   if (yych <= '-') goto yy66;",
          "1171:   if (yych <= '9') goto yy67;",
          "1174: yy66:",
          "1176:  if (yych <= ',') {",
          "1177:   if (yych == '+') goto yy69;",
          "1178:   goto yy18;",
          "1179:  } else {",
          "1180:   if (yych <= '-') goto yy69;",
          "1181:   if (yych <= '/') goto yy18;",
          "1182:   if (yych >= ':') goto yy18;",
          "1183:  }",
          "1184: yy67:",
          "1185:  ++YYCURSOR;",
          "1186:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1187:  yych = *YYCURSOR;",
          "1188:  if (yych <= '/') goto yy18;",
          "1189:  if (yych <= '9') goto yy67;",
          "1190:  if (yych == ';') goto yy63;",
          "1192: yy69:",
          "1194:  if (yych <= '/') goto yy18;",
          "1195:  if (yych <= '9') goto yy67;",
          "1197: yy70:",
          "1199:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1200:  yych = *YYCURSOR;",
          "1201:  if (yych <= ';') {",
          "1202:   if (yych <= '/') goto yy18;",
          "1203:   if (yych <= '9') goto yy70;",
          "1204:   if (yych <= ':') goto yy18;",
          "1205:   goto yy63;",
          "1206:  } else {",
          "1207:   if (yych <= 'E') {",
          "1208:    if (yych <= 'D') goto yy18;",
          "1209:    goto yy65;",
          "1211:    if (yych == 'e') goto yy65;",
          "1212:    goto yy18;",
          "1215: yy72:",
          "1217:  if (yych != 'F') goto yy18;",
          "1218: yy73:",
          "1219:  yych = *++YYCURSOR;",
          "1220:  if (yych != ';') goto yy18;",
          "1222: #line 678 \"ext/standard/var_unserializer.re\"",
          "1226:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1227:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1228:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1229:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1230:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1231:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1232:  } else {",
          "1233:   ZVAL_NULL(rval);",
          "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
          "1239: yy76:",
          "1241:  if (yych == 'N') goto yy73;",
          "1243: yy77:",
          "1244:  yych = *++YYCURSOR;",
          "1245:  if (yych <= ',') {",
          "1246:   if (yych != '+') goto yy18;",
          "1247:  } else {",
          "1248:   if (yych <= '-') goto yy78;",
          "1249:   if (yych <= '/') goto yy18;",
          "1250:   if (yych <= '9') goto yy79;",
          "1251:   goto yy18;",
          "1252:  }",
          "1253: yy78:",
          "1254:  yych = *++YYCURSOR;",
          "1255:  if (yych <= '/') goto yy18;",
          "1256:  if (yych >= ':') goto yy18;",
          "1257: yy79:",
          "1259:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1260:  yych = *YYCURSOR;",
          "1261:  if (yych <= '/') goto yy18;",
          "1262:  if (yych <= '9') goto yy79;",
          "1263:  if (yych != ';') goto yy18;",
          "1264:  ++YYCURSOR;",
          "1265: #line 652 \"ext/standard/var_unserializer.re\"",
          "1267: #if SIZEOF_ZEND_LONG == 4",
          "1268:  int digits = YYCURSOR - start - 3;",
          "1270:  if (start[2] == '-' || start[2] == '+') {",
          "1271:   digits--;",
          "1275:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1276:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1277:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1279:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1280:     goto use_double;",
          "1282:   } else {",
          "1283:    goto use_double;",
          "1286: #endif",
          "1288:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1289:  return 1;",
          "1291: #line 1292 \"ext/standard/var_unserializer.c\"",
          "1292: yy83:",
          "1293:  yych = *++YYCURSOR;",
          "1294:  if (yych <= '/') goto yy18;",
          "1295:  if (yych >= '2') goto yy18;",
          "1296:  yych = *++YYCURSOR;",
          "1297:  if (yych != ';') goto yy18;",
          "1299: #line 646 \"ext/standard/var_unserializer.re\"",
          "1302:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1305: #line 1306 \"ext/standard/var_unserializer.c\"",
          "1306: yy87:",
          "1308: #line 640 \"ext/standard/var_unserializer.re\"",
          "1311:  ZVAL_NULL(rval);",
          "1312:  return 1;",
          "1314: #line 1315 \"ext/standard/var_unserializer.c\"",
          "1315: yy89:",
          "1318:   if (yych != '+') goto yy18;",
          "1320:   if (yych <= '-') goto yy90;",
          "1322:   if (yych <= '9') goto yy91;",
          "1323:   goto yy18;",
          "1325: yy90:",
          "1326:  yych = *++YYCURSOR;",
          "1327:  if (yych <= '/') goto yy18;",
          "1328:  if (yych >= ':') goto yy18;",
          "1329: yy91:",
          "1334:  if (yych <= '9') goto yy91;",
          "1335:  if (yych != ';') goto yy18;",
          "1337: #line 615 \"ext/standard/var_unserializer.re\"",
          "1339:  zend_long id;",
          "1342:  if (!var_hash) return 0;",
          "1344:  id = parse_iv(start + 2) - 1;",
          "1345:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1349:  if (rval_ref == rval) {",
          "1353:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1354:   ZVAL_UNDEF(rval);",
          "1355:   return 1;",
          "1358:  ZVAL_COPY(rval, rval_ref);",
          "1362: #line 1363 \"ext/standard/var_unserializer.c\"",
          "1363: yy95:",
          "1364:  yych = *++YYCURSOR;",
          "1365:  if (yych <= ',') {",
          "1366:   if (yych != '+') goto yy18;",
          "1367:  } else {",
          "1368:   if (yych <= '-') goto yy96;",
          "1369:   if (yych <= '/') goto yy18;",
          "1370:   if (yych <= '9') goto yy97;",
          "1371:   goto yy18;",
          "1372:  }",
          "1376:  if (yych >= ':') goto yy18;",
          "1379:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1380:  yych = *YYCURSOR;",
          "1381:  if (yych <= '/') goto yy18;",
          "1382:  if (yych <= '9') goto yy97;",
          "1383:  if (yych != ';') goto yy18;",
          "1384:  ++YYCURSOR;",
          "1385: #line 589 \"ext/standard/var_unserializer.re\"",
          "1387:  zend_long id;",
          "1390:  if (!var_hash) return 0;",
          "1392:  id = parse_iv(start + 2) - 1;",
          "1393:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1394:   return 0;",
          "1395:  }",
          "1397:  zval_ptr_dtor(rval);",
          "1398:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1399:   ZVAL_UNDEF(rval);",
          "1400:   return 1;",
          "1401:  }",
          "1402:  if (Z_ISREF_P(rval_ref)) {",
          "1403:   ZVAL_COPY(rval, rval_ref);",
          "1405:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1406:   ZVAL_COPY(rval, rval_ref);",
          "1411: #line 1412 \"ext/standard/var_unserializer.c\"",
          "1413: #line 964 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "433: static inline int finish_nested_data(UNSERIALIZE_PARAMETER)",
          "434: {",
          "442: }",
          "444: static inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "",
          "[Removed Lines]",
          "435:  if (*((*p)++) == '}')",
          "436:   return 1;",
          "438: #if SOMETHING_NEW_MIGHT_LEAD_TO_CRASH_ENABLE_IF_YOU_ARE_BRAVE",
          "439:  zval_ptr_dtor(rval);",
          "440: #endif",
          "441:  return 0;",
          "",
          "[Added Lines]",
          "435:  if (*p >= max || **p != '}') {",
          "436:   return 0;",
          "437:  }",
          "439:  (*p)++;",
          "440:  return 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0426b916df396a23e5c34514e4f2f0627efdcdf0",
      "candidate_info": {
        "commit_hash": "0426b916df396a23e5c34514e4f2f0627efdcdf0",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/0426b916df396a23e5c34514e4f2f0627efdcdf0",
        "files": [
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Implement delayed __wakeup",
        "before_after_code_files": [
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define VAR_ENTRIES_MAX 1024",
          "29: #define VAR_ENTRIES_DBG 0",
          "31: typedef struct {",
          "32:  zval *data[VAR_ENTRIES_MAX];",
          "33:  long used_slots;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: #define VAR_WAKEUP_FLAG 1",
          "32: #define WITH_WAKEUP_FLAG(zv_ptr) ((zval *) ((zend_uintptr_t) zv_ptr | VAR_WAKEUP_FLAG))",
          "33: #define WITHOUT_WAKEUP_FLAG(zv_ptr) ((zval *) ((zend_uintptr_t) zv_ptr & ~VAR_WAKEUP_FLAG))",
          "34: #define HAS_WAKEUP_FLAG(zv_ptr) ((zend_uintptr_t) zv_ptr & VAR_WAKEUP_FLAG)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:  var_hash->data[var_hash->used_slots++] = *rval;",
          "59: }",
          "62: {",
          "63:  var_entries *var_hash;",
          "65:  if (!var_hashx || !*var_hashx) {",
          "67:  }",
          "69:  var_hash = (*var_hashx)->last_dtor;",
          "",
          "[Removed Lines]",
          "61: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hashx, zval **rval)",
          "66:   return;",
          "",
          "[Added Lines]",
          "66: static inline zval **get_var_push_dtor_slot(php_unserialize_data_t *var_hashx)",
          "71:   return NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "85:   (*var_hashx)->last_dtor = var_hash;",
          "86:  }",
          "88:  Z_ADDREF_PP(rval);",
          "90: }",
          "92: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval **rval)",
          "",
          "[Removed Lines]",
          "89:  var_hash->data[var_hash->used_slots++] = *rval;",
          "",
          "[Added Lines]",
          "93:  return &var_hash->data[var_hash->used_slots++];",
          "94: }",
          "96: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hashx, zval **rval)",
          "97: {",
          "98:  zval **slot = get_var_push_dtor_slot(var_hashx);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "164:  void *next;",
          "165:  long i;",
          "166:  var_entries *var_hash = (*var_hashx)->first;",
          "167: #if VAR_ENTRIES_DBG",
          "168:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "169: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178:  zend_bool wakeup_failed = 0;",
          "179:  TSRMLS_FETCH();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "179:  while (var_hash) {",
          "180:   for (i = 0; i < var_hash->used_slots; i++) {",
          "181: #if VAR_ENTRIES_DBG",
          "182:     fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_hash->data[i], Z_REFCOUNT_P(var_hash->data[i]));",
          "183: #endif",
          "185:   }",
          "186:   next = var_hash->next;",
          "187:   efree(var_hash);",
          "",
          "[Removed Lines]",
          "184:    zval_ptr_dtor(&var_hash->data[i]);",
          "",
          "[Added Lines]",
          "195:    zval *zv = var_hash->data[i];",
          "200:    if (HAS_WAKEUP_FLAG(zv)) {",
          "201:     zv = WITHOUT_WAKEUP_FLAG(zv);",
          "202:     if (!wakeup_failed) {",
          "203:      zval *retval_ptr = NULL;",
          "204:      zval wakeup_name;",
          "205:      INIT_PZVAL(&wakeup_name);",
          "206:      ZVAL_STRINGL(&wakeup_name, \"__wakeup\", sizeof(\"__wakeup\") - 1, 0);",
          "208:      BG(serialize_lock)++;",
          "209:      if (call_user_function_ex(CG(function_table), &zv, &wakeup_name, &retval_ptr, 0, 0, 1, NULL TSRMLS_CC) == FAILURE || retval_ptr == NULL) {",
          "210:       wakeup_failed = 1;",
          "211:       zend_object_store_ctor_failed(zv TSRMLS_CC);",
          "212:      }",
          "213:      BG(serialize_lock)--;",
          "215:      if (retval_ptr) {",
          "216:       zval_ptr_dtor(&retval_ptr);",
          "217:      }",
          "218:     } else {",
          "219:      zend_object_store_ctor_failed(zv TSRMLS_CC);",
          "220:     }",
          "221:    }",
          "223:    zval_ptr_dtor(&zv);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "241: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "244: #line 249 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "283: #line 288 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "431: #endif",
          "432: static inline int object_common2(UNSERIALIZE_PARAMETER, long elements)",
          "433: {",
          "437:  if (Z_TYPE_PP(rval) != IS_OBJECT) {",
          "438:   return 0;",
          "439:  }",
          "441:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_OBJPROP_PP(rval), elements, 1)) {",
          "447:      ZVAL_NULL(*rval);",
          "448:   return 0;",
          "449:  }",
          "",
          "[Removed Lines]",
          "434:  zval *retval_ptr = NULL;",
          "435:  zval fname;",
          "443:      if(Z_TYPE_PP(rval) == IS_OBJECT) {",
          "444:         zend_hash_clean(Z_OBJPROP_PP(rval));",
          "445:         zend_object_store_ctor_failed(*rval TSRMLS_CC);",
          "446:      }",
          "",
          "[Added Lines]",
          "479:   if (Z_TYPE_PP(rval) == IS_OBJECT) {",
          "480:    zend_hash_clean(Z_OBJPROP_PP(rval));",
          "481:    zend_object_store_ctor_failed(*rval TSRMLS_CC);",
          "482:   }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "453:     }",
          "455:  if (Z_OBJCE_PP(rval) != PHP_IC_ENTRY &&",
          "470:  }",
          "472:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "456:   zend_hash_exists(&Z_OBJCE_PP(rval)->function_table, \"__wakeup\", sizeof(\"__wakeup\"))) {",
          "457:   INIT_PZVAL(&fname);",
          "458:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1, 0);",
          "459:   BG(serialize_lock)++;",
          "460:   call_user_function_ex(CG(function_table), rval, &fname, &retval_ptr, 0, 0, 1, NULL TSRMLS_CC);",
          "461:   BG(serialize_lock)--;",
          "462:  }",
          "464:  if (retval_ptr) {",
          "465:   zval_ptr_dtor(&retval_ptr);",
          "466:  }",
          "468:  if (EG(exception)) {",
          "469:   return 0;",
          "",
          "[Added Lines]",
          "492:   zend_hash_exists(&Z_OBJCE_PP(rval)->function_table, \"__wakeup\", sizeof(\"__wakeup\"))",
          "493:  ) {",
          "495:   zval **slot = get_var_push_dtor_slot(var_hash);",
          "496:   zval *zv = *rval;",
          "497:   Z_ADDREF_P(zv);",
          "498:   if (PZVAL_IS_REF(zv)) {",
          "499:    SEPARATE_ZVAL(&zv);",
          "500:   }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "501: {",
          "502:  YYCTYPE yych;",
          "503:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "500: #line 501 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "532: #line 533 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "534:     0,   0,   0,   0,   0,   0,   0,   0,",
          "535:     0,   0,   0,   0,   0,   0,   0,   0,",
          "536:  };",
          "538:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "539:  yych = *YYCURSOR;",
          "540:  switch (yych) {",
          "541:  case 'C':",
          "543:  case 'N': goto yy5;",
          "550:  case 'o': goto yy12;",
          "555:  }",
          "556: yy2:",
          "559: yy3:",
          "561:  { return 0; }",
          "563: yy4:",
          "564:  yych = *(YYMARKER = ++YYCURSOR);",
          "566:  goto yy3;",
          "567: yy5:",
          "568:  yych = *++YYCURSOR;",
          "570:  goto yy3;",
          "571: yy6:",
          "572:  yych = *(YYMARKER = ++YYCURSOR);",
          "574:  goto yy3;",
          "575: yy7:",
          "576:  yych = *(YYMARKER = ++YYCURSOR);",
          "578:  goto yy3;",
          "579: yy8:",
          "580:  yych = *(YYMARKER = ++YYCURSOR);",
          "582:  goto yy3;",
          "583: yy9:",
          "584:  yych = *(YYMARKER = ++YYCURSOR);",
          "586:  goto yy3;",
          "587: yy10:",
          "588:  yych = *(YYMARKER = ++YYCURSOR);",
          "590:  goto yy3;",
          "591: yy11:",
          "592:  yych = *(YYMARKER = ++YYCURSOR);",
          "594:  goto yy3;",
          "595: yy12:",
          "596:  yych = *(YYMARKER = ++YYCURSOR);",
          "598:  goto yy3;",
          "599: yy13:",
          "600:  yych = *(YYMARKER = ++YYCURSOR);",
          "602:  goto yy3;",
          "603: yy14:",
          "604:  ++YYCURSOR;",
          "606:  {",
          "608:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
          "610: }",
          "615: yy17:",
          "616:  yych = *++YYCURSOR;",
          "617:  if (yybm[0+yych] & 128) {",
          "619:  }",
          "621: yy18:",
          "622:  YYCURSOR = YYMARKER;",
          "623:  goto yy3;",
          "624: yy19:",
          "625:  yych = *++YYCURSOR;",
          "628:  }",
          "629:  goto yy18;",
          "637:  if (yych <= '/') goto yy18;",
          "639:  yych = *++YYCURSOR;",
          "756:   } else {",
          "760:   }",
          "777:   }",
          "780:  }",
          "787:  }",
          "791:  }",
          "798:  yych = *++YYCURSOR;",
          "799:  if (yych <= ',') {",
          "801:  } else {",
          "803:   if (yych <= '/') goto yy18;",
          "805:   goto yy18;",
          "806:  }",
          "808:  yych = *++YYCURSOR;",
          "809:  if (yych <= '/') goto yy18;",
          "812:  ++YYCURSOR;",
          "813:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "814:  yych = *YYCURSOR;",
          "815:  if (yych <= '/') goto yy18;",
          "818:  yych = *++YYCURSOR;",
          "820:  ++YYCURSOR;",
          "838:  if (yych <= '/') goto yy18;",
          "839:  if (yych <= '9') goto yy34;",
          "840:  goto yy18;",
          "842:  yych = *++YYCURSOR;",
          "843:  if (yych <= '/') goto yy18;",
          "844:  if (yych >= ':') goto yy18;",
          "846:  ++YYCURSOR;",
          "847:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "848:  yych = *YYCURSOR;",
          "849:  if (yych <= '/') goto yy18;",
          "852:  yych = *++YYCURSOR;",
          "854:  ++YYCURSOR;",
          "864:  }",
          "872:  }",
          "878:  yych = *++YYCURSOR;",
          "880:  if (yych <= '/') goto yy18;",
          "882:  goto yy18;",
          "884:  yych = *++YYCURSOR;",
          "885:  if (yych <= '/') goto yy18;",
          "886:  if (yych >= ':') goto yy18;",
          "888:  ++YYCURSOR;",
          "889:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "890:  yych = *YYCURSOR;",
          "891:  if (yych <= '/') goto yy18;",
          "894:  yych = *++YYCURSOR;",
          "896:  ++YYCURSOR;",
          "936:  if (yych <= '/') goto yy18;",
          "938:  goto yy18;",
          "940:  yych = *++YYCURSOR;",
          "941:  if (yych <= '/') goto yy18;",
          "942:  if (yych >= ':') goto yy18;",
          "944:  ++YYCURSOR;",
          "945:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "946:  yych = *YYCURSOR;",
          "947:  if (yych <= '/') goto yy18;",
          "950:  yych = *++YYCURSOR;",
          "952:  ++YYCURSOR;",
          "954:  {",
          "971:   return 0;",
          "972:  }",
          "977:  }",
          "984:  return 1;",
          "985: }",
          "1007:  yych = *++YYCURSOR;",
          "1009:  goto yy18;",
          "1020:  yych = *++YYCURSOR;",
          "1022:  goto yy18;",
          "1029:  ++YYCURSOR;",
          "1056:  ++YYCURSOR;",
          "1057:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1058:  yych = *YYCURSOR;",
          "1059:  if (yych <= ';') {",
          "1060:   if (yych <= '/') goto yy18;",
          "1062:   if (yych <= ':') goto yy18;",
          "1063:  } else {",
          "1064:   if (yych <= 'E') {",
          "1065:    if (yych <= 'D') goto yy18;",
          "1067:   } else {",
          "1069:    goto yy18;",
          "1070:   }",
          "1071:  }",
          "1073:  ++YYCURSOR;",
          "1075:  {",
          "1076: #if SIZEOF_LONG == 4",
          "1077: use_double:",
          "",
          "[Removed Lines]",
          "542:  case 'O': goto yy13;",
          "544:  case 'R': goto yy2;",
          "545:  case 'S': goto yy10;",
          "546:  case 'a': goto yy11;",
          "547:  case 'b': goto yy6;",
          "548:  case 'd': goto yy8;",
          "549:  case 'i': goto yy7;",
          "551:  case 'r': goto yy4;",
          "552:  case 's': goto yy9;",
          "553:  case '}': goto yy14;",
          "554:  default: goto yy16;",
          "557:  yych = *(YYMARKER = ++YYCURSOR);",
          "558:  if (yych == ':') goto yy95;",
          "560: #line 877 \"ext/standard/var_unserializer.re\"",
          "562: #line 563 \"ext/standard/var_unserializer.c\"",
          "565:  if (yych == ':') goto yy89;",
          "569:  if (yych == ';') goto yy87;",
          "573:  if (yych == ':') goto yy83;",
          "577:  if (yych == ':') goto yy77;",
          "581:  if (yych == ':') goto yy53;",
          "585:  if (yych == ':') goto yy46;",
          "589:  if (yych == ':') goto yy39;",
          "593:  if (yych == ':') goto yy32;",
          "597:  if (yych == ':') goto yy25;",
          "601:  if (yych == ':') goto yy17;",
          "605: #line 871 \"ext/standard/var_unserializer.re\"",
          "611: #line 612 \"ext/standard/var_unserializer.c\"",
          "612: yy16:",
          "613:  yych = *++YYCURSOR;",
          "614:  goto yy3;",
          "618:   goto yy20;",
          "620:  if (yych == '+') goto yy19;",
          "626:  if (yybm[0+yych] & 128) {",
          "627:   goto yy20;",
          "630: yy20:",
          "631:  ++YYCURSOR;",
          "632:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "633:  yych = *YYCURSOR;",
          "634:  if (yybm[0+yych] & 128) {",
          "635:   goto yy20;",
          "636:  }",
          "638:  if (yych >= ';') goto yy18;",
          "640:  if (yych != '\"') goto yy18;",
          "641:  ++YYCURSOR;",
          "642: #line 717 \"ext/standard/var_unserializer.re\"",
          "643:  {",
          "644:  size_t len, len2, len3, maxlen;",
          "645:  long elements;",
          "646:  char *class_name;",
          "647:  zend_class_entry *ce;",
          "648:  zend_class_entry **pce;",
          "649:  int incomplete_class = 0;",
          "651:  int custom_object = 0;",
          "653:  zval *user_func;",
          "654:  zval *retval_ptr;",
          "655:  zval **args[1];",
          "656:  zval *arg_func_name;",
          "658:     if (!var_hash) return 0;",
          "659:  if (*start == 'C') {",
          "660:   custom_object = 1;",
          "661:  }",
          "663:  INIT_PZVAL(*rval);",
          "664:  len2 = len = parse_uiv(start + 2);",
          "665:  maxlen = max - YYCURSOR;",
          "666:  if (maxlen < len || len == 0) {",
          "668:   return 0;",
          "669:  }",
          "671:  class_name = (char*)YYCURSOR;",
          "673:  YYCURSOR += len;",
          "675:  if (*(YYCURSOR) != '\"') {",
          "677:   return 0;",
          "678:  }",
          "679:  if (*(YYCURSOR+1) != ':') {",
          "681:   return 0;",
          "682:  }",
          "684:  len3 = strspn(class_name, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "685:  if (len3 != len)",
          "686:  {",
          "688:   return 0;",
          "689:  }",
          "691:  class_name = estrndup(class_name, len);",
          "693:  do {",
          "695:   BG(serialize_lock)++;",
          "696:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "697:    BG(serialize_lock)--;",
          "698:    if (EG(exception)) {",
          "699:     efree(class_name);",
          "700:     return 0;",
          "701:    }",
          "702:    ce = *pce;",
          "703:    break;",
          "704:   }",
          "705:   BG(serialize_lock)--;",
          "707:   if (EG(exception)) {",
          "708:    efree(class_name);",
          "709:    return 0;",
          "710:   }",
          "713:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "714:    incomplete_class = 1;",
          "715:    ce = PHP_IC_ENTRY;",
          "716:    break;",
          "717:   }",
          "720:   MAKE_STD_ZVAL(user_func);",
          "721:   ZVAL_STRING(user_func, PG(unserialize_callback_func), 1);",
          "722:   args[0] = &arg_func_name;",
          "723:   MAKE_STD_ZVAL(arg_func_name);",
          "724:   ZVAL_STRING(arg_func_name, class_name, 1);",
          "725:   BG(serialize_lock)++;",
          "726:   if (call_user_function_ex(CG(function_table), NULL, user_func, &retval_ptr, 1, args, 0, NULL TSRMLS_CC) != SUCCESS) {",
          "727:    BG(serialize_lock)--;",
          "728:    if (EG(exception)) {",
          "729:     efree(class_name);",
          "730:     zval_ptr_dtor(&user_func);",
          "731:     zval_ptr_dtor(&arg_func_name);",
          "732:     return 0;",
          "733:    }",
          "734:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"defined (%s) but not found\", user_func->value.str.val);",
          "735:    incomplete_class = 1;",
          "736:    ce = PHP_IC_ENTRY;",
          "737:    zval_ptr_dtor(&user_func);",
          "738:    zval_ptr_dtor(&arg_func_name);",
          "739:    break;",
          "740:   }",
          "741:   BG(serialize_lock)--;",
          "742:   if (retval_ptr) {",
          "743:    zval_ptr_dtor(&retval_ptr);",
          "744:   }",
          "745:   if (EG(exception)) {",
          "746:    efree(class_name);",
          "747:    zval_ptr_dtor(&user_func);",
          "748:    zval_ptr_dtor(&arg_func_name);",
          "749:    return 0;",
          "750:   }",
          "753:   BG(serialize_lock)++;",
          "754:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "755:    ce = *pce;",
          "757:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Function %s() hasn't defined the class it was called for\", user_func->value.str.val);",
          "758:    incomplete_class = 1;",
          "759:    ce = PHP_IC_ENTRY;",
          "761:   BG(serialize_lock)--;",
          "763:   zval_ptr_dtor(&user_func);",
          "764:   zval_ptr_dtor(&arg_func_name);",
          "765:   break;",
          "766:  } while (1);",
          "770:  if (custom_object) {",
          "771:   int ret;",
          "773:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "775:   if (ret && incomplete_class) {",
          "776:    php_store_class_name(*rval, class_name, len2);",
          "778:   efree(class_name);",
          "779:   return ret;",
          "782:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "784:  if (elements < 0) {",
          "785:     efree(class_name);",
          "786:     return 0;",
          "789:  if (incomplete_class) {",
          "790:   php_store_class_name(*rval, class_name, len2);",
          "792:  efree(class_name);",
          "794:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "795: }",
          "796: #line 797 \"ext/standard/var_unserializer.c\"",
          "797: yy25:",
          "800:   if (yych != '+') goto yy18;",
          "802:   if (yych <= '-') goto yy26;",
          "804:   if (yych <= '9') goto yy27;",
          "807: yy26:",
          "810:  if (yych >= ':') goto yy18;",
          "811: yy27:",
          "816:  if (yych <= '9') goto yy27;",
          "817:  if (yych >= ';') goto yy18;",
          "819:  if (yych != '\"') goto yy18;",
          "821: #line 704 \"ext/standard/var_unserializer.re\"",
          "822:  {",
          "823:  long elements;",
          "824:     if (!var_hash) return 0;",
          "826:  INIT_PZVAL(*rval);",
          "828:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "829:  if (elements < 0) {",
          "830:   return 0;",
          "831:  }",
          "832:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "833: }",
          "834: #line 835 \"ext/standard/var_unserializer.c\"",
          "835: yy32:",
          "836:  yych = *++YYCURSOR;",
          "837:  if (yych == '+') goto yy33;",
          "841: yy33:",
          "845: yy34:",
          "850:  if (yych <= '9') goto yy34;",
          "851:  if (yych >= ';') goto yy18;",
          "853:  if (yych != '{') goto yy18;",
          "855: #line 683 \"ext/standard/var_unserializer.re\"",
          "856:  {",
          "857:  long elements = parse_iv(start + 2);",
          "860:     if (!var_hash) return 0;",
          "862:  if (elements < 0) {",
          "863:   return 0;",
          "866:  INIT_PZVAL(*rval);",
          "868:  array_init_size(*rval, elements);",
          "870:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_PP(rval), elements, 0)) {",
          "871:   return 0;",
          "874:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "875: }",
          "876: #line 877 \"ext/standard/var_unserializer.c\"",
          "877: yy39:",
          "879:  if (yych == '+') goto yy40;",
          "881:  if (yych <= '9') goto yy41;",
          "883: yy40:",
          "887: yy41:",
          "892:  if (yych <= '9') goto yy41;",
          "893:  if (yych >= ';') goto yy18;",
          "895:  if (yych != '\"') goto yy18;",
          "897: #line 648 \"ext/standard/var_unserializer.re\"",
          "898:  {",
          "899:  size_t len, maxlen;",
          "900:  char *str;",
          "902:  len = parse_uiv(start + 2);",
          "903:  maxlen = max - YYCURSOR;",
          "904:  if (maxlen < len) {",
          "906:   return 0;",
          "907:  }",
          "909:  if ((str = unserialize_str(&YYCURSOR, &len, maxlen)) == NULL) {",
          "910:   return 0;",
          "911:  }",
          "913:  if (*(YYCURSOR) != '\"') {",
          "914:   efree(str);",
          "916:   return 0;",
          "917:  }",
          "919:  if (*(YYCURSOR + 1) != ';') {",
          "920:   efree(str);",
          "922:   return 0;",
          "923:  }",
          "925:  YYCURSOR += 2;",
          "928:  INIT_PZVAL(*rval);",
          "929:  ZVAL_STRINGL(*rval, str, len, 0);",
          "930:  return 1;",
          "931: }",
          "932: #line 933 \"ext/standard/var_unserializer.c\"",
          "933: yy46:",
          "934:  yych = *++YYCURSOR;",
          "935:  if (yych == '+') goto yy47;",
          "937:  if (yych <= '9') goto yy48;",
          "939: yy47:",
          "943: yy48:",
          "948:  if (yych <= '9') goto yy48;",
          "949:  if (yych >= ';') goto yy18;",
          "951:  if (yych != '\"') goto yy18;",
          "953: #line 615 \"ext/standard/var_unserializer.re\"",
          "955:  size_t len, maxlen;",
          "956:  char *str;",
          "958:  len = parse_uiv(start + 2);",
          "959:  maxlen = max - YYCURSOR;",
          "960:  if (maxlen < len) {",
          "962:   return 0;",
          "963:  }",
          "965:  str = (char*)YYCURSOR;",
          "967:  YYCURSOR += len;",
          "969:  if (*(YYCURSOR) != '\"') {",
          "974:  if (*(YYCURSOR + 1) != ';') {",
          "976:   return 0;",
          "979:  YYCURSOR += 2;",
          "982:  INIT_PZVAL(*rval);",
          "983:  ZVAL_STRINGL(*rval, str, len, 1);",
          "986: #line 987 \"ext/standard/var_unserializer.c\"",
          "987: yy53:",
          "988:  yych = *++YYCURSOR;",
          "989:  if (yych <= '/') {",
          "990:   if (yych <= ',') {",
          "991:    if (yych == '+') goto yy57;",
          "992:    goto yy18;",
          "993:   } else {",
          "994:    if (yych <= '-') goto yy55;",
          "995:    if (yych <= '.') goto yy60;",
          "996:    goto yy18;",
          "997:   }",
          "998:  } else {",
          "999:   if (yych <= 'I') {",
          "1000:    if (yych <= '9') goto yy58;",
          "1001:    if (yych <= 'H') goto yy18;",
          "1002:    goto yy56;",
          "1003:   } else {",
          "1004:    if (yych != 'N') goto yy18;",
          "1005:   }",
          "1006:  }",
          "1008:  if (yych == 'A') goto yy76;",
          "1010: yy55:",
          "1011:  yych = *++YYCURSOR;",
          "1012:  if (yych <= '/') {",
          "1013:   if (yych == '.') goto yy60;",
          "1014:   goto yy18;",
          "1015:  } else {",
          "1016:   if (yych <= '9') goto yy58;",
          "1017:   if (yych != 'I') goto yy18;",
          "1018:  }",
          "1019: yy56:",
          "1021:  if (yych == 'N') goto yy72;",
          "1023: yy57:",
          "1024:  yych = *++YYCURSOR;",
          "1025:  if (yych == '.') goto yy60;",
          "1026:  if (yych <= '/') goto yy18;",
          "1027:  if (yych >= ':') goto yy18;",
          "1028: yy58:",
          "1030:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1031:  yych = *YYCURSOR;",
          "1032:  if (yych <= ':') {",
          "1033:   if (yych <= '.') {",
          "1034:    if (yych <= '-') goto yy18;",
          "1035:    goto yy70;",
          "1036:   } else {",
          "1037:    if (yych <= '/') goto yy18;",
          "1038:    if (yych <= '9') goto yy58;",
          "1039:    goto yy18;",
          "1040:   }",
          "1041:  } else {",
          "1042:   if (yych <= 'E') {",
          "1043:    if (yych <= ';') goto yy63;",
          "1044:    if (yych <= 'D') goto yy18;",
          "1045:    goto yy65;",
          "1046:   } else {",
          "1047:    if (yych == 'e') goto yy65;",
          "1048:    goto yy18;",
          "1049:   }",
          "1050:  }",
          "1051: yy60:",
          "1052:  yych = *++YYCURSOR;",
          "1053:  if (yych <= '/') goto yy18;",
          "1054:  if (yych >= ':') goto yy18;",
          "1055: yy61:",
          "1061:   if (yych <= '9') goto yy61;",
          "1066:    goto yy65;",
          "1068:    if (yych == 'e') goto yy65;",
          "1072: yy63:",
          "1074: #line 605 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "573:  case 'O': goto yy4;",
          "575:  case 'R': goto yy6;",
          "576:  case 'S': goto yy7;",
          "577:  case 'a': goto yy8;",
          "578:  case 'b': goto yy9;",
          "579:  case 'd': goto yy10;",
          "580:  case 'i': goto yy11;",
          "582:  case 'r': goto yy13;",
          "583:  case 's': goto yy14;",
          "584:  case '}': goto yy15;",
          "585:  default: goto yy2;",
          "588:  ++YYCURSOR;",
          "590: #line 909 \"ext/standard/var_unserializer.re\"",
          "592: #line 593 \"ext/standard/var_unserializer.c\"",
          "595:  if (yych == ':') goto yy17;",
          "599:  if (yych == ';') goto yy19;",
          "603:  if (yych == ':') goto yy21;",
          "607:  if (yych == ':') goto yy22;",
          "611:  if (yych == ':') goto yy23;",
          "615:  if (yych == ':') goto yy24;",
          "619:  if (yych == ':') goto yy25;",
          "623:  if (yych == ':') goto yy26;",
          "627:  if (yych == ':') goto yy27;",
          "631:  if (yych == ':') goto yy28;",
          "634:  yych = *(YYMARKER = ++YYCURSOR);",
          "635:  if (yych == ':') goto yy29;",
          "636:  goto yy3;",
          "637: yy15:",
          "639: #line 903 \"ext/standard/var_unserializer.re\"",
          "645: #line 646 \"ext/standard/var_unserializer.c\"",
          "649:   goto yy31;",
          "651:  if (yych == '+') goto yy30;",
          "656:  ++YYCURSOR;",
          "657: #line 581 \"ext/standard/var_unserializer.re\"",
          "658:  {",
          "660:  INIT_PZVAL(*rval);",
          "661:  ZVAL_NULL(*rval);",
          "662:  return 1;",
          "663: }",
          "664: #line 665 \"ext/standard/var_unserializer.c\"",
          "665: yy21:",
          "667:  if (yych <= ',') {",
          "668:   if (yych == '+') goto yy33;",
          "669:   goto yy18;",
          "670:  } else {",
          "671:   if (yych <= '-') goto yy33;",
          "672:   if (yych <= '/') goto yy18;",
          "673:   if (yych <= '9') goto yy34;",
          "674:   goto yy18;",
          "676: yy22:",
          "677:  yych = *++YYCURSOR;",
          "678:  if (yych == '+') goto yy36;",
          "679:  if (yych <= '/') goto yy18;",
          "680:  if (yych <= '9') goto yy37;",
          "682: yy23:",
          "683:  yych = *++YYCURSOR;",
          "684:  if (yych == '+') goto yy39;",
          "686:  if (yych <= '9') goto yy40;",
          "687:  goto yy18;",
          "688: yy24:",
          "690:  if (yych <= '/') goto yy18;",
          "691:  if (yych <= '1') goto yy42;",
          "692:  goto yy18;",
          "693: yy25:",
          "694:  yych = *++YYCURSOR;",
          "695:  if (yych <= '/') {",
          "696:   if (yych <= ',') {",
          "697:    if (yych == '+') goto yy43;",
          "698:    goto yy18;",
          "700:    if (yych <= '-') goto yy44;",
          "701:    if (yych <= '.') goto yy45;",
          "702:    goto yy18;",
          "704:  } else {",
          "705:   if (yych <= 'I') {",
          "706:    if (yych <= '9') goto yy46;",
          "707:    if (yych <= 'H') goto yy18;",
          "708:    goto yy48;",
          "709:   } else {",
          "710:    if (yych == 'N') goto yy49;",
          "711:    goto yy18;",
          "714: yy26:",
          "715:  yych = *++YYCURSOR;",
          "716:  if (yych <= ',') {",
          "717:   if (yych == '+') goto yy50;",
          "718:   goto yy18;",
          "719:  } else {",
          "720:   if (yych <= '-') goto yy50;",
          "721:   if (yych <= '/') goto yy18;",
          "722:   if (yych <= '9') goto yy51;",
          "723:   goto yy18;",
          "725: yy27:",
          "726:  yych = *++YYCURSOR;",
          "727:  if (yych <= ',') {",
          "728:   if (yych == '+') goto yy53;",
          "729:   goto yy18;",
          "730:  } else {",
          "731:   if (yych <= '-') goto yy53;",
          "732:   if (yych <= '/') goto yy18;",
          "733:   if (yych <= '9') goto yy54;",
          "734:   goto yy18;",
          "736: yy28:",
          "739:   if (yych == '+') goto yy56;",
          "740:   goto yy18;",
          "742:   if (yych <= '-') goto yy56;",
          "744:   if (yych <= '9') goto yy57;",
          "747: yy29:",
          "749:  if (yych == '+') goto yy59;",
          "751:  if (yych <= '9') goto yy60;",
          "752:  goto yy18;",
          "753: yy30:",
          "754:  yych = *++YYCURSOR;",
          "755:  if (yybm[0+yych] & 128) {",
          "756:   goto yy31;",
          "757:  }",
          "758:  goto yy18;",
          "759: yy31:",
          "763:  if (yybm[0+yych] & 128) {",
          "764:   goto yy31;",
          "765:  }",
          "767:  if (yych <= ':') goto yy62;",
          "768:  goto yy18;",
          "769: yy33:",
          "771:  if (yych <= '/') goto yy18;",
          "772:  if (yych >= ':') goto yy18;",
          "773: yy34:",
          "775:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "776:  yych = *YYCURSOR;",
          "779:  if (yych == ';') goto yy63;",
          "781: yy36:",
          "785: yy37:",
          "790:  if (yych <= '9') goto yy37;",
          "791:  if (yych <= ':') goto yy65;",
          "792:  goto yy18;",
          "793: yy39:",
          "795:  if (yych <= '/') goto yy18;",
          "796:  if (yych >= ':') goto yy18;",
          "797: yy40:",
          "799:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "800:  yych = *YYCURSOR;",
          "801:  if (yych <= '/') goto yy18;",
          "802:  if (yych <= '9') goto yy40;",
          "803:  if (yych <= ':') goto yy66;",
          "804:  goto yy18;",
          "805: yy42:",
          "806:  yych = *++YYCURSOR;",
          "807:  if (yych == ';') goto yy67;",
          "808:  goto yy18;",
          "809: yy43:",
          "810:  yych = *++YYCURSOR;",
          "811:  if (yych == '.') goto yy45;",
          "812:  if (yych <= '/') goto yy18;",
          "813:  if (yych <= '9') goto yy46;",
          "814:  goto yy18;",
          "815: yy44:",
          "816:  yych = *++YYCURSOR;",
          "817:  if (yych <= '/') {",
          "818:   if (yych != '.') goto yy18;",
          "819:  } else {",
          "820:   if (yych <= '9') goto yy46;",
          "821:   if (yych == 'I') goto yy48;",
          "822:   goto yy18;",
          "824: yy45:",
          "825:  yych = *++YYCURSOR;",
          "826:  if (yych <= '/') goto yy18;",
          "827:  if (yych <= '9') goto yy69;",
          "828:  goto yy18;",
          "829: yy46:",
          "830:  ++YYCURSOR;",
          "831:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "832:  yych = *YYCURSOR;",
          "833:  if (yych <= ':') {",
          "834:   if (yych <= '.') {",
          "835:    if (yych <= '-') goto yy18;",
          "836:    goto yy69;",
          "837:   } else {",
          "838:    if (yych <= '/') goto yy18;",
          "839:    if (yych <= '9') goto yy46;",
          "840:    goto yy18;",
          "841:   }",
          "842:  } else {",
          "843:   if (yych <= 'E') {",
          "844:    if (yych <= ';') goto yy71;",
          "845:    if (yych <= 'D') goto yy18;",
          "846:    goto yy73;",
          "847:   } else {",
          "848:    if (yych == 'e') goto yy73;",
          "849:    goto yy18;",
          "850:   }",
          "852: yy48:",
          "853:  yych = *++YYCURSOR;",
          "854:  if (yych == 'N') goto yy74;",
          "855:  goto yy18;",
          "856: yy49:",
          "858:  if (yych == 'A') goto yy75;",
          "859:  goto yy18;",
          "860: yy50:",
          "861:  yych = *++YYCURSOR;",
          "862:  if (yych <= '/') goto yy18;",
          "863:  if (yych >= ':') goto yy18;",
          "864: yy51:",
          "865:  ++YYCURSOR;",
          "866:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "867:  yych = *YYCURSOR;",
          "869:  if (yych <= '9') goto yy51;",
          "870:  if (yych == ';') goto yy76;",
          "872: yy53:",
          "876: yy54:",
          "881:  if (yych <= '9') goto yy54;",
          "882:  if (yych <= ':') goto yy78;",
          "883:  goto yy18;",
          "884: yy56:",
          "886:  if (yych <= '/') goto yy18;",
          "887:  if (yych >= ':') goto yy18;",
          "888: yy57:",
          "890:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "891:  yych = *YYCURSOR;",
          "893:  if (yych <= '9') goto yy57;",
          "894:  if (yych == ';') goto yy79;",
          "896: yy59:",
          "900: yy60:",
          "905:  if (yych <= '9') goto yy60;",
          "906:  if (yych <= ':') goto yy81;",
          "907:  goto yy18;",
          "908: yy62:",
          "910:  if (yych == '\"') goto yy82;",
          "911:  goto yy18;",
          "912: yy63:",
          "914: #line 537 \"ext/standard/var_unserializer.re\"",
          "916:  long id;",
          "919:  if (!var_hash) return 0;",
          "921:  id = parse_iv(start + 2) - 1;",
          "922:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "926:  if (*rval != NULL) {",
          "927:   var_push_dtor_no_addref(var_hash, rval);",
          "930:  Z_ADDREF_PP(rval);",
          "931:  Z_SET_ISREF_PP(rval);",
          "935: #line 936 \"ext/standard/var_unserializer.c\"",
          "936: yy65:",
          "938:  if (yych == '\"') goto yy84;",
          "940: yy66:",
          "942:  if (yych == '{') goto yy86;",
          "944: yy67:",
          "946: #line 588 \"ext/standard/var_unserializer.re\"",
          "947:  {",
          "949:  INIT_PZVAL(*rval);",
          "950:  ZVAL_BOOL(*rval, parse_iv(start + 2));",
          "951:  return 1;",
          "952: }",
          "953: #line 954 \"ext/standard/var_unserializer.c\"",
          "954: yy69:",
          "960:   if (yych <= '9') goto yy69;",
          "965:    goto yy73;",
          "967:    if (yych == 'e') goto yy73;",
          "971: yy71:",
          "973: #line 637 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1081:  ZVAL_DOUBLE(*rval, zend_strtod((const char *)start + 2, NULL));",
          "1082:  return 1;",
          "1083: }",
          "1086:  yych = *++YYCURSOR;",
          "1087:  if (yych <= ',') {",
          "1089:  } else {",
          "1091:   if (yych <= '/') goto yy18;",
          "1093:   goto yy18;",
          "1094:  }",
          "1096:  yych = *++YYCURSOR;",
          "1112:  goto yy18;",
          "1114:  yych = *++YYCURSOR;",
          "1117:  goto yy18;",
          "1142:  ++YYCURSOR;",
          "1144:  {",
          "1190:  if (start[2] == '-' || start[2] == '+') {",
          "1191:   digits--;",
          "",
          "[Removed Lines]",
          "1084: #line 1085 \"ext/standard/var_unserializer.c\"",
          "1085: yy65:",
          "1088:   if (yych != '+') goto yy18;",
          "1090:   if (yych <= '-') goto yy66;",
          "1092:   if (yych <= '9') goto yy67;",
          "1095: yy66:",
          "1097:  if (yych <= ',') {",
          "1098:   if (yych == '+') goto yy69;",
          "1099:   goto yy18;",
          "1100:  } else {",
          "1101:   if (yych <= '-') goto yy69;",
          "1102:   if (yych <= '/') goto yy18;",
          "1103:   if (yych >= ':') goto yy18;",
          "1104:  }",
          "1105: yy67:",
          "1106:  ++YYCURSOR;",
          "1107:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1108:  yych = *YYCURSOR;",
          "1109:  if (yych <= '/') goto yy18;",
          "1110:  if (yych <= '9') goto yy67;",
          "1111:  if (yych == ';') goto yy63;",
          "1113: yy69:",
          "1115:  if (yych <= '/') goto yy18;",
          "1116:  if (yych <= '9') goto yy67;",
          "1118: yy70:",
          "1119:  ++YYCURSOR;",
          "1120:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1121:  yych = *YYCURSOR;",
          "1122:  if (yych <= ';') {",
          "1123:   if (yych <= '/') goto yy18;",
          "1124:   if (yych <= '9') goto yy70;",
          "1125:   if (yych <= ':') goto yy18;",
          "1126:   goto yy63;",
          "1127:  } else {",
          "1128:   if (yych <= 'E') {",
          "1129:    if (yych <= 'D') goto yy18;",
          "1130:    goto yy65;",
          "1131:   } else {",
          "1132:    if (yych == 'e') goto yy65;",
          "1133:    goto yy18;",
          "1134:   }",
          "1135:  }",
          "1136: yy72:",
          "1137:  yych = *++YYCURSOR;",
          "1138:  if (yych != 'F') goto yy18;",
          "1139: yy73:",
          "1140:  yych = *++YYCURSOR;",
          "1141:  if (yych != ';') goto yy18;",
          "1143: #line 590 \"ext/standard/var_unserializer.re\"",
          "1146:  INIT_PZVAL(*rval);",
          "1148:  if (!strncmp(start + 2, \"NAN\", 3)) {",
          "1149:   ZVAL_DOUBLE(*rval, php_get_nan());",
          "1150:  } else if (!strncmp(start + 2, \"INF\", 3)) {",
          "1151:   ZVAL_DOUBLE(*rval, php_get_inf());",
          "1152:  } else if (!strncmp(start + 2, \"-INF\", 4)) {",
          "1153:   ZVAL_DOUBLE(*rval, -php_get_inf());",
          "1154:  }",
          "1156:  return 1;",
          "1157: }",
          "1158: #line 1159 \"ext/standard/var_unserializer.c\"",
          "1159: yy76:",
          "1160:  yych = *++YYCURSOR;",
          "1161:  if (yych == 'N') goto yy73;",
          "1162:  goto yy18;",
          "1163: yy77:",
          "1164:  yych = *++YYCURSOR;",
          "1165:  if (yych <= ',') {",
          "1166:   if (yych != '+') goto yy18;",
          "1167:  } else {",
          "1168:   if (yych <= '-') goto yy78;",
          "1169:   if (yych <= '/') goto yy18;",
          "1170:   if (yych <= '9') goto yy79;",
          "1171:   goto yy18;",
          "1172:  }",
          "1173: yy78:",
          "1174:  yych = *++YYCURSOR;",
          "1175:  if (yych <= '/') goto yy18;",
          "1176:  if (yych >= ':') goto yy18;",
          "1177: yy79:",
          "1178:  ++YYCURSOR;",
          "1179:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1180:  yych = *YYCURSOR;",
          "1181:  if (yych <= '/') goto yy18;",
          "1182:  if (yych <= '9') goto yy79;",
          "1183:  if (yych != ';') goto yy18;",
          "1184:  ++YYCURSOR;",
          "1185: #line 563 \"ext/standard/var_unserializer.re\"",
          "1186:  {",
          "1187: #if SIZEOF_LONG == 4",
          "1188:  int digits = YYCURSOR - start - 3;",
          "",
          "[Added Lines]",
          "983: #line 984 \"ext/standard/var_unserializer.c\"",
          "984: yy73:",
          "987:   if (yych == '+') goto yy88;",
          "988:   goto yy18;",
          "990:   if (yych <= '-') goto yy88;",
          "992:   if (yych <= '9') goto yy89;",
          "995: yy74:",
          "997:  if (yych == 'F') goto yy91;",
          "999: yy75:",
          "1001:  if (yych == 'N') goto yy91;",
          "1003: yy76:",
          "1005: #line 595 \"ext/standard/var_unserializer.re\"",
          "1007: #if SIZEOF_LONG == 4",
          "1008:  int digits = YYCURSOR - start - 3;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1209:  ZVAL_LONG(*rval, parse_iv(start + 2));",
          "1210:  return 1;",
          "1211: }",
          "1249:  yych = *++YYCURSOR;",
          "1259:  ++YYCURSOR;",
          "1261:  {",
          "1262:  long id;",
          "",
          "[Removed Lines]",
          "1212: #line 1213 \"ext/standard/var_unserializer.c\"",
          "1213: yy83:",
          "1214:  yych = *++YYCURSOR;",
          "1215:  if (yych <= '/') goto yy18;",
          "1216:  if (yych >= '2') goto yy18;",
          "1217:  yych = *++YYCURSOR;",
          "1218:  if (yych != ';') goto yy18;",
          "1219:  ++YYCURSOR;",
          "1220: #line 556 \"ext/standard/var_unserializer.re\"",
          "1221:  {",
          "1223:  INIT_PZVAL(*rval);",
          "1224:  ZVAL_BOOL(*rval, parse_iv(start + 2));",
          "1225:  return 1;",
          "1226: }",
          "1227: #line 1228 \"ext/standard/var_unserializer.c\"",
          "1228: yy87:",
          "1229:  ++YYCURSOR;",
          "1230: #line 549 \"ext/standard/var_unserializer.re\"",
          "1231:  {",
          "1233:  INIT_PZVAL(*rval);",
          "1234:  ZVAL_NULL(*rval);",
          "1235:  return 1;",
          "1236: }",
          "1237: #line 1238 \"ext/standard/var_unserializer.c\"",
          "1238: yy89:",
          "1239:  yych = *++YYCURSOR;",
          "1240:  if (yych <= ',') {",
          "1241:   if (yych != '+') goto yy18;",
          "1242:  } else {",
          "1243:   if (yych <= '-') goto yy90;",
          "1244:   if (yych <= '/') goto yy18;",
          "1245:   if (yych <= '9') goto yy91;",
          "1246:   goto yy18;",
          "1247:  }",
          "1248: yy90:",
          "1250:  if (yych <= '/') goto yy18;",
          "1251:  if (yych >= ':') goto yy18;",
          "1252: yy91:",
          "1253:  ++YYCURSOR;",
          "1254:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1255:  yych = *YYCURSOR;",
          "1256:  if (yych <= '/') goto yy18;",
          "1257:  if (yych <= '9') goto yy91;",
          "1258:  if (yych != ';') goto yy18;",
          "1260: #line 526 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1032: #line 1033 \"ext/standard/var_unserializer.c\"",
          "1033: yy78:",
          "1035:  if (yych == '\"') goto yy92;",
          "1036:  goto yy18;",
          "1037: yy79:",
          "1039: #line 558 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1281:  return 1;",
          "1282: }",
          "1285:  yych = *++YYCURSOR;",
          "1286:  if (yych <= ',') {",
          "1288:  } else {",
          "1289:   if (yych <= '-') goto yy96;",
          "1290:   if (yych <= '/') goto yy18;",
          "1293:  }",
          "1299:  ++YYCURSOR;",
          "1300:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1301:  yych = *YYCURSOR;",
          "1302:  if (yych <= '/') goto yy18;",
          "1305:  ++YYCURSOR;",
          "1307:  {",
          "1315:   return 0;",
          "1316:  }",
          "1320:  }",
          "1325:  return 1;",
          "1326: }",
          "1328: }",
          "1332:  return 0;",
          "",
          "[Removed Lines]",
          "1283: #line 1284 \"ext/standard/var_unserializer.c\"",
          "1284: yy95:",
          "1287:   if (yych != '+') goto yy18;",
          "1291:   if (yych <= '9') goto yy97;",
          "1292:   goto yy18;",
          "1294: yy96:",
          "1295:  yych = *++YYCURSOR;",
          "1296:  if (yych <= '/') goto yy18;",
          "1297:  if (yych >= ':') goto yy18;",
          "1298: yy97:",
          "1303:  if (yych <= '9') goto yy97;",
          "1304:  if (yych != ';') goto yy18;",
          "1306: #line 505 \"ext/standard/var_unserializer.re\"",
          "1308:  long id;",
          "1311:  if (!var_hash) return 0;",
          "1313:  id = parse_iv(start + 2) - 1;",
          "1314:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "1318:  if (*rval != NULL) {",
          "1319:   var_push_dtor_no_addref(var_hash, rval);",
          "1322:  Z_ADDREF_PP(rval);",
          "1323:  Z_SET_ISREF_PP(rval);",
          "1327: #line 1328 \"ext/standard/var_unserializer.c\"",
          "1329: #line 879 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1062: #line 1063 \"ext/standard/var_unserializer.c\"",
          "1063: yy81:",
          "1064:  yych = *++YYCURSOR;",
          "1065:  if (yych == '\"') goto yy94;",
          "1066:  goto yy18;",
          "1067: yy82:",
          "1068:  ++YYCURSOR;",
          "1069: #line 749 \"ext/standard/var_unserializer.re\"",
          "1070:  {",
          "1071:  size_t len, len2, len3, maxlen;",
          "1072:  long elements;",
          "1073:  char *class_name;",
          "1074:  zend_class_entry *ce;",
          "1075:  zend_class_entry **pce;",
          "1076:  int incomplete_class = 0;",
          "1078:  int custom_object = 0;",
          "1080:  zval *user_func;",
          "1081:  zval *retval_ptr;",
          "1082:  zval **args[1];",
          "1083:  zval *arg_func_name;",
          "1085:     if (!var_hash) return 0;",
          "1086:  if (*start == 'C') {",
          "1087:   custom_object = 1;",
          "1088:  }",
          "1090:  INIT_PZVAL(*rval);",
          "1091:  len2 = len = parse_uiv(start + 2);",
          "1092:  maxlen = max - YYCURSOR;",
          "1093:  if (maxlen < len || len == 0) {",
          "1095:   return 0;",
          "1096:  }",
          "1098:  class_name = (char*)YYCURSOR;",
          "1100:  YYCURSOR += len;",
          "1102:  if (*(YYCURSOR) != '\"') {",
          "1104:   return 0;",
          "1105:  }",
          "1106:  if (*(YYCURSOR+1) != ':') {",
          "1108:   return 0;",
          "1109:  }",
          "1111:  len3 = strspn(class_name, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1112:  if (len3 != len)",
          "1113:  {",
          "1115:   return 0;",
          "1116:  }",
          "1118:  class_name = estrndup(class_name, len);",
          "1120:  do {",
          "1122:   BG(serialize_lock)++;",
          "1123:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "1124:    BG(serialize_lock)--;",
          "1125:    if (EG(exception)) {",
          "1126:     efree(class_name);",
          "1127:     return 0;",
          "1128:    }",
          "1129:    ce = *pce;",
          "1130:    break;",
          "1131:   }",
          "1132:   BG(serialize_lock)--;",
          "1134:   if (EG(exception)) {",
          "1135:    efree(class_name);",
          "1136:    return 0;",
          "1137:   }",
          "1140:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1141:    incomplete_class = 1;",
          "1142:    ce = PHP_IC_ENTRY;",
          "1143:    break;",
          "1144:   }",
          "1147:   MAKE_STD_ZVAL(user_func);",
          "1148:   ZVAL_STRING(user_func, PG(unserialize_callback_func), 1);",
          "1149:   args[0] = &arg_func_name;",
          "1150:   MAKE_STD_ZVAL(arg_func_name);",
          "1151:   ZVAL_STRING(arg_func_name, class_name, 1);",
          "1152:   BG(serialize_lock)++;",
          "1153:   if (call_user_function_ex(CG(function_table), NULL, user_func, &retval_ptr, 1, args, 0, NULL TSRMLS_CC) != SUCCESS) {",
          "1154:    BG(serialize_lock)--;",
          "1155:    if (EG(exception)) {",
          "1156:     efree(class_name);",
          "1157:     zval_ptr_dtor(&user_func);",
          "1158:     zval_ptr_dtor(&arg_func_name);",
          "1159:     return 0;",
          "1160:    }",
          "1161:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"defined (%s) but not found\", user_func->value.str.val);",
          "1162:    incomplete_class = 1;",
          "1163:    ce = PHP_IC_ENTRY;",
          "1164:    zval_ptr_dtor(&user_func);",
          "1165:    zval_ptr_dtor(&arg_func_name);",
          "1166:    break;",
          "1167:   }",
          "1168:   BG(serialize_lock)--;",
          "1169:   if (retval_ptr) {",
          "1170:    zval_ptr_dtor(&retval_ptr);",
          "1171:   }",
          "1172:   if (EG(exception)) {",
          "1173:    efree(class_name);",
          "1174:    zval_ptr_dtor(&user_func);",
          "1175:    zval_ptr_dtor(&arg_func_name);",
          "1176:    return 0;",
          "1177:   }",
          "1180:   BG(serialize_lock)++;",
          "1181:   if (zend_lookup_class(class_name, len2, &pce TSRMLS_CC) == SUCCESS) {",
          "1182:    ce = *pce;",
          "1183:   } else {",
          "1184:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Function %s() hasn't defined the class it was called for\", user_func->value.str.val);",
          "1185:    incomplete_class = 1;",
          "1186:    ce = PHP_IC_ENTRY;",
          "1187:   }",
          "1188:   BG(serialize_lock)--;",
          "1190:   zval_ptr_dtor(&user_func);",
          "1191:   zval_ptr_dtor(&arg_func_name);",
          "1192:   break;",
          "1193:  } while (1);",
          "1197:  if (custom_object) {",
          "1198:   int ret;",
          "1200:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1202:   if (ret && incomplete_class) {",
          "1203:    php_store_class_name(*rval, class_name, len2);",
          "1204:   }",
          "1205:   efree(class_name);",
          "1206:   return ret;",
          "1207:  }",
          "1209:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1211:  if (elements < 0) {",
          "1212:     efree(class_name);",
          "1213:     return 0;",
          "1214:  }",
          "1216:  if (incomplete_class) {",
          "1217:   php_store_class_name(*rval, class_name, len2);",
          "1218:  }",
          "1219:  efree(class_name);",
          "1221:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1222: }",
          "1223: #line 1224 \"ext/standard/var_unserializer.c\"",
          "1224: yy84:",
          "1225:  ++YYCURSOR;",
          "1226: #line 680 \"ext/standard/var_unserializer.re\"",
          "1227:  {",
          "1228:  size_t len, maxlen;",
          "1229:  char *str;",
          "1231:  len = parse_uiv(start + 2);",
          "1232:  maxlen = max - YYCURSOR;",
          "1233:  if (maxlen < len) {",
          "1235:   return 0;",
          "1236:  }",
          "1238:  if ((str = unserialize_str(&YYCURSOR, &len, maxlen)) == NULL) {",
          "1239:   return 0;",
          "1240:  }",
          "1242:  if (*(YYCURSOR) != '\"') {",
          "1243:   efree(str);",
          "1245:   return 0;",
          "1246:  }",
          "1248:  if (*(YYCURSOR + 1) != ';') {",
          "1249:   efree(str);",
          "1251:   return 0;",
          "1252:  }",
          "1254:  YYCURSOR += 2;",
          "1257:  INIT_PZVAL(*rval);",
          "1258:  ZVAL_STRINGL(*rval, str, len, 0);",
          "1259:  return 1;",
          "1260: }",
          "1261: #line 1262 \"ext/standard/var_unserializer.c\"",
          "1262: yy86:",
          "1263:  ++YYCURSOR;",
          "1264: #line 715 \"ext/standard/var_unserializer.re\"",
          "1265:  {",
          "1266:  long elements = parse_iv(start + 2);",
          "1269:     if (!var_hash) return 0;",
          "1271:  if (elements < 0) {",
          "1272:   return 0;",
          "1273:  }",
          "1275:  INIT_PZVAL(*rval);",
          "1277:  array_init_size(*rval, elements);",
          "1279:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_PP(rval), elements, 0)) {",
          "1280:   return 0;",
          "1281:  }",
          "1283:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1284: }",
          "1285: #line 1286 \"ext/standard/var_unserializer.c\"",
          "1286: yy88:",
          "1289:   if (yych == '+') goto yy96;",
          "1290:   goto yy18;",
          "1294:   if (yych >= ':') goto yy18;",
          "1296: yy89:",
          "1301:  if (yych <= '9') goto yy89;",
          "1302:  if (yych == ';') goto yy71;",
          "1303:  goto yy18;",
          "1304: yy91:",
          "1305:  yych = *++YYCURSOR;",
          "1306:  if (yych == ';') goto yy97;",
          "1307:  goto yy18;",
          "1308: yy92:",
          "1310: #line 736 \"ext/standard/var_unserializer.re\"",
          "1312:  long elements;",
          "1313:     if (!var_hash) return 0;",
          "1315:  INIT_PZVAL(*rval);",
          "1317:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "1318:  if (elements < 0) {",
          "1321:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1322: }",
          "1323: #line 1324 \"ext/standard/var_unserializer.c\"",
          "1324: yy94:",
          "1325:  ++YYCURSOR;",
          "1326: #line 647 \"ext/standard/var_unserializer.re\"",
          "1327:  {",
          "1328:  size_t len, maxlen;",
          "1329:  char *str;",
          "1331:  len = parse_uiv(start + 2);",
          "1332:  maxlen = max - YYCURSOR;",
          "1333:  if (maxlen < len) {",
          "1335:   return 0;",
          "1336:  }",
          "1338:  str = (char*)YYCURSOR;",
          "1340:  YYCURSOR += len;",
          "1342:  if (*(YYCURSOR) != '\"') {",
          "1344:   return 0;",
          "1345:  }",
          "1347:  if (*(YYCURSOR + 1) != ';') {",
          "1349:   return 0;",
          "1350:  }",
          "1352:  YYCURSOR += 2;",
          "1355:  INIT_PZVAL(*rval);",
          "1356:  ZVAL_STRINGL(*rval, str, len, 1);",
          "1357:  return 1;",
          "1358: }",
          "1359: #line 1360 \"ext/standard/var_unserializer.c\"",
          "1360: yy96:",
          "1361:  yych = *++YYCURSOR;",
          "1362:  if (yych <= '/') goto yy18;",
          "1363:  if (yych <= '9') goto yy89;",
          "1364:  goto yy18;",
          "1365: yy97:",
          "1366:  ++YYCURSOR;",
          "1367: #line 622 \"ext/standard/var_unserializer.re\"",
          "1368:  {",
          "1370:  INIT_PZVAL(*rval);",
          "1372:  if (!strncmp(start + 2, \"NAN\", 3)) {",
          "1373:   ZVAL_DOUBLE(*rval, php_get_nan());",
          "1374:  } else if (!strncmp(start + 2, \"INF\", 3)) {",
          "1375:   ZVAL_DOUBLE(*rval, php_get_inf());",
          "1376:  } else if (!strncmp(start + 2, \"-INF\", 4)) {",
          "1377:   ZVAL_DOUBLE(*rval, -php_get_inf());",
          "1382: #line 1383 \"ext/standard/var_unserializer.c\"",
          "1384: #line 911 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #define VAR_ENTRIES_MAX 1024",
          "27: #define VAR_ENTRIES_DBG 0",
          "29: typedef struct {",
          "30:  zval *data[VAR_ENTRIES_MAX];",
          "31:  long used_slots;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: #define VAR_WAKEUP_FLAG 1",
          "30: #define WITH_WAKEUP_FLAG(zv_ptr) ((zval *) ((zend_uintptr_t) zv_ptr | VAR_WAKEUP_FLAG))",
          "31: #define WITHOUT_WAKEUP_FLAG(zv_ptr) ((zval *) ((zend_uintptr_t) zv_ptr & ~VAR_WAKEUP_FLAG))",
          "32: #define HAS_WAKEUP_FLAG(zv_ptr) ((zend_uintptr_t) zv_ptr & VAR_WAKEUP_FLAG)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:  var_hash->data[var_hash->used_slots++] = *rval;",
          "57: }",
          "60: {",
          "61:  var_entries *var_hash;",
          "63:  if (!var_hashx || !*var_hashx) {",
          "65:  }",
          "67:  var_hash = (*var_hashx)->last_dtor;",
          "",
          "[Removed Lines]",
          "59: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hashx, zval **rval)",
          "64:   return;",
          "",
          "[Added Lines]",
          "64: static inline zval **get_var_push_dtor_slot(php_unserialize_data_t *var_hashx)",
          "69:   return NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83:   (*var_hashx)->last_dtor = var_hash;",
          "84:  }",
          "86:  Z_ADDREF_PP(rval);",
          "88: }",
          "90: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval **rval)",
          "",
          "[Removed Lines]",
          "87:  var_hash->data[var_hash->used_slots++] = *rval;",
          "",
          "[Added Lines]",
          "91:  return &var_hash->data[var_hash->used_slots++];",
          "92: }",
          "94: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hashx, zval **rval)",
          "95: {",
          "96:  zval **slot = get_var_push_dtor_slot(var_hashx);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "162:  void *next;",
          "163:  long i;",
          "164:  var_entries *var_hash = (*var_hashx)->first;",
          "165: #if VAR_ENTRIES_DBG",
          "166:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "167: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176:  zend_bool wakeup_failed = 0;",
          "177:  TSRMLS_FETCH();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "177:  while (var_hash) {",
          "178:   for (i = 0; i < var_hash->used_slots; i++) {",
          "179: #if VAR_ENTRIES_DBG",
          "180:     fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_hash->data[i], Z_REFCOUNT_P(var_hash->data[i]));",
          "181: #endif",
          "183:   }",
          "184:   next = var_hash->next;",
          "185:   efree(var_hash);",
          "",
          "[Removed Lines]",
          "182:    zval_ptr_dtor(&var_hash->data[i]);",
          "",
          "[Added Lines]",
          "193:    zval *zv = var_hash->data[i];",
          "198:    if (HAS_WAKEUP_FLAG(zv)) {",
          "199:     zv = WITHOUT_WAKEUP_FLAG(zv);",
          "200:     if (!wakeup_failed) {",
          "201:      zval *retval_ptr = NULL;",
          "202:      zval wakeup_name;",
          "203:      INIT_PZVAL(&wakeup_name);",
          "204:      ZVAL_STRINGL(&wakeup_name, \"__wakeup\", sizeof(\"__wakeup\") - 1, 0);",
          "206:      BG(serialize_lock)++;",
          "207:      if (call_user_function_ex(CG(function_table), &zv, &wakeup_name, &retval_ptr, 0, 0, 1, NULL TSRMLS_CC) == FAILURE || retval_ptr == NULL) {",
          "208:       wakeup_failed = 1;",
          "209:       zend_object_store_ctor_failed(zv TSRMLS_CC);",
          "210:      }",
          "211:      BG(serialize_lock)--;",
          "213:      if (retval_ptr) {",
          "214:       zval_ptr_dtor(&retval_ptr);",
          "215:      }",
          "216:     } else {",
          "217:      zend_object_store_ctor_failed(zv TSRMLS_CC);",
          "218:     }",
          "219:    }",
          "221:    zval_ptr_dtor(&zv);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "435: #endif",
          "436: static inline int object_common2(UNSERIALIZE_PARAMETER, long elements)",
          "437: {",
          "441:  if (Z_TYPE_PP(rval) != IS_OBJECT) {",
          "442:   return 0;",
          "443:  }",
          "445:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_OBJPROP_PP(rval), elements, 1)) {",
          "451:      ZVAL_NULL(*rval);",
          "452:   return 0;",
          "453:  }",
          "",
          "[Removed Lines]",
          "438:  zval *retval_ptr = NULL;",
          "439:  zval fname;",
          "447:      if(Z_TYPE_PP(rval) == IS_OBJECT) {",
          "448:         zend_hash_clean(Z_OBJPROP_PP(rval));",
          "449:         zend_object_store_ctor_failed(*rval TSRMLS_CC);",
          "450:      }",
          "",
          "[Added Lines]",
          "483:   if (Z_TYPE_PP(rval) == IS_OBJECT) {",
          "484:    zend_hash_clean(Z_OBJPROP_PP(rval));",
          "485:    zend_object_store_ctor_failed(*rval TSRMLS_CC);",
          "486:   }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "457:     }",
          "459:  if (Z_OBJCE_PP(rval) != PHP_IC_ENTRY &&",
          "474:  }",
          "476:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "460:   zend_hash_exists(&Z_OBJCE_PP(rval)->function_table, \"__wakeup\", sizeof(\"__wakeup\"))) {",
          "461:   INIT_PZVAL(&fname);",
          "462:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1, 0);",
          "463:   BG(serialize_lock)++;",
          "464:   call_user_function_ex(CG(function_table), rval, &fname, &retval_ptr, 0, 0, 1, NULL TSRMLS_CC);",
          "465:   BG(serialize_lock)--;",
          "466:  }",
          "468:  if (retval_ptr) {",
          "469:   zval_ptr_dtor(&retval_ptr);",
          "470:  }",
          "472:  if (EG(exception)) {",
          "473:   return 0;",
          "",
          "[Added Lines]",
          "496:   zend_hash_exists(&Z_OBJCE_PP(rval)->function_table, \"__wakeup\", sizeof(\"__wakeup\"))",
          "497:  ) {",
          "499:   zval **slot = get_var_push_dtor_slot(var_hash);",
          "500:   zval *zv = *rval;",
          "501:   Z_ADDREF_P(zv);",
          "502:   if (PZVAL_IS_REF(zv)) {",
          "503:    SEPARATE_ZVAL(&zv);",
          "504:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}