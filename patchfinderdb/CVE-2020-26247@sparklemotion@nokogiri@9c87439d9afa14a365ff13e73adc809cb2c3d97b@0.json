{
  "cve_id": "CVE-2020-26247",
  "cve_desc": "Nokogiri is a Rubygem providing HTML, XML, SAX, and Reader parsers with XPath and CSS selector support. In Nokogiri before version 1.11.0.rc4 there is an XXE vulnerability. XML Schemas parsed by Nokogiri::XML::Schema are trusted by default, allowing external resources to be accessed over the network, potentially enabling XXE or SSRF attacks. This behavior is counter to the security policy followed by Nokogiri maintainers, which is to treat all input as untrusted by default whenever possible. This is fixed in Nokogiri version 1.11.0.rc4.",
  "repo": "sparklemotion/nokogiri",
  "patch_hash": "9c87439d9afa14a365ff13e73adc809cb2c3d97b",
  "patch_info": {
    "commit_hash": "9c87439d9afa14a365ff13e73adc809cb2c3d97b",
    "repo": "sparklemotion/nokogiri",
    "commit_url": "https://github.com/sparklemotion/nokogiri/commit/9c87439d9afa14a365ff13e73adc809cb2c3d97b",
    "files": [
      "ext/java/nokogiri/XmlRelaxng.java",
      "ext/java/nokogiri/XmlSchema.java",
      "ext/nokogiri/xml_relax_ng.c",
      "ext/nokogiri/xml_schema.c",
      "lib/nokogiri/xml/parse_options.rb",
      "lib/nokogiri/xml/relax_ng.rb",
      "lib/nokogiri/xml/schema.rb",
      "test/xml/test_relax_ng.rb",
      "test/xml/test_schema.rb"
    ],
    "message": "feat: XML::Schema and RelaxNG creation accept optional ParseOptions\n\nI'm trying out a new pattern, which is that the parsed object carries\naround the ParseOptions it was created with, which should make some\ntesting a bit easier.\n\nI'm also not implementing the \"config block\" pattern in use for\nDocuments, because I think the UX is weird and I'm hoping to change\neverything to use kwargs in a 2.0 release, anyway.",
    "before_after_code_files": [
      "ext/java/nokogiri/XmlRelaxng.java||ext/java/nokogiri/XmlRelaxng.java",
      "ext/java/nokogiri/XmlSchema.java||ext/java/nokogiri/XmlSchema.java",
      "ext/nokogiri/xml_relax_ng.c||ext/nokogiri/xml_relax_ng.c",
      "ext/nokogiri/xml_schema.c||ext/nokogiri/xml_schema.c",
      "lib/nokogiri/xml/parse_options.rb||lib/nokogiri/xml/parse_options.rb",
      "lib/nokogiri/xml/relax_ng.rb||lib/nokogiri/xml/relax_ng.rb",
      "lib/nokogiri/xml/schema.rb||lib/nokogiri/xml/schema.rb",
      "test/xml/test_relax_ng.rb||test/xml/test_relax_ng.rb",
      "test/xml/test_schema.rb||test/xml/test_schema.rb"
    ]
  },
  "patch_diff": {
    "ext/java/nokogiri/XmlRelaxng.java||ext/java/nokogiri/XmlRelaxng.java": [
      "File: ext/java/nokogiri/XmlRelaxng.java -> ext/java/nokogiri/XmlRelaxng.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "56: import org.jruby.RubyClass;",
      "57: import org.jruby.anno.JRubyClass;",
      "58: import org.jruby.runtime.ThreadContext;",
      "59: import org.w3c.dom.Document;",
      "60: import org.xml.sax.ErrorHandler;",
      "61: import org.xml.sax.SAXException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "59: import org.jruby.runtime.builtin.IRubyObject;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78:         this.verifier = verifier;",
      "79:     }",
      "82:         Ruby runtime = context.getRuntime();",
      "83:         XmlRelaxng xmlRelaxng = (XmlRelaxng) NokogiriService.XML_RELAXNG_ALLOCATOR.allocate(runtime, klazz);",
      "84:         xmlRelaxng.setInstanceVariable(\"@errors\", runtime.newEmptyArray());",
      "86:         try {",
      "87:             Schema schema = xmlRelaxng.getSchema(source, context);",
      "88:             xmlRelaxng.setVerifier(schema.newVerifier());",
      "",
      "[Removed Lines]",
      "81:     static XmlSchema createSchemaInstance(ThreadContext context, RubyClass klazz, Source source) {",
      "",
      "[Added Lines]",
      "82:     static XmlSchema createSchemaInstance(ThreadContext context, RubyClass klazz, Source source, IRubyObject parseOptions) {",
      "86:         if (parseOptions == null) {",
      "87:             parseOptions = defaultParseOptions(context.getRuntime());",
      "88:         }",
      "91:         xmlRelaxng.setInstanceVariable(\"@parse_options\", parseOptions);",
      "",
      "---------------"
    ],
    "ext/java/nokogiri/XmlSchema.java||ext/java/nokogiri/XmlSchema.java": [
      "File: ext/java/nokogiri/XmlSchema.java -> ext/java/nokogiri/XmlSchema.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "106:         this.validator = validator;",
      "107:     }",
      "110:         Ruby runtime = context.getRuntime();",
      "111:         XmlSchema xmlSchema = (XmlSchema) NokogiriService.XML_SCHEMA_ALLOCATOR.allocate(runtime, klazz);",
      "112:         xmlSchema.setInstanceVariable(\"@errors\", runtime.newEmptyArray());",
      "114:         try {",
      "115:             SchemaErrorHandler error_handler = new SchemaErrorHandler(context.getRuntime(), (RubyArray)xmlSchema.getInstanceVariable(\"@errors\"));",
      "",
      "[Removed Lines]",
      "109:     static XmlSchema createSchemaInstance(ThreadContext context, RubyClass klazz, Source source) {",
      "",
      "[Added Lines]",
      "109:     static XmlSchema createSchemaInstance(ThreadContext context, RubyClass klazz, Source source, IRubyObject parseOptions) {",
      "113:         if (parseOptions == null) {",
      "114:             parseOptions = defaultParseOptions(context.getRuntime());",
      "115:         }",
      "118:         xmlSchema.setInstanceVariable(\"@parse_options\", parseOptions);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "121:         }",
      "122:     }",
      "132:         XmlDocument doc = ((XmlDocument) ((XmlNode) document).document(context));",
      "134:         RubyArray errors = (RubyArray) doc.getInstanceVariable(\"@errors\");",
      "",
      "[Removed Lines]",
      "130:     @JRubyMethod(meta=true)",
      "131:     public static IRubyObject from_document(ThreadContext context, IRubyObject klazz, IRubyObject document) {",
      "",
      "[Added Lines]",
      "130:     protected static IRubyObject defaultParseOptions(Ruby runtime) {",
      "131:         return ((RubyClass)runtime.getClassFromPath(\"Nokogiri::XML::ParseOptions\")).getConstant(\"DEFAULT_SCHEMA\");",
      "132:     }",
      "140:     @JRubyMethod(meta=true, required=1, optional=1)",
      "141:     public static IRubyObject from_document(ThreadContext context, IRubyObject klazz, IRubyObject[] args) {",
      "142:         IRubyObject document = args[0];",
      "143:         IRubyObject parseOptions = null;",
      "144:         if (args.length > 1) {",
      "145:             parseOptions = args[1];",
      "146:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "144:             source.setSystemId(uri.convertToString().asJavaString());",
      "145:         }",
      "148:     }",
      "151:         String moduleName = klazz.getName();",
      "152:         if (\"Nokogiri::XML::Schema\".equals(moduleName)) {",
      "154:         } else if (\"Nokogiri::XML::RelaxNG\".equals(moduleName)) {",
      "156:         }",
      "157:         return context.getRuntime().getNil();",
      "158:     }",
      "166:     @JRubyMethod(visibility=Visibility.PRIVATE)",
      "167:     public IRubyObject validate_document(ThreadContext context, IRubyObject document) {",
      "168:         return validate_document_or_file(context, (XmlDocument)document);",
      "",
      "[Removed Lines]",
      "147:         return getSchema(context, (RubyClass)klazz, source);",
      "150:     private static IRubyObject getSchema(ThreadContext context, RubyClass klazz, Source source) {",
      "153:             return XmlSchema.createSchemaInstance(context, klazz, source);",
      "155:             return XmlRelaxng.createSchemaInstance(context, klazz, source);",
      "160:     @JRubyMethod(meta=true)",
      "161:     public static IRubyObject read_memory(ThreadContext context, IRubyObject klazz, IRubyObject content) {",
      "162:         String data = content.convertToString().asJavaString();",
      "163:         return getSchema(context, (RubyClass) klazz, new StreamSource(new StringReader(data)));",
      "164:     }",
      "",
      "[Added Lines]",
      "163:         return getSchema(context, (RubyClass)klazz, source, parseOptions);",
      "166:     @JRubyMethod(meta=true, required=1, optional=1)",
      "167:     public static IRubyObject read_memory(ThreadContext context, IRubyObject klazz, IRubyObject[] args) {",
      "168:         IRubyObject content = args[0];",
      "169:         IRubyObject parseOptions = null;",
      "170:         if (args.length > 1) {",
      "171:             parseOptions = args[1];",
      "172:         }",
      "173:         String data = content.convertToString().asJavaString();",
      "174:         return getSchema(context, (RubyClass) klazz, new StreamSource(new StringReader(data)), parseOptions);",
      "175:     }",
      "177:     private static IRubyObject getSchema(ThreadContext context, RubyClass klazz, Source source, IRubyObject parseOptions) {",
      "180:             return XmlSchema.createSchemaInstance(context, klazz, source, parseOptions);",
      "182:             return XmlRelaxng.createSchemaInstance(context, klazz, source, parseOptions);",
      "",
      "---------------"
    ],
    "ext/nokogiri/xml_relax_ng.c||ext/nokogiri/xml_relax_ng.c": [
      "File: ext/nokogiri/xml_relax_ng.c -> ext/nokogiri/xml_relax_ng.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "57: {",
      "62:   xmlRelaxNGPtr schema;",
      "64:   VALUE rb_schema;",
      "66:   xmlSetStructuredErrorFunc((void *)errors, Nokogiri_error_array_pusher);",
      "68: #ifdef HAVE_XMLRELAXNGSETPARSERSTRUCTUREDERRORS",
      "",
      "[Removed Lines]",
      "56: static VALUE read_memory(VALUE klass, VALUE content)",
      "58:   xmlRelaxNGParserCtxtPtr ctx = xmlRelaxNGNewMemParserCtxt(",
      "59:       (const char *)StringValuePtr(content),",
      "60:       (int)RSTRING_LEN(content)",
      "61:   );",
      "63:   VALUE errors = rb_ary_new();",
      "",
      "[Added Lines]",
      "56: static VALUE read_memory(int argc, VALUE *argv, VALUE klass)",
      "58:   VALUE content;",
      "59:   VALUE parse_options;",
      "60:   xmlRelaxNGParserCtxtPtr ctx;",
      "62:   VALUE errors;",
      "64:   int scanned_args = 0;",
      "66:   scanned_args = rb_scan_args(argc, argv, \"11\", &content, &parse_options);",
      "67:   if (scanned_args == 1) {",
      "68:     parse_options = rb_const_get(rb_const_get(mNokogiriXml, rb_intern(\"ParseOptions\")), rb_intern(\"DEFAULT_SCHEMA\"));",
      "69:   }",
      "71:   ctx = xmlRelaxNGNewMemParserCtxt((const char *)StringValuePtr(content), (int)RSTRING_LEN(content));",
      "73:   errors = rb_ary_new();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "91:   rb_schema = Data_Wrap_Struct(klass, 0, dealloc, schema);",
      "92:   rb_iv_set(rb_schema, \"@errors\", errors);",
      "94:   return rb_schema;",
      "95: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "101:   rb_iv_set(rb_schema, \"@parse_options\", parse_options);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "104: {",
      "105:   xmlDocPtr doc;",
      "106:   xmlRelaxNGParserCtxtPtr ctx;",
      "107:   xmlRelaxNGPtr schema;",
      "108:   VALUE errors;",
      "109:   VALUE rb_schema;",
      "111:   Data_Get_Struct(document, xmlDoc, doc);",
      "116:   ctx = xmlRelaxNGNewDocParserCtxt(doc);",
      "",
      "[Removed Lines]",
      "103: static VALUE from_document(VALUE klass, VALUE document)",
      "114:   doc = doc->doc;",
      "",
      "[Added Lines]",
      "112: static VALUE from_document(int argc, VALUE *argv, VALUE klass)",
      "114:   VALUE document;",
      "115:   VALUE parse_options;",
      "121:   int scanned_args = 0;",
      "123:   scanned_args = rb_scan_args(argc, argv, \"11\", &document, &parse_options);",
      "128:   if (scanned_args == 1) {",
      "129:     parse_options = rb_const_get(rb_const_get(mNokogiriXml, rb_intern(\"ParseOptions\")), rb_intern(\"DEFAULT_SCHEMA\"));",
      "130:   }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "144:   rb_schema = Data_Wrap_Struct(klass, 0, dealloc, schema);",
      "145:   rb_iv_set(rb_schema, \"@errors\", errors);",
      "147:   return rb_schema;",
      "148: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "162:   rb_iv_set(rb_schema, \"@parse_options\", parse_options);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "157:   cNokogiriXmlRelaxNG = klass;",
      "161:   rb_define_private_method(klass, \"validate_document\", validate_document, 1);",
      "162: }",
      "",
      "[Removed Lines]",
      "159:   rb_define_singleton_method(klass, \"read_memory\", read_memory, 1);",
      "160:   rb_define_singleton_method(klass, \"from_document\", from_document, 1);",
      "",
      "[Added Lines]",
      "176:   rb_define_singleton_method(klass, \"read_memory\", read_memory, -1);",
      "177:   rb_define_singleton_method(klass, \"from_document\", from_document, -1);",
      "",
      "---------------"
    ],
    "ext/nokogiri/xml_schema.c||ext/nokogiri/xml_schema.c": [
      "File: ext/nokogiri/xml_schema.c -> ext/nokogiri/xml_schema.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "97: {",
      "98:   xmlSchemaPtr schema;",
      "103:   VALUE rb_schema;",
      "105:   xmlSetStructuredErrorFunc((void *)errors, Nokogiri_error_array_pusher);",
      "107: #ifdef HAVE_XMLSCHEMASETPARSERSTRUCTUREDERRORS",
      "",
      "[Removed Lines]",
      "96: static VALUE read_memory(VALUE klass, VALUE content)",
      "99:   xmlSchemaParserCtxtPtr ctx = xmlSchemaNewMemParserCtxt(",
      "100:       (const char *)StringValuePtr(content),",
      "101:       (int)RSTRING_LEN(content)",
      "102:   );",
      "104:   VALUE errors = rb_ary_new();",
      "",
      "[Added Lines]",
      "96: static VALUE read_memory(int argc, VALUE *argv, VALUE klass)",
      "98:   VALUE content;",
      "99:   VALUE parse_options;",
      "100:   int parse_options_int;",
      "101:   xmlSchemaParserCtxtPtr ctx;",
      "103:   VALUE errors;",
      "105:   int scanned_args = 0;",
      "107:   scanned_args = rb_scan_args(argc, argv, \"11\", &content, &parse_options);",
      "108:   if (scanned_args == 1) {",
      "109:     parse_options = rb_const_get(rb_const_get(mNokogiriXml, rb_intern(\"ParseOptions\")), rb_intern(\"DEFAULT_SCHEMA\"));",
      "110:   }",
      "111:   parse_options_int = (int)NUM2INT(rb_funcall(parse_options, rb_intern(\"to_i\"), 0));",
      "113:   ctx = xmlSchemaNewMemParserCtxt((const char *)StringValuePtr(content), (int)RSTRING_LEN(content));",
      "115:   errors = rb_ary_new();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "109:     ctx,",
      "110:     Nokogiri_error_array_pusher,",
      "111:     (void *)errors",
      "113: #endif",
      "115:    schema = xmlSchemaParse(ctx);",
      "",
      "[Removed Lines]",
      "112:   );",
      "",
      "[Added Lines]",
      "123:     );",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "130:   rb_schema = Data_Wrap_Struct(klass, 0, dealloc, schema);",
      "131:   rb_iv_set(rb_schema, \"@errors\", errors);",
      "133:   return rb_schema;",
      "134: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "143:   rb_iv_set(rb_schema, \"@parse_options\", parse_options);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "168: {",
      "169:   xmlDocPtr doc;",
      "170:   xmlSchemaParserCtxtPtr ctx;",
      "171:   xmlSchemaPtr schema;",
      "172:   VALUE errors;",
      "173:   VALUE rb_schema;",
      "175:   Data_Get_Struct(document, xmlDoc, doc);",
      "180:   if (has_blank_nodes_p(DOC_NODE_CACHE(doc))) {",
      "181:     rb_raise(rb_eArgError, \"Creating a schema from a document that has blank nodes exposed to Ruby is dangerous\");",
      "",
      "[Removed Lines]",
      "167: static VALUE from_document(VALUE klass, VALUE document)",
      "178:   doc = doc->doc;",
      "",
      "[Added Lines]",
      "179: static VALUE from_document(int argc, VALUE *argv, VALUE klass)",
      "181:   VALUE document;",
      "182:   VALUE parse_options;",
      "183:   int parse_options_int;",
      "189:   int scanned_args = 0;",
      "191:   scanned_args = rb_scan_args(argc, argv, \"11\", &document, &parse_options);",
      "196:   if (scanned_args == 1) {",
      "197:     parse_options = rb_const_get(rb_const_get(mNokogiriXml, rb_intern(\"ParseOptions\")), rb_intern(\"DEFAULT_SCHEMA\"));",
      "198:   }",
      "199:   parse_options_int = (int)NUM2INT(rb_funcall(parse_options, rb_intern(\"to_i\"), 0));",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "212:   rb_schema = Data_Wrap_Struct(klass, 0, dealloc, schema);",
      "213:   rb_iv_set(rb_schema, \"@errors\", errors);",
      "215:   return rb_schema;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "235:   rb_iv_set(rb_schema, \"@parse_options\", parse_options);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "227:   cNokogiriXmlSchema = klass;",
      "232:   rb_define_private_method(klass, \"validate_document\", validate_document, 1);",
      "233:   rb_define_private_method(klass, \"validate_file\",     validate_file, 1);",
      "",
      "[Removed Lines]",
      "229:   rb_define_singleton_method(klass, \"read_memory\", read_memory, 1);",
      "230:   rb_define_singleton_method(klass, \"from_document\", from_document, 1);",
      "",
      "[Added Lines]",
      "251:   rb_define_singleton_method(klass, \"read_memory\", read_memory, -1);",
      "252:   rb_define_singleton_method(klass, \"from_document\", from_document, -1);",
      "",
      "---------------"
    ],
    "lib/nokogiri/xml/parse_options.rb||lib/nokogiri/xml/parse_options.rb": [
      "File: lib/nokogiri/xml/parse_options.rb -> lib/nokogiri/xml/parse_options.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "73:       DEFAULT_XML  = RECOVER | NONET",
      "74:       # the default options used for parsing HTML documents",
      "75:       DEFAULT_HTML = RECOVER | NOERROR | NOWARNING | NONET",
      "77:       attr_accessor :options",
      "78:       def initialize options = STRICT",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76:       # the default options used for parsing XML schemas",
      "77:       DEFAULT_SCHEMA = NONET",
      "",
      "---------------"
    ],
    "lib/nokogiri/xml/relax_ng.rb||lib/nokogiri/xml/relax_ng.rb": [
      "File: lib/nokogiri/xml/relax_ng.rb -> lib/nokogiri/xml/relax_ng.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "5:       ###",
      "6:       # Create a new Nokogiri::XML::RelaxNG document from +string_or_io+.",
      "7:       # See Nokogiri::XML::RelaxNG for an example.",
      "10:       end",
      "11:     end",
      "",
      "[Removed Lines]",
      "8:       def RelaxNG string_or_io",
      "9:         RelaxNG.new(string_or_io)",
      "",
      "[Added Lines]",
      "8:       def RelaxNG(string_or_io, options = ParseOptions::DEFAULT_SCHEMA)",
      "9:         RelaxNG.new(string_or_io, options)",
      "",
      "---------------"
    ],
    "lib/nokogiri/xml/schema.rb||lib/nokogiri/xml/schema.rb": [
      "File: lib/nokogiri/xml/schema.rb -> lib/nokogiri/xml/schema.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "5:       ###",
      "6:       # Create a new Nokogiri::XML::Schema object using a +string_or_io+",
      "7:       # object.",
      "10:       end",
      "11:     end",
      "",
      "[Removed Lines]",
      "8:       def Schema string_or_io",
      "9:         Schema.new(string_or_io)",
      "",
      "[Added Lines]",
      "8:       def Schema(string_or_io, options = ParseOptions::DEFAULT_SCHEMA)",
      "9:         Schema.new(string_or_io, options)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "30:     class Schema",
      "31:       # Errors while parsing the schema file",
      "32:       attr_accessor :errors",
      "34:       ###",
      "35:       # Create a new Nokogiri::XML::Schema object using a +string_or_io+",
      "36:       # object.",
      "39:       end",
      "41:       ###",
      "",
      "[Removed Lines]",
      "37:       def self.new string_or_io",
      "38:         from_document Nokogiri::XML(string_or_io)",
      "",
      "[Added Lines]",
      "33:       # The Nokogiri::XML::ParseOptions used to parse the schema",
      "34:       attr_accessor :parse_options",
      "39:       def self.new string_or_io, options = ParseOptions::DEFAULT_SCHEMA",
      "40:         from_document(Nokogiri::XML(string_or_io), options)",
      "",
      "---------------"
    ],
    "test/xml/test_relax_ng.rb||test/xml/test_relax_ng.rb": [
      "File: test/xml/test_relax_ng.rb -> test/xml/test_relax_ng.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "26:         assert_equal 0, xsd.errors.length",
      "27:       end",
      "29:       def test_parse_with_errors",
      "30:         xml = File.read(ADDRESS_SCHEMA_FILE).sub(/name=\"/, 'name=')",
      "31:         assert_raises(Nokogiri::XML::SyntaxError) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29:       def test_constructor_method_with_parse_options",
      "30:         schema = Nokogiri::XML::RelaxNG(File.read(ADDRESS_SCHEMA_FILE))",
      "31:         assert_equal Nokogiri::XML::ParseOptions::DEFAULT_SCHEMA, schema.parse_options",
      "33:         schema = Nokogiri::XML::RelaxNG(File.read(ADDRESS_SCHEMA_FILE), Nokogiri::XML::ParseOptions.new.recover)",
      "34:         assert_equal Nokogiri::XML::ParseOptions.new.recover, schema.parse_options",
      "35:       end",
      "37:       def test_new_with_parse_options",
      "38:         schema = Nokogiri::XML::RelaxNG.new(File.read(ADDRESS_SCHEMA_FILE))",
      "39:         assert_equal Nokogiri::XML::ParseOptions::DEFAULT_SCHEMA, schema.parse_options",
      "41:         schema = Nokogiri::XML::RelaxNG.new(File.read(ADDRESS_SCHEMA_FILE), Nokogiri::XML::ParseOptions.new.recover)",
      "42:         assert_equal Nokogiri::XML::ParseOptions.new.recover, schema.parse_options",
      "43:       end",
      "45:       def test_from_document_with_parse_options",
      "46:         schema = Nokogiri::XML::RelaxNG.from_document(Nokogiri::XML::Document.parse(File.read(ADDRESS_SCHEMA_FILE)))",
      "47:         assert_equal Nokogiri::XML::ParseOptions::DEFAULT_SCHEMA, schema.parse_options",
      "49:         schema = Nokogiri::XML::RelaxNG.from_document(Nokogiri::XML::Document.parse(File.read(ADDRESS_SCHEMA_FILE)),",
      "50:                                                       Nokogiri::XML::ParseOptions.new.recover)",
      "51:         assert_equal Nokogiri::XML::ParseOptions.new.recover, schema.parse_options",
      "52:       end",
      "54:       def test_read_memory_with_parse_options",
      "55:         schema = Nokogiri::XML::RelaxNG.read_memory(File.read(ADDRESS_SCHEMA_FILE))",
      "56:         assert_equal Nokogiri::XML::ParseOptions::DEFAULT_SCHEMA, schema.parse_options",
      "58:         schema = Nokogiri::XML::RelaxNG.read_memory(File.read(ADDRESS_SCHEMA_FILE),",
      "59:                                                     Nokogiri::XML::ParseOptions.new.recover)",
      "60:         assert_equal Nokogiri::XML::ParseOptions.new.recover, schema.parse_options",
      "61:       end",
      "",
      "---------------"
    ],
    "test/xml/test_schema.rb||test/xml/test_schema.rb": [
      "File: test/xml/test_schema.rb -> test/xml/test_schema.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "109:         assert_instance_of Nokogiri::XML::Schema, xsd",
      "110:       end",
      "112:       def test_parse_with_io",
      "113:         xsd = nil",
      "114:         File.open(PO_SCHEMA_FILE, \"rb\") { |f|",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "112:       def test_schema_method_with_parse_options",
      "113:         schema = Nokogiri::XML::Schema(File.read(PO_SCHEMA_FILE))",
      "114:         assert_equal Nokogiri::XML::ParseOptions::DEFAULT_SCHEMA, schema.parse_options",
      "116:         schema = Nokogiri::XML::Schema(File.read(PO_SCHEMA_FILE), Nokogiri::XML::ParseOptions.new.recover)",
      "117:         assert_equal Nokogiri::XML::ParseOptions.new.recover, schema.parse_options",
      "118:       end",
      "120:       def test_schema_new_with_parse_options",
      "121:         schema = Nokogiri::XML::Schema.new(File.read(PO_SCHEMA_FILE))",
      "122:         assert_equal Nokogiri::XML::ParseOptions::DEFAULT_SCHEMA, schema.parse_options",
      "124:         schema = Nokogiri::XML::Schema.new(File.read(PO_SCHEMA_FILE), Nokogiri::XML::ParseOptions.new.recover)",
      "125:         assert_equal Nokogiri::XML::ParseOptions.new.recover, schema.parse_options",
      "126:       end",
      "128:       def test_schema_from_document_with_parse_options",
      "129:         schema = Nokogiri::XML::Schema.from_document(Nokogiri::XML::Document.parse(File.read(PO_SCHEMA_FILE)))",
      "130:         assert_equal Nokogiri::XML::ParseOptions::DEFAULT_SCHEMA, schema.parse_options",
      "132:         schema = Nokogiri::XML::Schema.from_document(Nokogiri::XML::Document.parse(File.read(PO_SCHEMA_FILE)),",
      "133:                                                      Nokogiri::XML::ParseOptions.new.recover)",
      "134:         assert_equal Nokogiri::XML::ParseOptions.new.recover, schema.parse_options",
      "135:       end",
      "137:       def test_schema_read_memory_with_parse_options",
      "138:         schema = Nokogiri::XML::Schema.read_memory(File.read(PO_SCHEMA_FILE))",
      "139:         assert_equal Nokogiri::XML::ParseOptions::DEFAULT_SCHEMA, schema.parse_options",
      "141:         schema = Nokogiri::XML::Schema.read_memory(File.read(PO_SCHEMA_FILE), Nokogiri::XML::ParseOptions.new.recover)",
      "142:         assert_equal Nokogiri::XML::ParseOptions.new.recover, schema.parse_options",
      "143:       end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "eb4a9885969cd1e6f8ad32e274d42e81c2cd8e02",
      "candidate_info": {
        "commit_hash": "eb4a9885969cd1e6f8ad32e274d42e81c2cd8e02",
        "repo": "sparklemotion/nokogiri",
        "commit_url": "https://github.com/sparklemotion/nokogiri/commit/eb4a9885969cd1e6f8ad32e274d42e81c2cd8e02",
        "files": [
          "CHANGELOG.md",
          "ext/nokogiri/xml_node.c",
          "lib/nokogiri/xml/parse_options.rb",
          "test/xml/test_node.rb"
        ],
        "message": "feat(cruby): support line numbers larger than a short\n\n- set BIG_LINES parse option by default which will allow Node#line to return large integers\n- allow Node#line= to set large line numbers on text nodes\n\nFixes #1764, #1493, #1617, #1505, #1003, #533",
        "before_after_code_files": [
          "ext/nokogiri/xml_node.c||ext/nokogiri/xml_node.c",
          "lib/nokogiri/xml/parse_options.rb||lib/nokogiri/xml/parse_options.rb",
          "test/xml/test_node.rb||test/xml/test_node.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/nokogiri/xml/parse_options.rb||lib/nokogiri/xml/parse_options.rb"
          ],
          "candidate": [
            "lib/nokogiri/xml/parse_options.rb||lib/nokogiri/xml/parse_options.rb"
          ]
        }
      },
      "candidate_diff": {
        "ext/nokogiri/xml_node.c||ext/nokogiri/xml_node.c": [
          "File: ext/nokogiri/xml_node.c -> ext/nokogiri/xml_node.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1377: static VALUE",
          "1379: {",
          "1384: }",
          "",
          "[Removed Lines]",
          "1378: line(VALUE self)",
          "1380:   xmlNodePtr node;",
          "1381:   Data_Get_Struct(self, xmlNode, node);",
          "1383:   return INT2NUM(xmlGetLineNo(node));",
          "",
          "[Added Lines]",
          "1378: rb_xml_node_line(VALUE rb_node)",
          "1380:   xmlNodePtr c_node;",
          "1381:   Data_Get_Struct(rb_node, xmlNode, c_node);",
          "1383:   return INT2NUM(xmlGetLineNo(c_node));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1392: static VALUE",
          "1394: {",
          "1401:   }",
          "1404: }",
          "",
          "[Removed Lines]",
          "1393: set_line(VALUE self, VALUE num)",
          "1395:   xmlNodePtr node;",
          "1396:   int value = NUM2INT(num);",
          "1398:   Data_Get_Struct(self, xmlNode, node);",
          "1399:   if (value < 65535) {",
          "1400:     node->line = value;",
          "1403:   return num;",
          "",
          "[Added Lines]",
          "1393: rb_xml_node_line_set(VALUE rb_node, VALUE rb_line_number)",
          "1395:   xmlNodePtr c_node;",
          "1396:   int line_number = NUM2INT(rb_line_number);",
          "1398:   Data_Get_Struct(rb_node, xmlNode, c_node);",
          "1402:   if (line_number < 65535) {",
          "1403:     c_node->line = (short) line_number;",
          "1404:   } else {",
          "1405:     c_node->line = 65535;",
          "1406:     if (c_node->type == XML_TEXT_NODE) {",
          "1407:       c_node->psvi = (void *)(ptrdiff_t) line_number;",
          "1408:     }",
          "1411:   return rb_line_number;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1805:   rb_define_method(cNokogiriXmlNode, \"create_internal_subset\", create_internal_subset, 3);",
          "1806:   rb_define_method(cNokogiriXmlNode, \"create_external_subset\", create_external_subset, 3);",
          "1807:   rb_define_method(cNokogiriXmlNode, \"pointer_id\", pointer_id, 0);",
          "1810:   rb_define_method(cNokogiriXmlNode, \"content\", get_native_content, 0);",
          "1811:   rb_define_method(cNokogiriXmlNode, \"native_content=\", set_native_content, 1);",
          "1812:   rb_define_method(cNokogiriXmlNode, \"lang\", get_lang, 0);",
          "",
          "[Removed Lines]",
          "1808:   rb_define_method(cNokogiriXmlNode, \"line\", line, 0);",
          "1809:   rb_define_method(cNokogiriXmlNode, \"line=\", set_line, 1);",
          "",
          "[Added Lines]",
          "1816:   rb_define_method(cNokogiriXmlNode, \"line\", rb_xml_node_line, 0);",
          "1817:   rb_define_method(cNokogiriXmlNode, \"line=\", rb_xml_node_line_set, 1);",
          "",
          "---------------"
        ],
        "lib/nokogiri/xml/parse_options.rb||lib/nokogiri/xml/parse_options.rb": [
          "File: lib/nokogiri/xml/parse_options.rb -> lib/nokogiri/xml/parse_options.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:       NOBASEFIX   = 1 << 18",
          "69:       # relax any hardcoded limit from the parser",
          "70:       HUGE        = 1 << 19",
          "72:       # the default options used for parsing XML documents",
          "74:       # the default options used for parsing XSLT stylesheets",
          "76:       # the default options used for parsing HTML documents",
          "78:       # the default options used for parsing XML schemas",
          "81:       attr_accessor :options",
          "82:       def initialize options = STRICT",
          "",
          "[Removed Lines]",
          "73:       DEFAULT_XML  = RECOVER | NONET",
          "75:       DEFAULT_XSLT = RECOVER | NONET | NOENT | DTDLOAD | DTDATTR | NOCDATA",
          "77:       DEFAULT_HTML = RECOVER | NOERROR | NOWARNING | NONET",
          "79:       DEFAULT_SCHEMA = NONET",
          "",
          "[Added Lines]",
          "71:       # line numbers stored as long int (instead of a short int)",
          "72:       BIG_LINES   = 1 << 22",
          "75:       DEFAULT_XML  = RECOVER | NONET | BIG_LINES",
          "77:       DEFAULT_XSLT = RECOVER | NONET | NOENT | DTDLOAD | DTDATTR | NOCDATA | BIG_LINES",
          "79:       DEFAULT_HTML = RECOVER | NOERROR | NOWARNING | NONET | BIG_LINES",
          "81:       DEFAULT_SCHEMA = NONET | BIG_LINES",
          "",
          "---------------"
        ],
        "test/xml/test_node.rb||test/xml/test_node.rb": [
          "File: test/xml/test_node.rb -> test/xml/test_node.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1258:             assert_equal(2, set[0].line)",
          "1259:             assert_equal(5, set[1].line)",
          "1260:           end",
          "1261:         end",
          "1263:         describe \"#line=\" do",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1262:           it \"supports a line number greater than a short int\" do",
          "1263:             max_short_int = (1 << 16) - 1",
          "1264:             xml = StringIO.new.tap do |io|",
          "1265:               io << \"<root>\"",
          "1266:               max_short_int.times do |j|",
          "1267:                 io << \"<a>#{j}</a>\\n\"",
          "1268:                 io << \"<b>#{j}</b>\\n\"",
          "1269:               end",
          "1270:               io << \"<x/>\\n\"",
          "1271:               io << \"</root>\"",
          "1272:             end.string",
          "1274:             if Nokogiri.uses_libxml?",
          "1275:               doc = Nokogiri::XML(xml) { |c| c.nobig_lines }",
          "1276:               node = doc.at_css(\"x\")",
          "1277:               assert_operator(node.line, :==, max_short_int)",
          "1278:             end",
          "1280:             doc = Nokogiri::XML(xml)",
          "1281:             node = doc.at_css(\"x\")",
          "1282:             assert_operator(node.line, :>, max_short_int)",
          "1283:           end",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1268:             node.line = 54321",
          "1269:             assert_equal(54321, node.line)",
          "1270:           end",
          "1271:         end",
          "1272:       end",
          "1273:     end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1295:           it \"supports a line number greater than a short int for text nodes\" do",
          "1296:             skip_unless_libxml2(\"Xerces does not have line numbers for nodes\")",
          "1298:             max_short_int = (1 << 16) - 1",
          "1299:             line_number = max_short_int + 100",
          "1301:             document = Nokogiri::XML::Document.parse(\"<root><a>text node</a></root>\")",
          "1302:             node = document.at_css(\"a\").children.first",
          "1303:             node.line = line_number",
          "1304:             assert_equal(line_number, node.line)",
          "1305:           end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "601e5687252268d245ffe77f585c060b1bbd1756",
      "candidate_info": {
        "commit_hash": "601e5687252268d245ffe77f585c060b1bbd1756",
        "repo": "sparklemotion/nokogiri",
        "commit_url": "https://github.com/sparklemotion/nokogiri/commit/601e5687252268d245ffe77f585c060b1bbd1756",
        "files": [
          "ext/java/nokogiri/XmlSchema.java"
        ],
        "message": "Resolve potential NPE in SchemaResourceResolver\n\nThe LSResourceResolver interface specifies that the systemId parameter may be null. The SchemaResourceResolver uses this argument without checking for this which can result a NullPointerException. This patch adds an extra null check before using the parameter.",
        "before_after_code_files": [
          "ext/java/nokogiri/XmlSchema.java||ext/java/nokogiri/XmlSchema.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/java/nokogiri/XmlSchema.java||ext/java/nokogiri/XmlSchema.java"
          ],
          "candidate": [
            "ext/java/nokogiri/XmlSchema.java||ext/java/nokogiri/XmlSchema.java"
          ]
        }
      },
      "candidate_diff": {
        "ext/java/nokogiri/XmlSchema.java||ext/java/nokogiri/XmlSchema.java": [
          "File: ext/java/nokogiri/XmlSchema.java -> ext/java/nokogiri/XmlSchema.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:                     String systemId,",
          "277:                     String baseURI)",
          "278:     {",
          "280:         if (systemId.startsWith(XMLConstants.W3C_XML_SCHEMA_NS_URI)) {",
          "281:           return null; // use default resolver",
          "282:         }",
          "",
          "[Removed Lines]",
          "279:       if (noNet && (systemId.startsWith(\"http://\") || systemId.startsWith(\"ftp://\"))) {",
          "",
          "[Added Lines]",
          "279:       if (noNet && systemId != null && (systemId.startsWith(\"http://\") || systemId.startsWith(\"ftp://\"))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "74abb4f2e73bb61b17d9f1a0ad717c881943b877",
      "candidate_info": {
        "commit_hash": "74abb4f2e73bb61b17d9f1a0ad717c881943b877",
        "repo": "sparklemotion/nokogiri",
        "commit_url": "https://github.com/sparklemotion/nokogiri/commit/74abb4f2e73bb61b17d9f1a0ad717c881943b877",
        "files": [
          "ext/nokogiri/xml_schema.c",
          "test/xml/test_schema.rb"
        ],
        "message": "Work around a bug in libxml2\n\nThis commit works around a bug in libxml2 where parsing schemas can\nresult in dangling pointers which can lead to a segv.\n\nUpstream bug is here:  https://gitlab.gnome.org/GNOME/libxml2/issues/148\n\nFixes #1985",
        "before_after_code_files": [
          "ext/nokogiri/xml_schema.c||ext/nokogiri/xml_schema.c",
          "test/xml/test_schema.rb||test/xml/test_schema.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/nokogiri/xml_schema.c||ext/nokogiri/xml_schema.c",
            "test/xml/test_schema.rb||test/xml/test_schema.rb"
          ],
          "candidate": [
            "ext/nokogiri/xml_schema.c||ext/nokogiri/xml_schema.c",
            "test/xml/test_schema.rb||test/xml/test_schema.rb"
          ]
        }
      },
      "candidate_diff": {
        "ext/nokogiri/xml_schema.c||ext/nokogiri/xml_schema.c": [
          "File: ext/nokogiri/xml_schema.c -> ext/nokogiri/xml_schema.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:   return rb_schema;",
          "134: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141: static int has_blank_nodes_p(VALUE cache)",
          "142: {",
          "143:     long i;",
          "145:     if (NIL_P(cache)) {",
          "146:         return 0;",
          "147:     }",
          "149:     for (i = 0; i < RARRAY_LEN(cache); i++) {",
          "150:         xmlNodePtr node;",
          "151:         VALUE element = rb_ary_entry(cache, i);",
          "152:         Data_Get_Struct(element, xmlNode, node);",
          "153:         if (xmlIsBlankNode(node)) {",
          "154:             return 1;",
          "155:         }",
          "156:     }",
          "158:     return 0;",
          "159: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:   doc = doc->doc;",
          "155:   ctx = xmlSchemaNewDocParserCtxt(doc);",
          "157:   errors = rb_ary_new();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:   if (has_blank_nodes_p(DOC_NODE_CACHE(doc))) {",
          "181:     rb_raise(rb_eArgError, \"Creating a schema from a document that has blank nodes exposed to Ruby is dangerous\");",
          "182:   }",
          "",
          "---------------"
        ],
        "test/xml/test_schema.rb||test/xml/test_schema.rb": [
          "File: test/xml/test_schema.rb -> test/xml/test_schema.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:         assert @xsd = Nokogiri::XML::Schema(File.read(PO_SCHEMA_FILE))",
          "8:       end",
          "10:       def test_schema_from_document",
          "11:         doc = Nokogiri::XML(File.open(PO_SCHEMA_FILE))",
          "12:         assert doc",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:       def test_segv",
          "11:         skip(\"Pure Java version shouldn't have this bug\") unless Nokogiri.uses_libxml?",
          "13:         # This is a test for a workaround for a bug in LibXML2.  The upstream",
          "14:         # bug is here: https://gitlab.gnome.org/GNOME/libxml2/issues/148",
          "15:         # Schema creation can result in dangling pointers.  If no nodes have",
          "16:         # been exposed, then it should be fine to create a schema.  If nodes",
          "17:         # have been exposed to Ruby, then we need to make sure they won't be",
          "18:         # freed out from under us.",
          "19:         doc = <<~doc",
          "20: <?xml version=\"1.0\" encoding=\"UTF-8\" ?><xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">",
          "21: <xs:element name=\"foo\" type=\"xs:string\"/></xs:schema>",
          "22:         doc",
          "24:         # This is OK, no nodes have been exposed",
          "25:         xsd_doc = Nokogiri::XML(doc)",
          "26:         assert Nokogiri::XML::Schema.from_document(xsd_doc)",
          "28:         # This is not OK, nodes have been exposed to Ruby",
          "29:         xsd_doc = Nokogiri::XML(doc)",
          "30:         node = xsd_doc.root.children.find(&:blank?) # Finds a node",
          "32:         ex = assert_raise(ArgumentError) do",
          "33:           Nokogiri::XML::Schema.from_document(xsd_doc)",
          "34:         end",
          "35:         assert_match(/blank nodes/, ex.message)",
          "36:       end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "88911fef8f15155f11f5eff844f1a286947a685d",
      "candidate_info": {
        "commit_hash": "88911fef8f15155f11f5eff844f1a286947a685d",
        "repo": "sparklemotion/nokogiri",
        "commit_url": "https://github.com/sparklemotion/nokogiri/commit/88911fef8f15155f11f5eff844f1a286947a685d",
        "files": [
          "ext/java/nokogiri/XmlSchema.java"
        ],
        "message": "Resolve potential NPE in SchemaResourceResolver\n\nThe LSResourceResolver interface specifies that the systemId parameter may be null. The SchemaResourceResolver uses this argument without checking for this which can result a NullPointerException. This patch adds an extra null check before using the parameter.",
        "before_after_code_files": [
          "ext/java/nokogiri/XmlSchema.java||ext/java/nokogiri/XmlSchema.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/java/nokogiri/XmlSchema.java||ext/java/nokogiri/XmlSchema.java"
          ],
          "candidate": [
            "ext/java/nokogiri/XmlSchema.java||ext/java/nokogiri/XmlSchema.java"
          ]
        }
      },
      "candidate_diff": {
        "ext/java/nokogiri/XmlSchema.java||ext/java/nokogiri/XmlSchema.java": [
          "File: ext/java/nokogiri/XmlSchema.java -> ext/java/nokogiri/XmlSchema.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:                     String systemId,",
          "277:                     String baseURI)",
          "278:     {",
          "280:         if (systemId.startsWith(XMLConstants.W3C_XML_SCHEMA_NS_URI)) {",
          "281:           return null; // use default resolver",
          "282:         }",
          "",
          "[Removed Lines]",
          "279:       if (noNet && (systemId.startsWith(\"http://\") || systemId.startsWith(\"ftp://\"))) {",
          "",
          "[Added Lines]",
          "279:       if (noNet && systemId != null && (systemId.startsWith(\"http://\") || systemId.startsWith(\"ftp://\"))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "926b59a13c78cddba402e7bbf5675ff129349f01",
      "candidate_info": {
        "commit_hash": "926b59a13c78cddba402e7bbf5675ff129349f01",
        "repo": "sparklemotion/nokogiri",
        "commit_url": "https://github.com/sparklemotion/nokogiri/commit/926b59a13c78cddba402e7bbf5675ff129349f01",
        "files": [
          ".rubocop_todo.yml",
          "lib/nokogiri/css/xpath_visitor.rb",
          "lib/nokogiri/html4/element_description_defaults.rb",
          "lib/nokogiri/html5.rb",
          "lib/nokogiri/xml/document.rb",
          "lib/nokogiri/xml/document_fragment.rb",
          "rakelib/extensions.rake",
          "scripts/test-gem-file-contents",
          "scripts/test-gem-installation",
          "test/css/test_css_integration.rb",
          "test/css/test_xpath_visitor.rb",
          "test/html4/sax/test_parser.rb",
          "test/html4/sax/test_parser_context.rb",
          "test/html4/test_builder.rb",
          "test/html4/test_document_encoding.rb",
          "test/html4/test_document_fragment.rb",
          "test/test_convert_xpath.rb",
          "test/test_gem_platform.rb",
          "test/xml/test_builder.rb",
          "test/xml/test_document.rb",
          "test/xml/test_node.rb",
          "test/xml/test_node_reparenting.rb",
          "test/xml/test_node_set.rb",
          "test/xml/test_reader.rb",
          "test/xml/test_relax_ng.rb",
          "test/xml/test_schema.rb",
          "test/xml/test_xpath.rb",
          "test/xslt/test_exception_handling.rb"
        ],
        "message": "style(rubocop): consistent indentation",
        "before_after_code_files": [
          "lib/nokogiri/css/xpath_visitor.rb||lib/nokogiri/css/xpath_visitor.rb",
          "lib/nokogiri/html4/element_description_defaults.rb||lib/nokogiri/html4/element_description_defaults.rb",
          "lib/nokogiri/html5.rb||lib/nokogiri/html5.rb",
          "lib/nokogiri/xml/document.rb||lib/nokogiri/xml/document.rb",
          "lib/nokogiri/xml/document_fragment.rb||lib/nokogiri/xml/document_fragment.rb",
          "rakelib/extensions.rake||rakelib/extensions.rake",
          "test/css/test_css_integration.rb||test/css/test_css_integration.rb",
          "test/css/test_xpath_visitor.rb||test/css/test_xpath_visitor.rb",
          "test/html4/sax/test_parser.rb||test/html4/sax/test_parser.rb",
          "test/html4/sax/test_parser_context.rb||test/html4/sax/test_parser_context.rb",
          "test/html4/test_builder.rb||test/html4/test_builder.rb",
          "test/html4/test_document_encoding.rb||test/html4/test_document_encoding.rb",
          "test/html4/test_document_fragment.rb||test/html4/test_document_fragment.rb",
          "test/test_convert_xpath.rb||test/test_convert_xpath.rb",
          "test/test_gem_platform.rb||test/test_gem_platform.rb",
          "test/xml/test_builder.rb||test/xml/test_builder.rb",
          "test/xml/test_document.rb||test/xml/test_document.rb",
          "test/xml/test_node.rb||test/xml/test_node.rb",
          "test/xml/test_node_reparenting.rb||test/xml/test_node_reparenting.rb",
          "test/xml/test_node_set.rb||test/xml/test_node_set.rb",
          "test/xml/test_reader.rb||test/xml/test_reader.rb",
          "test/xml/test_relax_ng.rb||test/xml/test_relax_ng.rb",
          "test/xml/test_schema.rb||test/xml/test_schema.rb",
          "test/xml/test_xpath.rb||test/xml/test_xpath.rb",
          "test/xslt/test_exception_handling.rb||test/xslt/test_exception_handling.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/xml/test_relax_ng.rb||test/xml/test_relax_ng.rb",
            "test/xml/test_schema.rb||test/xml/test_schema.rb"
          ],
          "candidate": [
            "test/xml/test_relax_ng.rb||test/xml/test_relax_ng.rb",
            "test/xml/test_schema.rb||test/xml/test_schema.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/nokogiri/css/xpath_visitor.rb||lib/nokogiri/css/xpath_visitor.rb": [
          "File: lib/nokogiri/css/xpath_visitor.rb -> lib/nokogiri/css/xpath_visitor.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:       def visit_attribute_condition node",
          "79:         attribute = if (node.value.first.type == :FUNCTION) or (node.value.first.value.first =~ /::/)",
          "84:         attribute += node.value.first.accept(self)",
          "86:         # non-standard. attributes starting with '@'",
          "",
          "[Removed Lines]",
          "80:                       ''",
          "81:                     else",
          "82:                       '@'",
          "83:                     end",
          "",
          "[Added Lines]",
          "80:           ''",
          "81:         else",
          "82:           '@'",
          "83:         end",
          "",
          "---------------"
        ],
        "lib/nokogiri/html4/element_description_defaults.rb||lib/nokogiri/html4/element_description_defaults.rb": [
          "File: lib/nokogiri/html4/element_description_defaults.rb -> lib/nokogiri/html4/element_description_defaults.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:       # defined there.",
          "11:       Desc = Struct.new(\"HTMLElementDescription\", :name,",
          "18:       # This is filled in down below.",
          "19:       DefaultDescriptions = Hash.new()",
          "",
          "[Removed Lines]",
          "12:                         :startTag, :endTag, :saveEndTag,",
          "13:                         :empty, :depr, :dtd, :isinline,",
          "14:                         :desc,",
          "15:                         :subelts, :defaultsubelt,",
          "16:                         :attrs_opt, :attrs_depr, :attrs_req)",
          "",
          "[Added Lines]",
          "12:         :startTag, :endTag, :saveEndTag,",
          "13:         :empty, :depr, :dtd, :isinline,",
          "14:         :desc,",
          "15:         :subelts, :defaultsubelt,",
          "16:         :attrs_opt, :attrs_depr, :attrs_req)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "650:         name = descriptor[0]",
          "652:         begin",
          "661:         rescue => e",
          "664:         end",
          "666:         DefaultDescriptions[name] = d",
          "",
          "[Removed Lines]",
          "653:         d = Desc.new(*descriptor)",
          "655:         # flatten all the attribute lists (Ruby1.9, *[a,b,c] can be",
          "656:         # used to flatten a literal list, but not in Ruby1.8).",
          "657:         d[:subelts] = d[:subelts].flatten",
          "658:         d[:attrs_opt] = d[:attrs_opt].flatten",
          "659:         d[:attrs_depr] = d[:attrs_depr].flatten",
          "660:           d[:attrs_req] = d[:attrs_req].flatten",
          "662:             p name",
          "663:           raise e",
          "",
          "[Added Lines]",
          "653:           d = Desc.new(*descriptor)",
          "655:           # flatten all the attribute lists (Ruby1.9, *[a,b,c] can be",
          "656:           # used to flatten a literal list, but not in Ruby1.8).",
          "657:           d[:subelts] = d[:subelts].flatten",
          "658:           d[:attrs_opt] = d[:attrs_opt].flatten",
          "659:           d[:attrs_depr] = d[:attrs_depr].flatten",
          "660:             d[:attrs_req] = d[:attrs_req].flatten",
          "662:           p name",
          "663:             raise e",
          "",
          "---------------"
        ],
        "lib/nokogiri/html5.rb||lib/nokogiri/html5.rb": [
          "File: lib/nokogiri/html5.rb -> lib/nokogiri/html5.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:     #  * :basic_auth => [username, password]",
          "256:     def self.get(uri, options = {})",
          "257:       warn(\"Nokogiri::HTML5.get is deprecated and will be removed in a future version of Nokogiri.\",",
          "259:       get_impl(uri, options)",
          "260:     end",
          "",
          "[Removed Lines]",
          "258:            uplevel: 1, category: :deprecated)",
          "",
          "[Added Lines]",
          "258:         uplevel: 1, category: :deprecated)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "444:       when XML::Node::PI_NODE",
          "445:         io << '<?' << current_node.content << '>'",
          "446:       when XML::Node::DOCUMENT_TYPE_NODE, XML::Node::DTD_NODE",
          "448:       when XML::Node::HTML_DOCUMENT_NODE, XML::Node::DOCUMENT_FRAG_NODE",
          "449:         current_node.children.each do |child|",
          "450:           serialize_node_internal(child, io, encoding, options)",
          "",
          "[Removed Lines]",
          "447:           io << '<!DOCTYPE ' << current_node.name << '>'",
          "",
          "[Added Lines]",
          "447:         io << '<!DOCTYPE ' << current_node.name << '>'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "457:     def self.escape_text(text, encoding, attribute_mode)",
          "458:       if attribute_mode",
          "459:         text = text.gsub(/[&\\u00a0\"]/,",
          "461:       else",
          "462:         text = text.gsub(/[&\\u00a0<>]/,",
          "464:       end",
          "465:       # Not part of the standard",
          "466:       text.encode(encoding, fallback: lambda { |c| \"&\\#x#{c.ord.to_s(16)};\" })",
          "",
          "[Removed Lines]",
          "460:                            '&' => '&amp;', \"\\u00a0\" => '&nbsp;', '\"' => '&quot;')",
          "463:                            '&' => '&amp;', \"\\u00a0\" => '&nbsp;', '<' => '&lt;', '>' => '&gt;')",
          "",
          "[Added Lines]",
          "460:           '&' => '&amp;', \"\\u00a0\" => '&nbsp;', '\"' => '&quot;')",
          "463:           '&' => '&amp;', \"\\u00a0\" => '&nbsp;', '<' => '&lt;', '>' => '&gt;')",
          "",
          "---------------"
        ],
        "lib/nokogiri/xml/document.rb||lib/nokogiri/xml/document.rb": [
          "File: lib/nokogiri/xml/document.rb -> lib/nokogiri/xml/document.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:         end",
          "63:         doc = if string_or_io.respond_to?(:read)",
          "76:         # do xinclude processing",
          "77:         doc.do_xinclude(options) if options.xinclude?",
          "",
          "[Removed Lines]",
          "64:                 if string_or_io.is_a?(Pathname)",
          "65:                   # resolve the Pathname to the file and open it as an IO object, see #2110",
          "66:                   string_or_io = string_or_io.expand_path.open",
          "67:                   url ||= string_or_io.path",
          "68:                 end",
          "70:                 read_io(string_or_io, url, encoding, options.to_i)",
          "71:               else",
          "72:                 # read_memory pukes on empty docs",
          "73:                 read_memory(string_or_io, url, encoding, options.to_i)",
          "74:               end",
          "",
          "[Added Lines]",
          "64:           if string_or_io.is_a?(Pathname)",
          "65:             # resolve the Pathname to the file and open it as an IO object, see #2110",
          "66:             string_or_io = string_or_io.expand_path.open",
          "67:             url ||= string_or_io.path",
          "68:           end",
          "70:           read_io(string_or_io, url, encoding, options.to_i)",
          "71:         else",
          "72:           # read_memory pukes on empty docs",
          "73:           read_memory(string_or_io, url, encoding, options.to_i)",
          "74:         end",
          "",
          "---------------"
        ],
        "lib/nokogiri/xml/document_fragment.rb||lib/nokogiri/xml/document_fragment.rb": [
          "File: lib/nokogiri/xml/document_fragment.rb -> lib/nokogiri/xml/document_fragment.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:         return self unless tags",
          "15:         children = if ctx",
          "27:         children.each { |child| child.parent = self }",
          "28:       end",
          "",
          "[Removed Lines]",
          "16:                      # Fix for issue#490",
          "17:                      if Nokogiri.jruby?",
          "18:                        # fix for issue #770",
          "19:                        ctx.parse(\"<root #{namespace_declarations(ctx)}>#{tags}</root>\").children",
          "20:                      else",
          "21:                        ctx.parse(tags)",
          "22:                      end",
          "23:                    else",
          "24:                      XML::Document.parse(\"<root>#{tags}</root>\") \\",
          "25:                        .xpath(\"/root/node()\")",
          "26:                    end",
          "",
          "[Added Lines]",
          "16:           # Fix for issue#490",
          "17:           if Nokogiri.jruby?",
          "18:             # fix for issue #770",
          "19:             ctx.parse(\"<root #{namespace_declarations(ctx)}>#{tags}</root>\").children",
          "20:           else",
          "21:             ctx.parse(tags)",
          "22:           end",
          "23:         else",
          "24:           XML::Document.parse(\"<root>#{tags}</root>\") \\",
          "25:             .xpath(\"/root/node()\")",
          "26:         end",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117:         rules.inject(NodeSet.new(document)) do |set, rule|",
          "118:           set += if rule =~ Searchable::LOOKS_LIKE_XPATH",
          "123:         end",
          "124:       end",
          "",
          "[Removed Lines]",
          "119:                    xpath(*([rule, ns, handler, binds].compact))",
          "120:                  else",
          "121:                    children.css(*([rule, ns, handler].compact)) # 'children' is a smell here",
          "122:                  end",
          "",
          "[Added Lines]",
          "119:             xpath(*([rule, ns, handler, binds].compact))",
          "120:           else",
          "121:             children.css(*([rule, ns, handler].compact)) # 'children' is a smell here",
          "122:           end",
          "",
          "---------------"
        ],
        "rakelib/extensions.rake||rakelib/extensions.rake": [
          "File: rakelib/extensions.rake -> rakelib/extensions.rake",
          "--- Hunk 1 ---",
          "[Context before]",
          "281:   desc \"build a jruby gem\"",
          "282:   task \"jruby\" do",
          "283:     RakeCompilerDock.sh(\"gem install bundler --no-document && bundle && bundle exec rake java gem\",",
          "285:   end",
          "287:   desc \"build native gems for windows\"",
          "",
          "[Removed Lines]",
          "284:                         rubyvm: \"jruby\", platform: \"jruby\")",
          "",
          "[Added Lines]",
          "284:       rubyvm: \"jruby\", platform: \"jruby\")",
          "",
          "---------------"
        ],
        "test/css/test_css_integration.rb||test/css/test_css_integration.rb": [
          "File: test/css/test_css_integration.rb -> test/css/test_css_integration.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "350:       def assert_result_rows(intarray, result, word = \"row\")",
          "351:         assert_equal intarray.size, result.size,",
          "353:         assert_equal intarray.map { |j| \"#{word}#{j}\" }.join(\" \"), result.inner_text.strip,",
          "355:       end",
          "356:     end",
          "357:   end",
          "",
          "[Removed Lines]",
          "352:                      \"unexpected number of rows returned: '#{result.inner_text}'\"",
          "354:                      result.inner_text",
          "",
          "[Added Lines]",
          "352:           \"unexpected number of rows returned: '#{result.inner_text}'\"",
          "354:           result.inner_text",
          "",
          "---------------"
        ],
        "test/css/test_xpath_visitor.rb||test/css/test_xpath_visitor.rb": [
          "File: test/css/test_xpath_visitor.rb -> test/css/test_xpath_visitor.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:       it \". class\" do",
          "47:         assert_xpath(\"//*[contains(concat(' ',normalize-space(@class),' '),' awesome ')]\",",
          "49:         assert_xpath(\"//foo[contains(concat(' ',normalize-space(@class),' '),' awesome ')]\",",
          "51:         assert_xpath(\"//foo//*[contains(concat(' ',normalize-space(@class),' '),' awesome ')]\",",
          "53:         assert_xpath(\"//foo//*[contains(concat(' ',normalize-space(@class),' '),' awe.some ')]\",",
          "55:         assert_xpath(\"//*[contains(concat(' ',normalize-space(@class),' '),' a ') and contains(concat(' ',normalize-space(@class),' '),' b ')]\",",
          "57:         assert_xpath(\"//*[contains(concat(' ',normalize-space(@class),' '),' pastoral ')]\",",
          "59:       end",
          "61:       it \"# id\" do",
          "",
          "[Removed Lines]",
          "48:                      parser.parse('.awesome'))",
          "50:                      parser.parse('foo.awesome'))",
          "52:                      parser.parse('foo .awesome'))",
          "54:                      parser.parse('foo .awe\\.some'))",
          "56:                      parser.parse('.a.b'))",
          "58:                      parser.parse('*.pastoral'))",
          "",
          "[Added Lines]",
          "48:           parser.parse('.awesome'))",
          "50:           parser.parse('foo.awesome'))",
          "52:           parser.parse('foo .awesome'))",
          "54:           parser.parse('foo .awe\\.some'))",
          "56:           parser.parse('.a.b'))",
          "58:           parser.parse('*.pastoral'))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "108:         it \"|=\" do",
          "109:           assert_xpath(\"//a[@class='bar' or starts-with(@class,concat('bar','-'))]\",",
          "111:           assert_xpath(\"//a[@class='bar' or starts-with(@class,concat('bar','-'))]\",",
          "113:           assert_xpath(\"//a[@id='Boing' or starts-with(@id,concat('Boing','-'))]\",",
          "115:         end",
          "117:         it \"~=\" do",
          "118:           assert_xpath(\"//a[contains(concat(' ',normalize-space(@class),' '),' bar ')]\",",
          "120:           assert_xpath(\"//a[contains(concat(' ',normalize-space(@class),' '),' bar ')]\",",
          "122:           assert_xpath(\"//a[contains(concat(' ',normalize-space(@class),' '),' bar ')]\",",
          "124:           assert_xpath(\"//a[contains(concat(' ',normalize-space(@class),' '),' bar ')]\",",
          "126:           assert_xpath(\"//a[contains(concat(' ',normalize-space(@data-words),' '),' bar ')]\",",
          "128:         end",
          "130:         it \"^=\" do",
          "",
          "[Removed Lines]",
          "110:                        parser.parse(\"a[@class|='bar']\"))",
          "112:                        parser.parse(\"a[@class |= 'bar']\"))",
          "114:                        parser.parse(\"a[id|='Boing']\"))",
          "119:                        parser.parse(\"a[@class~='bar']\"))",
          "121:                        parser.parse(\"a[@class ~= 'bar']\"))",
          "123:                        parser.parse(\"a[@class~=bar]\"))",
          "125:                        parser.parse(\"a[@class~=\\\"bar\\\"]\"))",
          "127:                        parser.parse(\"a[data-words~=\\\"bar\\\"]\"))",
          "",
          "[Added Lines]",
          "110:             parser.parse(\"a[@class|='bar']\"))",
          "112:             parser.parse(\"a[@class |= 'bar']\"))",
          "114:             parser.parse(\"a[id|='Boing']\"))",
          "119:             parser.parse(\"a[@class~='bar']\"))",
          "121:             parser.parse(\"a[@class ~= 'bar']\"))",
          "123:             parser.parse(\"a[@class~=bar]\"))",
          "125:             parser.parse(\"a[@class~=\\\"bar\\\"]\"))",
          "127:             parser.parse(\"a[data-words~=\\\"bar\\\"]\"))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "135:         it \"$=\" do",
          "136:           assert_xpath(\"//a[substring(@id,string-length(@id)-string-length('Boing')+1,string-length('Boing'))='Boing']\",",
          "138:           assert_xpath(\"//a[substring(@id,string-length(@id)-string-length('Boing')+1,string-length('Boing'))='Boing']\",",
          "140:         end",
          "142:         it \"*=\" do",
          "",
          "[Removed Lines]",
          "137:                        parser.parse(\"a[id$='Boing']\"))",
          "139:                        parser.parse(\"a[id $= 'Boing']\"))",
          "",
          "[Added Lines]",
          "137:             parser.parse(\"a[id$='Boing']\"))",
          "139:             parser.parse(\"a[id $= 'Boing']\"))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "156:         assert_xpath('//a[position()=1]', parser.parse('a:first-of-type()'))",
          "157:         assert_xpath('//a[position()=1]', parser.parse('a:first-of-type')) # no parens",
          "158:         assert_xpath(\"//a[contains(concat(' ',normalize-space(@class),' '),' b ')][position()=1]\",",
          "160:       end",
          "162:       it \":nth-of-type\" do",
          "163:         assert_xpath('//a[position()=99]', parser.parse('a:nth-of-type(99)'))",
          "164:         assert_xpath(\"//a[contains(concat(' ',normalize-space(@class),' '),' b ')][position()=99]\",",
          "166:       end",
          "168:       it \":last-of-type\" do",
          "169:         assert_xpath('//a[position()=last()]', parser.parse('a:last-of-type()'))",
          "170:         assert_xpath('//a[position()=last()]', parser.parse('a:last-of-type')) # no parens",
          "171:         assert_xpath(\"//a[contains(concat(' ',normalize-space(@class),' '),' b ')][position()=last()]\",",
          "173:       end",
          "175:       it \":nth-last-of-type\" do",
          "176:         assert_xpath('//a[position()=last()]', parser.parse('a:nth-last-of-type(1)'))",
          "177:         assert_xpath('//a[position()=last()-98]', parser.parse('a:nth-last-of-type(99)'))",
          "178:         assert_xpath(\"//a[contains(concat(' ',normalize-space(@class),' '),' b ')][position()=last()-98]\",",
          "180:       end",
          "182:       it \":nth and friends (non-standard)\" do",
          "",
          "[Removed Lines]",
          "159:                      parser.parse('a.b:first-of-type')) # no parens",
          "165:                      parser.parse('a.b:nth-of-type(99)'))",
          "172:                      parser.parse('a.b:last-of-type')) # no parens",
          "179:                      parser.parse('a.b:nth-last-of-type(99)'))",
          "",
          "[Added Lines]",
          "159:           parser.parse('a.b:first-of-type')) # no parens",
          "165:           parser.parse('a.b:nth-of-type(99)'))",
          "172:           parser.parse('a.b:last-of-type')) # no parens",
          "179:           parser.parse('a.b:nth-last-of-type(99)'))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "212:       it \":only-child\" do",
          "213:         assert_xpath('//a[count(preceding-sibling::*)=0 and count(following-sibling::*)=0]',",
          "215:       end",
          "217:       it \":only-of-type\" do",
          "",
          "[Removed Lines]",
          "214:                      parser.parse('a:only-child'))",
          "",
          "[Added Lines]",
          "214:           parser.parse('a:only-child'))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "247:       it \":not()\" do",
          "248:         assert_xpath('//ol/*[not(self::li)]', parser.parse('ol > *:not(li)'))",
          "249:         assert_xpath(\"//*[@id='p' and not(contains(concat(' ',normalize-space(@class),' '),' a '))]\",",
          "251:         assert_xpath(\"//p[contains(concat(' ',normalize-space(@class),' '),' a ') and not(contains(concat(' ',normalize-space(@class),' '),' b '))]\",",
          "253:         assert_xpath(\"//p[@a='foo' and not(contains(concat(' ',normalize-space(@class),' '),' b '))]\",",
          "255:       end",
          "257:       it \"chained :not()\" do",
          "258:         assert_xpath(\"//p[not(contains(concat(' ',normalize-space(@class),' '),' a ')) and not(contains(concat(' ',normalize-space(@class),' '),' b ')) and not(contains(concat(' ',normalize-space(@class),' '),' c '))]\",",
          "260:       end",
          "262:       it \"combinations of :not() and nth-and-friends\" do",
          "263:         assert_xpath('//ol/*[not(count(following-sibling::*)=0)]',",
          "265:         assert_xpath('//ol/*[not(count(preceding-sibling::*)=0 and count(following-sibling::*)=0)]',",
          "267:       end",
          "269:       it \"miscellaneous pseudo-classes are converted into xpath function calls\" do",
          "",
          "[Removed Lines]",
          "250:                      parser.parse('#p:not(.a)'))",
          "252:                      parser.parse('p.a:not(.b)'))",
          "254:                      parser.parse(\"p[a='foo']:not(.b)\"))",
          "259:                      parser.parse(\"p:not(.a):not(.b):not(.c)\"))",
          "264:                      parser.parse('ol > *:not(:last-child)'))",
          "266:                      parser.parse('ol > *:not(:only-child)'))",
          "",
          "[Added Lines]",
          "250:           parser.parse('#p:not(.a)'))",
          "252:           parser.parse('p.a:not(.b)'))",
          "254:           parser.parse(\"p[a='foo']:not(.b)\"))",
          "259:           parser.parse(\"p:not(.a):not(.b):not(.c)\"))",
          "264:           parser.parse('ol > *:not(:last-child)'))",
          "266:           parser.parse('ol > *:not(:only-child)'))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "387:     it \"handles pseudo-class with class selector\" do",
          "388:       assert_xpath(\"//a[active(.) and contains(concat(' ',normalize-space(@class),' '),' foo ')]\",",
          "390:       assert_xpath(\"//a[contains(concat(' ',normalize-space(@class),' '),' foo ') and active(.)]\",",
          "392:     end",
          "394:     it \"handles pseudo-class with an id selector\" do",
          "",
          "[Removed Lines]",
          "389:                    parser.parse('a:active.foo'))",
          "391:                    parser.parse('a.foo:active'))",
          "",
          "[Added Lines]",
          "389:         parser.parse('a:active.foo'))",
          "391:         parser.parse('a.foo:active'))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "422:     it \". class\" do",
          "423:       assert_xpath(\"//*[nokogiri-builtin:css-class(@class,'awesome')]\",",
          "425:       assert_xpath(\"//foo[nokogiri-builtin:css-class(@class,'awesome')]\",",
          "427:       assert_xpath(\"//foo//*[nokogiri-builtin:css-class(@class,'awesome')]\",",
          "429:       assert_xpath(\"//foo//*[nokogiri-builtin:css-class(@class,'awe.some')]\",",
          "431:       assert_xpath(\"//*[nokogiri-builtin:css-class(@class,'a') and nokogiri-builtin:css-class(@class,'b')]\",",
          "433:     end",
          "435:     it \"~=\" do",
          "436:       assert_xpath(\"//a[nokogiri-builtin:css-class(@class,'bar')]\",",
          "438:       assert_xpath(\"//a[nokogiri-builtin:css-class(@class,'bar')]\",",
          "440:       assert_xpath(\"//a[nokogiri-builtin:css-class(@class,'bar')]\",",
          "442:       assert_xpath(\"//a[nokogiri-builtin:css-class(@class,'bar')]\",",
          "444:       assert_xpath(\"//a[nokogiri-builtin:css-class(@data-words,'bar')]\",",
          "446:       assert_xpath(\"//a[nokogiri-builtin:css-class(@data-words,'bar')]\",",
          "448:     end",
          "449:   end",
          "",
          "[Removed Lines]",
          "424:                    parser.parse('.awesome'))",
          "426:                      parser.parse('foo.awesome'))",
          "428:                      parser.parse('foo .awesome'))",
          "430:                      parser.parse('foo .awe\\.some'))",
          "432:                    parser.parse('.a.b'))",
          "437:                    parser.parse(\"a[@class~='bar']\"))",
          "439:                    parser.parse(\"a[@class ~= 'bar']\"))",
          "441:                    parser.parse(\"a[@class~=bar]\"))",
          "443:                    parser.parse(\"a[@class~=\\\"bar\\\"]\"))",
          "445:                    parser.parse(\"a[data-words~=\\\"bar\\\"]\"))",
          "447:                    parser.parse(\"a[@data-words~=\\\"bar\\\"]\"))",
          "",
          "[Added Lines]",
          "424:         parser.parse('.awesome'))",
          "426:         parser.parse('foo.awesome'))",
          "428:         parser.parse('foo .awesome'))",
          "430:         parser.parse('foo .awe\\.some'))",
          "432:         parser.parse('.a.b'))",
          "437:         parser.parse(\"a[@class~='bar']\"))",
          "439:         parser.parse(\"a[@class ~= 'bar']\"))",
          "441:         parser.parse(\"a[@class~=bar]\"))",
          "443:         parser.parse(\"a[@class~=\\\"bar\\\"]\"))",
          "445:         parser.parse(\"a[data-words~=\\\"bar\\\"]\"))",
          "447:         parser.parse(\"a[@data-words~=\\\"bar\\\"]\"))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "502:       it \". class\" do",
          "503:         if Nokogiri.uses_libxml?",
          "504:           assert_xpath(\"//*[nokogiri-builtin:css-class(@class,'awesome')]\",",
          "506:         else",
          "507:           assert_xpath(\"//*[contains(concat(' ',normalize-space(@class),' '),' awesome ')]\",",
          "509:         end",
          "510:       end",
          "512:       it \"~=\" do",
          "513:         if Nokogiri.uses_libxml?",
          "514:           assert_xpath(\"//a[nokogiri-builtin:css-class(@class,'bar')]\",",
          "516:         else",
          "517:           assert_xpath(\"//a[contains(concat(' ',normalize-space(@class),' '),' bar ')]\",",
          "519:         end",
          "520:       end",
          "521:     end",
          "",
          "[Removed Lines]",
          "505:                        parser.parse('.awesome'))",
          "508:                        parser.parse('.awesome'))",
          "515:                        parser.parse(\"a[@class~='bar']\"))",
          "518:                        parser.parse(\"a[@class~='bar']\"))",
          "",
          "[Added Lines]",
          "505:             parser.parse('.awesome'))",
          "508:             parser.parse('.awesome'))",
          "515:             parser.parse(\"a[@class~='bar']\"))",
          "518:             parser.parse(\"a[@class~='bar']\"))",
          "",
          "---------------"
        ],
        "test/html4/sax/test_parser.rb||test/html4/sax/test_parser.rb": [
          "File: test/html4/sax/test_parser.rb -> test/html4/sax/test_parser.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:           \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f",
          "67:           HTML",
          "68:           assert_equal(\"\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f\",",
          "70:         end",
          "72:         def test_parse_document",
          "",
          "[Removed Lines]",
          "69:                        @parser.document.data.join.strip)",
          "",
          "[Added Lines]",
          "69:             @parser.document.data.join.strip)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:           # \"http://cyberneko.org/html/properties/names/attrs\" => \"lower\"",
          "84:           if Nokogiri.uses_libxml?",
          "85:             assert_equal([[\"html\", []], [\"body\", []], [\"p\", []], [\"p\", []]],",
          "87:           else",
          "88:             assert_equal([[\"html\", []], [\"head\", []], [\"body\", []], [\"p\", []], [\"p\", []]],",
          "90:           end",
          "91:         end",
          "",
          "[Removed Lines]",
          "86:                          @parser.document.start_elements)",
          "89:                          @parser.document.start_elements)",
          "",
          "[Added Lines]",
          "86:               @parser.document.start_elements)",
          "89:               @parser.document.start_elements)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "112:           assert block_called",
          "114:           noshade_value = if Nokogiri.uses_libxml?(\"< 2.7.7\")",
          "120:           assert_equal [",
          "121:             ['html', []],",
          "",
          "[Removed Lines]",
          "115:               [\"noshade\", \"noshade\"]",
          "116:             else",
          "117:               [\"noshade\", nil]",
          "118:             end",
          "",
          "[Added Lines]",
          "115:             [\"noshade\", \"noshade\"]",
          "116:           else",
          "117:             [\"noshade\", nil]",
          "118:           end",
          "",
          "---------------"
        ],
        "test/html4/sax/test_parser_context.rb||test/html4/sax/test_parser_context.rb": [
          "File: test/html4/sax/test_parser_context.rb -> test/html4/sax/test_parser_context.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:         def test_parse_with_sax_parser",
          "27:           # assert_nothing_raised do",
          "32:           # end",
          "33:         end",
          "35:         def test_from_file",
          "36:           # assert_nothing_raised do",
          "40:           # end",
          "41:         end",
          "42:       end",
          "",
          "[Removed Lines]",
          "28:             xml = \"<root />\"",
          "29:             ctx = ParserContext.new xml",
          "30:             parser = Parser.new Doc.new",
          "31:             ctx.parse_with parser",
          "37:             ctx = ParserContext.file HTML_FILE, 'UTF-8'",
          "38:             parser = Parser.new Doc.new",
          "39:             ctx.parse_with parser",
          "",
          "[Added Lines]",
          "28:           xml = \"<root />\"",
          "29:           ctx = ParserContext.new xml",
          "30:           parser = Parser.new Doc.new",
          "31:           ctx.parse_with parser",
          "37:           ctx = ParserContext.file HTML_FILE, 'UTF-8'",
          "38:           parser = Parser.new Doc.new",
          "39:           ctx.parse_with parser",
          "",
          "---------------"
        ],
        "test/html4/test_builder.rb||test/html4/test_builder.rb": [
          "File: test/html4/test_builder.rb -> test/html4/test_builder.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:           end",
          "38:         end",
          "39:         assert_equal('<div id=\"awesome\"><h1>america</h1></div>',",
          "41:       end",
          "43:       def test_href_with_attributes",
          "",
          "[Removed Lines]",
          "40:                      builder.doc.root.to_html.gsub(/\\n/, '').gsub(/>\\s*</, '><'))",
          "",
          "[Added Lines]",
          "40:           builder.doc.root.to_html.gsub(/\\n/, '').gsub(/>\\s*</, '><'))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:         end",
          "75:         assert_equal(",
          "76:           '<div class=\"rad\" id=\"thing\">&lt;awe&amp;some&gt;<b>hello &amp; world</b></div>',",
          "78:       end",
          "80:       def test_multi_tags",
          "",
          "[Removed Lines]",
          "77:                      builder.doc.root.to_html.gsub(/\\n/, ''))",
          "",
          "[Added Lines]",
          "77:           builder.doc.root.to_html.gsub(/\\n/, '')",
          "78:         )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "86:         end",
          "87:         assert_equal(",
          "88:           '<div class=\"rad\" id=\"thing\">&lt;awesome&gt;<b>hello</b></div>',",
          "90:       end",
          "92:       def test_attributes_plus_block",
          "",
          "[Removed Lines]",
          "89:                      builder.doc.root.to_html.gsub(/\\n/, ''))",
          "",
          "[Added Lines]",
          "90:           builder.doc.root.to_html.gsub(/\\n/, '')",
          "91:         )",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "96:           end",
          "97:         end",
          "98:         assert_equal('<div class=\"rad\" id=\"thing\">&lt;awesome&gt;</div>',",
          "100:       end",
          "102:       def test_builder_adds_attributes",
          "",
          "[Removed Lines]",
          "99:                      builder.doc.root.to_html.chomp)",
          "",
          "[Added Lines]",
          "101:           builder.doc.root.to_html.chomp)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "104:           div.rad.thing! \"tender div\"",
          "105:         end",
          "106:         assert_equal('<div class=\"rad\" id=\"thing\">tender div</div>',",
          "108:       end",
          "110:       def test_bold_tag",
          "",
          "[Removed Lines]",
          "107:                      builder.doc.root.to_html.chomp)",
          "",
          "[Added Lines]",
          "109:           builder.doc.root.to_html.chomp)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "123:           end",
          "124:         end",
          "125:         assert_equal('<html><body><b>bold tag</b></body></html>',",
          "127:       end",
          "129:       def test_instance_eval_with_delegation_to_block_context",
          "",
          "[Removed Lines]",
          "126:                      builder.doc.root.to_html.chomp.gsub(/>\\s*</, '><'))",
          "",
          "[Added Lines]",
          "128:           builder.doc.root.to_html.chomp.gsub(/>\\s*</, '><'))",
          "",
          "---------------"
        ],
        "test/html4/test_document_encoding.rb||test/html4/test_document_encoding.rb": [
          "File: test/html4/test_document_encoding.rb -> test/html4/test_document_encoding.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:         eohtml",
          "81:         doc = Nokogiri::HTML(bad_charset, nil, 'askldjfhalsdfjhlkasdfjh')",
          "82:         assert_equal(['http://tenderlovemaking.com/'],",
          "84:       end",
          "86:       def test_empty_doc_encoding",
          "",
          "[Removed Lines]",
          "83:                      doc.css('a').map { |a| a['href'] })",
          "",
          "[Added Lines]",
          "83:           doc.css('a').map { |a| a['href'] })",
          "",
          "---------------"
        ],
        "test/html4/test_document_fragment.rb||test/html4/test_document_fragment.rb": [
          "File: test/html4/test_document_fragment.rb -> test/html4/test_document_fragment.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "216:           doc = HTML::Document.new",
          "217:           fragment = doc.fragment(\"<script>var foo = 'bar';</script>\")",
          "218:           assert_equal(\"<script>var foo = 'bar';</script>\",",
          "220:         end",
          "222:         def test_fragment_with_comment",
          "223:           doc = HTML::Document.new",
          "224:           fragment = doc.fragment(\"<p>hello<!-- your ad here --></p>\")",
          "225:           assert_equal(\"<p>hello<!-- your ad here --></p>\",",
          "227:         end",
          "229:         def test_element_children_counts",
          "",
          "[Removed Lines]",
          "219:                        fragment.to_s)",
          "226:                        fragment.to_s)",
          "",
          "[Added Lines]",
          "219:             fragment.to_s)",
          "226:             fragment.to_s)",
          "",
          "---------------"
        ],
        "test/test_convert_xpath.rb||test/test_convert_xpath.rb": [
          "File: test/test_convert_xpath.rb -> test/test_convert_xpath.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:   def test_filter_contains",
          "27:     assert_syntactical_equivalence(\"title:contains('Tender')\", \".//title[contains(., 'Tender')]\",",
          "29:       j.inner_text",
          "30:     end",
          "31:   end",
          "",
          "[Removed Lines]",
          "28:                                    \"Tender Lovemaking  \") do |j|",
          "",
          "[Added Lines]",
          "28:       \"Tender Lovemaking  \") do |j|",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:   def test_filter_by_attr",
          "55:     assert_syntactical_equivalence(\"a[@href='http://blog.geminigeek.com/wordpress-theme']\",",
          "58:       j.first[\"href\"]",
          "59:     end",
          "60:   end",
          "",
          "[Removed Lines]",
          "56:                                    \".//a[@href = 'http://blog.geminigeek.com/wordpress-theme']\",",
          "57:                                    \"http://blog.geminigeek.com/wordpress-theme\") do |j|",
          "",
          "[Added Lines]",
          "56:       \".//a[@href = 'http://blog.geminigeek.com/wordpress-theme']\",",
          "57:       \"http://blog.geminigeek.com/wordpress-theme\") do |j|",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:   def test_css_class",
          "72:     assert_syntactical_equivalence(\".cat-item-15\", \".//*[contains(concat(' ',@class,' '),' cat-item-15 ')]\",",
          "74:       j.first[\"class\"]",
          "75:     end",
          "76:     assert_syntactical_equivalence(\"li.cat-item-15\", \".//li[contains(concat(' ',@class,' '),' cat-item-15 ')]\",",
          "78:       j.first[\"class\"]",
          "79:     end",
          "80:   end",
          "",
          "[Removed Lines]",
          "73:                                    \"cat-item cat-item-15\") do |j|",
          "77:                                    \"cat-item cat-item-15\") do |j|",
          "",
          "[Added Lines]",
          "73:       \"cat-item cat-item-15\") do |j|",
          "77:       \"cat-item cat-item-15\") do |j|",
          "",
          "---------------"
        ],
        "test/test_gem_platform.rb||test/test_gem_platform.rb": [
          "File: test/test_gem_platform.rb -> test/test_gem_platform.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:   describe \"darwin\" do",
          "33:     it \"builds a gem that works on all darwin x86+64 platforms\" do",
          "34:       assert_match darwin_gem_platform,",
          "37:       assert_match darwin_gem_platform,",
          "40:       assert_match darwin_gem_platform,",
          "44:       # The intention here is to test that the x86_64 platform gems",
          "45:       # won't match a future ruby that is compiled on arm64/aarch64.",
          "",
          "[Removed Lines]",
          "35:                    Gem::Platform.new([\"universal\", \"darwin\", \"19\"]),",
          "36:                    \"gem should match system-installed ruby on catalina\"",
          "38:                    Gem::Platform.new([\"x86_64\", \"darwin\", \"19\"]),",
          "39:                    \"gem should match user-installed ruby on catalina\"",
          "41:                    Gem::Platform.new([\"x86_64\", \"darwin\", \"18\"]),",
          "42:                    \"gem should match user-installed ruby on mojave\"",
          "",
          "[Added Lines]",
          "35:         Gem::Platform.new([\"universal\", \"darwin\", \"19\"]),",
          "36:         \"gem should match system-installed ruby on catalina\"",
          "38:         Gem::Platform.new([\"x86_64\", \"darwin\", \"19\"]),",
          "39:         \"gem should match user-installed ruby on catalina\"",
          "41:         Gem::Platform.new([\"x86_64\", \"darwin\", \"18\"]),",
          "42:         \"gem should match user-installed ruby on mojave\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:       #",
          "51:       # Feel free to delete assertions for clarity once we know more.",
          "52:       assert_no_match darwin_gem_platform,",
          "55:       assert_no_match darwin_gem_platform,",
          "58:       assert_no_match darwin_gem_platform,",
          "61:       assert_no_match darwin_gem_platform,",
          "64:       assert_no_match darwin_gem_platform,",
          "67:     end",
          "68:   end",
          "69: end",
          "",
          "[Removed Lines]",
          "53:                       Gem::Platform.new([\"arm64\", \"darwin\", \"19\"]),",
          "54:                       \"gem should not match an arm64 ruby\"",
          "56:                       Gem::Platform.new([\"arm\", \"darwin\", \"19\"]),",
          "57:                       \"gem should not match an arm ruby\"",
          "59:                       Gem::Platform.new([\"aarch64\", \"darwin\", \"19\"]),",
          "60:                       \"gem should not match an aarch64 ruby\"",
          "62:                       Gem::Platform.new([\"universal2\", \"darwin\", \"19\"]),",
          "63:                       \"gem should not match an aarch64 ruby\"",
          "65:                       Gem::Platform.new([\"universal_2\", \"darwin\", \"19\"]),",
          "66:                       \"gem should not match an aarch64 ruby\"",
          "",
          "[Added Lines]",
          "53:         Gem::Platform.new([\"arm64\", \"darwin\", \"19\"]),",
          "54:         \"gem should not match an arm64 ruby\"",
          "56:         Gem::Platform.new([\"arm\", \"darwin\", \"19\"]),",
          "57:         \"gem should not match an arm ruby\"",
          "59:         Gem::Platform.new([\"aarch64\", \"darwin\", \"19\"]),",
          "60:         \"gem should not match an aarch64 ruby\"",
          "62:         Gem::Platform.new([\"universal2\", \"darwin\", \"19\"]),",
          "63:         \"gem should not match an aarch64 ruby\"",
          "65:         Gem::Platform.new([\"universal_2\", \"darwin\", \"19\"]),",
          "66:         \"gem should not match an aarch64 ruby\"",
          "",
          "---------------"
        ],
        "test/xml/test_builder.rb||test/xml/test_builder.rb": [
          "File: test/xml/test_builder.rb -> test/xml/test_builder.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:           end",
          "152:         end",
          "153:         assert(result.doc.at_xpath(\"//emer:validateLocation\", { \"emer\" => \"http://dashcs.com/api/v1/emergency\" }),",
          "155:         assert(result.doc.at_xpath(\"//location\"), \"expected location node to not have a namespace\")",
          "156:       end",
          "",
          "[Removed Lines]",
          "154:                                    \"expected validateLocation node to have a namespace\")",
          "",
          "[Added Lines]",
          "154:           \"expected validateLocation node to have a namespace\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:           end",
          "180:         end",
          "181:         assert_match(/<!DOCTYPE html PUBLIC \"-\\/\\/W3C\\/\\/DTD HTML 4.01 Transitional\\/\\/EN\" \"http:\\/\\/www.w3.org\\/TR\\/html4\\/loose.dtd\">/,",
          "183:       end",
          "185:       def test_specify_namespace_nested",
          "",
          "[Removed Lines]",
          "182:                      builder.to_xml)",
          "",
          "[Added Lines]",
          "182:           builder.to_xml)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "336:           end",
          "337:         end",
          "338:         assert_equal(\"<?xml version=\\\"1.0\\\"?><root><![CDATA[hello world]]></root>\",",
          "340:       end",
          "342:       def test_comment",
          "",
          "[Removed Lines]",
          "339:                      builder.to_xml.gsub(/\\n/, \"\"))",
          "",
          "[Added Lines]",
          "339:           builder.to_xml.gsub(/\\n/, \"\"))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "355:           cdata string",
          "356:         end",
          "357:         assert_equal(\"<?xml version=\\\"1.0\\\"?><root><![CDATA[hello world]]></root>\",",
          "359:       end",
          "361:       def test_builder_can_inherit_parent_namespace",
          "",
          "[Removed Lines]",
          "358:                      builder.to_xml.gsub(/\\n/, \"\"))",
          "",
          "[Added Lines]",
          "358:           builder.to_xml.gsub(/\\n/, \"\"))",
          "",
          "---------------"
        ],
        "test/xml/test_document.rb||test/xml/test_document.rb": [
          "File: test/xml/test_document.rb -> test/xml/test_document.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:             </xml>",
          "146:           eoxml",
          "147:           assert_equal({ \"xmlns\" => \"hello\", \"xmlns:foo\" => \"world\" },",
          "149:         end",
          "151:         def test_subclass_initialize_modify # testing a segv",
          "",
          "[Removed Lines]",
          "148:                        doc.collect_namespaces)",
          "",
          "[Added Lines]",
          "148:             doc.collect_namespaces)",
          "",
          "---------------"
        ],
        "test/xml/test_node.rb||test/xml/test_node.rb": [
          "File: test/xml/test_node.rb -> test/xml/test_node.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "686:           address = xml.xpath('//address').first",
          "687:           assert_equal(3, address.ancestors.length)",
          "688:           assert_equal(['employee', 'staff', 'document'],",
          "690:         end",
          "692:         def test_read_only?",
          "",
          "[Removed Lines]",
          "689:                        address.ancestors.map(&:name))",
          "",
          "[Added Lines]",
          "689:             address.ancestors.map(&:name))",
          "",
          "---------------"
        ],
        "test/xml/test_node_reparenting.rb||test/xml/test_node_reparenting.rb": [
          "File: test/xml/test_node_reparenting.rb -> test/xml/test_node_reparenting.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "383:                 inserted = dest_node.add_child(source_node)",
          "385:                 assert_equal(\"attrval\", inserted.attribute_with_ns(\"attr\", \"ns2\")&.value,",
          "387:               end",
          "388:             end",
          "389:           end",
          "",
          "[Removed Lines]",
          "386:                              \"inserted node attribute should be namespaced\")",
          "",
          "[Added Lines]",
          "386:                   \"inserted node attribute should be namespaced\")",
          "",
          "---------------"
        ],
        "test/xml/test_node_set.rb||test/xml/test_node_set.rb": [
          "File: test/xml/test_node_set.rb -> test/xml/test_node_set.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "183:               custom_employees = set.send(method, query, callback_handler)",
          "185:               assert_equal(xml.xpath('//employee'), custom_employees,",
          "187:             end",
          "188:           end",
          "",
          "[Removed Lines]",
          "186:                            \"using #{method} with custom selector '#{query}'\")",
          "",
          "[Added Lines]",
          "186:                 \"using #{method} with custom selector '#{query}'\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "191:             set = xml.xpath('//staff')",
          "193:             assert_equal(4, set.xpath('//address[@domestic=$value]', nil, value: 'Yes').length,",
          "196:             assert_equal(4, set.search('//address[@domestic=$value]', nil, value: 'Yes').length,",
          "198:           end",
          "200:           it \"context search returns itself\" do",
          "",
          "[Removed Lines]",
          "194:                          \"using #xpath with variable binding\")",
          "197:                          \"using #search with variable binding\")",
          "",
          "[Added Lines]",
          "194:               \"using #xpath with variable binding\")",
          "197:               \"using #search with variable binding\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "551:           it \"preserves document structure\" do",
          "552:             assert_equal(\"employeeId\",",
          "554:             xml.xpath(\"//employeeId[text()='EMP0001']\").wrap(\"<wrapper/>\")",
          "555:             assert_equal(\"wrapper\",",
          "557:           end",
          "558:         end",
          "",
          "[Removed Lines]",
          "553:                          xml.at_xpath(\"//employee\").children.detect { |j| !j.text? }.name)",
          "556:                          xml.at_xpath(\"//employee\").children.detect { |j| !j.text? }.name)",
          "",
          "[Added Lines]",
          "553:               xml.at_xpath(\"//employee\").children.detect { |j| !j.text? }.name)",
          "556:               xml.at_xpath(\"//employee\").children.detect { |j| !j.text? }.name)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "772:           inspected = employees.inspect",
          "774:           assert_equal(\"[#{employees.map(&:inspect).join(', ')}]\",",
          "776:         end",
          "778:         it \"should_not_splode_when_accessing_namespace_declarations_in_a_node_set\" do",
          "",
          "[Removed Lines]",
          "775:                        inspected)",
          "",
          "[Added Lines]",
          "775:             inspected)",
          "",
          "---------------"
        ],
        "test/xml/test_reader.rb||test/xml/test_reader.rb": [
          "File: test/xml/test_reader.rb -> test/xml/test_reader.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "416:                       \"http://ecommerce.example.org/schema\",",
          "417:                       nil,",
          "418:                       nil,],",
          "420:       end",
          "422:       def test_reader_node_attributes_keep_a_reference_to_the_reader",
          "",
          "[Removed Lines]",
          "419:                       reader.map(&:namespace_uri))",
          "",
          "[Added Lines]",
          "419:           reader.map(&:namespace_uri))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "457:         assert_equal(['commons',",
          "458:                       'edi',",
          "459:                       nil,],",
          "461:       end",
          "463:       def test_local_name",
          "",
          "[Removed Lines]",
          "460:                      attr_ns)",
          "",
          "[Added Lines]",
          "460:           attr_ns)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "468:         eoxml",
          "469:         assert_nil reader.local_name",
          "470:         assert_equal([\"x\", \"#text\", \"foo\", \"#text\", \"foo\", \"#text\", \"x\"],",
          "472:       end",
          "474:       def test_name",
          "",
          "[Removed Lines]",
          "471:                      reader.map(&:local_name))",
          "",
          "[Added Lines]",
          "471:           reader.map(&:local_name))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "479:         eoxml",
          "480:         assert_nil reader.name",
          "481:         assert_equal([\"x\", \"#text\", \"edi:foo\", \"#text\", \"edi:foo\", \"#text\", \"x\"],",
          "483:       end",
          "485:       def test_base_uri",
          "",
          "[Removed Lines]",
          "482:                      reader.map(&:name))",
          "",
          "[Added Lines]",
          "482:           reader.map(&:name))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "507:                       \"http://base.example.org/base/relative\",",
          "508:                       \"http://base.example.org/base/\",",
          "509:                       \"http://base.example.org/base/\",],",
          "511:       end",
          "513:       def test_xlink_href_without_base_uri",
          "",
          "[Removed Lines]",
          "510:                       reader.map(&:base_uri))",
          "",
          "[Added Lines]",
          "510:           reader.map(&:base_uri))",
          "",
          "---------------"
        ],
        "test/xml/test_relax_ng.rb||test/xml/test_relax_ng.rb": [
          "File: test/xml/test_relax_ng.rb -> test/xml/test_relax_ng.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:       def test_new",
          "17:         assert schema = Nokogiri::XML::RelaxNG.new(",
          "19:         assert_instance_of Nokogiri::XML::RelaxNG, schema",
          "20:       end",
          "",
          "[Removed Lines]",
          "18:           File.read(ADDRESS_SCHEMA_FILE))",
          "",
          "[Added Lines]",
          "18:           File.read(ADDRESS_SCHEMA_FILE)",
          "19:         )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:         assert_equal Nokogiri::XML::ParseOptions::DEFAULT_SCHEMA, schema.parse_options",
          "50:         schema = Nokogiri::XML::RelaxNG.from_document(Nokogiri::XML::Document.parse(File.read(ADDRESS_SCHEMA_FILE)),",
          "52:         assert_equal Nokogiri::XML::ParseOptions.new.recover, schema.parse_options",
          "53:       end",
          "",
          "[Removed Lines]",
          "51:                                                       Nokogiri::XML::ParseOptions.new.recover)",
          "",
          "[Added Lines]",
          "52:           Nokogiri::XML::ParseOptions.new.recover)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60:         assert_equal Nokogiri::XML::ParseOptions::DEFAULT_SCHEMA, schema.parse_options",
          "62:         schema = Nokogiri::XML::RelaxNG.read_memory(File.read(ADDRESS_SCHEMA_FILE),",
          "64:         assert_equal Nokogiri::XML::ParseOptions.new.recover, schema.parse_options",
          "65:       end",
          "",
          "[Removed Lines]",
          "63:                                                     Nokogiri::XML::ParseOptions.new.recover)",
          "",
          "[Added Lines]",
          "64:           Nokogiri::XML::ParseOptions.new.recover)",
          "",
          "---------------"
        ],
        "test/xml/test_schema.rb||test/xml/test_schema.rb": [
          "File: test/xml/test_schema.rb -> test/xml/test_schema.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:         assert_equal Nokogiri::XML::ParseOptions::DEFAULT_SCHEMA, schema.parse_options",
          "133:         schema = Nokogiri::XML::Schema.from_document(Nokogiri::XML::Document.parse(File.read(PO_SCHEMA_FILE)),",
          "135:         assert_equal Nokogiri::XML::ParseOptions.new.recover, schema.parse_options",
          "136:       end",
          "",
          "[Removed Lines]",
          "134:                                                      Nokogiri::XML::ParseOptions.new.recover)",
          "",
          "[Added Lines]",
          "134:           Nokogiri::XML::ParseOptions.new.recover)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "245:               doc = Nokogiri::XML::Schema.new(schema)",
          "246:               errors = doc.errors.map(&:to_s)",
          "247:               assert_equal(1, errors.grep(/ERROR: Attempt to load network entity/).length,",
          "249:               assert_empty(errors.grep(/WARNING: failed to load HTTP resource/),",
          "251:               assert_empty(errors.grep(/WARNING: failed to load external entity/),",
          "253:             end",
          "255:             it \"XML::Schema parsing of memory does not attempt to access external DTDs\" do",
          "256:               doc = Nokogiri::XML::Schema.read_memory(schema)",
          "257:               errors = doc.errors.map(&:to_s)",
          "258:               assert_equal(1, errors.grep(/ERROR: Attempt to load network entity/).length,",
          "260:               assert_empty(errors.grep(/WARNING: failed to load HTTP resource/),",
          "262:               assert_empty(errors.grep(/WARNING: failed to load external entity/),",
          "264:             end",
          "265:           end",
          "",
          "[Removed Lines]",
          "248:                            \"Should see xmlIO.c:xmlNoNetExternalEntityLoader() raising XML_IO_NETWORK_ATTEMPT\")",
          "250:                            \"Should not see xmlIO.c:xmlCheckHTTPInput() raising 'failed to load HTTP resource'\")",
          "252:                            \"Should not see xmlIO.c:xmlDefaultExternalEntityLoader() raising 'failed to load external entity'\")",
          "259:                            \"Should see xmlIO.c:xmlNoNetExternalEntityLoader() raising XML_IO_NETWORK_ATTEMPT\")",
          "261:                            \"Should not see xmlIO.c:xmlCheckHTTPInput() raising 'failed to load HTTP resource'\")",
          "263:                            \"Should not see xmlIO.c:xmlDefaultExternalEntityLoader() raising 'failed to load external entity'\")",
          "",
          "[Added Lines]",
          "248:                 \"Should see xmlIO.c:xmlNoNetExternalEntityLoader() raising XML_IO_NETWORK_ATTEMPT\")",
          "250:                 \"Should not see xmlIO.c:xmlCheckHTTPInput() raising 'failed to load HTTP resource'\")",
          "252:                 \"Should not see xmlIO.c:xmlDefaultExternalEntityLoader() raising 'failed to load external entity'\")",
          "259:                 \"Should see xmlIO.c:xmlNoNetExternalEntityLoader() raising XML_IO_NETWORK_ATTEMPT\")",
          "261:                 \"Should not see xmlIO.c:xmlCheckHTTPInput() raising 'failed to load HTTP resource'\")",
          "263:                 \"Should not see xmlIO.c:xmlDefaultExternalEntityLoader() raising 'failed to load external entity'\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "269:               doc = Nokogiri::XML::Schema.new(schema, Nokogiri::XML::ParseOptions.new.nononet)",
          "270:               errors = doc.errors.map(&:to_s)",
          "271:               assert_equal(0, errors.grep(/ERROR: Attempt to load network entity/).length,",
          "273:               assert_equal(1, errors.grep(/WARNING: failed to load HTTP resource|WARNING: failed to load external entity/).length)",
          "274:             end",
          "",
          "[Removed Lines]",
          "272:                            \"Should not see xmlIO.c:xmlNoNetExternalEntityLoader() raising XML_IO_NETWORK_ATTEMPT\")",
          "",
          "[Added Lines]",
          "272:                 \"Should not see xmlIO.c:xmlNoNetExternalEntityLoader() raising XML_IO_NETWORK_ATTEMPT\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "277:               doc = Nokogiri::XML::Schema.read_memory(schema, Nokogiri::XML::ParseOptions.new.nononet)",
          "278:               errors = doc.errors.map(&:to_s)",
          "279:               assert_equal(0, errors.grep(/ERROR: Attempt to load network entity/).length,",
          "281:               assert_equal(1, errors.grep(/WARNING: failed to load HTTP resource|WARNING: failed to load external entity/).length)",
          "282:             end",
          "283:           end",
          "",
          "[Removed Lines]",
          "280:                            \"Should not see xmlIO.c:xmlNoNetExternalEntityLoader() raising XML_IO_NETWORK_ATTEMPT\")",
          "",
          "[Added Lines]",
          "280:                 \"Should not see xmlIO.c:xmlNoNetExternalEntityLoader() raising XML_IO_NETWORK_ATTEMPT\")",
          "",
          "---------------"
        ],
        "test/xml/test_xpath.rb||test/xml/test_xpath.rb": [
          "File: test/xml/test_xpath.rb -> test/xml/test_xpath.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "148:       def test_search_with_xpath_query_uses_custom_selectors_with_arguments",
          "149:         set = if Nokogiri.uses_libxml?",
          "154:         assert set.length > 0",
          "155:         set.each do |node|",
          "156:           assert_equal 'Yes', node['domestic']",
          "",
          "[Removed Lines]",
          "150:                 @xml.search('//employee/address[my_filter(., \"domestic\", \"Yes\")]', @handler)",
          "151:               else",
          "152:                 @xml.search('//employee/address[nokogiri:my_filter(., \"domestic\", \"Yes\")]', @handler)",
          "153:               end",
          "",
          "[Added Lines]",
          "150:           @xml.search('//employee/address[my_filter(., \"domestic\", \"Yes\")]', @handler)",
          "151:         else",
          "152:           @xml.search('//employee/address[nokogiri:my_filter(., \"domestic\", \"Yes\")]', @handler)",
          "153:         end",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:       def test_pass_self_to_function",
          "161:         set = if Nokogiri.uses_libxml?",
          "166:         assert set.length > 0",
          "167:         set.each do |node|",
          "168:           assert_equal 'Yes', node['domestic']",
          "",
          "[Removed Lines]",
          "162:                 @xml.xpath('//employee/address[my_filter(., \"domestic\", \"Yes\")]', @handler)",
          "163:               else",
          "164:                 @xml.xpath('//employee/address[nokogiri:my_filter(., \"domestic\", \"Yes\")]', @handler)",
          "165:               end",
          "",
          "[Added Lines]",
          "162:           @xml.xpath('//employee/address[my_filter(., \"domestic\", \"Yes\")]', @handler)",
          "163:         else",
          "164:           @xml.xpath('//employee/address[nokogiri:my_filter(., \"domestic\", \"Yes\")]', @handler)",
          "165:         end",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "189:               params[p.attributes['name'].value] = subparams",
          "190:             elsif params[p.attributes['name'].value].is_a? Array",
          "191:               params[p.attributes['name'].value] << subparams",
          "195:             end",
          "196:           else",
          "197:             params[p.attributes['name'].value] = p.text",
          "",
          "[Removed Lines]",
          "192:               else",
          "193:                 value = params[p.attributes['name'].value]",
          "194:                 params[p.attributes['name'].value] = [value, subparams]",
          "",
          "[Added Lines]",
          "192:             else",
          "193:               value = params[p.attributes['name'].value]",
          "194:               params[p.attributes['name'].value] = [value, subparams]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "374:         xml = %q{<foo> </foo>}",
          "375:         doc = Nokogiri::XML.parse(xml)",
          "376:         foo = doc.xpath('//foo[bool_function(bar/baz)]',",
          "382:         assert_equal foo, doc.xpath(\"//foo\")",
          "383:       end",
          "",
          "[Removed Lines]",
          "377:                         Class.new do",
          "378:                           def bool_function(value)",
          "379:                             true",
          "380:                           end",
          "381:                         end.new)",
          "",
          "[Added Lines]",
          "377:           Class.new do",
          "378:             def bool_function(value)",
          "379:               true",
          "380:             end",
          "381:           end.new)",
          "",
          "---------------"
        ],
        "test/xslt/test_exception_handling.rb||test/xslt/test_exception_handling.rb": [
          "File: test/xslt/test_exception_handling.rb -> test/xslt/test_exception_handling.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:         end",
          "33:         assert_match(/Can't have more than one root/, e.to_s,",
          "35:       end",
          "36:     end",
          "37:   end",
          "",
          "[Removed Lines]",
          "34:                      'The exception message does not contain the expected information')",
          "",
          "[Added Lines]",
          "34:           'The exception message does not contain the expected information')",
          "",
          "---------------"
        ]
      }
    }
  ]
}