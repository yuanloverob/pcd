{
  "cve_id": "CVE-2014-4345",
  "cve_desc": "Off-by-one error in the krb5_encode_krbsecretkey function in plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c in the LDAP KDB module in kadmind in MIT Kerberos 5 (aka krb5) 1.6.x through 1.11.x before 1.11.6 and 1.12.x before 1.12.2 allows remote authenticated users to cause a denial of service (buffer overflow) or possibly execute arbitrary code via a series of \"cpw -keepold\" commands.",
  "repo": "krb5/krb5",
  "patch_hash": "dc7ed55c689d57de7f7408b34631bf06fec9dab1",
  "patch_info": {
    "commit_hash": "dc7ed55c689d57de7f7408b34631bf06fec9dab1",
    "repo": "krb5/krb5",
    "commit_url": "https://github.com/krb5/krb5/commit/dc7ed55c689d57de7f7408b34631bf06fec9dab1",
    "files": [
      "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
    ],
    "message": "Fix LDAP key data segmentation [CVE-2014-4345]\n\nFor principal entries having keys with multiple kvnos (due to use of\n-keepold), the LDAP KDB module makes an attempt to store all the keys\nhaving the same kvno into a single krbPrincipalKey attribute value.\nThere is a fencepost error in the loop, causing currkvno to be set to\nthe just-processed value instead of the next kvno.  As a result, the\nsecond and all following groups of multiple keys by kvno are each\nstored in two krbPrincipalKey attribute values.  Fix the loop to use\nthe correct kvno value.\n\nCVE-2014-4345:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause it to perform an\nout-of-bounds write (buffer overrun) by performing multiple cpw\n-keepold operations.  An off-by-one error while copying key\ninformation to the new database entry results in keys sharing a common\nkvno being written to different array buckets, in an array whose size\nis determined by the number of kvnos present.  After sufficient\niterations, the extra writes extend past the end of the\n(NULL-terminated) array.  The NULL terminator is always written after\nthe end of the loop, so no out-of-bounds data is read, it is only\nwritten.\n\nHistorically, it has been possible to convert an out-of-bounds write\ninto remote code execution in some cases, though the necessary\nexploits must be tailored to the individual application and are\nusually quite complicated.  Depending on the allocated length of the\narray, an out-of-bounds write may also cause a segmentation fault\nand/or application crash.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:S/C:C/I:C/A:C/E:POC/RL:OF/RC:C\n\n[ghudson@mit.edu: clarified commit message]\n[kaduk@mit.edu: CVE summary, CVSSv2 vector]\n\n(cherry picked from commit 81c332e29f10887c6b9deb065f81ba259f4c7e03)\n\nticket: 7980\nversion_fixed: 1.12.2\nstatus: resolved",
    "before_after_code_files": [
      "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
    ]
  },
  "patch_diff": {
    "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c": [
      "File: src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c -> src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "463:             j++;",
      "464:             last = i + 1;",
      "467:         }",
      "468:     }",
      "469:     ret[num_versions] = NULL;",
      "",
      "[Removed Lines]",
      "466:             currkvno = key_data[i].key_data_kvno;",
      "",
      "[Added Lines]",
      "466:             if (i < n_key_data - 1)",
      "467:                 currkvno = key_data[i + 1].key_data_kvno;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5e302c1446e0c795158be2d0a5e1be5e596ae53e",
      "candidate_info": {
        "commit_hash": "5e302c1446e0c795158be2d0a5e1be5e596ae53e",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/5e302c1446e0c795158be2d0a5e1be5e596ae53e",
        "files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
        ],
        "message": "Fix LDAP key data segmentation [CVE-2014-4345]\n\nFor principal entries having keys with multiple kvnos (due to use of\n-keepold), the LDAP KDB module makes an attempt to store all the keys\nhaving the same kvno into a single krbPrincipalKey attribute value.\nThere is a fencepost error in the loop, causing currkvno to be set to\nthe just-processed value instead of the next kvno.  As a result, the\nsecond and all following groups of multiple keys by kvno are each\nstored in two krbPrincipalKey attribute values.  Fix the loop to use\nthe correct kvno value.\n\nCVE-2014-4345:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause it to perform an\nout-of-bounds write (buffer overrun) by performing multiple cpw\n-keepold operations.  An off-by-one error while copying key\ninformation to the new database entry results in keys sharing a common\nkvno being written to different array buckets, in an array whose size\nis determined by the number of kvnos present.  After sufficient\niterations, the extra writes extend past the end of the\n(NULL-terminated) array.  The NULL terminator is always written after\nthe end of the loop, so no out-of-bounds data is read, it is only\nwritten.\n\nHistorically, it has been possible to convert an out-of-bounds write\ninto remote code execution in some cases, though the necessary\nexploits must be tailored to the individual application and are\nusually quite complicated.  Depending on the allocated length of the\narray, an out-of-bounds write may also cause a segmentation fault\nand/or application crash.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:S/C:C/I:C/A:C/E:POC/RL:OF/RC:C\n\n[ghudson@mit.edu: clarified commit message]\n[kaduk@mit.edu: CVE summary, CVSSv2 vector]\n\n(cherry picked from commit 81c332e29f10887c6b9deb065f81ba259f4c7e03)\n\nticket: 8120 (new)\nversion_fixed: 1.11.6\nstatus: resolved",
        "before_after_code_files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
          ],
          "candidate": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
          ]
        }
      },
      "candidate_diff": {
        "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c": [
          "File: src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c -> src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "466:             j++;",
          "467:             last = i + 1;",
          "470:         }",
          "471:     }",
          "472:     ret[num_versions] = NULL;",
          "",
          "[Removed Lines]",
          "469:             currkvno = key_data[i].key_data_kvno;",
          "",
          "[Added Lines]",
          "469:             if (i < n_key_data - 1)",
          "470:                 currkvno = key_data[i + 1].key_data_kvno;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81c332e29f10887c6b9deb065f81ba259f4c7e03",
      "candidate_info": {
        "commit_hash": "81c332e29f10887c6b9deb065f81ba259f4c7e03",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/81c332e29f10887c6b9deb065f81ba259f4c7e03",
        "files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
        ],
        "message": "Fix LDAP key data segmentation [CVE-2014-4345]\n\nFor principal entries having keys with multiple kvnos (due to use of\n-keepold), the LDAP KDB module makes an attempt to store all the keys\nhaving the same kvno into a single krbPrincipalKey attribute value.\nThere is a fencepost error in the loop, causing currkvno to be set to\nthe just-processed value instead of the next kvno.  As a result, the\nsecond and all following groups of multiple keys by kvno are each\nstored in two krbPrincipalKey attribute values.  Fix the loop to use\nthe correct kvno value.\n\nCVE-2014-4345:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause it to perform an\nout-of-bounds write (buffer overrun) by performing multiple cpw\n-keepold operations.  An off-by-one error while copying key\ninformation to the new database entry results in keys sharing a common\nkvno being written to different array buckets, in an array whose size\nis determined by the number of kvnos present.  After sufficient\niterations, the extra writes extend past the end of the\n(NULL-terminated) array.  The NULL terminator is always written after\nthe end of the loop, so no out-of-bounds data is read, it is only\nwritten.\n\nHistorically, it has been possible to convert an out-of-bounds write\ninto remote code execution in some cases, though the necessary\nexploits must be tailored to the individual application and are\nusually quite complicated.  Depending on the allocated length of the\narray, an out-of-bounds write may also cause a segmentation fault\nand/or application crash.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:S/C:C/I:C/A:C/E:POC/RL:OF/RC:C\n\n[ghudson@mit.edu: clarified commit message]\n[kaduk@mit.edu: CVE summary, CVSSv2 vector]\n\nticket: 7980 (new)\ntarget_version: 1.12.2\ntags: pullup",
        "before_after_code_files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
          ],
          "candidate": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
          ]
        }
      },
      "candidate_diff": {
        "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c": [
          "File: src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c -> src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "456:             j++;",
          "457:             last = i + 1;",
          "460:         }",
          "461:     }",
          "462:     ret[num_versions] = NULL;",
          "",
          "[Removed Lines]",
          "459:             currkvno = key_data[i].key_data_kvno;",
          "",
          "[Added Lines]",
          "459:             if (i < n_key_data - 1)",
          "460:                 currkvno = key_data[i + 1].key_data_kvno;",
          "",
          "---------------"
        ]
      }
    }
  ]
}