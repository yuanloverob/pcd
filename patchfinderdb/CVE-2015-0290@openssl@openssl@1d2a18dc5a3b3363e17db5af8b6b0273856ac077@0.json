{
  "cve_id": "CVE-2015-0290",
  "cve_desc": "The multi-block feature in the ssl3_write_bytes function in s3_pkt.c in OpenSSL 1.0.2 before 1.0.2a on 64-bit x86 platforms with AES NI support does not properly handle certain non-blocking I/O cases, which allows remote attackers to cause a denial of service (pointer corruption and application crash) via unspecified vectors.",
  "repo": "openssl/openssl",
  "patch_hash": "1d2a18dc5a3b3363e17db5af8b6b0273856ac077",
  "patch_info": {
    "commit_hash": "1d2a18dc5a3b3363e17db5af8b6b0273856ac077",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/1d2a18dc5a3b3363e17db5af8b6b0273856ac077",
    "files": [
      "ssl/s3_pkt.c"
    ],
    "message": "Multiblock corrupted pointer fix\n\nOpenSSL 1.0.2 introduced the \"multiblock\" performance improvement. This\nfeature only applies on 64 bit x86 architecture platforms that support AES\nNI instructions. A defect in the implementation of \"multiblock\" can cause\nOpenSSL's internal write buffer to become incorrectly set to NULL when\nusing non-blocking IO. Typically, when the user application is using a\nsocket BIO for writing, this will only result in a failed connection.\nHowever if some other BIO is used then it is likely that a segmentation\nfault will be triggered, thus enabling a potential DoS attack.\n\nCVE-2015-0290\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Andy Polyakov <appro@openssl.org>",
    "before_after_code_files": [
      "ssl/s3_pkt.c||ssl/s3_pkt.c"
    ]
  },
  "patch_diff": {
    "ssl/s3_pkt.c||ssl/s3_pkt.c": [
      "File: ssl/s3_pkt.c -> ssl/s3_pkt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "805:             i = ssl3_write_pending(s, type, &buf[tot], nw);",
      "806:             if (i <= 0) {",
      "808:                     OPENSSL_free(wb->buf);",
      "809:                     wb->buf = NULL;",
      "810:                 }",
      "",
      "[Removed Lines]",
      "807:                 if (i < 0) {",
      "",
      "[Added Lines]",
      "807:                 if (i < 0 && (!s->wbio || !BIO_should_retry(s->wbio))) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0e7a32b55e8c5b1ec7c2bb755213d076390cc55e",
      "candidate_info": {
        "commit_hash": "0e7a32b55e8c5b1ec7c2bb755213d076390cc55e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0e7a32b55e8c5b1ec7c2bb755213d076390cc55e",
        "files": [
          "ssl/s3_pkt.c"
        ],
        "message": "s3_pkt.c: fix typo.",
        "before_after_code_files": [
          "ssl/s3_pkt.c||ssl/s3_pkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ],
          "candidate": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/s3_pkt.c||ssl/s3_pkt.c": [
          "File: ssl/s3_pkt.c -> ssl/s3_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "714:   int packlen;",
          "718:    max_send_fragment -= 512;",
          "",
          "[Removed Lines]",
          "717:   if ((max_send_fragment&0xffff) == 0)",
          "",
          "[Added Lines]",
          "717:   if ((max_send_fragment&0xfff) == 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d2ab55eb5ba5ffcca96253224c20ee1269b39b72",
      "candidate_info": {
        "commit_hash": "d2ab55eb5ba5ffcca96253224c20ee1269b39b72",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d2ab55eb5ba5ffcca96253224c20ee1269b39b72",
        "files": [
          "ssl/s3_pkt.c",
          "ssl/ssl.h",
          "ssl/ssl_err.c"
        ],
        "message": "Reduce casting nastiness.",
        "before_after_code_files": [
          "ssl/s3_pkt.c||ssl/s3_pkt.c",
          "ssl/ssl.h||ssl/ssl.h",
          "ssl/ssl_err.c||ssl/ssl_err.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ],
          "candidate": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/s3_pkt.c||ssl/s3_pkt.c": [
          "File: ssl/s3_pkt.c -> ssl/s3_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "643: #endif",
          "644:  SSL3_BUFFER *wb=&(s->s3->wbuf);",
          "645:  int i;",
          "647:  s->rwstate=SSL_NOTHING;",
          "648:  OPENSSL_assert(s->s3->wnum <= INT_MAX);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "646:  unsigned int u_len = (unsigned int)len;",
          "648:  if (len < 0)",
          "649:   {",
          "650:   SSLerr(SSL_F_SSL3_WRITE_BYTES,SSL_R_SSL_NEGATIVE_LENGTH);",
          "651:   return -1;",
          "652:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "699:  if (type==SSL3_RT_APPLICATION_DATA &&",
          "701:      s->compress==NULL && s->msg_callback==NULL &&",
          "702:      !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
          "703:      EVP_CIPHER_flags(s->enc_write_ctx->cipher)&EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK)",
          "",
          "[Removed Lines]",
          "700:      len >= 4*(int)(max_send_fragment=s->max_send_fragment) &&",
          "",
          "[Added Lines]",
          "707:      u_len >= 4*(max_send_fragment=s->max_send_fragment) &&",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "718:      EVP_CTRL_TLS1_1_MULTIBLOCK_MAX_BUFSIZE,",
          "719:      max_send_fragment,NULL);",
          "722:    else    packlen *= 4;",
          "724:    wb->buf=OPENSSL_malloc(packlen);",
          "",
          "[Removed Lines]",
          "721:    if (len>=8*(int)max_send_fragment) packlen *= 8;",
          "",
          "[Added Lines]",
          "728:    if (u_len >= 8*max_send_fragment) packlen *= 8;",
          "",
          "---------------"
        ],
        "ssl/ssl.h||ssl/ssl.h": [
          "File: ssl/ssl.h -> ssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3057: #define SSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION  228",
          "3058: #define SSL_R_SSL_HANDSHAKE_FAILURE    229",
          "3059: #define SSL_R_SSL_LIBRARY_HAS_NO_CIPHERS   230",
          "3060: #define SSL_R_SSL_SESSION_ID_CALLBACK_FAILED   301",
          "3061: #define SSL_R_SSL_SESSION_ID_CONFLICT    302",
          "3062: #define SSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG   273",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3060: #define SSL_R_SSL_NEGATIVE_LENGTH    372",
          "",
          "---------------"
        ],
        "ssl/ssl_err.c||ssl/ssl_err.c": [
          "File: ssl/ssl_err.c -> ssl/ssl_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "551: {ERR_REASON(SSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION),\"ssl ctx has no default ssl version\"},",
          "552: {ERR_REASON(SSL_R_SSL_HANDSHAKE_FAILURE) ,\"ssl handshake failure\"},",
          "553: {ERR_REASON(SSL_R_SSL_LIBRARY_HAS_NO_CIPHERS),\"ssl library has no ciphers\"},",
          "554: {ERR_REASON(SSL_R_SSL_SESSION_ID_CALLBACK_FAILED),\"ssl session id callback failed\"},",
          "555: {ERR_REASON(SSL_R_SSL_SESSION_ID_CONFLICT),\"ssl session id conflict\"},",
          "556: {ERR_REASON(SSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG),\"ssl session id context too long\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "554: {ERR_REASON(SSL_R_SSL_NEGATIVE_LENGTH)   ,\"ssl negative length\"},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "50cc4f7b3d64621b6062ad1f16a7630b7c730d9b",
      "candidate_info": {
        "commit_hash": "50cc4f7b3d64621b6062ad1f16a7630b7c730d9b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/50cc4f7b3d64621b6062ad1f16a7630b7c730d9b",
        "files": [
          "crypto/evp/e_aes_cbc_hmac_sha256.c",
          "ssl/s3_pkt.c"
        ],
        "message": "Fix signed/unsigned comparisons.",
        "before_after_code_files": [
          "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c",
          "ssl/s3_pkt.c||ssl/s3_pkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ],
          "candidate": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/evp/e_aes_cbc_hmac_sha256.c||crypto/evp/e_aes_cbc_hmac_sha256.c": [
          "File: crypto/evp/e_aes_cbc_hmac_sha256.c -> crypto/evp/e_aes_cbc_hmac_sha256.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "774:   unsigned int n4x=1, x4;",
          "775:   unsigned int frag, last, packlen, inp_len;",
          "779:   inp_len = param->inp[11]<<8|param->inp[12];",
          "",
          "[Removed Lines]",
          "777:   if (arg<sizeof(EVP_CTRL_TLS1_1_MULTIBLOCK_PARAM)) return -1;",
          "",
          "[Added Lines]",
          "777:   if (arg<(int)sizeof(EVP_CTRL_TLS1_1_MULTIBLOCK_PARAM)) return -1;",
          "",
          "---------------"
        ],
        "ssl/s3_pkt.c||ssl/s3_pkt.c": [
          "File: ssl/s3_pkt.c -> ssl/s3_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "698:  if (type==SSL3_RT_APPLICATION_DATA &&",
          "700:      s->compress==NULL && s->msg_callback==NULL &&",
          "701:      !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
          "702:      EVP_CIPHER_flags(s->enc_write_ctx->cipher)&EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK)",
          "",
          "[Removed Lines]",
          "699:      len >= 4*(max_send_fragment=s->max_send_fragment) &&",
          "",
          "[Added Lines]",
          "699:      len >= 4*(int)(max_send_fragment=s->max_send_fragment) &&",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "717:      EVP_CTRL_TLS1_1_MULTIBLOCK_MAX_BUFSIZE,",
          "718:      max_send_fragment,NULL);",
          "721:    else    packlen *= 4;",
          "723:    wb->buf=OPENSSL_malloc(packlen);",
          "",
          "[Removed Lines]",
          "720:    if (len>=8*max_send_fragment) packlen *= 8;",
          "",
          "[Added Lines]",
          "720:    if (len>=8*(int)max_send_fragment) packlen *= 8;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "77c77f0a1b9f15b869ca3342186dfbedd1119d0e",
      "candidate_info": {
        "commit_hash": "77c77f0a1b9f15b869ca3342186dfbedd1119d0e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/77c77f0a1b9f15b869ca3342186dfbedd1119d0e",
        "files": [
          "ssl/s3_pkt.c"
        ],
        "message": "Multiblock corrupted pointer fix\n\nOpenSSL 1.0.2 introduced the \"multiblock\" performance improvement. This\nfeature only applies on 64 bit x86 architecture platforms that support AES\nNI instructions. A defect in the implementation of \"multiblock\" can cause\nOpenSSL's internal write buffer to become incorrectly set to NULL when\nusing non-blocking IO. Typically, when the user application is using a\nsocket BIO for writing, this will only result in a failed connection.\nHowever if some other BIO is used then it is likely that a segmentation\nfault will be triggered, thus enabling a potential DoS attack.\n\nCVE-2015-0290\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Andy Polyakov <appro@openssl.org>",
        "before_after_code_files": [
          "ssl/s3_pkt.c||ssl/s3_pkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ],
          "candidate": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/s3_pkt.c||ssl/s3_pkt.c": [
          "File: ssl/s3_pkt.c -> ssl/s3_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "786:             i = ssl3_write_pending(s, type, &buf[tot], nw);",
          "787:             if (i <= 0) {",
          "789:                     OPENSSL_free(wb->buf);",
          "790:                     wb->buf = NULL;",
          "791:                 }",
          "",
          "[Removed Lines]",
          "788:                 if (i < 0) {",
          "",
          "[Added Lines]",
          "788:                 if (i < 0 && (!s->wbio || !BIO_should_retry(s->wbio))) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}