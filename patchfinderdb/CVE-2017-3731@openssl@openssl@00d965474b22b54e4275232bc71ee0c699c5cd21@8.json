{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f8114d7d775b5802f283a9325635f9f2732e0341",
      "candidate_info": {
        "commit_hash": "f8114d7d775b5802f283a9325635f9f2732e0341",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f8114d7d775b5802f283a9325635f9f2732e0341",
        "files": [
          "crypto/bn/bn_lcl.h"
        ],
        "message": "bn: fix BN_DEBUG + BN_DEBUG_RAND support\n\nCouple of updates to make this code work properly again;\n* use OPENSSL_assert() instead of assert() (and #include <assert.h>)\n* the circular-dependency-avoidance uses RAND_bytes() (not pseudo)\n\nChange-Id: Iefb5a9dd73f71fd81c1268495c54a64378955354\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1672)\n(cherry picked from commit 0b50ac1a0fe907f4effcf3f2f36dac32523938c5)",
        "before_after_code_files": [
          "crypto/bn/bn_lcl.h||crypto/bn/bn_lcl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_lcl.h||crypto/bn/bn_lcl.h": [
          "File: crypto/bn/bn_lcl.h -> crypto/bn/bn_lcl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "147: # ifdef BN_DEBUG",
          "152: #  ifdef BN_DEBUG_RAND",
          "156: #    define BN_DEBUG_TRIX",
          "157: #   endif",
          "158: #   define bn_pollute(a) \\",
          "",
          "[Removed Lines]",
          "150: #  include <assert.h>",
          "154: #   ifndef RAND_pseudo_bytes",
          "155: int RAND_pseudo_bytes(unsigned char *buf, int num);",
          "",
          "[Added Lines]",
          "151: #   ifndef RAND_bytes",
          "152: int RAND_bytes(unsigned char *buf, int num);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:             } \\",
          "172:         } while(0)",
          "173: #   ifdef BN_DEBUG_TRIX",
          "175: #   endif",
          "176: #  else",
          "177: #   define bn_pollute(a)",
          "",
          "[Removed Lines]",
          "174: #    undef RAND_pseudo_bytes",
          "",
          "[Added Lines]",
          "171: #    undef RAND_bytes",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "180:         do { \\",
          "181:                 const BIGNUM *_bnum2 = (a); \\",
          "182:                 if (_bnum2 != NULL) { \\",
          "184:                                 (_bnum2->d[_bnum2->top - 1] != 0)); \\",
          "185:                         bn_pollute(_bnum2); \\",
          "186:                 } \\",
          "",
          "[Removed Lines]",
          "183:                         assert((_bnum2->top == 0) || \\",
          "",
          "[Added Lines]",
          "180:                         OPENSSL_assert((_bnum2->top == 0) || \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "192: #  define bn_wcheck_size(bn, words) \\",
          "193:         do { \\",
          "194:                 const BIGNUM *_bnum2 = (bn); \\",
          "197:                 (void)(_bnum2); \\",
          "198:         } while(0)",
          "",
          "[Removed Lines]",
          "195:                 assert((words) <= (_bnum2)->dmax && (words) >= (_bnum2)->top); \\",
          "",
          "[Added Lines]",
          "192:                 OPENSSL_assert((words) <= (_bnum2)->dmax && \\",
          "193:                         (words) >= (_bnum2)->top); \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aff927e84c3bce5b7ebc2cc72f99a571ea89c2b1",
      "candidate_info": {
        "commit_hash": "aff927e84c3bce5b7ebc2cc72f99a571ea89c2b1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/aff927e84c3bce5b7ebc2cc72f99a571ea89c2b1",
        "files": [
          "crypto/ui/ui_err.c",
          "crypto/ui/ui_lib.c",
          "include/openssl/ui.h"
        ],
        "message": "UI_process() didn't generate errors\n\nSince there are many parts of UI_process() that can go wrong, it isn't\nvery helpful to only return -1 with no further explanation.  With this\nchange, the error message will at least show which part went wrong.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2037)\n(cherry picked from commit 0a687ab0a92d2d68289364a6e232028c229f44bb)",
        "before_after_code_files": [
          "crypto/ui/ui_err.c||crypto/ui/ui_err.c",
          "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c",
          "include/openssl/ui.h||include/openssl/ui.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ui/ui_err.c||crypto/ui/ui_err.c": [
          "File: crypto/ui/ui_err.c -> crypto/ui/ui_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:     {ERR_FUNC(UI_F_UI_DUP_VERIFY_STRING), \"UI_dup_verify_string\"},",
          "31:     {ERR_FUNC(UI_F_UI_GET0_RESULT), \"UI_get0_result\"},",
          "32:     {ERR_FUNC(UI_F_UI_NEW_METHOD), \"UI_new_method\"},",
          "33:     {ERR_FUNC(UI_F_UI_SET_RESULT), \"UI_set_result\"},",
          "34:     {0, NULL}",
          "35: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:     {ERR_FUNC(UI_F_UI_PROCESS), \"UI_process\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:     {ERR_REASON(UI_R_INDEX_TOO_LARGE), \"index too large\"},",
          "41:     {ERR_REASON(UI_R_INDEX_TOO_SMALL), \"index too small\"},",
          "42:     {ERR_REASON(UI_R_NO_RESULT_BUFFER), \"no result buffer\"},",
          "43:     {ERR_REASON(UI_R_RESULT_TOO_LARGE), \"result too large\"},",
          "44:     {ERR_REASON(UI_R_RESULT_TOO_SMALL), \"result too small\"},",
          "45:     {ERR_REASON(UI_R_UNKNOWN_CONTROL_COMMAND), \"unknown control command\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     {ERR_REASON(UI_R_PROCESSING_ERROR), \"processing error\"},",
          "",
          "---------------"
        ],
        "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c": [
          "File: crypto/ui/ui_lib.c -> crypto/ui/ui_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "423: int UI_process(UI *ui)",
          "424: {",
          "425:     int i, ok = 0;",
          "430:     if (ui->flags & UI_FLAG_PRINT_ERRORS)",
          "431:         ERR_print_errors_cb((int (*)(const char *, size_t, void *))",
          "",
          "[Removed Lines]",
          "427:     if (ui->meth->ui_open_session && !ui->meth->ui_open_session(ui))",
          "428:         return -1;",
          "",
          "[Added Lines]",
          "426:     const char *state = \"processing\";",
          "428:     if (ui->meth->ui_open_session && !ui->meth->ui_open_session(ui)) {",
          "429:         state = \"opening session\";",
          "430:         ok = -1;",
          "431:         goto err;",
          "432:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "436:             && !ui->meth->ui_write_string(ui,",
          "437:                                           sk_UI_STRING_value(ui->strings, i)))",
          "438:         {",
          "439:             ok = -1;",
          "440:             goto err;",
          "441:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "443:             state = \"writing strings\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "447:             ok = -2;",
          "448:             goto err;",
          "450:             ok = -1;",
          "451:             goto err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "455:             state = \"flushing\";",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "463:                 ok = -2;",
          "464:                 goto err;",
          "466:                 ok = -1;",
          "467:                 goto err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "472:                 state = \"reading strings\";",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "472:         }",
          "473:     }",
          "474:  err:",
          "477:     return ok;",
          "478: }",
          "",
          "[Removed Lines]",
          "475:     if (ui->meth->ui_close_session && !ui->meth->ui_close_session(ui))",
          "476:         return -1;",
          "",
          "[Added Lines]",
          "482:     if (ui->meth->ui_close_session && !ui->meth->ui_close_session(ui)) {",
          "483:         if (state == NULL)",
          "484:             state = \"closing session\";",
          "485:         ok = -1;",
          "486:     }",
          "488:     if (ok == -1) {",
          "489:         UIerr(UI_F_UI_PROCESS, UI_R_PROCESSING_ERROR);",
          "490:         ERR_add_error_data(2, \"while \", state);",
          "491:     }",
          "",
          "---------------"
        ],
        "include/openssl/ui.h||include/openssl/ui.h": [
          "File: include/openssl/ui.h -> include/openssl/ui.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "350: # define UI_F_UI_DUP_VERIFY_STRING                        106",
          "351: # define UI_F_UI_GET0_RESULT                              107",
          "352: # define UI_F_UI_NEW_METHOD                               104",
          "353: # define UI_F_UI_SET_RESULT                               105",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "353: # define UI_F_UI_PROCESS                                  113",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "357: # define UI_R_INDEX_TOO_LARGE                             102",
          "358: # define UI_R_INDEX_TOO_SMALL                             103",
          "359: # define UI_R_NO_RESULT_BUFFER                            105",
          "360: # define UI_R_RESULT_TOO_LARGE                            100",
          "361: # define UI_R_RESULT_TOO_SMALL                            101",
          "362: # define UI_R_UNKNOWN_CONTROL_COMMAND                     106",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "361: # define UI_R_PROCESSING_ERROR                            107",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db2fed4443042db3e7921810d944cfd15d347d08",
      "candidate_info": {
        "commit_hash": "db2fed4443042db3e7921810d944cfd15d347d08",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/db2fed4443042db3e7921810d944cfd15d347d08",
        "files": [
          "crypto/rsa/rsa_oaep.c"
        ],
        "message": "Fix a memory leak in RSA_padding_add_PKCS1_OAEP_mgf1\n\nSigned-off-by: Kurt Roeckx <kurt@roeckx.be>\nReviewed-by: Matt Caswell <matt@openssl.org>\nGH: #2140\n(cherry picked from commit c6d215e0d278fcd51ad474a3647b61e1b67290bb)",
        "before_after_code_files": [
          "crypto/rsrsa_oaep.c||crypto/rsa/rsa_oaep.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rsrsa_oaep.c||crypto/rsa/rsa_oaep.c": [
          "File: crypto/rsrsa_oaep.c -> crypto/rsa/rsa_oaep.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:         goto err;",
          "99:         goto err;",
          "106:  err:",
          "107:     OPENSSL_free(dbmask);",
          "108:     return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51800912006b2b09ed61607842fce8dbb2f44a9c",
      "candidate_info": {
        "commit_hash": "51800912006b2b09ed61607842fce8dbb2f44a9c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/51800912006b2b09ed61607842fce8dbb2f44a9c",
        "files": [
          "ssl/bio_ssl.c"
        ],
        "message": "Get pointer type right in BIO_ssl_shutdown()\n\nAlso, restore 1.0.2 behavior of looping over all BIO's in the chain.\nThanks to Joseph Bester for finding this and suggesting a fix to the\ncrash.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2651)\n(cherry picked from commit 9015d34e141af747f7c750f8d08f862b2a8273c7)",
        "before_after_code_files": [
          "ssl/bio_ssl.c||ssl/bio_ssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/bio_ssl.c||ssl/bio_ssl.c": [
          "File: ssl/bio_ssl.c -> ssl/bio_ssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "518: void BIO_ssl_shutdown(BIO *b)",
          "519: {",
          "528: }",
          "",
          "[Removed Lines]",
          "520:     SSL *s;",
          "522:     b = BIO_find_type(b, BIO_TYPE_SSL);",
          "523:     if (b == NULL)",
          "524:         return;",
          "526:     s = BIO_get_data(b);",
          "527:     SSL_shutdown(s);",
          "",
          "[Added Lines]",
          "520:     BIO_SSL *bdata;",
          "522:     for (; b != NULL; b = BIO_next(b)) {",
          "523:         if (BIO_method_type(b) != BIO_TYPE_SSL)",
          "524:             continue;",
          "525:         bdata = BIO_get_data(b);",
          "526:         if (bdata != NULL && bdata->ssl != NULL)",
          "527:             SSL_shutdown(bdata->ssl);",
          "528:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "11f1fd4b0d1b3aef5c79b843d081dbb9bcd0b85f",
      "candidate_info": {
        "commit_hash": "11f1fd4b0d1b3aef5c79b843d081dbb9bcd0b85f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/11f1fd4b0d1b3aef5c79b843d081dbb9bcd0b85f",
        "files": [
          "doc/ssl/SSL_get_error.pod",
          "doc/ssl/SSL_read.pod",
          "doc/ssl/SSL_write.pod",
          "ssl/record/rec_layer_s3.c",
          "test/asynciotest.c"
        ],
        "message": "Make SSL_read and SSL_write return the old behaviour and document it.\n\nBackport of beacb0f0c1ae7b0542fe053b95307f515b578eb7, revert of\n122580ef71e4e5f355a1a104c9bfb36feee43759\n\nFixes: #1903\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n\nGH: #1966",
        "before_after_code_files": [
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
          "test/asynciotest.c||test/asynciotest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "312:             if (s->mode & SSL_MODE_RELEASE_BUFFERS && !SSL_IS_DTLS(s))",
          "313:                 if (len + left == 0)",
          "314:                     ssl3_release_read_buffer(s);",
          "316:         }",
          "317:         left += i;",
          "",
          "[Removed Lines]",
          "315:             return -1;",
          "",
          "[Added Lines]",
          "312:             return i;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "937:                 SSL3_BUFFER_set_left(&wb[currbuf], 0);",
          "938:             }",
          "940:         }",
          "941:         SSL3_BUFFER_add_offset(&wb[currbuf], i);",
          "942:         SSL3_BUFFER_add_left(&wb[currbuf], -i);",
          "",
          "[Removed Lines]",
          "939:             return -1;",
          "",
          "[Added Lines]",
          "933:             return i;",
          "",
          "---------------"
        ],
        "test/asynciotest.c||test/asynciotest.c": [
          "File: test/asynciotest.c -> test/asynciotest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:         for (j = 0; j < 2; j++) {",
          "310:                 goto end;",
          "311:             }",
          "323:             }",
          "325:                     || memcmp(buf, testdata, sizeof(testdata)) != 0) {",
          "326:                 printf(\"Test %d failed: Unexpected app data received\\n\", test);",
          "327:                 goto end;",
          "328:             }",
          "",
          "[Removed Lines]",
          "306:             for (ret = -1, i = 0; ret < 0 && i < 2 * sizeof(testdata); i++)",
          "307:                 ret = SSL_write(clientssl, testdata, sizeof(testdata));",
          "308:             if (ret <= 0) {",
          "309:                 printf(\"Test %d failed: Failed to write app data\\n\", test);",
          "318:             for (ret = -1, i = 0; ret < 0 && i < MAX_ATTEMPTS; i++)",
          "319:                 ret = SSL_read(serverssl, buf, sizeof(buf));",
          "320:             if (ret <= 0) {",
          "321:                 printf(\"Test %d failed: Failed to read app data\\n\", test);",
          "322:                 goto end;",
          "324:             if (ret != sizeof(testdata)",
          "",
          "[Added Lines]",
          "300:             int len;",
          "306:             for (ret = -1, i = 0, len = 0; len != sizeof(testdata) && i < 2;",
          "307:                 i++) {",
          "308:                 ret = SSL_write(clientssl, testdata + len,",
          "309:                     sizeof(testdata) - len);",
          "310:                 if (ret > 0) {",
          "311:                     len += ret;",
          "312:                 } else {",
          "313:                     int ssl_error = SSL_get_error(clientssl, ret);",
          "315:                     if (ssl_error == SSL_ERROR_SYSCALL ||",
          "316:                         ssl_error == SSL_ERROR_SSL) {",
          "317:                         printf(\"Test %d failed: Failed to write app data\\n\", test);",
          "318:                         err = -1;",
          "319:                         goto end;",
          "320:                     }",
          "321:                 }",
          "322:             }",
          "323:             if (len != sizeof(testdata)) {",
          "324:                 err = -1;",
          "325:                 printf(\"Test %d failed: Failed to write all app data\\n\", test);",
          "333:             for (ret = -1, i = 0, len = 0; len != sizeof(testdata) &&",
          "334:                 i < MAX_ATTEMPTS; i++)",
          "335:             {",
          "336:                 ret = SSL_read(serverssl, buf + len, sizeof(buf) - len);",
          "337:                 if (ret > 0) {",
          "338:                     len += ret;",
          "339:                 } else {",
          "340:                     int ssl_error = SSL_get_error(serverssl, ret);",
          "342:                     if (ssl_error == SSL_ERROR_SYSCALL ||",
          "343:                         ssl_error == SSL_ERROR_SSL) {",
          "344:                         printf(\"Test %d failed: Failed to read app data\\n\", test);",
          "345:                         err = -1;",
          "346:                         goto end;",
          "347:                     }",
          "348:                 }",
          "350:             if (len != sizeof(testdata)",
          "352:                 err = -1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}