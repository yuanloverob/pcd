{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a118f2172880d338101f80647437b8832ac1f768",
      "candidate_info": {
        "commit_hash": "a118f2172880d338101f80647437b8832ac1f768",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a118f2172880d338101f80647437b8832ac1f768",
        "files": [
          "lib/repl.js",
          "test/simple/test-repl-tab-complete.js"
        ],
        "message": "repl: make tab completion work on non-objects",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js",
          "test/simple/test-repl-tab-complete.js||test/simple/test-repl-tab-complete.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "523:             }",
          "525:             try {",
          "527:               var sentinel = 5;",
          "528:               while (p !== null) {",
          "529:                 memberGroups.push(Object.getOwnPropertyNames(p));",
          "530:                 p = Object.getPrototypeOf(p);",
          "",
          "[Removed Lines]",
          "526:               var p = Object.getPrototypeOf(obj);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-repl-tab-complete.js||test/simple/test-repl-tab-complete.js": [
          "File: test/simple/test-repl-tab-complete.js -> test/simple/test-repl-tab-complete.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:   assert.deepEqual(data, doesNotBreak);",
          "181: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183: putIn.run(['.clear']);",
          "186: putIn.run([",
          "187:   'var str = \"test\";'",
          "188: ]);",
          "189: testMe.complete('str.len', function(error, data) {",
          "190:   assert.deepEqual(data, [ [ 'str.length' ], 'str.len' ]);",
          "191: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3795d771135309bff5f169111b6efdec1aef6c32",
      "candidate_info": {
        "commit_hash": "3795d771135309bff5f169111b6efdec1aef6c32",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3795d771135309bff5f169111b6efdec1aef6c32",
        "files": [
          "doc/api/cluster.markdown",
          "test/simple/test-cluster-http-pipe.js"
        ],
        "message": "windows: `listen(pipe_name)` is not supported when running cluster\n\n- Added a note to the cluster module documentation.\n- Disabled test-cluster-http-pipe.",
        "before_after_code_files": [
          "test/simple/test-cluster-http-pipe.js||test/simple/test-cluster-http-pipe.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-cluster-http-pipe.js||test/simple/test-cluster-http-pipe.js": [
          "File: test/simple/test-cluster-http-pipe.js -> test/simple/test-cluster-http-pipe.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var cluster = require('cluster');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: if (process.platform === 'win32') {",
          "24:   process.exit(0);",
          "25: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "43a0c8811627ea224bb18ba3c72b91ca2c4ea8d7",
      "candidate_info": {
        "commit_hash": "43a0c8811627ea224bb18ba3c72b91ca2c4ea8d7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/43a0c8811627ea224bb18ba3c72b91ca2c4ea8d7",
        "files": [
          "lib/fs.js",
          "test/simple/test-regress-GH-3739.js"
        ],
        "message": "windows: correctly prep long path for fs.exists(Sync)\n\nCloses GH-3739",
        "before_after_code_files": [
          "lib/fs.js||lifs.js",
          "test/simple/test-regress-GH-3739.js||test/simple/test-regress-GH-3739.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "87: };",
          "89: fs.exists = function(path, callback) {",
          "91:     if (callback) callback(err ? false : true);",
          "92:   });",
          "93: };",
          "95: fs.existsSync = function(path) {",
          "96:   try {",
          "98:     return true;",
          "99:   } catch (e) {",
          "100:     return false;",
          "",
          "[Removed Lines]",
          "90:   binding.stat(path, function(err, stats) {",
          "97:     binding.stat(path);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-regress-GH-3739.js||test/simple/test-regress-GH-3739.js": [
          "File: test/simple/test-regress-GH-3739.js -> test/simple/test-regress-GH-3739.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common.js'),",
          "23:     assert = require('assert'),",
          "24:     fs = require('fs'),",
          "25:     path = require('path');",
          "27: var dir = path.resolve(common.fixturesDir),",
          "28:     dirs = [];",
          "31: for (var i = 0; i < 50; i++) {",
          "32:   dir = dir + '/123456790';",
          "33:   try {",
          "34:     fs.mkdirSync(dir, '0777');",
          "35:   } catch (e) {",
          "36:     if (e.code == 'EEXIST') {",
          "38:     } else {",
          "39:       cleanup();",
          "40:       throw e;",
          "41:     }",
          "42:   }",
          "43:   dirs.push(dir);",
          "44: }",
          "47: var r = fs.existsSync(dir);",
          "48: if (r !== true) {",
          "49:   cleanup();",
          "50:   throw new Error('fs.existsSync returned false');",
          "51: }",
          "54: fs.exists(dir, function(r) {",
          "55:   cleanup();",
          "56:   if (r !== true) {",
          "57:     throw new Error('fs.exists reported false');",
          "58:   }",
          "59: });",
          "62: function cleanup() {",
          "63:   for (var i = dirs.length - 1; i >= 0; i--) {",
          "64:     fs.rmdirSync(dirs[i]);",
          "65:   }",
          "66: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2297d638c17ef39fa17e08a7c50a09f1389bd990",
      "candidate_info": {
        "commit_hash": "2297d638c17ef39fa17e08a7c50a09f1389bd990",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2297d638c17ef39fa17e08a7c50a09f1389bd990",
        "files": [
          "lib/readline.js"
        ],
        "message": "Forgotten commit: add arguments to handleGroup",
        "before_after_code_files": [
          "lib/readline.js||lireadline.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "350:         for (var i = 0, compLen = completions.length; i < compLen; i++) {",
          "351:           c = completions[i];",
          "352:           if (c === '') {",
          "354:             group = [];",
          "355:           } else {",
          "356:             group.push(c);",
          "357:           }",
          "358:         }",
          "",
          "[Removed Lines]",
          "353:             handleGroup.call(self, group);",
          "359:         handleGroup.call(self, group);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "373: };",
          "377:   var self = this;",
          "378:   if (group.length == 0) {",
          "379:     return;",
          "",
          "[Removed Lines]",
          "376: function handleGroup(group) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "539598b11f34344c4e17afcb56b04a257f4fa3b2",
      "candidate_info": {
        "commit_hash": "539598b11f34344c4e17afcb56b04a257f4fa3b2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/539598b11f34344c4e17afcb56b04a257f4fa3b2",
        "files": [
          "test/simple/test-fs-watch.js"
        ],
        "message": "test: don't create temp files in fixtures dir",
        "before_after_code_files": [
          "test/simple/test-fs-watch.js||test/simple/test-fs-watch.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-fs-watch.js||test/simple/test-fs-watch.js": [
          "File: test/simple/test-fs-watch.js -> test/simple/test-fs-watch.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: var watchSeenTwo = 0;",
          "31: var watchSeenThree = 0;",
          "36: var filenameOne = 'watch.txt';",
          "37: var filepathOne = path.join(testDir, filenameOne);",
          "",
          "[Removed Lines]",
          "33: var startDir = process.cwd();",
          "34: var testDir = common.fixturesDir;",
          "",
          "[Added Lines]",
          "33: var testDir = common.tmpDir;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: process.on('exit', function() {",
          "53:   assert.ok(watchSeenOne > 0);",
          "54:   assert.ok(watchSeenTwo > 0);",
          "55:   assert.ok(watchSeenThree > 0);",
          "56: });",
          "59: fs.writeFileSync(filepathOne, 'hello');",
          "",
          "[Removed Lines]",
          "49:   fs.unlinkSync(filepathOne);",
          "50:   fs.unlinkSync(filepathTwoAbs);",
          "51:   fs.unlinkSync(filepathThree);",
          "52:   fs.rmdirSync(testsubdir);",
          "",
          "[Added Lines]",
          "54: try { fs.unlinkSync(filepathOne);    } catch (e) { }",
          "55: try { fs.unlinkSync(filepathTwoAbs); } catch (e) { }",
          "56: try { fs.unlinkSync(filepathThree);  } catch (e) { }",
          "57: try { fs.rmdirSync(testsubdir);      } catch (e) { }",
          "",
          "---------------"
        ]
      }
    }
  ]
}