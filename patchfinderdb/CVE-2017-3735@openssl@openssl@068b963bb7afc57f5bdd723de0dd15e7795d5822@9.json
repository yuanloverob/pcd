{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f20aa0a6e91f25dccfbaeeba9ad8f2f6800d7bc4",
      "candidate_info": {
        "commit_hash": "f20aa0a6e91f25dccfbaeeba9ad8f2f6800d7bc4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f20aa0a6e91f25dccfbaeeba9ad8f2f6800d7bc4",
        "files": [
          "apps/cms.c"
        ],
        "message": "Corrected 'cms' exit status when key or certificate cannot be opened\n\nA backport of #4997.\nFixes #4996.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/5021)",
        "before_after_code_files": [
          "apps/cms.c||apps/cms.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/cms.c||apps/cms.c": [
          "File: apps/cms.c -> apps/cms.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "931:             keyfile = sk_OPENSSL_STRING_value(skkeys, i);",
          "933:             signer = load_cert(signerfile, FORMAT_PEM, \"signer certificate\");",
          "935:                 goto end;",
          "936:             key = load_key(keyfile, keyform, 0, passin, e, \"signing key file\");",
          "938:                 goto end;",
          "939:             for (kparam = key_first; kparam; kparam = kparam->next) {",
          "940:                 if (kparam->idx == i) {",
          "941:                     tflags |= CMS_KEY_PARAM;",
          "",
          "[Removed Lines]",
          "934:             if (!signer)",
          "937:             if (!key)",
          "",
          "[Added Lines]",
          "934:             if (!signer) {",
          "935:                 ret = 2;",
          "937:             }",
          "939:             if (!key) {",
          "940:                 ret = 2;",
          "942:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a6f4e3fe622764667cc733c0bc1b498032827f44",
      "candidate_info": {
        "commit_hash": "a6f4e3fe622764667cc733c0bc1b498032827f44",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a6f4e3fe622764667cc733c0bc1b498032827f44",
        "files": [
          "crypto/asn1/a_strex.c"
        ],
        "message": "asn1/a_strex.c: fix flags truncation in do_esc_char.\n\n|flags| argument to do_esc_char  was apparently truncated by implicit\ncast. [Caught by VC warning subsytem.]\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4721)\n\n(cherry picked from commit 372463103917fcc2b68bd2ba3db55b29ce325705)",
        "before_after_code_files": [
          "crypto/asn1/a_strex.c||crypto/asn1/a_strex.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_strex.c||crypto/asn1/a_strex.c": [
          "File: crypto/asn1/a_strex.c -> crypto/asn1/a_strex.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:                        char_io *io_ch, void *arg)",
          "68: {",
          "69:     unsigned short chflgs;",
          "",
          "[Removed Lines]",
          "66: static int do_esc_char(unsigned long c, unsigned char flags, char *do_quotes,",
          "",
          "[Added Lines]",
          "66: static int do_esc_char(unsigned long c, unsigned short flags, char *do_quotes,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:         if (!io_ch(arg, \"\\\\\\\\\", 2))",
          "121:             return -1;",
          "122:         return 2;",
          "",
          "[Removed Lines]",
          "119:     if (chtmp == '\\\\' && flags & ESC_FLAGS) {",
          "",
          "[Added Lines]",
          "119:     if (chtmp == '\\\\' && (flags & ESC_FLAGS)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "196:                 if (len < 0)",
          "197:                     return -1;",
          "198:                 outlen += len;",
          "199:             }",
          "200:         } else {",
          "204:             if (len < 0)",
          "205:                 return -1;",
          "206:             outlen += len;",
          "",
          "[Removed Lines]",
          "193:                 len =",
          "194:                     do_esc_char(utfbuf[i], (unsigned short)(flags | orflags),",
          "195:                                 quotes, io_ch, arg);",
          "201:             len =",
          "202:                 do_esc_char(c, (unsigned short)(flags | orflags), quotes,",
          "203:                             io_ch, arg);",
          "",
          "[Added Lines]",
          "194:                 len = do_esc_char(utfbuf[i], flags | orflags, quotes,",
          "195:                                   io_ch, arg);",
          "201:             len = do_esc_char(c, flags | orflags, quotes,",
          "202:                               io_ch, arg);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f0e3fca9ee7052a9e4d034f988376b403a839140",
      "candidate_info": {
        "commit_hash": "f0e3fca9ee7052a9e4d034f988376b403a839140",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f0e3fca9ee7052a9e4d034f988376b403a839140",
        "files": [
          "util/copy.pl"
        ],
        "message": "util/copy.pl: work around glob quirk in some of earlier 5.1x Perl versions.\n\nIn earlier 5.1x Perl versions quoting globs works only if there is\nwhite space. If there is none, it's looking for names starting with \".\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4695)\n\n(cherry picked from commit 1097d2a39e3f85d4dac2c4d1c238792d6e1d959f)",
        "before_after_code_files": [
          "util/copy.pl||util/copy.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/copy.pl||util/copy.pl": [
          "File: util/copy.pl -> util/copy.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:   next;",
          "27:   }",
          "28:  $arg =~ s|\\\\|/|g; # compensate for bug/feature in cygwin glob...",
          "30:   {",
          "31:   push @filelist, $_;",
          "32:   }",
          "",
          "[Removed Lines]",
          "29:  foreach (glob qq(\"$arg\"))",
          "",
          "[Added Lines]",
          "29:  $arg = qq(\"$arg\") if ($arg =~ /\\s/); # compensate for bug in 5.10...",
          "30:  foreach (glob $arg)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b2621ffdf8063c961ee5c3a7dd9db68d623d3554",
      "candidate_info": {
        "commit_hash": "b2621ffdf8063c961ee5c3a7dd9db68d623d3554",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b2621ffdf8063c961ee5c3a7dd9db68d623d3554",
        "files": [
          "apps/ca.c"
        ],
        "message": "Useless conf != NULL test\n\ncheck is already made 10 line above.\nclean commented code\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4885)\n\n(cherry picked from commit df364297495e1d7409f1fcb0f4432c8671019cd8)",
        "before_after_code_files": [
          "apps/ca.c||apps/ca.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/ca.c||apps/ca.c": [
          "File: apps/ca.c -> apps/ca.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "440:         && (section = lookup_conf(conf, BASE_SECTION, ENV_DEFAULT_CA)) == NULL)",
          "441:         goto end;",
          "465:         }",
          "466:     }",
          "468:     randfile = NCONF_get_string(conf, BASE_SECTION, \"RANDFILE\");",
          "469:     if (randfile == NULL)",
          "",
          "[Removed Lines]",
          "443:     if (conf != NULL) {",
          "444:         p = NCONF_get_string(conf, NULL, \"oid_file\");",
          "445:         if (p == NULL)",
          "446:             ERR_clear_error();",
          "447:         if (p != NULL) {",
          "448:             BIO *oid_bio;",
          "450:             oid_bio = BIO_new_file(p, \"r\");",
          "451:             if (oid_bio == NULL) {",
          "453:                 BIO_printf(bio_err,\"problems opening %s for extra oid's\\n\",p);",
          "454:                 ERR_print_errors(bio_err);",
          "456:                 ERR_clear_error();",
          "457:             } else {",
          "458:                 OBJ_create_objects(oid_bio);",
          "459:                 BIO_free(oid_bio);",
          "460:             }",
          "461:         }",
          "462:         if (!add_oid_section(conf)) {",
          "463:             ERR_print_errors(bio_err);",
          "464:             goto end;",
          "",
          "[Added Lines]",
          "443:     p = NCONF_get_string(conf, NULL, \"oid_file\");",
          "444:     if (p == NULL)",
          "445:         ERR_clear_error();",
          "446:     if (p != NULL) {",
          "447:         BIO *oid_bio = BIO_new_file(p, \"r\");",
          "449:         if (oid_bio == NULL) {",
          "450:             ERR_clear_error();",
          "451:         } else {",
          "452:             OBJ_create_objects(oid_bio);",
          "453:             BIO_free(oid_bio);",
          "456:     if (!add_oid_section(conf)) {",
          "457:         ERR_print_errors(bio_err);",
          "458:         goto end;",
          "459:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a4110310ea6879622516294b9fc7ef6e2f815c1c",
      "candidate_info": {
        "commit_hash": "a4110310ea6879622516294b9fc7ef6e2f815c1c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a4110310ea6879622516294b9fc7ef6e2f815c1c",
        "files": [
          "crypto/rand/md_rand.c"
        ],
        "message": "Fix async engine pause dead lock in error case.\n\nIn 'crypto/rand/ossl_rand.c', a call to\n'ASYNC_unblock_pause()' is missing in an error case.\n\nCLA: trivial\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\n\n(cherry picked from commit e4b16013e9b3d19241d3ba0bb0875f0d70d93509)\n\n(Merged from https://github.com/openssl/openssl/pull/4024)",
        "before_after_code_files": [
          "crypto/rand/md_rand.c||crypto/rand/md_rand.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/md_rand.c||crypto/rand/md_rand.c": [
          "File: crypto/rand/md_rand.c -> crypto/rand/md_rand.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "493:     ASYNC_block_pause();",
          "494:     if (!MD_Update(m, md, MD_DIGEST_LENGTH) || !MD_Final(m, md)) {",
          "495:         CRYPTO_THREAD_unlock(rand_lock);",
          "496:         goto err;",
          "497:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "495:         ASYNC_unblock_pause();",
          "",
          "---------------"
        ]
      }
    }
  ]
}