{
  "cve_id": "CVE-2020-7041",
  "cve_desc": "An issue was discovered in openfortivpn 1.11.0 when used with OpenSSL 1.0.2 or later. tunnel.c mishandles certificate validation because an X509_check_host negative error code is interpreted as a successful return value.",
  "repo": "adrienverge/openfortivpn",
  "patch_hash": "60660e00b80bad0fadcf39aee86f6f8756c94f91",
  "patch_info": {
    "commit_hash": "60660e00b80bad0fadcf39aee86f6f8756c94f91",
    "repo": "adrienverge/openfortivpn",
    "commit_url": "https://github.com/adrienverge/openfortivpn/commit/60660e00b80bad0fadcf39aee86f6f8756c94f91",
    "files": [
      "src/tunnel.c"
    ],
    "message": "correctly check return value of X509_check_host\n\nCVE-2020-7041 incorrect use of X509_check_host (regarding return value)\nis fixed with this commit.\n\nThe flaw came in with #242 and prevented proper host name verification\nwhen openssl >= 1.0.2 was in use since openfortivpn 1.7.0.",
    "before_after_code_files": [
      "src/tunnel.c||src/tunnel.c"
    ]
  },
  "patch_diff": {
    "src/tunnel.c||src/tunnel.c": [
      "File: src/tunnel.c -> src/tunnel.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "667: #ifdef HAVE_X509_CHECK_HOST",
      "670:   cert_valid = 1;",
      "671: #else",
      "",
      "[Removed Lines]",
      "669:  if (X509_check_host(cert, common_name, FIELD_SIZE, 0, NULL))",
      "",
      "[Added Lines]",
      "670:  if (X509_check_host(cert, common_name, FIELD_SIZE, 0, NULL) == 1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9eee997d599a89492281fc7ffdd79d88cd61afc3",
      "candidate_info": {
        "commit_hash": "9eee997d599a89492281fc7ffdd79d88cd61afc3",
        "repo": "adrienverge/openfortivpn",
        "commit_url": "https://github.com/adrienverge/openfortivpn/commit/9eee997d599a89492281fc7ffdd79d88cd61afc3",
        "files": [
          "src/tunnel.c"
        ],
        "message": "supply proper input buffer to X509_check_host\n\nCVE-2020-7042 use of uninitialized memory in X509_check_host is fixed with\nthis commit\n\nthe uninitialized buffer common_name was passed as argument to X509_check_host\nwhich prevented proper host name validation when openssl >= 1.0.2 was in use.\nThis came in with #282 which went into openfortivpn 1.7.1.\nUnfortunately, this problem has stayed unnoticed because the return value\nwas not properly checked either (which is a separate issue, with CVE-2020-7041,\nand which has been fixed by the previous commit)",
        "before_after_code_files": [
          "src/tunnel.c||src/tunnel.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/tunnel.c||src/tunnel.c"
          ],
          "candidate": [
            "src/tunnel.c||src/tunnel.c"
          ]
        }
      },
      "candidate_diff": {
        "src/tunnel.c||src/tunnel.c": [
          "File: src/tunnel.c -> src/tunnel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "652:  char *line;",
          "653:  int i;",
          "654:  X509_NAME *subj;",
          "657:  SSL_set_verify(tunnel->ssl_handle, SSL_VERIFY_PEER, NULL);",
          "",
          "[Removed Lines]",
          "655:  char common_name[FIELD_SIZE + 1];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "667: #ifdef HAVE_X509_CHECK_HOST",
          "671:   cert_valid = 1;",
          "672: #else",
          "675:  if (subj",
          "",
          "[Removed Lines]",
          "670:  if (X509_check_host(cert, common_name, FIELD_SIZE, 0, NULL) == 1)",
          "",
          "[Added Lines]",
          "670:  if (X509_check_host(cert, tunnel->config->gateway_host,",
          "671:                      0, 0, NULL) == 1)",
          "674:  char common_name[FIELD_SIZE + 1];",
          "",
          "---------------"
        ]
      }
    }
  ]
}