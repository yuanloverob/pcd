{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aba6117c6c6723dc446797d2b889f4b989cd512a",
      "candidate_info": {
        "commit_hash": "aba6117c6c6723dc446797d2b889f4b989cd512a",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/aba6117c6c6723dc446797d2b889f4b989cd512a",
        "files": [
          "arch/AArch64/AArch64BaseInfo.c"
        ],
        "message": "Replaced snprintf with cs_snprintf",
        "before_after_code_files": [
          "arch/AArch64/AArch64BaseInfo.c||arch/AArch64/AArch64BaseInfo.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64BaseInfo.c||arch/AArch64/AArch64BaseInfo.c": [
          "File: arch/AArch64/AArch64BaseInfo.c -> arch/AArch64/AArch64BaseInfo.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "642:  Op2S = utostr(Op2, false);",
          "646:  (void)dummy;",
          "648:  cs_mem_free(Op1S);",
          "",
          "[Removed Lines]",
          "645:  dummy = sprintf(result, \"s3_%s_c%s_c%s_%s\", Op1S, CRnS, CRmS, Op2S);",
          "",
          "[Added Lines]",
          "645:  dummy = cs_snprintf(result, 128, \"s3_%s_c%s_c%s_%s\", Op1S, CRnS, CRmS, Op2S);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "72daee3d071d1c978f35dd342241f573c1d3956c",
      "candidate_info": {
        "commit_hash": "72daee3d071d1c978f35dd342241f573c1d3956c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/72daee3d071d1c978f35dd342241f573c1d3956c",
        "files": [
          "bindings/python/capstone/__init__.py"
        ],
        "message": "Workaround unicorn handing back bytearrays",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "843:             print(code)",
          "844:             code = code.encode()",
          "845:             print(code)'''",
          "846:         res = _cs.cs_disasm(self.csh, code, len(code), offset, count, ctypes.byref(all_insn))",
          "847:         if res > 0:",
          "848:             try:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "846:         # Hack, unicorn's memory accessors give you back bytearrays, but they",
          "847:         # cause TypeErrors when you hand them into Capstone.",
          "848:         if isinstance(code, bytearray):",
          "849:             code = bytes(code)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bc0e173daba8d8cb0b603e2f5da866ca4973b63d",
      "candidate_info": {
        "commit_hash": "bc0e173daba8d8cb0b603e2f5da866ca4973b63d",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/bc0e173daba8d8cb0b603e2f5da866ca4973b63d",
        "files": [
          "capstone.pc.in"
        ],
        "message": "CMake: fix pkgconfig file",
        "before_after_code_files": [
          "capstone.pc.in||capstone.pc.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "capstone.pc.in||capstone.pc.in": [
          "File: capstone.pc.in -> capstone.pc.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: Name: capstone",
          "2: Description: Capstone disassembly engine",
          "4: URL: http://www.capstone-engine.org",
          "5: Libs: -L@CMAKE_INSTALL_PREFIX@/lib -lcapstone",
          "6: Cflags: -I@CMAKE_INSTALL_PREFIX@/include/capstone",
          "",
          "[Removed Lines]",
          "3: Version: @VERSION_MAJOR@.@VERSION_MAJOR@.@VERSION_PATCH@",
          "",
          "[Added Lines]",
          "3: Version: @VERSION_MAJOR@.@VERSION_MINOR@.@VERSION_PATCH@",
          "5: archive=@CMAKE_INSTALL_PREFIX@/lib/libcapstone.a",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd2077c2d6d198cdd9e36212ad270855792e431f",
      "candidate_info": {
        "commit_hash": "bd2077c2d6d198cdd9e36212ad270855792e431f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/bd2077c2d6d198cdd9e36212ad270855792e431f",
        "files": [
          "arch/AArch64/AArch64Module.c",
          "arch/ARM/ARMModule.c",
          "arch/Mips/MipsModule.c",
          "arch/PowerPC/PPCModule.c",
          "arch/Sparc/SparcModule.c"
        ],
        "message": "switch endian mode with cs_option() for Arm/Arm64/Mips/Sparc. fix issue #849",
        "before_after_code_files": [
          "arch/AArch64/AArch64Module.c||arch/AArch64/AArch64Module.c",
          "arch/ARM/ARMModule.c||arch/ARM/ARMModule.c",
          "arch/Mips/MipsModule.c||arch/Mips/MipsModule.c",
          "arch/PowerPC/PPCModule.c||arch/PowerPC/PPCModule.c",
          "arch/Sparc/SparcModule.c||arch/Sparc/SparcModule.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64Module.c||arch/AArch64/AArch64Module.c": [
          "File: arch/AArch64/AArch64Module.c -> arch/AArch64/AArch64Module.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: static cs_err option(cs_struct *handle, cs_opt_type type, size_t value)",
          "40: {",
          "41:  return CS_ERR_OK;",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:  if (type == CS_OPT_MODE) {",
          "42:   handle->big_endian = (((cs_mode)value & CS_MODE_BIG_ENDIAN) != 0);",
          "43:  }",
          "",
          "---------------"
        ],
        "arch/ARM/ARMModule.c||arch/ARM/ARMModule.c": [
          "File: arch/ARM/ARMModule.c -> arch/ARM/ARMModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     handle->disasm = ARM_getInstruction;",
          "54:    handle->mode = (cs_mode)value;",
          "55:    break;",
          "56:   case CS_OPT_SYNTAX:",
          "57:    ARM_getRegName(handle, (int)value);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:    handle->big_endian = ((handle->mode & CS_MODE_BIG_ENDIAN) != 0);",
          "",
          "---------------"
        ],
        "arch/Mips/MipsModule.c||arch/Mips/MipsModule.c": [
          "File: arch/Mips/MipsModule.c -> arch/Mips/MipsModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: {",
          "38:  if (type == CS_OPT_MODE) {",
          "39:   handle->mode = (cs_mode)value;",
          "40:   return CS_ERR_OK;",
          "41:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   handle->big_endian = ((handle->mode & CS_MODE_BIG_ENDIAN) != 0);",
          "",
          "---------------"
        ],
        "arch/PowerPC/PPCModule.c||arch/PowerPC/PPCModule.c": [
          "File: arch/PowerPC/PPCModule.c -> arch/PowerPC/PPCModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:  if (type == CS_OPT_SYNTAX)",
          "41:   handle->syntax = (int) value;",
          "43:  return CS_ERR_OK;",
          "44: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:  if (type == CS_OPT_MODE) {",
          "44:   handle->big_endian = (((cs_mode)value & CS_MODE_BIG_ENDIAN) != 0);",
          "45:  }",
          "",
          "---------------"
        ],
        "arch/Sparc/SparcModule.c||arch/Sparc/SparcModule.c": [
          "File: arch/Sparc/SparcModule.c -> arch/Sparc/SparcModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:  if (type == CS_OPT_SYNTAX)",
          "40:   handle->syntax = (int) value;",
          "42:  return CS_ERR_OK;",
          "43: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:  if (type == CS_OPT_MODE) {",
          "43:   handle->big_endian = (((cs_mode)value & CS_MODE_BIG_ENDIAN) != 0);",
          "44:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6beb6ad931ba18efb2a91e293efa646bf47e02cd",
      "candidate_info": {
        "commit_hash": "6beb6ad931ba18efb2a91e293efa646bf47e02cd",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/6beb6ad931ba18efb2a91e293efa646bf47e02cd",
        "files": [
          "arch/X86/X86Disassembler.c"
        ],
        "message": "Bugfix : setting all fields to insns cache (#899)\n\n* Bugfix : setting all fields to insns cache\n\n* Bugfix\nFixing root cause, not setting opcode to 0 in default case\n\n* Not resetting opcode to 0 in this case as well\n\n* Finalizing bugfix",
        "before_after_code_files": [
          "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c": [
          "File: arch/X86/X86Disassembler.c -> arch/X86/X86Disassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:     case X86_VPCOMUQmi: NewOpc = X86_VPCOMUQmi_alt; break;",
          "221:    }",
          "224:   }",
          "225: #endif",
          "226:  } else if (type == TYPE_IMM5) {",
          "",
          "[Removed Lines]",
          "223:    MCInst_setOpcode(mcInst, NewOpc);",
          "",
          "[Added Lines]",
          "223:    if (NewOpc != 0) {",
          "224:     MCInst_setOpcode(mcInst, NewOpc);",
          "225:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "386:     case X86_VPCMPWZrrik:      NewOpc = X86_VPCMPWZrrik_alt;      break;",
          "387:    }",
          "390:   }",
          "391: #endif",
          "392:  }",
          "",
          "[Removed Lines]",
          "389:    MCInst_setOpcode(mcInst, NewOpc);",
          "",
          "[Added Lines]",
          "391:    if (NewOpc != 0) {",
          "392:     MCInst_setOpcode(mcInst, NewOpc);",
          "393:    }",
          "",
          "---------------"
        ]
      }
    }
  ]
}