{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "12ce2b31d7018586e589cd8fa72339f9bc230f05",
      "candidate_info": {
        "commit_hash": "12ce2b31d7018586e589cd8fa72339f9bc230f05",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/12ce2b31d7018586e589cd8fa72339f9bc230f05",
        "files": [
          "bindings/powershell/Out-UnmanagedDll.ps1",
          "bindings/powershell/README"
        ],
        "message": "Binding.PowerShell-Script\n\nAdded script to generate compressed DLL output & update for README",
        "before_after_code_files": [
          "bindings/powershell/Out-UnmanagedDll.ps1||bindings/powershell/Out-UnmanagedDll.ps1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/powershell/Out-UnmanagedDll.ps1||bindings/powershell/Out-UnmanagedDll.ps1": [
          "File: bindings/powershell/Out-UnmanagedDll.ps1 -> bindings/powershell/Out-UnmanagedDll.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: function Out-UnmanagedDll",
          "2: {",
          "3:     [CmdletBinding()] Param (",
          "4:         [Parameter(Mandatory = $True)]",
          "5:         [String]",
          "6:         $FilePath",
          "7:     )",
          "9:     $Path = Resolve-Path $FilePath",
          "11:     if (! [IO.File]::Exists($Path))",
          "12:     {",
          "13:         Throw \"$Path does not exist.\"",
          "14:     }",
          "16:     $FileBytes = [System.IO.File]::ReadAllBytes($Path)",
          "18:     if (($FileBytes[0..1] | % {[Char]$_}) -join '' -cne 'MZ')",
          "19:     {",
          "20:         Throw \"$Path is not a valid executable.\"",
          "21:     }",
          "23:  # Encode",
          "24:     $Length = $FileBytes.Length",
          "25:     $CompressedStream = New-Object IO.MemoryStream",
          "26:     $DeflateStream = New-Object IO.Compression.DeflateStream ($CompressedStream, [IO.Compression.CompressionMode]::Compress)",
          "27:     $DeflateStream.Write($FileBytes, 0, $FileBytes.Length)",
          "28:     $DeflateStream.Dispose()",
          "29:     $CompressedFileBytes = $CompressedStream.ToArray()",
          "30:     $CompressedStream.Dispose()",
          "31:     $EncodedCompressedFile = [Convert]::ToBase64String($CompressedFileBytes)",
          "33:  # Decode",
          "34:  $Output = @\"",
          "35: `$EncodedCompressedFile = @'",
          "36: $EncodedCompressedFile",
          "37: '@",
          "38: `$Stream = new-object -TypeName System.IO.MemoryStream",
          "39: `$DeflateStream = New-Object IO.Compression.DeflateStream([IO.MemoryStream][Convert]::FromBase64String(`$EncodedCompressedFile),[IO.Compression.CompressionMode]::Decompress)",
          "40: `$buffer = New-Object Byte[]($Length)",
          "41: `$count = 0",
          "42: do",
          "43:     {",
          "44:         `$count = `$DeflateStream.Read(`$buffer, 0, 1024)",
          "45:         if (`$count -gt 0)",
          "46:             {",
          "47:                 `$Stream.Write(`$buffer, 0, `$count)",
          "48:             }",
          "49:     }",
          "50: While (`$count -gt 0)",
          "51: `$array = `$stream.ToArray()",
          "52: `$DeflateStream.Close()",
          "53: `$Stream.Close()",
          "54: Set-Content -value `$array -encoding byte -path `$DllPath",
          "55: \"@",
          "57:  Write-Output $Output",
          "58: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "222d15f170f822462b92d3c9e5db4097b14d6d96",
      "candidate_info": {
        "commit_hash": "222d15f170f822462b92d3c9e5db4097b14d6d96",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/222d15f170f822462b92d3c9e5db4097b14d6d96",
        "files": [
          "cstool/cstool_x86.c"
        ],
        "message": "cleanup",
        "before_after_code_files": [
          "cstool/cstool_x86.c||cstool/cstool_x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool_x86.c||cstool/cstool_x86.c": [
          "File: cstool/cstool_x86.c -> cstool/cstool_x86.c"
        ]
      }
    },
    {
      "candidate_hash": "b526229ee44bdf192c88e7c4bced31f913a86697",
      "candidate_info": {
        "commit_hash": "b526229ee44bdf192c88e7c4bced31f913a86697",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/b526229ee44bdf192c88e7c4bced31f913a86697",
        "files": [
          "bindings/powershell/Capstone/Capstone.psm1"
        ],
        "message": "Fix: cs_close -> [ref]Ptr not Ptr",
        "before_after_code_files": [
          "bindings/powershell/Capstone/Capstone.psm1||bindings/powershell/Capstone/Capstone.psm1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/powershell/Capstone/Capstone.psm1||bindings/powershell/Capstone/Capstone.psm1": [
          "File: bindings/powershell/Capstone/Capstone.psm1 -> bindings/powershell/Capstone/Capstone.psm1",
          "--- Hunk 1 ---",
          "[Context before]",
          "261:   [DllImport(\"$DllPath\")]",
          "262:   public static extern cs_err cs_close(",
          "265:   [DllImport(\"$DllPath\")]",
          "266:   public static extern cs_err cs_option(",
          "",
          "[Removed Lines]",
          "263:    IntPtr handle);",
          "",
          "[Added Lines]",
          "263:    ref IntPtr handle);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "340:  if ($CallResult -ne \"CS_ERR_OK\") {",
          "341:   echo \"`n[!] cs_option error: $CallResult\"",
          "342:   echo \"[>] Quitting..`n\"",
          "344:   Return",
          "345:  }",
          "",
          "[Removed Lines]",
          "343:   $CallResult = [Capstone]::cs_close($DisAsmHandle)",
          "",
          "[Added Lines]",
          "343:   $CallResult = [Capstone]::cs_close([ref]$DisAsmHandle)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "359:  if ($CallResult -ne \"CS_ERR_OK\") {",
          "360:   echo \"`n[!] cs_option error: $CallResult\"",
          "361:   echo \"[>] Quitting..`n\"",
          "363:   Return",
          "364:  }",
          "",
          "[Removed Lines]",
          "362:   $CallResult = [Capstone]::cs_close($DisAsmHandle)",
          "",
          "[Added Lines]",
          "362:   $CallResult = [Capstone]::cs_close([ref]$DisAsmHandle)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "428:    $BuffOffset = $BuffOffset + $cs_insn_size",
          "429:   }",
          "430:  } else {",
          "434:   Return",
          "435:  }",
          "",
          "[Removed Lines]",
          "431:   echo \"[!] Disassembly Failed\"",
          "432:   echo \"[>] Quitting..\"",
          "433:   $CallResult = [Capstone]::cs_close($DisAsmHandle)",
          "",
          "[Added Lines]",
          "431:   echo \"`n[!] Disassembly Failed\"",
          "432:   echo \"[>] Quitting..`n\"",
          "433:   $CallResult = [Capstone]::cs_close([ref]$DisAsmHandle)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b4e870480be645f2e1cbb736ea1823545a76924",
      "candidate_info": {
        "commit_hash": "7b4e870480be645f2e1cbb736ea1823545a76924",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/7b4e870480be645f2e1cbb736ea1823545a76924",
        "files": [
          "arch/X86/X86Disassembler.c"
        ],
        "message": "x86: LDS is invalid in x64. see #904",
        "before_after_code_files": [
          "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c": [
          "File: arch/X86/X86Disassembler.c -> arch/X86/X86Disassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "836:   result = (!translateInstruction(instr, &insn)) ?  true : false;",
          "837:   if (result) {",
          "844:    instr->imm_size = insn.immSize;",
          "845:    if (handle->detail) {",
          "",
          "[Removed Lines]",
          "839:    if (handle->mode & CS_MODE_64 &&",
          "840:     (instr->Opcode == X86_LES16rm || instr->Opcode == X86_LES32rm))",
          "842:     return false;",
          "",
          "[Added Lines]",
          "839:    if (handle->mode & CS_MODE_64) {",
          "840:     if (instr->Opcode == X86_LES16rm || instr->Opcode == X86_LES32rm)",
          "842:      return false;",
          "843:     if (instr->Opcode == X86_LDS16rm || instr->Opcode == X86_LDS32rm)",
          "845:      return false;",
          "846:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea030cbe22d04a545a2c6ab531ea9e120c6ce1ae",
      "candidate_info": {
        "commit_hash": "ea030cbe22d04a545a2c6ab531ea9e120c6ce1ae",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/ea030cbe22d04a545a2c6ab531ea9e120c6ce1ae",
        "files": [
          "include/capstone/m68k.h"
        ],
        "message": "fix spelling error in comments",
        "before_after_code_files": [
          "include/capstone/m68k.h||include/capstone/m68k.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/m68k.h||include/capstone/m68k.h": [
          "File: include/capstone/m68k.h -> include/capstone/m68k.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:  M68K_AM_ABSOLUTE_DATA_SHORT, // Absolute Data Addressing  - Short",
          "106:  M68K_AM_ABSOLUTE_DATA_LONG,  // Absolute Data Addressing  - Long",
          "108: } m68k_adress_mode;",
          "",
          "[Removed Lines]",
          "107:  M68K_AM_IMMIDIATE,    // Immidate value",
          "",
          "[Added Lines]",
          "107:  M68K_AM_IMMIDIATE,    // Immediate value",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:  M68K_OP_IMM,         // = CS_OP_IMM (Immediate operand).",
          "115:  M68K_OP_MEM,         // = CS_OP_MEM (Memory operand).",
          "116:  M68K_OP_FP,          // = CS_OP_FP  (Floating-Point operand)",
          "118:  M68K_OP_REG_PAIR,    // Register pair in the same op (upper 4 bits for first reg, lower for second)",
          "119: } m68k_op_type;",
          "",
          "[Removed Lines]",
          "117:  M68K_OP_REG_BITS,    // Registes bits movem",
          "",
          "[Added Lines]",
          "117:  M68K_OP_REG_BITS,    // Register bits move",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "125:  m68k_reg index_reg;     // index register (or M68K_REG_INVALID if irrelevant)",
          "126:  m68k_reg in_base_reg;   // indirect base register (or M68K_REG_INVALID if irrelevant)",
          "127:  uint32_t in_disp;      // indirect displacement",
          "129:  uint16_t disp;         // displacement value",
          "130:  uint8_t scale;         // scale for index register",
          "131:  uint8_t bitfield;       // set to true if the two values bellow should be used",
          "",
          "[Removed Lines]",
          "128:  uint32_t out_disp;      // outher displacement",
          "",
          "[Added Lines]",
          "128:  uint32_t out_disp;      // other displacement",
          "",
          "---------------"
        ]
      }
    }
  ]
}