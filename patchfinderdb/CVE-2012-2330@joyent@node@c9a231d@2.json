{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d923269e13f903b02506d86f138369586862364e",
      "candidate_info": {
        "commit_hash": "d923269e13f903b02506d86f138369586862364e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d923269e13f903b02506d86f138369586862364e",
        "files": [
          "deps/openssl/openssl.gyp"
        ],
        "message": "tls: make tls a little bit faster\n\nCompile OpenSSL with inline assembly for big numbers",
        "before_after_code_files": [
          "deps/openssl/openssl.gyp||deps/openssl/openssl.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/openssl.gyp||deps/openssl/openssl.gyp": [
          "File: deps/openssl/openssl.gyp -> deps/openssl/openssl.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:         'openssl/crypto/bio/bss_null.c',",
          "180:         'openssl/crypto/bio/bss_sock.c',",
          "181:         'openssl/crypto/bn/bn_add.c',",
          "183:         'openssl/crypto/bn/bn_blind.c',",
          "184:         'openssl/crypto/bn/bn_const.c',",
          "185:         'openssl/crypto/bn/bn_ctx.c',",
          "",
          "[Removed Lines]",
          "182:         'openssl/crypto/bn/bn_asm.c',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "650:         }],",
          "651:         ['target_arch==\"ia32\"', {",
          "652:           'variables': {'openssl_config_path': 'config/piii'},",
          "653:         }, {",
          "654:           'variables': {'openssl_config_path': 'config/k8'},",
          "656:       ],",
          "657:       'include_dirs': [",
          "658:         '.',",
          "",
          "[Removed Lines]",
          "655:         }],",
          "",
          "[Added Lines]",
          "652:           'sources': [",
          "653:             'openssl/crypto/bn/bn_asm.c',",
          "654:           ]",
          "657:           'sources': [",
          "658:             'openssl/crypto/bn/asm/x86_64-gcc.c',",
          "659:           ]",
          "660:         }]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ee200942dd7af613892883def5ac53862afc9129",
      "candidate_info": {
        "commit_hash": "ee200942dd7af613892883def5ac53862afc9129",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ee200942dd7af613892883def5ac53862afc9129",
        "files": [
          "lib/tls.js"
        ],
        "message": "lint",
        "before_after_code_files": [
          "lib/tls.js||litls.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: var constants = require('constants');",
          "32: var DEFAULT_CIPHERS = 'ECDHE-RSA-AES128-SHA256:AES128-GCM-SHA256:' + // TLS 1.2",
          "",
          "[Removed Lines]",
          "33:                       'RC4:HIGH:!MD5:!aNULL:!EDH'                    // TLS 1.0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db5c26e3b57c5c0c5c3e84931bc73b701f0258d1",
      "candidate_info": {
        "commit_hash": "db5c26e3b57c5c0c5c3e84931bc73b701f0258d1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/db5c26e3b57c5c0c5c3e84931bc73b701f0258d1",
        "files": [
          "src/fs_event_wrap.cc"
        ],
        "message": "fs: fix assert in fs.watch()\n\nFix the following error:\n\n  FSEventWrap: Aborting due to unwrap failure at ../../src/fs_event_wrap.cc:169\n\nIt's possible and legal for a handle to be closed twice. HandleWrap::Close()\ndeals with that by ignoring the second close. Now FSEventWrap::Close() does\ntoo.\n\nFixes #3997.",
        "before_after_code_files": [
          "src/fs_event_wrap.cc||src/fs_event_wrap.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/fs_event_wrap.cc||src/fs_event_wrap.cc": [
          "File: src/fs_event_wrap.cc -> src/fs_event_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "166: Handle<Value> FSEventWrap::Close(const Arguments& args) {",
          "167:   HandleScope scope;",
          "174:   wrap->initialized_ = false;",
          "175:   return HandleWrap::Close(args);",
          "176: }",
          "",
          "[Removed Lines]",
          "169:   UNWRAP(FSEventWrap)",
          "171:   if (!wrap->initialized_)",
          "172:     return Undefined();",
          "",
          "[Added Lines]",
          "172:   assert(!args.Holder().IsEmpty());",
          "173:   assert(args.Holder()->InternalFieldCount() > 0);",
          "174:   void* ptr = args.Holder()->GetPointerFromInternalField(0);",
          "175:   FSEventWrap* wrap = static_cast<FSEventWrap*>(ptr);",
          "177:   if (wrap == NULL || wrap->initialized_ == false) return Undefined();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "517cea3636b7a101799214d71ddb98eaea8e0198",
      "candidate_info": {
        "commit_hash": "517cea3636b7a101799214d71ddb98eaea8e0198",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/517cea3636b7a101799214d71ddb98eaea8e0198",
        "files": [
          "test/pummel/test-net-connect-econnrefused.js"
        ],
        "message": "test-net-connect-econnrefused: don't take forever to complete",
        "before_after_code_files": [
          "test/pummel/test-net-connect-econnrefused.js||test/pummel/test-net-connect-econnrefused.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/pummel/test-net-connect-econnrefused.js||test/pummel/test-net-connect-econnrefused.js": [
          "File: test/pummel/test-net-connect-econnrefused.js -> test/pummel/test-net-connect-econnrefused.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: var assert = require('assert');",
          "26: var net = require('net');",
          "29: var rounds = 0;",
          "30: var reqs = 0;",
          "32: pummel();",
          "34: function pummel() {",
          "41: }",
          "43: function check() {",
          "",
          "[Removed Lines]",
          "28: var ROUNDS = 1024;",
          "35:   net.createConnection(common.PORT).on('error', function(err) {",
          "36:     assert.equal(err.code, 'ECONNREFUSED');",
          "37:     if (++rounds < ROUNDS) return pummel();",
          "38:     check();",
          "39:   });",
          "40:   reqs++;",
          "",
          "[Added Lines]",
          "28: var ROUNDS = 5;",
          "29: var ATTEMPTS_PER_ROUND = 200;",
          "36:   console.log('Round', rounds, '/', ROUNDS);",
          "38:   for (var pending = 0; pending < ATTEMPTS_PER_ROUND; pending++) {",
          "39:     net.createConnection(common.PORT).on('error', function(err) {",
          "40:       assert.equal(err.code, 'ECONNREFUSED');",
          "41:       if (--pending > 0) return;",
          "42:       if (++rounds < ROUNDS) return pummel();",
          "43:       check();",
          "44:     });",
          "45:     reqs++;",
          "46:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54: process.on('exit', function() {",
          "55:   assert.equal(rounds, ROUNDS);",
          "57:   assert(check_called);",
          "58: });",
          "",
          "[Removed Lines]",
          "56:   assert.equal(reqs, ROUNDS);",
          "",
          "[Added Lines]",
          "62:   assert.equal(reqs, ROUNDS * ATTEMPTS_PER_ROUND);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ee2291eb0d6baa9fb82ed0fef623a3895bc1fc0d",
      "candidate_info": {
        "commit_hash": "ee2291eb0d6baa9fb82ed0fef623a3895bc1fc0d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ee2291eb0d6baa9fb82ed0fef623a3895bc1fc0d",
        "files": [
          "test/simple/test-domain-multi.js"
        ],
        "message": "test: add a child domain explicitly",
        "before_after_code_files": [
          "test/simple/test-domain-multi.js||test/simple/test-domain-multi.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-domain-multi.js||test/simple/test-domain-multi.js": [
          "File: test/simple/test-domain-multi.js -> test/simple/test-domain-multi.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: var http = require('http');",
          "45: var server = http.createServer(function (req, res) {",
          "49:   var b = domain.create();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:   a.add(b);",
          "",
          "---------------"
        ]
      }
    }
  ]
}