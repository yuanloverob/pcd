{
  "cve_id": "CVE-2016-2545",
  "cve_desc": "The snd_timer_interrupt function in sound/core/timer.c in the Linux kernel before 4.4.1 does not properly maintain a certain linked list, which allows local users to cause a denial of service (race condition and system crash) via a crafted ioctl call.",
  "repo": "torvalds/linux",
  "patch_hash": "ee8413b01045c74340aa13ad5bdf905de32be736",
  "patch_info": {
    "commit_hash": "ee8413b01045c74340aa13ad5bdf905de32be736",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/ee8413b01045c74340aa13ad5bdf905de32be736",
    "files": [
      "sound/core/timer.c"
    ],
    "message": "ALSA: timer: Fix double unlink of active_list\n\nALSA timer instance object has a couple of linked lists and they are\nunlinked unconditionally at snd_timer_stop().  Meanwhile\nsnd_timer_interrupt() unlinks it, but it calls list_del() which leaves\nthe element list itself unchanged.  This ends up with unlinking twice,\nand it was caught by syzkaller fuzzer.\n\nThe fix is to use list_del_init() variant properly there, too.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nTested-by: Dmitry Vyukov <dvyukov@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
    "before_after_code_files": [
      "sound/core/timer.c||sound/core/timer.c"
    ]
  },
  "patch_diff": {
    "sound/core/timer.c||sound/core/timer.c": [
      "File: sound/core/timer.c -> sound/core/timer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "694:   } else {",
      "695:    ti->flags &= ~SNDRV_TIMER_IFLG_RUNNING;",
      "696:    if (--timer->running)",
      "698:   }",
      "699:   if ((timer->hw.flags & SNDRV_TIMER_HW_TASKLET) ||",
      "700:       (ti->flags & SNDRV_TIMER_IFLG_FAST))",
      "",
      "[Removed Lines]",
      "697:     list_del(&ti->active_list);",
      "",
      "[Added Lines]",
      "697:     list_del_init(&ti->active_list);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "094fd3be87b0f102589e2d5c3fa5d06b7e20496d",
      "candidate_info": {
        "commit_hash": "094fd3be87b0f102589e2d5c3fa5d06b7e20496d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/094fd3be87b0f102589e2d5c3fa5d06b7e20496d",
        "files": [
          "sound/core/timer.c"
        ],
        "message": "ALSA: timer: Fix leftover link at closing\n\nIn ALSA timer core, the active timer instance is managed in\nactive_list linked list.  Each element is added / removed dynamically\nat timer start, stop and in timer interrupt.  The problem is that\nsnd_timer_interrupt() has a thinko and leaves the element in\nactive_list when it's the last opened element.  This eventually leads\nto list corruption or use-after-free error.\n\nThis hasn't been revealed because we used to delete the list forcibly\nin snd_timer_stop() in the past.  However, the recent fix avoids the\ndouble-stop behavior (in commit [f784beb75ce8: ALSA: timer: Fix link\ncorruption due to double start or stop]), and this leak hits reality.\n\nThis patch fixes the link management in snd_timer_interrupt().  Now it\nsimply unlinks no matter which stream is.\n\nBugLink: http://lkml.kernel.org/r/CACT4Y+Yy2aukHP-EDp8-ziNqNNmb-NTf=jDWXMP7jB8HDa2vng@mail.gmail.com\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
        "before_after_code_files": [
          "sound/core/timer.c||sound/core/timer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "sound/core/timer.c||sound/core/timer.c"
          ],
          "candidate": [
            "sound/core/timer.c||sound/core/timer.c"
          ]
        }
      },
      "candidate_diff": {
        "sound/core/timer.c||sound/core/timer.c": [
          "File: sound/core/timer.c -> sound/core/timer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "744:    ti->cticks = ti->ticks;",
          "745:   } else {",
          "746:    ti->flags &= ~SNDRV_TIMER_IFLG_RUNNING;",
          "749:   }",
          "750:   if ((timer->hw.flags & SNDRV_TIMER_HW_TASKLET) ||",
          "751:       (ti->flags & SNDRV_TIMER_IFLG_FAST))",
          "",
          "[Removed Lines]",
          "747:    if (--timer->running)",
          "748:     list_del_init(&ti->active_list);",
          "",
          "[Added Lines]",
          "747:    --timer->running;",
          "748:    list_del_init(&ti->active_list);",
          "",
          "---------------"
        ]
      }
    }
  ]
}