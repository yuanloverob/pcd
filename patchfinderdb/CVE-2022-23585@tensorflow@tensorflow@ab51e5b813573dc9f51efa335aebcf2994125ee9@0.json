{
  "cve_id": "CVE-2022-23585",
  "cve_desc": "Tensorflow is an Open Source Machine Learning Framework. When decoding PNG images TensorFlow can produce a memory leak if the image is invalid. After calling `png::CommonInitDecode(..., &decode)`, the `decode` value contains allocated buffers which can only be freed by calling `png::CommonFreeDecode(&decode)`. However, several error case in the function implementation invoke the `OP_REQUIRES` macro which immediately terminates the execution of the function, without allowing for the memory free to occur. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "ab51e5b813573dc9f51efa335aebcf2994125ee9",
  "patch_info": {
    "commit_hash": "ab51e5b813573dc9f51efa335aebcf2994125ee9",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/ab51e5b813573dc9f51efa335aebcf2994125ee9",
    "files": [
      "tensorflow/core/kernels/image/decode_image_op.cc"
    ],
    "message": "Prevent memory leak in decoding PNG images.\n\nPiperOrigin-RevId: 409300653\nChange-Id: I6182124c545989cef80cefd439b659095920763b",
    "before_after_code_files": [
      "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc": [
      "File: tensorflow/core/kernels/image/decode_image_op.cc -> tensorflow/core/kernels/image/decode_image_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: #include <cstdint>",
      "19: #include <memory>",
      "21: #define EIGEN_USE_THREADS",
      "23: #include \"absl/strings/escaping.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21: #include \"tensorflow/core/lib/gtl/cleanup.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "326:         context, png::CommonInitDecode(input, channels_, channel_bits, &decode),",
      "327:         errors::InvalidArgument(\"Invalid PNG. Failed to initialize decoder.\"));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "336:     auto cleanup = gtl::MakeCleanup([&decode]() {",
      "337:       std::cerr << \"Cleanup called...\\n\";",
      "338:       png::CommonFreeDecode(&decode);",
      "339:     });",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0f62fd48769a9fe1ae171eed70988fe1120ded3d",
      "candidate_info": {
        "commit_hash": "0f62fd48769a9fe1ae171eed70988fe1120ded3d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/0f62fd48769a9fe1ae171eed70988fe1120ded3d",
        "files": [
          "tensorflow/core/kernels/image/decode_image_op.cc"
        ],
        "message": "Prevent memory leak in decoding PNG images.\n\nPiperOrigin-RevId: 409300653\nChange-Id: I6182124c545989cef80cefd439b659095920763b",
        "before_after_code_files": [
          "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc": [
          "File: tensorflow/core/kernels/image/decode_image_op.cc -> tensorflow/core/kernels/image/decode_image_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include <cstdint>",
          "19: #include <memory>",
          "21: #define EIGEN_USE_THREADS",
          "23: #include \"absl/strings/escaping.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: #include \"tensorflow/core/lib/gtl/cleanup.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "326:         context, png::CommonInitDecode(input, channels_, channel_bits, &decode),",
          "327:         errors::InvalidArgument(\"Invalid PNG. Failed to initialize decoder.\"));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:     auto cleanup = gtl::MakeCleanup([&decode]() {",
          "337:       std::cerr << \"Cleanup called...\\n\";",
          "338:       png::CommonFreeDecode(&decode);",
          "339:     });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8083044e4fff2c4d51d153a81958fb86d0d91715",
      "candidate_info": {
        "commit_hash": "8083044e4fff2c4d51d153a81958fb86d0d91715",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/8083044e4fff2c4d51d153a81958fb86d0d91715",
        "files": [
          "tensorflow/core/kernels/image/decode_image_op.cc"
        ],
        "message": "Prevent memory leak in decoding PNG images.\n\nPiperOrigin-RevId: 409300653\nChange-Id: I6182124c545989cef80cefd439b659095920763b",
        "before_after_code_files": [
          "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc": [
          "File: tensorflow/core/kernels/image/decode_image_op.cc -> tensorflow/core/kernels/image/decode_image_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include <cstdint>",
          "19: #include <memory>",
          "21: #define EIGEN_USE_THREADS",
          "23: #include \"absl/strings/escaping.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: #include \"tensorflow/core/lib/gtl/cleanup.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "326:         context, png::CommonInitDecode(input, channels_, channel_bits, &decode),",
          "327:         errors::InvalidArgument(\"Invalid PNG. Failed to initialize decoder.\"));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:     auto cleanup = gtl::MakeCleanup([&decode]() {",
          "337:       std::cerr << \"Cleanup called...\\n\";",
          "338:       png::CommonFreeDecode(&decode);",
          "339:     });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "09b6762c3180e51355979a8300a6531b38b12ebe",
      "candidate_info": {
        "commit_hash": "09b6762c3180e51355979a8300a6531b38b12ebe",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/09b6762c3180e51355979a8300a6531b38b12ebe",
        "files": [
          "tensorflow/core/kernels/image/decode_image_op.cc"
        ],
        "message": "Prevent memory leak in decoding PNG images.\n\nPiperOrigin-RevId: 409300653\nChange-Id: I6182124c545989cef80cefd439b659095920763b",
        "before_after_code_files": [
          "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/image/decode_image_op.cc||tensorflow/core/kernels/image/decode_image_op.cc": [
          "File: tensorflow/core/kernels/image/decode_image_op.cc -> tensorflow/core/kernels/image/decode_image_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include <cstdint>",
          "19: #include <memory>",
          "21: #define EIGEN_USE_THREADS",
          "23: #include \"absl/strings/escaping.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: #include \"tensorflow/core/lib/gtl/cleanup.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "326:         context, png::CommonInitDecode(input, channels_, channel_bits, &decode),",
          "327:         errors::InvalidArgument(\"Invalid PNG. Failed to initialize decoder.\"));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:     auto cleanup = gtl::MakeCleanup([&decode]() {",
          "337:       std::cerr << \"Cleanup called...\\n\";",
          "338:       png::CommonFreeDecode(&decode);",
          "339:     });",
          "",
          "---------------"
        ]
      }
    }
  ]
}