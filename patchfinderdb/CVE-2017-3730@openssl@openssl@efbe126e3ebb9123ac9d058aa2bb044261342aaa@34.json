{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "38a041a092fe50c5a9c76ea4f21be89ed086a8de",
      "candidate_info": {
        "commit_hash": "38a041a092fe50c5a9c76ea4f21be89ed086a8de",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/38a041a092fe50c5a9c76ea4f21be89ed086a8de",
        "files": [
          "test/evp_test.c"
        ],
        "message": "Adjust in and in_len instead of donelen\n\nDon't use the temp variable donelen in the non-aad fragmented code path.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2275)\n(cherry picked from commit ef055ec536a3c6e698dd9f45b41d57a32366b4fa)",
        "before_after_code_files": [
          "test/evp_test.c||test/evp_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/evp_test.c||test/evp_test.c": [
          "File: test/evp_test.c -> test/evp_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1012:     EVP_CIPHER_CTX_set_padding(ctx, 0);",
          "1013:     err = \"CIPHERUPDATE_ERROR\";",
          "1014:     tmplen = 0;",
          "1016:     if (!frag) {",
          "1018:         if (!EVP_CipherUpdate(ctx, tmp + out_misalign, &tmplen, in, in_len))",
          "",
          "[Removed Lines]",
          "1015:     donelen = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1023:             if (!EVP_CipherUpdate(ctx, tmp + out_misalign, &chunklen, in, 1))",
          "1024:                 goto err;",
          "1025:             tmplen += chunklen;",
          "1027:         }",
          "1029:             if (!EVP_CipherUpdate(ctx, tmp + out_misalign + tmplen, &chunklen,",
          "1031:                 goto err;",
          "1032:             tmplen += chunklen;",
          "1034:         }",
          "1036:             if (!EVP_CipherUpdate(ctx, tmp + out_misalign + tmplen, &chunklen,",
          "1038:                 goto err;",
          "1039:             tmplen += chunklen;",
          "1040:         }",
          "",
          "[Removed Lines]",
          "1026:             donelen = 1;",
          "1028:         if (in_len > 2) {",
          "1030:                                   in + donelen, in_len - 2))",
          "1033:             donelen += in_len - 2;",
          "1035:         if (in_len > 1 ) {",
          "1037:                                   in + donelen, 1))",
          "",
          "[Added Lines]",
          "1025:             in++;",
          "1026:             in_len--;",
          "1028:         if (in_len > 1) {",
          "1030:                                   in, in_len - 1))",
          "1033:             in += in_len - 1;",
          "1034:             in_len = 1;",
          "1036:         if (in_len > 0 ) {",
          "1038:                                   in, 1))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6fa4d63dbf26c7ec57407edd7987d8036e0a5ee5",
      "candidate_info": {
        "commit_hash": "6fa4d63dbf26c7ec57407edd7987d8036e0a5ee5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6fa4d63dbf26c7ec57407edd7987d8036e0a5ee5",
        "files": [
          "crypto/x509/x_crl.c",
          "doc/crypto/X509_dup.pod"
        ],
        "message": "Allow null in  X509_CRL_METHOD_free\n\nand fix documentation.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1634)\n(cherry picked from commit 7cb1ecec59d7c8d6628fb9bfd435306f7e06fd33)",
        "before_after_code_files": [
          "crypto/x509/x_crl.c||crypto/x509/x_crl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/x_crl.c||crypto/x509/x_crl.c": [
          "File: crypto/x509/x_crl.c -> crypto/x509/x_crl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "442: void X509_CRL_METHOD_free(X509_CRL_METHOD *m)",
          "443: {",
          "445:         return;",
          "446:     OPENSSL_free(m);",
          "447: }",
          "",
          "[Removed Lines]",
          "444:     if (!(m->flags & X509_CRL_METHOD_DYNAMIC))",
          "",
          "[Added Lines]",
          "444:     if (m == NULL || !(m->flags & X509_CRL_METHOD_DYNAMIC))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f2de02624ec55d29f74c4c38994b56ec3250a10",
      "candidate_info": {
        "commit_hash": "6f2de02624ec55d29f74c4c38994b56ec3250a10",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6f2de02624ec55d29f74c4c38994b56ec3250a10",
        "files": [
          "ssl/statem/statem_srvr.c"
        ],
        "message": "Correct pointer to be freed\n\nThe pointer that was freed in the SSLv2 section of ssl_bytes_to_cipher_list\nmay have stepped up from its allocated position.  Use a pointer that is\nguaranteed to point at the start of the allocated block instead.\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2312)\n(cherry picked from commit 63414e64e66e376654e993ac966e3b2f9d849d3b)",
        "before_after_code_files": [
          "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c": [
          "File: ssl/statem/statem_srvr.c -> ssl/statem/statem_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3292:                     || (leadbyte != 0",
          "3293:                         && !PACKET_forward(&sslv2ciphers, TLS_CIPHER_LEN))) {",
          "3296:                 s->s3->tmp.ciphers_raw = NULL;",
          "3297:                 s->s3->tmp.ciphers_rawlen = 0;",
          "3298:                 goto err;",
          "",
          "[Removed Lines]",
          "3295:                 OPENSSL_free(raw);",
          "",
          "[Added Lines]",
          "3295:                 OPENSSL_free(s->s3->tmp.ciphers_raw);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1fdeda4cc994845998c9f017d300e6aecc7b5128",
      "candidate_info": {
        "commit_hash": "1fdeda4cc994845998c9f017d300e6aecc7b5128",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1fdeda4cc994845998c9f017d300e6aecc7b5128",
        "files": [
          "crypto/stack/stack.c"
        ],
        "message": "Don't leak on an OPENSSL_realloc() failure\n\nIf OPENSSL_sk_insert() calls OPENSSL_realloc() and it fails, it was leaking\nthe originally allocated memory.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 41bff723c6784cc846054a4fd4add6dbec8c2c64)",
        "before_after_code_files": [
          "crypto/stack/stack.c||crypto/stack/stack.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/stack/stack.c||crypto/stack/stack.c": [
          "File: crypto/stack/stack.c -> crypto/stack/stack.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:     if (st->num_alloc <= (size_t)(st->num + 1)) {",
          "128:         size_t doub_num_alloc = st->num_alloc * 2;",
          "131:         if (doub_num_alloc < st->num_alloc)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:         const char **tmpdata;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "135:         if (doub_num_alloc > SIZE_MAX / sizeof(char *))",
          "136:             return 0;",
          "147:             return 0;",
          "149:         st->num_alloc = doub_num_alloc;",
          "150:     }",
          "151:     if ((loc >= st->num) || (loc < 0)) {",
          "",
          "[Removed Lines]",
          "138:         st->data = OPENSSL_realloc((char *)st->data,",
          "139:                                    sizeof(char *) * doub_num_alloc);",
          "140:         if (st->data == NULL) {",
          "145:             st->num_alloc = 0;",
          "146:             st->num = 0;",
          "148:         }",
          "",
          "[Added Lines]",
          "139:         tmpdata = OPENSSL_realloc((char *)st->data,",
          "140:                                   sizeof(char *) * doub_num_alloc);",
          "141:         if (tmpdata == NULL)",
          "144:         st->data = tmpdata;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0adfd49e47b08df699c941efef01b88d12b4a060",
      "candidate_info": {
        "commit_hash": "0adfd49e47b08df699c941efef01b88d12b4a060",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0adfd49e47b08df699c941efef01b88d12b4a060",
        "files": [
          "crypto/bio/bss_file.c"
        ],
        "message": "If errno is ENXIO in BSS_new_file(), set BIO_R_NO_SUCH_FILE\n\nVMS sets that errno when the device part of a file spec is malformed\nor a logical name that doesn't exist.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit e82e2186e93e9a678dd8c0c5ba084d21d27d4d62)",
        "before_after_code_files": [
          "crypto/bio/bss_file.c||crypto/bio/bss_file.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/bss_file.c||crypto/bio/bss_file.c": [
          "File: crypto/bio/bss_file.c -> crypto/bio/bss_file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     if (file == NULL) {",
          "74:         SYSerr(SYS_F_FOPEN, get_last_sys_error());",
          "75:         ERR_add_error_data(5, \"fopen('\", filename, \"','\", mode, \"')\");",
          "77:             BIOerr(BIO_F_BIO_NEW_FILE, BIO_R_NO_SUCH_FILE);",
          "78:         else",
          "79:             BIOerr(BIO_F_BIO_NEW_FILE, ERR_R_SYS_LIB);",
          "",
          "[Removed Lines]",
          "76:         if (errno == ENOENT)",
          "",
          "[Added Lines]",
          "76:         if (errno == ENOENT",
          "77: # ifdef ENXIO",
          "78:             || errno == ENXIO",
          "79: # endif",
          "80:             )",
          "",
          "---------------"
        ]
      }
    }
  ]
}