{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fa43f04f6a360536c71e424d65f227a5af3c0db9",
      "candidate_info": {
        "commit_hash": "fa43f04f6a360536c71e424d65f227a5af3c0db9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/fa43f04f6a360536c71e424d65f227a5af3c0db9",
        "files": [
          "src/ngx-queue.h",
          "src/node_isolate.h"
        ],
        "message": "Include ngx-queue.h, fix Windows build.",
        "before_after_code_files": [
          "src/ngx-queue.h||src/ngx-queue.h",
          "src/node_isolate.h||src/node_isolate.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/ngx-queue.h||src/ngx-queue.h": [
          "File: src/ngx-queue.h -> src/ngx-queue.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: #ifndef _NGX_QUEUE_H_INCLUDED_",
          "8: #define _NGX_QUEUE_H_INCLUDED_",
          "11: typedef struct ngx_queue_s  ngx_queue_t;",
          "13: struct ngx_queue_s {",
          "14:     ngx_queue_t  *prev;",
          "15:     ngx_queue_t  *next;",
          "16: };",
          "19: #define ngx_queue_init(q)                                                     \\",
          "20:     (q)->prev = q;                                                            \\",
          "21:     (q)->next = q",
          "24: #define ngx_queue_empty(h)                                                    \\",
          "25:     (h == (h)->prev)",
          "28: #define ngx_queue_insert_head(h, x)                                           \\",
          "29:     (x)->next = (h)->next;                                                    \\",
          "30:     (x)->next->prev = x;                                                      \\",
          "31:     (x)->prev = h;                                                            \\",
          "32:     (h)->next = x",
          "35: #define ngx_queue_insert_after   ngx_queue_insert_head",
          "38: #define ngx_queue_insert_tail(h, x)                                           \\",
          "39:     (x)->prev = (h)->prev;                                                    \\",
          "40:     (x)->prev->next = x;                                                      \\",
          "41:     (x)->next = h;                                                            \\",
          "42:     (h)->prev = x",
          "45: #define ngx_queue_head(h)                                                     \\",
          "46:     (h)->next",
          "49: #define ngx_queue_last(h)                                                     \\",
          "50:     (h)->prev",
          "53: #define ngx_queue_sentinel(h)                                                 \\",
          "54:     (h)",
          "57: #define ngx_queue_next(q)                                                     \\",
          "58:     (q)->next",
          "61: #define ngx_queue_prev(q)                                                     \\",
          "62:     (q)->prev",
          "65: #if (NGX_DEBUG)",
          "67: #define ngx_queue_remove(x)                                                   \\",
          "68:     (x)->next->prev = (x)->prev;                                              \\",
          "69:     (x)->prev->next = (x)->next;                                              \\",
          "70:     (x)->prev = NULL;                                                         \\",
          "71:     (x)->next = NULL",
          "73: #else",
          "75: #define ngx_queue_remove(x)                                                   \\",
          "76:     (x)->next->prev = (x)->prev;                                              \\",
          "77:     (x)->prev->next = (x)->next",
          "79: #endif",
          "82: #define ngx_queue_split(h, q, n)                                              \\",
          "83:     (n)->prev = (h)->prev;                                                    \\",
          "84:     (n)->prev->next = n;                                                      \\",
          "85:     (n)->next = q;                                                            \\",
          "86:     (h)->prev = (q)->prev;                                                    \\",
          "87:     (h)->prev->next = h;                                                      \\",
          "88:     (q)->prev = n;",
          "91: #define ngx_queue_add(h, n)                                                   \\",
          "92:     (h)->prev->next = (n)->next;                                              \\",
          "93:     (n)->next->prev = (h)->prev;                                              \\",
          "94:     (h)->prev = (n)->prev;                                                    \\",
          "95:     (h)->prev->next = h;",
          "98: #define ngx_queue_data(q, type, link)                                         \\",
          "99:     (type *) ((unsigned char *) q - offsetof(type, link))",
          "102: #define ngx_queue_foreach(q, h)                                               \\",
          "103:     for ((q) = ngx_queue_head(h); (q) != (h); (q) = ngx_queue_next(q))",
          "",
          "---------------"
        ],
        "src/node_isolate.h||src/node_isolate.h": [
          "File: src/node_isolate.h -> src/node_isolate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include \"v8.h\"",
          "26: #include \"uv.h\"",
          "27: #include \"node_vars.h\"",
          "29: #ifdef NDEBUG",
          "30: # define NODE_ISOLATE_CHECK(ptr) ((void) (ptr))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #include \"ngx-queue.h\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0113f5a72db8352c604a3fba4725f3e2d4a84345",
      "candidate_info": {
        "commit_hash": "0113f5a72db8352c604a3fba4725f3e2d4a84345",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0113f5a72db8352c604a3fba4725f3e2d4a84345",
        "files": [
          "test/simple/test-process-exec-argv.js"
        ],
        "message": "test: test `process.execArgv`",
        "before_after_code_files": [
          "test/simple/test-process-exec-argv.js||test/simple/test-process-exec-argv.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-process-exec-argv.js||test/simple/test-process-exec-argv.js": [
          "File: test/simple/test-process-exec-argv.js -> test/simple/test-process-exec-argv.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var assert = require('assert');",
          "23: var spawn = require('child_process').spawn;",
          "25: if (process.argv[2] === 'child') {",
          "26:   process.stdout.write(JSON.stringify(process.execArgv));",
          "27: } else {",
          "28:   var execArgv = ['--harmony_proxies', '--max-stack-size=0'];",
          "29:   var args = [__filename, 'child', 'arg0'];",
          "30:   var child = spawn(process.execPath, execArgv.concat(args));",
          "31:   var out = '';",
          "33:   child.stdout.on('data', function (chunk) {",
          "34:     out += chunk;",
          "35:   });",
          "37:   child.on('exit', function () {",
          "38:     assert.deepEqual(JSON.parse(out), execArgv);",
          "39:   });",
          "40: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e3ceee2dce63425f5c105d23a202dd4298507449",
      "candidate_info": {
        "commit_hash": "e3ceee2dce63425f5c105d23a202dd4298507449",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e3ceee2dce63425f5c105d23a202dd4298507449",
        "files": [
          "lib/http.js"
        ],
        "message": "http: .once() usage in setTimeout",
        "before_after_code_files": [
          "lib/http.js||lihttp.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1335:   }",
          "1337:   if (this.socket) {",
          "1339:       this.setTimeout(msecs, emitTimeout);",
          "1340:     });",
          "1341:     return;",
          "1342:   }",
          "1345:     this.setTimeout(msecs, emitTimeout);",
          "1346:   });",
          "1347: };",
          "",
          "[Removed Lines]",
          "1338:     this.socket.on('connect', function() {",
          "1344:   this.on('socket', function(sock) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7418905aef0c0fcbd13227526adc34f1e699fe45",
      "candidate_info": {
        "commit_hash": "7418905aef0c0fcbd13227526adc34f1e699fe45",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7418905aef0c0fcbd13227526adc34f1e699fe45",
        "files": [
          "lib/_debugger.js"
        ],
        "message": "debugger: breakOnException\n\nDo not break automatically on exception, fixes #2926",
        "before_after_code_files": [
          "lib/_debugger.js||li_debugger.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/_debugger.js||li_debugger.js": [
          "File: lib/_debugger.js -> li_debugger.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "678:     'kill',",
          "679:     'list',",
          "680:     'scripts',",
          "681:     'breakpoints',",
          "682:     'version'",
          "683:   ]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1308:   }",
          "1309: };",
          "1312: Interface.prototype.setBreakpoint = function(script, line,",
          "1313:                                              condition, silent) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1626:       self.setBreakpoint(bp.scriptId, bp.line, bp.condition, true);",
          "1627:     });",
          "1635:     client.on('close', function() {",
          "1636:       self.pause();",
          "1637:       self.print('program terminated');",
          "",
          "[Removed Lines]",
          "1630:     client.reqSetExceptionBreak('all', function(err, res) {",
          "1631:       cb && cb();",
          "1632:       self.resume();",
          "1633:     });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1639:       self.client = null;",
          "1640:       self.killChild();",
          "1641:     });",
          "1642:   });",
          "1644:   client.on('unhandledResponse', function(res) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1ce14eca44c7c3bf9812b462e1931de58d09edc3",
      "candidate_info": {
        "commit_hash": "1ce14eca44c7c3bf9812b462e1931de58d09edc3",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1ce14eca44c7c3bf9812b462e1931de58d09edc3",
        "files": [
          "lib/dgram.js",
          "test/simple/test-dgram-close.js"
        ],
        "message": "dgram: handle close of dgram socket before DNS lookup completes",
        "before_after_code_files": [
          "lib/dgram.js||lidgram.js",
          "test/simple/test-dgram-close.js||test/simple/test-dgram-close.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/dgram.js||lidgram.js": [
          "File: lib/dgram.js -> lidgram.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:       if (callback) callback(err);",
          "176:       self.emit('error', err);",
          "177:     }",
          "179:       var req = self._handle.send(buffer, offset, length, port, ip);",
          "180:       if (req) {",
          "181:         req.oncomplete = afterSend;",
          "",
          "[Removed Lines]",
          "178:     else {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-dgram-close.js||test/simple/test-dgram-close.js": [
          "File: test/simple/test-dgram-close.js -> test/simple/test-dgram-close.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: var assert = require('assert'),",
          "26:     common = require('../common'),",
          "27:     dgram = require('dgram');",
          "29: var buf = new Buffer(1024);",
          "30: buf.fill(42);",
          "32: var socket = dgram.createSocket('udp4');",
          "34: socket.send(buf, 0, buf.length, common.port, 'localhost');",
          "35: socket.close();",
          "",
          "---------------"
        ]
      }
    }
  ]
}