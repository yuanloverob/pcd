{
  "cve_id": "CVE-2014-8712",
  "cve_desc": "The build_expert_data function in epan/dissectors/packet-ncp2222.inc in the NCP dissector in Wireshark 1.10.x before 1.10.11 and 1.12.x before 1.12.2 does not properly initialize a data structure, which allows remote attackers to cause a denial of service (application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "41f6923b3049dfb57bef544a4c580f256f807e85",
  "patch_info": {
    "commit_hash": "41f6923b3049dfb57bef544a4c580f256f807e85",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/41f6923b3049dfb57bef544a4c580f256f807e85",
    "files": [
      "epan/dissectors/packet-ncp2222.inc"
    ],
    "message": "ncp2222: initialize buffer in build_expert_data\n\nWe do a bunch of conditional logic to fill in the buffer, and then were checking\nstrlen(buffer) to see if we'd actually filled it in or not, but if we hadn't\nthen the buffer was garbage and strlen(buffer) was throwing valgrind warnings.\nEnsure this works as intended by setting the first byte of the buffer\nunconditionally at the beginning, so strlen(buffer) returns 0 as expected in\nthat case.\n\nBug: 10628\nChange-Id: I6f6c29fbbcb601b6ebccb3a4b312f0fa72c169ae\nReviewed-on: https://code.wireshark.org/review/4924\nReviewed-by: Evan Huus <eapache@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-ncp2222.inc||epan/dissectors/packet-ncp2222.inc"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-ncp2222.inc||epan/dissectors/packet-ncp2222.inc": [
      "File: epan/dissectors/packet-ncp2222.inc -> epan/dissectors/packet-ncp2222.inc",
      "--- Hunk 1 ---",
      "[Context before]",
      "2730:     char            temp_buffer[256]=\"\\0\";",
      "2731:     gboolean        in_struct=FALSE;",
      "2733:     tree_loc = ncp_tree->first_child;",
      "2734:     for (tree_pointer=tree_loc; tree_pointer!=NULL; tree_pointer=tree_pointer->next)",
      "2735:     {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2733:     buffer[0] = '\\0';",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8f61ce9b8a4a038849af88328dfc3ed74c2591a6",
      "candidate_info": {
        "commit_hash": "8f61ce9b8a4a038849af88328dfc3ed74c2591a6",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/8f61ce9b8a4a038849af88328dfc3ed74c2591a6",
        "files": [
          "epan/dissectors/packet-ncp2222.inc"
        ],
        "message": "ncp2222: initialize buffer in build_expert_data\n\nWe do a bunch of conditional logic to fill in the buffer, and then were checking\nstrlen(buffer) to see if we'd actually filled it in or not, but if we hadn't\nthen the buffer was garbage and strlen(buffer) was throwing valgrind warnings.\nEnsure this works as intended by setting the first byte of the buffer\nunconditionally at the beginning, so strlen(buffer) returns 0 as expected in\nthat case.\n\nBug: 10628\nChange-Id: I6f6c29fbbcb601b6ebccb3a4b312f0fa72c169ae\nReviewed-on: https://code.wireshark.org/review/4926\nReviewed-by: Evan Huus <eapache@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-ncp2222.inc||epan/dissectors/packet-ncp2222.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ncp2222.inc||epan/dissectors/packet-ncp2222.inc"
          ],
          "candidate": [
            "epan/dissectors/packet-ncp2222.inc||epan/dissectors/packet-ncp2222.inc"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ncp2222.inc||epan/dissectors/packet-ncp2222.inc": [
          "File: epan/dissectors/packet-ncp2222.inc -> epan/dissectors/packet-ncp2222.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2732:     char            temp_buffer[256]=\"\\0\";",
          "2733:     gboolean        in_struct=FALSE;",
          "2735:     tree_loc = ncp_tree->first_child;",
          "2736:     for (tree_pointer=tree_loc; tree_pointer!=NULL; tree_pointer=tree_pointer->next)",
          "2737:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2735:     buffer[0] = '\\0';",
          "",
          "---------------"
        ]
      }
    }
  ]
}