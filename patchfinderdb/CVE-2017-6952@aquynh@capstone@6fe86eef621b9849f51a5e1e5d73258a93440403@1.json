{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c2cdb006fd8edc3b41fa0fabf39f9b99f8f64526",
      "candidate_info": {
        "commit_hash": "c2cdb006fd8edc3b41fa0fabf39f9b99f8f64526",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/c2cdb006fd8edc3b41fa0fabf39f9b99f8f64526",
        "files": [
          "arch/ARM/ARMInstPrinter.c",
          "bindings/python/test_arm.py",
          "tests/test_arm.c"
        ],
        "message": "arm: treat ARM address as unsigned\n\nIt should be unsigned because:\n* It does arithmetic operations\n* Format strings have \"%u\" instead of \"%d\"",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c",
          "bindings/python/test_arm.py||bindings/python/test_arm.py",
          "tests/test_arm.c||tests/test_arm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "723:   if (ARM_rel_branch(MI->csh, opc)) {",
          "725:    if (MI->csh->mode & CS_MODE_THUMB) {",
          "727:     if (ARM_blx_to_arm_mode(MI->csh, opc)) {",
          "729: #define _ALIGN_DOWN(v, align_width) ((v/align_width)*align_width)",
          "731: #undef _ALIGN_DOWN",
          "732:     }",
          "733:    } else {",
          "735:    }",
          "745:   } else {",
          "746:    switch(MI->flat_insn->id) {",
          "747:     default:",
          "",
          "[Removed Lines]",
          "726:     imm += (int32_t)MI->address + 4;",
          "730:      imm = _ALIGN_DOWN(imm, 4);",
          "734:     imm += (int32_t)MI->address + 8;",
          "737:    if (imm >= 0) {",
          "738:     if (imm > HEX_THRESHOLD)",
          "739:      SStream_concat(O, \"#0x%x\", imm);",
          "740:     else",
          "741:      SStream_concat(O, \"#%u\", imm);",
          "742:    } else {",
          "743:     SStream_concat(O, \"#0x%x\", imm);",
          "744:    }",
          "",
          "[Added Lines]",
          "724:    uint32_t address;",
          "728:     address = (uint32_t)MI->address + 4;",
          "732:      address = _ALIGN_DOWN(address, 4);",
          "736:     address = (uint32_t)MI->address + 8;",
          "739:    address += imm;",
          "741:    if (address > HEX_THRESHOLD)",
          "742:     SStream_concat(O, \"#0x%x\", address);",
          "743:    else",
          "744:     SStream_concat(O, \"#%u\", address);",
          "",
          "---------------"
        ],
        "bindings/python/test_arm.py||bindings/python/test_arm.py": [
          "File: bindings/python/test_arm.py -> bindings/python/test_arm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: ARM_CODE = b\"\\xED\\xFF\\xFF\\xEB\\x04\\xe0\\x2d\\xe5\\x00\\x00\\x00\\x00\\xe0\\x83\\x22\\xe5\\xf1\\x02\\x03\\x0e\\x00\\x00\\xa0\\xe3\\x02\\x30\\xc1\\xe7\\x00\\x00\\x53\\xe3\\x00\\x02\\x01\\xf1\\x05\\x40\\xd0\\xe8\\xf4\\x80\\x00\\x00\"",
          "12: ARM_CODE2 = b\"\\xd1\\xe8\\x00\\xf0\\xf0\\x24\\x04\\x07\\x1f\\x3c\\xf2\\xc0\\x00\\x00\\x4f\\xf0\\x00\\x01\\x46\\x6c\"",
          "14: THUMB_CODE2 = b\"\\x4f\\xf0\\x00\\x01\\xbd\\xe8\\x00\\x88\\xd1\\xe8\\x00\\xf0\\x18\\xbf\\xad\\xbf\\xf3\\xff\\x0b\\x0c\\x86\\xf3\\x00\\x89\\x80\\xf3\\x00\\x8c\\x4f\\xfa\\x99\\xf6\\xd0\\xff\\xa2\\x01\"",
          "15: THUMB_MCLASS = b\"\\xef\\xf3\\x02\\x80\"",
          "16: ARMV8 = b\"\\xe0\\x3b\\xb2\\xee\\x42\\x00\\x01\\xe1\\x51\\xf0\\x7f\\xf5\"",
          "",
          "[Removed Lines]",
          "13: THUMB_CODE = b\"\\x70\\x47\\xeb\\x46\\x83\\xb0\\xc9\\x68\\x1f\\xb1\\x30\\xbf\\xaf\\xf3\\x20\\x84\"",
          "",
          "[Added Lines]",
          "13: THUMB_CODE = b\"\\x70\\x47\\x00\\xf0\\x10\\xe8\\xeb\\x46\\x83\\xb0\\xc9\\x68\\x1f\\xb1\\x30\\xbf\\xaf\\xf3\\x20\\x84\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:             if syntax:",
          "114:                 md.syntax = syntax",
          "115:             md.detail = True",
          "117:                 print_insn_detail(insn)",
          "118:                 print ()",
          "119:             print (\"0x%x:\\n\" % (insn.address + insn.size))",
          "",
          "[Removed Lines]",
          "116:             for insn in md.disasm(code, 0x1000):",
          "",
          "[Added Lines]",
          "116:             for insn in md.disasm(code, 0x80001000):",
          "",
          "---------------"
        ],
        "tests/test_arm.c||tests/test_arm.c": [
          "File: tests/test_arm.c -> tests/test_arm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "201: #define THUMB_CODE2 \"\\x4f\\xf0\\x00\\x01\\xbd\\xe8\\x00\\x88\\xd1\\xe8\\x00\\xf0\\x18\\xbf\\xad\\xbf\\xf3\\xff\\x0b\\x0c\\x86\\xf3\\x00\\x89\\x80\\xf3\\x00\\x8c\\x4f\\xfa\\x99\\xf6\\xd0\\xff\\xa2\\x01\"",
          "202: #define THUMB_MCLASS \"\\xef\\xf3\\x02\\x80\"",
          "203: #define ARMV8 \"\\xe0\\x3b\\xb2\\xee\\x42\\x00\\x01\\xe1\\x51\\xf0\\x7f\\xf5\"",
          "",
          "[Removed Lines]",
          "200: #define THUMB_CODE \"\\x70\\x47\\xeb\\x46\\x83\\xb0\\xc9\\x68\\x1f\\xb1\\x30\\xbf\\xaf\\xf3\\x20\\x84\"",
          "",
          "[Added Lines]",
          "200: #define THUMB_CODE \"\\x70\\x47\\x00\\xf0\\x10\\xe8\\xeb\\x46\\x83\\xb0\\xc9\\x68\\x1f\\xb1\\x30\\xbf\\xaf\\xf3\\x20\\x84\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248:   },",
          "249:  };",
          "252:  cs_insn *insn;",
          "253:  int i;",
          "254:  size_t count;",
          "",
          "[Removed Lines]",
          "251:  uint64_t address = 0x1000;",
          "",
          "[Added Lines]",
          "251:  uint64_t address = 0x80001000;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b2b160ef045da6887e5124314c7ea4a8760e766",
      "candidate_info": {
        "commit_hash": "4b2b160ef045da6887e5124314c7ea4a8760e766",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/4b2b160ef045da6887e5124314c7ea4a8760e766",
        "files": [
          "arch/M68K/M68KInstPrinter.c",
          "bindings/python/capstone/m68k.py",
          "include/capstone/m68k.h"
        ],
        "message": "[M68K] Fixed invalid base reg (#1028)\n\nThis is one of those \u201chow did this ever work?\u201d changes. Problem was that as m68k_op was aliased with the imm value so when changing that to something big it would trash the values in the mem struct which would make things go really bad.\n\nNow m68k_op_mem has been moved out of the union so this will not happen again. Also fixed instruction printing bug related to this (just happend to \u201cwork\u201d due to the old union layout)",
        "before_after_code_files": [
          "arch/M68K/M68KInstPrinter.c||arch/M68K/M68KInstPrinter.c",
          "bindings/python/capstone/m68k.py||bindings/python/capstone/m68k.py",
          "include/capstone/m68k.h||include/capstone/m68k.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/M68K/M68KInstPrinter.c||arch/M68K/M68KInstPrinter.c": [
          "File: arch/M68K/M68KInstPrinter.c -> arch/M68K/M68KInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:   case M68K_AM_REGI_ADDR: SStream_concat(O, \"(a%d)\", (op->reg - M68K_REG_A0)); break;",
          "146:   case M68K_AM_REGI_ADDR_POST_INC: SStream_concat(O, \"(a%d)+\", (op->reg - M68K_REG_A0)); break;",
          "147:   case M68K_AM_REGI_ADDR_PRE_DEC: SStream_concat(O, \"-(a%d)\", (op->reg - M68K_REG_A0)); break;",
          "149:   case M68K_AM_PCI_DISP: SStream_concat(O, \"%s$%x(pc)\", op->mem.disp < 0 ? \"-\" : \"\", abs(op->mem.disp)); break;",
          "150:   case M68K_AM_ABSOLUTE_DATA_SHORT: SStream_concat(O, \"$%x.w\", op->imm); break;",
          "151:   case M68K_AM_ABSOLUTE_DATA_LONG: SStream_concat(O, \"$%x.l\", op->imm); break;",
          "",
          "[Removed Lines]",
          "148:   case M68K_AM_REGI_ADDR_DISP: SStream_concat(O, \"%s$%x(a%d)\", op->mem.disp < 0 ? \"-\" : \"\", abs(op->mem.disp), (op->reg - M68K_REG_A0)); break;",
          "",
          "[Added Lines]",
          "148:   case M68K_AM_REGI_ADDR_DISP: SStream_concat(O, \"%s$%x(a%d)\", op->mem.disp < 0 ? \"-\" : \"\", abs(op->mem.disp), (op->mem.base_reg - M68K_REG_A0)); break;",
          "",
          "---------------"
        ],
        "bindings/python/capstone/m68k.py||bindings/python/capstone/m68k.py": [
          "File: bindings/python/capstone/m68k.py -> bindings/python/capstone/m68k.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:         ('simm', ctypes.c_float),",
          "34:         ('reg', ctypes.c_uint),",
          "35:         ('reg_pair', M68KOpRegPair),",
          "38:     )",
          "40: class M68KOp(ctypes.Structure):",
          "41:     _fields_ = (",
          "42:         ('value', M68KOpValue),",
          "43:         ('type', ctypes.c_uint),",
          "44:         ('address_mode', ctypes.c_uint),",
          "45:     )",
          "",
          "[Removed Lines]",
          "36:         ('mem', M68KOpMem),",
          "37:         ('register_bits', ctypes.c_uint),",
          "",
          "[Added Lines]",
          "42:         ('mem', M68KOpMem),",
          "43:         ('register_bits', ctypes.c_uint),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:     @property",
          "64:     def mem(self):",
          "67:     @property",
          "68:     def register_bits(self):",
          "71: class M68KOpSize(ctypes.Structure):",
          "72:     _fields_ = (",
          "",
          "[Removed Lines]",
          "65:         return self.value.mem",
          "69:         return self.value.register_bits",
          "",
          "[Added Lines]",
          "65:         return self.mem",
          "69:         return self.register_bits",
          "",
          "---------------"
        ],
        "include/capstone/m68k.h||include/capstone/m68k.h": [
          "File: include/capstone/m68k.h -> include/capstone/m68k.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: typedef enum m68k_address_mode {",
          "82:  M68K_AM_REG_DIRECT_DATA,  // Register Direct - Data",
          "83:  M68K_AM_REG_DIRECT_ADDR,  // Register Direct - Address",
          "",
          "[Removed Lines]",
          "80:  M68K_AM_NONE = 0,   // No address mode.",
          "",
          "[Added Lines]",
          "80:  M68K_AM_NONE = 0,   // No address mode.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:  M68K_OP_FP_SINGLE,   // single precision Floating-Point operand",
          "116:  M68K_OP_FP_DOUBLE,   // double precision Floating-Point operand",
          "117:  M68K_OP_REG_BITS,    // Register bits move",
          "119: } m68k_op_type;",
          "",
          "[Removed Lines]",
          "118:  M68K_OP_REG_PAIR,    // Register pair in the same op (upper 4 bits for first reg, lower for second)",
          "",
          "[Added Lines]",
          "118:  M68K_OP_REG_PAIR,    // Register pair in the same op (upper 4 bits for first reg, lower for second)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "124:  m68k_reg base_reg;      // base register (or M68K_REG_INVALID if irrelevant)",
          "125:  m68k_reg index_reg;     // index register (or M68K_REG_INVALID if irrelevant)",
          "126:  m68k_reg in_base_reg;   // indirect base register (or M68K_REG_INVALID if irrelevant)",
          "129:  int16_t disp;         // displacement value",
          "130:  uint8_t scale;         // scale for index register",
          "131:  uint8_t bitfield;       // set to true if the two values below should be used",
          "",
          "[Removed Lines]",
          "127:  uint32_t in_disp;      // indirect displacement",
          "128:  uint32_t out_disp;      // other displacement",
          "",
          "[Added Lines]",
          "127:  uint32_t in_disp;      // indirect displacement",
          "128:  uint32_t out_disp;      // other displacement",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "145:    m68k_reg reg_0;",
          "146:    m68k_reg reg_1;",
          "147:   } reg_pair;",
          "150:  };",
          "151:  m68k_op_type type;",
          "152:  m68k_address_mode address_mode; // M68K addressing mode for this op",
          "153: } cs_m68k_op;",
          "",
          "[Removed Lines]",
          "148:   m68k_op_mem mem;      // data when operand is targeting memory",
          "149:   uint32_t register_bits; // register bits for movem etc. (always in d0-d7, a0-a7, fp0 - fp7 order)",
          "",
          "[Added Lines]",
          "150:  m68k_op_mem mem;      // data when operand is targeting memory",
          "151:  uint32_t register_bits; // register bits for movem etc. (always in d0-d7, a0-a7, fp0 - fp7 order)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "60f17f5b70e70442d80337935e33128473e35a84",
      "candidate_info": {
        "commit_hash": "60f17f5b70e70442d80337935e33128473e35a84",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/60f17f5b70e70442d80337935e33128473e35a84",
        "files": [
          "Makefile",
          "make.sh"
        ],
        "message": "Add posibility to disable universal build for osx. (#1004)\n\nFixes #1003",
        "before_after_code_files": [
          "make.sh||make.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "make.sh||make.sh": [
          "File: make.sh -> make.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:   \"ios_armv7s\" ) build_iOS armv7s $*;;",
          "166:   \"ios_arm64\" ) build_iOS arm64 $*;;",
          "167:   \"osx-kernel\" ) CAPSTONE_USE_SYS_DYN_MEM=yes CAPSTONE_HAS_OSXKERNEL=yes CAPSTONE_ARCHS=x86 CAPSTONE_SHARED=no CAPSTONE_BUILD_CORE_ONLY=yes build $*;;",
          "169: esac",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:   \"mac-universal-no\" ) MACOS_UNIVERSAL=no ${MAKE} $*;;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "469b4addd4a7a9f226df0a842f2bdde3d8e4614e",
      "candidate_info": {
        "commit_hash": "469b4addd4a7a9f226df0a842f2bdde3d8e4614e",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/469b4addd4a7a9f226df0a842f2bdde3d8e4614e",
        "files": [
          "cstool/cstool.c",
          "cstool/cstool_arm.c",
          "cstool/cstool_arm64.c",
          "cstool/cstool_mips.c",
          "cstool/cstool_ppc.c",
          "cstool/cstool_sparc.c",
          "cstool/cstool_systemz.c",
          "cstool/cstool_x86.c",
          "cstool/cstool_xcore.c"
        ],
        "message": "Delete platform.h and fix wrong identation.",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c",
          "cstool/cstool_arm.c||cstool/cstool_arm.c",
          "cstool/cstool_arm64.c||cstool/cstool_arm64.c",
          "cstool/cstool_mips.c||cstool/cstool_mips.c",
          "cstool/cstool_ppc.c||cstool/cstool_ppc.c",
          "cstool/cstool_sparc.c||cstool/cstool_sparc.c",
          "cstool/cstool_systemz.c||cstool/cstool_systemz.c",
          "cstool/cstool_x86.c||cstool/cstool_x86.c",
          "cstool/cstool_xcore.c||cstool/cstool_xcore.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #include <capstone.h>",
          "12: void print_insn_detail_x86(csh ud, cs_mode mode, cs_insn *ins);",
          "13: void print_insn_detail_arm(csh handle, cs_insn *ins);",
          "",
          "[Removed Lines]",
          "10: #define VERSION \"1.0\"",
          "",
          "[Added Lines]",
          "10: #define VERSION \"2.0\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: static uint8_t char_to_hexnum(char c)",
          "23: {",
          "24:  if (c >= '0' && c <= '9') {",
          "26:  }",
          "28:  if (c >= 'a' && c <= 'f') {",
          "",
          "[Removed Lines]",
          "25:   return (uint8_t)(c - '0');",
          "",
          "[Added Lines]",
          "25:         return (uint8_t)(c - '0');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "38: static uint8_t *preprocess(char *code, size_t *size)",
          "39: {",
          "41:  uint8_t high, low;",
          "42:  uint8_t *result;",
          "",
          "[Removed Lines]",
          "40:  size_t i = 0, j = 0;",
          "",
          "[Added Lines]",
          "40:     size_t i = 0, j = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "175:  if (!strcmp(mode, \"arm\")) {",
          "176:         arch = \"arm\";",
          "178:  }",
          "180:  if (!strcmp(mode, \"armb\")) {",
          "181:         arch = \"arm\";",
          "183:  }",
          "185:  if (!strcmp(mode, \"arml\")) {",
          "186:         arch = \"arm\";",
          "188:  }",
          "190:  if (!strcmp(mode, \"thumb\")) {",
          "",
          "[Removed Lines]",
          "177:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM, &handle);",
          "182:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_BIG_ENDIAN, &handle);",
          "187:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_LITTLE_ENDIAN, &handle);",
          "",
          "[Added Lines]",
          "177:         err = cs_open(CS_ARCH_ARM, CS_MODE_ARM, &handle);",
          "182:         err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_BIG_ENDIAN, &handle);",
          "187:         err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_LITTLE_ENDIAN, &handle);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "195:  if (!strcmp(mode, \"thumbbe\")) {",
          "196:         arch = \"arm\";",
          "198:  }",
          "200:  if (!strcmp(mode, \"thumble\")) {",
          "201:         arch = \"arm\";",
          "203:  }",
          "205:  if (!strcmp(mode, \"arm64\")) {",
          "206:         arch = \"arm64\";",
          "208:  }",
          "210:  if (!strcmp(mode, \"mips\")) {",
          "211:         arch = \"mips\";",
          "213:  }",
          "215:  if (!strcmp(mode, \"mipsbe\")) {",
          "216:         arch = \"mips\";",
          "218:  }",
          "220:  if (!strcmp(mode, \"mips64\")) {",
          "221:         arch = \"mips\";",
          "223:  }",
          "225:  if (!strcmp(mode, \"mips64be\")) {",
          "226:         arch = \"mips\";",
          "228:  }",
          "230:  if (!strcmp(mode, \"x16\")) {",
          "234:  }",
          "236:  if (!strcmp(mode, \"x32\")) {",
          "237:         md = CS_MODE_32;",
          "240:  }",
          "242:  if (!strcmp(mode, \"x64\")) {",
          "",
          "[Removed Lines]",
          "197:   err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB + CS_MODE_BIG_ENDIAN, &handle);",
          "202:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_LITTLE_ENDIAN, &handle);",
          "207:   err = cs_open(CS_ARCH_ARM64, CS_MODE_LITTLE_ENDIAN, &handle);",
          "212:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 + CS_MODE_LITTLE_ENDIAN, &handle);",
          "217:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 + CS_MODE_BIG_ENDIAN, &handle);",
          "222:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 + CS_MODE_BIG_ENDIAN, &handle);",
          "227:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 + CS_MODE_BIG_ENDIAN, &handle);",
          "231:         md = CS_MODE_64;",
          "232:   arch = \"x86\";",
          "233:   err = cs_open(CS_ARCH_X86, CS_MODE_16, &handle);",
          "238:   arch = \"x86\";",
          "239:   err = cs_open(CS_ARCH_X86, CS_MODE_32, &handle);",
          "",
          "[Added Lines]",
          "197:         err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB + CS_MODE_BIG_ENDIAN, &handle);",
          "202:         err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_LITTLE_ENDIAN, &handle);",
          "207:         err = cs_open(CS_ARCH_ARM64, CS_MODE_LITTLE_ENDIAN, &handle);",
          "212:         err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 + CS_MODE_LITTLE_ENDIAN, &handle);",
          "217:         err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 + CS_MODE_BIG_ENDIAN, &handle);",
          "222:         err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 + CS_MODE_BIG_ENDIAN, &handle);",
          "227:         err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 + CS_MODE_BIG_ENDIAN, &handle);",
          "231:         md = CS_MODE_16;",
          "232:         arch = \"x86\";",
          "233:         err = cs_open(CS_ARCH_X86, CS_MODE_16, &handle);",
          "238:         arch = \"x86\";",
          "239:         err = cs_open(CS_ARCH_X86, CS_MODE_32, &handle);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "248:  if (!strcmp(mode, \"x16att\")) {",
          "249:         md = CS_MODE_16;",
          "250:         arch = \"x86\";",
          "254:   }",
          "255:  }",
          "",
          "[Removed Lines]",
          "251:   err = cs_open(CS_ARCH_X86, CS_MODE_16, &handle);",
          "252:   if (!err) {",
          "253:    cs_option(handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);",
          "",
          "[Added Lines]",
          "251:         err = cs_open(CS_ARCH_X86, CS_MODE_16, &handle);",
          "252:         if (!err) {",
          "253:             cs_option(handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "278:  }",
          "280:  if (!strcmp(mode,\"ppc64be\")) {",
          "283:  }",
          "285:  if (!strcmp(mode,\"sparc\")) {",
          "",
          "[Removed Lines]",
          "281:          arch = \"ppc\";",
          "282:   err = cs_open(CS_ARCH_PPC,CS_MODE_64+CS_MODE_BIG_ENDIAN, &handle);",
          "",
          "[Added Lines]",
          "281:         arch = \"ppc\";",
          "282:         err = cs_open(CS_ARCH_PPC,CS_MODE_64+CS_MODE_BIG_ENDIAN, &handle);",
          "",
          "---------------"
        ],
        "cstool/cstool_arm.c||cstool/cstool_arm.c": [
          "File: cstool/cstool_arm.c -> cstool/cstool_arm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #include <stdio.h>",
          "2: #include <stdlib.h>",
          "5: #include <capstone.h>",
          "8: static void print_string_hex(char *comment, unsigned char *str, size_t len)",
          "9: {",
          "10:     unsigned char *c;",
          "",
          "[Removed Lines]",
          "4: #include <platform.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cstool/cstool_arm64.c||cstool/cstool_arm64.c": [
          "File: cstool/cstool_arm64.c -> cstool/cstool_arm64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <stdio.h>",
          "5: #include <stdlib.h>",
          "8: #include <capstone.h>",
          "11: static void print_string_hex(char *comment, unsigned char *str, size_t len)",
          "12: {",
          "13:     unsigned char *c;",
          "",
          "[Removed Lines]",
          "7: #include <platform.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cstool/cstool_mips.c||cstool/cstool_mips.c": [
          "File: cstool/cstool_mips.c -> cstool/cstool_mips.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <stdio.h>",
          "5: #include <stdlib.h>",
          "8: #include <capstone.h>",
          "11: static void print_string_hex(char *comment, unsigned char *str, size_t len)",
          "12: {",
          "13:     unsigned char *c;",
          "",
          "[Removed Lines]",
          "7: #include <platform.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cstool/cstool_ppc.c||cstool/cstool_ppc.c": [
          "File: cstool/cstool_ppc.c -> cstool/cstool_ppc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <stdio.h>",
          "7: #include <capstone.h>",
          "9: static csh handle;",
          "",
          "[Removed Lines]",
          "6: #include <platform.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cstool/cstool_sparc.c||cstool/cstool_sparc.c": [
          "File: cstool/cstool_sparc.c -> cstool/cstool_sparc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <stdio.h>",
          "7: #include <capstone.h>",
          "10: static void print_string_hex(char *comment, unsigned char *str, size_t len)",
          "11: {",
          "12:     unsigned char *c;",
          "",
          "[Removed Lines]",
          "6: #include <platform.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cstool/cstool_systemz.c||cstool/cstool_systemz.c": [
          "File: cstool/cstool_systemz.c -> cstool/cstool_systemz.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <stdio.h>",
          "7: #include <capstone.h>",
          "10: static void print_string_hex(char *comment, unsigned char *str, size_t len)",
          "11: {",
          "12:     unsigned char *c;",
          "",
          "[Removed Lines]",
          "6: #include <platform.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cstool/cstool_x86.c||cstool/cstool_x86.c": [
          "File: cstool/cstool_x86.c -> cstool/cstool_x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <stdio.h>",
          "5: #include <stdlib.h>",
          "8: #include <capstone.h>",
          "12: static void print_string_hex(char *comment, unsigned char *str, size_t len)",
          "13: {",
          "14:     unsigned char *c;",
          "",
          "[Removed Lines]",
          "7: #include <platform.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cstool/cstool_xcore.c||cstool/cstool_xcore.c": [
          "File: cstool/cstool_xcore.c -> cstool/cstool_xcore.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #include <stdio.h>",
          "7: #include <capstone.h>",
          "10: static void print_string_hex(char *comment, unsigned char *str, size_t len)",
          "11: {",
          "12:     unsigned char *c;",
          "",
          "[Removed Lines]",
          "6: #include <platform.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9d3e929ae6d2b89ae9f3fa2a41375331bfb86164",
      "candidate_info": {
        "commit_hash": "9d3e929ae6d2b89ae9f3fa2a41375331bfb86164",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9d3e929ae6d2b89ae9f3fa2a41375331bfb86164",
        "files": [
          "bindings/python/prebuilt/.gitkeep",
          "bindings/python/setup.py"
        ],
        "message": "Add ability to copy prebuilt libraries from prebuilt directory during python build",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:     # copy public headers",
          "118:     shutil.copytree(os.path.join(BUILD_DIR, 'include'), os.path.join(HEADERS_DIR, 'capstone'))",
          "120:     os.chdir(BUILD_DIR)",
          "122:     # platform description refers at https://docs.python.org/2/library/sys.html#sys.platform",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120:     # if prebuilt libraries are available, use those and cancel build",
          "121:     if os.path.exists(os.path.join(ROOT_DIR, 'prebuilt', LIBRARY_FILE)) and \\",
          "122:             (not STATIC_LIBRARY_FILE or os.path.exists(os.path.join(ROOT_DIR, 'prebuilt', STATIC_LIBRARY_FILE))):",
          "123:         shutil.copy(os.path.join(ROOT_DIR, 'prebuilt', LIBRARY_FILE), LIBS_DIR)",
          "124:         if STATIC_LIBRARY_FILE is not None:",
          "125:             shutil.copy(os.path.join(ROOT_DIR, 'prebuilt', STATIC_LIBRARY_FILE), LIBS_DIR)",
          "126:         return",
          "",
          "---------------"
        ]
      }
    }
  ]
}