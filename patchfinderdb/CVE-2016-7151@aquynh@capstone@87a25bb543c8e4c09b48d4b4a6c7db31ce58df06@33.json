{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "483e101ff70ba1e6a6bf7df535747567ed6c5f5e",
      "candidate_info": {
        "commit_hash": "483e101ff70ba1e6a6bf7df535747567ed6c5f5e",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/483e101ff70ba1e6a6bf7df535747567ed6c5f5e",
        "files": [
          "arch/ARM/ARMInstPrinter.c"
        ],
        "message": "arm: fix issue #740",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "373:    case ARM_LDRB_POST_IMM:",
          "374:    case ARM_LDR_POST_IMM:",
          "375:    case ARM_STRB_POST_IMM:",
          "376:    case ARM_STR_POST_IMM:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "377:    case ARM_LDR_POST_REG:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8ef4914d79ec3e0e112e45b3f897296cc56cf86",
      "candidate_info": {
        "commit_hash": "d8ef4914d79ec3e0e112e45b3f897296cc56cf86",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d8ef4914d79ec3e0e112e45b3f897296cc56cf86",
        "files": [
          "include/platform.h"
        ],
        "message": "fix some warnings on VS2010 on redefining INTxx_MIN, INTxx_MAX",
        "before_after_code_files": [
          "include/platform.h||include/platform.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/platform.h||include/platform.h": [
          "File: include/platform.h -> include/platform.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #if defined(CAPSTONE_HAS_OSXKERNEL) || (defined(_MSC_VER) && (_MSC_VER <= 1700 || defined(_KERNEL_MODE)))",
          "37: typedef signed char  int8_t;",
          "38: typedef signed short int16_t;",
          "",
          "[Removed Lines]",
          "35: #if defined(_MSC_VER) && (_MSC_VER <= 1700 || defined(_KERNEL_MODE))",
          "",
          "[Added Lines]",
          "35: #if defined(_MSC_VER) && (_MSC_VER < 1600 || defined(_KERNEL_MODE))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "438f8244460f111b873645b9120aad1eaca8387c",
      "candidate_info": {
        "commit_hash": "438f8244460f111b873645b9120aad1eaca8387c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/438f8244460f111b873645b9120aad1eaca8387c",
        "files": [
          "cstool/cstool_x86.c"
        ],
        "message": "cstool: cs_op_count() can return -1. fix #978",
        "before_after_code_files": [
          "cstool/cstool_x86.c||cstool/cstool_x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool_x86.c||cstool/cstool_x86.c": [
          "File: cstool/cstool_x86.c -> cstool/cstool_x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:  }",
          "63:  count = cs_op_count(ud, ins, X86_OP_IMM);",
          "65:   printf(\"\\timm_count: %u\\n\", count);",
          "66:   for (i = 1; i < count + 1; i++) {",
          "67:    int index = cs_op_index(ud, ins, X86_OP_IMM, i);",
          "",
          "[Removed Lines]",
          "64:  if (count) {",
          "",
          "[Added Lines]",
          "64:  if (count > 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d4c66095900309416622ec5dc168cba4484ff81",
      "candidate_info": {
        "commit_hash": "7d4c66095900309416622ec5dc168cba4484ff81",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/7d4c66095900309416622ec5dc168cba4484ff81",
        "files": [
          "arch/M68K/M68KDisassembler.c",
          "arch/M68K/M68KInstPrinter.c",
          "bindings/java/capstone/M68k_const.java",
          "bindings/ocaml/m68k_const.ml",
          "bindings/python/capstone/m68k_const.py",
          "bindings/python/test_m68k.py",
          "contrib/objdump/objdump-m68k.py",
          "include/capstone/m68k.h",
          "tests/test_m68k.c"
        ],
        "message": "Fix typo in m68k constant for immediate operand.",
        "before_after_code_files": [
          "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c",
          "arch/M68K/M68KInstPrinter.c||arch/M68K/M68KInstPrinter.c",
          "bindings/javcapstone/M68k_const.java||bindings/java/capstone/M68k_const.java",
          "bindings/ocaml/m68k_const.ml||bindings/ocaml/m68k_const.ml",
          "bindings/python/capstone/m68k_const.py||bindings/python/capstone/m68k_const.py",
          "bindings/python/test_m68k.py||bindings/python/test_m68k.py",
          "contrib/objdump/objdump-m68k.py||contriobjdump/objdump-m68k.py",
          "include/capstone/m68k.h||include/capstone/m68k.h",
          "tests/test_m68k.c||tests/test_m68k.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c": [
          "File: arch/M68K/M68KDisassembler.c -> arch/M68K/M68KDisassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "493:    break;",
          "495:   case 0x3c:",
          "497:    op->type = M68K_OP_IMM;",
          "499:    if (size == 1)",
          "",
          "[Removed Lines]",
          "496:    op->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "496:    op->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "597:  if (imm > 0) {",
          "598:   ext->op_count = 3;",
          "599:   op2->type = M68K_OP_IMM;",
          "601:   op2->imm = imm;",
          "602:  }",
          "603: }",
          "",
          "[Removed Lines]",
          "600:   op2->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "600:   op2->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "628:  op1 = &ext->operands[1];",
          "630:  op0->type = M68K_OP_IMM;",
          "632:  op0->imm = imm;",
          "634:  get_ea_mode_op(info, op1, info->ir, size);",
          "",
          "[Removed Lines]",
          "631:  op0->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "631:  op0->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "644:  op1 = &ext->operands[1];",
          "646:  op0->type = M68K_OP_IMM;",
          "648:  op0->imm = g_3bit_qdata_table[(info->ir >> 9) & 7];",
          "650:  op1->address_mode = M68K_AM_REG_DIRECT_DATA;",
          "",
          "[Removed Lines]",
          "647:  op0->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "647:  op0->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "661:  op1 = &ext->operands[1];",
          "663:  op0->type = M68K_OP_IMM;",
          "665:  op0->imm = g_3bit_qdata_table[(info->ir >> 9) & 7];",
          "667:  get_ea_mode_op(info, op1, info->ir, size);",
          "",
          "[Removed Lines]",
          "664:  op0->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "664:  op0->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "687:  if (imm > 0) {",
          "688:   ext->op_count = 3;",
          "689:   op2->type = M68K_OP_IMM;",
          "691:   op2->imm = imm;",
          "692:  }",
          "693: }",
          "",
          "[Removed Lines]",
          "690:   op2->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "690:   op2->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "752:  op1 = &ext->operands[1];",
          "754:  op0->type = M68K_OP_IMM;",
          "756:  op0->imm = imm;",
          "758:  op1->address_mode = M68K_AM_NONE;",
          "",
          "[Removed Lines]",
          "755:  op0->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "755:  op0->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "767:  op = &ext->operands[0];",
          "769:  op->type = M68K_OP_IMM;",
          "771:  op->imm = jump_offset;",
          "773:  set_insn_group(info, M68K_GRP_JUMP);",
          "",
          "[Removed Lines]",
          "770:  op->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "770:  op->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "796:  op0->reg = M68K_REG_D0 + (info->ir & 7);",
          "798:  op1->type = M68K_OP_IMM;",
          "800:  op1->imm = jump_offset;",
          "802:  set_insn_group(info, M68K_GRP_JUMP);",
          "",
          "[Removed Lines]",
          "799:  op1->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "799:  op1->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "946:  op = &ext->operands[0];",
          "948:  op->type = M68K_OP_IMM;",
          "950:  op->imm = data;",
          "951: }",
          "",
          "[Removed Lines]",
          "949:  op->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "949:  op->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1057:  op0->address_mode = M68K_AM_NONE;",
          "1058:  op0->reg = M68K_REG_A0 + (info->ir & 7);",
          "1061:  op1->type = M68K_OP_IMM;",
          "1062:  op1->imm = disp;",
          "1063: }",
          "",
          "[Removed Lines]",
          "1060:  op1->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "1060:  op1->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1091:  op0 = &ext->operands[0];",
          "1092:  op1 = &ext->operands[1];",
          "1095:  op0->type = M68K_OP_IMM;",
          "1096:  op0->imm = (info->ir >> 6) & 3;",
          "",
          "[Removed Lines]",
          "1094:  op0->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "1094:  op0->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1803:  ext = build_init_op(info, M68K_INS_FBF, 1, 2);",
          "1804:  op0 = &ext->operands[0];",
          "1807:  op0->type = M68K_OP_IMM;",
          "1808:  op0->imm = new_pc;",
          "1809: }",
          "",
          "[Removed Lines]",
          "1806:  op0->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "1806:  op0->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1828:  op0 = &ext->operands[0];",
          "1830:  op0->type = M68K_OP_IMM;",
          "1832:  op0->imm = new_pc;",
          "1833: }",
          "",
          "[Removed Lines]",
          "1831:  op0->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "1831:  op0->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1857:  op0->reg = M68K_REG_D0 + (info->ir & 7);",
          "1860:  op1->type = M68K_OP_IMM;",
          "1861:  op1->imm = new_pc;",
          "1862: }",
          "",
          "[Removed Lines]",
          "1859:  op1->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "1859:  op1->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1962:   op0 = &ext->operands[0];",
          "1963:   op1 = &ext->operands[1];",
          "1966:   op0->type = M68K_OP_IMM;",
          "1967:   op0->imm = next & 0x3f;",
          "",
          "[Removed Lines]",
          "1965:   op0->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "1965:   op0->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2169:  op0 = &ext->operands[0];",
          "2172:  op0->type = M68K_OP_IMM;",
          "2173:  op0->imm = extension2;",
          "2174: }",
          "",
          "[Removed Lines]",
          "2171:  op0->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "2171:  op0->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2192:  op0 = &ext->operands[0];",
          "2195:  op0->type = M68K_OP_IMM;",
          "2196:  op0->imm = extension2;",
          "2197: }",
          "",
          "[Removed Lines]",
          "2194:  op0->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "2194:  op0->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2702:  op1 = &ext->operands[1];",
          "2704:  op0->type = M68K_OP_IMM;",
          "2706:  op0->imm = (info->ir & 0xff);",
          "2708:  op1->address_mode = M68K_AM_REG_DIRECT_DATA;",
          "",
          "[Removed Lines]",
          "2705:  op0->address_mode = M68K_AM_IMMIDIATE;",
          "",
          "[Added Lines]",
          "2705:  op0->address_mode = M68K_AM_IMMEDIATE;",
          "",
          "---------------"
        ],
        "arch/M68K/M68KInstPrinter.c||arch/M68K/M68KInstPrinter.c": [
          "File: arch/M68K/M68KInstPrinter.c -> arch/M68K/M68KInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:   case M68K_AM_PCI_DISP: SStream_concat(O, \"$%x(pc)\", op->mem.disp); break;",
          "146:   case M68K_AM_ABSOLUTE_DATA_SHORT: SStream_concat(O, \"$%x.w\", op->imm); break;",
          "147:   case M68K_AM_ABSOLUTE_DATA_LONG: SStream_concat(O, \"$%x.l\", op->imm); break;",
          "149:     if (inst->op_size.type == M68K_SIZE_TYPE_FPU) {",
          "150: #if defined(_KERNEL_MODE)",
          "",
          "[Removed Lines]",
          "148:   case M68K_AM_IMMIDIATE:",
          "",
          "[Added Lines]",
          "148:   case M68K_AM_IMMEDIATE:",
          "",
          "---------------"
        ],
        "bindings/javcapstone/M68k_const.java||bindings/java/capstone/M68k_const.java": [
          "File: bindings/javcapstone/M68k_const.java -> bindings/java/capstone/M68k_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:  public static final int M68K_AM_IMMEDIATE = 18;",
          "",
          "---------------"
        ],
        "bindings/ocaml/m68k_const.ml||bindings/ocaml/m68k_const.ml": [
          "File: bindings/ocaml/m68k_const.ml -> bindings/ocaml/m68k_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: let _M68K_AM_PC_MEMI_PRE_INDEX = 15;;",
          "73: let _M68K_AM_ABSOLUTE_DATA_SHORT = 16;;",
          "74: let _M68K_AM_ABSOLUTE_DATA_LONG = 17;;",
          "77: (* Operand type for instruction's operands *)",
          "",
          "[Removed Lines]",
          "75: let _M68K_AM_IMMIDIATE = 18;;",
          "",
          "[Added Lines]",
          "75: let _M68K_AM_IMMEDIATE = 18;;",
          "",
          "---------------"
        ],
        "bindings/python/capstone/m68k_const.py||bindings/python/capstone/m68k_const.py": [
          "File: bindings/python/capstone/m68k_const.py -> bindings/python/capstone/m68k_const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: M68K_AM_PC_MEMI_PRE_INDEX = 15",
          "73: M68K_AM_ABSOLUTE_DATA_SHORT = 16",
          "74: M68K_AM_ABSOLUTE_DATA_LONG = 17",
          "77: # Operand type for instruction's operands",
          "",
          "[Removed Lines]",
          "75: M68K_AM_IMMIDIATE = 18",
          "",
          "[Added Lines]",
          "75: M68K_AM_IMMEDIATE = 18",
          "",
          "---------------"
        ],
        "bindings/python/test_m68k.py||bindings/python/test_m68k.py": [
          "File: bindings/python/test_m68k.py -> bindings/python/test_m68k.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:  16: \"Absolute Data Addressing  - Short\",",
          "41:  17: \"Absolute Data Addressing  - Long\",",
          "43: }",
          "45: def print_insn_detail(insn):",
          "",
          "[Removed Lines]",
          "42:  18: \"Immidate value\",",
          "",
          "[Added Lines]",
          "42:  18: \"Immediate value\",",
          "",
          "---------------"
        ],
        "contrib/objdump/objdump-m68k.py||contriobjdump/objdump-m68k.py": [
          "File: contrib/objdump/objdump-m68k.py -> contriobjdump/objdump-m68k.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:         return format(\"0x%x\" % (extsign1616(op.imm & 0xffff)))",
          "142:     if op.address_mode == M68K_AM_ABSOLUTE_DATA_LONG:",
          "143:         return format(\"0x%x\" % (op.imm & 0xffffffff))",
          "145:         if insn.op_size.type == M68K_SIZE_TYPE_FPU:",
          "146:             map_fpu_size_str = { M68K_FPU_SIZE_SINGLE : op.simm, M68K_FPU_SIZE_DOUBLE : op.dimm }",
          "147:             return format(\"#%f\" % (insn.op_size.fpu_size[map_fpu_size_str]))",
          "",
          "[Removed Lines]",
          "144:     if op.address_mode == M68K_AM_IMMIDIATE:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "278:     15 : \"M68K_AM_PC_MEMI_PRE_INDEX\",",
          "279:     16 : \"M68K_AM_ABSOLUTE_DATA_SHORT\",",
          "280:     17 : \"M68K_AM_ABSOLUTE_DATA_LONG\",",
          "282:     }",
          "",
          "[Removed Lines]",
          "281:     18 : \"M68K_AM_IMMIDIATE\",",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/capstone/m68k.h||include/capstone/m68k.h": [
          "File: include/capstone/m68k.h -> include/capstone/m68k.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:  M68K_AM_ABSOLUTE_DATA_SHORT, // Absolute Data Addressing  - Short",
          "105:  M68K_AM_ABSOLUTE_DATA_LONG,  // Absolute Data Addressing  - Long",
          "107: } m68k_address_mode;",
          "",
          "[Removed Lines]",
          "106:  M68K_AM_IMMIDIATE,              // Immediate value",
          "",
          "[Added Lines]",
          "106:  M68K_AM_IMMEDIATE,              // Immediate value",
          "",
          "---------------"
        ],
        "tests/test_m68k.c||tests/test_m68k.c": [
          "File: tests/test_m68k.c -> tests/test_m68k.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:  \"Absolute Data Addressing  - Short\",",
          "57:  \"Absolute Data Addressing  - Long\",",
          "59: };",
          "61: static void print_insn_detail(cs_insn *ins)",
          "",
          "[Removed Lines]",
          "58:  \"Immidate value\",",
          "",
          "[Added Lines]",
          "58:  \"Immediate value\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4389cc51e69c62aa777f9b4035aef32f5acde14",
      "candidate_info": {
        "commit_hash": "d4389cc51e69c62aa777f9b4035aef32f5acde14",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d4389cc51e69c62aa777f9b4035aef32f5acde14",
        "files": [
          "arch/X86/X86ATTInstPrinter.c"
        ],
        "message": "x86: fix issue #717",
        "before_after_code_files": [
          "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c": [
          "File: arch/X86/X86ATTInstPrinter.c -> arch/X86/X86ATTInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "727:       SStream_concat(O, \"%\"PRIu64, DispVal);",
          "728:     }",
          "729:    }",
          "730:   }",
          "731:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "730:   } else {",
          "731:    SStream_concat0(O, \"0\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}