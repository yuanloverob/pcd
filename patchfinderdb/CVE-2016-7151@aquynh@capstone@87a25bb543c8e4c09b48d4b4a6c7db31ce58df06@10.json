{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a3a79587eb8611e47fd26a72607ba25d87a5ed8b",
      "candidate_info": {
        "commit_hash": "a3a79587eb8611e47fd26a72607ba25d87a5ed8b",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/a3a79587eb8611e47fd26a72607ba25d87a5ed8b",
        "files": [
          "windowsce/make_windowsce7-armv7.bat",
          "windowsce/make_windowsce8-armv7.bat"
        ],
        "message": "Updated build scripts for Windows CE.",
        "before_after_code_files": [
          "windowsce/make_windowsce7-armv7.bat||windowsce/make_windowsce7-armv7.bat",
          "windowsce/make_windowsce8-armv7.bat||windowsce/make_windowsce8-armv7.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "windowsce/make_windowsce7-armv7.bat||windowsce/make_windowsce7-armv7.bat": [
          "File: windowsce/make_windowsce7-armv7.bat -> windowsce/make_windowsce7-armv7.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: set SHARED=1",
          "18: set DIET_MODE=0",
          "19: set X86_REDUCE=0",
          "20: set X86_ATT_DISABLE=0",
          "22: set DISASM_ARCH_LIST=ARM ARM64 M68K MIPS POWERPC SPARC SYSZ X86 XCORE",
          "27: rem ***************************************************************************",
          "28: rem *                              SANITY CHECKS                              *",
          "",
          "[Removed Lines]",
          "21: set USE_SYS_DYN_MEM=0",
          "23: set DISASM_ARCH_DIRS=ARM AARCH64 M68K MIPS POWERPC SPARC SystemZ X86 XCORE",
          "24: rem set DISASM_ARCH_LIST=ARM",
          "25: rem set DISASM_ARCH_DIRS=ARM",
          "",
          "[Added Lines]",
          "19: set USE_SYS_DYN_MEM=1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127: set SOURCES=",
          "128: for %%f in (%SOURCES_ROOT%\\*.c) do set SOURCES=!SOURCES! %%f",
          "131: rem ***************************************************************************",
          "132: rem *                           COMPILATION COMMANDS                          *",
          "",
          "[Removed Lines]",
          "129: for %%a in (%DISASM_ARCH_DIRS%) do for %%f in (%SOURCES_ROOT%\\arch\\%%a\\*.c) do set SOURCES=!SOURCES! %%f",
          "",
          "[Added Lines]",
          "126: for /d %%a in (%SOURCES_ROOT%\\arch\\*) do for %%f in (%%a\\*.c) do set SOURCES=!SOURCES! %%f",
          "",
          "---------------"
        ],
        "windowsce/make_windowsce8-armv7.bat||windowsce/make_windowsce8-armv7.bat": [
          "File: windowsce/make_windowsce8-armv7.bat -> windowsce/make_windowsce8-armv7.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: set SHARED=1",
          "18: set DIET_MODE=0",
          "19: set X86_REDUCE=0",
          "20: set X86_ATT_DISABLE=0",
          "22: set DISASM_ARCH_LIST=ARM ARM64 M68K MIPS POWERPC SPARC SYSZ X86 XCORE",
          "27: rem ***************************************************************************",
          "28: rem *                              SANITY CHECKS                              *",
          "",
          "[Removed Lines]",
          "21: set USE_SYS_DYN_MEM=0",
          "23: set DISASM_ARCH_DIRS=ARM AARCH64 M68K MIPS POWERPC SPARC SystemZ X86 XCORE",
          "24: rem set DISASM_ARCH_LIST=ARM",
          "25: rem set DISASM_ARCH_DIRS=ARM",
          "",
          "[Added Lines]",
          "19: set USE_SYS_DYN_MEM=1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127: set SOURCES=",
          "128: for %%f in (%SOURCES_ROOT%\\*.c) do set SOURCES=!SOURCES! %%f",
          "131: rem ***************************************************************************",
          "132: rem *                           COMPILATION COMMANDS                          *",
          "",
          "[Removed Lines]",
          "129: for %%a in (%DISASM_ARCH_DIRS%) do for %%f in (%SOURCES_ROOT%\\arch\\%%a\\*.c) do set SOURCES=!SOURCES! %%f",
          "",
          "[Added Lines]",
          "126: for /d %%a in (%SOURCES_ROOT%\\arch\\*) do for %%f in (%%a\\*.c) do set SOURCES=!SOURCES! %%f",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2729f3bb33c27d5fee0dbaa689bc030606c30ccd",
      "candidate_info": {
        "commit_hash": "2729f3bb33c27d5fee0dbaa689bc030606c30ccd",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/2729f3bb33c27d5fee0dbaa689bc030606c30ccd",
        "files": [
          "arch/AArch64/AArch64InstPrinter.c",
          "arch/ARM/ARMInstPrinter.c",
          "cs.c",
          "tests/test_arm.c",
          "tests/test_arm64.c"
        ],
        "message": "fix #681",
        "before_after_code_files": [
          "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c",
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c",
          "cs.c||cs.c",
          "tests/test_arm.c||tests/test_arm.c",
          "tests/test_arm64.c||tests/test_arm64.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64InstPrinter.c||arch/AArch64/AArch64InstPrinter.c": [
          "File: arch/AArch64/AArch64InstPrinter.c -> arch/AArch64/AArch64InstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1037:  double FPImm = MCOperand_isFPImm(MO) ? MCOperand_getFPImm(MO) : AArch64_AM_getFPImmFloat((int)MCOperand_getImm(MO));",
          "1040:  SStream_concat(O, \"#%.8f\", FPImm);",
          "1041:  if (MI->csh->detail) {",
          "1042:   MI->flat_insn->detail->arm64.operands[MI->flat_insn->detail->arm64.op_count].type = ARM64_OP_FP;",
          "1043:   MI->flat_insn->detail->arm64.operands[MI->flat_insn->detail->arm64.op_count].fp = FPImm;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1040: #if defined(_KERNEL_MODE)",
          "1042:  SStream_concat(O, \"#<float_point_unsupported>\");",
          "1043: #else",
          "1045: #endif",
          "",
          "---------------"
        ],
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2103: static void printFPImmOperand(MCInst *MI, unsigned OpNum, SStream *O)",
          "2104: {",
          "2105:  MCOperand *MO = MCInst_getOperand(MI, OpNum);",
          "2106:  SStream_concat(O, \"#%e\", getFPImmFloat((unsigned int)MCOperand_getImm(MO)));",
          "2107:  if (MI->csh->detail) {",
          "2108:   MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].type = ARM_OP_FP;",
          "2109:   MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].fp = getFPImmFloat((unsigned int)MCOperand_getImm(MO));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2107: #if defined(_KERNEL_MODE)",
          "2109:  SStream_concat(O, \"#<float_point_unsupported>\");",
          "2110: #else",
          "2112: #endif",
          "",
          "---------------"
        ],
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include \"windows\\winkernel_mm.h\"",
          "22: #endif",
          "24: #if !defined(CAPSTONE_HAS_OSXKERNEL) && !defined(CAPSTONE_DIET) && !defined(_KERNEL_MODE)",
          "25: #define INSN_CACHE_SIZE 32",
          "26: #else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #if defined(_KERNEL_MODE) && !defined(CAPSTONE_DIET)",
          "26: #if defined(CAPSTONE_HAS_ARM) || defined(CAPSTONE_HAS_ARM64)",
          "27: #define CAPSTONE_STR_INTERNAL(x) #x",
          "28: #define CAPSTONE_STR(x) CAPSTONE_STR_INTERNAL(x)",
          "29: #define CAPSTONE_MSVC_WRANING_PREFIX __FILE__ \"(\"CAPSTONE_STR(__LINE__)\") : warning message : \"",
          "31: #pragma message(CAPSTONE_MSVC_WRANING_PREFIX \"Windows driver does not support full features for selected architecture(s). Define CAPSTONE_DIET to compile Capstone with only supported features. See issue #681 for details.\")",
          "33: #undef CAPSTONE_MSVC_WRANING_PREFIX",
          "34: #undef CAPSTONE_STR",
          "35: #undef CAPSTONE_STR_INTERNAL",
          "36: #endif",
          "37: #endif // defined(_KERNEL_MODE) && !defined(CAPSTONE_DIET)",
          "",
          "---------------"
        ],
        "tests/test_arm.c||tests/test_arm.c": [
          "File: tests/test_arm.c -> tests/test_arm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:     printf(\"\\t\\toperands[%u].type: IMM = 0x%x\\n\", i, op->imm);",
          "57:     break;",
          "58:    case ARM_OP_FP:",
          "59:     printf(\"\\t\\toperands[%u].type: FP = %f\\n\", i, op->fp);",
          "60:     break;",
          "61:    case ARM_OP_MEM:",
          "62:     printf(\"\\t\\toperands[%u].type: MEM\\n\", i);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: #if defined(_KERNEL_MODE)",
          "61:     printf(\"\\t\\toperands[%u].type: FP = <float_point_unsupported>\\n\", i);",
          "62: #else",
          "64: #endif",
          "",
          "---------------"
        ],
        "tests/test_arm64.c||tests/test_arm64.c": [
          "File: tests/test_arm64.c -> tests/test_arm64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     printf(\"\\t\\toperands[%u].type: IMM = 0x%\" PRIx64 \"\\n\", i, op->imm);",
          "55:     break;",
          "56:    case ARM64_OP_FP:",
          "57:     printf(\"\\t\\toperands[%u].type: FP = %f\\n\", i, op->fp);",
          "58:     break;",
          "59:    case ARM64_OP_MEM:",
          "60:     printf(\"\\t\\toperands[%u].type: MEM\\n\", i);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: #if defined(_KERNEL_MODE)",
          "59:     printf(\"\\t\\toperands[%u].type: FP = <float_point_unsupported>\\n\", i);",
          "60: #else",
          "62: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9f78ef2f7072c316377fa4bd8abf5c569fb3ff01",
      "candidate_info": {
        "commit_hash": "9f78ef2f7072c316377fa4bd8abf5c569fb3ff01",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9f78ef2f7072c316377fa4bd8abf5c569fb3ff01",
        "files": [
          "bindings/python/prebuilt/.gitkeep",
          "bindings/python/setup.py"
        ],
        "message": "Add ability to copy prebuilt libraries from prebuilt directory during python build",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:     # copy public headers",
          "121:     shutil.copytree(os.path.join(BUILD_DIR, 'include', 'capstone'), os.path.join(HEADERS_DIR, 'capstone'))",
          "123:     os.chdir(BUILD_DIR)",
          "125:     # platform description refers at https://docs.python.org/2/library/sys.html#sys.platform",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:     # if prebuilt libraries are available, use those and cancel build",
          "124:     if os.path.exists(os.path.join(ROOT_DIR, 'prebuilt', LIBRARY_FILE)) and \\",
          "125:             (not STATIC_LIBRARY_FILE or os.path.exists(os.path.join(ROOT_DIR, 'prebuilt', STATIC_LIBRARY_FILE))):",
          "126:         shutil.copy(os.path.join(ROOT_DIR, 'prebuilt', LIBRARY_FILE), LIBS_DIR)",
          "127:         if STATIC_LIBRARY_FILE is not None:",
          "128:             shutil.copy(os.path.join(ROOT_DIR, 'prebuilt', STATIC_LIBRARY_FILE), LIBS_DIR)",
          "129:         return",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "13271a9c7f211adfa38ee533b34c0b8c83da0a64",
      "candidate_info": {
        "commit_hash": "13271a9c7f211adfa38ee533b34c0b8c83da0a64",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/13271a9c7f211adfa38ee533b34c0b8c83da0a64",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: fix mips64 mode",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:  if (!strcmp(mode, \"armb\") || !strcmp(mode, \"armbe\") ) {",
          "193:   arch = CS_ARCH_ARM;",
          "195:  }",
          "197:  if (!strcmp(mode, \"arml\")) {",
          "198:   arch = CS_ARCH_ARM;",
          "200:  }",
          "202:  if (!strcmp(mode, \"thumb\")) {",
          "203:   arch = CS_ARCH_ARM;",
          "205:  }",
          "207:  if (!strcmp(mode, \"thumbbe\")) {",
          "208:   arch = CS_ARCH_ARM;",
          "210:  }",
          "212:  if (!strcmp(mode, \"thumble\")) {",
          "213:   arch = CS_ARCH_ARM;",
          "215:  }",
          "217:  if (!strcmp(mode, \"arm64\")) {",
          "",
          "[Removed Lines]",
          "194:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_BIG_ENDIAN, &handle);",
          "199:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_LITTLE_ENDIAN, &handle);",
          "204:   err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB + CS_MODE_LITTLE_ENDIAN, &handle);",
          "209:   err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB + CS_MODE_BIG_ENDIAN, &handle);",
          "214:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM + CS_MODE_LITTLE_ENDIAN, &handle);",
          "",
          "[Added Lines]",
          "194:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_BIG_ENDIAN, &handle);",
          "199:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_LITTLE_ENDIAN, &handle);",
          "204:   err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB | CS_MODE_LITTLE_ENDIAN, &handle);",
          "209:   err = cs_open(CS_ARCH_ARM, CS_MODE_THUMB | CS_MODE_BIG_ENDIAN, &handle);",
          "214:   err = cs_open(CS_ARCH_ARM, CS_MODE_ARM | CS_MODE_LITTLE_ENDIAN, &handle);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "222:  if (!strcmp(mode, \"mips\")) {",
          "223:   arch = CS_ARCH_MIPS;",
          "225:  }",
          "227:  if (!strcmp(mode, \"mipsbe\")) {",
          "228:   arch = CS_ARCH_MIPS;",
          "230:  }",
          "232:  if (!strcmp(mode, \"mips64\")) {",
          "233:   arch = CS_ARCH_MIPS;",
          "235:  }",
          "237:  if (!strcmp(mode, \"mips64be\")) {",
          "238:   arch = CS_ARCH_MIPS;",
          "240:  }",
          "242:  if (!strcmp(mode, \"x16\")) {",
          "",
          "[Removed Lines]",
          "224:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 + CS_MODE_LITTLE_ENDIAN, &handle);",
          "229:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 + CS_MODE_BIG_ENDIAN, &handle);",
          "234:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 + CS_MODE_BIG_ENDIAN, &handle);",
          "239:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 + CS_MODE_BIG_ENDIAN, &handle);",
          "",
          "[Added Lines]",
          "224:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 | CS_MODE_LITTLE_ENDIAN, &handle);",
          "229:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS32 | CS_MODE_BIG_ENDIAN, &handle);",
          "234:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 | CS_MODE_LITTLE_ENDIAN, &handle);",
          "239:   err = cs_open(CS_ARCH_MIPS, CS_MODE_MIPS64 | CS_MODE_BIG_ENDIAN, &handle);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "287:  if (!strcmp(mode,\"ppc64\")) {",
          "288:   arch = CS_ARCH_PPC;",
          "290:  }",
          "292:  if (!strcmp(mode,\"ppc64be\")) {",
          "293:   arch = CS_ARCH_PPC;",
          "295:  }",
          "297:  if (!strcmp(mode,\"sparc\")) {",
          "",
          "[Removed Lines]",
          "289:   err = cs_open(CS_ARCH_PPC, CS_MODE_64+CS_MODE_LITTLE_ENDIAN, &handle);",
          "294:   err = cs_open(CS_ARCH_PPC,CS_MODE_64+CS_MODE_BIG_ENDIAN, &handle);",
          "",
          "[Added Lines]",
          "289:   err = cs_open(CS_ARCH_PPC, CS_MODE_64 | CS_MODE_LITTLE_ENDIAN, &handle);",
          "294:   err = cs_open(CS_ARCH_PPC,CS_MODE_64 | CS_MODE_BIG_ENDIAN, &handle);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9f6b28cc0b17bbade880c3eb472f490350598fc6",
      "candidate_info": {
        "commit_hash": "9f6b28cc0b17bbade880c3eb472f490350598fc6",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9f6b28cc0b17bbade880c3eb472f490350598fc6",
        "files": [
          "arch/AArch64/AArch64Mapping.c",
          "arch/ARM/ARMMapping.c",
          "arch/M68K/M68KInstPrinter.c",
          "arch/Mips/MipsMapping.c",
          "arch/X86/X86Mapping.c"
        ],
        "message": "Add name to relative branch group in supported architectures. (#982)",
        "before_after_code_files": [
          "arch/AArch64/AArch64Mapping.c||arch/AArch64/AArch64Mapping.c",
          "arch/ARM/ARMMapping.c||arch/ARM/ARMMapping.c",
          "arch/M68K/M68KInstPrinter.c||arch/M68K/M68KInstPrinter.c",
          "arch/Mips/MipsMapping.c||arch/Mips/MipsMapping.c",
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64Mapping.c||arch/AArch64/AArch64Mapping.c": [
          "File: arch/AArch64/AArch64Mapping.c -> arch/AArch64/AArch64Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "836:  { ARM64_GRP_RET, \"return\" },",
          "837:  { ARM64_GRP_PRIVILEGE, \"privilege\" },",
          "838:  { ARM64_GRP_INT, \"int\" },",
          "841:  { ARM64_GRP_CRYPTO, \"crypto\" },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "839:  { ARM64_GRP_BRANCH_RELATIVE, \"branch_relative\" },",
          "",
          "---------------"
        ],
        "arch/ARM/ARMMapping.c||arch/ARM/ARMMapping.c": [
          "File: arch/ARM/ARMMapping.c -> arch/ARM/ARMMapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "772:  { ARM_GRP_CALL, \"call\" },",
          "773:  { ARM_GRP_INT, \"int\" },",
          "774:  { ARM_GRP_PRIVILEGE, \"privilege\" },",
          "777:  { ARM_GRP_CRYPTO, \"crypto\" },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "775:  { ARM_GRP_BRANCH_RELATIVE, \"branch_relative\" },",
          "",
          "---------------"
        ],
        "arch/M68K/M68KInstPrinter.c||arch/M68K/M68KInstPrinter.c": [
          "File: arch/M68K/M68KInstPrinter.c -> arch/M68K/M68KInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350:  { M68K_GRP_JUMP, \"jump\" },",
          "351:  { M68K_GRP_RET , \"ret\" },",
          "352:  { M68K_GRP_IRET, \"iret\" },",
          "353: };",
          "354: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "353:  { M68K_GRP_BRANCH_RELATIVE, \"branch_relative\" },",
          "",
          "---------------"
        ],
        "arch/Mips/MipsMapping.c||arch/Mips/MipsMapping.c": [
          "File: arch/Mips/MipsMapping.c -> arch/Mips/MipsMapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "907:  { MIPS_GRP_INT, \"int\" },",
          "908:  { MIPS_GRP_IRET, \"iret\" },",
          "909:  { MIPS_GRP_PRIVILEGE, \"privileged\" },",
          "912:  { MIPS_GRP_BITCOUNT, \"bitcount\" },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "910:  { MIPS_GRP_BRANCH_RELATIVE, \"branch_relative\" },",
          "",
          "---------------"
        ],
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2377:  { X86_GRP_INT, \"int\" },",
          "2378:  { X86_GRP_IRET, \"iret\" },",
          "2379:  { X86_GRP_PRIVILEGE, \"privilege\" },",
          "2382:  { X86_GRP_VM, \"vm\" },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2380:  { X86_GRP_BRANCH_RELATIVE, \"branch_relative\" },",
          "",
          "---------------"
        ]
      }
    }
  ]
}