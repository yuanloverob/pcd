{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "03f3575c39cfc81552ee05a93b856d3b69048114",
      "candidate_info": {
        "commit_hash": "03f3575c39cfc81552ee05a93b856d3b69048114",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/03f3575c39cfc81552ee05a93b856d3b69048114",
        "files": [
          "crypto/rand/rand_egd.c"
        ],
        "message": "Fixed the return code for RAND_egd_bytes.\n\nAccording to the documentation, the return code should be -1 when\nRAND_status does not return 1.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1886)\n(cherry picked from commit 3ed93c863374125296954edcbc595599adbd07ea)",
        "before_after_code_files": [
          "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c": [
          "File: crypto/rand/rand_egd.c -> crypto/rand/rand_egd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229: int RAND_egd_bytes(const char *path, int bytes)",
          "230: {",
          "233:     num = RAND_query_egd_bytes(path, NULL, bytes);",
          "235:         ret = num;",
          "236:  err:",
          "237:     return (ret);",
          "",
          "[Removed Lines]",
          "231:     int num, ret = 0;",
          "234:     if (num < 1 || RAND_status() == 1)",
          "",
          "[Added Lines]",
          "231:     int num, ret = -1;",
          "234:     if (RAND_status() == 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7aadf8b878501b512127200443041bba8361bbf",
      "candidate_info": {
        "commit_hash": "a7aadf8b878501b512127200443041bba8361bbf",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a7aadf8b878501b512127200443041bba8361bbf",
        "files": [
          "doc/apps/CA.pl.pod",
          "doc/apps/ca.pod",
          "doc/apps/ciphers.pod",
          "doc/apps/cms.pod",
          "doc/apps/crl.pod",
          "doc/apps/crl2pkcs7.pod",
          "doc/apps/dsa.pod",
          "doc/apps/ec.pod",
          "doc/apps/errstr.pod",
          "doc/apps/nseq.pod",
          "doc/apps/ocsp.pod",
          "doc/apps/openssl.pod",
          "doc/apps/pkcs12.pod",
          "doc/apps/pkcs7.pod",
          "doc/apps/pkcs8.pod",
          "doc/apps/pkey.pod",
          "doc/apps/pkeyparam.pod",
          "doc/apps/pkeyutl.pod",
          "doc/apps/req.pod",
          "doc/apps/rsa.pod",
          "doc/apps/rsautl.pod",
          "doc/apps/sess_id.pod",
          "doc/apps/smime.pod",
          "doc/apps/spkac.pod",
          "doc/apps/verify.pod",
          "doc/crypto/ERR_GET_LIB.pod",
          "doc/crypto/EVP_EncryptInit.pod",
          "doc/crypto/SSL_set_bio.pod",
          "util/find-doc-nits.pl"
        ],
        "message": "Fix various doc nits.\n\nDon't use regexps for section names, just strings:  More consistency.\nRename \"COMMAND OPTIONS\" to OPTIONS.\nFix a couple of other nit-level things.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2076)\n(cherry picked from commit 3dfda1a6363c0cf4efee94754a36c2d86be190c3)",
        "before_after_code_files": [
          "util/find-doc-nits.pl||util/find-doc-nits.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/find-doc-nits.pl||util/find-doc-nits.pl": [
          "File: util/find-doc-nits.pl -> util/find-doc-nits.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: my %mandatory_sections =",
          "24:     ( '*'    => [ 'NAME', 'DESCRIPTION', 'COPYRIGHT' ],",
          "27:       5      => [ ],",
          "28:       7      => [ ] );",
          "29: my %default_sections =",
          "",
          "[Removed Lines]",
          "25:       1      => [ 'SYNOPSIS', '(COMMAND\\s+)?OPTIONS' ],",
          "26:       3      => [ 'SYNOPSIS', 'RETURN\\s+VALUES' ],",
          "",
          "[Added Lines]",
          "25:       1      => [ 'SYNOPSIS', 'OPTIONS' ],",
          "26:       3      => [ 'SYNOPSIS', 'RETURN VALUES' ],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "162:     }",
          "164:     foreach ((@{$mandatory_sections{'*'}}, @{$mandatory_sections{$section}})) {",
          "166:             if $contents !~ /^=head1\\s+${_}\\s*$/m;",
          "167:     }",
          "",
          "[Removed Lines]",
          "165:         print \"$id doesn't have a head1 section matching $_\\n\"",
          "",
          "[Added Lines]",
          "165:         print \"$id: missing $_ head1 section\\n\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "654f7f6be617d2be316b3d60f593767105a9859a",
      "candidate_info": {
        "commit_hash": "654f7f6be617d2be316b3d60f593767105a9859a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/654f7f6be617d2be316b3d60f593767105a9859a",
        "files": [
          "crypto/bio/b_addr.c"
        ],
        "message": "bio/b_addr.c: omit private hstrerror.\n\nPrivate hstrerror was introduced to address linking problem on HP-UX,\nbut truth be told conemporary systems, HP-UX included, wouldn't come\nto that call, they would use getaddrinfo and gai_strerror, while\ngethostbyname and h_errno are there to serve legacy systems. Since\nlegacy systems are naturally disappearing breed, we can as well just\nlet user interpret number.\n\nGH#2816\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit 3e49ee23eab5c3fa57d14dc5f82f50cbea718322)",
        "before_after_code_files": [
          "crypto/bio/b_addr.c||crypto/bio/b_addr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/b_addr.c||crypto/bio/b_addr.c": [
          "File: crypto/bio/b_addr.c -> crypto/bio/b_addr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include <internal/thread_once.h>",
          "19: #include <ctype.h>",
          "45: CRYPTO_RWLOCK *bio_lookup_lock;",
          "46: static CRYPTO_ONCE bio_lookup_init = CRYPTO_ONCE_STATIC_INIT;",
          "",
          "[Removed Lines]",
          "21: #ifdef _HPUX_SOURCE",
          "22: static const char *ossl_hstrerror(int herr)",
          "23: {",
          "24:     switch (herr) {",
          "25:     case -1:",
          "26:         return strerror(errno);",
          "27:     case 0:",
          "28:         return \"No error\";",
          "29:     case HOST_NOT_FOUND:",
          "30:         return \"Host not found\";",
          "32:         return \"No data\";",
          "33:     case NO_RECOVERY:",
          "34:         return \"Non recoverable error\";",
          "35:     case TRY_AGAIN:",
          "36:         return \"Try again\";",
          "37:     default:",
          "38:         break;",
          "39:     }",
          "40:     return \"unknown error\";",
          "41: }",
          "42: # define hstrerror(e) ossl_hstrerror(e)",
          "43: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "688:         return 0;",
          "690:     if (1) {",
          "692: #ifdef AI_PASSIVE",
          "693:         struct addrinfo hints;",
          "694:         memset(&hints, 0, sizeof hints);",
          "696:         hints.ai_family = family;",
          "",
          "[Removed Lines]",
          "691:         int gai_ret = 0;",
          "",
          "[Added Lines]",
          "668:         int gai_ret = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "781:             if (he == NULL) {",
          "782: #ifndef OPENSSL_SYS_WINDOWS",
          "785: #else",
          "786:                 SYSerr(SYS_F_GETHOSTBYNAME, WSAGetLastError());",
          "787: #endif",
          "",
          "[Removed Lines]",
          "783:                 BIOerr(BIO_F_BIO_LOOKUP, ERR_R_SYS_LIB);",
          "784:                 ERR_add_error_data(1, hstrerror(h_errno));",
          "",
          "[Added Lines]",
          "771:                 SYSerr(SYS_F_GETHOSTBYNAME, 1000 + h_errno);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "831:                 if (se == NULL) {",
          "832: #ifndef OPENSSL_SYS_WINDOWS",
          "835: #else",
          "836:                     SYSerr(SYS_F_GETSERVBYNAME, WSAGetLastError());",
          "837: #endif",
          "",
          "[Removed Lines]",
          "833:                     BIOerr(BIO_F_BIO_LOOKUP, ERR_R_SYS_LIB);",
          "834:                     ERR_add_error_data(1, hstrerror(h_errno));",
          "",
          "[Added Lines]",
          "820:                     SYSerr(SYS_F_GETSERVBYNAME, errno);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dd512a93902379364276588deb30ba03bf7f3b2d",
      "candidate_info": {
        "commit_hash": "dd512a93902379364276588deb30ba03bf7f3b2d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dd512a93902379364276588deb30ba03bf7f3b2d",
        "files": [
          "Configurations/10-main.conf"
        ],
        "message": "Configurations/10-main.conf: document GCC for Solaris config constraint.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit fe9e5b9ccce175d296c904486a29218c879adb73)",
        "before_after_code_files": [
          "Configurations/10-main.conf||Configurations/10-main.conf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/10-main.conf||Configurations/10-main.conf": [
          "File: Configurations/10-main.conf -> Configurations/10-main.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:     },",
          "188: #### Solaris x86 with GNU C setups",
          "189:     \"solaris-x86-gcc\" => {",
          "190:         # -DOPENSSL_NO_INLINE_ASM switches off inline assembler. We have",
          "191:         # to do it here because whenever GNU C instantiates an assembler",
          "192:         # template it surrounds it with #APP #NO_APP comment pair which",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190:         # NB. GNU C has to be configured to use GNU assembler, and not",
          "191:         # /usr/ccs/bin/as. Failure to comply will result in compile",
          "192:         # failures [at least] in 32-bit build.",
          "193:         # [Above statement is in direct contradition with one below.",
          "194:         #  Latter is kept, because it's formally inappropriate to",
          "195:         #  modify compile flags in letter release.]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37e4be4a8612958848c1cbe2e6c2f9d97aaa4cca",
      "candidate_info": {
        "commit_hash": "37e4be4a8612958848c1cbe2e6c2f9d97aaa4cca",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/37e4be4a8612958848c1cbe2e6c2f9d97aaa4cca",
        "files": [
          "e_os.h",
          "include/openssl/e_os2.h",
          "test/build.info",
          "test/ssltestlib.c"
        ],
        "message": "Move PRIu64 to e_os.h\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3061)",
        "before_after_code_files": [
          "e_os.h||e_os.h",
          "include/openssl/e_os2.h||include/openssl/e_os2.h",
          "test/build.info||test/build.info",
          "test/ssltestlib.c||test/ssltestlib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "e_os.h||e_os.h": [
          "File: e_os.h -> e_os.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #  endif",
          "30: # endif",
          "32: # if !defined(NDEBUG) && !defined(OPENSSL_NO_STDIO)",
          "33: #  define REF_ASSERT_ISNT(test) \\",
          "34:     (void)((test) ? (OPENSSL_die(\"refcount error\", __FILE__, __LINE__), 1) : 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: # if defined(OPENSSL_SYS_UEFI)",
          "37: #  define PRIu64 \"Lu\"",
          "38: # endif",
          "39: # ifndef PRIu64",
          "40: #  ifdef SIXTY_FOUR_BIT_LONG",
          "41: #   define PRIu64 \"lu\"",
          "42: #  else",
          "43: #   define PRIu64 \"llu\"",
          "44: #  endif",
          "45: # endif",
          "",
          "---------------"
        ],
        "include/openssl/e_os2.h||include/openssl/e_os2.h": [
          "File: include/openssl/e_os2.h -> include/openssl/e_os2.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "242: typedef UINT32 uint32_t;",
          "243: typedef INT64 int64_t;",
          "244: typedef UINT64 uint64_t;",
          "246: # elif (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \\",
          "247:      defined(__osf__) || defined(__sgi) || defined(__hpux) || \\",
          "248:      defined(OPENSSL_SYS_VMS) || defined (__OpenBSD__)",
          "",
          "[Removed Lines]",
          "245: #  define PRIu64 \"%Lu\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "264: #  include <stdint.h>",
          "265: # endif",
          "280: # if !defined(inline) && !defined(__cplusplus)",
          "281: #  if defined(__STDC_VERSION__) && __STDC_VERSION__>=199901L",
          "",
          "[Removed Lines]",
          "271: # ifndef PRIu64",
          "272: #  ifdef SIXTY_FOUR_BIT_LONG",
          "273: #   define PRIu64 \"lu\"",
          "274: #  else",
          "275: #   define PRIu64 \"llu\"",
          "276: #  endif",
          "277: # endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/build.info||test/build.info": [
          "File: test/build.info -> test/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "257:   INCLUDE[testutil.o]=..",
          "258:   INCLUDE[ssl_test_ctx.o]=../include",
          "259:   INCLUDE[handshake_helper.o]=../include",
          "262:   SOURCE[x509aux]=x509aux.c",
          "263:   INCLUDE[x509aux]=../include",
          "",
          "[Removed Lines]",
          "260:   INCLUDE[ssltestlib.o]=../include",
          "",
          "[Added Lines]",
          "260:   INCLUDE[ssltestlib.o]=.. ../include",
          "",
          "---------------"
        ],
        "test/ssltestlib.c||test/ssltestlib.c": [
          "File: test/ssltestlib.c -> test/ssltestlib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <string.h>",
          "12: #include \"ssltestlib.h\"",
          "14: static int tls_dump_new(BIO *bi);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: #include \"e_os.h\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}