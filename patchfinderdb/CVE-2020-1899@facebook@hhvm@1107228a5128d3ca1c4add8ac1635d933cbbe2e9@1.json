{
  "cve_id": "CVE-2020-1899",
  "cve_desc": "The unserialize() function supported a type code, \"S\", which was meant to be supported only for APC serialization. This type code allowed arbitrary memory addresses to be accessed as if they were static StringData objects. This issue affected HHVM prior to v4.32.3, between versions 4.33.0 and 4.56.0, 4.57.0, 4.58.0, 4.58.1, 4.59.0, 4.60.0, 4.61.0, 4.62.0.",
  "repo": "facebook/hhvm",
  "patch_hash": "1107228a5128d3ca1c4add8ac1635d933cbbe2e9",
  "patch_info": {
    "commit_hash": "1107228a5128d3ca1c4add8ac1635d933cbbe2e9",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/1107228a5128d3ca1c4add8ac1635d933cbbe2e9",
    "files": [
      "hphp/runtime/base/variable-unserializer.cpp",
      "hphp/test/slow/serialization/no-apc-string-pointer.php",
      "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
    ],
    "message": "CVE-2020-1899\n\nVariableUnserializer should only recognize type 'S' in APCSerialization mode",
    "before_after_code_files": [
      "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
      "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
      "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
    ]
  },
  "patch_diff": {
    "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp": [
      "File: hphp/runtime/base/variable-unserializer.cpp -> hphp/runtime/base/variable-unserializer.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "485:   const char* p = m_buf;",
      "486:   assertx(p <= m_end);",
      "487:   int total = 0;",
      "489:     total = 2 + 8 + 1;",
      "490:     if (p + total > m_end) return false;",
      "491:     p++;",
      "",
      "[Removed Lines]",
      "488:   if (*p == 'S') {",
      "",
      "[Added Lines]",
      "488:   if (*p == 'S' && type() == VariableUnserializer::Type::APCSerialize) {",
      "",
      "---------------"
    ],
    "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php": [
      "File: hphp/test/slow/serialization/no-apc-string-pointer.php -> hphp/test/slow/serialization/no-apc-string-pointer.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?hh",
      "4: class Foo {",
      "5:   public $name;",
      "6: }",
      "8: <<__EntryPoint>>",
      "9: function main() {",
      "10:   var_dump(unserialize(\"O:3:\\\"foo\\\":1:{S:\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00;s:5:\\\"value\\\";}\"));",
      "11: }",
      "",
      "---------------"
    ],
    "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf": [
      "File: hphp/test/slow/serialization/no-apc-string-pointer.php.expectf -> hphp/test/slow/serialization/no-apc-string-pointer.php.expectf",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: Notice: Unable to unserialize: [O:3:\"foo\":1:{S:]. Unknown type 'S'. in %s/no-apc-string-pointer.php on line 10",
      "2: bool(false)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "14f1b78a1f853c4abe7188346dee322be79473e3",
      "candidate_info": {
        "commit_hash": "14f1b78a1f853c4abe7188346dee322be79473e3",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/14f1b78a1f853c4abe7188346dee322be79473e3",
        "files": [
          "hphp/runtime/base/variable-unserializer.cpp",
          "hphp/test/slow/serialization/no-apc-string-pointer.php",
          "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
        ],
        "message": "CVE-2020-1899\n\nVariableUnserializer should only recognize type 'S' in APCSerialization mode",
        "before_after_code_files": [
          "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
          "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
          "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
            "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
            "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
          ],
          "candidate": [
            "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
            "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
            "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp": [
          "File: hphp/runtime/base/variable-unserializer.cpp -> hphp/runtime/base/variable-unserializer.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "485:   const char* p = m_buf;",
          "486:   assertx(p <= m_end);",
          "487:   int total = 0;",
          "489:     total = 2 + 8 + 1;",
          "490:     if (p + total > m_end) return false;",
          "491:     p++;",
          "",
          "[Removed Lines]",
          "488:   if (*p == 'S') {",
          "",
          "[Added Lines]",
          "488:   if (*p == 'S' && type() == VariableUnserializer::Type::APCSerialize) {",
          "",
          "---------------"
        ],
        "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php": [
          "File: hphp/test/slow/serialization/no-apc-string-pointer.php -> hphp/test/slow/serialization/no-apc-string-pointer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?hh",
          "4: class Foo {",
          "5:   public $name;",
          "6: }",
          "8: <<__EntryPoint>>",
          "9: function main() {",
          "10:   var_dump(unserialize(\"O:3:\\\"foo\\\":1:{S:\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00;s:5:\\\"value\\\";}\"));",
          "11: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf": [
          "File: hphp/test/slow/serialization/no-apc-string-pointer.php.expectf -> hphp/test/slow/serialization/no-apc-string-pointer.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: Notice: Unable to unserialize: [O:3:\"foo\":1:{S:]. Unknown type 'S'. in %s/no-apc-string-pointer.php on line 10",
          "2: bool(false)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f6825745bbb24e144f3afce25ee449007d8cca31",
      "candidate_info": {
        "commit_hash": "f6825745bbb24e144f3afce25ee449007d8cca31",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/f6825745bbb24e144f3afce25ee449007d8cca31",
        "files": [
          "hphp/runtime/base/variable-unserializer.cpp",
          "hphp/test/slow/serialization/no-apc-string-pointer.php",
          "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
        ],
        "message": "CVE-2020-1899\n\nVariableUnserializer should only recognize type 'S' in APCSerialization mode",
        "before_after_code_files": [
          "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
          "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
          "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
            "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
            "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
          ],
          "candidate": [
            "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
            "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
            "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp": [
          "File: hphp/runtime/base/variable-unserializer.cpp -> hphp/runtime/base/variable-unserializer.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "471:   const char* p = m_buf;",
          "472:   assertx(p <= m_end);",
          "473:   int total = 0;",
          "475:     total = 2 + 8 + 1;",
          "476:     if (p + total > m_end) return false;",
          "477:     p++;",
          "",
          "[Removed Lines]",
          "474:   if (*p == 'S') {",
          "",
          "[Added Lines]",
          "474:   if (*p == 'S' && type() == VariableUnserializer::Type::APCSerialize) {",
          "",
          "---------------"
        ],
        "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php": [
          "File: hphp/test/slow/serialization/no-apc-string-pointer.php -> hphp/test/slow/serialization/no-apc-string-pointer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?hh",
          "4: class Foo {",
          "5:   public $name;",
          "6: }",
          "8: <<__EntryPoint>>",
          "9: function main() {",
          "10:   var_dump(unserialize(\"O:3:\\\"foo\\\":1:{S:\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00;s:5:\\\"value\\\";}\"));",
          "11: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf": [
          "File: hphp/test/slow/serialization/no-apc-string-pointer.php.expectf -> hphp/test/slow/serialization/no-apc-string-pointer.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: Notice: Unable to unserialize: [O:3:\"foo\":1:{S:]. Unknown type 'S'. in %s/no-apc-string-pointer.php on line 10",
          "2: bool(false)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f609ed0c69fec12adcd3b1f9390eeb271222e98",
      "candidate_info": {
        "commit_hash": "1f609ed0c69fec12adcd3b1f9390eeb271222e98",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/1f609ed0c69fec12adcd3b1f9390eeb271222e98",
        "files": [
          "hphp/runtime/base/variable-unserializer.cpp",
          "hphp/test/slow/serialization/no-apc-string-pointer.php",
          "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
        ],
        "message": "CVE-2020-1899\n\nVariableUnserializer should only recognize type 'S' in APCSerialization mode",
        "before_after_code_files": [
          "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
          "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
          "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
            "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
            "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
          ],
          "candidate": [
            "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
            "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
            "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp": [
          "File: hphp/runtime/base/variable-unserializer.cpp -> hphp/runtime/base/variable-unserializer.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "471:   const char* p = m_buf;",
          "472:   assertx(p <= m_end);",
          "473:   int total = 0;",
          "475:     total = 2 + 8 + 1;",
          "476:     if (p + total > m_end) return false;",
          "477:     p++;",
          "",
          "[Removed Lines]",
          "474:   if (*p == 'S') {",
          "",
          "[Added Lines]",
          "474:   if (*p == 'S' && type() == VariableUnserializer::Type::APCSerialize) {",
          "",
          "---------------"
        ],
        "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php": [
          "File: hphp/test/slow/serialization/no-apc-string-pointer.php -> hphp/test/slow/serialization/no-apc-string-pointer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?hh",
          "4: class Foo {",
          "5:   public $name;",
          "6: }",
          "8: <<__EntryPoint>>",
          "9: function main() {",
          "10:   var_dump(unserialize(\"O:3:\\\"foo\\\":1:{S:\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00;s:5:\\\"value\\\";}\"));",
          "11: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf": [
          "File: hphp/test/slow/serialization/no-apc-string-pointer.php.expectf -> hphp/test/slow/serialization/no-apc-string-pointer.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: Notice: Unable to unserialize: [O:3:\"foo\":1:{S:]. Unknown type 'S'. in %s/no-apc-string-pointer.php on line 10",
          "2: bool(false)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39ffb39fb6017a5d58230a731e64990651e7e168",
      "candidate_info": {
        "commit_hash": "39ffb39fb6017a5d58230a731e64990651e7e168",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/39ffb39fb6017a5d58230a731e64990651e7e168",
        "files": [
          "hphp/runtime/base/variable-unserializer.cpp",
          "hphp/test/slow/serialization/no-apc-string-pointer.php",
          "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
        ],
        "message": "CVE-2020-1899\n\nVariableUnserializer should only recognize type 'S' in APCSerialization mode",
        "before_after_code_files": [
          "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
          "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
          "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
            "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
            "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
          ],
          "candidate": [
            "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp",
            "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php",
            "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/base/variable-unserializer.cpp||hphp/runtime/base/variable-unserializer.cpp": [
          "File: hphp/runtime/base/variable-unserializer.cpp -> hphp/runtime/base/variable-unserializer.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "471:   const char* p = m_buf;",
          "472:   assertx(p <= m_end);",
          "473:   int total = 0;",
          "475:     total = 2 + 8 + 1;",
          "476:     if (p + total > m_end) return false;",
          "477:     p++;",
          "",
          "[Removed Lines]",
          "474:   if (*p == 'S') {",
          "",
          "[Added Lines]",
          "474:   if (*p == 'S' && type() == VariableUnserializer::Type::APCSerialize) {",
          "",
          "---------------"
        ],
        "hphp/test/slow/serialization/no-apc-string-pointer.php||hphp/test/slow/serialization/no-apc-string-pointer.php": [
          "File: hphp/test/slow/serialization/no-apc-string-pointer.php -> hphp/test/slow/serialization/no-apc-string-pointer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?hh",
          "4: class Foo {",
          "5:   public $name;",
          "6: }",
          "8: <<__EntryPoint>>",
          "9: function main() {",
          "10:   var_dump(unserialize(\"O:3:\\\"foo\\\":1:{S:\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00;s:5:\\\"value\\\";}\"));",
          "11: }",
          "",
          "---------------"
        ],
        "hphp/test/slow/serialization/no-apc-string-pointer.php.expectf||hphp/test/slow/serialization/no-apc-string-pointer.php.expectf": [
          "File: hphp/test/slow/serialization/no-apc-string-pointer.php.expectf -> hphp/test/slow/serialization/no-apc-string-pointer.php.expectf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: Notice: Unable to unserialize: [O:3:\"foo\":1:{S:]. Unknown type 'S'. in %s/no-apc-string-pointer.php on line 10",
          "2: bool(false)",
          "",
          "---------------"
        ]
      }
    }
  ]
}