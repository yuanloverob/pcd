{
  "cve_id": "CVE-2013-7012",
  "cve_desc": "The get_siz function in libavcodec/jpeg2000dec.c in FFmpeg before 2.1 does not prevent attempts to use non-zero image offsets, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted JPEG2000 data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "780669ef7c23c00836a24921fcc6b03be2b8ca4a",
  "patch_info": {
    "commit_hash": "780669ef7c23c00836a24921fcc6b03be2b8ca4a",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/780669ef7c23c00836a24921fcc6b03be2b8ca4a",
    "files": [
      "libavcodec/jpeg2000dec.c"
    ],
    "message": "avcodec/jpeg2000dec: non zero image offsets are not supported\n\nFixes out of array accesses\nFixes Ticket3080\nFound-by: ami_stuff\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
      "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:     s->tile_offset_y  = bytestream2_get_be32u(&s->g); // YT0Siz",
      "244:     ncomponents       = bytestream2_get_be16u(&s->g); // CSiz",
      "246:     if (ncomponents <= 0) {",
      "247:         av_log(s->avctx, AV_LOG_ERROR, \"Invalid number of components: %d\\n\",",
      "248:                s->ncomponents);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "246:     if (s->image_offset_x || s->image_offset_y) {",
      "247:         avpriv_request_sample(s->avctx, \"Support for image offsets\");",
      "248:         return AVERROR_PATCHWELCOME;",
      "249:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b545d11d498c5a79d5cb2b8d7a9339467648e10d",
      "candidate_info": {
        "commit_hash": "b545d11d498c5a79d5cb2b8d7a9339467648e10d",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/b545d11d498c5a79d5cb2b8d7a9339467648e10d",
        "files": [
          "libavcodec/jpeg2000dec.c"
        ],
        "message": "avcodec/jpeg2000dec: non zero image offsets are not supported\n\nFixes out of array accesses\nFixes Ticket3080\nFound-by: ami_stuff\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 780669ef7c23c00836a24921fcc6b03be2b8ca4a)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ],
          "candidate": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
          "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "243:     s->tile_offset_y  = bytestream2_get_be32u(&s->g); // YT0Siz",
          "244:     ncomponents       = bytestream2_get_be16u(&s->g); // CSiz",
          "246:     if (ncomponents <= 0) {",
          "247:         av_log(s->avctx, AV_LOG_ERROR, \"Invalid number of components: %d\\n\",",
          "248:                s->ncomponents);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "246:     if (s->image_offset_x || s->image_offset_y) {",
          "247:         avpriv_request_sample(s->avctx, \"Support for image offsets\");",
          "248:         return AVERROR_PATCHWELCOME;",
          "249:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}