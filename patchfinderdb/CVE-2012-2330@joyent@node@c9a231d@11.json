{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "74872b0dc9c45e9f87f748d70c5d6d3e53f9b560",
      "candidate_info": {
        "commit_hash": "74872b0dc9c45e9f87f748d70c5d6d3e53f9b560",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/74872b0dc9c45e9f87f748d70c5d6d3e53f9b560",
        "files": [
          "deps/v8/build/common.gypi",
          "deps/v8/src/ia32/lithium-codegen-ia32.cc",
          "deps/v8/src/version.cc",
          "deps/v8/src/x64/lithium-codegen-x64.cc",
          "deps/v8/test/mjsunit/regress/regress-crbug-134055.js"
        ],
        "message": "v8: upgrade to version 3.11.10.12",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi",
          "deps/v8/src/ia32/lithium-codegen-ia32.cc||deps/v8/src/ia32/lithium-codegen-ia32.cc",
          "deps/v8/src/version.cc||deps/v8/src/version.cc",
          "deps/v8/src/x64/lithium-codegen-x64.cc||deps/v8/src/x64/lithium-codegen-x64.cc",
          "deps/v8/test/mjsunit/regress/regress-crbug-134055.js||deps/v8/test/mjsunit/regress/regress-crbug-134055.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:           'WIN32',",
          "240:         ],",
          "241:         'msvs_configuration_attributes': {",
          "242:           'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "243:           'CharacterSet': '1',",
          "244:         },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242:           'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "270:         'target_conditions': [",
          "271:           ['_toolset==\"host\"', {",
          "272:             'variables': {",
          "274:             },",
          "275:             'cflags': [ '<(m32flag)' ],",
          "276:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "273:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "274:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "280:           }],",
          "281:           ['_toolset==\"target\"', {",
          "282:             'variables': {",
          "284:             },",
          "285:             'cflags': [ '<(m32flag)' ],",
          "286:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "283:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "284:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "323:         },",
          "324:         'conditions': [",
          "325:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "327:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "328:           }],",
          "329:         ],",
          "",
          "[Removed Lines]",
          "326:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "327:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "---------------"
        ],
        "deps/v8/src/ia32/lithium-codegen-ia32.cc||deps/v8/src/ia32/lithium-codegen-ia32.cc": [
          "File: deps/v8/src/ia32/lithium-codegen-ia32.cc -> deps/v8/src/ia32/lithium-codegen-ia32.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2365:   Handle<Map> map = list->at(i);",
          "2366:   map->LookupInDescriptors(NULL, *name, &lookup);",
          "2367:   return lookup.IsFound() &&",
          "2368:       (lookup.type() == FIELD || lookup.type() == CONSTANT_FUNCTION);",
          "",
          "[Removed Lines]",
          "2362: static bool CompactEmit(",
          "2363:     SmallMapList* list, Handle<String> name, int i, Isolate* isolate) {",
          "2364:   LookupResult lookup(isolate);",
          "",
          "[Added Lines]",
          "2362: static bool CompactEmit(SmallMapList* list,",
          "2363:                         Handle<String> name,",
          "2364:                         int i,",
          "2365:                         Isolate* isolate) {",
          "2369:   if (map->elements_transition_map() != NULL) return false;",
          "2370:   LookupResult lookup(isolate);",
          "",
          "---------------"
        ],
        "deps/v8/src/version.cc||deps/v8/src/version.cc": [
          "File: deps/v8/src/version.cc -> deps/v8/src/version.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define MAJOR_VERSION     3",
          "36: #define MINOR_VERSION     11",
          "37: #define BUILD_NUMBER      10",
          "41: #define IS_CANDIDATE_VERSION 0",
          "",
          "[Removed Lines]",
          "38: #define PATCH_LEVEL       10",
          "",
          "[Added Lines]",
          "38: #define PATCH_LEVEL       12",
          "",
          "---------------"
        ],
        "deps/v8/src/x64/lithium-codegen-x64.cc||deps/v8/src/x64/lithium-codegen-x64.cc": [
          "File: deps/v8/src/x64/lithium-codegen-x64.cc -> deps/v8/src/x64/lithium-codegen-x64.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2241:   Handle<Map> map = list->at(i);",
          "2242:   map->LookupInDescriptors(NULL, *name, &lookup);",
          "2243:   return lookup.IsFound() &&",
          "2244:       (lookup.type() == FIELD || lookup.type() == CONSTANT_FUNCTION);",
          "",
          "[Removed Lines]",
          "2238: static bool CompactEmit(",
          "2239:     SmallMapList* list, Handle<String> name, int i, Isolate* isolate) {",
          "2240:   LookupResult lookup(isolate);",
          "",
          "[Added Lines]",
          "2238: static bool CompactEmit(SmallMapList* list,",
          "2239:                         Handle<String> name,",
          "2240:                         int i,",
          "2241:                         Isolate* isolate) {",
          "2245:   if (map->elements_transition_map() != NULL) return false;",
          "2246:   LookupResult lookup(isolate);",
          "",
          "---------------"
        ],
        "deps/v8/test/mjsunit/regress/regress-crbug-134055.js||deps/v8/test/mjsunit/regress/regress-crbug-134055.js": [
          "File: deps/v8/test/mjsunit/regress/regress-crbug-134055.js -> deps/v8/test/mjsunit/regress/regress-crbug-134055.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: function crash(obj) {",
          "31:   return obj.foo;",
          "32: }",
          "34: function base(number_of_properties) {",
          "35:   var result = new Array();",
          "36:   for (var i = 0; i < number_of_properties; i++) {",
          "37:     result[\"property\" + i] = \"value\" + i;",
          "38:   }",
          "39:   result.foo = number_of_properties;",
          "40:   return result;",
          "41: }",
          "43: var a = base(12);",
          "44: var b = base(13);",
          "45: var c = base(14);",
          "46: var d = base(15);",
          "48: crash(a);  // Premonomorphic.",
          "49: crash(a);",
          "50: crash(b);",
          "51: crash(c);",
          "52: crash(d);  // Polymorphic, degree 4.",
          "55: var x = base(13);",
          "56: x[0] = \"object\";",
          "57: x = base(14);",
          "58: x[0] = \"object\";",
          "59: x = base(15);",
          "60: x[0] = \"object\";",
          "62: %OptimizeFunctionOnNextCall(crash);",
          "63: crash(a);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ae6d8fee345bdbc6f94e38eee57b60d231288eb",
      "candidate_info": {
        "commit_hash": "9ae6d8fee345bdbc6f94e38eee57b60d231288eb",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9ae6d8fee345bdbc6f94e38eee57b60d231288eb",
        "files": [
          "lib/http.js",
          "test/simple/test-http-client-pipe-end.js"
        ],
        "message": "http: fix client request.end() EPIPE race\n\nrequest.end() would sometimes try to write a zero-length buffer to the socket.\nDon't do that, it triggers an unnecessary EPIPE when the other end has closed\nthe connection.\n\nFixes #3257.",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "test/simple/test-http-client-pipe-end.js||test/simple/test-http-client-pipe-end.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "477: OutgoingMessage.prototype._writeRaw = function(data, encoding) {",
          "478:   if (this.connection &&",
          "479:       this.connection._httpMessage === this &&",
          "480:       this.connection.writable) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-http-client-pipe-end.js||test/simple/test-http-client-pipe-end.js": [
          "File: test/simple/test-http-client-pipe-end.js -> test/simple/test-http-client-pipe-end.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: var common = require('../common');",
          "25: var assert = require('assert');",
          "26: var http = require('http');",
          "28: var server = http.createServer(function(req, res) {",
          "29:   req.once('end', function() {",
          "30:     res.writeHead(200);",
          "31:     res.end();",
          "32:     server.close();",
          "33:   });",
          "34: });",
          "36: server.listen(common.PIPE, function() {",
          "37:   var req = http.request({",
          "38:     socketPath: common.PIPE,",
          "39:     headers: {'Content-Length':'1'},",
          "40:     method: 'POST',",
          "41:     path: '/'",
          "42:   });",
          "44:   req.write('.');",
          "46:   sched(function() { req.end() }, 5);",
          "47: });",
          "50: function sched(cb, ticks) {",
          "51:   function fn() {",
          "52:     if (--ticks)",
          "53:       process.nextTick(fn);",
          "54:     else",
          "55:       cb();",
          "56:   }",
          "57:   process.nextTick(fn);",
          "58: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2afd20b5425e62c3019278d6682b62171664f456",
      "candidate_info": {
        "commit_hash": "2afd20b5425e62c3019278d6682b62171664f456",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2afd20b5425e62c3019278d6682b62171664f456",
        "files": [
          "deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv.h",
          "deps/uv/src/unix/uv-eio.c",
          "deps/uv/test/test-list.h",
          "deps/uv/test/test-thread.c"
        ],
        "message": "uv: upgrade to 85f6b79",
        "before_after_code_files": [
          "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/unix/uv-eio.c||deps/uv/src/unix/uv-eio.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/test/test-thread.c||deps/uv/test/test-thread.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h": [
          "File: deps/uv/include/uv-private/uv-unix.h -> deps/uv/include/uv-private/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:   ev_timer timer; \\",
          "66:   struct ev_loop* ev;",
          "68: #define UV_REQ_BUFSML_SIZE (4)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:   eio_channel uv_eio_channel; \\",
          "",
          "---------------"
        ],
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1400:   uv_async_t uv_eio_want_poll_notifier;",
          "1401:   uv_async_t uv_eio_done_poll_notifier;",
          "1402:   uv_idle_t uv_eio_poller;",
          "1406:   uv_counters_t counters;",
          "",
          "[Removed Lines]",
          "1404:   eio_channel uv_eio_channel;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/uv-eio.c||deps/uv/src/unix/uv-eio.c": [
          "File: deps/uv/src/unix/uv-eio.c -> deps/uv/src/unix/uv-eio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "96: }",
          "99: void uv_eio_init(uv_loop_t* loop) {",
          "100:   if (loop->counters.eio_init == 0) {",
          "101:     loop->counters.eio_init++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99: static void uv__eio_init(void) {",
          "100:   eio_init(uv_eio_want_poll, uv_eio_done_poll);",
          "105:   eio_set_max_poll_reqs(10);",
          "106: }",
          "108: static uv_once_t uv__eio_init_once_guard = UV_ONCE_INIT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:         uv_eio_done_poll_notifier_cb);",
          "113:     uv_unref(loop);",
          "121:   }",
          "122: }",
          "",
          "[Removed Lines]",
          "115:     eio_init(uv_eio_want_poll, uv_eio_done_poll);",
          "120:     eio_set_max_poll_reqs(10);",
          "",
          "[Added Lines]",
          "127:     uv_once(&uv__eio_init_once_guard, uv__eio_init);",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "119: TEST_DECLARE   (fs_readdir_file)",
          "120: TEST_DECLARE   (fs_open_dir)",
          "121: TEST_DECLARE   (threadpool_queue_work_simple)",
          "122: TEST_DECLARE   (thread_mutex)",
          "123: TEST_DECLARE   (thread_rwlock)",
          "124: TEST_DECLARE   (thread_create)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122: TEST_DECLARE   (threadpool_multiple_event_loops)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "285:   TEST_ENTRY  (fs_readdir_file)",
          "286:   TEST_ENTRY  (fs_open_dir)",
          "287:   TEST_ENTRY  (threadpool_queue_work_simple)",
          "288:   TEST_ENTRY  (thread_mutex)",
          "289:   TEST_ENTRY  (thread_rwlock)",
          "290:   TEST_ENTRY  (thread_create)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "289:   TEST_ENTRY  (threadpool_multiple_event_loops)",
          "",
          "---------------"
        ],
        "deps/uv/test/test-thread.c||deps/uv/test/test-thread.c": [
          "File: deps/uv/test/test-thread.c -> deps/uv/test/test-thread.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #include \"task.h\"",
          "25: #include <stdio.h>",
          "26: #include <stdlib.h>",
          "29: static volatile int thread_called;",
          "32: static void thread_entry(void* arg) {",
          "33:   ASSERT(arg == (void *) 42);",
          "34:   thread_called++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: #include <stddef.h>",
          "29: #define ARRAY_SIZE(a) (sizeof(a) / sizeof((a)[0]))",
          "31: #define container_of(ptr, type, member) \\",
          "32:   ((type *) ((char *) (ptr) - offsetof(type, member)))",
          "34: struct getaddrinfo_req {",
          "35:   uv_thread_t thread_id;",
          "36:   unsigned int counter;",
          "37:   uv_loop_t* loop;",
          "38:   uv_getaddrinfo_t handle;",
          "39: };",
          "42: struct fs_req {",
          "43:   uv_thread_t thread_id;",
          "44:   unsigned int counter;",
          "45:   uv_loop_t* loop;",
          "46:   uv_fs_t handle;",
          "47: };",
          "49: static void getaddrinfo_do(struct getaddrinfo_req* req);",
          "50: static void getaddrinfo_cb(uv_getaddrinfo_t* handle,",
          "51:                            int status,",
          "52:                            struct addrinfo* res);",
          "53: static void fs_do(struct fs_req* req);",
          "54: static void fs_cb(uv_fs_t* handle);",
          "59: static void getaddrinfo_do(struct getaddrinfo_req* req) {",
          "60:   int r;",
          "62:   ASSERT(req->thread_id == uv_thread_self());",
          "64:   r = uv_getaddrinfo(req->loop,",
          "65:                      &req->handle,",
          "66:                      getaddrinfo_cb,",
          "67:                      \"localhost\",",
          "68:                      NULL,",
          "69:                      NULL);",
          "70:   ASSERT(r == 0);",
          "71: }",
          "74: static void getaddrinfo_cb(uv_getaddrinfo_t* handle,",
          "75:                            int status,",
          "76:                            struct addrinfo* res) {",
          "77:   struct getaddrinfo_req* req;",
          "79:   ASSERT(status == 0);",
          "81:   req = container_of(handle, struct getaddrinfo_req, handle);",
          "82:   uv_freeaddrinfo(res);",
          "84:   if (--req->counter)",
          "85:     getaddrinfo_do(req);",
          "86: }",
          "89: static void fs_do(struct fs_req* req) {",
          "90:   int r;",
          "92:   ASSERT(req->thread_id == uv_thread_self());",
          "94:   r = uv_fs_stat(req->loop, &req->handle, \".\", fs_cb);",
          "95:   ASSERT(r == 0);",
          "96: }",
          "99: static void fs_cb(uv_fs_t* handle) {",
          "100:   struct fs_req* req = container_of(handle, struct fs_req, handle);",
          "102:   if (--req->counter)",
          "103:     fs_do(req);",
          "104: }",
          "107: static void do_work(void* arg) {",
          "108:   struct getaddrinfo_req getaddrinfo_reqs[16];",
          "109:   struct fs_req fs_reqs[16];",
          "110:   uv_thread_t self;",
          "111:   uv_loop_t* loop;",
          "112:   size_t i;",
          "113:   int r;",
          "115:   self = uv_thread_self();",
          "117:   loop = uv_loop_new();",
          "118:   ASSERT(loop != NULL);",
          "120:   for (i = 0; i < ARRAY_SIZE(getaddrinfo_reqs); i++) {",
          "121:     struct getaddrinfo_req* req = getaddrinfo_reqs + i;",
          "122:     req->thread_id = self;",
          "123:     req->counter = 16;",
          "124:     req->loop = loop;",
          "125:     getaddrinfo_do(req);",
          "126:   }",
          "128:   for (i = 0; i < ARRAY_SIZE(fs_reqs); i++) {",
          "129:     struct fs_req* req = fs_reqs + i;",
          "130:     req->thread_id = self;",
          "131:     req->counter = 16;",
          "132:     req->loop = loop;",
          "133:     fs_do(req);",
          "134:   }",
          "136:   r = uv_run(loop);",
          "137:   ASSERT(r == 0);",
          "139:   uv_loop_delete(loop);",
          "140: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:   tid = uv_thread_self();",
          "57:   return 0;",
          "58: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175: TEST_IMPL(threadpool_multiple_event_loops) {",
          "176:   uv_thread_t threads[8];",
          "177:   size_t i;",
          "178:   int r;",
          "180:   for (i = 0; i < ARRAY_SIZE(threads); i++) {",
          "181:     r = uv_thread_create(threads + i, do_work, NULL);",
          "182:     ASSERT(r == 0);",
          "183:   }",
          "185:   for (i = 0; i < ARRAY_SIZE(threads); i++) {",
          "186:     r = uv_thread_join(threads + i);",
          "187:     ASSERT(r == 0);",
          "188:   }",
          "190:   return 0;",
          "191: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d52f5020cecc16349cce902e9f869d33a9213752",
      "candidate_info": {
        "commit_hash": "d52f5020cecc16349cce902e9f869d33a9213752",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d52f5020cecc16349cce902e9f869d33a9213752",
        "files": [
          "node.gyp",
          "src/node_main.cc"
        ],
        "message": "Windows: another attempt to support unicode argv",
        "before_after_code_files": [
          "node.gyp||node.gyp",
          "src/node_main.cc||src/node_main.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "160:             'FD_SETSIZE=1024',",
          "161:             # we need to use node's preferred \"win32\" rather than gyp's preferred \"win\"",
          "162:             'PLATFORM=\"win32\"',",
          "163:           ],",
          "164:           'libraries': [ '-lpsapi.lib' ]",
          "165:         },{ # POSIX",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:             '_UNICODE=1',",
          "",
          "---------------"
        ],
        "src/node_main.cc||src/node_main.cc": [
          "File: src/node_main.cc -> src/node_main.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <node.h>",
          "24: int main(int argc, char *argv[]) {",
          "25:   return node::Start(argc, argv);",
          "26: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #ifdef _WIN32",
          "25: int wmain(int argc, wchar_t *wargv[]) {",
          "27:   char** argv = new char*[argc];",
          "28:   for (int i = 0; i < argc; i++) {",
          "30:     DWORD size = WideCharToMultiByte(CP_UTF8,",
          "31:                                      0,",
          "32:                                      wargv[i],",
          "33:                                      -1,",
          "34:                                      NULL,",
          "35:                                      0,",
          "36:                                      NULL,",
          "37:                                      NULL);",
          "38:     if (size == 0) {",
          "40:       fprintf(stderr, \"Could not convert arguments to utf8.\");",
          "41:       exit(1);",
          "42:     }",
          "44:     argv[i] = new char[size];",
          "45:     DWORD result = WideCharToMultiByte(CP_UTF8,",
          "46:                                        0,",
          "47:                                        wargv[i],",
          "48:                                        -1,",
          "49:                                        argv[i],",
          "50:                                        size,",
          "51:                                        NULL,",
          "52:                                        NULL);",
          "53:     if (result == 0) {",
          "55:       fprintf(stderr, \"Could not convert arguments to utf8.\");",
          "56:       exit(1);",
          "57:     }",
          "58:   }",
          "60:   return node::Start(argc, argv);",
          "61: }",
          "62: #else",
          "67: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0cdeb8ed9690dcad912996a37ac149c7e7622f64",
      "candidate_info": {
        "commit_hash": "0cdeb8ed9690dcad912996a37ac149c7e7622f64",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0cdeb8ed9690dcad912996a37ac149c7e7622f64",
        "files": [
          "lib/fs.js",
          "test/simple/test-regress-GH-3542.js"
        ],
        "message": "windows: make fs.realpath(Sync) work with UNC paths\n\nCloses #3542",
        "before_after_code_files": [
          "lib/fs.js||lifs.js",
          "test/simple/test-regress-GH-3542.js||test/simple/test-regress-GH-3542.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "966:   var nextPartRe = /(.*?)(?:[\\/]+|$)/g;",
          "967: }",
          "974: fs.realpathSync = function realpathSync(p, cache) {",
          "",
          "[Removed Lines]",
          "971: var splitDeviceRe =",
          "972:     /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "984:       knownHard = {};",
          "",
          "[Removed Lines]",
          "987:   var pos = 0;",
          "989:   var current = '';",
          "991:   var base = '';",
          "993:   var previous = '';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1004:     base = previous + result[1];",
          "1005:     pos = nextPartRe.lastIndex;",
          "1017:       continue;",
          "1018:     }",
          "",
          "[Removed Lines]",
          "1008:     var isRoot = !base;",
          "1009:     if (isWindows) {",
          "1011:       var split = base.match(splitDeviceRe);",
          "1012:       if (split) {",
          "1013:         isRoot = !split[2];",
          "1014:       }",
          "1015:     }",
          "1016:     if (isRoot || knownHard[base] || (cache && cache[base] === base)) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1052:     p = pathModule.resolve(resolvedLink, p.slice(pos));",
          "1055:   }",
          "1057:   if (cache) cache[original] = p;",
          "",
          "[Removed Lines]",
          "1053:     pos = 0;",
          "1054:     previous = base = current = '';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1078:       knownHard = {};",
          "1092:   function LOOP() {",
          "1094:     if (pos >= p.length) {",
          "",
          "[Removed Lines]",
          "1081:   var pos = 0;",
          "1083:   var current = '';",
          "1085:   var base = '';",
          "1087:   var previous = '';",
          "1091:   return process.nextTick(LOOP);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1104:     base = previous + result[1];",
          "1105:     pos = nextPartRe.lastIndex;",
          "1117:       return process.nextTick(LOOP);",
          "1118:     }",
          "",
          "[Removed Lines]",
          "1108:     var isRoot = !base;",
          "1109:     if (isWindows) {",
          "1111:       var split = base.match(splitDeviceRe);",
          "1112:       if (split) {",
          "1113:         isRoot = !split[2];",
          "1114:       }",
          "1115:     }",
          "1116:     if (isRoot || knownHard[base] || (cache && cache[base] === base)) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1163:   }",
          "1165:   function gotResolvedLink(resolvedLink) {",
          "1168:     p = pathModule.resolve(resolvedLink, p.slice(pos));",
          "1173:   }",
          "1174: };",
          "",
          "[Removed Lines]",
          "1169:     pos = 0;",
          "1170:     previous = base = current = '';",
          "1172:     return process.nextTick(LOOP);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-regress-GH-3542.js||test/simple/test-regress-GH-3542.js": [
          "File: test/simple/test-regress-GH-3542.js -> test/simple/test-regress-GH-3542.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: if (process.platform !== 'win32') {",
          "24:   return process.exit(0);",
          "25: }",
          "27: var common = require('../common.js'),",
          "28:     assert = require('assert'),",
          "29:     fs = require('fs'),",
          "30:     path = require('path'),",
          "31:     succeeded = 0;",
          "33: function test(p) {",
          "34:   var result = fs.realpathSync(p);",
          "35:   assert.strictEqual(result, path.resolve(p));",
          "37:   fs.realpath(p, function(err, result) {",
          "38:     assert.ok(!err);",
          "39:     assert.strictEqual(result, path.resolve(p));",
          "40:     succeeded++;",
          "41:   });",
          "42: }",
          "44: test('//localhost/c$/windows/system32');",
          "45: test('//localhost/c$/windows');",
          "46: test('//localhost/c$/')",
          "47: test('\\\\\\\\localhost\\\\c$')",
          "48: test('c:\\\\');",
          "49: test('c:');",
          "50: test(process.env.windir);",
          "52: process.on('exit', function() {",
          "53:   assert.strictEqual(succeeded, 7);",
          "54: });",
          "",
          "---------------"
        ]
      }
    }
  ]
}