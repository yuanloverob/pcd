{
  "cve_id": "CVE-2017-9352",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.6 and 2.0.0 to 2.0.12, the Bazaar dissector could go into an infinite loop. This was addressed in epan/dissectors/packet-bzr.c by ensuring that backwards parsing cannot occur.",
  "repo": "wireshark/wireshark",
  "patch_hash": "afb4de370a4c54e08e9367b55ae142414efc6e8f",
  "patch_info": {
    "commit_hash": "afb4de370a4c54e08e9367b55ae142414efc6e8f",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/afb4de370a4c54e08e9367b55ae142414efc6e8f",
    "files": [
      "epan/dissectors/packet-bzr.c"
    ],
    "message": "packet-bzr.c: Prevent infinite loop\n\nBug: 13599\nChange-Id: If85588099d7c6635865614f8778a903a5e971789\nReviewed-on: https://code.wireshark.org/review/21410\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-bzr.c||epan/dissectors/packet-bzr.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-bzr.c||epan/dissectors/packet-bzr.c": [
      "File: epan/dissectors/packet-bzr.c -> epan/dissectors/packet-bzr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: get_bzr_pdu_len(packet_info *pinfo _U_, tvbuff_t *tvb, int offset)",
      "86: {",
      "87:     int    next_offset;",
      "89:     gint   protocol_version_len;",
      "90:     guint8 cmd = 0;",
      "",
      "[Removed Lines]",
      "88:     gint   len = 0;",
      "",
      "[Added Lines]",
      "88:     gint   len = 0, current_len;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "98:     len += protocol_version_len + 1;",
      "101:     len += get_bzr_prefixed_len(tvb, next_offset);",
      "103:     while (tvb_reported_length_remaining(tvb, offset + len) > 0) {",
      "104:         cmd = tvb_get_guint8(tvb, offset + len);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "101:     current_len = len;",
      "104:         return -1;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "107:         switch (cmd) {",
      "108:         case 's':",
      "109:         case 'b':",
      "110:             len += get_bzr_prefixed_len(tvb, offset + len);",
      "111:             break;",
      "112:         case 'o':",
      "113:             len += 1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "113:             current_len = len;",
      "116:                 return -1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d8d7690a59059821e2a2a84ac8d925aa5e70b7ba",
      "candidate_info": {
        "commit_hash": "d8d7690a59059821e2a2a84ac8d925aa5e70b7ba",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/d8d7690a59059821e2a2a84ac8d925aa5e70b7ba",
        "files": [
          "epan/dissectors/packet-bzr.c"
        ],
        "message": "packet-bzr.c: Prevent infinite loop\n\nBug: 13599\nChange-Id: If85588099d7c6635865614f8778a903a5e971789\nReviewed-on: https://code.wireshark.org/review/21410\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit afb4de370a4c54e08e9367b55ae142414efc6e8f)\nReviewed-on: https://code.wireshark.org/review/21459",
        "before_after_code_files": [
          "epan/dissectors/packet-bzr.c||epan/dissectors/packet-bzr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-bzr.c||epan/dissectors/packet-bzr.c"
          ],
          "candidate": [
            "epan/dissectors/packet-bzr.c||epan/dissectors/packet-bzr.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-bzr.c||epan/dissectors/packet-bzr.c": [
          "File: epan/dissectors/packet-bzr.c -> epan/dissectors/packet-bzr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "84: get_bzr_pdu_len(packet_info *pinfo _U_, tvbuff_t *tvb, int offset)",
          "85: {",
          "86:     int    next_offset;",
          "88:     gint   protocol_version_len;",
          "89:     guint8 cmd = 0;",
          "",
          "[Removed Lines]",
          "87:     gint   len = 0;",
          "",
          "[Added Lines]",
          "87:     gint   len = 0, current_len;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:     len += protocol_version_len + 1;",
          "100:     len += get_bzr_prefixed_len(tvb, next_offset);",
          "102:     while (tvb_reported_length_remaining(tvb, offset + len) > 0) {",
          "103:         cmd = tvb_get_guint8(tvb, offset + len);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     current_len = len;",
          "103:         return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "106:         switch (cmd) {",
          "107:         case 's':",
          "108:         case 'b':",
          "109:             len += get_bzr_prefixed_len(tvb, offset + len);",
          "110:             break;",
          "111:         case 'o':",
          "112:             len += 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:             current_len = len;",
          "115:                 return -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c5e0cee278ff0678b0ebf4b9c2a614974b4029a",
      "candidate_info": {
        "commit_hash": "8c5e0cee278ff0678b0ebf4b9c2a614974b4029a",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/8c5e0cee278ff0678b0ebf4b9c2a614974b4029a",
        "files": [
          "epan/dissectors/packet-bzr.c"
        ],
        "message": "packet-bzr.c: Prevent infinite loop\n\nBug: 13599\nChange-Id: If85588099d7c6635865614f8778a903a5e971789\nReviewed-on: https://code.wireshark.org/review/21410\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit afb4de370a4c54e08e9367b55ae142414efc6e8f)\nReviewed-on: https://code.wireshark.org/review/21460",
        "before_after_code_files": [
          "epan/dissectors/packet-bzr.c||epan/dissectors/packet-bzr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-bzr.c||epan/dissectors/packet-bzr.c"
          ],
          "candidate": [
            "epan/dissectors/packet-bzr.c||epan/dissectors/packet-bzr.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-bzr.c||epan/dissectors/packet-bzr.c": [
          "File: epan/dissectors/packet-bzr.c -> epan/dissectors/packet-bzr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "84: get_bzr_pdu_len(packet_info *pinfo _U_, tvbuff_t *tvb, int offset)",
          "85: {",
          "86:     int    next_offset;",
          "88:     gint   protocol_version_len;",
          "89:     guint8 cmd = 0;",
          "",
          "[Removed Lines]",
          "87:     gint   len = 0;",
          "",
          "[Added Lines]",
          "87:     gint   len = 0, current_len;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:     len += protocol_version_len + 1;",
          "100:     len += get_bzr_prefixed_len(tvb, next_offset);",
          "102:     while (tvb_reported_length_remaining(tvb, offset + len) > 0) {",
          "103:         cmd = tvb_get_guint8(tvb, offset + len);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     current_len = len;",
          "103:         return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "106:         switch (cmd) {",
          "107:         case 's':",
          "108:         case 'b':",
          "109:             len += get_bzr_prefixed_len(tvb, offset + len);",
          "110:             break;",
          "111:         case 'o':",
          "112:             len += 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:             current_len = len;",
          "115:                 return -1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}