{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8d049ed24b06ada5bb8c50143c23c061647ca5d9",
      "candidate_info": {
        "commit_hash": "8d049ed24b06ada5bb8c50143c23c061647ca5d9",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8d049ed24b06ada5bb8c50143c23c061647ca5d9",
        "files": [
          "crypto/evp/p5_crpt2.c",
          "test/evp_test.c",
          "test/evptests.txt"
        ],
        "message": "Fixed PKCS5_PBKDF2_HMAC() to adhere to the documentation.\n\nThe documentation of this function states that the password parameter\ncan be NULL. However, the implementation returns an error in this case\ndue to the inner workings of the HMAC_Init_ex() function.\nWith this change, NULL password will be treated as an empty string and\nPKCS5_PBKDF2_HMAC() no longer fails on this input.\n\nI have also added two new test cases that tests the handling of the\nspecial values NULL and -1 of the password and passlen parameters,\nrespectively.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1692)\n(cherry picked from commit fa013b65241dfed9b7d9e10e0adfedc9869c797e)",
        "before_after_code_files": [
          "crypto/evp/p5_crpt2.c||crypto/evp/p5_crpt2.c",
          "test/evp_test.c||test/evp_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/p5_crpt2.c||crypto/evp/p5_crpt2.c": [
          "File: crypto/evp/p5_crpt2.c -> crypto/evp/p5_crpt2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:                       const unsigned char *salt, int saltlen, int iter,",
          "34:                       const EVP_MD *digest, int keylen, unsigned char *out)",
          "35: {",
          "36:     unsigned char digtmp[EVP_MAX_MD_SIZE], *p, itmp[4];",
          "37:     int cplen, j, k, tkeylen, mdlen;",
          "38:     unsigned long i = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:     const char *empty = \"\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:         return 0;",
          "48:     p = out;",
          "49:     tkeylen = keylen;",
          "51:         passlen = 0;",
          "53:         passlen = strlen(pass);",
          "54:     if (!HMAC_Init_ex(hctx_tpl, pass, passlen, digest, NULL)) {",
          "55:         HMAC_CTX_free(hctx_tpl);",
          "56:         return 0;",
          "",
          "[Removed Lines]",
          "50:     if (!pass)",
          "52:     else if (passlen == -1)",
          "",
          "[Added Lines]",
          "51:     if (pass == NULL) {",
          "52:         pass = empty;",
          "54:     } else if (passlen == -1) {",
          "56:     }",
          "",
          "---------------"
        ],
        "test/evp_test.c||test/evp_test.c": [
          "File: test/evp_test.c -> test/evp_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:         return 1;",
          "143:     }",
          "145:     if (value[0] == '\"') {",
          "146:         size_t vlen;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:     if (strcmp(value, \"NULL\") == 0) {",
          "151:         return 1;",
          "152:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "641:     memset(&t, 0, sizeof(t));",
          "642:     t.start_line = -1;",
          "644:     if (in == NULL) {",
          "645:         fprintf(stderr, \"Can't open %s for reading\\n\", argv[1]);",
          "646:         return 1;",
          "",
          "[Removed Lines]",
          "643:     in = BIO_new_file(argv[1], \"r\");",
          "",
          "[Added Lines]",
          "654:     in = BIO_new_file(argv[1], \"rb\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d52c9b58a6e6c6dba62221b469e1576fe26b3c20",
      "candidate_info": {
        "commit_hash": "d52c9b58a6e6c6dba62221b469e1576fe26b3c20",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d52c9b58a6e6c6dba62221b469e1576fe26b3c20",
        "files": [
          "test/ssl_test_ctx.c"
        ],
        "message": "Fix a mem leak in ssl_test_ctx.c\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2650)\n(cherry picked from commit d605fc3a0ce4103ca6660904795bf1209cdb55b7)",
        "before_after_code_files": [
          "test/ssl_test_ctx.c||test/ssl_test_ctx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ssl_test_ctx.c||test/ssl_test_ctx.c": [
          "File: test/ssl_test_ctx.c -> test/ssl_test_ctx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "507:     OPENSSL_free(conf->client.alpn_protocols);",
          "508:     OPENSSL_free(conf->server.alpn_protocols);",
          "509:     OPENSSL_free(conf->server2.alpn_protocols);",
          "510: }",
          "512: static void ssl_test_ctx_free_extra_data(SSL_TEST_CTX *ctx)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "510:     OPENSSL_free(conf->client.reneg_ciphers);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8aa38789332b49ef3d33965649a4595b1bc33ac9",
      "candidate_info": {
        "commit_hash": "8aa38789332b49ef3d33965649a4595b1bc33ac9",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8aa38789332b49ef3d33965649a4595b1bc33ac9",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "Add some more consistency checks in tls_decrypt_ticket.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2704)\n(cherry picked from commit 79020b27beff060d02830870fdfd821fe8cbd439)",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "ssl/t1_lib.c||ssl/t1_lib.c"
          ],
          "candidate": [
            "ssl/t1_lib.c||ssl/t1_lib.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3172:     sess = d2i_SSL_SESSION(NULL, &p, slen);",
          "3173:     OPENSSL_free(sdec);",
          "3174:     if (sess) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3176:         if (p != sdec + slen || sess->session_id_length != 0) {",
          "3177:             SSL_SESSION_free(sess);",
          "3178:             return 2;",
          "3179:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4cdf91ef7d6cd05706027c341d36db867276ea47",
      "candidate_info": {
        "commit_hash": "4cdf91ef7d6cd05706027c341d36db867276ea47",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4cdf91ef7d6cd05706027c341d36db867276ea47",
        "files": [
          "apps/speed.c"
        ],
        "message": "Check that async_jobs is not negative and not too high.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2693)\n(cherry picked from commit f8aa15728ba960137faf77b298fa60c1e63dc50f)",
        "before_after_code_files": [
          "apps/speed.c||apps/speed.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/speed.c||apps/speed.c": [
          "File: apps/speed.c -> apps/speed.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1235: #ifndef NO_FORK",
          "1236:     int multi = 0;",
          "1237: #endif",
          "1239: #if !defined(OPENSSL_NO_RSA) || !defined(OPENSSL_NO_DSA) \\",
          "1240:     || !defined(OPENSSL_NO_EC)",
          "1241:     long rsa_count = 1;",
          "",
          "[Removed Lines]",
          "1238:     int async_jobs = 0;",
          "",
          "[Added Lines]",
          "1238:     unsigned int async_jobs = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1414:                            prog);",
          "1415:                 goto opterr;",
          "1416:             }",
          "1417: #endif",
          "1418:             break;",
          "1419:         case OPT_MISALIGN:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1417:             if (async_jobs > 99999) {",
          "1418:                 BIO_printf(bio_err,",
          "1419:                            \"%s: too many async_jobs\\n\",",
          "1420:                            prog);",
          "1421:                 goto opterr;",
          "1422:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b67a37b84674881226bb96709239a7e5945bc480",
      "candidate_info": {
        "commit_hash": "b67a37b84674881226bb96709239a7e5945bc480",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b67a37b84674881226bb96709239a7e5945bc480",
        "files": [
          "test/recipes/40-test_rehash.t"
        ],
        "message": "test_rehash does nothing, have it do something\n\ntest/recipes/40-test_rehash.t uses test files from certs/demo, which\ndoesn't exist any longer.  Have it use PEM files from test/ instead.\n\nBecause rehash wants only one certificate or CRL per file, we must\nalso filter those PEM files to produce test files with a single object\neach.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2594)\n(cherry picked from commit 4bbd8a5daaa810c487f684971c0339a1d7c15da9)",
        "before_after_code_files": [
          "test/recipes/40-test_rehash.t||test/recipes/40-test_rehash.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/40-test_rehash.t||test/recipes/40-test_rehash.t": [
          "File: test/recipes/40-test_rehash.t -> test/recipes/40-test_rehash.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: use File::Copy;",
          "15: use File::Basename;",
          "16: use if $^O ne \"VMS\", 'File::Glob' => qw/glob/;",
          "19: setup(\"test_rehash\");",
          "",
          "[Removed Lines]",
          "17: use OpenSSL::Test qw/:DEFAULT bldtop_file/;",
          "",
          "[Added Lines]",
          "17: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58: }, create => 1, cleanup => 1;",
          "60: sub prepare {",
          "66:     my @destfiles = ();",
          "70:     }",
          "71:     foreach (@_) {",
          "72:         die \"Internal error, argument is not CODE\"",
          "73:             unless (ref($_) eq 'CODE');",
          "",
          "[Removed Lines]",
          "61:     my @sourcefiles =",
          "62:         sort map { glob(bldtop_file('certs', 'demo', \"*.$_\")) } ('pem',",
          "63:                                                                  'crt',",
          "64:                                                                  'cer',",
          "65:                                                                  'crl');",
          "67:     foreach (@sourcefiles) {",
          "68:         copy($_, curdir());",
          "69:         push @destfiles, catfile(curdir(), basename($_));",
          "",
          "[Added Lines]",
          "61:     my @pemsourcefiles = sort glob(srctop_file('test', \"*.pem\"));",
          "64:     die \"There are no source files\\n\" if scalar @pemsourcefiles == 0;",
          "66:     my $cnt = 0;",
          "67:     foreach (@pemsourcefiles) {",
          "68:         my $basename = basename($_, \".pem\");",
          "69:         my $writing = 0;",
          "71:         open PEM, $_ or die \"Can't read $_: $!\\n\";",
          "72:         while (my $line = <PEM>) {",
          "73:             if ($line =~ m{^-----BEGIN (?:CERTIFICATE|X509 CRL)-----}) {",
          "74:                 die \"New start in a PEM blob?\\n\" if $writing;",
          "75:                 $cnt++;",
          "76:                 my $destfile =",
          "77:                     catfile(curdir(),",
          "78:                             $basename . sprintf(\"-%02d\", $cnt) . \".pem\");",
          "79:                 push @destfiles, $destfile;",
          "80:                 open OUT, '>', $destfile",
          "81:                     or die \"Can't write $destfile\\n\";",
          "82:                 $writing = 1;",
          "83:             }",
          "84:             print OUT $line if $writing;",
          "85:             if ($line =~ m|^-----END |) {",
          "86:                 close OUT if $writing;",
          "87:                 $writing = 0;",
          "88:             }",
          "89:         }",
          "90:         die \"No end marker in $basename\\n\" if $writing;",
          "92:     die \"No test PEM files produced\\n\" if $cnt == 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}