{
  "cve_id": "CVE-2014-7831",
  "cve_desc": "lib/classes/grades_external.php in Moodle 2.7.x before 2.7.3 does not consider the moodle/grade:viewhidden capability before displaying hidden grades, which allows remote authenticated users to obtain sensitive information by leveraging the student role to access the get_grades web service.",
  "repo": "moodle/moodle",
  "patch_hash": "a0095e5a893190ec28f63a89deba7fd89ad1839a",
  "patch_info": {
    "commit_hash": "a0095e5a893190ec28f63a89deba7fd89ad1839a",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/a0095e5a893190ec28f63a89deba7fd89ad1839a",
    "files": [
      "lib/classes/grades_external.php",
      "lib/db/services.php",
      "lib/tests/grades_externallib_test.php"
    ],
    "message": "MDL-47766 web services: get_grades exposes hidden grades to students",
    "before_after_code_files": [
      "lib/classes/grades_external.php||lib/classes/grades_external.php",
      "lib/db/services.php||lib/db/services.php",
      "lib/tests/grades_externallib_test.php||lib/tests/grades_externallib_test.php"
    ]
  },
  "patch_diff": {
    "lib/classes/grades_external.php||lib/classes/grades_external.php": [
      "File: lib/classes/grades_external.php -> lib/classes/grades_external.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "86:             throw new moodle_exception('errorcoursecontextnotvalid' , 'webservice', '', $exceptionparam);",
      "87:         }",
      "89:         $course = $DB->get_record('course', array('id' => $params['courseid']), '*', MUST_EXIST);",
      "91:         $access = false;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "91:         require_capability('moodle/grade:viewhidden', $coursecontext);",
      "",
      "---------------"
    ],
    "lib/db/services.php||lib/db/services.php": [
      "File: lib/db/services.php -> lib/db/services.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "104:     'core_grades_get_grades' => array(",
      "105:         'classname'     => 'core_grades_external',",
      "106:         'methodname'    => 'get_grades',",
      "108:         'type'          => 'read',",
      "110:     ),",
      "112:     'core_grades_update_grades' => array(",
      "",
      "[Removed Lines]",
      "107:         'description'   => 'Returns grade item details and optionally student grades.',",
      "109:         'capabilities'  => 'moodle/grade:view, moodle/grade:viewall',",
      "",
      "[Added Lines]",
      "107:         'description'   => 'Returns student course total grade and grades for activities.",
      "108:                                 This function does not return category or manual items.",
      "109:                                 This function is suitable for managers or teachers not students.',",
      "111:         'capabilities'  => 'moodle/grade:view, moodle/grade:viewall, moodle/grade:viewhidden',",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "962:             'mod_assign_reveal_identities',",
      "963:             'message_airnotifier_is_system_configured',",
      "964:             'message_airnotifier_are_notification_preferences_configured',",
      "966:             'core_grades_update_grades',",
      "967:             'mod_forum_get_forums_by_courses',",
      "968:             'mod_forum_get_forum_discussions_paginated',",
      "",
      "[Removed Lines]",
      "965:             'core_grades_get_grades',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "lib/tests/grades_externallib_test.php||lib/tests/grades_externallib_test.php": [
      "File: lib/tests/grades_externallib_test.php -> lib/tests/grades_externallib_test.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "150:             $this->load_test_data($assignmentname, $student1rawgrade, $student2rawgrade);",
      "151:         $assigmentcm = get_coursemodule_from_id('assign', $assignment->cmid, 0, false, MUST_EXIST);",
      "155:         $grades = core_grades_external::get_grades(",
      "156:             $course->id,",
      "157:             'mod_assign',",
      "",
      "[Removed Lines]",
      "154:         $this->setUser($student1);",
      "",
      "[Added Lines]",
      "154:         $this->setUser($teacher);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "177:         $this->assertEquals($outcome['name'], 'Team work');",
      "178:         $this->assertEquals(0, $this->get_outcome_student_grade($grades, $assigmentcm->id, $student1->id));",
      "181:         try {",
      "182:             $grades = core_grades_external::get_grades(",
      "183:                 $course->id,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "181:         $grades = core_grades_external::get_grades(",
      "182:             $course->id,",
      "183:             null,",
      "184:             null,",
      "185:             array($student1->id, $student2->id)",
      "186:         );",
      "187:         $grades = external_api::clean_returnvalue(core_grades_external::get_grades_returns(), $grades);",
      "188:         $this->assertTrue(count($grades['items']) == 2);",
      "189:         $this->assertTrue(count($grades['items'][0]['grades']) == 2);",
      "190:         $this->assertTrue(count($grades['items'][1]['grades']) == 2);",
      "193:         $this->setUser($student1);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "190:             $this->assertTrue(true);",
      "191:         }",
      "194:         $this->setUser($parent);",
      "205:         try {",
      "",
      "[Removed Lines]",
      "195:         $grades = core_grades_external::get_grades(",
      "196:             $course->id,",
      "197:             'mod_assign',",
      "198:             $assigmentcm->id,",
      "199:             array($student1->id)",
      "200:         );",
      "201:         $grades = external_api::clean_returnvalue(core_grades_external::get_grades_returns(), $grades);",
      "202:         $this->assertEquals($student1rawgrade, $this->get_activity_student_grade($grades, $assigmentcm->id, $student1->id));",
      "",
      "[Added Lines]",
      "208:         try {",
      "209:             $grades = core_grades_external::get_grades(",
      "210:                 $course->id,",
      "211:                 'mod_assign',",
      "212:                 $assigmentcm->id,",
      "213:                 array($student1->id)",
      "214:             );",
      "215:             $this->fail('moodle_exception expected');",
      "216:         } catch (moodle_exception $ex) {",
      "217:             $this->assertTrue(true);",
      "218:         }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "294:         $grades = grade_get_grades($course->id, 'mod', 'assign', $assignment->id);",
      "295:         $this->assertEquals($grades->items[0]->hidden, 1);",
      "309:         $this->setUser($teacher);",
      "310:         $grades = core_grades_external::get_grades(",
      "",
      "[Removed Lines]",
      "298:         $this->setUser($student1);",
      "299:         $grades = core_grades_external::get_grades(",
      "300:             $course->id,",
      "301:             'mod_assign',",
      "302:             $assigmentcm->id,",
      "303:             array($student1->id)",
      "304:         );",
      "305:         $grades = external_api::clean_returnvalue(core_grades_external::get_grades_returns(), $grades);",
      "306:         $this->assertEquals(null, $this->get_activity($grades, $assigmentcm->id));",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cb9d8257542439f08b2fc522d8af50d65ed7c951",
      "candidate_info": {
        "commit_hash": "cb9d8257542439f08b2fc522d8af50d65ed7c951",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/cb9d8257542439f08b2fc522d8af50d65ed7c951",
        "files": [
          "lib/db/services.php",
          "version.php"
        ],
        "message": "MDL-42923 Add renamed web services to the Mobile app service\n\nKeep the deprecated ones for backwards compatibility",
        "before_after_code_files": [
          "lib/db/services.php||lib/db/services.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/db/services.php||lib/db/services.php"
          ],
          "candidate": [
            "lib/db/services.php||lib/db/services.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/db/services.php||lib/db/services.php": [
          "File: lib/db/services.php -> lib/db/services.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "906:             'core_course_get_contents',",
          "907:             'core_get_component_strings',",
          "908:             'core_user_add_user_device',",
          "910:         'enabled' => 0,",
          "911:         'restrictedusers' => 0,",
          "912:         'shortname' => MOODLE_OFFICIAL_MOBILE_SERVICE,",
          "",
          "[Removed Lines]",
          "909:             'core_calendar_get_calendar_events'),",
          "",
          "[Added Lines]",
          "909:             'core_calendar_get_calendar_events',",
          "910:             'core_enrol_get_users_courses',",
          "911:             'core_enrol_get_enrolled_users',",
          "912:             'core_user_get_users_by_id',",
          "913:             'core_webservice_get_site_info',",
          "914:             'core_notes_create_notes',",
          "915:             'core_user_get_course_user_profiles',",
          "916:             'core_enrol_get_enrolled_users',",
          "917:             'core_message_send_instant_messages'),",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2014022000.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2014022000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3b8876f5ef2b5cde1e9de2599efd03d02bdaf7d8",
      "candidate_info": {
        "commit_hash": "3b8876f5ef2b5cde1e9de2599efd03d02bdaf7d8",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/3b8876f5ef2b5cde1e9de2599efd03d02bdaf7d8",
        "files": [
          "lib/classes/grades_external.php",
          "lib/db/services.php",
          "lib/tests/grades_externallib_test.php"
        ],
        "message": "MDL-47766 web services: get_grades exposes hidden grades to students",
        "before_after_code_files": [
          "lib/classes/grades_external.php||lib/classes/grades_external.php",
          "lib/db/services.php||lib/db/services.php",
          "lib/tests/grades_externallib_test.php||lib/tests/grades_externallib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/classes/grades_external.php||lib/classes/grades_external.php",
            "lib/db/services.php||lib/db/services.php",
            "lib/tests/grades_externallib_test.php||lib/tests/grades_externallib_test.php"
          ],
          "candidate": [
            "lib/classes/grades_external.php||lib/classes/grades_external.php",
            "lib/db/services.php||lib/db/services.php",
            "lib/tests/grades_externallib_test.php||lib/tests/grades_externallib_test.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/classes/grades_external.php||lib/classes/grades_external.php": [
          "File: lib/classes/grades_external.php -> lib/classes/grades_external.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:             throw new moodle_exception('errorcoursecontextnotvalid' , 'webservice', '', $exceptionparam);",
          "87:         }",
          "89:         $course = $DB->get_record('course', array('id' => $params['courseid']), '*', MUST_EXIST);",
          "91:         $access = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:         require_capability('moodle/grade:viewhidden', $coursecontext);",
          "",
          "---------------"
        ],
        "lib/db/services.php||lib/db/services.php": [
          "File: lib/db/services.php -> lib/db/services.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:     'core_grades_get_grades' => array(",
          "105:         'classname'     => 'core_grades_external',",
          "106:         'methodname'    => 'get_grades',",
          "108:         'type'          => 'read',",
          "110:     ),",
          "112:     'core_grades_update_grades' => array(",
          "",
          "[Removed Lines]",
          "107:         'description'   => 'Returns grade item details and optionally student grades.',",
          "109:         'capabilities'  => 'moodle/grade:view, moodle/grade:viewall',",
          "",
          "[Added Lines]",
          "107:         'description'   => 'Returns student course total grade and grades for activities.",
          "108:                                 This function does not return category or manual items.",
          "109:                                 This function is suitable for managers or teachers not students.',",
          "111:         'capabilities'  => 'moodle/grade:view, moodle/grade:viewall, moodle/grade:viewhidden',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "946:             'mod_assign_reveal_identities',",
          "947:             'message_airnotifier_is_system_configured',",
          "948:             'message_airnotifier_are_notification_preferences_configured',",
          "950:             'core_grades_update_grades',",
          "951:             'mod_forum_get_forums_by_courses',",
          "952:             'mod_forum_get_forum_discussions',",
          "",
          "[Removed Lines]",
          "949:             'core_grades_get_grades',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/tests/grades_externallib_test.php||lib/tests/grades_externallib_test.php": [
          "File: lib/tests/grades_externallib_test.php -> lib/tests/grades_externallib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:             $this->load_test_data($assignmentname, $student1rawgrade, $student2rawgrade);",
          "151:         $assigmentcm = get_coursemodule_from_id('assign', $assignment->id, 0, false, MUST_EXIST);",
          "155:         $grades = core_grades_external::get_grades(",
          "156:             $course->id,",
          "157:             'mod_assign',",
          "",
          "[Removed Lines]",
          "154:         $this->setUser($student1);",
          "",
          "[Added Lines]",
          "154:         $this->setUser($teacher);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "177:         $this->assertEquals($outcome['name'], 'Team work');",
          "178:         $this->assertEquals(0, $this->get_outcome_student_grade($grades, $assigmentcm->id, $student1->id));",
          "181:         try {",
          "182:             $grades = core_grades_external::get_grades(",
          "183:                 $course->id,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "181:         $grades = core_grades_external::get_grades(",
          "182:             $course->id,",
          "183:             null,",
          "184:             null,",
          "185:             array($student1->id, $student2->id)",
          "186:         );",
          "187:         $grades = external_api::clean_returnvalue(core_grades_external::get_grades_returns(), $grades);",
          "188:         $this->assertTrue(count($grades['items']) == 2);",
          "189:         $this->assertTrue(count($grades['items'][0]['grades']) == 2);",
          "190:         $this->assertTrue(count($grades['items'][1]['grades']) == 2);",
          "193:         $this->setUser($student1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "190:             $this->assertTrue(true);",
          "191:         }",
          "194:         $this->setUser($parent);",
          "205:         try {",
          "",
          "[Removed Lines]",
          "195:         $grades = core_grades_external::get_grades(",
          "196:             $course->id,",
          "197:             'mod_assign',",
          "198:             $assigmentcm->id,",
          "199:             array($student1->id)",
          "200:         );",
          "201:         $grades = external_api::clean_returnvalue(core_grades_external::get_grades_returns(), $grades);",
          "202:         $this->assertEquals($student1rawgrade, $this->get_activity_student_grade($grades, $assigmentcm->id, $student1->id));",
          "",
          "[Added Lines]",
          "208:         try {",
          "209:             $grades = core_grades_external::get_grades(",
          "210:                 $course->id,",
          "211:                 'mod_assign',",
          "212:                 $assigmentcm->id,",
          "213:                 array($student1->id)",
          "214:             );",
          "215:             $this->fail('moodle_exception expected');",
          "216:         } catch (moodle_exception $ex) {",
          "217:             $this->assertTrue(true);",
          "218:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "294:         $grades = grade_get_grades($course->id, 'mod', 'assign', $assignment->id);",
          "295:         $this->assertEquals($grades->items[0]->hidden, 1);",
          "309:         $this->setUser($teacher);",
          "310:         $grades = core_grades_external::get_grades(",
          "",
          "[Removed Lines]",
          "298:         $this->setUser($student1);",
          "299:         $grades = core_grades_external::get_grades(",
          "300:             $course->id,",
          "301:             'mod_assign',",
          "302:             $assigmentcm->id,",
          "303:             array($student1->id)",
          "304:         );",
          "305:         $grades = external_api::clean_returnvalue(core_grades_external::get_grades_returns(), $grades);",
          "306:         $this->assertEquals(null, $this->get_activity($grades, $assigmentcm->id));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}