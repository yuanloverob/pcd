{
  "cve_id": "CVE-2013-4148",
  "cve_desc": "Integer signedness error in the virtio_net_load function in hw/net/virtio-net.c in QEMU 1.x before 1.7.2 allows remote attackers to execute arbitrary code via a crafted savevm image, which triggers a buffer overflow.",
  "repo": "qemu/qemu",
  "patch_hash": "71f7fe48e10a8437c9d42d859389f37157f59980",
  "patch_info": {
    "commit_hash": "71f7fe48e10a8437c9d42d859389f37157f59980",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/71f7fe48e10a8437c9d42d859389f37157f59980",
    "files": [
      "include/hw/virtio/virtio-net.h"
    ],
    "message": "virtio-net: fix buffer overflow on invalid state load\n\nCVE-2013-4148 QEMU 1.0 integer conversion in\nvirtio_net_load()@hw/net/virtio-net.c\n\nDeals with loading a corrupted savevm image.\n\n>         n->mac_table.in_use = qemu_get_be32(f);\n\nin_use is int so it can get negative when assigned 32bit unsigned value.\n\n>         /* MAC_TABLE_ENTRIES may be different from the saved image */\n>         if (n->mac_table.in_use <= MAC_TABLE_ENTRIES) {\n\npassing this check ^^^\n\n>             qemu_get_buffer(f, n->mac_table.macs,\n>                             n->mac_table.in_use * ETH_ALEN);\n\nwith good in_use value, \"n->mac_table.in_use * ETH_ALEN\" can get\npositive and bigger than mac_table.macs. For example 0x81000000\nsatisfies this condition when ETH_ALEN is 6.\n\nFix it by making the value unsigned.\nFor consistency, change first_multi as well.\n\nNote: all call sites were audited to confirm that\nmaking them unsigned didn't cause any issues:\nit turns out we actually never do math on them,\nso it's easy to validate because both values are\nalways <= MAC_TABLE_ENTRIES.\n\nReviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Laszlo Ersek <lersek@redhat.com>\nSigned-off-by: Juan Quintela <quintela@redhat.com>",
    "before_after_code_files": [
      "include/hw/virtio/virtio-net.h||include/hw/virtio/virtio-net.h"
    ]
  },
  "patch_diff": {
    "include/hw/virtio/virtio-net.h||include/hw/virtio/virtio-net.h": [
      "File: include/hw/virtio/virtio-net.h -> include/hw/virtio/virtio-net.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "176:     uint8_t nobcast;",
      "177:     uint8_t vhost_started;",
      "178:     struct {",
      "181:         uint8_t multi_overflow;",
      "182:         uint8_t uni_overflow;",
      "183:         uint8_t *macs;",
      "",
      "[Removed Lines]",
      "179:         int in_use;",
      "180:         int first_multi;",
      "",
      "[Added Lines]",
      "179:         uint32_t in_use;",
      "180:         uint32_t first_multi;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7872f3e77eefa97a6babccc63400c6e7d8260e5c",
      "candidate_info": {
        "commit_hash": "7872f3e77eefa97a6babccc63400c6e7d8260e5c",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/7872f3e77eefa97a6babccc63400c6e7d8260e5c",
        "files": [
          "include/hw/virtio/virtio-net.h"
        ],
        "message": "virtio-net: fix buffer overflow on invalid state load\n\nCVE-2013-4148 QEMU 1.0 integer conversion in\nvirtio_net_load()@hw/net/virtio-net.c\n\nDeals with loading a corrupted savevm image.\n\n>         n->mac_table.in_use = qemu_get_be32(f);\n\nin_use is int so it can get negative when assigned 32bit unsigned value.\n\n>         /* MAC_TABLE_ENTRIES may be different from the saved image */\n>         if (n->mac_table.in_use <= MAC_TABLE_ENTRIES) {\n\npassing this check ^^^\n\n>             qemu_get_buffer(f, n->mac_table.macs,\n>                             n->mac_table.in_use * ETH_ALEN);\n\nwith good in_use value, \"n->mac_table.in_use * ETH_ALEN\" can get\npositive and bigger than mac_table.macs. For example 0x81000000\nsatisfies this condition when ETH_ALEN is 6.\n\nFix it by making the value unsigned.\nFor consistency, change first_multi as well.\n\nNote: all call sites were audited to confirm that\nmaking them unsigned didn't cause any issues:\nit turns out we actually never do math on them,\nso it's easy to validate because both values are\nalways <= MAC_TABLE_ENTRIES.\n\nReviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Laszlo Ersek <lersek@redhat.com>\nSigned-off-by: Juan Quintela <quintela@redhat.com>\n(cherry picked from commit 71f7fe48e10a8437c9d42d859389f37157f59980)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "include/hw/virtio/virtio-net.h||include/hw/virtio/virtio-net.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "include/hw/virtio/virtio-net.h||include/hw/virtio/virtio-net.h"
          ],
          "candidate": [
            "include/hw/virtio/virtio-net.h||include/hw/virtio/virtio-net.h"
          ]
        }
      },
      "candidate_diff": {
        "include/hw/virtio/virtio-net.h||include/hw/virtio/virtio-net.h": [
          "File: include/hw/virtio/virtio-net.h -> include/hw/virtio/virtio-net.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:     uint8_t nobcast;",
          "177:     uint8_t vhost_started;",
          "178:     struct {",
          "181:         uint8_t multi_overflow;",
          "182:         uint8_t uni_overflow;",
          "183:         uint8_t *macs;",
          "",
          "[Removed Lines]",
          "179:         int in_use;",
          "180:         int first_multi;",
          "",
          "[Added Lines]",
          "179:         uint32_t in_use;",
          "180:         uint32_t first_multi;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "95f118fa825416f8791d5f93614f9e766afffa79",
      "candidate_info": {
        "commit_hash": "95f118fa825416f8791d5f93614f9e766afffa79",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/95f118fa825416f8791d5f93614f9e766afffa79",
        "files": [
          "include/hw/virtio/virtio-net.h"
        ],
        "message": "virtio-net: fix buffer overflow on invalid state load\n\nCVE-2013-4148 QEMU 1.0 integer conversion in\nvirtio_net_load()@hw/net/virtio-net.c\n\nDeals with loading a corrupted savevm image.\n\n>         n->mac_table.in_use = qemu_get_be32(f);\n\nin_use is int so it can get negative when assigned 32bit unsigned value.\n\n>         /* MAC_TABLE_ENTRIES may be different from the saved image */\n>         if (n->mac_table.in_use <= MAC_TABLE_ENTRIES) {\n\npassing this check ^^^\n\n>             qemu_get_buffer(f, n->mac_table.macs,\n>                             n->mac_table.in_use * ETH_ALEN);\n\nwith good in_use value, \"n->mac_table.in_use * ETH_ALEN\" can get\npositive and bigger than mac_table.macs. For example 0x81000000\nsatisfies this condition when ETH_ALEN is 6.\n\nFix it by making the value unsigned.\nFor consistency, change first_multi as well.\n\nNote: all call sites were audited to confirm that\nmaking them unsigned didn't cause any issues:\nit turns out we actually never do math on them,\nso it's easy to validate because both values are\nalways <= MAC_TABLE_ENTRIES.\n\nReviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Laszlo Ersek <lersek@redhat.com>\nSigned-off-by: Juan Quintela <quintela@redhat.com>\n(cherry picked from commit 71f7fe48e10a8437c9d42d859389f37157f59980)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "include/hw/virtio/virtio-net.h||include/hw/virtio/virtio-net.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "include/hw/virtio/virtio-net.h||include/hw/virtio/virtio-net.h"
          ],
          "candidate": [
            "include/hw/virtio/virtio-net.h||include/hw/virtio/virtio-net.h"
          ]
        }
      },
      "candidate_diff": {
        "include/hw/virtio/virtio-net.h||include/hw/virtio/virtio-net.h": [
          "File: include/hw/virtio/virtio-net.h -> include/hw/virtio/virtio-net.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:     uint8_t nobcast;",
          "177:     uint8_t vhost_started;",
          "178:     struct {",
          "181:         uint8_t multi_overflow;",
          "182:         uint8_t uni_overflow;",
          "183:         uint8_t *macs;",
          "",
          "[Removed Lines]",
          "179:         int in_use;",
          "180:         int first_multi;",
          "",
          "[Added Lines]",
          "179:         uint32_t in_use;",
          "180:         uint32_t first_multi;",
          "",
          "---------------"
        ]
      }
    }
  ]
}