{
  "cve_id": "CVE-2021-29592",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. The fix for CVE-2020-15209(https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15209) missed the case when the target shape of `Reshape` operator is given by the elements of a 1-D tensor. As such, the fix for the vulnerability(https://github.com/tensorflow/tensorflow/blob/9c1dc920d8ffb4893d6c9d27d1f039607b326743/tensorflow/lite/core/subgraph.cc#L1062-L1074) allowed passing a null-buffer-backed tensor with a 1D shape. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "f8378920345f4f4604202d4ab15ef64b2aceaa16",
  "patch_info": {
    "commit_hash": "f8378920345f4f4604202d4ab15ef64b2aceaa16",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/f8378920345f4f4604202d4ab15ef64b2aceaa16",
    "files": [
      "tensorflow/lite/core/subgraph.cc"
    ],
    "message": "Prevent a null pointer dereference in TFLite.\n\nPiperOrigin-RevId: 370800353\nChange-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05",
    "before_after_code_files": [
      "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
      "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "1060:         TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));",
      "1061:       }",
      "1062:       if (tensor->data.raw == nullptr && tensor->bytes > 0) {",
      "1067:           continue;",
      "1068:         } else {",
      "",
      "[Removed Lines]",
      "1063:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {",
      "",
      "[Added Lines]",
      "1063:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1 &&",
      "1064:             tensor->dims->size != 1) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0b5662bc2be13a8c8f044d925d87fb6e56247cd8",
      "candidate_info": {
        "commit_hash": "0b5662bc2be13a8c8f044d925d87fb6e56247cd8",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/0b5662bc2be13a8c8f044d925d87fb6e56247cd8",
        "files": [
          "tensorflow/lite/BUILD",
          "tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/model_test.cc",
          "tensorflow/lite/testdata/segment_sum_invalid_buffer.bin"
        ],
        "message": "[tflite] Ensure input tensors don't have `nullptr` buffers.\n\nA crafted TFLite model can force a node to have as input a tensor backed by a `nullptr` buffer. That is, by carefully changing the buffer index in the flatbuffer serialization, we can force the TFLite interpreter to consider a read-only tensor to be a read-write one and assume that there is an operator that has this tensor as output, writing to it and allocating memory before the tensor is used as input. If this does not happen, we get memory corruption.\n\nPiperOrigin-RevId: 332524692\nChange-Id: I57ef175152a29020af9ab041dc959e5631dce40f",
        "before_after_code_files": [
          "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc",
          "tensorflow/lite/model_test.cc||tensorflow/lite/model_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
          ],
          "candidate": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
          "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <cstdint>",
          "21: #include \"tensorflow/lite/arena_planner.h\"",
          "22: #include \"tensorflow/lite/c/common.h\"",
          "23: #include \"tensorflow/lite/context_util.h\"",
          "24: #include \"tensorflow/lite/core/api/tensor_utils.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"tensorflow/lite/builtin_ops.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1030:           tensor->data_is_stale) {",
          "1031:         TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));",
          "1032:       }",
          "1033:     }",
          "1035:     if (check_cancelled_func_ != nullptr &&",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1034:       if (tensor->data.raw == nullptr && tensor->bytes > 0) {",
          "1035:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {",
          "1039:           continue;",
          "1040:         } else {",
          "1043:           ReportError(\"Input tensor %d lacks data\", tensor_index);",
          "1044:           return kTfLiteError;",
          "1045:         }",
          "1046:       }",
          "",
          "---------------"
        ],
        "tensorflow/lite/model_test.cc||tensorflow/lite/model_test.cc": [
          "File: tensorflow/lite/model_test.cc -> tensorflow/lite/model_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "438: }",
          "459: }",
          "",
          "[Removed Lines]",
          "441: TEST(BasicFlatBufferModel, TestHandleMalformedModel) {",
          "442:   const auto model_paths = {",
          "444:       \"tensorflow/lite/testdata/add_shared_tensors.bin\",",
          "445:   };",
          "447:   for (const auto& model_path : model_paths) {",
          "448:     std::unique_ptr<tflite::FlatBufferModel> model =",
          "449:         FlatBufferModel::BuildFromFile(model_path);",
          "450:     ASSERT_NE(model, nullptr);",
          "452:     tflite::ops::builtin::BuiltinOpResolver resolver;",
          "453:     InterpreterBuilder builder(*model, resolver);",
          "454:     std::unique_ptr<Interpreter> interpreter;",
          "455:     ASSERT_EQ(builder(&interpreter), kTfLiteOk);",
          "456:     ASSERT_NE(interpreter, nullptr);",
          "457:     ASSERT_NE(interpreter->AllocateTensors(), kTfLiteOk);",
          "458:   }",
          "",
          "[Added Lines]",
          "447: TEST(BasicFlatBufferModel, TestHandleMalformedModelReuseTensor) {",
          "448:   const auto model_path =",
          "449:       \"tensorflow/lite/testdata/add_shared_tensors.bin\";",
          "451:   std::unique_ptr<tflite::FlatBufferModel> model =",
          "452:       FlatBufferModel::BuildFromFile(model_path);",
          "453:   ASSERT_NE(model, nullptr);",
          "455:   tflite::ops::builtin::BuiltinOpResolver resolver;",
          "456:   InterpreterBuilder builder(*model, resolver);",
          "457:   std::unique_ptr<Interpreter> interpreter;",
          "458:   ASSERT_EQ(builder(&interpreter), kTfLiteOk);",
          "459:   ASSERT_NE(interpreter, nullptr);",
          "460:   ASSERT_NE(interpreter->AllocateTensors(), kTfLiteOk);",
          "461: }",
          "468: TEST(BasicFlatBufferModel, TestHandleMalformedModelInvalidBuffer) {",
          "469:   const auto model_path =",
          "470:       \"tensorflow/lite/testdata/segment_sum_invalid_buffer.bin\";",
          "472:   std::unique_ptr<tflite::FlatBufferModel> model =",
          "473:       FlatBufferModel::BuildFromFile(model_path);",
          "474:   ASSERT_NE(model, nullptr);",
          "476:   tflite::ops::builtin::BuiltinOpResolver resolver;",
          "477:   InterpreterBuilder builder(*model, resolver);",
          "478:   std::unique_ptr<Interpreter> interpreter;",
          "479:   ASSERT_EQ(builder(&interpreter), kTfLiteOk);",
          "480:   ASSERT_NE(interpreter, nullptr);",
          "481:   ASSERT_EQ(interpreter->AllocateTensors(), kTfLiteOk);",
          "482:   ASSERT_NE(interpreter->Invoke(), kTfLiteOk);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0687d0bfb858af7c036300ede99b5d8860769984",
      "candidate_info": {
        "commit_hash": "0687d0bfb858af7c036300ede99b5d8860769984",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/0687d0bfb858af7c036300ede99b5d8860769984",
        "files": [
          "tensorflow/lite/core/subgraph.cc"
        ],
        "message": "Prevent a null pointer dereference in TFLite.\n\nPiperOrigin-RevId: 370800353\nChange-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05",
        "before_after_code_files": [
          "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
          ],
          "candidate": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
          "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "973:         TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));",
          "974:       }",
          "975:       if (tensor->data.raw == nullptr && tensor->bytes > 0) {",
          "980:           continue;",
          "981:         } else {",
          "",
          "[Removed Lines]",
          "976:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {",
          "",
          "[Added Lines]",
          "976:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1 &&",
          "977:             tensor->dims->size != 1) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e07cdb62febb3e165f2e20c45db4c76132d69f0",
      "candidate_info": {
        "commit_hash": "8e07cdb62febb3e165f2e20c45db4c76132d69f0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/8e07cdb62febb3e165f2e20c45db4c76132d69f0",
        "files": [
          "tensorflow/lite/core/subgraph.cc"
        ],
        "message": "Prevent a null pointer dereference in TFLite.\n\nPiperOrigin-RevId: 370800353\nChange-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05",
        "before_after_code_files": [
          "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
          ],
          "candidate": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
          "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1033:         TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));",
          "1034:       }",
          "1035:       if (tensor->data.raw == nullptr && tensor->bytes > 0) {",
          "1040:           continue;",
          "1041:         } else {",
          "",
          "[Removed Lines]",
          "1036:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {",
          "",
          "[Added Lines]",
          "1036:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1 &&",
          "1037:             tensor->dims->size != 1) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8ff3556aa71576a2be66bf761a5ba48bf57eeccf",
      "candidate_info": {
        "commit_hash": "8ff3556aa71576a2be66bf761a5ba48bf57eeccf",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/8ff3556aa71576a2be66bf761a5ba48bf57eeccf",
        "files": [
          "tensorflow/lite/core/subgraph.cc"
        ],
        "message": "Prevent a null pointer dereference in TFLite.\n\nPiperOrigin-RevId: 370800353\nChange-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05",
        "before_after_code_files": [
          "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
          ],
          "candidate": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
          "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1037:         TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));",
          "1038:       }",
          "1039:       if (tensor->data.raw == nullptr && tensor->bytes > 0) {",
          "1044:           continue;",
          "1045:         } else {",
          "",
          "[Removed Lines]",
          "1040:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {",
          "",
          "[Added Lines]",
          "1040:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1 &&",
          "1041:             tensor->dims->size != 1) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dad0ed803834b0e3daae0f8246deafaec9576da5",
      "candidate_info": {
        "commit_hash": "dad0ed803834b0e3daae0f8246deafaec9576da5",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/dad0ed803834b0e3daae0f8246deafaec9576da5",
        "files": [
          "tensorflow/lite/core/subgraph.cc"
        ],
        "message": "Prevent a null pointer dereference in TFLite.\n\nPiperOrigin-RevId: 370800353\nChange-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05",
        "before_after_code_files": [
          "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
          ],
          "candidate": [
            "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/core/subgraph.cc||tensorflow/lite/core/subgraph.cc": [
          "File: tensorflow/lite/core/subgraph.cc -> tensorflow/lite/core/subgraph.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "794:         TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));",
          "795:       }",
          "796:       if (tensor->data.raw == nullptr && tensor->bytes > 0) {",
          "801:           continue;",
          "802:         } else {",
          "",
          "[Removed Lines]",
          "797:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {",
          "",
          "[Added Lines]",
          "797:         if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1 &&",
          "798:             tensor->dims->size != 1) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}