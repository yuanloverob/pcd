{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "619c589bdb2fc52e4f180db548222e2b7ab169d8",
      "candidate_info": {
        "commit_hash": "619c589bdb2fc52e4f180db548222e2b7ab169d8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/619c589bdb2fc52e4f180db548222e2b7ab169d8",
        "files": [
          "doc/ssl/SSL_CTX_set_options.pod",
          "include/openssl/ssl.h",
          "ssl/t1_lib.c"
        ],
        "message": "Add SSL_OP_NO_ENCRYPT_THEN_MAC\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit cde6145ba19a2fce039cf054a89e49f67c623c59)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h",
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "297: # define SSL_OP_NO_COMPRESSION                           0x00020000U",
          "299: # define SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION        0x00040000U",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "301: # define SSL_OP_NO_ENCRYPT_THEN_MAC                      0x00080000U",
          "",
          "---------------"
        ],
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1360:     if (!SSL_IS_DTLS(s)) {",
          "",
          "[Added Lines]",
          "1361:     if (!SSL_IS_DTLS(s) && !(s->options & SSL_OP_NO_ENCRYPT_THEN_MAC)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2285:                 return 0;",
          "2286:         }",
          "2287: #endif",
          "2289:             s->tlsext_use_etm = 1;",
          "",
          "[Removed Lines]",
          "2288:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
          "",
          "[Added Lines]",
          "2289:         else if (type == TLSEXT_TYPE_encrypt_then_mac &&",
          "2290:                  !(s->options & SSL_OP_NO_ENCRYPT_THEN_MAC))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2605: #endif",
          "2606:         else if (type == TLSEXT_TYPE_encrypt_then_mac) {",
          "2609:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
          "2610:                 s->tlsext_use_etm = 1;",
          "2611:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
          "",
          "[Removed Lines]",
          "2608:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
          "",
          "[Added Lines]",
          "2610:             if (!(s->options & SSL_OP_NO_ENCRYPT_THEN_MAC) &&",
          "2611:                 s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca80ba81e243c30873cd11870422a3873a64be73",
      "candidate_info": {
        "commit_hash": "ca80ba81e243c30873cd11870422a3873a64be73",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ca80ba81e243c30873cd11870422a3873a64be73",
        "files": [
          "crypto/asn1/tasn_new.c"
        ],
        "message": "asn1_item_embed_new(): don't free an embedded item\n\nAn embedded item wasn't allocated separately on the heap, so don't\nfree it as if it was.\n\nIssue discovered by Pavel Kopyl\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4572)\n\n(cherry picked from commit 590bbdfdf43b97abf8817f506f8ab46687d1eadd)",
        "before_after_code_files": [
          "crypto/asn1/tasn_new.c||crypto/asn1/tasn_new.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/tasn_new.c||crypto/asn1/tasn_new.c": [
          "File: crypto/asn1/tasn_new.c -> crypto/asn1/tasn_new.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:     return 1;",
          "144:  memerr2:",
          "146:  memerr:",
          "147:     ASN1err(ASN1_F_ASN1_ITEM_EMBED_NEW, ERR_R_MALLOC_FAILURE);",
          "148: #ifndef OPENSSL_NO_CRYPTO_MDEBUG",
          "",
          "[Removed Lines]",
          "145:     ASN1_item_ex_free(pval, it);",
          "",
          "[Added Lines]",
          "145:     if (!embed)",
          "146:         ASN1_item_ex_free(pval, it);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "151:     return 0;",
          "153:  auxerr2:",
          "155:  auxerr:",
          "156:     ASN1err(ASN1_F_ASN1_ITEM_EMBED_NEW, ASN1_R_AUX_ERROR);",
          "157: #ifndef OPENSSL_NO_CRYPTO_MDEBUG",
          "",
          "[Removed Lines]",
          "154:     ASN1_item_ex_free(pval, it);",
          "",
          "[Added Lines]",
          "155:     if (!embed)",
          "156:         ASN1_item_ex_free(pval, it);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5bfb357a0d2046fc75daf67a5bc019eb87443729",
      "candidate_info": {
        "commit_hash": "5bfb357a0d2046fc75daf67a5bc019eb87443729",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5bfb357a0d2046fc75daf67a5bc019eb87443729",
        "files": [
          "ssl/t1_trce.c"
        ],
        "message": "Fix a switch statement fallthrough\n\nSSL_trace() has a case which was inadvertently falling through.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4888)",
        "before_after_code_files": [
          "ssl/t1_trce.c||ssl/t1_trce.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/t1_trce.c||ssl/t1_trce.c": [
          "File: ssl/t1_trce.c -> ssl/t1_trce.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1301:         break;",
          "1303:     case SSL3_RT_ALERT:",
          "1305:             BIO_puts(bio, \"    Illegal Alert Length\\n\");",
          "1307:             BIO_printf(bio, \"    Level=%s(%d), description=%s(%d)\\n\",",
          "1308:                        SSL_alert_type_string_long(msg[0] << 8),",
          "1309:                        msg[0], SSL_alert_desc_string_long(msg[1]), msg[1]);",
          "1310:         }",
          "1311:     case DTLS1_RT_HEARTBEAT:",
          "1312:         ssl_print_heartbeat(bio, 4, msg, msglen);",
          "1313:         break;",
          "",
          "[Removed Lines]",
          "1304:         if (msglen != 2)",
          "1306:         else {",
          "",
          "[Added Lines]",
          "1304:         if (msglen != 2) {",
          "1306:         } else {",
          "1311:         break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eea5f335b81d89554272a1fab8de9e40656509da",
      "candidate_info": {
        "commit_hash": "eea5f335b81d89554272a1fab8de9e40656509da",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/eea5f335b81d89554272a1fab8de9e40656509da",
        "files": [
          "crypto/rsa/rsa_pk1.c"
        ],
        "message": "Remove resolved TODO\n\nFixed in 5b8fa431ae8eb5a18ba913494119e394230d4b70\n\n[ci skip]\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3924)",
        "before_after_code_files": [
          "crypto/rsa/rsa_pk1.c||crypto/rsa/rsa_pk1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rsa/rsa_pk1.c||crypto/rsa/rsa_pk1.c": [
          "File: crypto/rsa/rsa_pk1.c -> crypto/rsa/rsa_pk1.c"
        ]
      }
    },
    {
      "candidate_hash": "1a7d768dc33ad6073f60934fa5b64fa01d9a0a71",
      "candidate_info": {
        "commit_hash": "1a7d768dc33ad6073f60934fa5b64fa01d9a0a71",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1a7d768dc33ad6073f60934fa5b64fa01d9a0a71",
        "files": [
          "crypto/x509/by_file.c"
        ],
        "message": "Avoid surpising password dialog in X509 file lookup.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4111)\n\n(cherry picked from commit db854bb14a7010712cfc02861731399b1b587474)",
        "before_after_code_files": [
          "crypto/x509/by_file.c||crypto/x509/by_file.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/by_file.c||crypto/x509/by_file.c": [
          "File: crypto/x509/by_file.c -> crypto/x509/by_file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:     if (type == X509_FILETYPE_PEM) {",
          "92:         for (;;) {",
          "94:             if (x == NULL) {",
          "95:                 if ((ERR_GET_REASON(ERR_peek_last_error()) ==",
          "96:                      PEM_R_NO_START_LINE) && (count > 0)) {",
          "",
          "[Removed Lines]",
          "93:             x = PEM_read_bio_X509_AUX(in, NULL, NULL, NULL);",
          "",
          "[Added Lines]",
          "93:             x = PEM_read_bio_X509_AUX(in, NULL, NULL, \"\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148:     if (type == X509_FILETYPE_PEM) {",
          "149:         for (;;) {",
          "151:             if (x == NULL) {",
          "152:                 if ((ERR_GET_REASON(ERR_peek_last_error()) ==",
          "153:                      PEM_R_NO_START_LINE) && (count > 0)) {",
          "",
          "[Removed Lines]",
          "150:             x = PEM_read_bio_X509_CRL(in, NULL, NULL, NULL);",
          "",
          "[Added Lines]",
          "150:             x = PEM_read_bio_X509_CRL(in, NULL, NULL, \"\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "199:         X509err(X509_F_X509_LOAD_CERT_CRL_FILE, ERR_R_SYS_LIB);",
          "200:         return 0;",
          "201:     }",
          "203:     BIO_free(in);",
          "204:     if (!inf) {",
          "205:         X509err(X509_F_X509_LOAD_CERT_CRL_FILE, ERR_R_PEM_LIB);",
          "",
          "[Removed Lines]",
          "202:     inf = PEM_X509_INFO_read_bio(in, NULL, NULL, NULL);",
          "",
          "[Added Lines]",
          "202:     inf = PEM_X509_INFO_read_bio(in, NULL, NULL, \"\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}