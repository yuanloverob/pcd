{
  "cve_id": "CVE-2019-19531",
  "cve_desc": "In the Linux kernel before 5.2.9, there is a use-after-free bug that can be caused by a malicious USB device in the drivers/usb/misc/yurex.c driver, aka CID-fc05481b2fca.",
  "repo": "torvalds/linux",
  "patch_hash": "fc05481b2fcabaaeccf63e32ac1baab54e5b6963",
  "patch_info": {
    "commit_hash": "fc05481b2fcabaaeccf63e32ac1baab54e5b6963",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/fc05481b2fcabaaeccf63e32ac1baab54e5b6963",
    "files": [
      "drivers/usb/misc/yurex.c"
    ],
    "message": "usb: yurex: Fix use-after-free in yurex_delete\n\nsyzbot reported the following crash [0]:\n\nBUG: KASAN: use-after-free in usb_free_coherent+0x79/0x80\ndrivers/usb/core/usb.c:928\nRead of size 8 at addr ffff8881b18599c8 by task syz-executor.4/16007\n\nCPU: 0 PID: 16007 Comm: syz-executor.4 Not tainted 5.3.0-rc2+ #23\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS\nGoogle 01/01/2011\nCall Trace:\n  __dump_stack lib/dump_stack.c:77 [inline]\n  dump_stack+0xca/0x13e lib/dump_stack.c:113\n  print_address_description+0x6a/0x32c mm/kasan/report.c:351\n  __kasan_report.cold+0x1a/0x33 mm/kasan/report.c:482\n  kasan_report+0xe/0x12 mm/kasan/common.c:612\n  usb_free_coherent+0x79/0x80 drivers/usb/core/usb.c:928\n  yurex_delete+0x138/0x330 drivers/usb/misc/yurex.c:100\n  kref_put include/linux/kref.h:65 [inline]\n  yurex_release+0x66/0x90 drivers/usb/misc/yurex.c:392\n  __fput+0x2d7/0x840 fs/file_table.c:280\n  task_work_run+0x13f/0x1c0 kernel/task_work.c:113\n  tracehook_notify_resume include/linux/tracehook.h:188 [inline]\n  exit_to_usermode_loop+0x1d2/0x200 arch/x86/entry/common.c:163\n  prepare_exit_to_usermode arch/x86/entry/common.c:194 [inline]\n  syscall_return_slowpath arch/x86/entry/common.c:274 [inline]\n  do_syscall_64+0x45f/0x580 arch/x86/entry/common.c:299\n  entry_SYSCALL_64_after_hwframe+0x49/0xbe\nRIP: 0033:0x413511\nCode: 75 14 b8 03 00 00 00 0f 05 48 3d 01 f0 ff ff 0f 83 04 1b 00 00 c3 48\n83 ec 08 e8 0a fc ff ff 48 89 04 24 b8 03 00 00 00 0f 05 <48> 8b 3c 24 48\n89 c2 e8 53 fc ff ff 48 89 d0 48 83 c4 08 48 3d 01\nRSP: 002b:00007ffc424ea2e0 EFLAGS: 00000293 ORIG_RAX: 0000000000000003\nRAX: 0000000000000000 RBX: 0000000000000007 RCX: 0000000000413511\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000006\nRBP: 0000000000000001 R08: 0000000029a2fc22 R09: 0000000029a2fc26\nR10: 00007ffc424ea3c0 R11: 0000000000000293 R12: 000000000075c9a0\nR13: 000000000075c9a0 R14: 0000000000761938 R15: ffffffffffffffff\n\nAllocated by task 2776:\n  save_stack+0x1b/0x80 mm/kasan/common.c:69\n  set_track mm/kasan/common.c:77 [inline]\n  __kasan_kmalloc mm/kasan/common.c:487 [inline]\n  __kasan_kmalloc.constprop.0+0xbf/0xd0 mm/kasan/common.c:460\n  kmalloc include/linux/slab.h:552 [inline]\n  kzalloc include/linux/slab.h:748 [inline]\n  usb_alloc_dev+0x51/0xf95 drivers/usb/core/usb.c:583\n  hub_port_connect drivers/usb/core/hub.c:5004 [inline]\n  hub_port_connect_change drivers/usb/core/hub.c:5213 [inline]\n  port_event drivers/usb/core/hub.c:5359 [inline]\n  hub_event+0x15c0/0x3640 drivers/usb/core/hub.c:5441\n  process_one_work+0x92b/0x1530 kernel/workqueue.c:2269\n  worker_thread+0x96/0xe20 kernel/workqueue.c:2415\n  kthread+0x318/0x420 kernel/kthread.c:255\n  ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352\n\nFreed by task 16007:\n  save_stack+0x1b/0x80 mm/kasan/common.c:69\n  set_track mm/kasan/common.c:77 [inline]\n  __kasan_slab_free+0x130/0x180 mm/kasan/common.c:449\n  slab_free_hook mm/slub.c:1423 [inline]\n  slab_free_freelist_hook mm/slub.c:1470 [inline]\n  slab_free mm/slub.c:3012 [inline]\n  kfree+0xe4/0x2f0 mm/slub.c:3953\n  device_release+0x71/0x200 drivers/base/core.c:1064\n  kobject_cleanup lib/kobject.c:693 [inline]\n  kobject_release lib/kobject.c:722 [inline]\n  kref_put include/linux/kref.h:65 [inline]\n  kobject_put+0x171/0x280 lib/kobject.c:739\n  put_device+0x1b/0x30 drivers/base/core.c:2213\n  usb_put_dev+0x1f/0x30 drivers/usb/core/usb.c:725\n  yurex_delete+0x40/0x330 drivers/usb/misc/yurex.c:95\n  kref_put include/linux/kref.h:65 [inline]\n  yurex_release+0x66/0x90 drivers/usb/misc/yurex.c:392\n  __fput+0x2d7/0x840 fs/file_table.c:280\n  task_work_run+0x13f/0x1c0 kernel/task_work.c:113\n  tracehook_notify_resume include/linux/tracehook.h:188 [inline]\n  exit_to_usermode_loop+0x1d2/0x200 arch/x86/entry/common.c:163\n  prepare_exit_to_usermode arch/x86/entry/common.c:194 [inline]\n  syscall_return_slowpath arch/x86/entry/common.c:274 [inline]\n  do_syscall_64+0x45f/0x580 arch/x86/entry/common.c:299\n  entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nThe buggy address belongs to the object at ffff8881b1859980\n  which belongs to the cache kmalloc-2k of size 2048\nThe buggy address is located 72 bytes inside of\n  2048-byte region [ffff8881b1859980, ffff8881b185a180)\nThe buggy address belongs to the page:\npage:ffffea0006c61600 refcount:1 mapcount:0 mapping:ffff8881da00c000\nindex:0x0 compound_mapcount: 0\nflags: 0x200000000010200(slab|head)\nraw: 0200000000010200 0000000000000000 0000000100000001 ffff8881da00c000\nraw: 0000000000000000 00000000000f000f 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n  ffff8881b1859880: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n  ffff8881b1859900: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n> ffff8881b1859980: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                               ^\n  ffff8881b1859a00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n  ffff8881b1859a80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n==================================================================\n\nA quick look at the yurex_delete() shows that we drop the reference\nto the usb_device before releasing any buffers associated with the\ndevice. Delay the reference drop until we have finished the cleanup.\n\n[0] https://lore.kernel.org/lkml/0000000000003f86d8058f0bd671@google.com/\n\nFixes: 6bc235a2e24a5e (\"USB: add driver for Meywa-Denki & Kayac YUREX\")\nCc: Jiri Kosina <jkosina@suse.cz>\nCc: Tomoki Sekiyama <tomoki.sekiyama@gmail.com>\nCc: Oliver Neukum <oneukum@suse.com>\nCc: andreyknvl@google.com\nCc: gregkh@linuxfoundation.org\nCc: Alan Stern <stern@rowland.harvard.edu>\nCc: syzkaller-bugs@googlegroups.com\nCc: dtor@chromium.org\nReported-by: syzbot+d1fedb1c1fdb07fca507@syzkaller.appspotmail.com\nSigned-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>\nCc: stable <stable@vger.kernel.org>\nLink: https://lore.kernel.org/r/20190805111528.6758-1-suzuki.poulose@arm.com\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "before_after_code_files": [
      "drivers/usb/misc/yurex.c||drivers/usb/misc/yurex.c"
    ]
  },
  "patch_diff": {
    "drivers/usb/misc/yurex.c||drivers/usb/misc/yurex.c": [
      "File: drivers/usb/misc/yurex.c -> drivers/usb/misc/yurex.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "93:  dev_dbg(&dev->interface->dev, \"%s\\n\", __func__);",
      "96:  if (dev->cntl_urb) {",
      "97:   usb_kill_urb(dev->cntl_urb);",
      "98:   kfree(dev->cntl_req);",
      "",
      "[Removed Lines]",
      "95:  usb_put_dev(dev->udev);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "108:     dev->int_buffer, dev->urb->transfer_dma);",
      "109:   usb_free_urb(dev->urb);",
      "110:  }",
      "111:  kfree(dev);",
      "112: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "110:  usb_put_dev(dev->udev);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d0a255e795ab976481565f6ac178314b34fbf891",
      "candidate_info": {
        "commit_hash": "d0a255e795ab976481565f6ac178314b34fbf891",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d0a255e795ab976481565f6ac178314b34fbf891",
        "files": [
          "drivers/block/loop.c"
        ],
        "message": "loop: set PF_MEMALLOC_NOIO for the worker thread\n\nA deadlock with this stacktrace was observed.\n\nThe loop thread does a GFP_KERNEL allocation, it calls into dm-bufio\nshrinker and the shrinker depends on I/O completion in the dm-bufio\nsubsystem.\n\nIn order to fix the deadlock (and other similar ones), we set the flag\nPF_MEMALLOC_NOIO at loop thread entry.\n\nPID: 474    TASK: ffff8813e11f4600  CPU: 10  COMMAND: \"kswapd0\"\n   #0 [ffff8813dedfb938] __schedule at ffffffff8173f405\n   #1 [ffff8813dedfb990] schedule at ffffffff8173fa27\n   #2 [ffff8813dedfb9b0] schedule_timeout at ffffffff81742fec\n   #3 [ffff8813dedfba60] io_schedule_timeout at ffffffff8173f186\n   #4 [ffff8813dedfbaa0] bit_wait_io at ffffffff8174034f\n   #5 [ffff8813dedfbac0] __wait_on_bit at ffffffff8173fec8\n   #6 [ffff8813dedfbb10] out_of_line_wait_on_bit at ffffffff8173ff81\n   #7 [ffff8813dedfbb90] __make_buffer_clean at ffffffffa038736f [dm_bufio]\n   #8 [ffff8813dedfbbb0] __try_evict_buffer at ffffffffa0387bb8 [dm_bufio]\n   #9 [ffff8813dedfbbd0] dm_bufio_shrink_scan at ffffffffa0387cc3 [dm_bufio]\n  #10 [ffff8813dedfbc40] shrink_slab at ffffffff811a87ce\n  #11 [ffff8813dedfbd30] shrink_zone at ffffffff811ad778\n  #12 [ffff8813dedfbdc0] kswapd at ffffffff811ae92f\n  #13 [ffff8813dedfbec0] kthread at ffffffff810a8428\n  #14 [ffff8813dedfbf50] ret_from_fork at ffffffff81745242\n\n  PID: 14127  TASK: ffff881455749c00  CPU: 11  COMMAND: \"loop1\"\n   #0 [ffff88272f5af228] __schedule at ffffffff8173f405\n   #1 [ffff88272f5af280] schedule at ffffffff8173fa27\n   #2 [ffff88272f5af2a0] schedule_preempt_disabled at ffffffff8173fd5e\n   #3 [ffff88272f5af2b0] __mutex_lock_slowpath at ffffffff81741fb5\n   #4 [ffff88272f5af330] mutex_lock at ffffffff81742133\n   #5 [ffff88272f5af350] dm_bufio_shrink_count at ffffffffa03865f9 [dm_bufio]\n   #6 [ffff88272f5af380] shrink_slab at ffffffff811a86bd\n   #7 [ffff88272f5af470] shrink_zone at ffffffff811ad778\n   #8 [ffff88272f5af500] do_try_to_free_pages at ffffffff811adb34\n   #9 [ffff88272f5af590] try_to_free_pages at ffffffff811adef8\n  #10 [ffff88272f5af610] __alloc_pages_nodemask at ffffffff811a09c3\n  #11 [ffff88272f5af710] alloc_pages_current at ffffffff811e8b71\n  #12 [ffff88272f5af760] new_slab at ffffffff811f4523\n  #13 [ffff88272f5af7b0] __slab_alloc at ffffffff8173a1b5\n  #14 [ffff88272f5af880] kmem_cache_alloc at ffffffff811f484b\n  #15 [ffff88272f5af8d0] do_blockdev_direct_IO at ffffffff812535b3\n  #16 [ffff88272f5afb00] __blockdev_direct_IO at ffffffff81255dc3\n  #17 [ffff88272f5afb30] xfs_vm_direct_IO at ffffffffa01fe3fc [xfs]\n  #18 [ffff88272f5afb90] generic_file_read_iter at ffffffff81198994\n  #19 [ffff88272f5afc50] __dta_xfs_file_read_iter_2398 at ffffffffa020c970 [xfs]\n  #20 [ffff88272f5afcc0] lo_rw_aio at ffffffffa0377042 [loop]\n  #21 [ffff88272f5afd70] loop_queue_work at ffffffffa0377c3b [loop]\n  #22 [ffff88272f5afe60] kthread_worker_fn at ffffffff810a8a0c\n  #23 [ffff88272f5afec0] kthread at ffffffff810a8428\n  #24 [ffff88272f5aff50] ret_from_fork at ffffffff81745242\n\nSigned-off-by: Mikulas Patocka <mpatocka@redhat.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
        "before_after_code_files": [
          "drivers/block/loop.c||drivers/block/loop.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/block/loop.c||drivers/block/loop.c": [
          "File: drivers/block/loop.c -> drivers/block/loop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "886: static int loop_kthread_worker_fn(void *worker_ptr)",
          "887: {",
          "889:  return kthread_worker_fn(worker_ptr);",
          "890: }",
          "",
          "[Removed Lines]",
          "888:  current->flags |= PF_LESS_THROTTLE;",
          "",
          "[Added Lines]",
          "888:  current->flags |= PF_LESS_THROTTLE | PF_MEMALLOC_NOIO;",
          "",
          "---------------"
        ]
      }
    }
  ]
}