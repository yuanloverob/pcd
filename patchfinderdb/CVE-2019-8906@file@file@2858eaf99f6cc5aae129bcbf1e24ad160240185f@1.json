{
  "cve_id": "CVE-2019-8906",
  "cve_desc": "do_core_note in readelf.c in libmagic.a in file 5.35 has an out-of-bounds read because memcpy is misused.",
  "repo": "file/file",
  "patch_hash": "2858eaf99f6cc5aae129bcbf1e24ad160240185f",
  "patch_info": {
    "commit_hash": "2858eaf99f6cc5aae129bcbf1e24ad160240185f",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/2858eaf99f6cc5aae129bcbf1e24ad160240185f",
    "files": [
      "src/readelf.c"
    ],
    "message": "Avoid OOB read (found by ASAN reported by F. Alonso)",
    "before_after_code_files": [
      "src/readelf.c||src/readelf.c"
    ]
  },
  "patch_diff": {
    "src/readelf.c||src/readelf.c": [
      "File: src/readelf.c -> src/readelf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "31: #endif",
      "33: #ifdef BUILTIN_ELF",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.156 2018/10/19 00:33:04 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.157 2019/01/02 19:44:14 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "752:    char sbuf[512];",
      "753:    struct NetBSD_elfcore_procinfo pi;",
      "754:    memset(&pi, 0, sizeof(pi));",
      "757:    if (file_printf(ms, \", from '%.31s', pid=%u, uid=%u, \"",
      "758:        \"gid=%u, nlwps=%u, lwp=%u (signal %u/code %u)\",",
      "",
      "[Removed Lines]",
      "755:    memcpy(&pi, nbuf + doff, descsz);",
      "",
      "[Added Lines]",
      "755:    memcpy(&pi, nbuf + doff, MIN(descsz, sizeof(pi)));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2f866ff070bd81406f4e92a08273b5de64e2fe38",
      "candidate_info": {
        "commit_hash": "2f866ff070bd81406f4e92a08273b5de64e2fe38",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/2f866ff070bd81406f4e92a08273b5de64e2fe38",
        "files": [
          "src/readelf.c"
        ],
        "message": "better error handling, found by coverity.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.147 2018/08/01 09:56:24 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.148 2018/08/01 10:02:20 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "922:  offset = get_offset_from_virtaddr(ms, swap, clazz, fd, ph_off, ph_num,",
          "923:      fsize, virtaddr);",
          "925:   file_badread(ms);",
          "926:   return 0;",
          "927:  }",
          "",
          "[Removed Lines]",
          "924:  if ((buflen = pread(fd, buf, CAST(size_t, buflen), offset)) <= 0) {",
          "",
          "[Added Lines]",
          "924:  if (offset < 0 ||",
          "925:      (buflen = pread(fd, buf, CAST(size_t, buflen), offset)) <= 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5051a348736048743db1473318471933944f494",
      "candidate_info": {
        "commit_hash": "e5051a348736048743db1473318471933944f494",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/e5051a348736048743db1473318471933944f494",
        "files": [
          "src/readelf.c"
        ],
        "message": "hack around gcc not realizing things are initialized.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.167 2019/11/09 00:30:44 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.168 2019/12/16 03:49:19 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1141:   return xnh_sizeof + offset;",
          "1142:  }",
          "1144:  memcpy(xnh_addr, &nbuf[offset], xnh_sizeof);",
          "1145:  offset += xnh_sizeof;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1144:  memset(&nh32, 0, sizeof(nh32));",
          "1145:  memset(&nh64, 0, sizeof(nh64));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b9e60f088847f885b5c9fde61ff8fc9645843506",
      "candidate_info": {
        "commit_hash": "b9e60f088847f885b5c9fde61ff8fc9645843506",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/b9e60f088847f885b5c9fde61ff8fc9645843506",
        "files": [
          "src/readelf.c"
        ],
        "message": "remove extra parens",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.150 2018/08/02 12:46:02 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.151 2018/08/03 09:00:13 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1118:  }",
          "1120:  if (namesz & 0x80000000) {",
          "1122:       CAST(unsigned long, namesz)) == -1)",
          "1123:    return -1;",
          "1124:      return 0;",
          "",
          "[Removed Lines]",
          "1121:   if (((file_printf(ms, \", bad note name size %#lx\",",
          "",
          "[Added Lines]",
          "1121:   if (file_printf(ms, \", bad note name size %#lx\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7d910ee8879dfbe80fe14bfc13c8fa6c6fe1d32",
      "candidate_info": {
        "commit_hash": "c7d910ee8879dfbe80fe14bfc13c8fa6c6fe1d32",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/c7d910ee8879dfbe80fe14bfc13c8fa6c6fe1d32",
        "files": [
          "src/file.h",
          "src/readelf.c",
          "src/softmagic.c"
        ],
        "message": "more lint fixes",
        "before_after_code_files": [
          "src/file.h||src/file.h",
          "src/readelf.c||src/readelf.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "382: #define CCAST(T, b) const_cast<T>(b)",
          "383: #else",
          "384: #define CAST(T, b) ((T)(b))",
          "386: #define CCAST(T, b) ((T)(uintptr_t)(b))",
          "387: #endif",
          "",
          "[Removed Lines]",
          "385: #define RCAST(T, b) ((T)(void *)(b))",
          "",
          "[Added Lines]",
          "385: #define RCAST(T, b) ((T)(uintptr_t)(b))",
          "",
          "---------------"
        ],
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.155 2018/10/19 00:26:08 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.156 2018/10/19 00:33:04 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "786:    pidoff = argoff + 81 + 2;",
          "787:    if (doff + pidoff + 4 <= size) {",
          "788:     if (file_printf(ms, \", pid=%u\",",
          "790:         doff + pidoff)))) == -1)",
          "791:      return 1;",
          "792:    }",
          "",
          "[Removed Lines]",
          "789:         elf_getu32(swap, *RCAST(uint32 *, (nbuf +",
          "",
          "[Added Lines]",
          "789:         elf_getu32(swap, *RCAST(uint32_t *, (nbuf +",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.271 2018/10/15 16:29:16 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.272 2018/10/19 00:33:04 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1435:   if ((size_t)-m->offset > b->elen)",
          "1436:    return -1;",
          "1437:   buffer_init(bb, -1, b->ebuf, b->elen);",
          "1439:  } else {",
          "1440:   if (cont_level == 0) {",
          "1441: normal:",
          "",
          "[Removed Lines]",
          "1438:   ms->eoffset = ms->offset = b->elen + m->offset;",
          "",
          "[Added Lines]",
          "1438:   ms->eoffset = ms->offset = (int32_t)(b->elen + m->offset);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd8fafe37ff2e729732bda5ad1de92a9d69110f3",
      "candidate_info": {
        "commit_hash": "bd8fafe37ff2e729732bda5ad1de92a9d69110f3",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/bd8fafe37ff2e729732bda5ad1de92a9d69110f3",
        "files": [
          "src/readelf.c"
        ],
        "message": "check file_printf()",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.148 2018/08/01 10:02:20 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.149 2018/08/01 10:09:47 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "577:     size_t noff, size_t doff, int *flags)",
          "578: {",
          "579:  if (namesz == 5 && strcmp((char *)&nbuf[noff], \"SuSE\") == 0 &&",
          "583:      return 1;",
          "584:  }",
          "",
          "[Removed Lines]",
          "580:      type == NT_GNU_VERSION && descsz == 2) {",
          "582:      file_printf(ms, \", for SuSE %d.%d\", nbuf[doff], nbuf[doff + 1]);",
          "",
          "[Added Lines]",
          "580:   type == NT_GNU_VERSION && descsz == 2) {",
          "582:   if (file_printf(ms, \", for SuSE %d.%d\", nbuf[doff],",
          "583:       nbuf[doff + 1]) == -1)",
          "584:       return -1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}