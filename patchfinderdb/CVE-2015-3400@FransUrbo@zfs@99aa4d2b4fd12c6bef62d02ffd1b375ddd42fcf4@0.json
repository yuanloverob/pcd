{
  "cve_id": "CVE-2015-3400",
  "cve_desc": "sharenfs 0.6.4, when built with commits bcdd594 and 7d08880 from the zfs repository, provides world readable access to the shared zfs file system, which might allow remote authenticated users to obtain sensitive information by reading shared files.",
  "repo": "FransUrbo/zfs",
  "patch_hash": "99aa4d2b4fd12c6bef62d02ffd1b375ddd42fcf4",
  "patch_info": {
    "commit_hash": "99aa4d2b4fd12c6bef62d02ffd1b375ddd42fcf4",
    "repo": "FransUrbo/zfs",
    "commit_url": "https://github.com/FransUrbo/zfs/commit/99aa4d2b4fd12c6bef62d02ffd1b375ddd42fcf4",
    "files": [
      "lib/libshare/libshare.c",
      "lib/libshare/libshare_impl.h",
      "lib/libshare/nfs.c"
    ],
    "message": "Move nfs.c:foreach_nfs_shareopt() to libshare.c:foreach_shareopt()\nso that it can be (re)used in other parts of libshare.",
    "before_after_code_files": [
      "lib/libshare/libshare.c||lib/libshare/libshare.c",
      "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h",
      "lib/libshare/nfs.c||lib/libshare/nfs.c"
    ]
  },
  "patch_diff": {
    "lib/libshare/libshare.c||lib/libshare/libshare.c": [
      "File: lib/libshare/libshare.c -> lib/libshare/libshare.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "56: static int fstypes_count;",
      "57: static sa_fstype_t *fstypes;",
      "59: sa_fstype_t *",
      "60: register_fstype(const char *name, const sa_share_ops_t *ops)",
      "61: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "63: int",
      "64: foreach_shareopt(const char *shareopts,",
      "65:     nfs_shareopt_callback_t callback, void *cookie)",
      "66: {",
      "67:  char *shareopts_dup, *opt, *cur, *value;",
      "68:  int was_nul, rc;",
      "70:  if (shareopts == NULL)",
      "71:   return (SA_OK);",
      "73:  shareopts_dup = strdup(shareopts);",
      "74:  if (shareopts_dup == NULL)",
      "75:   return (SA_NO_MEMORY);",
      "77:  opt = shareopts_dup;",
      "78:  was_nul = 0;",
      "80:  while (1) {",
      "81:   cur = opt;",
      "83:   while (*cur != ',' && *cur != '\\0')",
      "84:    cur++;",
      "86:   if (*cur == '\\0')",
      "87:    was_nul = 1;",
      "91:   if (cur > opt) {",
      "92:    value = strchr(opt, '=');",
      "94:    if (value != NULL) {",
      "96:     value++;",
      "97:    }",
      "99:    rc = callback(opt, value, cookie);",
      "101:    if (rc != SA_OK) {",
      "102:     free(shareopts_dup);",
      "103:     return (rc);",
      "104:    }",
      "105:   }",
      "107:   opt = cur + 1;",
      "109:   if (was_nul)",
      "110:    break;",
      "111:  }",
      "113:  free(shareopts_dup);",
      "115:  return (SA_OK);",
      "116: }",
      "",
      "---------------"
    ],
    "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h": [
      "File: lib/libshare/libshare_impl.h -> lib/libshare/libshare_impl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "67:  sa_share_impl_t shares;",
      "68: } *sa_handle_impl_t;",
      "70: sa_fstype_t *register_fstype(const char *name, const sa_share_ops_t *ops);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "70: typedef int (*nfs_shareopt_callback_t)(const char *, const char *, void *);",
      "73: int foreach_shareopt(const char *, nfs_shareopt_callback_t, void *);",
      "",
      "---------------"
    ],
    "lib/libshare/nfs.c||lib/libshare/nfs.c": [
      "File: lib/libshare/nfs.c -> lib/libshare/nfs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "45: static int nfs_exportfs_temp_fd = -1;",
      "50: typedef int (*nfs_host_callback_t)(const char *sharepath, const char *host,",
      "51:     const char *security, const char *access, void *cookie);",
      "113: typedef struct nfs_host_cookie_s {",
      "114:  nfs_host_callback_t callback;",
      "115:  const char *sharepath;",
      "",
      "[Removed Lines]",
      "47: typedef int (*nfs_shareopt_callback_t)(const char *opt, const char *value,",
      "48:     void *cookie);",
      "57: static int",
      "58: foreach_nfs_shareopt(const char *shareopts,",
      "59:     nfs_shareopt_callback_t callback, void *cookie)",
      "60: {",
      "61:  char *shareopts_dup, *opt, *cur, *value;",
      "62:  int was_nul, rc;",
      "64:  if (shareopts == NULL)",
      "65:   return (SA_OK);",
      "67:  shareopts_dup = strdup(shareopts);",
      "69:  if (shareopts_dup == NULL)",
      "70:   return (SA_NO_MEMORY);",
      "72:  opt = shareopts_dup;",
      "73:  was_nul = 0;",
      "75:  while (1) {",
      "76:   cur = opt;",
      "78:   while (*cur != ',' && *cur != '\\0')",
      "79:    cur++;",
      "81:   if (*cur == '\\0')",
      "82:    was_nul = 1;",
      "86:   if (cur > opt) {",
      "87:    value = strchr(opt, '=');",
      "89:    if (value != NULL) {",
      "91:     value++;",
      "92:    }",
      "94:    rc = callback(opt, value, cookie);",
      "96:    if (rc != SA_OK) {",
      "97:     free(shareopts_dup);",
      "98:     return (rc);",
      "99:    }",
      "100:   }",
      "102:   opt = cur + 1;",
      "104:   if (was_nul)",
      "105:    break;",
      "106:  }",
      "108:  free(shareopts_dup);",
      "110:  return (0);",
      "111: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "118: } nfs_host_cookie_t;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "390:  (void) add_linux_shareopt(plinux_opts, \"no_root_squash\", NULL);",
      "391:  (void) add_linux_shareopt(plinux_opts, \"mountpoint\", NULL);",
      "394:      plinux_opts);",
      "396:  if (rc != SA_OK) {",
      "",
      "[Removed Lines]",
      "393:  rc = foreach_nfs_shareopt(shareopts, get_linux_shareopts_cb,",
      "",
      "[Added Lines]",
      "330:  rc = foreach_shareopt(shareopts, get_linux_shareopts_cb,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5485b6d90ebbfb68644e35e702e9c0ee8017ee10",
      "candidate_info": {
        "commit_hash": "5485b6d90ebbfb68644e35e702e9c0ee8017ee10",
        "repo": "FransUrbo/zfs",
        "commit_url": "https://github.com/FransUrbo/zfs/commit/5485b6d90ebbfb68644e35e702e9c0ee8017ee10",
        "files": [
          "lib/libshare/libshare.c",
          "lib/libshare/libshare_impl.h",
          "lib/libshare/nfs.c"
        ],
        "message": "Move nfs.c:foreach_nfs_shareopt() to libshare.c:foreach_shareopt() so that it can be (re)used in other parts of libshare.",
        "before_after_code_files": [
          "lib/libshare/libshare.c||lib/libshare/libshare.c",
          "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h",
          "lib/libshare/nfs.c||lib/libshare/nfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/libshare/libshare.c||lib/libshare/libshare.c",
            "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h",
            "lib/libshare/nfs.c||lib/libshare/nfs.c"
          ],
          "candidate": [
            "lib/libshare/libshare.c||lib/libshare/libshare.c",
            "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h",
            "lib/libshare/nfs.c||lib/libshare/nfs.c"
          ]
        }
      },
      "candidate_diff": {
        "lib/libshare/libshare.c||lib/libshare/libshare.c": [
          "File: lib/libshare/libshare.c -> lib/libshare/libshare.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: static int fstypes_count;",
          "57: static sa_fstype_t *fstypes;",
          "59: sa_fstype_t *",
          "60: register_fstype(const char *name, const sa_share_ops_t *ops)",
          "61: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: int",
          "64: foreach_shareopt(const char *shareopts,",
          "65:     nfs_shareopt_callback_t callback, void *cookie)",
          "66: {",
          "67:  char *shareopts_dup, *opt, *cur, *value;",
          "68:  int was_nul, rc;",
          "70:  if (shareopts == NULL)",
          "71:   return (SA_OK);",
          "73:  shareopts_dup = strdup(shareopts);",
          "74:  if (shareopts_dup == NULL)",
          "75:   return (SA_NO_MEMORY);",
          "77:  opt = shareopts_dup;",
          "78:  was_nul = 0;",
          "80:  while (1) {",
          "81:   cur = opt;",
          "83:   while (*cur != ',' && *cur != '\\0')",
          "84:    cur++;",
          "86:   if (*cur == '\\0')",
          "87:    was_nul = 1;",
          "91:   if (cur > opt) {",
          "92:    value = strchr(opt, '=');",
          "94:    if (value != NULL) {",
          "96:     value++;",
          "97:    }",
          "99:    rc = callback(opt, value, cookie);",
          "101:    if (rc != SA_OK) {",
          "102:     free(shareopts_dup);",
          "103:     return (rc);",
          "104:    }",
          "105:   }",
          "107:   opt = cur + 1;",
          "109:   if (was_nul)",
          "110:    break;",
          "111:  }",
          "113:  free(shareopts_dup);",
          "115:  return (SA_OK);",
          "116: }",
          "",
          "---------------"
        ],
        "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h": [
          "File: lib/libshare/libshare_impl.h -> lib/libshare/libshare_impl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:  sa_share_impl_t shares;",
          "68: } *sa_handle_impl_t;",
          "70: sa_fstype_t *register_fstype(const char *name, const sa_share_ops_t *ops);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: typedef int (*nfs_shareopt_callback_t)(const char *, const char *, void *);",
          "73: int foreach_shareopt(const char *, nfs_shareopt_callback_t, void *);",
          "",
          "---------------"
        ],
        "lib/libshare/nfs.c||lib/libshare/nfs.c": [
          "File: lib/libshare/nfs.c -> lib/libshare/nfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: static int nfs_exportfs_temp_fd = -1;",
          "50: typedef int (*nfs_host_callback_t)(const char *sharepath, const char *host,",
          "51:     const char *security, const char *access, void *cookie);",
          "113: typedef struct nfs_host_cookie_s {",
          "114:  nfs_host_callback_t callback;",
          "115:  const char *sharepath;",
          "",
          "[Removed Lines]",
          "47: typedef int (*nfs_shareopt_callback_t)(const char *opt, const char *value,",
          "48:     void *cookie);",
          "57: static int",
          "58: foreach_nfs_shareopt(const char *shareopts,",
          "59:     nfs_shareopt_callback_t callback, void *cookie)",
          "60: {",
          "61:  char *shareopts_dup, *opt, *cur, *value;",
          "62:  int was_nul, rc;",
          "64:  if (shareopts == NULL)",
          "65:   return (SA_OK);",
          "67:  shareopts_dup = strdup(shareopts);",
          "69:  if (shareopts_dup == NULL)",
          "70:   return (SA_NO_MEMORY);",
          "72:  opt = shareopts_dup;",
          "73:  was_nul = 0;",
          "75:  while (1) {",
          "76:   cur = opt;",
          "78:   while (*cur != ',' && *cur != '\\0')",
          "79:    cur++;",
          "81:   if (*cur == '\\0')",
          "82:    was_nul = 1;",
          "86:   if (cur > opt) {",
          "87:    value = strchr(opt, '=');",
          "89:    if (value != NULL) {",
          "91:     value++;",
          "92:    }",
          "94:    rc = callback(opt, value, cookie);",
          "96:    if (rc != SA_OK) {",
          "97:     free(shareopts_dup);",
          "98:     return (rc);",
          "99:    }",
          "100:   }",
          "102:   opt = cur + 1;",
          "104:   if (was_nul)",
          "105:    break;",
          "106:  }",
          "108:  free(shareopts_dup);",
          "110:  return (0);",
          "111: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "390:  (void) add_linux_shareopt(plinux_opts, \"no_root_squash\", NULL);",
          "391:  (void) add_linux_shareopt(plinux_opts, \"mountpoint\", NULL);",
          "394:      plinux_opts);",
          "396:  if (rc != SA_OK) {",
          "",
          "[Removed Lines]",
          "393:  rc = foreach_nfs_shareopt(shareopts, get_linux_shareopts_cb,",
          "",
          "[Added Lines]",
          "330:  rc = foreach_shareopt(shareopts, get_linux_shareopts_cb,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd5f95ae630d81650a630cf13d20f1cf4a42c53f",
      "candidate_info": {
        "commit_hash": "cd5f95ae630d81650a630cf13d20f1cf4a42c53f",
        "repo": "FransUrbo/zfs",
        "commit_url": "https://github.com/FransUrbo/zfs/commit/cd5f95ae630d81650a630cf13d20f1cf4a42c53f",
        "files": [
          "lib/libshare/libshare.c",
          "lib/libshare/libshare_impl.h",
          "lib/libshare/nfs.c"
        ],
        "message": "Move nfs.c:foreach_nfs_shareopt() to libshare.c:foreach_shareopt() so that it can be (re)used in other parts of libshare.",
        "before_after_code_files": [
          "lib/libshare/libshare.c||lib/libshare/libshare.c",
          "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h",
          "lib/libshare/nfs.c||lib/libshare/nfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/libshare/libshare.c||lib/libshare/libshare.c",
            "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h",
            "lib/libshare/nfs.c||lib/libshare/nfs.c"
          ],
          "candidate": [
            "lib/libshare/libshare.c||lib/libshare/libshare.c",
            "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h",
            "lib/libshare/nfs.c||lib/libshare/nfs.c"
          ]
        }
      },
      "candidate_diff": {
        "lib/libshare/libshare.c||lib/libshare/libshare.c": [
          "File: lib/libshare/libshare.c -> lib/libshare/libshare.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: static int fstypes_count;",
          "57: static sa_fstype_t *fstypes;",
          "59: sa_fstype_t *",
          "60: register_fstype(const char *name, const sa_share_ops_t *ops)",
          "61: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: int",
          "64: foreach_shareopt(const char *shareopts,",
          "65:     nfs_shareopt_callback_t callback, void *cookie)",
          "66: {",
          "67:  char *shareopts_dup, *opt, *cur, *value;",
          "68:  int was_nul, rc;",
          "70:  if (shareopts == NULL)",
          "71:   return (SA_OK);",
          "73:  shareopts_dup = strdup(shareopts);",
          "74:  if (shareopts_dup == NULL)",
          "75:   return (SA_NO_MEMORY);",
          "77:  opt = shareopts_dup;",
          "78:  was_nul = 0;",
          "80:  while (1) {",
          "81:   cur = opt;",
          "83:   while (*cur != ',' && *cur != '\\0')",
          "84:    cur++;",
          "86:   if (*cur == '\\0')",
          "87:    was_nul = 1;",
          "91:   if (cur > opt) {",
          "92:    value = strchr(opt, '=');",
          "94:    if (value != NULL) {",
          "96:     value++;",
          "97:    }",
          "99:    rc = callback(opt, value, cookie);",
          "101:    if (rc != SA_OK) {",
          "102:     free(shareopts_dup);",
          "103:     return (rc);",
          "104:    }",
          "105:   }",
          "107:   opt = cur + 1;",
          "109:   if (was_nul)",
          "110:    break;",
          "111:  }",
          "113:  free(shareopts_dup);",
          "115:  return (SA_OK);",
          "116: }",
          "",
          "---------------"
        ],
        "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h": [
          "File: lib/libshare/libshare_impl.h -> lib/libshare/libshare_impl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:  sa_share_impl_t shares;",
          "68: } *sa_handle_impl_t;",
          "70: sa_fstype_t *register_fstype(const char *name, const sa_share_ops_t *ops);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: typedef int (*nfs_shareopt_callback_t)(const char *, const char *, void *);",
          "73: int foreach_shareopt(const char *, nfs_shareopt_callback_t, void *);",
          "",
          "---------------"
        ],
        "lib/libshare/nfs.c||lib/libshare/nfs.c": [
          "File: lib/libshare/nfs.c -> lib/libshare/nfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: static int nfs_exportfs_temp_fd = -1;",
          "50: typedef int (*nfs_host_callback_t)(const char *sharepath, const char *host,",
          "51:     const char *security, const char *access, void *cookie);",
          "113: typedef struct nfs_host_cookie_s {",
          "114:  nfs_host_callback_t callback;",
          "115:  const char *sharepath;",
          "",
          "[Removed Lines]",
          "47: typedef int (*nfs_shareopt_callback_t)(const char *opt, const char *value,",
          "48:     void *cookie);",
          "57: static int",
          "58: foreach_nfs_shareopt(const char *shareopts,",
          "59:     nfs_shareopt_callback_t callback, void *cookie)",
          "60: {",
          "61:  char *shareopts_dup, *opt, *cur, *value;",
          "62:  int was_nul, rc;",
          "64:  if (shareopts == NULL)",
          "65:   return (SA_OK);",
          "67:  shareopts_dup = strdup(shareopts);",
          "69:  if (shareopts_dup == NULL)",
          "70:   return (SA_NO_MEMORY);",
          "72:  opt = shareopts_dup;",
          "73:  was_nul = 0;",
          "75:  while (1) {",
          "76:   cur = opt;",
          "78:   while (*cur != ',' && *cur != '\\0')",
          "79:    cur++;",
          "81:   if (*cur == '\\0')",
          "82:    was_nul = 1;",
          "86:   if (cur > opt) {",
          "87:    value = strchr(opt, '=');",
          "89:    if (value != NULL) {",
          "91:     value++;",
          "92:    }",
          "94:    rc = callback(opt, value, cookie);",
          "96:    if (rc != SA_OK) {",
          "97:     free(shareopts_dup);",
          "98:     return (rc);",
          "99:    }",
          "100:   }",
          "102:   opt = cur + 1;",
          "104:   if (was_nul)",
          "105:    break;",
          "106:  }",
          "108:  free(shareopts_dup);",
          "110:  return (0);",
          "111: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "390:  (void) add_linux_shareopt(plinux_opts, \"no_root_squash\", NULL);",
          "391:  (void) add_linux_shareopt(plinux_opts, \"mountpoint\", NULL);",
          "394:      plinux_opts);",
          "396:  if (rc != SA_OK) {",
          "",
          "[Removed Lines]",
          "393:  rc = foreach_nfs_shareopt(shareopts, get_linux_shareopts_cb,",
          "",
          "[Added Lines]",
          "330:  rc = foreach_shareopt(shareopts, get_linux_shareopts_cb,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f3abeee825c2bd1e76549e25b82d98d538c60a28",
      "candidate_info": {
        "commit_hash": "f3abeee825c2bd1e76549e25b82d98d538c60a28",
        "repo": "FransUrbo/zfs",
        "commit_url": "https://github.com/FransUrbo/zfs/commit/f3abeee825c2bd1e76549e25b82d98d538c60a28",
        "files": [
          "lib/libshare/libshare.c",
          "lib/libshare/libshare_impl.h",
          "lib/libshare/nfs.c"
        ],
        "message": "Move nfs.c:foreach_nfs_shareopt() to libshare.c:foreach_shareopt() so that it can be (re)used in other parts of libshare.",
        "before_after_code_files": [
          "lib/libshare/libshare.c||lib/libshare/libshare.c",
          "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h",
          "lib/libshare/nfs.c||lib/libshare/nfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/libshare/libshare.c||lib/libshare/libshare.c",
            "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h",
            "lib/libshare/nfs.c||lib/libshare/nfs.c"
          ],
          "candidate": [
            "lib/libshare/libshare.c||lib/libshare/libshare.c",
            "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h",
            "lib/libshare/nfs.c||lib/libshare/nfs.c"
          ]
        }
      },
      "candidate_diff": {
        "lib/libshare/libshare.c||lib/libshare/libshare.c": [
          "File: lib/libshare/libshare.c -> lib/libshare/libshare.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: static int fstypes_count;",
          "57: static sa_fstype_t *fstypes;",
          "59: sa_fstype_t *",
          "60: register_fstype(const char *name, const sa_share_ops_t *ops)",
          "61: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: int",
          "64: foreach_shareopt(const char *shareopts,",
          "65:     nfs_shareopt_callback_t callback, void *cookie)",
          "66: {",
          "67:  char *shareopts_dup, *opt, *cur, *value;",
          "68:  int was_nul, rc;",
          "70:  if (shareopts == NULL)",
          "71:   return (SA_OK);",
          "73:  shareopts_dup = strdup(shareopts);",
          "74:  if (shareopts_dup == NULL)",
          "75:   return (SA_NO_MEMORY);",
          "77:  opt = shareopts_dup;",
          "78:  was_nul = 0;",
          "80:  while (1) {",
          "81:   cur = opt;",
          "83:   while (*cur != ',' && *cur != '\\0')",
          "84:    cur++;",
          "86:   if (*cur == '\\0')",
          "87:    was_nul = 1;",
          "91:   if (cur > opt) {",
          "92:    value = strchr(opt, '=');",
          "94:    if (value != NULL) {",
          "96:     value++;",
          "97:    }",
          "99:    rc = callback(opt, value, cookie);",
          "101:    if (rc != SA_OK) {",
          "102:     free(shareopts_dup);",
          "103:     return (rc);",
          "104:    }",
          "105:   }",
          "107:   opt = cur + 1;",
          "109:   if (was_nul)",
          "110:    break;",
          "111:  }",
          "113:  free(shareopts_dup);",
          "115:  return (SA_OK);",
          "116: }",
          "",
          "---------------"
        ],
        "lib/libshare/libshare_impl.h||lib/libshare/libshare_impl.h": [
          "File: lib/libshare/libshare_impl.h -> lib/libshare/libshare_impl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:  sa_share_impl_t shares;",
          "68: } *sa_handle_impl_t;",
          "70: sa_fstype_t *register_fstype(const char *name, const sa_share_ops_t *ops);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: typedef int (*nfs_shareopt_callback_t)(const char *, const char *, void *);",
          "73: int foreach_shareopt(const char *, nfs_shareopt_callback_t, void *);",
          "",
          "---------------"
        ],
        "lib/libshare/nfs.c||lib/libshare/nfs.c": [
          "File: lib/libshare/nfs.c -> lib/libshare/nfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: static int nfs_exportfs_temp_fd = -1;",
          "50: typedef int (*nfs_host_callback_t)(const char *sharepath, const char *host,",
          "51:     const char *security, const char *access, void *cookie);",
          "113: typedef struct nfs_host_cookie_s {",
          "114:  nfs_host_callback_t callback;",
          "115:  const char *sharepath;",
          "",
          "[Removed Lines]",
          "47: typedef int (*nfs_shareopt_callback_t)(const char *opt, const char *value,",
          "48:     void *cookie);",
          "57: static int",
          "58: foreach_nfs_shareopt(const char *shareopts,",
          "59:     nfs_shareopt_callback_t callback, void *cookie)",
          "60: {",
          "61:  char *shareopts_dup, *opt, *cur, *value;",
          "62:  int was_nul, rc;",
          "64:  if (shareopts == NULL)",
          "65:   return (SA_OK);",
          "67:  shareopts_dup = strdup(shareopts);",
          "69:  if (shareopts_dup == NULL)",
          "70:   return (SA_NO_MEMORY);",
          "72:  opt = shareopts_dup;",
          "73:  was_nul = 0;",
          "75:  while (1) {",
          "76:   cur = opt;",
          "78:   while (*cur != ',' && *cur != '\\0')",
          "79:    cur++;",
          "81:   if (*cur == '\\0')",
          "82:    was_nul = 1;",
          "86:   if (cur > opt) {",
          "87:    value = strchr(opt, '=');",
          "89:    if (value != NULL) {",
          "91:     value++;",
          "92:    }",
          "94:    rc = callback(opt, value, cookie);",
          "96:    if (rc != SA_OK) {",
          "97:     free(shareopts_dup);",
          "98:     return (rc);",
          "99:    }",
          "100:   }",
          "102:   opt = cur + 1;",
          "104:   if (was_nul)",
          "105:    break;",
          "106:  }",
          "108:  free(shareopts_dup);",
          "110:  return (0);",
          "111: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "390:  (void) add_linux_shareopt(plinux_opts, \"no_root_squash\", NULL);",
          "391:  (void) add_linux_shareopt(plinux_opts, \"mountpoint\", NULL);",
          "394:      plinux_opts);",
          "396:  if (rc != SA_OK) {",
          "",
          "[Removed Lines]",
          "393:  rc = foreach_nfs_shareopt(shareopts, get_linux_shareopts_cb,",
          "",
          "[Added Lines]",
          "330:  rc = foreach_shareopt(shareopts, get_linux_shareopts_cb,",
          "",
          "---------------"
        ]
      }
    }
  ]
}