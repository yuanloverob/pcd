{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c29af653e6a94ef2b4234030d2304dbc2c0cefcb",
      "candidate_info": {
        "commit_hash": "c29af653e6a94ef2b4234030d2304dbc2c0cefcb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c29af653e6a94ef2b4234030d2304dbc2c0cefcb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Change an unreachable testcase() into an assert()\n\nFossilOrigin-Name: 062e00c4d7e30155299339eaefe6cbe01953894baebf0af6d7ab3295b7436eb7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3709:       return target;",
          "3710:     }",
          "3711:     default: {",
          "3713:       sqlite3VdbeAddOp2(v, OP_Null, 0, target);",
          "3714:       return target;",
          "3715:     }",
          "",
          "[Removed Lines]",
          "3712:       testcase( op!=TK_NULL );",
          "",
          "[Added Lines]",
          "3716:       assert( op==TK_NULL );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d237bfab14b5bfa2036f588ddd77662e837ca91",
      "candidate_info": {
        "commit_hash": "5d237bfab14b5bfa2036f588ddd77662e837ca91",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5d237bfab14b5bfa2036f588ddd77662e837ca91",
        "files": [
          "ext/session/session_common.tcl",
          "ext/session/sessioninvert.test",
          "ext/session/sqlite3session.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a problem with retrying constraint failures within sqlite3changeset_apply() calls with the SQLITE_CHANGESET_INVERT flag is set.\n\nFossilOrigin-Name: d73e857b833dfc29400049ca7f01ca465f980466e3aa67214c3c5e5573181419",
        "before_after_code_files": [
          "ext/session/session_common.tcl||ext/session/session_common.tcl",
          "ext/session/sessioninvert.test||ext/session/sessioninvert.test",
          "ext/session/sqlite3session.c||ext/session/sqlite3session.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/session_common.tcl||ext/session/session_common.tcl": [
          "File: ext/session/session_common.tcl -> ext/session/session_common.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "172:     set data1 [$db1 eval $sql]",
          "173:     set data2 [$db2 eval $sql]",
          "174:     if {$data1 != $data2} {",
          "177:       error \"table $tbl data mismatch\"",
          "178:     }",
          "179:   }",
          "",
          "[Removed Lines]",
          "175:       puts \"$data1\"",
          "176:       puts \"$data2\"",
          "",
          "[Added Lines]",
          "175:       puts \"$db1: $data1\"",
          "176:       puts \"$db2: $data2\"",
          "",
          "---------------"
        ],
        "ext/session/sessioninvert.test||ext/session/sessioninvert.test": [
          "File: ext/session/sessioninvert.test -> ext/session/sessioninvert.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:   compare_db db db2",
          "156: } {}",
          "159: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158: #-------------------------------------------------------------------------",
          "159: #",
          "160: reset_db",
          "161: do_execsql_test 4.0 {",
          "162:   CREATE TABLE t1(a INTEGER PRIMARY KEY, b UNIQUE);",
          "163:   INSERT INTO t1 VALUES(1, 'one');",
          "164:   INSERT INTO t1 VALUES(2, 'two');",
          "165:   INSERT INTO t1 VALUES(3, 'three');",
          "166:   INSERT INTO t1 VALUES(4, 'four');",
          "167: }",
          "169: do_invert_test 4.1 {",
          "170:   DELETE FROM t1;",
          "171:   INSERT INTO t1 VALUES(1, 'two');",
          "172:   INSERT INTO t1 VALUES(2, 'five');",
          "173:   INSERT INTO t1 VALUES(3, 'one');",
          "174:   INSERT INTO t1 VALUES(4, 'three');",
          "175: } {",
          "176:   {UPDATE t1 0 X. {i 1 t two} {{} {} t one}}",
          "177:   {UPDATE t1 0 X. {i 2 t five} {{} {} t two}}",
          "178:   {UPDATE t1 0 X. {i 3 t one} {{} {} t three}}",
          "179:   {UPDATE t1 0 X. {i 4 t three} {{} {} t four}}",
          "180: }",
          "",
          "---------------"
        ],
        "ext/session/sqlite3session.c||ext/session/sqlite3session.c": [
          "File: ext/session/sqlite3session.c -> ext/session/sqlite3session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4251:     SessionBuffer cons = pApply->constraints;",
          "4252:     memset(&pApply->constraints, 0, sizeof(SessionBuffer));",
          "4255:     if( rc==SQLITE_OK ){",
          "4256:       size_t nByte = 2*pApply->nCol*sizeof(sqlite3_value*);",
          "4257:       int rc2;",
          "",
          "[Removed Lines]",
          "4254:     rc = sessionChangesetStart(&pIter2, 0, 0, cons.nBuf, cons.aBuf, 0);",
          "",
          "[Added Lines]",
          "4255:     rc = sessionChangesetStart(",
          "4256:         &pIter2, 0, 0, cons.nBuf, cons.aBuf, pApply->bInvertConstraints",
          "4257:     );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4318:   pIter->in.bNoDiscard = 1;",
          "4319:   memset(&sApply, 0, sizeof(sApply));",
          "4320:   sApply.bRebase = (ppRebase && pnRebase);",
          "4321:   sqlite3_mutex_enter(sqlite3_db_mutex(db));",
          "4322:   if( (flags & SQLITE_CHANGESETAPPLY_NOSAVEPOINT)==0 ){",
          "4323:     rc = sqlite3_exec(db, \"SAVEPOINT changeset_apply\", 0, 0, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4324:   sApply.bInvertConstraints = !!(flags & SQLITE_CHANGESETAPPLY_INVERT);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c6b1d3a385751633d3ac1853e13d5e847185dd6432fb8b960a4080f61357c08c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "915530dcc800919a197d5e3c3e9ae8cc14851d5e",
      "candidate_info": {
        "commit_hash": "915530dcc800919a197d5e3c3e9ae8cc14851d5e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/915530dcc800919a197d5e3c3e9ae8cc14851d5e",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/date.c"
        ],
        "message": "Improved rounding in the 'unixepoch' feature of the date and time functions.\n\nFossilOrigin-Name: c9abf1bd2d2496ced9ef4619cd997933cd58452e6ab527ba70746c9975104b6a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/date.c||src/date.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4d6cb28811c01599e34c0394fe5ed17d47f14893c860590c9b4660bef68eb294",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/date.c||src/date.c": [
          "File: src/date.c -> src/date.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "688:         r = p->s*1000.0 + 210866760000000.0;",
          "689:         if( r>=0.0 && r<464269060800000.0 ){",
          "690:           clearYMD_HMS_TZ(p);",
          "692:           p->validJD = 1;",
          "693:           p->rawS = 0;",
          "694:           rc = 0;",
          "",
          "[Removed Lines]",
          "691:           p->iJD = (sqlite3_int64)r;",
          "",
          "[Added Lines]",
          "691:           p->iJD = (sqlite3_int64)(r + 0.5);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "50511942700dcfca877b61aa1be1c4e4382daae1",
      "candidate_info": {
        "commit_hash": "50511942700dcfca877b61aa1be1c4e4382daae1",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/50511942700dcfca877b61aa1be1c4e4382daae1",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqlite.h.in"
        ],
        "message": "Clarification to the sqlite3_uri() family of interfaces.  Documentation enhancement only - no changes to code.\n\nFossilOrigin-Name: 853703cd6d44d6dd48ef5eda6523e374b8ebdf7c338ddaad31c15a40a8b3fd9b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqlite.h.in||src/sqlite.h.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 80498b69ea489e8816c80a52c9e55a62699116fcbfdcbfd922ef23c2d9938871",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ]
      }
    },
    {
      "candidate_hash": "a2f142d079110237e8c0a02c701b3d387526fbfa",
      "candidate_info": {
        "commit_hash": "a2f142d079110237e8c0a02c701b3d387526fbfa",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a2f142d079110237e8c0a02c701b3d387526fbfa",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Abort the window function tree rewrite early following an OOM.\n\nFossilOrigin-Name: d66f95a51530259ab48f78c9f91acc38055caf338b6fee846b99a8c077466e95",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 57070c68bbe15fc1d19a765182432e844c082909bdbc63b58fd86b96e2c521dd",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "813:         pExpr->iTable = p->pWin->iEphCsr;",
          "814:         pExpr->y.pTab = p->pTab;",
          "815:       }",
          "817:       break;",
          "818:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "816:       if( pParse->db->mallocFailed ) return WRC_Abort;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1275: int sqlite3WindowCompare(Parse *pParse, Window *p1, Window *p2, int bFilter){",
          "1276:   if( p1->eFrmType!=p2->eFrmType ) return 1;",
          "1277:   if( p1->eStart!=p2->eStart ) return 1;",
          "1278:   if( p1->eEnd!=p2->eEnd ) return 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1276:   if( NEVER(p1==0) || NEVER(p2==0) ) return 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}