{
  "cve_id": "CVE-2015-2206",
  "cve_desc": "libraries/select_lang.lib.php in phpMyAdmin 4.0.x before 4.0.10.9, 4.2.x before 4.2.13.2, and 4.3.x before 4.3.11.1 includes invalid language values in unknown-language error responses that contain a CSRF token and may be sent with HTTP compression, which makes it easier for remote attackers to conduct a BREACH attack and determine this token via a series of crafted requests.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "b2f1e895038a5700bf8e81fb9a5da36cbdea0eeb",
  "patch_info": {
    "commit_hash": "b2f1e895038a5700bf8e81fb9a5da36cbdea0eeb",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/b2f1e895038a5700bf8e81fb9a5da36cbdea0eeb",
    "files": [
      "libraries/select_lang.lib.php"
    ],
    "message": "[security] Risk of BREACH attack\n\nThanks to Michal \u010ciha\u0159 for the message suggestion.\n\nSigned-off-by: Marc Delisle <marc@infomarc.info>",
    "before_after_code_files": [
      "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
    ]
  },
  "patch_diff": {
    "libraries/select_lang.lib.php||libraries/select_lang.lib.php": [
      "File: libraries/select_lang.lib.php -> libraries/select_lang.lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "604:     trigger_error(",
      "609:         E_USER_ERROR",
      "610:     );",
      "611: }",
      "631: unset(",
      "632:     $line, $fall_back_lang, $GLOBALS['lang_failed_cfg'],",
      "633:     $GLOBALS['lang_failed_cookie'], $GLOBALS['lang_failed_request']",
      "",
      "[Removed Lines]",
      "603: if ($GLOBALS['lang_failed_cfg']) {",
      "605:         sprintf(",
      "606:             __('Unknown language: %1$s.'),",
      "607:             htmlspecialchars($GLOBALS['lang_failed_cfg'])",
      "608:         ),",
      "612: if ($GLOBALS['lang_failed_cookie']) {",
      "613:     trigger_error(",
      "614:         sprintf(",
      "615:             __('Unknown language: %1$s.'),",
      "616:             htmlspecialchars($GLOBALS['lang_failed_cookie'])",
      "617:         ),",
      "618:         E_USER_ERROR",
      "619:     );",
      "620: }",
      "621: if ($GLOBALS['lang_failed_request']) {",
      "622:     trigger_error(",
      "623:         sprintf(",
      "624:             __('Unknown language: %1$s.'),",
      "625:             htmlspecialchars($GLOBALS['lang_failed_request'])",
      "626:         ),",
      "627:         E_USER_ERROR",
      "628:     );",
      "629: }",
      "",
      "[Added Lines]",
      "603: if ($GLOBALS['lang_failed_cfg']",
      "604:     || $GLOBALS['lang_failed_cookie']",
      "605:     || $GLOBALS['lang_failed_request']) {",
      "607:         __('Ignoring unsupported language code.'),",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ba156632127af5a6013328d84566838bd5145350",
      "candidate_info": {
        "commit_hash": "ba156632127af5a6013328d84566838bd5145350",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/ba156632127af5a6013328d84566838bd5145350",
        "files": [
          "libraries/select_lang.lib.php"
        ],
        "message": "[security] Risk of BREACH attack\n\nThanks to Michal \u010ciha\u0159 for the message suggestion.\n\nSigned-off-by: Marc Delisle <marc@infomarc.info>",
        "before_after_code_files": [
          "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
          ],
          "candidate": [
            "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/select_lang.lib.php||libraries/select_lang.lib.php": [
          "File: libraries/select_lang.lib.php -> libraries/select_lang.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "604:     trigger_error(",
          "609:         E_USER_ERROR",
          "610:     );",
          "611: }",
          "631: unset(",
          "632:     $line, $fall_back_lang, $GLOBALS['lang_failed_cfg'],",
          "633:     $GLOBALS['lang_failed_cookie'], $GLOBALS['lang_failed_request']",
          "",
          "[Removed Lines]",
          "603: if ($GLOBALS['lang_failed_cfg']) {",
          "605:         sprintf(",
          "606:             __('Unknown language: %1$s.'),",
          "607:             htmlspecialchars($GLOBALS['lang_failed_cfg'])",
          "608:         ),",
          "612: if ($GLOBALS['lang_failed_cookie']) {",
          "613:     trigger_error(",
          "614:         sprintf(",
          "615:             __('Unknown language: %1$s.'),",
          "616:             htmlspecialchars($GLOBALS['lang_failed_cookie'])",
          "617:         ),",
          "618:         E_USER_ERROR",
          "619:     );",
          "620: }",
          "621: if ($GLOBALS['lang_failed_request']) {",
          "622:     trigger_error(",
          "623:         sprintf(",
          "624:             __('Unknown language: %1$s.'),",
          "625:             htmlspecialchars($GLOBALS['lang_failed_request'])",
          "626:         ),",
          "627:         E_USER_ERROR",
          "628:     );",
          "629: }",
          "",
          "[Added Lines]",
          "603: if ($GLOBALS['lang_failed_cfg']",
          "604:     || $GLOBALS['lang_failed_cookie']",
          "605:     || $GLOBALS['lang_failed_request']) {",
          "607:         __('Ignoring unsupported language code.'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8b37769e66570d461c5ac6f964acc62573d5353",
      "candidate_info": {
        "commit_hash": "d8b37769e66570d461c5ac6f964acc62573d5353",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/d8b37769e66570d461c5ac6f964acc62573d5353",
        "files": [
          "libraries/select_lang.lib.php"
        ],
        "message": "[security] Risk of BREACH attack\n\nThanks to Michal \u010ciha\u0159 for the message suggestion.\n\nSigned-off-by: Marc Delisle <marc@infomarc.info>",
        "before_after_code_files": [
          "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
          ],
          "candidate": [
            "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/select_lang.lib.php||libraries/select_lang.lib.php": [
          "File: libraries/select_lang.lib.php -> libraries/select_lang.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "610:     trigger_error(",
          "615:         E_USER_ERROR",
          "616:     );",
          "617: }",
          "637: unset(",
          "638:     $line, $fall_back_lang, $GLOBALS['lang_failed_cfg'],",
          "639:     $GLOBALS['lang_failed_cookie'], $GLOBALS['lang_failed_request']",
          "",
          "[Removed Lines]",
          "609: if ($GLOBALS['lang_failed_cfg']) {",
          "611:         sprintf(",
          "612:             __('Unknown language: %1$s.'),",
          "613:             htmlspecialchars($GLOBALS['lang_failed_cfg'])",
          "614:         ),",
          "618: if ($GLOBALS['lang_failed_cookie']) {",
          "619:     trigger_error(",
          "620:         sprintf(",
          "621:             __('Unknown language: %1$s.'),",
          "622:             htmlspecialchars($GLOBALS['lang_failed_cookie'])",
          "623:         ),",
          "624:         E_USER_ERROR",
          "625:     );",
          "626: }",
          "627: if ($GLOBALS['lang_failed_request']) {",
          "628:     trigger_error(",
          "629:         sprintf(",
          "630:             __('Unknown language: %1$s.'),",
          "631:             htmlspecialchars($GLOBALS['lang_failed_request'])",
          "632:         ),",
          "633:         E_USER_ERROR",
          "634:     );",
          "635: }",
          "",
          "[Added Lines]",
          "609: if ($GLOBALS['lang_failed_cfg']",
          "610:     || $GLOBALS['lang_failed_cookie']",
          "611:     || $GLOBALS['lang_failed_request']) {",
          "613:         __('Ignoring unsupported language code.'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d0f109dfe3b345094d7ceb49df0dbb68efc032ed",
      "candidate_info": {
        "commit_hash": "d0f109dfe3b345094d7ceb49df0dbb68efc032ed",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/d0f109dfe3b345094d7ceb49df0dbb68efc032ed",
        "files": [
          "libraries/select_lang.lib.php"
        ],
        "message": "[security] Risk of BREACH attack\n\nThanks to Michal \u010ciha\u0159 for the message suggestion.\n\nSigned-off-by: Marc Delisle <marc@infomarc.info>",
        "before_after_code_files": [
          "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
          ],
          "candidate": [
            "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/select_lang.lib.php||libraries/select_lang.lib.php": [
          "File: libraries/select_lang.lib.php -> libraries/select_lang.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "596:     trigger_error(",
          "601:         E_USER_ERROR",
          "602:     );",
          "603: }",
          "623: unset(",
          "624:     $line, $fall_back_lang, $GLOBALS['lang_failed_cfg'],",
          "625:     $GLOBALS['lang_failed_cookie'], $GLOBALS['lang_failed_request']",
          "",
          "[Removed Lines]",
          "595: if ($GLOBALS['lang_failed_cfg']) {",
          "597:         sprintf(",
          "598:             __('Unknown language: %1$s.'),",
          "599:             htmlspecialchars($GLOBALS['lang_failed_cfg'])",
          "600:         ),",
          "604: if ($GLOBALS['lang_failed_cookie']) {",
          "605:     trigger_error(",
          "606:         sprintf(",
          "607:             __('Unknown language: %1$s.'),",
          "608:             htmlspecialchars($GLOBALS['lang_failed_cookie'])",
          "609:         ),",
          "610:         E_USER_ERROR",
          "611:     );",
          "612: }",
          "613: if ($GLOBALS['lang_failed_request']) {",
          "614:     trigger_error(",
          "615:         sprintf(",
          "616:             __('Unknown language: %1$s.'),",
          "617:             htmlspecialchars($GLOBALS['lang_failed_request'])",
          "618:         ),",
          "619:         E_USER_ERROR",
          "620:     );",
          "621: }",
          "",
          "[Added Lines]",
          "595: if ($GLOBALS['lang_failed_cfg']",
          "596:     || $GLOBALS['lang_failed_cookie']",
          "597:     || $GLOBALS['lang_failed_request']) {",
          "599:         __('Ignoring unsupported language code.'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b3bcac0818f5ff282c19eab9c34fd1f82a6ca68",
      "candidate_info": {
        "commit_hash": "7b3bcac0818f5ff282c19eab9c34fd1f82a6ca68",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/7b3bcac0818f5ff282c19eab9c34fd1f82a6ca68",
        "files": [
          "ChangeLog",
          "README",
          "index.php",
          "js/functions.js",
          "libraries/Config.class.php",
          "libraries/DatabaseInterface.class.php",
          "libraries/Util.class.php",
          "libraries/db_designer.lib.php",
          "libraries/language_stats.inc.php",
          "libraries/mysql_charsets.inc.php",
          "libraries/select_lang.lib.php",
          "libraries/user_preferences.lib.php",
          "locale/az/LC_MESSAGES/phpmyadmin.mo",
          "locale/da/LC_MESSAGES/phpmyadmin.mo",
          "locale/el/LC_MESSAGES/phpmyadmin.mo",
          "locale/ia/LC_MESSAGES/phpmyadmin.mo",
          "locale/ja/LC_MESSAGES/phpmyadmin.mo",
          "locale/ko/LC_MESSAGES/phpmyadmin.mo",
          "locale/zh_CN/LC_MESSAGES/phpmyadmin.mo",
          "themes/pmahomme/css/common.css.php"
        ],
        "message": "UPDATE 4.3.11.1",
        "before_after_code_files": [
          "index.php||index.php",
          "js/functions.js||js/functions.js",
          "libraries/Config.class.php||libraries/Config.class.php",
          "libraries/DatabaseInterface.class.php||libraries/DatabaseInterface.class.php",
          "libraries/Util.class.php||libraries/Util.class.php",
          "libraries/db_designer.lib.php||libraries/db_designer.lib.php",
          "libraries/language_stats.inc.php||libraries/language_stats.inc.php",
          "libraries/mysql_charsets.inc.php||libraries/mysql_charsets.inc.php",
          "libraries/select_lang.lib.php||libraries/select_lang.lib.php",
          "libraries/user_preferences.lib.php||libraries/user_preferences.lib.php",
          "themes/pmahomme/css/common.css.php||themes/pmahomme/css/common.css.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
          ],
          "candidate": [
            "libraries/select_lang.lib.php||libraries/select_lang.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "index.php||index.php": [
          "File: index.php -> index.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "575:     $_client_info = $GLOBALS['dbi']->getClientInfo();",
          "576:     if ($server > 0",
          "577:         && /*overload*/mb_strpos($_client_info, 'mysqlnd') === false",
          "578:         && substr(PMA_MYSQL_CLIENT_API, 0, 3) != substr(",
          "579:             PMA_MYSQL_INT_VERSION, 0, 3",
          "580:         )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "580:         && /*overload*/mb_strpos(PMA_MYSQL_STR_VERSION, 'MariaDB') === false",
          "",
          "---------------"
        ],
        "js/functions.js||js/functions.js": [
          "File: js/functions.js -> js/functions.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1776:     }",
          "1778:     var url = PMA_sprintf(",
          "1780:         params[0]",
          "1781:     );",
          "1782:     if (params.length > 1) {",
          "",
          "[Removed Lines]",
          "1779:         mysql_doc_template,",
          "",
          "[Added Lines]",
          "1779:         decodeURIComponent(mysql_doc_template),",
          "",
          "---------------"
        ],
        "libraries/Config.class.php||libraries/Config.class.php": [
          "File: libraries/Config.class.php -> libraries/Config.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:     function checkSystem()",
          "116:     {",
          "",
          "[Removed Lines]",
          "117:         $this->set('PMA_VERSION', '4.3.10');",
          "",
          "[Added Lines]",
          "117:         $this->set('PMA_VERSION', '4.3.11.1');",
          "",
          "---------------"
        ],
        "libraries/DatabaseInterface.class.php||libraries/DatabaseInterface.class.php": [
          "File: libraries/DatabaseInterface.class.php -> libraries/DatabaseInterface.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "985:                 }",
          "986:                 $sql .= $sql_where_schema . '",
          "987:                         GROUP BY BINARY s.SCHEMA_NAME",
          "989:                     . ' ' . $sort_order",
          "990:                     . $limit;",
          "991:             }",
          "",
          "[Removed Lines]",
          "988:                         ORDER BY BINARY ' . PMA_Util::backquote($sort_by)",
          "",
          "[Added Lines]",
          "988:                         ORDER BY ';",
          "989:                 if ($sort_by == 'SCHEMA_NAME'",
          "990:                     || $sort_by == 'DEFAULT_COLLATION_NAME'",
          "991:                 ) {",
          "992:                     $sql .= 'BINARY ';",
          "993:                 }",
          "994:                 $sql .= PMA_Util::backquote($sort_by)",
          "",
          "---------------"
        ],
        "libraries/Util.class.php||libraries/Util.class.php": [
          "File: libraries/Util.class.php -> libraries/Util.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3701:             && empty($field['Default'])",
          "3702:             && empty($data)",
          "3703:             && ! isset($analyzed_sql_field_array['on_update_current_timestamp'])",
          "3705:         ) {",
          "3706:             $default_function = $cfg['DefaultFunctions']['first_timestamp'];",
          "3707:         }",
          "",
          "[Removed Lines]",
          "3704:             && ($analyzed_sql_field_array['default_value'] != 'NULL')",
          "",
          "[Added Lines]",
          "3704:             && ! (isset($analyzed_sql_field_array['default_value'])",
          "3705:             && $analyzed_sql_field_array['default_value'] == 'NULL')",
          "",
          "---------------"
        ],
        "libraries/db_designer.lib.php||libraries/db_designer.lib.php": [
          "File: libraries/db_designer.lib.php -> libraries/db_designer.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "702:             if (isset($tables_pk_or_unique_keys[$t_n . \".\" . $tab_column[$t_n][\"COLUMN_NAME\"][$j]])) {",
          "707:             } else {",
          "712:                 if (strstr($tab_column[$t_n][\"TYPE\"][$j], 'char')",
          "713:                     || strstr($tab_column[$t_n][\"TYPE\"][$j], 'text')",
          "714:                 ) {",
          "716:                 } elseif (strstr($tab_column[$t_n][\"TYPE\"][$j], 'int')",
          "717:                     || strstr($tab_column[$t_n][\"TYPE\"][$j], 'float')",
          "718:                     || strstr($tab_column[$t_n][\"TYPE\"][$j], 'double')",
          "719:                     || strstr($tab_column[$t_n][\"TYPE\"][$j], 'decimal')",
          "720:                 ) {",
          "722:                 } elseif (strstr($tab_column[$t_n][\"TYPE\"][$j], 'date')",
          "723:                     || strstr($tab_column[$t_n][\"TYPE\"][$j], 'time')",
          "724:                     || strstr($tab_column[$t_n][\"TYPE\"][$j], 'year')",
          "725:                 ) {",
          "727:                 }",
          "730:             }",
          "732:             $html .= htmlspecialchars(",
          "",
          "[Removed Lines]",
          "704:                 $html .= '<img src=\"' . $_SESSION['PMA_Theme']->getImgPath()",
          "705:                     . 'pmd/FieldKey_small.png\" alt=\"*\" />';",
          "709:                 $html .= '<img src=\"' . $_SESSION['PMA_Theme']->getImgPath()",
          "710:                     . 'pmd/Field_small';",
          "715:                     $html .= '_char';",
          "721:                     $html .= '_int';",
          "726:                     $html .= '_date';",
          "729:                 $html .= '.png\" alt=\"*\" />';",
          "",
          "[Added Lines]",
          "704:                 $html .= '<img src=\"'",
          "705:                     . $_SESSION['PMA_Theme']->getImgPath('pmd/FieldKey_small.png')",
          "706:                     . '\" alt=\"*\" />';",
          "709:                 $image = 'pmd/Field_small';",
          "713:                     $image .= '_char';",
          "719:                     $image .= '_int';",
          "724:                     $image .= '_date';",
          "726:                 $image .= '.png';",
          "728:                 $html .= '<img src=\"'",
          "729:                     . $_SESSION['PMA_Theme']->getImgPath($image) . '\" alt=\"*\" />';",
          "",
          "---------------"
        ],
        "libraries/language_stats.inc.php||libraries/language_stats.inc.php": [
          "File: libraries/language_stats.inc.php -> libraries/language_stats.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: $GLOBALS[\"language_stats\"] = array (",
          "6:     'af' => 10,",
          "7:     'ar' => 38,",
          "9:     'be@latin' => 27,",
          "10:     'be' => 27,",
          "11:     'bg' => 62,",
          "",
          "[Removed Lines]",
          "8:     'az' => 53,",
          "",
          "[Added Lines]",
          "8:     'az' => 54,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:     'hr' => 33,",
          "33:     'hu' => 100,",
          "34:     'hy' => 3,",
          "36:     'id' => 75,",
          "37:     'it' => 81,",
          "39:     'ka' => 15,",
          "40:     'kk' => 10,",
          "41:     'km' => 6,",
          "42:     'kn' => 2,",
          "44:     'ksh' => 1,",
          "45:     'ky' => 1,",
          "46:     'lt' => 49,",
          "",
          "[Removed Lines]",
          "35:     'ia' => 64,",
          "38:     'ja' => 73,",
          "43:     'ko' => 82,",
          "",
          "[Added Lines]",
          "35:     'ia' => 68,",
          "38:     'ja' => 74,",
          "43:     'ko' => 83,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76:     'ur' => 20,",
          "77:     'uz@latin' => 36,",
          "78:     'uz' => 37,",
          "80:     'vls' => 3,",
          "81:     'zh_CN' => 82,",
          "82:     'zh_TW' => 97,",
          "",
          "[Removed Lines]",
          "79:     'vi' => 1,",
          "",
          "[Added Lines]",
          "79:     'vi' => 2,",
          "",
          "---------------"
        ],
        "libraries/mysql_charsets.inc.php||libraries/mysql_charsets.inc.php": [
          "File: libraries/mysql_charsets.inc.php -> libraries/mysql_charsets.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:         : 'SELECT * FROM information_schema.COLLATIONS';",
          "44:     $res = $GLOBALS['dbi']->query($sql);",
          "45:     while ($row = $GLOBALS['dbi']->fetchAssoc($res)) {",
          "49:         } else {",
          "51:         }",
          "52:         $mysql_collations_flat[] = $row['COLLATION_NAME'];",
          "53:         if ($row['IS_DEFAULT'] == 'Yes' || $row['IS_DEFAULT'] == '1') {",
          "55:                 = $row['COLLATION_NAME'];",
          "56:         }",
          "59:         $mysql_collations_available[$row['COLLATION_NAME']] = true;",
          "62:             || !empty($mysql_collations_available[$row['COLLATION_NAME']]);",
          "63:     }",
          "64:     $GLOBALS['dbi']->freeResult($res);",
          "65:     unset($res, $row);",
          "83:     sort($mysql_collations_flat, SORT_STRING);",
          "84:     foreach ($mysql_collations as $key => $value) {",
          "85:         sort($mysql_collations[$key], SORT_STRING);",
          "",
          "[Removed Lines]",
          "46:         if (! is_array($mysql_collations[$row['CHARACTER_SET_NAME']])) {",
          "47:             $mysql_collations[$row['CHARACTER_SET_NAME']]",
          "48:                 = array($row['COLLATION_NAME']);",
          "50:             $mysql_collations[$row['CHARACTER_SET_NAME']][] = $row['COLLATION_NAME'];",
          "54:             $mysql_default_collations[$row['CHARACTER_SET_NAME']]",
          "60:         $mysql_charsets_available[$row['CHARACTER_SET_NAME']]",
          "61:             = !empty($mysql_charsets_available[$row['CHARACTER_SET_NAME']])",
          "67:     if (PMA_DRIZZLE",
          "68:         && isset($mysql_collations['utf8_general_ci'])",
          "69:         && isset($mysql_collations['utf8'])",
          "70:     ) {",
          "71:         $mysql_collations['utf8'] = $mysql_collations['utf8_general_ci'];",
          "72:         $mysql_default_collations['utf8']",
          "73:             = $mysql_default_collations['utf8_general_ci'];",
          "74:         $mysql_charsets_available['utf8']",
          "75:             = $mysql_charsets_available['utf8_general_ci'];",
          "76:         unset(",
          "77:             $mysql_collations['utf8_general_ci'],",
          "78:             $mysql_default_collations['utf8_general_ci'],",
          "79:             $mysql_charsets_available['utf8_general_ci']",
          "80:         );",
          "81:     }",
          "",
          "[Added Lines]",
          "46:         $char_set_name = PMA_DRIZZLE",
          "47:             ? $row['DESCRIPTION']",
          "48:             : $row['CHARACTER_SET_NAME'];",
          "49:         if (! is_array($mysql_collations[$char_set_name])) {",
          "50:             $mysql_collations[$char_set_name] = array($row['COLLATION_NAME']);",
          "52:             $mysql_collations[$char_set_name][] = $row['COLLATION_NAME'];",
          "56:             $mysql_default_collations[$char_set_name]",
          "62:         $mysql_charsets_available[$char_set_name]",
          "63:             = !empty($mysql_charsets_available[$char_set_name])",
          "",
          "---------------"
        ],
        "libraries/select_lang.lib.php||libraries/select_lang.lib.php": [
          "File: libraries/select_lang.lib.php -> libraries/select_lang.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "604:     trigger_error(",
          "609:         E_USER_ERROR",
          "610:     );",
          "611: }",
          "631: unset(",
          "632:     $line, $fall_back_lang, $GLOBALS['lang_failed_cfg'],",
          "633:     $GLOBALS['lang_failed_cookie'], $GLOBALS['lang_failed_request']",
          "",
          "[Removed Lines]",
          "603: if ($GLOBALS['lang_failed_cfg']) {",
          "605:         sprintf(",
          "606:             __('Unknown language: %1$s.'),",
          "607:             htmlspecialchars($GLOBALS['lang_failed_cfg'])",
          "608:         ),",
          "612: if ($GLOBALS['lang_failed_cookie']) {",
          "613:     trigger_error(",
          "614:         sprintf(",
          "615:             __('Unknown language: %1$s.'),",
          "616:             htmlspecialchars($GLOBALS['lang_failed_cookie'])",
          "617:         ),",
          "618:         E_USER_ERROR",
          "619:     );",
          "620: }",
          "621: if ($GLOBALS['lang_failed_request']) {",
          "622:     trigger_error(",
          "623:         sprintf(",
          "624:             __('Unknown language: %1$s.'),",
          "625:             htmlspecialchars($GLOBALS['lang_failed_request'])",
          "626:         ),",
          "627:         E_USER_ERROR",
          "628:     );",
          "629: }",
          "",
          "[Added Lines]",
          "603: if ($GLOBALS['lang_failed_cfg']",
          "604:     || $GLOBALS['lang_failed_cookie']",
          "605:     || $GLOBALS['lang_failed_request']) {",
          "607:         __('Ignoring unsupported language code.'),",
          "",
          "---------------"
        ],
        "libraries/user_preferences.lib.php||libraries/user_preferences.lib.php": [
          "File: libraries/user_preferences.lib.php -> libraries/user_preferences.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     $config_data = json_encode($config_array);",
          "111:     if ($has_config) {",
          "112:         $query = 'UPDATE ' . $query_table",
          "114:             . PMA_Util::sqlAddSlashes($config_data)",
          "115:             . '\\''",
          "116:             . ' WHERE `username` = \\''",
          "117:             . PMA_Util::sqlAddSlashes($cfgRelation['user'])",
          "118:             . '\\'';",
          "119:     } else {",
          "121:             . 'VALUES (\\''",
          "124:     }",
          "125:     if (isset($_SESSION['cache'][$cache_key]['userprefs'])) {",
          "126:         unset($_SESSION['cache'][$cache_key]['userprefs']);",
          "",
          "[Removed Lines]",
          "113:             . ' SET `config_data` = \\''",
          "120:         $query = 'INSERT INTO ' . $query_table . ' (`username`, `config_data`) '",
          "122:             . PMA_Util::sqlAddSlashes($cfgRelation['user']) . '\\', \\''",
          "123:             . PMA_Util::sqlAddSlashes($config_data) . '\\')';",
          "",
          "[Added Lines]",
          "113:             . ' SET `timevalue` = NOW(), `config_data` = \\''",
          "120:         $query = 'INSERT INTO ' . $query_table",
          "121:             . ' (`username`, `timevalue`,`config_data`) '",
          "123:             . PMA_Util::sqlAddSlashes($cfgRelation['user']) . '\\', NOW(), '",
          "124:             . '\\'' . PMA_Util::sqlAddSlashes($config_data) . '\\')';",
          "",
          "---------------"
        ],
        "themes/pmahomme/css/common.css.php||themes/pmahomme/css/common.css.php": [
          "File: themes/pmahomme/css/common.css.php -> themes/pmahomme/css/common.css.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "325: textarea {",
          "326:     overflow: visible;",
          "327:     height: <?php echo ceil($GLOBALS['cfg']['TextareaRows'] * 1.2); ?>em;",
          "328: }",
          "330: textarea.char {",
          "331:     height: <?php echo ceil($GLOBALS['cfg']['CharTextareaRows'] * 1.2); ?>em;",
          "332: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     margin: 6px;",
          "332:     margin: 6px;",
          "",
          "---------------"
        ]
      }
    }
  ]
}