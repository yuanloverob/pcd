{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "77cd04bd27397161faa4ad0b211727bfd97e6a67",
      "candidate_info": {
        "commit_hash": "77cd04bd27397161faa4ad0b211727bfd97e6a67",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/77cd04bd27397161faa4ad0b211727bfd97e6a67",
        "files": [
          "ssl/record/rec_layer_s3.c"
        ],
        "message": "Fail if an unrecognised record type is received\n\nTLS1.0 and TLS1.1 say you SHOULD ignore unrecognised record types, but\nTLS 1.2 says you MUST send an unexpected message alert. We swap to the\nTLS 1.2 behaviour for all protocol versions to prevent issues where no\nprogress is being made and the peer continually sends unrecognised record\ntypes, using up resources processing them.\n\nIssue reported by \u90ed\u5fd7\u6500\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(cherry picked from commit 436a2a0179416d2cc22b678b63e50c2638384d5f)",
        "before_after_code_files": [
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1463:     switch (SSL3_RECORD_get_type(rr)) {",
          "1464:     default:",
          "1474:         al = SSL_AD_UNEXPECTED_MESSAGE;",
          "1475:         SSLerr(SSL_F_SSL3_READ_BYTES, SSL_R_UNEXPECTED_RECORD);",
          "1476:         goto f_err;",
          "",
          "[Removed Lines]",
          "1469:         if (s->version >= TLS1_VERSION && s->version <= TLS1_1_VERSION) {",
          "1470:             SSL3_RECORD_set_length(rr, 0);",
          "1471:             SSL3_RECORD_set_read(rr);",
          "1472:             goto start;",
          "1473:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f5fb2b28c2de4730c13f35d7d90265c62693631",
      "candidate_info": {
        "commit_hash": "7f5fb2b28c2de4730c13f35d7d90265c62693631",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7f5fb2b28c2de4730c13f35d7d90265c62693631",
        "files": [
          "test/build.info",
          "test/sslapitest.c"
        ],
        "message": "Provide some tests for the sig algs API\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2160)\n(cherry picked from commit f1b25aaed32f90b3309243d24353bf636c1c786b)",
        "before_after_code_files": [
          "test/build.info||test/build.info",
          "test/sslapitest.c||test/sslapitest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/build.info||test/build.info": [
          "File: test/build.info -> test/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:   DEPEND[bioprinttest]=../libcrypto",
          "270:   SOURCE[sslapitest]=sslapitest.c ssltestlib.c testutil.c",
          "272:   DEPEND[sslapitest]=../libcrypto ../libssl",
          "274:   SOURCE[dtlstest]=dtlstest.c ssltestlib.c testutil.c",
          "",
          "[Removed Lines]",
          "271:   INCLUDE[sslapitest]=../include",
          "",
          "[Added Lines]",
          "271:   INCLUDE[sslapitest]=../include ..",
          "",
          "---------------"
        ],
        "test/sslapitest.c||test/sslapitest.c": [
          "File: test/sslapitest.c -> test/sslapitest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include \"ssltestlib.h\"",
          "19: #include \"testutil.h\"",
          "21: static char *cert = NULL;",
          "22: static char *privkey = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: #include \"e_os.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "875:     EXECUTE_TEST(execute_test_ssl_bio, ssl_bio_tear_down);",
          "876: }",
          "878: int main(int argc, char *argv[])",
          "879: {",
          "880:     BIO *err = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "879: typedef struct {",
          "881:     const int *list;",
          "883:     size_t listlen;",
          "885:     const char *liststr;",
          "887:     int valid;",
          "889:     int connsuccess;",
          "890: } sigalgs_list;",
          "892: static const int validlist1[] = {NID_sha256, EVP_PKEY_RSA};",
          "893: static const int validlist2[] = {NID_sha256, EVP_PKEY_RSA, NID_sha512, EVP_PKEY_EC};",
          "894: static const int validlist3[] = {NID_sha512, EVP_PKEY_EC};",
          "895: static const int invalidlist1[] = {NID_undef, EVP_PKEY_RSA};",
          "896: static const int invalidlist2[] = {NID_sha256, NID_undef};",
          "897: static const int invalidlist3[] = {NID_sha256, EVP_PKEY_RSA, NID_sha256};",
          "898: static const int invalidlist4[] = {NID_sha256};",
          "899: static const sigalgs_list testsigalgs[] = {",
          "900:     {validlist1, OSSL_NELEM(validlist1), NULL, 1, 1},",
          "901:     {validlist2, OSSL_NELEM(validlist2), NULL, 1, 1},",
          "902:     {validlist3, OSSL_NELEM(validlist3), NULL, 1, 0},",
          "903:     {NULL, 0, \"RSA+SHA256\", 1, 1},",
          "904:     {NULL, 0, \"RSA+SHA256:ECDSA+SHA512\", 1, 1},",
          "905:     {NULL, 0, \"ECDSA+SHA512\", 1, 0},",
          "906:     {invalidlist1, OSSL_NELEM(invalidlist1), NULL, 0, 0},",
          "907:     {invalidlist2, OSSL_NELEM(invalidlist2), NULL, 0, 0},",
          "908:     {invalidlist3, OSSL_NELEM(invalidlist3), NULL, 0, 0},",
          "909:     {invalidlist4, OSSL_NELEM(invalidlist4), NULL, 0, 0},",
          "910:     {NULL, 0, \"RSA\", 0, 0},",
          "911:     {NULL, 0, \"SHA256\", 0, 0},",
          "912:     {NULL, 0, \"RSA+SHA256:SHA256\", 0, 0},",
          "913:     {NULL, 0, \"Invalid\", 0, 0}};",
          "915: static int test_set_sigalgs(int idx)",
          "916: {",
          "917:     SSL_CTX *cctx = NULL, *sctx = NULL;",
          "918:     SSL *clientssl = NULL, *serverssl = NULL;",
          "919:     int testresult = 0;",
          "920:     const sigalgs_list *curr;",
          "921:     int testctx;",
          "924:     if ((size_t)idx >= OSSL_NELEM(testsigalgs) * 2)",
          "925:         return 0;",
          "927:     testctx = ((size_t)idx < OSSL_NELEM(testsigalgs));",
          "928:     curr = testctx ? &testsigalgs[idx]",
          "929:                    : &testsigalgs[idx - OSSL_NELEM(testsigalgs)];",
          "931:     if (!create_ssl_ctx_pair(TLS_server_method(), TLS_client_method(), &sctx,",
          "932:                              &cctx, cert, privkey)) {",
          "933:         printf(\"Unable to create SSL_CTX pair\\n\");",
          "934:         return 0;",
          "935:     }",
          "937:     if (testctx) {",
          "938:         int ret;",
          "939:         if (curr->list != NULL)",
          "940:             ret = SSL_CTX_set1_sigalgs(cctx, curr->list, curr->listlen);",
          "941:         else",
          "942:             ret = SSL_CTX_set1_sigalgs_list(cctx, curr->liststr);",
          "944:         if (!ret) {",
          "945:             if (curr->valid)",
          "946:                 printf(\"Unexpected failure setting sigalgs in SSL_CTX (%d)\\n\",",
          "947:                        idx);",
          "948:             else",
          "949:                 testresult = 1;",
          "950:             goto end;",
          "951:         }",
          "952:         if (!curr->valid) {",
          "953:             printf(\"Unexpected success setting sigalgs in SSL_CTX (%d)\\n\", idx);",
          "954:             goto end;",
          "955:         }",
          "956:     }",
          "958:     if (!create_ssl_objects(sctx, cctx, &serverssl, &clientssl, NULL, NULL)) {",
          "959:         printf(\"Unable to create SSL objects\\n\");",
          "960:         goto end;",
          "961:     }",
          "963:     if (!testctx) {",
          "964:         int ret;",
          "966:         if (curr->list != NULL)",
          "967:             ret = SSL_set1_sigalgs(clientssl, curr->list, curr->listlen);",
          "968:         else",
          "969:             ret = SSL_set1_sigalgs_list(clientssl, curr->liststr);",
          "970:         if (!ret) {",
          "971:             if (curr->valid)",
          "972:                 printf(\"Unexpected failure setting sigalgs in SSL (%d)\\n\", idx);",
          "973:             else",
          "974:                 testresult = 1;",
          "975:             goto end;",
          "976:         }",
          "977:         if (!curr->valid) {",
          "978:             printf(\"Unexpected success setting sigalgs in SSL (%d)\\n\", idx);",
          "979:             goto end;",
          "980:         }",
          "981:     }",
          "983:     if (curr->connsuccess != create_ssl_connection(serverssl, clientssl)) {",
          "984:         printf(\"Unexpected return value creating SSL connection (%d)\\n\", idx);",
          "985:         goto end;",
          "986:     }",
          "988:     testresult = 1;",
          "990:  end:",
          "991:     SSL_free(serverssl);",
          "992:     SSL_free(clientssl);",
          "993:     SSL_CTX_free(sctx);",
          "994:     SSL_CTX_free(cctx);",
          "996:     return testresult;",
          "997: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "909:     ADD_TEST(test_ssl_bio_pop_ssl_bio);",
          "910:     ADD_TEST(test_ssl_bio_change_rbio);",
          "911:     ADD_TEST(test_ssl_bio_change_wbio);",
          "913:     testresult = run_tests(argv[0]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1033:     ADD_ALL_TESTS(test_set_sigalgs, OSSL_NELEM(testsigalgs) * 2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bfca0515b6977cba7b50215fc6d7d88250c9ca38",
      "candidate_info": {
        "commit_hash": "bfca0515b6977cba7b50215fc6d7d88250c9ca38",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bfca0515b6977cba7b50215fc6d7d88250c9ca38",
        "files": [
          "test/recipes/70-test_asyncio.t",
          "test/recipes/80-test_dtls.t",
          "test/recipes/90-test_sslapi.t"
        ],
        "message": "Test recipes: remove duplicate OpenSSL::Test usage\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1815)\n(cherry picked from commit 2c4a3f938ca378d2017275d299f02512b232ceaf)",
        "before_after_code_files": [
          "test/recipes/70-test_asyncio.t||test/recipes/70-test_asyncio.t",
          "test/recipes/80-test_dtls.t||test/recipes/80-test_dtls.t",
          "test/recipes/90-test_sslapi.t||test/recipes/90-test_sslapi.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/70-test_asyncio.t||test/recipes/70-test_asyncio.t": [
          "File: test/recipes/70-test_asyncio.t -> test/recipes/70-test_asyncio.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: # https://www.openssl.org/source/license.html",
          "11: use OpenSSL::Test::Utils;",
          "12: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "",
          "[Removed Lines]",
          "10: use OpenSSL::Test;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/recipes/80-test_dtls.t||test/recipes/80-test_dtls.t": [
          "File: test/recipes/80-test_dtls.t -> test/recipes/80-test_dtls.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: # in the file LICENSE in the source distribution or at",
          "7: # https://www.openssl.org/source/license.html",
          "10: use OpenSSL::Test::Utils;",
          "11: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "",
          "[Removed Lines]",
          "9: use OpenSSL::Test;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/recipes/90-test_sslapi.t||test/recipes/90-test_sslapi.t": [
          "File: test/recipes/90-test_sslapi.t -> test/recipes/90-test_sslapi.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: # https://www.openssl.org/source/license.html",
          "11: use OpenSSL::Test::Utils;",
          "12: use OpenSSL::Test qw/:DEFAULT srctop_file/;",
          "",
          "[Removed Lines]",
          "10: use OpenSSL::Test;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "99d97842ddb5fbbbfb5e9820a64ebd19afe569f6",
      "candidate_info": {
        "commit_hash": "99d97842ddb5fbbbfb5e9820a64ebd19afe569f6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/99d97842ddb5fbbbfb5e9820a64ebd19afe569f6",
        "files": [
          "crypto/evp/e_chacha20_poly1305.c"
        ],
        "message": "chacha20/poly1305: make sure to clear the buffer at correct position\n\nThe offset to the memory to clear was incorrect, causing a heap buffer\noverflow.\n\nCVE-2016-7054\n\nThanks to Robert \u015awi\u0119cki for reporting this\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit b8e4011fb26364e44230946b87ab38cc1c719aae)",
        "before_after_code_files": [
          "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
          ],
          "candidate": [
            "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
          "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:                 memcpy(out, actx->tag, POLY1305_BLOCK_SIZE);",
          "300:             } else {",
          "301:                 if (CRYPTO_memcmp(temp, in, POLY1305_BLOCK_SIZE)) {",
          "303:                     return -1;",
          "304:                 }",
          "305:             }",
          "",
          "[Removed Lines]",
          "302:                     memset(out, 0, plen);",
          "",
          "[Added Lines]",
          "302:                     memset(out - plen, 0, plen);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1702df6ed6bb6fd494adfa74125b5948bfbc13a6",
      "candidate_info": {
        "commit_hash": "1702df6ed6bb6fd494adfa74125b5948bfbc13a6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1702df6ed6bb6fd494adfa74125b5948bfbc13a6",
        "files": [
          "test/ssl-tests/14-curves.conf",
          "test/ssl-tests/14-curves.conf.in"
        ],
        "message": "Add server temp key type checks\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2191)\n(cherry picked from commit 9c4319bd03f17fc87ae63b6231c87c678e5cabd1)",
        "before_after_code_files": [
          "test/ssl-tests/14-curves.conf||test/ssl-tests/14-curves.conf",
          "test/ssl-tests/14-curves.conf.in||test/ssl-tests/14-curves.conf.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ssl-tests/14-curves.conf||test/ssl-tests/14-curves.conf": [
          "File: test/ssl-tests/14-curves.conf -> test/ssl-tests/14-curves.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: [test-0]",
          "56: ExpectedResult = Success",
          "59: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: ExpectedTmpKeyType = sect163k1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80: [test-1]",
          "81: ExpectedResult = Success",
          "84: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83: ExpectedTmpKeyType = sect163r1",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105: [test-2]",
          "106: ExpectedResult = Success",
          "109: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: ExpectedTmpKeyType = sect163r2",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "130: [test-3]",
          "131: ExpectedResult = Success",
          "134: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135: ExpectedTmpKeyType = sect193r1",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "155: [test-4]",
          "156: ExpectedResult = Success",
          "159: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161: ExpectedTmpKeyType = sect193r2",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "180: [test-5]",
          "181: ExpectedResult = Success",
          "184: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187: ExpectedTmpKeyType = sect233k1",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "205: [test-6]",
          "206: ExpectedResult = Success",
          "209: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213: ExpectedTmpKeyType = sect233r1",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "230: [test-7]",
          "231: ExpectedResult = Success",
          "234: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "239: ExpectedTmpKeyType = sect239k1",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "255: [test-8]",
          "256: ExpectedResult = Success",
          "259: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "265: ExpectedTmpKeyType = sect283k1",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "280: [test-9]",
          "281: ExpectedResult = Success",
          "284: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "291: ExpectedTmpKeyType = sect283r1",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "305: [test-10]",
          "306: ExpectedResult = Success",
          "309: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "317: ExpectedTmpKeyType = sect409k1",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "330: [test-11]",
          "331: ExpectedResult = Success",
          "334: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "343: ExpectedTmpKeyType = sect409r1",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "355: [test-12]",
          "356: ExpectedResult = Success",
          "359: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "369: ExpectedTmpKeyType = sect571k1",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "380: [test-13]",
          "381: ExpectedResult = Success",
          "384: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "395: ExpectedTmpKeyType = sect571r1",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "405: [test-14]",
          "406: ExpectedResult = Success",
          "409: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "421: ExpectedTmpKeyType = secp160k1",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "430: [test-15]",
          "431: ExpectedResult = Success",
          "434: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "447: ExpectedTmpKeyType = secp160r1",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "455: [test-16]",
          "456: ExpectedResult = Success",
          "459: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "473: ExpectedTmpKeyType = secp160r2",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "480: [test-17]",
          "481: ExpectedResult = Success",
          "484: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "499: ExpectedTmpKeyType = secp192k1",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "505: [test-18]",
          "506: ExpectedResult = Success",
          "509: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "525: ExpectedTmpKeyType = prime192v1",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "530: [test-19]",
          "531: ExpectedResult = Success",
          "534: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "551: ExpectedTmpKeyType = secp224k1",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "555: [test-20]",
          "556: ExpectedResult = Success",
          "559: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "577: ExpectedTmpKeyType = secp224r1",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "580: [test-21]",
          "581: ExpectedResult = Success",
          "584: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "603: ExpectedTmpKeyType = secp256k1",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "605: [test-22]",
          "606: ExpectedResult = Success",
          "609: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "629: ExpectedTmpKeyType = prime256v1",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "630: [test-23]",
          "631: ExpectedResult = Success",
          "634: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "655: ExpectedTmpKeyType = secp384r1",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "655: [test-24]",
          "656: ExpectedResult = Success",
          "659: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "681: ExpectedTmpKeyType = secp521r1",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "680: [test-25]",
          "681: ExpectedResult = Success",
          "684: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "707: ExpectedTmpKeyType = brainpoolP256r1",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "705: [test-26]",
          "706: ExpectedResult = Success",
          "709: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "733: ExpectedTmpKeyType = brainpoolP384r1",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "730: [test-27]",
          "731: ExpectedResult = Success",
          "734: # ===========================================================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "759: ExpectedTmpKeyType = brainpoolP512r1",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "755: [test-28]",
          "756: ExpectedResult = Success",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "785: ExpectedTmpKeyType = X25519",
          "",
          "---------------"
        ],
        "test/ssl-tests/14-curves.conf.in||test/ssl-tests/14-curves.conf.in": [
          "File: test/ssl-tests/14-curves.conf.in -> test/ssl-tests/14-curves.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:   \"CipherString\" => \"ECDHE\",",
          "34:                 \"Curves\" => $curve",
          "35:             },",
          "37:         };",
          "38:     }",
          "39: }",
          "",
          "[Removed Lines]",
          "36:             test   => { \"ExpectedResult\" => \"Success\" },",
          "",
          "[Added Lines]",
          "36:             test   => {",
          "37:                 \"ExpectedTmpKeyType\" => $curve,",
          "38:                 \"ExpectedResult\" => \"Success\"",
          "39:             },",
          "",
          "---------------"
        ]
      }
    }
  ]
}