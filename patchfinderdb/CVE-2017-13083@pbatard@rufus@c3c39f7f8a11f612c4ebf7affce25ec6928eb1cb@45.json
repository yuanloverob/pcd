{
  "cve_id": "CVE-2017-13083",
  "cve_desc": "Akeo Consulting Rufus prior to version 2.17.1187 does not adequately validate the integrity of updates downloaded over HTTP, allowing an attacker to easily convince a user to execute arbitrary code",
  "repo": "pbatard/rufus",
  "patch_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
  "patch_info": {
    "commit_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "repo": "pbatard/rufus",
    "commit_url": "https://github.com/pbatard/rufus/commit/c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "files": [
      "res/localization/rufus.loc",
      "src/pki.c",
      "src/rufus.rc",
      "src/stdlg.c"
    ],
    "message": "[pki] fix https://www.kb.cert.org/vuls/id/403768\n\n* This commit effectively fixes https://www.kb.cert.org/vuls/id/403768 (CVE-2017-13083) as\n  it is described per its revision 11, which is the latest revision at the time of this commit,\n  by disabling Windows prompts, enacted during signature validation, that allow the user to\n  bypass the intended signature verification checks.\n* It needs to be pointed out that the vulnerability (\"allow(ing) the use of a self-signed\n  certificate\"), which relies on the end-user actively ignoring a Windows prompt that tells\n  them that the update failed the signature validation whilst also advising against running it,\n  is being fully addressed, even as the update protocol remains HTTP.\n* It also need to be pointed out that the extended delay (48 hours) between the time the\n  vulnerability was reported and the moment it is fixed in our codebase has to do with\n  the fact that the reporter chose to deviate from standard security practices by not\n  disclosing the details of the vulnerability with us, be it publicly or privately,\n  before creating the cert.org report. The only advance notification we received was a\n  generic note about the use of HTTP vs HTTPS, which, as have established, is not\n  immediately relevant to addressing the reported vulnerability.\n* Closes #1009\n* Note: The other vulnerability scenario described towards the end of #1009, which\n  doesn't have to do with the \"lack of CA checking\", will be addressed separately.",
    "before_after_code_files": [
      "res/localization/rufus.loc||res/localization/rufus.loc",
      "src/pki.c||src/pki.c",
      "src/rufus.rc||src/rufus.rc",
      "src/stdlg.c||src/stdlg.c"
    ]
  },
  "patch_diff": {
    "res/localization/rufus.loc||res/localization/rufus.loc": [
      "File: res/localization/rufus.loc -> res/localization/rufus.loc",
      "--- Hunk 1 ---",
      "[Context before]",
      "487: # eg. \"Partitioning (MBR)...\"",
      "488: t MSG_238 \"Partitioning (%s)...\"",
      "489: t MSG_239 \"Deleting partitions...\"",
      "490: t MSG_241 \"Downloading: %0.1f%%\"",
      "491: t MSG_242 \"Failed to download file.\"",
      "492: t MSG_243 \"Checking for Rufus updates...\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490: t MSG_240 \"The signature for the downloaded update can not be validated. This could mean that your \"",
      "491:  \"system is improperly configured for signature validation or indicate a malicious download.\\n\\n\"",
      "492:  \"The download will be deleted. Please check the log for more details.\"",
      "",
      "---------------"
    ],
    "src/pki.c||src/pki.c": [
      "File: src/pki.c -> src/pki.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:  static char error_string[64];",
      "54:  DWORD error_code = GetLastError();",
      "57:   return WindowsErrorString();",
      "59:  switch (error_code) {",
      "",
      "[Removed Lines]",
      "56:  if ((error_code >> 16) != 0x8009)",
      "",
      "[Added Lines]",
      "56:  if (((error_code >> 16) != 0x8009) && ((error_code >> 16) != 0x800B))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "113:   return \"Cannot complete usage check.\";",
      "114:  case CRYPT_E_NO_TRUSTED_SIGNER:",
      "115:   return \"None of the signers of the cryptographic message or certificate trust list is trusted.\";",
      "116:  default:",
      "117:   static_sprintf(error_string, \"Unknown PKI error 0x%08lX\", error_code);",
      "118:   return error_string;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "116:  case CERT_E_UNTRUSTEDROOT:",
      "117:   return \"The root certificate is not trusted.\";",
      "118:  case TRUST_E_NOSIGNATURE:",
      "119:   return \"Not digitally signed.\";",
      "120:  case TRUST_E_EXPLICIT_DISTRUST:",
      "121:   return \"One of the certificates used was marked as untrusted by the user.\";",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "268:  }",
      "270:  trust_data.cbStruct = sizeof(trust_data);",
      "273:  trust_data.fdwRevocationChecks = WTD_REVOKE_WHOLECHAIN;",
      "",
      "[Removed Lines]",
      "271:  trust_data.dwUIChoice = WTD_UI_ALL;",
      "",
      "[Added Lines]",
      "283:  trust_data.dwUIChoice = WTD_UI_NONE;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "279:  r = WinVerifyTrust(NULL, &guid_generic_verify, &trust_data);",
      "280:  safe_free(trust_file.pcwszFilePath);",
      "282:  return r;",
      "283: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "293:  switch (r) {",
      "294:  case ERROR_SUCCESS:",
      "295:   break;",
      "296:  case TRUST_E_NOSIGNATURE:",
      "298:   uprintf(\"PKI: File does not appear to be signed: %s\", WinPKIErrorString());",
      "299:   MessageBoxExU(hDlg, lmprintf(MSG_284), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "300:   break;",
      "301:  default:",
      "302:   uprintf(\"PKI: Failed to validate signature: %s\", WinPKIErrorString());",
      "303:   MessageBoxExU(hDlg, lmprintf(MSG_240), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "304:   break;",
      "305:  }",
      "",
      "---------------"
    ],
    "src/rufus.rc||src/rufus.rc": [
      "File: src/rufus.rc -> src/rufus.rc",
      "--- Hunk 1 ---",
      "[Context before]",
      "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
      "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
      "35: EXSTYLE WS_EX_ACCEPTFILES",
      "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
      "38: BEGIN",
      "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
      "",
      "[Removed Lines]",
      "36: CAPTION \"Rufus 2.17.1186\"",
      "",
      "[Added Lines]",
      "36: CAPTION \"Rufus 2.17.1187\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "368: VS_VERSION_INFO VERSIONINFO",
      "371:  FILEFLAGSMASK 0x3fL",
      "372: #ifdef _DEBUG",
      "373:  FILEFLAGS 0x1L",
      "",
      "[Removed Lines]",
      "369:  FILEVERSION 2,17,1186,0",
      "370:  PRODUCTVERSION 2,17,1186,0",
      "",
      "[Added Lines]",
      "369:  FILEVERSION 2,17,1187,0",
      "370:  PRODUCTVERSION 2,17,1187,0",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "384:         BEGIN",
      "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
      "386:             VALUE \"FileDescription\", \"Rufus\"",
      "388:             VALUE \"InternalName\", \"Rufus\"",
      "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
      "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
      "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
      "392:             VALUE \"ProductName\", \"Rufus\"",
      "394:         END",
      "395:     END",
      "396:     BLOCK \"VarFileInfo\"",
      "",
      "[Removed Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1186\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1186\"",
      "",
      "[Added Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1187\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1187\"",
      "",
      "---------------"
    ],
    "src/stdlg.c||src/stdlg.c": [
      "File: src/stdlg.c -> src/stdlg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674:    case 2:  // Launch newer version and close this one",
      "1675:     Sleep(1000); // Add a delay on account of antivirus scanners",
      "1678:      break;",
      "1680:     memset(&si, 0, sizeof(si));",
      "1681:     memset(&pi, 0, sizeof(pi));",
      "",
      "[Removed Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR)",
      "",
      "[Added Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR) {",
      "1679:      _unlinkU(filepath);",
      "1680:      EnableWindow(GetDlgItem(hDlg, IDC_DOWNLOAD), FALSE);",
      "1682:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1af0e16e916b94fee1631fafdec61fdfb5bb12ae",
      "candidate_info": {
        "commit_hash": "1af0e16e916b94fee1631fafdec61fdfb5bb12ae",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/1af0e16e916b94fee1631fafdec61fdfb5bb12ae",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Lithuanian translation\n\n* Closes #1034",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "9891: t IDS_FILESYSTEM_TXT \"Fail\u0173 sistema\"",
          "9892: t IDS_CLUSTERSIZE_TXT \"Klasterio dydis\"",
          "9893: t IDS_LABEL_TXT \"Nauja tomo \u017eym\u0117\"",
          "9895: s IDC_BADBLOCKS +25,0",
          "9897: m IDC_NBPASSES +25,0",
          "9898: s IDC_NBPASSES -25,0",
          "9901: t IDC_WINDOWS_INSTALL \"Standartin\u0117 Windows \u012fdiegtis\"",
          "9903: s IDC_ABOUT -15,0",
          "9904: t IDC_ABOUT \"Apie...\"",
          "9905: m IDC_LOG -15,0",
          "9906: s IDC_LOG 30,0",
          "9907: t IDC_LOG \"Dienynas\"",
          "9909: t IDC_START \"Prad\u0117ti\"",
          "9912: t IDC_EXTRA_PARTITION \"Pataisos seniems BIOS (papildomas skaidinys, ir kt.)\"",
          "9913: m IDC_DISK_ID +25,0",
          "9914: s IDC_DISK_ID -25,0",
          "",
          "[Removed Lines]",
          "9894: t IDS_FORMAT_OPTIONS_GRP \"Formatavimo parinktys\"",
          "9896: t IDC_BADBLOCKS \"Tikrinti \u012frengin\u012f d\u0117l blog\u0173 blok\u0173\"",
          "9899: t IDC_QUICKFORMAT \"Greitas formatavimas\"",
          "9900: t IDC_BOOT \"Kurti \u012fkelties disk\u0105 naudojant\"",
          "9902: t IDC_SET_ICON \"Kurti i\u0161pl\u0117stin\u0117s \u017eym\u0117s ir piktogramos failus\"",
          "9908: t IDCANCEL \"U\u017edaryti\"",
          "9910: t IDS_ADVANCED_OPTIONS_GRP \"I\u0161samios parinktys\"",
          "9911: t IDC_ENABLE_FIXED_DISKS \"Rodyti USB kietuosius diskus\"",
          "",
          "[Added Lines]",
          "9894: t IDS_FORMAT_OPTIONS_GRP \"Su\u017eenklinimo parinktys\"",
          "9896: t IDC_BADBLOCKS \"Tikrinti, ar \u012frenginyje yra blog\u0173 blok\u0173\"",
          "9899: t IDC_QUICKFORMAT \"Greitasis su\u017eenklinimas\"",
          "9900: t IDC_BOOT \"Paleid\u017eiama i\u0161 laikmenos\"",
          "9902: t IDC_SET_ICON \"Kurti i\u0161pl\u0117stini\u0173 \u017eymi\u0173 ir piktogram\u0173 failus\"",
          "9908: t IDCANCEL \"U\u017everti\"",
          "9910: t IDS_ADVANCED_OPTIONS_GRP \"I\u0161samesn\u0117s parinktys\"",
          "9911: t IDC_ENABLE_FIXED_DISKS \"Rodyti USB stand\u017eiuosius diskus\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9925: # About -> License dialog",
          "9926: g IDD_LICENSE",
          "9927: t IDD_LICENSE \"Rufus licencija\"",
          "9930: # Notifications. You can trigger one of these by using Alt-R and re-launching Rufus",
          "9931: g IDD_NOTIFICATION",
          "",
          "[Removed Lines]",
          "9928: t IDCANCEL \"U\u017edaryti\"",
          "",
          "[Added Lines]",
          "9928: t IDCANCEL \"U\u017everti\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "9939: t IDD_LOG \"Dienynas\"",
          "9940: t IDC_LOG_CLEAR \"Valyti\"",
          "9941: t IDC_LOG_SAVE \"I\u0161saugoti\"",
          "9944: # About -> Updates",
          "9945: g IDD_UPDATE_POLICY",
          "",
          "[Removed Lines]",
          "9942: t IDCANCEL \"U\u017edaryti\"",
          "",
          "[Added Lines]",
          "9942: t IDCANCEL \"U\u017everti\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "9949: m IDS_CHECK_NOW_GRP +17,0",
          "9950: s IDS_CHECK_NOW_GRP -12,0",
          "9951: s IDS_UPDATE_FREQUENCY_TXT +6,0",
          "9953: m IDC_UPDATE_FREQUENCY -4,0",
          "9954: s IDC_UPDATE_FREQUENCY +28,0",
          "9955: t IDS_INCLUDE_BETAS_TXT \"\u012etraukti beta versijas\"",
          "9956: m IDC_INCLUDE_BETAS -4,0",
          "9957: t IDC_CHECK_NOW \"Tikrinti dabar\"",
          "9958: m IDC_CHECK_NOW +10,0",
          "9960: m IDCANCEL +10,0",
          "9962: # Dialog that appears when a new version is available",
          "9963: g IDD_NEW_VERSION",
          "9972: # Messages used throughout the application",
          "9973: t MSG_001 \"Aptiktas kitas programos atvejis\"",
          "9980: # Must be the same as IDD_DIALOG:IDCANCEL (i.e. \"Close\" - I know it's confusing)",
          "9982: t MSG_007 \"At\u0161aukti\"",
          "9983: t MSG_008 \"Taip\"",
          "9984: t MSG_009 \"Ne\"",
          "",
          "[Removed Lines]",
          "9952: t IDS_UPDATE_FREQUENCY_TXT \"Tikrinti, ar yra naujini\u0173\"",
          "9959: t IDCANCEL \"U\u017edaryti\"",
          "9964: t IDD_NEW_VERSION \"Tikrinti, ar yra naujini\u0173 - Rufus\"",
          "9965: t IDS_NEW_VERSION_AVAIL_TXT \"Yra naujesn\u0117 versija. Pra\u0161au atsisi\u0173sti naujausi\u0105 versij\u0105!\"",
          "9966: t IDC_WEBSITE \"Spausk \u010dia, kad patektum \u012f Rufus svetain\u0119\"",
          "9967: t IDS_NEW_VERSION_NOTES_GRP \"Leidimo pastabos\"",
          "9968: t IDS_NEW_VERSION_DOWNLOAD_GRP \"Si\u0173stis\"",
          "9969: t IDC_DOWNLOAD \"Si\u0173stis\"",
          "9970: t IDCANCEL \"U\u017edaryti\"",
          "9974: t MSG_002 \"Vykdoma kita Rufus programa.\\n\"",
          "9975:  \"Pra\u0161au u\u017edaryti pirm\u0105 program\u0105 prie\u0161 vykdant kit\u0105.\"",
          "9976: t MSG_003 \"\u012eSP\u0116JIMAS: VISI DUOMENYS \u012eRENGINYJE '%s' BUS SUNAIKINTI.\\n\"",
          "9977:  \"Nor\u0117dami t\u0119sti \u0161\u012f veiksm\u0105, spauskite Gerai. I\u0161eiti - spauskite At\u0161aukti.\"",
          "9978: t MSG_004 \"Rufus naujini\u0173 politika\"",
          "9979: t MSG_005 \"Ar norite leisti Rufus tikrinti programos naujinius internete?\"",
          "9981: t MSG_006 \"U\u017edaryti\"",
          "",
          "[Added Lines]",
          "9952: t IDS_UPDATE_FREQUENCY_TXT \"Ie\u0161koti atnaujinim\u0173\"",
          "9959: t IDCANCEL \"U\u017everti\"",
          "9964: t IDD_NEW_VERSION \"Rufus atnaujinim\u0173 paie\u0161ka\"",
          "9965: t IDS_NEW_VERSION_AVAIL_TXT \"Rasta naujesn\u0117 versija. Patariama atsisi\u0173sti naujausi\u0105 versij\u0105!\"",
          "9966: t IDC_WEBSITE \"\u010cia paspaud\u0119 pateksite \u012f \u201eRufus\u201c svetain\u0119\"",
          "9967: t IDS_NEW_VERSION_NOTES_GRP \"Pastabos apie versij\u0105\"",
          "9968: t IDS_NEW_VERSION_DOWNLOAD_GRP \"Parsisi\u0173sti\"",
          "9969: t IDC_DOWNLOAD \"Parsisi\u0173sti\"",
          "9970: t IDCANCEL \"U\u017everti\"",
          "9974: t MSG_002 \"Jau paleista kita Rufus programa.\\n\"",
          "9975:  \"Prie\u0161 paleisdami nauj\u0105 program\u0105, u\u017everkite ankstesni\u0105j\u0105 program\u0105.\"",
          "9976: t MSG_003 \"\u012eSP\u0116JIMAS: VISI DUOMENYS \u012eRENGINYJE \u201e%s\u201c BUS SUNAIKINTI.\\n\"",
          "9977:  \"Nor\u0117dami t\u0119sti \u0161\u012f veiksm\u0105, spauskite \u201eGerai\u201c. Nor\u0117dami i\u0161eiti - spauskite \u201eAt\u0161aukti\u201c.\"",
          "9978: t MSG_004 \"Rufus atnaujinim\u0173 politika\"",
          "9979: t MSG_005 \"Ar norite leisti Rufus ie\u0161koti programos atnaujinim\u0173 internete?\"",
          "9981: t MSG_006 \"U\u017everti\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "10014: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "10015: t MSG_034 \"%d bandymas\"",
          "10016: t MSG_035 \"%d bandymai\"",
          "10018: t MSG_037 \"Programa\"",
          "10019: t MSG_038 \"Nutraukti\"",
          "10020: t MSG_039 \"Vykdyti\"",
          "",
          "[Removed Lines]",
          "10017: t MSG_036 \"ISO atvaizdas\"",
          "",
          "[Added Lines]",
          "10017: t MSG_036 \"ISO atvaizdis\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "10032: # Error messages",
          "10033: t MSG_050 \"S\u0117kmingai.\"",
          "10035: t MSG_052 \"Negalima naudoti parinktos fail\u0173 sistemos \u0161iai laikmenai.\"",
          "10036: t MSG_053 \"Prieiga prie \u0161io \u012frenginio u\u017edrausta.\"",
          "10037: t MSG_054 \"Laikmena apsaugota nuo \u012fra\u0161ymo.\"",
          "10038: t MSG_055 \"\u012erengin\u012f naudoja kitas procesas. \"",
          "10039:  \"Pra\u0161au u\u017edaryti kitus procesus, kurie gali kreiptis \u012f \u012frengin\u012f.\"",
          "10041: t MSG_057 \"Tomo \u017eym\u0117 negaliojanti.\"",
          "10042: t MSG_058 \"\u012erenginio klas\u0117s vardas negaliojantis.\"",
          "10043: t MSG_059 \"Pasirinktas klasterio dydis negalioja \u0161iam \u012frenginiui.\"",
          "10044: t MSG_060 \"Tomo dydis negaliojantis.\"",
          "10046: t MSG_062 \"Gauta nepalaikoma komanda.\"",
          "10047: t MSG_063 \"Atminties paskirstymo klaida.\"",
          "10048: t MSG_064 \"Skaitymo klaida.\"",
          "",
          "[Removed Lines]",
          "10034: t MSG_051 \"Nenustatyta klaida formatuojant.\"",
          "10040: t MSG_056 \"Greitas formatavimas negalimas \u0161iam \u012frenginiui.\"",
          "10045: t MSG_061 \"\u012eterpkite kei\u010diam\u0105 laikmen\u0105 \u012f \u012frengin\u012f.\"",
          "",
          "[Added Lines]",
          "10034: t MSG_051 \"Nenustatyta klaida su\u017eenklinant.\"",
          "10040: t MSG_056 \"Greitasis su\u017eenklinimas negalimas \u0161iam \u012frenginiui.\"",
          "10045: t MSG_061 \"\u012ed\u0117kite kei\u010diam\u0105 laikmen\u0105 \u012f \u012frengin\u012f.\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "10056: # See http://en.wikipedia.org/wiki/Thread_%28computing%29",
          "10057: t MSG_071 \"Negalima prad\u0117ti gijos.\"",
          "10058: t MSG_072 \"Blog\u0173 blok\u0173 tikrinimas nebuvo baigtas.\"",
          "10061: t MSG_075 \"Negalima prijungti tomo.\"",
          "10062: t MSG_076 \"Negalima papildyti/paruo\u0161ti fail\u0173 \u012fkel\u010diai.\"",
          "10063: t MSG_077 \"Negalima priskirti disko raid\u0117s.\"",
          "",
          "[Removed Lines]",
          "10059: t MSG_073 \"ISO atvaizdo per\u017ei\u016bros triktis.\"",
          "10060: t MSG_074 \"ISO atvaizdo i\u0161skleidimo triktis.\"",
          "",
          "[Added Lines]",
          "10059: t MSG_073 \"ISO atvaizd\u017eio per\u017ei\u016bros triktis.\"",
          "10060: t MSG_074 \"ISO atvaizd\u017eio i\u0161skleidimo triktis.\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "10068:  \"Priklausomai nuo j\u016bs\u0173 USB \u012frenginio spartos, \u0161is veiksmas gali u\u017etrukti ilgai, \"",
          "10069:  \"ypa\u010d su dideliais failais.\\n\\nMes patariame jums leisti Windows pabaigti, kad i\u0161vengtum\u0117te i\u0161kraipym\u0173. \"",
          "10070:  \"Bet jei jums nusibos laukti, galite tiesiog i\u0161traukti \u012frengin\u012f...\"",
          "10073: t MSG_083 \"Pakeisti %s?\"",
          "10076:  \"Galima atsisi\u0173sti naujesn\u0119 Rufus versij\u0105 i\u0161spr\u0119sti problemai:\\n\"",
          "10080:  \"Pastaba: naujas failas bus atsi\u0173stas \u012f dabartin\u012f katalog\u0105 ir jei \"",
          "10084: # The content between the quotes below (\\\"Create a bootable disk\\\") should match",
          "10085: # the beginning of the IDC_BOOT text",
          "10090: t MSG_090 \"Nepalaikomas ISO\"",
          "10093: t MSG_092 \"Nepalaikoma fail\u0173 sistema\"",
          "10094: t MSG_093 \"SVARBU: \u0160IS DISKAS TURI KELET\u0104 SKAIDINI\u0172!!\\n\\n\"",
          "10095:  \"Tarp j\u0173 gali b\u016bti skaidini\u0173/tom\u0173, neparodyt\u0173 ar net nematom\u0173 i\u0161 Windows. \"",
          "10096:  \"Jei nor\u0117site t\u0119sti, b\u016bsite atsakingi d\u0117l galimo duomen\u0173 praradimo \u0161iuose skaidiniuose.\"",
          "10097: t MSG_094 \"Aptikta keletas skaidini\u0173\"",
          "10099: t MSG_096 \"Pasirinkta fail\u0173 sistema negali b\u016bti naudojama su \u0161iuo ISO tipu.\"",
          "10100:  \"Pasirinkite kit\u0105 fail\u0173 sistem\u0105 arba naudokite kitok\u012f ISO.\"",
          "10109: t MSG_099 \"Fail\u0173 sistemos apribojimas\"",
          "10110: t MSG_100 \"\u0160iame ISO atvaizde yra failas, didesnis negu 4 GB, tai daugiau negu \"",
          "10111:  \"maksimalus leistinas dydis FAT arba FAT32 fail\u0173 sistemai.\"",
          "",
          "[Removed Lines]",
          "10071: t MSG_081 \"Nepalaikomas atvaizdas\"",
          "10072: t MSG_082 \"Arba \u0161is atvaizdas yra ne \u012fkelties, arba jis naudoja \u012fkelties ar glaudinimo metod\u0105, kurio nepalaiko Rufus...\"",
          "10074: t MSG_084 \"Atrodo, \u0161is ISO atvaizdas naudoja pasenusi\u0105 '%s' versij\u0105.\\n\"",
          "10075:  \"\u012ekelties meniu d\u0117l to gali b\u016bti vaizduojamas blogai.\\n\\n\"",
          "10077:  \"- Pasirinkite 'Taip' nor\u0117dami prisijungti prie interneto ir atsisi\u0173sti fail\u0105\\n\"",
          "10078:  \"- Pasirinkite 'Ne' nor\u0117dami palikti esam\u0105 ISO fail\u0105 nepakeist\u0105\\n\"",
          "10079:  \"Jei ne\u017einote k\u0105 daryti, reik\u0117t\u0173 pasirinkti 'Taip'.\\n\\n\"",
          "10081:  \"'%s' ten jau yra, jis bus panaudotas i\u0161 naujo automati\u0161kai.\"",
          "10082: t MSG_085 \"Siun\u010diu '%s'\"",
          "10083: t MSG_086 \"Nepasirinktas atvaizdas\"",
          "10086: t MSG_087 \"Pra\u0161au spausti disko mygtuk\u0105 nor\u0117dami pasirinkti \u012fkelties atvaizd\u0105, \"",
          "10087:  \"arba ne\u017eym\u0117kite \\\"Kurti \u012fkelties disk\u0105...\\\" langelio.\"",
          "10088: t MSG_088 \"Atvaizdas per didelis\"",
          "10089: t MSG_089 \"Atvaizdas yra per didelis pasirinktai paskir\u010diai.\"",
          "10091: t MSG_091 \"Naudojant UEFI paskirties tip\u0105, tiktai EFI \u012fkelties ISO atvaizdai yra palaikomi. \"",
          "10092:  \"Pra\u0161au pasirinkti EFI \u012fkelties ISO arba pakeisti paskirties tip\u0105 \u012f BIOS.\"",
          "10098: t MSG_095 \"DD atvaizdas\"",
          "10101: t MSG_097 \"'%so' gali b\u016bti taikomas tik jei fail\u0173 sistema yra NTFS.\"",
          "10102: t MSG_098 \"SVARBU: J\u016bs bandote \u012fdiegti 'Windows To Go', bet j\u016bs\u0173 paskirties diskas neturi \"",
          "10103:  \"atributo 'FIKSUOTAS'. D\u0117l to sistema 'Windows' grei\u010diausiai pakibs \u012fkelties metu, \"",
          "10104:  \"kadangi Microsoft nepritaik\u0117 jos veikti su diskais, turin\u010diais 'KEI\u010cIAMAS' \"",
          "10105:  \"atribut\u0105.\\n\\nAr vis tiek norite t\u0119sti?\\n\\n\"",
          "10106:  \"Pastaba: Atributas 'FIKSUOTAS/KEI\u010cIAMAS' yra technin\u0117s \u012frangos savyb\u0117, kuri\u0105 galima pakeisti tik \"",
          "10107:  \"naudojant specialias priemones i\u0161 disko gamintojo. Ta\u010diau \u0161ios priemon\u0117s BEVEIK NIEKADA \"",
          "10108:  \"vie\u0161ai nepateikiamos...\"",
          "",
          "[Added Lines]",
          "10071: t MSG_081 \"Nepalaikomas atvaizdis\"",
          "10072: t MSG_082 \"Arba \u0161is atvaizdis neskirtas sistem\u0173 paleidimui, arba jis naudoja paleidimo ar glaudinimo metod\u0105, kurio nepalaiko Rufus...\"",
          "10074: t MSG_084 \"Atrodo, \u0161is ISO atvaizdis naudoja pasenusi\u0105 \u201e%s\u201c versij\u0105.\\n\"",
          "10075:  \"Paleidimo meniu d\u0117l to gali b\u016bti vaizduojamas blogai.\\n\\n\"",
          "10077:  \"- Pasirinkite \u201eTaip\u201c nor\u0117dami prisijungti prie interneto ir atsisi\u0173sti fail\u0105\\n\"",
          "10078:  \"- Pasirinkite \u201eNe\u201c nor\u0117dami palikti esam\u0105 ISO fail\u0105 nepakeist\u0105\\n\"",
          "10079:  \"Jei ne\u017einote k\u0105 daryti, reik\u0117t\u0173 pasirinkti \u201eTaip\u201c.\\n\\n\"",
          "10081:  \"\u201e%s\u201c ten jau yra, jis bus panaudotas i\u0161 naujo automati\u0161kai.\"",
          "10082: t MSG_085 \"Parsiun\u010diama: \u201e%s\u201c\"",
          "10083: t MSG_086 \"Atvaizdis nepasirinktas\"",
          "10086: t MSG_087 \"Spauskite disko mygtuk\u0105, jei norite pasirinkti paleidimo atvaizd\u012f, \"",
          "10087:  \"arba ne\u017eym\u0117kite langelio \u201ePaleid\u017eiama i\u0161 laikmenos\u201c.\"",
          "10088: t MSG_088 \"Atvaizdis per didelis\"",
          "10089: t MSG_089 \"Atvaizdis yra per didelis pasirinktai paskir\u010diai.\"",
          "10091: t MSG_091 \"Naudojant UEFI paskirties tip\u0105, tik EFI paleidimo ISO atvaizd\u017eiai yra palaikomi. \"",
          "10092:  \"Pra\u0161ome pasirinkti EFI paleidimo ISO arba pakeisti paskirties tip\u0105 \u012f BIOS.\"",
          "10098: t MSG_095 \"DD atvaizdis\"",
          "10101: t MSG_097 \"\u201e%so\u201c gali b\u016bti taikomas tik jei fail\u0173 sistema yra NTFS.\"",
          "10102: t MSG_098 \"SVARBU: J\u016bs bandote \u012fdiegti \u201eWindows To Go\u201c, bet j\u016bs\u0173 paskirties diskas neturi atributo \"",
          "10103:  \"FIKSUOTAS (FIXED). D\u0117l to sistema Windows grei\u010diausiai pakibs \u012fkelties metu, \"",
          "10104:  \"nes Microsoft nepritaik\u0117 jos veikti su diskais, turin\u010diais atribut\u0105 KEI\u010cIAMAS \"",
          "10105:  \"(REMOVABLE).\\n\\nAr vis tiek norite t\u0119sti?\\n\\n\"",
          "10106:  \"Pastaba: Atributas FIKSUOTAS/KEI\u010cIAMAS (FIXED/REMOVABLE) yra technin\u0117s \u012frangos savyb\u0117, \"",
          "10107:  \"kuri\u0105 galima pakeisti tik naudojant specialias disko gamintojo priemones. Ta\u010diau \u0161ios \"",
          "10108:  \"priemon\u0117s BEVEIK NIEKADA vie\u0161ai nepateikiamos...\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "10114:  \"b\u016btinas norint sukurti EFI \u012fkeliamus Windows 7 ir Windows Vista USB diskus. J\u016bs galite tai sutvarkyti \"",
          "10115:  \"\u012fdiegdami dabartin\u0119 7-Zip versij\u0105.\\nAr norite apsilankyti 7-zip atsisiuntimo puslapyje?\"",
          "10116: t MSG_103 \"Atsi\u0173sti %s?\"",
          "10119:  \"jis n\u0117ra \u012ftrauktas \u012f Rufus.\\n\\nRufus gali jums atsi\u0173sti tr\u016bkstam\u0105 fail\u0105:\\n\"",
          "10124: t MSG_105 \"At\u0161aukus dabar, \u012frenginys gali likti NEPRIEINAMOJE b\u016bsenoje.\\n\"",
          "10125:  \"Jei tikrai norite at\u0161aukti, spauskite TAIP. Kitu atveju, spauskite NE.\"",
          "10126: t MSG_106 \"Pasirinkite katalog\u0105\"",
          "",
          "[Removed Lines]",
          "10117: t MSG_104 \"%s ar v\u0117lesniam reikia, kad '%s' failas b\u016bt\u0173 \u012fdiegtas.\\n\"",
          "10118:  \"Kadangi \u0161is failas didesnis nei 100 KB ir visada yra %s ISO atvaizduose, \"",
          "10120:  \"- Pasirinkite 'Taip' nor\u0117dami prisijungti prie interneto ir atsisi\u0173sti fail\u0105\\n\"",
          "10121:  \"- Pasirinkite 'Ne' nor\u0117dami rankiniu b\u016bdu nukopijuoti \u0161\u012f fail\u0105 \u012f disk\u0105 v\u0117liau\\n\\n\"",
          "10122:  \"Pastaba: Failas bus atsi\u0173stas \u012f dabartin\u012f katalog\u0105 ir kai \"",
          "10123:  \"'%s' bus ten, jis bus pakartotinai naudojamas automati\u0161kai.\\n\"",
          "",
          "[Added Lines]",
          "10117: t MSG_104 \"%s ar v\u0117lesniam reikia, kad b\u016bt\u0173 \u012fdiegtas \u201e%s\u201c failas.\\n\"",
          "10118:  \"Kadangi \u0161is failas didesnis nei 100 KB ir visada yra %s ISO atvaizd\u017eiuose, \"",
          "10120:  \"- Nor\u0117dami prisijungti prie interneto ir atsisi\u0173sti fail\u0105, pasirinkite \u201eTaip\u201c.\\n\"",
          "10121:  \"- Nor\u0117dami rankiniu b\u016bdu nukopijuoti \u0161\u012f fail\u0105 \u012f disk\u0105 v\u0117liau, pasirinkite \u201eNe\u201c.\\n\\n\"",
          "10122:  \"Pastaba: failas bus atsi\u0173stas \u012f dabartin\u012f katalog\u0105 ir kai \"",
          "10123:  \"\u201e%s\u201c bus ten, jis bus pakartotinai naudojamas automati\u0161kai.\\n\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "10129: t MSG_109 \"0x%02X (Diskas %d)\"",
          "10130: # \"Cluster size\" below should be the same as the label for IDS_CLUSTERSIZE_TXT",
          "10131: # \"kilobytes\" should be the same as in MSG_027",
          "10135: # \"%d:%02d\" below is a duration (mins:secs)",
          "10138: t MSG_113 \"Didelis UDF tomas\"",
          "10140:  \"Syslinux %s%s.\\n\\nKadangi naujos Syslinux versijos tarpusavyje nesuderinamos, ir n\u0117ra galimyb\u0117s \"",
          "10141:  \"\u012f Rufus \u012ftraukti jas visas, du papildomi failai turi b\u016bti atsisi\u0173sti i\u0161 \"",
          "10145:  \"Pastaba: Failai bus atsi\u0173sti \u012f dabartin\u012f programos katalog\u0105 ir bus naudojami v\u0117l \"",
          "10146:  \"automati\u0161kai, juos ten radus.\\n\"",
          "10147: t MSG_115 \"Reikalingas atsisiuntimas\"",
          "10149:  \"Grub %s.\\n\\nKadangi skirtingos Grub versijos gali b\u016bti nesuderinamos tarpusavyje, o j\u0173 vis\u0173 \"",
          "10150:  \"\u012ftraukti n\u0117ra galimyb\u0117s, Rufus bandys surasti Grub \u012fdiegimo failo \"",
          "10155:  \"Pastaba: Failas bus atsi\u0173stas \u012f dabartin\u012f programos aplank\u0105 ir v\u0117liau jam ten esant bus \"",
          "10156:  \"naudojamas automati\u0161kai. Jei atitinkan\u010dio nebus rasta internete, bus naudojama numatytoji versija.\"",
          "10158: # Tooltips",
          "10159: # Partition Scheme and Target Type",
          "10160: t MSG_150 \"Paprastai saugiausias pasirinkimas. Bet jei turite UEFI kompiuter\u012f ir norite \u012fdiegti \"",
          "10163:  \"bet nor\u0117site pasiekti USB turin\u012f i\u0161 Windows XP\"",
          "10165:  \"USB prieiga neb\u016btina i\u0161 Windows XP\"",
          "10166: t MSG_153 \"Testo \u0161ablonas: 0x%02X\"",
          "10167: t MSG_154 \"Testo \u0161ablonas: 0x%02X, 0x%02X\"",
          "",
          "[Removed Lines]",
          "10132: t MSG_110 \"MS-DOS negali \u012fsikelti i\u0161 disko naudojant 64 kilobait\u0173 Klasterio dyd\u012f.\\n\"",
          "10133:  \"Pra\u0161au pakeiskite Klasterio dyd\u012f arba naudokite FreeDOS.\"",
          "10134: t MSG_111 \"Nesuderinamas Klasterio dydis\"",
          "10136: t MSG_112 \"Dideli\u0173 UDF tom\u0173 formatavimas gali u\u017eimti daug laiko. USB 2.0 grei\u010diu numatoma formatavimo \"",
          "10137:  \"trukm\u0117 yra %d:%02d, tuo metu eigos juosta gali atrodyti sustingusi. Pra\u0161au kantryb\u0117s!\"",
          "10139: t MSG_114 \"\u0160is atvaizdas naudoja Syslinux %s%s, bet \u0161i programa turi tik diegimo failus, skirtus \"",
          "10142:  \"interneto ('ldlinux.sys' ir 'ldlinux.bss'):\\n\"",
          "10143:  \"- Pasirinkite 'Taip' nor\u0117dami prisijungti prie interneto ir atsisi\u0173sti \u0161iuos failus\\n\"",
          "10144:  \"- Pasirinkite 'Ne' nor\u0117dami veiksm\u0105 at\u0161aukti\\n\\n\"",
          "10148: t MSG_116 \"\u0160is atvaizdas naudoja Grub %s bet \u0161i programa turi tik diegimo failus, skirtus \"",
          "10151:  \"('core.img') versij\u0105, atitinkan\u010di\u0105 esan\u010di\u0105 j\u016bs\u0173 atvaizde:\\n\"",
          "10152:  \"- Pasirinkite 'Taip' nor\u0117dami prisijungti prie interneto ir atsisi\u0173sti j\u0105\\n\"",
          "10153:  \"- Pasirinkite 'Ne' nor\u0117dami naudoti numatyt\u0105j\u0105 versij\u0105 i\u0161 Rufus\\n\"",
          "10154:  \"- Pasirinkite 'At\u0161aukti' nor\u0117dami nutraukti veiksm\u0105\\n\\n\"",
          "10161:  \"operacin\u0119 sistem\u0105 EFI re\u017eimu, tur\u0117tum\u0117te pasirinkit vien\u0105 i\u0161 kit\u0173 parink\u010di\u0173\"",
          "10162: t MSG_151 \"Naudokite \u0161i\u0105 parinkt\u012f, jei norite \u012fdiegti operacin\u0119 sistem\u0105 EFI re\u017eimu, \"",
          "10164: t MSG_152 \"Rekomenduojama parinktis \u012fdiegiant operacin\u0119 sistem\u0105 EFI re\u017eimu ir kai \"",
          "",
          "[Added Lines]",
          "10132: t MSG_110 \"MS-DOS negali \u012fsikelti i\u0161 disko naudojant 64 kilobait\u0173 klasterio dyd\u012f.\\n\"",
          "10133:  \"Pakeiskite klasterio dyd\u012f arba naudokite FreeDOS.\"",
          "10134: t MSG_111 \"Nesuderinamas klasterio dydis\"",
          "10136: t MSG_112 \"Dideli\u0173 UDF tom\u0173 su\u017eenklinimas gali u\u017eimti daug laiko. USB 2.0 grei\u010diu numatoma su\u017eenklinimo \"",
          "10137:  \"trukm\u0117 yra %d:%02d, tuo metu eigos juosta gali atrodyti sustingusi. B\u016bkite kantr\u016bs!\"",
          "10139: t MSG_114 \"\u0160is atvaizdis naudoja Syslinux %s%s, bet \u0161i programa turi tik diegimo failus, skirtus \"",
          "10142:  \"interneto (\u201eldlinux.sys\u201c ir \u201eldlinux.bss\u201c):\\n\"",
          "10143:  \"- Nor\u0117dami prisijungti prie interneto ir atsisi\u0173sti \u0161iuos failus, pasirinkite \u201eTaip\u201c.\\n\"",
          "10144:  \"- Nor\u0117dami veiksm\u0105 at\u0161aukti, pasirinkite \u201eNe\u201c.\\n\\n\"",
          "10148: t MSG_116 \"\u0160is atvaizdis naudoja Grub %s bet \u0161i programa turi tik diegimo failus, skirtus \"",
          "10151:  \"(\u201ecore.img\u201c) versij\u0105, atitinkan\u010di\u0105 esan\u010di\u0105 j\u016bs\u0173 atvaizde:\\n\"",
          "10152:  \"- Nor\u0117dami prisijungti prie interneto ir atsisi\u0173sti j\u0105, pasirinkite \u201eTaip\u201c.\\n\"",
          "10153:  \"- Nor\u0117dami naudoti numatyt\u0105j\u0105 versij\u0105 i\u0161 Rufus, pasirinkite \u201eNe\u201c.\\n\"",
          "10154:  \"- Nor\u0117dami nutraukti, pasirinkite \u201eAt\u0161aukti\u201c.\\n\\n\"",
          "10161:  \"operacin\u0119 sistem\u0105 EFI veiksena, tur\u0117tum\u0117te pasirinkit vien\u0105 i\u0161 kit\u0173 parink\u010di\u0173\"",
          "10162: t MSG_151 \"Naudokite \u0161i\u0105 parinkt\u012f, jei norite \u012fdiegti operacin\u0119 sistem\u0105 EFI veiksena, \"",
          "10164: t MSG_152 \"Rekomenduojama parinktis \u012fdiegiant operacin\u0119 sistem\u0105 EFI veiksena ir kai \"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "10170: t MSG_157 \"Nustato paskirties fail\u0173 sistem\u0105\"",
          "10171: t MSG_158 \"Ma\u017eiausias dydis, kur\u012f duomen\u0173 blokas u\u017eims fail\u0173 sistemoje\"",
          "10172: t MSG_159 \"\u0160iame laukelyje \u012fra\u0161ykite disko \u017eym\u0119\\nGalite naudoti tarptautinius simbolius\"",
          "10174: t MSG_161 \"Tikrinti \u012frengin\u012f d\u0117l blog\u0173 blok\u0173 naudojant testo \u0161ablon\u0105\"",
          "10177: t MSG_164 \"B\u016bdas, kuris bus naudojamas padaryti disk\u0105 \u012fkeliam\u0105\"",
          "10179: t MSG_166 \"Pa\u017eym\u0117kite \u0161\u012f langel\u012f, nor\u0117dami \u012fgalinti tarptautini\u0173 \u017eymi\u0173 rodym\u0105 \"",
          "10180:  \"ir \u012frenginio piktogramos nustatym\u0105 (sukuria autorun.inf)\"",
          "10181: t MSG_167 \"\u012ediegia MBR, kuris \u012fgalina \u012fkelties pasirinkim\u0105 ir gali maskuoti BIOS USB disko ID\"",
          "",
          "[Removed Lines]",
          "10173: t MSG_160 \"\u012ejungti i\u0161samias parinktis\"",
          "10175: t MSG_162 \"Nuimkite \u0161io langelio \u017eym\u0119 nor\u0117dami naudoti \\\"l\u0117t\u0105\\\" formatavimo b\u016bd\u0105\"",
          "10176: t MSG_163 \"Pa\u017eym\u0117kite \u0161\u012f langel\u012f nor\u0117dami padaryti USB disk\u0105 \u012fkeliam\u0105\"",
          "10178: t MSG_165 \"Spauskite, kad pasirinktum\u0117te atvaizd\u0105...\"",
          "",
          "[Added Lines]",
          "10173: t MSG_160 \"Rodyti i\u0161samesnes parinktis\"",
          "10175: t MSG_162 \"Nuimkite \u0161io langelio \u017eym\u0119 nor\u0117dami naudoti l\u0117t\u0105 su\u017eenklinimo b\u016bd\u0105\"",
          "10176: t MSG_163 \"Pa\u017eym\u0117kite \u0161\u012f langel\u012f, jei norite padaryti USB disk\u0105 \u012fkeliam\u0105\"",
          "10178: t MSG_165 \"Spauskite, kad pasirinktum\u0117te atvaizd\u012f...\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "10184: t MSG_169 \"Sukurti papildom\u0105 slapt\u0105 skaidin\u012f ir bandyti sulygiuoti skaidini\u0173 ribas.\\n\"",
          "10185:  \"Tai gali pagerinti \u012fkelties aptikim\u0105 su senais BIOSais\"",
          "10186: t MSG_170 \"\u012egalinti i\u0161orini\u0173 USB kiet\u0173j\u0173 disk\u0173 pateikt\u012f. NAUDOTI SAVO RIZIKA!!!\"",
          "10188: t MSG_172 \"Licencijavimo informacija ir kreditai\"",
          "10189: t MSG_173 \"Spauskite pasirinkti...\"",
          "10190: # The following will appear in the about dialog",
          "10192: t MSG_175 \"Versija %d.%d (s\u0105ranka %d)\"",
          "10194: t MSG_177 \"D\u0117l pasteb\u0117t\u0173 klaid\u0173 ar pageidaujam\u0173 patobulinim\u0173 kreipkit\u0117s:\"",
          "10195: t MSG_178 \"Kitos autori\u0173 teis\u0117s:\"",
          "10196: t MSG_179 \"Naujini\u0173 politika:\"",
          "",
          "[Removed Lines]",
          "10187: t MSG_171 \"Prad\u0117ti formatavimo veiksm\u0105.\\nTai SUNAIKINS visus duomenis paskirtyje!\"",
          "10191: t MSG_174 \"Rufus - patikima USB formatavimo priemon\u0117\"",
          "10193: t MSG_176 \"Lietuvi\u0161kas vertimas: Gintaras Venslovas <gintaras.venslovas@gmail.com>\"",
          "",
          "[Added Lines]",
          "10187: t MSG_171 \"Prad\u0117ti su\u017eenklinti.\\nTai SUNAIKINS visus duomenis paskirtyje!\"",
          "10191: t MSG_174 \"Rufus - patikima USB su\u017eenklinimo priemon\u0117\"",
          "10193: t MSG_176 \"Lietuvi\u0161kas vertimas: Gintaras Venslovas <gintaras.venslovas@gmail.com>\\\\line\"",
          "10194:  \"\\\\tab\\\\tab      embar-\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "10204: t MSG_185 \"Atnaujinimo procesas:\"",
          "10205: t MSG_186 \"Rufus ne\u012fdiegia ir nevykdo fonini\u0173 tarnyb\u0173, tod\u0117l naujini\u0173 tikrinimai yra atliekami tik vykdant pagrindin\u0119 program\u0105.\\\\line\\n\"",
          "10206:  \"Interneto prieiga, be abejo, yra reikalinga naujini\u0173 tikrinimui.\"",
          "10210: t MSG_190 \"Aptiktas nesuderinamas diskas\"",
          "10211: t MSG_191 \"Ra\u0161ymo bandymas\"",
          "10212: t MSG_192 \"Skaitymo bandymas\"",
          "",
          "[Removed Lines]",
          "10207: t MSG_187 \"Negaliojantis atvaizdas pasirinktai \u012fkelties parink\u010diai\"",
          "10208: t MSG_188 \"Dabartinis atvaizdas neatitinka pasirinktos \u012fkelties parinkties. Pra\u0161au naudoti kit\u0105 atvaizd\u0105 arba rinktis kit\u0105 \u012fkelties parinkt\u012f.\"",
          "10209: t MSG_189 \"\u0160is ISO atvaizdas nesuderinamas su pasirinkta fail\u0173 sistema\"",
          "",
          "[Added Lines]",
          "10208: t MSG_187 \"Negaliojantis atvaizdis pasirinktai \u012fkelties parink\u010diai\"",
          "10209: t MSG_188 \"Dabartinis atvaizdis neatitinka pasirinktos paleidimo parinkties. Pra\u0161ome naudoti kit\u0105 atvaizd\u012f arba rinktis kit\u0105 paleidimo parinkt\u012f.\"",
          "10210: t MSG_189 \"\u0160is ISO atvaizdis nesuderinamas su pasirinkta fail\u0173 sistema\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "10218:  \"Daugeliu atveju tai rei\u0161kia, kad j\u016bs NEGAL\u0116SITE \u012fkelti sistemos i\u0161 \u0161io disko.\\n\"",
          "10219:  \"Rufus gali m\u0117ginti sukurti \u012fkelties disk\u0105, bet N\u0116RA GARANTIJ\u0172, kad jis veiks.\"",
          "10220: t MSG_197 \"Aptiktas nestandartinis sektoriaus dydis\"",
          "10223: t MSG_199 \"Rinkit\u0117s \u0161\u012f, jei planuojate \u012fdiegti Windows \u012f kit\u0105 disk\u0105, naudodami pasirinkt\u0105 \u012frengin\u012f kaip \u012fdiegimo laikmen\u0105\"",
          "10224: t MSG_200 \"Rinkit\u0117s \u0161\u012f, jei norite leisti Windows tiesiai i\u0161 pasirinkto \u012frenginio.\"",
          "10226: # Status messages - these messages will appear on the status bar",
          "10227: t MSG_201 \"At\u0161aukiama - pra\u0161ome palaukti...\"",
          "10230: # Parameter: the name of an obsolete Syslinux .c32 module. eg: \"Obsolete vesamenu.c32 detected\"",
          "10231: t MSG_204 \"Aptiktas pasen\u0119s %s\"",
          "10232: # Display the name of the image selected. eg: \"Using image: en_win7_x64_sp1.iso\"",
          "10234: # Typically \"Missing ldlinux.c32 file\"",
          "10235: t MSG_206 \"Tr\u016bksta %s failo\"",
          "10236: # The name proposed by Windows' Computer Management -> Disk Management when you try to format a drive",
          "",
          "[Removed Lines]",
          "10221: t MSG_198 \"'Windows To Go' gali b\u016bti \u012fdiegta tik \u012f GPT skaidini\u0173 disk\u0105, jei jis turi \u012fjungt\u0105 \"",
          "10222:  \"atribut\u0105 'FIKSUOTAS'. Pasirinktas diskas nebuvo aptiktas kaip FIKSUOTAS.\"",
          "10228: t MSG_202 \"Per\u017ei\u016brimas atvaizdas...\"",
          "10229: t MSG_203 \"Nepavyko per\u017ei\u016br\u0117ti atvaizdo\"",
          "10233: t MSG_205 \"Naudojamas atvaizdas: %s\"",
          "",
          "[Added Lines]",
          "10222: t MSG_198 \"\u201eWindows To Go\u201c gali b\u016bti \u012fdiegta tik \u012f GPT skaidini\u0173 disk\u0105, jei jis turi \u012fjungt\u0105 \"",
          "10223:  \"atribut\u0105 \u201eFIXED\u201c (fiksuotas). Pasirinktas diskas nebuvo aptiktas kaip \u201eFIXED\u201c.\"",
          "10229: t MSG_202 \"Per\u017ei\u016brimas atvaizdis...\"",
          "10230: t MSG_203 \"Nepavyko per\u017ei\u016br\u0117ti atvaizd\u017eio\"",
          "10234: t MSG_205 \"Naudojamas atvaizdis: %s\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "10249: t MSG_215 \"Atidarytas %s\"",
          "10250: t MSG_216 \"I\u0161saugotas %s\"",
          "10251: # Formatting status (make sure you use a double % to print the percent sign)",
          "10253: t MSG_218 \"Kuriama fail\u0173 sistema: U\u017eduotis %d/%d atlikta\"",
          "10254: t MSG_219 \"NTFS taisymas: %d%% baigta\"",
          "10255: # Parameter: the file system and an estimated duration in mins and secs.",
          "10256: # eg. \"Formatting (UDF) - Estimated duration 3:21...\"",
          "10257: # NB: if \"estimated duration\" is too long, just use \"estimated\" or an abbreviation",
          "10260: # Parameter: the file system. eg. \"Formatting (NTFS)...\"",
          "10262: t MSG_223 \"NTFS taisymas (disko tikrinimas)...\"",
          "10263: t MSG_224 \"I\u0161valomos MBR/PBR/GPT strukt\u016bros...\"",
          "10265: t MSG_226 \"Tiriami esami \u012fkelties \u012fra\u0161ai...\"",
          "10266: t MSG_227 \"U\u017edaromas esamas tomas...\"",
          "10269: t MSG_230 \"Kopijuojami DOS failai...\"",
          "10270: t MSG_231 \"Kopijuojami ISO failai...\"",
          "10271: t MSG_232 \"Win7 EFI \u012fkelties s\u0105ranka (gali u\u017etrukti)...\"",
          "",
          "[Removed Lines]",
          "10252: t MSG_217 \"Formatuojama: %0.1f%% baigta\"",
          "10258: t MSG_220 \"Formatuojama (%s) - numatoma trukm\u0117 %d:%02d...\"",
          "10259: t MSG_221 \"Ra\u0161oma \u017eym\u0117 (gali u\u017etrukti)...\"",
          "10261: t MSG_222 \"Formatuojama (%s)...\"",
          "10264: t MSG_225 \"U\u017esakoma disko prieiga...\"",
          "10267: t MSG_228 \"Ra\u0161omas valdantysis \u012fkelties \u012fra\u0161as (MBR)...\"",
          "10268: t MSG_229 \"Ra\u0161omas skaidinio \u012fkelties \u012fra\u0161as...\"",
          "",
          "[Added Lines]",
          "10253: t MSG_217 \"Su\u017eenklinimama: %0.1f%% baigta\"",
          "10259: t MSG_220 \"Su\u017eenklinimama (%s) - numatoma trukm\u0117 %d:%02d...\"",
          "10260: t MSG_221 \"\u012era\u0161oma \u017eym\u0117 (gali u\u017etrukti)...\"",
          "10262: t MSG_222 \"Su\u017eenklinimama (%s)...\"",
          "10265: t MSG_225 \"U\u017eklausiama disko prieiga...\"",
          "10268: t MSG_228 \"\u012era\u0161omas valdantysis \u012fkelties \u012fra\u0161as (MBR)...\"",
          "10269: t MSG_229 \"\u012era\u0161omas skaidinio \u012fkelties \u012fra\u0161as...\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "10285: t MSG_243 \"Tikrinama, ar yra Rufus naujini\u0173...\"",
          "10286: t MSG_244 \"Naujiniai: negaliu prisijungti prie interneto\"",
          "10287: t MSG_245 \"Naujiniai: negaliu pasiekti versijos duomen\u0173\"",
          "10289: t MSG_247 \"Naujos Rufus versijos nerasta\"",
          "10290: t MSG_248 \"Programos registro raktai s\u0117kmingai i\u0161trinti\"",
          "10291: t MSG_249 \"Nepavyko i\u0161trinti programos registro rakt\u0173\"",
          "",
          "[Removed Lines]",
          "10288: t MSG_246 \"Yra nauja Rufus versija!\"",
          "",
          "[Added Lines]",
          "10289: t MSG_246 \"Rasta nauja Rufus versija!\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "10293: t MSG_250 \"%s \u012fjungtas\"",
          "10294: t MSG_251 \"%s i\u0161jungtas\"",
          "10295: t MSG_252 \"Dyd\u017eio tikrinimas\"",
          "10298: t MSG_255 \"NoDriveTypeAutorun bus i\u0161trintas i\u0161einant\"",
          "10299: t MSG_256 \"Netikr\u0173 disk\u0173 aptikimas\"",
          "10300: t MSG_257 \"Joliet palaikymas\"",
          "10301: t MSG_258 \"Rock Ridge palaikymas\"",
          "10302: t MSG_259 \"Priversti naujintis\"",
          "10303: t MSG_260 \"NTFS glaudinimas\"",
          "10305: t MSG_262 \"ISO palaikymas\"",
          "10306: t MSG_263 \"Naudoti TIKRUOSIUS dyd\u017eio vienetus\"",
          "10308: t MSG_265 \"VMWare disko aptikimas\"",
          "10312: t MSG_269 \"I\u0161saugoti laiko \u017eymas\"",
          "10313: t MSG_270 \"USB derinimas\"",
          "10315: t MSG_272 \"Skai\u010diuoti MD5, SHA1 ir SHA256 kontrolines sumas pasirinktam atvaizdui\"",
          "10316: t MSG_273 \"Keisti programos kalb\u0105\"",
          "10318: # '%s' below will be replaced with your translations for MSG_036 (\"ISO Image\") and MSG_095 (\"DD Image\")",
          "10324: # '%s' below will be replaced with your translation for MSG_036 (\"ISO Image\")",
          "10326: # '%s' below will be replaced with your translation for MSG_095 (\"DD Image\")",
          "10328: # The following will be used for new controls of the Rufus 3.0 interface",
          "10329: # They are added as messages, so that I will have them available when needed.",
          "10330: # 278 & 280 will be dropdown titles, similar to how IDS_DEVICE_TXT or IDS_PARTITION_TYPE_TXT are used",
          "10331: # 279 & 281 will be items that can appear in the dropdowns",
          "10336: t MSG_282 \"I\u0161imtinis USB disko u\u017erakinimas\"",
          "10337: t MSG_283 \"Negaliojantis para\u0161as\"",
          "10338: t MSG_284 \"Atsi\u0173stas vykdomasis failas neturi skaitmeninio para\u0161o.\"",
          "10340:  \"b\u016bti tam tikros kenk\u0117ji\u0161kos veiklos po\u017eymis...\\nAr j\u016bs tikrai norite vykdyti \u0161\u012f fail\u0105?\"",
          "10341: t MSG_286 \"Nulinamas diskas: %0.1f%% baigta\"",
          "10342: t MSG_287 \"Ne USB kei\u010diam\u0173 disk\u0173 aptikimas\"",
          "",
          "[Removed Lines]",
          "10296: t MSG_253 \"Kiet\u0173j\u0173 disk\u0173 aptikimas\"",
          "10297: t MSG_254 \"Priversti didel\u012f FAT32 formatavim\u0105\"",
          "10304: t MSG_261 \"Ra\u0161omas atvaizdas: %0.1f%% baigta\"",
          "10307: t MSG_264 \"Trinamas aplankas '%s'\"",
          "10309: t MSG_266 \"Dvigubas UEFI/BIOS re\u017eimas\"",
          "10310: t MSG_267 \"Taikomas Windows atvaizdas: %0.1f%% baigta\"",
          "10311: t MSG_268 \"Taikomas Windows atvaizdas...\"",
          "10314: t MSG_271 \"Skai\u010diuojamos atvaizdo kontrolin\u0117s sumos: %0.1f%% baigta\"",
          "10317: t MSG_274 \"Aptiktas ISOHybrid atvaizdas\"",
          "10319: t MSG_275 \"J\u016bs\u0173 pasirinktas atvaizdas yra 'ISOHybrid' atvaizdas. Tai rei\u0161kia, kad jis gali b\u016bti \u012fra\u0161ytas \"",
          "10320:  \"%s (fail\u0173 kopijavimo) re\u017eimu arba %s (disko atvaizdo) re\u017eimu.\\n\"",
          "10321:  \"Rufus rekomenduoja naudoti re\u017eim\u0105 %s, tam, kad j\u016bs visada tur\u0117tum\u0117te visi\u0161k\u0105 prieig\u0105 prie disko po \u012fra\u0161ymo.\\n\"",
          "10322:  \"Ta\u010diau, jei susiduriate su problemomis \u012fkelties metu, galite pabandyti \u012fra\u0161yti \u0161\u012f atvaizd\u0105 i\u0161 naujo re\u017eimu %s.\\n\\n\"",
          "10323:  \"Pra\u0161ome pasirinkti re\u017eim\u0105, kuriuo norite \u012fra\u0161yti \u0161\u012f atvaizd\u0105:\"",
          "10325: t MSG_276 \"\u012era\u0161yti re\u017eimu %s (rekomenduojama)\"",
          "10327: t MSG_277 \"\u012era\u0161yti re\u017eimu %s\"",
          "10332: t MSG_278 \"\u012ekelties tipas\"",
          "10333: t MSG_279 \"Ne\u012fkeliamas\"",
          "10334: t MSG_280 \"Atvaizdo parinktis\"",
          "10335: t MSG_281 \"(Pra\u0161au pasirinkti atvaizd\u0105)\"",
          "10339: t MSG_285 \"Atsi\u0173st\u0105 vykdom\u0105j\u012f fail\u0105 pasira\u0161\u0117 '%s'.\\n\u0160io para\u0161o mes neatpa\u017e\u012fstame ir tai gali \"",
          "",
          "[Added Lines]",
          "10297: t MSG_253 \"Stand\u017ei\u0173j\u0173 disk\u0173 aptikimas\"",
          "10298: t MSG_254 \"Priverstinis dideli\u0173 FAT32 su\u017eenklinimas\"",
          "10305: t MSG_261 \"\u012era\u0161omas atvaizdis: %0.1f%% baigta\"",
          "10308: t MSG_264 \"Trinamas aplankas \u201e%s\u201c\"",
          "10310: t MSG_266 \"Dviguba UEFI/BIOS veiksena\"",
          "10311: t MSG_267 \"Taikomas Windows atvaizdis: %0.1f%% baigta\"",
          "10312: t MSG_268 \"Taikomas Windows atvaizdis...\"",
          "10315: t MSG_271 \"Skai\u010diuojamos atvaizd\u017eio kontrolin\u0117s sumos: %0.1f%% baigta\"",
          "10318: t MSG_274 \"Aptiktas ISOHybrid atvaizdis\"",
          "10320: t MSG_275 \"J\u016bs\u0173 pasirinktas atvaizdis yra \u201eISOHybrid\u201c atvaizdis. Tai rei\u0161kia, kad jis gali b\u016bti \u012fra\u0161ytas \"",
          "10321:  \"%s (fail\u0173 kopijavimo) veiksena arba %s (disko atvaizd\u017eio) veiksena.\\n\"",
          "10322:  \"Rufus rekomenduoja naudoti veiksen\u0105 %s tam, kad visada tur\u0117tum\u0117te visi\u0161k\u0105 prieig\u0105 prie disko po \u012fra\u0161ymo.\\n\"",
          "10323:  \"Ta\u010diau, jei susiduriate su problemomis \u012fkelties metu, galite pabandyti \u012fra\u0161yti \u0161\u012f atvaizd\u012f i\u0161 naujo %s veiksena.\\n\\n\"",
          "10324:  \"Pra\u0161ome pasirinkti veiksen\u0105, kuria norite \u012fra\u0161yti \u0161\u012f atvaizd\u012f:\"",
          "10326: t MSG_276 \"\u012era\u0161yti %s veiksena (rekomenduojama)\"",
          "10328: t MSG_277 \"\u012era\u0161yti %s veiksena\"",
          "10333: t MSG_278 \"Paleidimo tipas\"",
          "10334: t MSG_279 \"Nepaleid\u017eiamas\"",
          "10335: t MSG_280 \"Atvaizd\u017eio parinktis\"",
          "10336: t MSG_281 \"(Pra\u0161ome pasirinkti atvaizd\u012f)\"",
          "10340: t MSG_285 \"Atsi\u0173st\u0105 vykdom\u0105j\u012f fail\u0105 pasira\u0161\u0117 \u201e%s\u201c.\\n\u0160io para\u0161o mes neatpa\u017e\u012fstame ir tai gali \"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "10347: t MSG_292 \"Pra\u0161ome pasirinkti Windows versij\u0105, kuri\u0105 norite \u012fdiegti:\"",
          "10348: t MSG_293 \"Nepalaikoma Windows versija\"",
          "10349: t MSG_294 \"\u0160ios Windows versijos Rufus nebepalaiko.\"",
          "10352: t MSG_297 \"Aptiktas nepilnas ISO\"",
          "10353: t MSG_298 \"J\u016bs\u0173 pasirinktas ISO failas neatitinka deklaruojamo dyd\u017eio: %s duomen\u0173 tr\u016bksta!\\n\\n\"",
          "10355:  \"ar MD5 or SHA kontrolin\u0117s sumos atitinka oficiali\u0105sias.\\n\\nBeje, j\u016bs galite apskai\u010diuoti \"",
          "10358: ################################################################################",
          "10359: l \"ms-MY\" \"Malay (Bahasa Malaysia)\" 0x043e, 0x083e",
          "",
          "[Removed Lines]",
          "10350: t MSG_295 \"\u012esp\u0117jimas: Neoficiali versija\"",
          "10351: t MSG_296 \"\u0160i Rufus versija N\u0116RA i\u0161leista jos oficialaus k\u016br\u0117jo(\u0173).\\n\\nAr j\u016bs tikrai norite j\u0105 vykdyti?\"",
          "10354:  \"Jei j\u016bs gavote \u0161\u012f fail\u0105 i\u0161 interneto, pabandykite atsisi\u0173sti j\u012f i\u0161 naujo ir patikrinkite, \"",
          "10356:  \"MD5 arba SHA per Rufus, paspaud\u0119 '#' mygtuk\u0105.\"",
          "",
          "[Added Lines]",
          "10351: t MSG_295 \"\u012esp\u0117jimas: neoficiali versija\"",
          "10352: t MSG_296 \"\u0160i Rufus versija N\u0116RA i\u0161leista jos oficialaus k\u016br\u0117jo(\u0173).\\n\\nAr tikrai norite j\u0105 paleisti?\"",
          "10355:  \"Jei j\u016bs gavote \u0161\u012f fail\u0105 internetu, pabandykite atsisi\u0173sti j\u012f i\u0161 naujo ir patikrinkite, \"",
          "10357:  \"MD5 arba SHA per Rufus, paspaud\u0119 mygtuk\u0105 \u201e#\u201c.\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.18.1205\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.18.1206\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,18,1205,0",
          "370:  PRODUCTVERSION 2,18,1205,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,18,1206,0",
          "370:  PRODUCTVERSION 2,18,1206,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.18.1205\"",
          "393:             VALUE \"ProductVersion\", \"2.18.1205\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.18.1206\"",
          "393:             VALUE \"ProductVersion\", \"2.18.1206\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "64c6f1e57f51d05519757e4adf104104a2983289",
      "candidate_info": {
        "commit_hash": "64c6f1e57f51d05519757e4adf104104a2983289",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/64c6f1e57f51d05519757e4adf104104a2983289",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Italian translation to latest",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "7568: ################################################################################",
          "7569: l \"it-IT\" \"Italian (Italiano)\" 0x0410, 0x0810",
          "7571: b \"en-US\"",
          "7573: g IDD_DIALOG",
          "7574: t IDS_DEVICE_TXT \"Dispositivo/unit\u00e0\"",
          "7577: t IDS_FILE_SYSTEM_TXT \"File system\"",
          "7578: t IDS_CLUSTER_SIZE_TXT \"Dimensione cluster\"",
          "7582: t IDC_QUICK_FORMAT \"Formattazione rapida\"",
          "7583: t IDC_EXTENDED_LABEL \"Crea etichetta estesa e file icone\"",
          "7584: t IDCANCEL \"Chiudi\"",
          "7585: t IDC_START \"Avvia\"",
          "7590: g IDD_ABOUTBOX",
          "7591: t IDD_ABOUTBOX \"Info su Rufus\"",
          "",
          "[Removed Lines]",
          "7570: v 1.0.22",
          "7575: t IDS_BOOT_SELECTION_TXT \"Tipo boot\"",
          "7576: t IDS_PARTITION_TYPE_TXT \"Schema partizione e tipo sistema destinazione\"",
          "7579: t IDS_LABEL_TXT \"Nuova etichetta volume\"",
          "7580: t IDS_FORMAT_OPTIONS_TXT \"Opzioni formattazione\"",
          "7581: t IDC_BAD_BLOCKS \"Test controllo blocchi errati unit\u00e0\"",
          "7586: t IDC_LIST_USB_HDD \"Elenca dischi fissi USB\"",
          "7587: t IDC_OLD_BIOS_FIXES \"Aggiungi correzioni per vecchi BIOS\"",
          "7588: t IDC_RUFUS_MBR \"Usa MBR Rufus con ID BIOS\"",
          "",
          "[Added Lines]",
          "7570: v 1.0.23",
          "7574: t IDS_DRIVE_PROPERTIES_TXT \"Opzioni unit\u00e0\"",
          "7576: t IDS_BOOT_SELECTION_TXT \"Selezione boot\"",
          "7577: t IDC_SELECT \"Seleziona\"",
          "7578: t IDS_IMAGE_OPTION_TXT \"Opzioni immagine\"",
          "7579: t IDS_PARTITION_TYPE_TXT \"Schema partizione\"",
          "7580: t IDS_TARGET_SYSTEM_TXT \"Sistema destinazione\"",
          "7581: t IDC_LIST_USB_HDD \"Elenco unit\u00e0 disco USB\"",
          "7582: t IDC_OLD_BIOS_FIXES \"Aggiungi correzioni per vecchi BIOS (partizioni extra, allienamento, etc)\"",
          "7583: t IDC_RUFUS_MBR \"Usa MBR Rufus con ID BIOS\"",
          "7584: t IDS_FORMAT_OPTIONS_TXT \"Opzioni formattazione\"",
          "7587: t IDS_LABEL_TXT \"Etichetta volume\"",
          "7589: t IDC_BAD_BLOCKS \"Test controllo blocchi errati unit\u00e0\"",
          "7591: t IDS_STATUS_TXT \"Stato\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7646: t MSG_017 \"Personalizzato\"",
          "7647: t MSG_018 \"Versione installata: %d.%d (Build %d)\"",
          "7648: t MSG_019 \"Versione aggiornata: %d.%d (Build %d)\"",
          "7649: t MSG_020 \"byte\"",
          "7650: t MSG_021 \"KB\"",
          "7651: t MSG_022 \"MB\"",
          "7652: t MSG_023 \"GB\"",
          "7653: t MSG_024 \"TB\"",
          "7654: t MSG_025 \"PB\"",
          "7655: t MSG_026 \"byte\" # Yes, this is a repeat from MSG_020",
          "7656: t MSG_027 \"kilobyte\"",
          "7657: t MSG_028 \"megabyte\"",
          "7658: t MSG_029 \"Predefinito\"",
          "7659: t MSG_030 \"%s (predefinito)\"",
          "7663: t MSG_034 \"%d test\"",
          "7664: t MSG_035 \"%d test\"",
          "7665: t MSG_036 \"Immagine ISO\"",
          "",
          "[Removed Lines]",
          "7660: #t MSG_031 \"Schema partizione %s per BIOS o %s\"",
          "7661: #t MSG_032 \"Schema partizione %s per BIOS\"",
          "7662: #t MSG_033 \"Schema partizione %s per UEFI\"",
          "",
          "[Added Lines]",
          "7654: # *Short* size names. These can be used as suffixes",
          "7661: # *Long* size names, as they are displayed for the cluster size in the MS format dialog.",
          "7667: t MSG_031 \"BIOS (o UEFI CSM)\"",
          "7668: t MSG_032 \"UEFI (non CSM)\"",
          "7669: t MSG_033 \"BIOS o UEFI\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7796:  \"- Seleziona 'Annulla' per interrompere l'operazione.\\n\\n\"",
          "7797:  \"Note: i file verranno scaricati nella cartella attuale dell'applicazione e verranno riusati automaticamente \"",
          "7798:  \"se presenti. Se non sar\u00e0 trovata online nessuna corrispondenza, verr\u00e0 usata la versione predefinita.\"",
          "7799: # Tooltips",
          "7813: t MSG_159 \"Usa questo campo per impostare l'etichetta dell'unit\u00e0\\nI caratteri internazionali sono permessi\"",
          "7814: t MSG_160 \"Abilita/disabilita opzioni avanzate\"",
          "7815: t MSG_161 \"Abilita questa opzione per effettuare un controllo dei blocchi danneggiati nel dispositivo usando un pattern di test\"",
          "7816: t MSG_162 \"Deseleziona questa opzione per usare il metodo di formattazione completo ma 'lento'\"",
          "7818: t MSG_165 \"Seleziona l'immagine...\"",
          "7819: t MSG_166 \"Abilita questa opzione per permettere la visualizzazione delle etichette internazionali \"",
          "7820:  \"e impostare una icona dispositivo (creer\u00e0 un file autorun.inf)\"",
          "",
          "[Removed Lines]",
          "7800: # Partition Scheme and Target Type",
          "7801: t MSG_150 \"Questa impostazione \u00e8 la scelta pi\u00f9 sicura. Se hai un computer UEFI e vuoi installare \"",
          "7802:  \"un sistema operativo in modo EFI, puoi selezionare una delle opzioni sottostanti\"",
          "7803: t MSG_151 \"Usa questa impostazione se vuoi installare un sistema operativo in modo EFI, ma devi accedere \"",
          "7804:  \"al contenuto USB in Windows XP\"",
          "7805: t MSG_152 \"L'opzione preferita per installare un sistema operativo in modo EFI quando \"",
          "7806:  \"l'accesso USB non \u00e8 richiesto in Windows XP\"",
          "7807: t MSG_153 \"Pattern di test: 0x%02X\"",
          "7808: t MSG_154 \"Pattern di test: 0x%02X, 0x%02X\"",
          "7809: t MSG_155 \"Pattern di test: 0x%02X, 0x%02X, 0x%02X\"",
          "7810: t MSG_156 \"Pattern di test: 0x%02X, 0x%02X, 0x%02X, 0x%02X\"",
          "7811: t MSG_157 \"Impostazione del filesystem destinazione\"",
          "7812: t MSG_158 \"Dimensione minima del blocco dati del filesystem\"",
          "7817: t MSG_164 \"Definisce il metodo che verr\u00e0 usato per rendere l'unit\u00e0 USB avviabile\"",
          "",
          "[Added Lines]",
          "7806: t MSG_117 \"Installazione Windows standard\"",
          "7807: t MSG_119 \"opzioni avanzate unit\u00e0\"",
          "7808: t MSG_120 \"opzioni avanzate formmttazione\"",
          "7809: t MSG_121 \"Visualizza %s\"",
          "7810: t MSG_122 \"Nascondi %s\"",
          "7812: t MSG_150 \"Tipo di computer con cui pensi di effettuare il boot. E' una tua responsabilit\u00e0 prima di creare l'unit\u00e0 identificare \"",
          "7813:  \"se il tipo di sistema destinazione \u00e8 di tipo BIOS o UEFI. Altrimenti potrebbe fallire il boot.\"",
          "7814: t MSG_151 \"'UEFI CSM' significa che l'unit\u00e0 effettuer\u00e0 il boot solo in modo emulazione BIOS (conosciuto come 'Legacy Mode') in UEFI, e non in modo nativo UEFI.\"",
          "7815: t MSG_152 \"'non CSM' significa che l'unit\u00e0 effettuer\u00e0 il modo nativo UEFI, e non in modo emulazione BIOS (conosciuto come 'Legacy Mode').\"",
          "7816: t MSG_153 \"Pattern test: 0x%02X\"",
          "7817: t MSG_154 \"Pattern test: 0x%02X, 0x%02X\"",
          "7818: t MSG_155 \"Pattern test: 0x%02X, 0x%02X, 0x%02X\"",
          "7819: t MSG_156 \"Pattern test: 0x%02X, 0x%02X, 0x%02X, 0x%02X\"",
          "7820: t MSG_157 \"Impostazione filesystem destinazione\"",
          "7821: t MSG_158 \"Dimensione minima blocco dati filesystem\"",
          "7826: t MSG_163 \"Metodo che verr\u00e0 usato per creare le partizioni\"",
          "7827: t MSG_164 \"Metodo che verr\u00e0 usato per rendere l'unit\u00e0 USB avviabile\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7867: # Status messages - these messages will appear on the status bar",
          "7868: t MSG_201 \"Annullamento...\"",
          "7870: t MSG_202 \"Analisi immagine...\"",
          "7871: t MSG_203 \"Analisi immagine fallita\"",
          "7872: t MSG_204 \"Rilevato %s obsoleto\"",
          "",
          "[Removed Lines]",
          "7869: # Parameter: the name of an obsolete Syslinux .c32 module. eg: \"Obsolete vesamenu.c32 detected\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7881: t MSG_211 \"Annullata\"",
          "7882: t MSG_212 \"OPERAZIONE FALLITA\"",
          "7883: t MSG_213 \"Esecuzione nuova applicazione...\"",
          "7885: t MSG_215 \"Aperto %s\"",
          "7886: t MSG_216 \"Salvato %s\"",
          "7887: t MSG_217 \"Formattazione: %0.1f%% completata\"",
          "",
          "[Removed Lines]",
          "7884: t MSG_214 \"Esecuzione fallita nuova applicazione\"",
          "",
          "[Added Lines]",
          "7893: t MSG_214 \"Esecuzione nuova applicazione fallita\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7910: t MSG_237 \"Blocchi danneggiati: testing con pattern 0x%02X\"",
          "7911: t MSG_238 \"Partitionamento (%s)...\"",
          "7912: t MSG_239 \"Eliminazione partizioni...\"",
          "7913: t MSG_241 \"Download: %0.1f%%\"",
          "7914: t MSG_242 \"Impossibile scaricare il file.\"",
          "7915: t MSG_243 \"Verifica disponibilit\u00e0 aggiornamenti Rufus...\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7922: t MSG_240 \"La firma per l'aggiornamento scaricato non pu\u00f2 essere validata. Questo pu\u00f2 significare che il \"",
          "7923:  \"sistema non \u00e8 correttamente configurato per la validazione della firma o indica un download non corretto.\\n\\n\"",
          "7924:  \"Il file scaricato verr\u00e0 eliminato. Per maggiori dettagli consulta il registro eventi.\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7951:  \"Seleziona il modo che vuoi usare per scrivere questa immagine:\"",
          "7952: t MSG_276 \"Scrivi in modo %s (suggerito)\"",
          "7953: t MSG_277 \"Scrivi in modo %s\"",
          "7954: t MSG_279 \"Non avviabile\"",
          "7957: t MSG_282 \"Blocco esclusivo unit\u00e0 USB\"",
          "7958: t MSG_283 \"Firma non valida\"",
          "7959: t MSG_284 \"L'eseguibile scaricato non ha una firma digitale.\"",
          "",
          "[Removed Lines]",
          "7955: t MSG_280 \"Selezione immagine\"",
          "7956: t MSG_281 \"(seleziona un'immagine)\"",
          "",
          "[Added Lines]",
          "7966: t MSG_278 \"Verifica processi in conflitto...\"",
          "7968: t MSG_280 \"Immagine disco o ISO\"",
          "7969: t MSG_281 \"%s (seleziona)\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7974: t MSG_298 \"Il file ISO selezionato non corrisponde alla dimensione dichiarata: %s dei dati mancanti!\\n\\nSe hai scaricato \"",
          "7975:  \"questo file da internet, prova a scaricarne una nuova copia e verifica che la checksum MD5 o SHA corrisponda alla checksum \"",
          "7976:  \"ufficiale.\\n\\nNota che puoi calcolare in Rufus la checksum facendo clic sul pulsante '#'.\"",
          "7979: ######################################################################",
          "7980: l \"ja-JP\" \"Japanese (\u65e5\u672c\u8a9e)\" 0x0411",
          "",
          "[Removed Lines]",
          "7977: t MSG_117 \"Installazione Windows standard\"",
          "",
          "[Added Lines]",
          "7990: t MSG_299 \"Errore validazione data/ora\"",
          "7991: t MSG_300 \"Rufus non pu\u00f2 validare che la data/ora del pacchetto aggiornamento \u00e8 pi\u00f9 recente di quello quello per l'attuale \"",
          "7992:  \"eseguibile.\\n\\nPer prevenire possibili scenari di un attacco malware, il processo di aggiornamento \u00e8 stato interrotto e \"",
          "7993:  \"il file scaricato verr\u00e0 eliminato. Per maggiori dettagli controlla il registro eventi.\"",
          "7994: t MSG_301 \"Visualizza impostazioni applicazione\"",
          "7995: t MSG_302 \"Visualizza informazioni su questa applicazione\"",
          "7996: t MSG_303 \"Visualizza registro eventi\"",
          "7997: t MSG_304 \"Crea un'immagine disco dell'unit\u00e0 selezionata\"",
          "7998: t MSG_305 \"Usa questa opzione per indicare se vuoi usare questa unit\u00e0 per installare Windows in un altro disco, \"",
          "7999:  \"o se vuoi avviare Windows direttamente da questa unit\u00e0 (Windows To Go).\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.0.1242\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.0.1243\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "373: VS_VERSION_INFO VERSIONINFO",
          "376:  FILEFLAGSMASK 0x3fL",
          "377: #ifdef _DEBUG",
          "378:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "374:  FILEVERSION 2,18,1242,0",
          "375:  PRODUCTVERSION 2,18,1242,0",
          "",
          "[Added Lines]",
          "374:  FILEVERSION 2,18,1243,0",
          "375:  PRODUCTVERSION 2,18,1243,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "389:         BEGIN",
          "390:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "391:             VALUE \"FileDescription\", \"Rufus\"",
          "393:             VALUE \"InternalName\", \"Rufus\"",
          "394:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "395:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "396:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "397:             VALUE \"ProductName\", \"Rufus\"",
          "399:         END",
          "400:     END",
          "401:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "392:             VALUE \"FileVersion\", \"2.18.1242\"",
          "398:             VALUE \"ProductVersion\", \"2.18.1242\"",
          "",
          "[Added Lines]",
          "392:             VALUE \"FileVersion\", \"2.18.1243\"",
          "398:             VALUE \"ProductVersion\", \"2.18.1243\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "104b33a7ba304f857a99b40acbddc69ac9bb3d96",
      "candidate_info": {
        "commit_hash": "104b33a7ba304f857a99b40acbddc69ac9bb3d96",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/104b33a7ba304f857a99b40acbddc69ac9bb3d96",
        "files": [
          "src/format.c",
          "src/iso.c",
          "src/rufus.c",
          "src/rufus.h",
          "src/rufus.rc",
          "src/syslinux.c"
        ],
        "message": "[core] remove 'MBR for BIOS' option for pure UEFI images\n\n* Closes #832\n* Also refactor image property macros",
        "before_after_code_files": [
          "src/format.c||src/format.c",
          "src/iso.c||src/iso.c",
          "src/rufus.c||src/rufus.c",
          "src/rufus.h||src/rufus.h",
          "src/rufus.rc||src/rufus.rc",
          "src/syslinux.c||src/syslinux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/format.c||src/format.c": [
          "File: src/format.c -> src/format.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "920:   goto windows_mbr;",
          "",
          "[Removed Lines]",
          "919:  if (IS_WINDOWS(img_report) && (allow_dual_uefi_bios) && (tt == TT_BIOS))",
          "",
          "[Added Lines]",
          "919:  if (HAS_WINDOWS(img_report) && (allow_dual_uefi_bios) && (tt == TT_BIOS))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "956:  }",
          "960:   uprintf(using_msg, \"KolibriOS\");",
          "961:   r = write_kolibrios_mbr(fp);",
          "962:   goto notify;",
          "",
          "[Removed Lines]",
          "959:  if ( (bt == BT_ISO) && (img_report.has_kolibrios) && (IS_FAT(fs))) {",
          "",
          "[Added Lines]",
          "959:  if ( (bt == BT_ISO) && HAS_KOLIBRIOS(img_report) && (IS_FAT(fs))) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "966: windows_mbr:",
          "968:   uprintf(using_msg, APPLICATION_NAME);",
          "969:   r = write_rufus_mbr(fp);",
          "970:  } else {",
          "",
          "[Removed Lines]",
          "967:  if ((IS_WINPE(img_report.winpe) && !img_report.uses_minint) || (IsChecked(IDC_RUFUS_MBR))) {",
          "",
          "[Added Lines]",
          "967:  if ((HAS_WINPE(img_report) && !img_report.uses_minint) || (IsChecked(IDC_RUFUS_MBR))) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1056:  case BT_FREEDOS: return \"FreeDOS\";",
          "1057:  case BT_REACTOS: return \"ReactOS\";",
          "1058:  default:",
          "1060:  }",
          "1061: }",
          "1062: static BOOL WritePBR(HANDLE hLogicalVolume)",
          "",
          "[Removed Lines]",
          "1059:   return ((bt==BT_ISO)&&(img_report.has_kolibrios))?\"KolibriOS\":\"Standard\";",
          "",
          "[Added Lines]",
          "1059:   return ((bt==BT_ISO) && HAS_KOLIBRIOS(img_report)) ? \"KolibriOS\" : \"Standard\";",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1082:    if (!write_fat_16_fd_br(fp, 0)) break;",
          "1083:   } else if (bt == BT_REACTOS) {",
          "1084:    if (!write_fat_16_ros_br(fp, 0)) break;",
          "1086:    uprintf(\"FAT16 is not supported for KolibriOS\\n\"); break;",
          "1087:   } else {",
          "1088:    if (!write_fat_16_br(fp, 0)) break;",
          "",
          "[Removed Lines]",
          "1085:   } else if ((bt == BT_ISO) && (img_report.has_kolibrios)) {",
          "",
          "[Added Lines]",
          "1085:   } else if ((bt == BT_ISO) && HAS_KOLIBRIOS(img_report)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1104:     if (!write_fat_32_fd_br(fp, 0)) break;",
          "1105:    } else if (bt == BT_REACTOS) {",
          "1106:     if (!write_fat_32_ros_br(fp, 0)) break;",
          "1108:     if (!write_fat_32_kos_br(fp, 0)) break;",
          "1109:    } else {",
          "1110:     if (!write_fat_32_br(fp, 0)) break;",
          "",
          "[Removed Lines]",
          "1107:    } else if ((bt == BT_ISO) && (img_report.has_kolibrios)) {",
          "",
          "[Added Lines]",
          "1107:    } else if ((bt == BT_ISO) && HAS_KOLIBRIOS(img_report)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1598:  pt = GETPARTTYPE((int)ComboBox_GetItemData(hPartitionScheme, ComboBox_GetCurSel(hPartitionScheme)));",
          "1599:  tt = GETTARGETTYPE((int)ComboBox_GetItemData(hPartitionScheme, ComboBox_GetCurSel(hPartitionScheme)));",
          "1600:  use_large_fat32 = (fs == FS_FAT32) && ((SelectedDrive.DiskSize > LARGE_FAT32_SIZE) || (force_large_fat32));",
          "1602:  large_drive = (SelectedDrive.DiskSize > (1*TB));",
          "1603:  if (large_drive)",
          "1604:   uprintf(\"Notice: Large drive detected (may produce short writes)\");",
          "",
          "[Removed Lines]",
          "1601:  windows_to_go = (togo_mode) && HAS_TOGO(img_report) && (Button_GetCheck(GetDlgItem(hMainDialog, IDC_WINDOWS_TO_GO)) == BST_CHECKED);",
          "",
          "[Added Lines]",
          "1601:  windows_to_go = (togo_mode) && HAS_WINTOGO(img_report) && (Button_GetCheck(GetDlgItem(hMainDialog, IDC_WINDOWS_TO_GO)) == BST_CHECKED);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1609:   extra_partitions = XP_MSR | XP_EFI;",
          "1610:  else if ( (fs == FS_NTFS) && ((bt == BT_UEFI_NTFS) ||",
          "1612:   extra_partitions = XP_UEFI_NTFS;",
          "1613:  else if (IsChecked(IDC_EXTRA_PARTITION))",
          "1614:   extra_partitions = XP_COMPAT;",
          "",
          "[Removed Lines]",
          "1611:      ((bt == BT_ISO) && (img_report.has_efi) && ((tt == TT_UEFI) || (windows_to_go) || (allow_dual_uefi_bios)))) )",
          "",
          "[Added Lines]",
          "1611:      ((bt == BT_ISO) && IS_EFI_BOOTABLE(img_report) && ((tt == TT_UEFI) || (windows_to_go) || (allow_dual_uefi_bios)))) )",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1884:   } else if (tt == TT_UEFI) {",
          "1887:     uprintf(\"Spock gone crazy error in %s:%d\", __FILE__, __LINE__);",
          "1888:     FormatStatus = ERROR_SEVERITY_ERROR|FAC(FACILITY_STORAGE)|ERROR_INSTALL_FAILURE;",
          "1889:     goto out;",
          "1890:    }",
          "1891:   } else if ( (bt == BT_SYSLINUX_V4) || (bt == BT_SYSLINUX_V6) ||",
          "1894:    if (!InstallSyslinux(DriveIndex, drive_name[0], fs)) {",
          "1895:     FormatStatus = ERROR_SEVERITY_ERROR|FAC(FACILITY_STORAGE)|ERROR_INSTALL_FAILURE;",
          "1896:    }",
          "",
          "[Removed Lines]",
          "1886:    if ( (bt != BT_ISO) || (!img_report.has_efi) || (fs > FS_NTFS) ) {",
          "1892:    ((bt == BT_ISO) && (HAS_SYSLINUX(img_report) || IS_REACTOS(img_report)) &&",
          "1893:     (!IS_WINDOWS(img_report) || !allow_dual_uefi_bios) && (IS_FAT(fs))) ) {",
          "",
          "[Added Lines]",
          "1886:    if ( (bt != BT_ISO) || !IS_EFI_BOOTABLE(img_report) || (fs > FS_NTFS) ) {",
          "1892:    ((bt == BT_ISO) && (HAS_SYSLINUX(img_report) || HAS_REACTOS(img_report)) &&",
          "1893:     (!HAS_WINDOWS(img_report) || !allow_dual_uefi_bios) && (IS_FAT(fs))) ) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1960:       FormatStatus = ERROR_SEVERITY_ERROR|FAC(FACILITY_STORAGE)|APPERR(ERROR_ISO_EXTRACT);",
          "1961:      goto out;",
          "1962:     }",
          "1964:      kolibri_dst[0] = drive_name[0];",
          "1965:      uprintf(\"Installing: %s (KolibriOS loader)\\n\", kolibri_dst);",
          "1966:      if (ExtractISOFile(image_path, \"HD_Load/USB_Boot/MTLD_F32\", kolibri_dst,",
          "",
          "[Removed Lines]",
          "1963:     if (img_report.has_kolibrios) {",
          "",
          "[Added Lines]",
          "1963:     if (HAS_KOLIBRIOS(img_report)) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1969:      }",
          "1970:     }",
          "1973:      PrintInfoDebug(0, MSG_232);",
          "1974:      img_report.install_wim_path[0] = drive_name[0];",
          "1975:      efi_dst[0] = drive_name[0];",
          "",
          "[Removed Lines]",
          "1972:     if ((tt == TT_UEFI) && IS_WIN7_EFI(img_report)) {",
          "",
          "[Added Lines]",
          "1972:     if ((tt == TT_UEFI) && HAS_WIN7_EFI(img_report)) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1985:       }",
          "1986:      }",
          "1987:     }",
          "1990:      if (!SetupWinPE(drive_name[0]))",
          "1991:       FormatStatus = ERROR_SEVERITY_ERROR|FAC(FACILITY_STORAGE)|APPERR(ERROR_CANT_PATCH);",
          "",
          "[Removed Lines]",
          "1988:     if ( (tt == TT_BIOS) && (IS_WINPE(img_report.winpe)) ) {",
          "",
          "[Added Lines]",
          "1988:     if ( (tt == TT_BIOS) && HAS_WINPE(img_report) ) {",
          "",
          "---------------"
        ],
        "src/iso.c||src/iso.c": [
          "File: src/iso.c -> src/iso.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "835:      img_report.sl_version_str);",
          "836:    }",
          "837:   }",
          "",
          "[Removed Lines]",
          "838:   if (IS_WINPE(img_report.winpe)) {",
          "",
          "[Added Lines]",
          "838:   if (HAS_WINPE(img_report)) {",
          "",
          "---------------"
        ],
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "367: {",
          "368:  BOOL useCSM = FALSE;",
          "370:  if (ComboBox_GetCurSel(hDeviceList) < 0)",
          "373:  if (image_path != NULL) {",
          "375:     (Button_GetCheck(GetDlgItem(hMainDialog, IDC_WINDOWS_TO_GO)) != BST_CHECKED)) )",
          "376:    useCSM = TRUE;",
          "377:  }",
          "380:   ComboBox_DeleteString(hPartitionScheme, 0);",
          "381:  IGNORE_RETVAL(ComboBox_SetItemData(hPartitionScheme, ComboBox_InsertStringU(hPartitionScheme, 0,",
          "382:   lmprintf(MSG_031, PartitionTypeLabel[PARTITION_STYLE_MBR], useCSM?\"UEFI-CSM\":\"UEFI\")), (TT_BIOS<<16)|PARTITION_STYLE_MBR));",
          "383:  if (replace)",
          "384:   IGNORE_RETVAL(ComboBox_SetCurSel(hPartitionScheme, max(ComboBox_GetCurSel(hPartitionScheme), 0)));",
          "385: }",
          "",
          "[Removed Lines]",
          "366: static void SetMBRForUEFI(BOOL replace)",
          "371:   return;",
          "374:   if ( (!img_report.has_efi) || ((img_report.has_bootmgr) && (!allow_dual_uefi_bios) &&",
          "379:  if (replace)",
          "",
          "[Added Lines]",
          "367: static int SetMBRForUEFI(BOOL replace)",
          "369:  static BOOL pure_efi = FALSE;",
          "373:   return 0;",
          "376:   if ( !IS_EFI_BOOTABLE(img_report) || (HAS_BOOTMGR(img_report) && (!allow_dual_uefi_bios) &&",
          "381:  if (replace && !pure_efi)",
          "384:  if ((image_path != NULL) && IS_EFI_BOOTABLE(img_report) && !IS_BIOS_BOOTABLE(img_report)) {",
          "385:   pure_efi = TRUE;",
          "386:   return -1;",
          "387:  } else {",
          "388:   pure_efi = FALSE;",
          "389:  }",
          "395:  return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "457:  int i, fs, selected_fs = FS_UNKNOWN;",
          "458:  uint32_t fs_mask = 0;",
          "459:  int tt = GETTARGETTYPE((int)ComboBox_GetItemData(hPartitionScheme, ComboBox_GetCurSel(hPartitionScheme)));",
          "461:   (Button_GetCheck(GetDlgItem(hMainDialog, IDC_WINDOWS_TO_GO)) == BST_CHECKED);",
          "463:  if (image_path == NULL)",
          "",
          "[Removed Lines]",
          "460:  BOOL windows_to_go = (togo_mode) && HAS_TOGO(img_report) &&",
          "",
          "[Added Lines]",
          "471:  BOOL windows_to_go = (togo_mode) && HAS_WINTOGO(img_report) &&",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "470:  }",
          "475:   if (fs_mask & (1<<FS_FAT32)) {",
          "476:    selected_fs = FS_FAT32;",
          "478:    selected_fs = FS_FAT16;",
          "479:   }",
          "481:   if (fs_mask & (1<<FS_NTFS)) {",
          "482:    selected_fs = FS_NTFS;",
          "483:   }",
          "",
          "[Removed Lines]",
          "473:  if ((HAS_SYSLINUX(img_report)) || (IS_REACTOS(img_report)) || (img_report.has_kolibrios) ||",
          "474:   ((img_report.has_efi) && (tt == TT_UEFI) && (!img_report.has_4GB_file) && (!windows_to_go))) {",
          "477:   } else if ((fs_mask & (1<<FS_FAT16)) && (!img_report.has_kolibrios)) {",
          "480:  } else if ((windows_to_go) || (img_report.has_bootmgr) || (IS_WINPE(img_report.winpe))) {",
          "",
          "[Added Lines]",
          "484:  if ((HAS_SYSLINUX(img_report)) || (HAS_REACTOS(img_report)) || HAS_KOLIBRIOS(img_report) ||",
          "485:   (IS_EFI_BOOTABLE(img_report) && (tt == TT_UEFI) && (!img_report.has_4GB_file) && (!windows_to_go))) {",
          "488:   } else if ((fs_mask & (1<<FS_FAT16)) && !HAS_KOLIBRIOS(img_report)) {",
          "491:  } else if ((windows_to_go) || HAS_BOOTMGR(img_report) || HAS_WINPE(img_report)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "498: {",
          "499:  int fs = (int)ComboBox_GetItemData(hFileSystem, ComboBox_GetCurSel(hFileSystem));",
          "500:  int bt = (int)ComboBox_GetItemData(hBootType, ComboBox_GetCurSel(hBootType));",
          "504:   ((togo_mode) && (Button_GetCheck(GetDlgItem(hMainDialog, IDC_WINDOWS_TO_GO)) == BST_CHECKED)) )) {",
          "505:   CheckDlgButton(hMainDialog, IDC_RUFUS_MBR, BST_UNCHECKED);",
          "506:   IGNORE_RETVAL(ComboBox_SetCurSel(hDiskID, 0));",
          "507:   return;",
          "508:  }",
          "511:  if (IsWindowEnabled(GetDlgItem(hMainDialog, IDC_RUFUS_MBR)))",
          "512:   CheckDlgButton(hMainDialog, IDC_RUFUS_MBR, uMBRChecked);",
          "513:  IGNORE_RETVAL(ComboBox_SetCurSel(hDiskID, needs_masquerading?1:0));",
          "",
          "[Removed Lines]",
          "501:  BOOL needs_masquerading = (IS_WINPE(img_report.winpe) && (!img_report.uses_minint));",
          "503:  if ((!mbr_selected_by_user) && ((image_path == NULL) || (bt != BT_ISO) || (fs != FS_NTFS) || IS_GRUB(img_report) ||",
          "510:  uMBRChecked = (needs_masquerading || img_report.has_bootmgr || mbr_selected_by_user)?BST_CHECKED:BST_UNCHECKED;",
          "",
          "[Added Lines]",
          "512:  BOOL needs_masquerading = HAS_WINPE(img_report) && (!img_report.uses_minint);",
          "514:  if ((!mbr_selected_by_user) && ((image_path == NULL) || (bt != BT_ISO) || (fs != FS_NTFS) || HAS_GRUB(img_report) ||",
          "521:  uMBRChecked = (needs_masquerading || HAS_BOOTMGR(img_report) || mbr_selected_by_user)?BST_CHECKED:BST_UNCHECKED;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "516: static void SetToGo(void)",
          "517: {",
          "518:  int bt = (int)ComboBox_GetItemData(hBootType, ComboBox_GetCurSel(hBootType));",
          "520:   ToggleToGo();",
          "521: }",
          "",
          "[Removed Lines]",
          "519:  if ( ((bt != BT_ISO) && (togo_mode)) || ((bt == BT_ISO) && (HAS_TOGO(img_report)) && (!togo_mode)) )",
          "",
          "[Added Lines]",
          "530:  if ( ((bt != BT_ISO) && (togo_mode)) || ((bt == BT_ISO) && (HAS_WINTOGO(img_report)) && (!togo_mode)) )",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "527:  BOOL actual_enable_fix = ((tt==TT_UEFI)||(selection_default==BT_IMG)||!IsChecked(IDC_BOOT))?FALSE:enable;",
          "528:  static UINT uXPartChecked = BST_UNCHECKED;",
          "531:   actual_enable_mbr = FALSE;",
          "532:   mbr_selected_by_user = FALSE;",
          "533:  }",
          "",
          "[Removed Lines]",
          "530:  if ((selection_default == BT_ISO) && (img_report.has_kolibrios || IS_GRUB(img_report) || IS_REACTOS(img_report) || HAS_SYSLINUX(img_report))) {",
          "",
          "[Added Lines]",
          "541:  if ((selection_default == BT_ISO) && IS_BIOS_BOOTABLE(img_report) && !HAS_WINPE(img_report) && !HAS_BOOTMGR(img_report)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "580: static void SetTargetSystem(void)",
          "581: {",
          "585:  if (SelectedDrive.PartitionType == PARTITION_STYLE_GPT) {",
          "591:  } else {",
          "593:  }",
          "594:  IGNORE_RETVAL(ComboBox_SetCurSel(hPartitionScheme, ts));",
          "",
          "[Removed Lines]",
          "582:  int ts;",
          "584:  SetMBRForUEFI(TRUE);",
          "586:   ts = 2; // GPT/UEFI",
          "587:  } else if (SelectedDrive.has_protective_mbr || SelectedDrive.has_mbr_uefi_marker || ((img_report.has_efi) &&",
          "588:   (!HAS_SYSLINUX(img_report)) && (!img_report.has_bootmgr) && (!IS_REACTOS(img_report)) &&",
          "589:   (!img_report.has_kolibrios) && (!IS_GRUB(img_report)) && (!IS_WINPE(img_report.winpe))) ) {",
          "590:   ts = 1; // MBR/UEFI",
          "592:   ts = 0; // MBR/BIOS|UEFI",
          "",
          "[Added Lines]",
          "593:  int ts = SetMBRForUEFI(TRUE); // Will be set to -1 for pure UEFI, 0 otherwise",
          "595:   ts += 2; // GPT/UEFI",
          "596:  } else if (SelectedDrive.has_protective_mbr || SelectedDrive.has_mbr_uefi_marker ||",
          "597:   (IS_EFI_BOOTABLE(img_report) && !IS_BIOS_BOOTABLE(img_report)) ) {",
          "598:   ts += 1; // MBR/UEFI",
          "600:   ts += 0; // MBR/BIOS|UEFI",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "969:    PRINT_ISO_PROP(img_report.has_old_c32[i], \"    With an old %s\", old_c32_name[i]);",
          "970:   }",
          "971:  }",
          "974:  PRINT_ISO_PROP(img_report.has_grub4dos, \"  Uses: Grub4DOS\");",
          "975:  PRINT_ISO_PROP(img_report.has_grub2, \"  Uses: GRUB2\");",
          "979:  if (HAS_INSTALL_WIM(img_report)) {",
          "980:   uprintf(\"  Uses: Install.wim (version %d.%d.%d)\", (img_report.install_wim_version >> 24) & 0xff,",
          "981:    (img_report.install_wim_version >> 16) & 0xff, (img_report.install_wim_version >> 8) & 0xff);",
          "",
          "[Removed Lines]",
          "972:  PRINT_ISO_PROP(img_report.has_kolibrios, \"  Uses: KolibriOS\");",
          "973:  PRINT_ISO_PROP(IS_REACTOS(img_report), \"  Uses: ReactOS\");",
          "976:  PRINT_ISO_PROP(img_report.has_efi, \"  Uses: EFI %s\", IS_WIN7_EFI(img_report) ? \"(win7_x64)\" : \"\");",
          "977:  PRINT_ISO_PROP(img_report.has_bootmgr, \"  Uses: Bootmgr\");",
          "978:  PRINT_ISO_PROP(IS_WINPE(img_report.winpe), \"  Uses: WinPE %s\", (img_report.uses_minint) ? \"(with /minint)\" : \"\");",
          "",
          "[Added Lines]",
          "980:  PRINT_ISO_PROP(HAS_KOLIBRIOS(img_report), \"  Uses: KolibriOS\");",
          "981:  PRINT_ISO_PROP(HAS_REACTOS(img_report), \"  Uses: ReactOS\");",
          "984:  PRINT_ISO_PROP(img_report.has_efi, \"  Uses: EFI %s\", HAS_WIN7_EFI(img_report) ? \"(win7_x64)\" : \"\");",
          "985:  PRINT_ISO_PROP(HAS_BOOTMGR(img_report), \"  Uses: Bootmgr\");",
          "986:  PRINT_ISO_PROP(HAS_WINPE(img_report), \"  Uses: WinPE %s\", (img_report.uses_minint) ? \"(with /minint)\" : \"\");",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "991:  if (nWindowsVersion >= WINDOWS_8)",
          "993:    ToggleToGo();",
          "994: }",
          "",
          "[Removed Lines]",
          "992:   if ( ((!togo_mode) && (HAS_TOGO(img_report))) || ((togo_mode) && (!HAS_TOGO(img_report))) )",
          "",
          "[Added Lines]",
          "1000:   if ( ((!togo_mode) && (HAS_WINTOGO(img_report))) || ((togo_mode) && (!HAS_WINTOGO(img_report))) )",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1026:  if (img_report.is_iso) {",
          "1027:   DisplayISOProps();",
          "1031:    uprintf(\"This ISOHybrid is not compatible with any of the ISO boot methods we support\");",
          "1032:    img_report.is_iso = FALSE;",
          "1033:   } else {",
          "",
          "[Removed Lines]",
          "1029:   if ((img_report.is_bootable_img) && (!img_report.has_bootmgr) && (!HAS_SYSLINUX(img_report)) && (!IS_WINPE(img_report.winpe))",
          "1030:    && (!IS_GRUB(img_report)) && (!img_report.has_efi) && (!IS_REACTOS(img_report)) && (!img_report.has_kolibrios)) {",
          "",
          "[Added Lines]",
          "1037:   if (IS_DD_BOOTABLE(img_report) && !IS_BIOS_BOOTABLE(img_report) && !IS_EFI_BOOTABLE(img_report)) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1037:  }",
          "1039:  EnableControls(TRUE);",
          "1043:   PrintInfo(0, MSG_081);",
          "1044:   safe_free(image_path);",
          "",
          "[Removed Lines]",
          "1040:  if ( (!img_report.has_bootmgr) && (!HAS_SYSLINUX(img_report)) && (!IS_WINPE(img_report.winpe)) && (!IS_GRUB(img_report))",
          "1041:    && (!img_report.has_efi) && (!IS_REACTOS(img_report)) && (!img_report.has_kolibrios) && (!img_report.is_bootable_img) ) {",
          "",
          "[Added Lines]",
          "1047:  if (!IS_DD_BOOTABLE(img_report) && !IS_BIOS_BOOTABLE(img_report) && !IS_EFI_BOOTABLE(img_report)) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1274:    return FALSE;",
          "1275:   }",
          "1276:   if (bt == BT_IMG) {",
          "1279:     MessageBoxExU(hMainDialog, lmprintf(MSG_188), lmprintf(MSG_187), MB_OK|MB_ICONERROR|MB_IS_RTL, selected_langid);",
          "1281:   }",
          "1282:   fs = (int)ComboBox_GetItemData(hFileSystem, ComboBox_GetCurSel(hFileSystem));",
          "1283:   tt = GETTARGETTYPE((int)ComboBox_GetItemData(hPartitionScheme, ComboBox_GetCurSel(hPartitionScheme)));",
          "",
          "[Removed Lines]",
          "1277:    if (!img_report.is_bootable_img)",
          "1280:    return (img_report.is_bootable_img);",
          "",
          "[Added Lines]",
          "1283:    if (!IS_DD_BOOTABLE(img_report))",
          "1286:    return IS_DD_BOOTABLE(img_report);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1299:      return FALSE;",
          "1300:    }",
          "1301:   } else if (tt == TT_UEFI) {",
          "1304:     MessageBoxExU(hMainDialog, lmprintf(MSG_091), lmprintf(MSG_090), MB_OK|MB_ICONERROR|MB_IS_RTL, selected_langid);",
          "1305:     return FALSE;",
          "1306:    }",
          "1309:     if (MessageBoxExU(hMainDialog, lmprintf(MSG_102), lmprintf(MSG_101), MB_YESNO|MB_ICONERROR|MB_IS_RTL, selected_langid) == IDYES)",
          "1310:      ShellExecuteA(hMainDialog, \"open\", SEVENZIP_URL, NULL, NULL, SW_SHOWNORMAL);",
          "1311:     return FALSE;",
          "1312:    }",
          "1318:    MessageBoxExU(hMainDialog, lmprintf(MSG_096), lmprintf(MSG_092), MB_OK|MB_ICONERROR|MB_IS_RTL, selected_langid);",
          "1319:    return FALSE;",
          "1322:    MessageBoxExU(hMainDialog, lmprintf(MSG_189), lmprintf(MSG_099), MB_OK|MB_ICONERROR|MB_IS_RTL, selected_langid);",
          "1323:    return FALSE;",
          "",
          "[Removed Lines]",
          "1302:    if (!img_report.has_efi) {",
          "1307:    if (IS_WIN7_EFI(img_report) && (!WimExtractCheck())) {",
          "1313:   } else if ( ((fs == FS_NTFS) && (!IS_WINDOWS(img_report)) && (!IS_GRUB(img_report)))",
          "1314:      || ((IS_FAT(fs)) && (!HAS_SYSLINUX(img_report)) && (!allow_dual_uefi_bios) && (!img_report.has_efi) &&",
          "1315:       (!IS_REACTOS(img_report)) && (!img_report.has_kolibrios) && (!IS_GRUB(img_report)))",
          "1316:      || ((IS_FAT(fs)) && (IS_WINDOWS(img_report) || HAS_INSTALL_WIM(img_report))) ) {",
          "1320:   } else if ((fs == FS_FAT16) && (img_report.has_kolibrios)) {",
          "",
          "[Added Lines]",
          "1308:    if (!IS_EFI_BOOTABLE(img_report)) {",
          "1313:    if (HAS_WIN7_EFI(img_report) && (!WimExtractCheck())) {",
          "1319:   } else if ( ((fs == FS_NTFS) && (!HAS_WINDOWS(img_report)) && (!HAS_GRUB(img_report)))",
          "1320:      || ((IS_FAT(fs)) && (!HAS_SYSLINUX(img_report)) && (!allow_dual_uefi_bios) && !IS_EFI_BOOTABLE(img_report) &&",
          "1321:       (!HAS_REACTOS(img_report)) && !HAS_KOLIBRIOS(img_report) && (!HAS_GRUB(img_report)))",
          "1322:      || ((IS_FAT(fs)) && (HAS_WINDOWS(img_report) || HAS_INSTALL_WIM(img_report))) ) {",
          "1326:   } else if ((fs == FS_FAT16) && HAS_KOLIBRIOS(img_report)) {",
          "",
          "---------------"
        ],
        "src/rufus.h||src/rufus.h": [
          "File: src/rufus.h -> src/rufus.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "249: #define WINPE_MININT        0x2A",
          "250: #define WINPE_I386          0x15",
          "251: #define MAX_WIM_VERSION     0x000E0000",
          "252: #define HAS_SYSLINUX(r)     (r.sl_version != 0)",
          "253: #define HAS_INSTALL_WIM(r)  (r.install_wim_path[0] != 0)",
          "260: #define IS_FAT(fs)          ((fs == FS_FAT16) || (fs == FS_FAT32))",
          "262: typedef struct {",
          "",
          "[Removed Lines]",
          "254: #define HAS_TOGO(r)         (r.has_bootmgr && r.has_efi && HAS_INSTALL_WIM(r) && (r.install_wim_version < MAX_WIM_VERSION))",
          "255: #define IS_WINPE(r)         (((r & WINPE_MININT) == WINPE_MININT)||(( r & WINPE_I386) == WINPE_I386))",
          "256: #define IS_WINDOWS(r)       ((r.has_bootmgr) || (r.uses_minint) || IS_WINPE(r.winpe))",
          "257: #define IS_WIN7_EFI(r)      ((r.has_efi == 1) && HAS_INSTALL_WIM(r))",
          "258: #define IS_REACTOS(r)       (r.reactos_path[0] != 0)",
          "259: #define IS_GRUB(r)          ((r.has_grub2) || (r.has_grub4dos))",
          "",
          "[Added Lines]",
          "252: #define HAS_KOLIBRIOS(r)    (r.has_kolibrios)",
          "253: #define HAS_REACTOS(r)      (r.reactos_path[0] != 0)",
          "254: #define HAS_GRUB(r)         ((r.has_grub2) || (r.has_grub4dos))",
          "256: #define HAS_BOOTMGR(r)      (r.has_bootmgr)",
          "258: #define HAS_WINPE(r)        (((r.winpe & WINPE_MININT) == WINPE_MININT)||((r.winpe & WINPE_I386) == WINPE_I386))",
          "259: #define HAS_WINDOWS(r)      (HAS_BOOTMGR(r) || (r.uses_minint) || HAS_WINPE(r))",
          "260: #define HAS_WIN7_EFI(r)     ((r.has_efi == 1) && HAS_INSTALL_WIM(r))",
          "261: #define IS_DD_BOOTABLE(r)   (r.is_bootable_img)",
          "262: #define IS_EFI_BOOTABLE(r)  (r.has_efi)",
          "263: #define IS_BIOS_BOOTABLE(r) (HAS_BOOTMGR(r) || HAS_SYSLINUX(r) || HAS_WINPE(r) || HAS_GRUB(r) || HAS_REACTOS(r) || HAS_KOLIBRIOS(r))",
          "264: #define HAS_WINTOGO(r)      (HAS_BOOTMGR(r) && IS_EFI_BOOTABLE(r) && HAS_INSTALL_WIM(r) && (r.install_wim_version < MAX_WIM_VERSION))",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.12.1008\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.12.1009\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336: VS_VERSION_INFO VERSIONINFO",
          "339:  FILEFLAGSMASK 0x3fL",
          "340: #ifdef _DEBUG",
          "341:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "337:  FILEVERSION 2,12,1008,0",
          "338:  PRODUCTVERSION 2,12,1008,0",
          "",
          "[Added Lines]",
          "337:  FILEVERSION 2,12,1009,0",
          "338:  PRODUCTVERSION 2,12,1009,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:         BEGIN",
          "353:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "354:             VALUE \"FileDescription\", \"Rufus\"",
          "356:             VALUE \"InternalName\", \"Rufus\"",
          "357:             VALUE \"LegalCopyright\", \"\ufffd 2011-2016 Pete Batard (GPL v3)\"",
          "358:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "359:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "360:             VALUE \"ProductName\", \"Rufus\"",
          "362:         END",
          "363:     END",
          "364:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "355:             VALUE \"FileVersion\", \"2.12.1008\"",
          "361:             VALUE \"ProductVersion\", \"2.12.1008\"",
          "",
          "[Added Lines]",
          "355:             VALUE \"FileVersion\", \"2.12.1009\"",
          "361:             VALUE \"ProductVersion\", \"2.12.1009\"",
          "",
          "---------------"
        ],
        "src/syslinux.c||src/syslinux.c": [
          "File: src/syslinux.c -> src/syslinux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "342:     uprintf(\"Failed to create '%s': %s\", path, WindowsErrorString());",
          "343:    }",
          "344:   }",
          "346:   uprintf(\"Setting up ReactOS...\");",
          "347:   syslinux_mboot = GetResource(hMainInstance, MAKEINTRESOURCEA(IDR_SL_MBOOT_C32),",
          "348:    _RT_RCDATA, \"mboot.c32\", &syslinux_mboot_len, FALSE);",
          "",
          "[Removed Lines]",
          "345:  } else if (IS_REACTOS(img_report)) {",
          "",
          "[Added Lines]",
          "345:  } else if (HAS_REACTOS(img_report)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4483a6b17d986c4948c9fb0d0e2ac00f42416bb8",
      "candidate_info": {
        "commit_hash": "4483a6b17d986c4948c9fb0d0e2ac00f42416bb8",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/4483a6b17d986c4948c9fb0d0e2ac00f42416bb8",
        "files": [
          "appveyor.yml",
          "src/rufus.rc"
        ],
        "message": "[internal] update appveyor rule to actually ignore res/ recursively\n\n* As per https://github.com/appveyor/ci/issues/838, 'res/*' means\n  all files within directory, non-recursive, whereas we want 'res/'\n  for all files within directory, recursive.",
        "before_after_code_files": [
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.2.1348\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.2.1349\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394: VS_VERSION_INFO VERSIONINFO",
          "397:  FILEFLAGSMASK 0x3fL",
          "398: #ifdef _DEBUG",
          "399:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "395:  FILEVERSION 3,2,1348,0",
          "396:  PRODUCTVERSION 3,2,1348,0",
          "",
          "[Added Lines]",
          "395:  FILEVERSION 3,2,1349,0",
          "396:  PRODUCTVERSION 3,2,1349,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "411:             VALUE \"Comments\", \"https://akeo.ie\"",
          "412:             VALUE \"CompanyName\", \"Akeo Consulting\"",
          "413:             VALUE \"FileDescription\", \"Rufus\"",
          "415:             VALUE \"InternalName\", \"Rufus\"",
          "416:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "417:             VALUE \"LegalTrademarks\", \"https://www.gnu.org/copyleft/gpl.html\"",
          "418:             VALUE \"OriginalFilename\", \"rufus-3.2.exe\"",
          "419:             VALUE \"ProductName\", \"Rufus\"",
          "421:         END",
          "422:     END",
          "423:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1348\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1348\"",
          "",
          "[Added Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1349\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1349\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aec273624513daac2bff40cf73b416a2540b4b5f",
      "candidate_info": {
        "commit_hash": "aec273624513daac2bff40cf73b416a2540b4b5f",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/aec273624513daac2bff40cf73b416a2540b4b5f",
        "files": [
          "src/format.c",
          "src/rufus.c",
          "src/rufus.h",
          "src/rufus.rc",
          "src/stdfn.c"
        ],
        "message": "[togo] improve Windows To Go support for Windows 10 Creators Update\n\n* Enable the use of GPT on REMOVABLE drives, if the host is Windows 10 CU\n* Don't display the message about REMOVABLE boot, if the target is Windows 10 CU",
        "before_after_code_files": [
          "src/format.c||src/format.c",
          "src/rufus.c||src/rufus.c",
          "src/rufus.h||src/rufus.h",
          "src/rufus.rc||src/rufus.rc",
          "src/stdfn.c||src/stdfn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/format.c||src/format.c": [
          "File: src/format.c -> src/format.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1289: BOOL SetWinToGoIndex(void)",
          "1290: {",
          "1292:  char tmp_path[MAX_PATH] = \"\", xml_file[MAX_PATH] = \"\";",
          "1293:  StrArray version_name, version_index;",
          "1297:  if ((nWindowsVersion < WINDOWS_8) || ((WimExtractCheck() & 4) == 0) ||",
          "1298:   (ComboBox_GetItemData(hFileSystem, ComboBox_GetCurSel(hFileSystem)) != FS_NTFS)) {",
          "1300:   return FALSE;",
          "1301:  }",
          "1303:  mounted_iso = MountISO(image_path);",
          "1304:  if (mounted_iso == NULL) {",
          "1305:   uprintf(\"Could not mount ISO for Windows To Go selection\");",
          "1307:   return FALSE;",
          "1308:  }",
          "1309:  static_sprintf(image, \"%s%s\", mounted_iso, &img_report.install_wim_path[2]);",
          "",
          "[Removed Lines]",
          "1291:  char *mounted_iso, image[128];",
          "1294:  int i;",
          "1299:   wintogo_index = -1;",
          "1306:   wintogo_index = -1;",
          "",
          "[Added Lines]",
          "1291:  char *mounted_iso, *build, image[128];",
          "1294:  int i, build_nr = 0;",
          "1297:  wintogo_index = -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1322:  if (!WimExtractFile_API(image, 0, \"[1].xml\", xml_file)) {",
          "1323:   uprintf(\"Failed to acquire WIM index\");",
          "1324:  }",
          "1325:  StrArrayCreate(&version_name, 16);",
          "1326:  StrArrayCreate(&version_index, 16);",
          "1327:  for (i = 0; (StrArrayAdd(&version_name, get_token_data_file_indexed(\"DISPLAYNAME\", xml_file, i + 1), FALSE) >= 0) &&",
          "1328:   (StrArrayAdd(&version_index, get_token_data_file_indexed(\"IMAGE INDEX\", xml_file, i + 1), FALSE) >= 0); i++);",
          "1332:  if (i > 1)",
          "1333:   i = Selection(lmprintf(MSG_291), lmprintf(MSG_292), version_name.String, i);",
          "",
          "[Removed Lines]",
          "1329:  DeleteFileU(xml_file);",
          "1330:  UnMountISO();",
          "",
          "[Added Lines]",
          "1323:   goto out;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1338:  } else {",
          "1339:   wintogo_index = atoi(version_index.String[i - 1]);",
          "1340:  }",
          "1343:  StrArrayDestroy(&version_name);",
          "1344:  StrArrayDestroy(&version_index);",
          "1345:  return (wintogo_index >= 0);",
          "1346: }",
          "",
          "[Removed Lines]",
          "1341:  if (i >= 1)",
          "1342:   uprintf(\"Will use '%s' (index %s) for Windows To Go\", version_name.String[i - 1], version_index.String[i - 1]);",
          "",
          "[Added Lines]",
          "1340:  if (i >= 0) {",
          "1342:   build = get_token_data_file_indexed(\"BUILD\", xml_file, i);",
          "1343:   if (build != NULL)",
          "1344:    build_nr = atoi(build);",
          "1345:   free(build);",
          "1346:   uprintf(\"Will use '%s' (Build: %d, Index %s) for Windows To Go\",",
          "1347:    version_name.String[i - 1], build_nr, version_index.String[i - 1]);",
          "1349:   if ((build_nr < 15000) && (SelectedDrive.MediaType != FixedMedia)) {",
          "1350:    if (MessageBoxExU(hMainDialog, lmprintf(MSG_098), lmprintf(MSG_190),",
          "1351:     MB_YESNO | MB_ICONWARNING | MB_IS_RTL, selected_langid) != IDYES)",
          "1352:     wintogo_index = -1;",
          "1353:   }",
          "1354:  }",
          "1358: out:",
          "1359:  DeleteFileU(xml_file);",
          "1360:  UnMountISO();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1369:  uprintf(\"Windows To Go mode selected\");",
          "1372:   FormatStatus = ERROR_SEVERITY_ERROR|FAC(FACILITY_STORAGE)|ERROR_NOT_SUPPORTED;",
          "1373:   return FALSE;",
          "1374:  }",
          "",
          "[Removed Lines]",
          "1371:  if ( (use_ms_efi) && (SelectedDrive.MediaType != FixedMedia) ) {",
          "",
          "[Added Lines]",
          "1387:  if ( (use_ms_efi) && (SelectedDrive.MediaType != FixedMedia) && (nWindowsBuildNumber < 15000)) {",
          "",
          "---------------"
        ],
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1297:     MessageBoxExU(hMainDialog, lmprintf(MSG_097, \"Windows To Go\"), lmprintf(MSG_092), MB_OK|MB_ICONERROR|MB_IS_RTL, selected_langid);",
          "1298:     return FALSE;",
          "1303:      MessageBoxExU(hMainDialog, lmprintf(MSG_198), lmprintf(MSG_190), MB_OK|MB_ICONERROR|MB_IS_RTL, selected_langid);",
          "1304:      return FALSE;",
          "1305:     }",
          "1310:    }",
          "1312:    if (!SetWinToGoIndex())",
          "",
          "[Removed Lines]",
          "1299:    } else if (SelectedDrive.MediaType != FixedMedia) {",
          "1300:     if ((tt == TT_UEFI) && (pt == PARTITION_STYLE_GPT)) {",
          "1308:     if (MessageBoxExU(hMainDialog, lmprintf(MSG_098), lmprintf(MSG_190), MB_YESNO|MB_ICONWARNING|MB_IS_RTL, selected_langid) != IDYES)",
          "1309:      return FALSE;",
          "",
          "[Added Lines]",
          "1299:    }",
          "1300:    if (SelectedDrive.MediaType != FixedMedia) {",
          "1301:     if ((tt == TT_UEFI) && (pt == PARTITION_STYLE_GPT) && (nWindowsBuildNumber < 15000)) {",
          "",
          "---------------"
        ],
        "src/rufus.h||src/rufus.h": [
          "File: src/rufus.h -> src/rufus.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "390: extern int64_t iso_blocking_status;",
          "391: extern uint16_t rufus_version[3], embedded_sl_version[2];",
          "392: extern int nWindowsVersion;",
          "393: extern char WindowsVersionStr[128];",
          "394: extern char ubuffer[256];",
          "395: extern char embedded_sl_version_str[2][12];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "393: extern int nWindowsBuildNumber;",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.15.1089\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.15.1090\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336: VS_VERSION_INFO VERSIONINFO",
          "339:  FILEFLAGSMASK 0x3fL",
          "340: #ifdef _DEBUG",
          "341:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "337:  FILEVERSION 2,15,1089,0",
          "338:  PRODUCTVERSION 2,15,1089,0",
          "",
          "[Added Lines]",
          "337:  FILEVERSION 2,15,1090,0",
          "338:  PRODUCTVERSION 2,15,1090,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:         BEGIN",
          "353:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "354:             VALUE \"FileDescription\", \"Rufus\"",
          "356:             VALUE \"InternalName\", \"Rufus\"",
          "357:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "358:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "359:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "360:             VALUE \"ProductName\", \"Rufus\"",
          "362:         END",
          "363:     END",
          "364:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "355:             VALUE \"FileVersion\", \"2.15.1089\"",
          "361:             VALUE \"ProductVersion\", \"2.15.1089\"",
          "",
          "[Added Lines]",
          "355:             VALUE \"FileVersion\", \"2.15.1090\"",
          "361:             VALUE \"ProductVersion\", \"2.15.1090\"",
          "",
          "---------------"
        ],
        "src/stdfn.c||src/stdfn.c": [
          "File: src/stdfn.c -> src/stdfn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: extern BOOL usb_debug; // For uuprintf",
          "36: int  nWindowsVersion = WINDOWS_UNDEFINED;",
          "37: char WindowsVersionStr[128] = \"Windows \";",
          "39: PF_TYPE_DECL(WINAPI, int, LCIDToLocaleName, (LCID, LPWSTR, int, DWORD));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: int  nWindowsBuildNumber = -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "328:  if (nWindowsVersion >= 0x62) {",
          "329:   GetRegistryKeyStr(REGKEY_HKLM, \"Microsoft\\\\Windows NT\\\\CurrentVersion\\\\CurrentBuildNumber\", build_number, sizeof(build_number));",
          "330:   if (build_number[0] != 0) {",
          "331:    safe_strcat(WindowsVersionStr, sizeof(WindowsVersionStr), \" (Build \");",
          "332:    safe_strcat(WindowsVersionStr, sizeof(WindowsVersionStr), build_number);",
          "333:    safe_strcat(WindowsVersionStr, sizeof(WindowsVersionStr), \")\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "332:    nWindowsBuildNumber = atoi(build_number); // Keep a global copy",
          "",
          "---------------"
        ]
      }
    }
  ]
}