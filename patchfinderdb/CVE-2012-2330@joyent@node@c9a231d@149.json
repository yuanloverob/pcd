{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "eb2ca104628e415fc73c330cdd76fca77bf5ba97",
      "candidate_info": {
        "commit_hash": "eb2ca104628e415fc73c330cdd76fca77bf5ba97",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/eb2ca104628e415fc73c330cdd76fca77bf5ba97",
        "files": [
          "lib/http.js",
          "lib/tls.js",
          "src/node_crypto.cc",
          "test/simple/test-tls-check-server-identity.js"
        ],
        "message": "tls: veryify server's identity",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "lib/tls.js||litls.js",
          "src/node_crypto.cc||src/node_crypto.cc",
          "test/simple/test-tls-check-server-identity.js||test/simple/test-tls-check-server-identity.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1123:   }",
          "1124:   if (this.requests[name] && this.requests[name].length) {",
          "1133:   }",
          "1134: };",
          "",
          "[Removed Lines]",
          "1126:     this.createSocket(",
          "1127:       name,",
          "1128:       host,",
          "1129:       port,",
          "1130:       localAddress,",
          "1131:       this.requests[name][0]",
          "1132:     ).emit('free');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1141:   var self = this;",
          "1142:   OutgoingMessage.call(self);",
          "1145:   self.agent = options.agent === undefined ? globalAgent : options.agent;",
          "1147:   var defaultPort = options.defaultPort || 80;",
          "",
          "[Removed Lines]",
          "1144:   this.options = options;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var crypto = require('crypto');",
          "23: var util = require('util');",
          "24: var net = require('net');",
          "25: var events = require('events');",
          "26: var Stream = require('stream');",
          "27: var END_OF_FILE = 42;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:   }",
          "78: }",
          "81: function CryptoStream(pair) {",
          "82:   Stream.call(this);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1118:   var sslcontext = crypto.createCredentials(options);",
          "1120:   convertNPNProtocols(options.NPNProtocols, this);",
          "1122:                             options.rejectUnauthorized === true ? true : false,",
          "1123:                             {",
          "1124:                               NPNProtocols: this.NPNProtocols,",
          "1126:                             });",
          "1128:   if (options.session) {",
          "",
          "[Removed Lines]",
          "1121:   var pair = new SecurePair(sslcontext, false, true,",
          "1125:                               servername: options.servername || options.host",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1148:     cleartext.npnProtocol = pair.npnProtocol;",
          "1150:     if (verifyError) {",
          "1151:       cleartext.authorized = false;",
          "1154:       if (pair._rejectUnauthorized) {",
          "1155:         cleartext.emit('error', verifyError);",
          "",
          "[Removed Lines]",
          "1152:       cleartext.authorizationError = verifyError;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1551:   }",
          "1552:   X509_free(peer_cert);",
          "",
          "[Removed Lines]",
          "1550:     return scope.Close(String::New(\"UNABLE_TO_GET_ISSUER_CERT\"));",
          "",
          "[Added Lines]",
          "1550:     return scope.Close(Exception::Error(",
          "1551:           String::New(\"UNABLE_TO_GET_ISSUER_CERT\")));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1673:       break;",
          "1674:   }",
          "1677: }",
          "",
          "[Removed Lines]",
          "1676:   return scope.Close(s);",
          "",
          "[Added Lines]",
          "1677:   return scope.Close(Exception::Error(s));",
          "",
          "---------------"
        ],
        "test/simple/test-tls-check-server-identity.js||test/simple/test-tls-check-server-identity.js": [
          "File: test/simple/test-tls-check-server-identity.js -> test/simple/test-tls-check-server-identity.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var util = require('util');",
          "25: var tls = require('tls');",
          "27: var tests = [",
          "29:   { host: 'a.com', cert: { subject: { CN: 'a.com' } }, result: true },",
          "30:   { host: 'a.com', cert: { subject: { CN: 'A.COM' } }, result: true },",
          "31:   { host: 'a.com', cert: { subject: { CN: 'b.com' } }, result: false },",
          "32:   { host: 'a.com', cert: { subject: { CN: 'a.com.' } }, result: true },",
          "35:   { host: 'b.a.com', cert: { subject: { CN: '*.a.com' } }, result: false },",
          "38:   {",
          "39:     host: 'a.com', cert: {",
          "40:       subjectaltname: 'DNS:*',",
          "41:       subject: { CN: 'b.com' }",
          "42:     },",
          "43:     result: false",
          "44:   },",
          "45:   {",
          "46:     host: 'a.com', cert: {",
          "47:       subjectaltname: 'DNS:*.com',",
          "48:       subject: { CN: 'b.com' }",
          "49:     },",
          "50:     result: false",
          "51:   },",
          "52:   {",
          "53:     host: 'a.co.uk', cert: {",
          "54:       subjectaltname: 'DNS:*.co.uk',",
          "55:       subject: { CN: 'b.com' }",
          "56:     },",
          "57:     result: true",
          "58:   },",
          "59:   {",
          "60:     host: 'a.com', cert: {",
          "61:       subjectaltname: 'DNS:*.a.com',",
          "62:       subject: { CN: 'a.com' }",
          "63:     },",
          "64:     result: true",
          "65:   },",
          "66:   {",
          "67:     host: 'a.com', cert: {",
          "68:       subjectaltname: 'DNS:*.a.com',",
          "69:       subject: { CN: 'b.com' }",
          "70:     },",
          "71:     result: false",
          "72:   },",
          "73:   {",
          "74:     host: 'a.com', cert: {",
          "75:       subjectaltname: 'DNS:a.com',",
          "76:       subject: { CN: 'b.com' }",
          "77:     },",
          "78:     result: true",
          "79:   },",
          "80:   {",
          "81:     host: 'a.com', cert: {",
          "82:       subjectaltname: 'DNS:A.COM',",
          "83:       subject: { CN: 'b.com' }",
          "84:     },",
          "85:     result: true",
          "86:   },",
          "89:   {",
          "90:     host: 'a.com', cert: {",
          "91:       subjectaltname: 'DNS:*.a.com',",
          "92:       subject: {}",
          "93:     },",
          "94:     result: false",
          "95:   },",
          "96:   {",
          "97:     host: 'b.a.com', cert: {",
          "98:       subjectaltname: 'DNS:*.a.com',",
          "99:       subject: {}",
          "100:     },",
          "101:     result: true",
          "102:   },",
          "103:   {",
          "104:     host: 'c.b.a.com', cert: {",
          "105:       subjectaltname: 'DNS:*.a.com',",
          "106:       subject: {}",
          "107:     },",
          "108:     result: false",
          "109:   },",
          "110:   {",
          "111:     host: 'b.a.com', cert: {",
          "112:       subjectaltname: 'DNS:*b.a.com',",
          "113:       subject: {}",
          "114:     },",
          "115:     result: true",
          "116:   },",
          "117:   {",
          "118:     host: 'a-cb.a.com', cert: {",
          "119:       subjectaltname: 'DNS:*b.a.com',",
          "120:       subject: {}",
          "121:     },",
          "122:     result: true",
          "123:   },",
          "124:   {",
          "125:     host: 'a.b.a.com', cert: {",
          "126:       subjectaltname: 'DNS:*b.a.com',",
          "127:       subject: {}",
          "128:     },",
          "129:     result: false",
          "130:   },",
          "132:   {",
          "133:     host: 'a.b.a.com', cert: {",
          "134:       subjectaltname: 'DNS:*b.a.com, DNS:a.b.a.com',",
          "135:       subject: {}",
          "136:     },",
          "137:     result: true",
          "138:   },",
          "140:   {",
          "141:     host: 'a.b.a.com', cert: {",
          "142:       subjectaltname: 'URI:http://a.b.a.com/',",
          "143:       subject: {}",
          "144:     },",
          "145:     result: true",
          "146:   },",
          "147:   {",
          "148:     host: 'a.b.a.com', cert: {",
          "149:       subjectaltname: 'URI:http://*.b.a.com/',",
          "150:       subject: {}",
          "151:     },",
          "152:     result: false",
          "153:   },",
          "155:   {",
          "156:     host: 'a.b.a.com', cert: {",
          "157:       subjectaltname: 'IP Address:127.0.0.1',",
          "158:       subject: {}",
          "159:     },",
          "160:     result: false",
          "161:   },",
          "162:   {",
          "163:     host: '127.0.0.1', cert: {",
          "164:       subjectaltname: 'IP Address:127.0.0.1',",
          "165:       subject: {}",
          "166:     },",
          "167:     result: true",
          "168:   },",
          "169:   {",
          "170:     host: '127.0.0.2', cert: {",
          "171:       subjectaltname: 'IP Address:127.0.0.1',",
          "172:       subject: {}",
          "173:     },",
          "174:     result: false",
          "175:   },",
          "176:   {",
          "177:     host: '127.0.0.1', cert: {",
          "178:       subjectaltname: 'DNS:a.com',",
          "179:       subject: {}",
          "180:     },",
          "181:     result: false",
          "182:   },",
          "183: ];",
          "185: tests.forEach(function(test, i) {",
          "186:   assert.equal(tls.checkServerIdentity(test.host, test.cert),",
          "187:                test.result,",
          "188:                'Test#' + i + ' failed: ' + util.inspect(test));",
          "189: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d7577c71ab535dfd5c3f29b8c15a725137ff3b8",
      "candidate_info": {
        "commit_hash": "5d7577c71ab535dfd5c3f29b8c15a725137ff3b8",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5d7577c71ab535dfd5c3f29b8c15a725137ff3b8",
        "files": [
          "tools/doctool/doctool.js"
        ],
        "message": "doctool: correct improperly nested ul/li handling",
        "before_after_code_files": [
          "tools/doctool/doctool.js||tools/doctool/doctool.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/doctool/doctool.js||tools/doctool/doctool.js": [
          "File: tools/doctool/doctool.js -> tools/doctool/doctool.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     }",
          "44:     if (level > last_level) {",
          "46:     } else if (level < last_level) {",
          "47:       for(var c=last_level-level; 0 < c ; c-- ) {",
          "48:         toc.push(\"</ul>\");",
          "",
          "[Removed Lines]",
          "45:       toc.push(\"<ul>\");",
          "",
          "[Added Lines]",
          "45:       var c = last_level - level;",
          "46:       do {",
          "47:         toc.push(\"<ul>\");",
          "48:         c ++;",
          "49:       } while (c < -1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:     toc.push(\"</ul>\");",
          "62:   }",
          "65:   toc.push(\"</div>\");",
          "67:   return toc.join(\"\");",
          "",
          "[Removed Lines]",
          "64:   toc.push(\"<hr />\")",
          "",
          "[Added Lines]",
          "68:   toc.push(\"<hr>\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "89:     .replace(/(\\<h[2-6])\\>([^<]+)(\\<\\/h[1-6]\\>)/gmi, function(o, ts, c, te) {",
          "90:       return ts+' id=\"'+formatIdString(c)+'\">'+c+te;",
          "91:     })",
          "94:     });",
          "96:   return html;",
          "",
          "[Removed Lines]",
          "92:     .replace(/(\\<h[3-4][^>]+\\>)([^<]+)(\\<\\/h[3-4]\\>)/gmi, function(o, ts, c, te) {",
          "93:        return ts+c+' <a href=\"#'+formatIdString(c)+'\">#</a>'+te;",
          "",
          "[Added Lines]",
          "96:     .replace(/(\\<h[2-4][^>]+\\>)([^<]+)(\\<\\/h[2-4]\\>)/gmi,",
          "97:              function(o, ts, c, te) {",
          "98:       var mark = ' <span>' +",
          "99:           '<a class=\"top\" href=\"#\">\u2191</a>' +",
          "100:           '<a class=\"mark\" href=\"#' +",
          "101:           formatIdString(c) + '\">#</a></span>';",
          "103:       return ts+c+mark+te;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b21c8e0bfd7539859c79fab63da88a53abe4f25a",
      "candidate_info": {
        "commit_hash": "b21c8e0bfd7539859c79fab63da88a53abe4f25a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b21c8e0bfd7539859c79fab63da88a53abe4f25a",
        "files": [
          "tools/install.py"
        ],
        "message": "installer: honor --without-npm, default install path\n\n* honor the --without-waf and --without-npm configure switches\n\n* a small logic bug made the installer script install to $PWD instead of\n  /usr/local if --prefix= was not passed to configure",
        "before_after_code_files": [
          "tools/install.py||tools/install.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/install.py||tools/install.py": [
          "File: tools/install.py -> tools/install.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:   # with dtrace support now (oracle's \"unbreakable\" linux)",
          "189:   action(['src/node.d'], 'lib/dtrace/')",
          "194: def run(args):",
          "195:   global dst_dir, node_prefix, target_defaults, variables",
          "",
          "[Removed Lines]",
          "191:   if variables.get('node_install_waf'): waf_files(action)",
          "192:   if variables.get('node_install_npm'): npm_files(action)",
          "",
          "[Added Lines]",
          "191:   if 'true' == variables.get('node_install_waf'): waf_files(action)",
          "192:   if 'true' == variables.get('node_install_npm'): npm_files(action)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "202:   target_defaults = conf['target_defaults']",
          "204:   # argv[2] is a custom install prefix for packagers (think DESTDIR)",
          "206:   if len(args) > 2: dst_dir = abspath(args[2] + '/' + dst_dir)",
          "208:   cmd = args[1] if len(args) > 1 else 'install'",
          "",
          "[Removed Lines]",
          "205:   dst_dir = node_prefix = variables.get('node_prefix', '/usr/local')",
          "",
          "[Added Lines]",
          "205:   dst_dir = node_prefix = variables.get('node_prefix') or '/usr/local'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ceb51ddaa187b188035dd0b01589f1d24d5e90c7",
      "candidate_info": {
        "commit_hash": "ceb51ddaa187b188035dd0b01589f1d24d5e90c7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ceb51ddaa187b188035dd0b01589f1d24d5e90c7",
        "files": [
          "lib/string_decoder.js",
          "test/simple/test-string-decoder.js"
        ],
        "message": "string_decoder: add support for CESU-8\n\nFixes #3217.",
        "before_after_code_files": [
          "lib/string_decoder.js||listring_decoder.js",
          "test/simple/test-string-decoder.js||test/simple/test-string-decoder.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/string_decoder.js||listring_decoder.js": [
          "File: lib/string_decoder.js -> listring_decoder.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var StringDecoder = exports.StringDecoder = function(encoding) {",
          "23:   this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');",
          "24:   if (this.encoding === 'utf8') {",
          "26:     this.charReceived = 0;",
          "27:     this.charLength = 0;",
          "28:   }",
          "",
          "[Removed Lines]",
          "25:     this.charBuffer = new Buffer(4);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:   }",
          "38:   var charStr = '';",
          "42:     var i = (buffer.length >= this.charLength - this.charReceived) ?",
          "43:                 this.charLength - this.charReceived :",
          "44:                 buffer.length;",
          "50:     if (this.charReceived < this.charLength) {",
          "",
          "[Removed Lines]",
          "40:   if (this.charLength) {",
          "47:     buffer.copy(this.charBuffer, this.charReceived, 0, i);",
          "48:     this.charReceived += i;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "56:     charStr = this.charBuffer.slice(0, this.charLength).toString();",
          "57:     this.charReceived = this.charLength = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "63:     buffer = buffer.slice(i, buffer.length);",
          "64:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "93:     }",
          "94:   }",
          "99:   }",
          "108:   }",
          "",
          "[Removed Lines]",
          "96:   if (!this.charLength) {",
          "98:     return charStr + buffer.toString();",
          "102:   buffer.copy(this.charBuffer, 0, buffer.length - i, buffer.length);",
          "103:   this.charReceived = i;",
          "105:   if (buffer.length - i > 0) {",
          "107:     return charStr + buffer.toString('utf8', 0, buffer.length - i);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-string-decoder.js||test/simple/test-string-decoder.js": [
          "File: test/simple/test-string-decoder.js -> test/simple/test-string-decoder.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: s += decoder.write(buffer.slice(3, 4));",
          "47: assert.ok(s.length > 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: buffer = new Buffer('EDA0BDEDB18D', 'hex'); // THUMBS UP SIGN (in CESU-8)",
          "51: var s = '';",
          "52: s += decoder.write(buffer.slice(0, 1));",
          "53: s += decoder.write(buffer.slice(1, 2));",
          "54: s += decoder.write(buffer.slice(2, 3)); // complete lead surrogate",
          "55: assert.equal(s, '');",
          "56: s += decoder.write(buffer.slice(3, 4));",
          "57: s += decoder.write(buffer.slice(4, 5));",
          "58: s += decoder.write(buffer.slice(5, 6)); // complete trail surrogate",
          "59: assert.equal(s, '\\uD83D\\uDC4D'); // THUMBS UP SIGN (in UTF-16)",
          "61: var s = '';",
          "62: s += decoder.write(buffer.slice(0, 2));",
          "63: s += decoder.write(buffer.slice(2, 4)); // complete lead surrogate",
          "64: assert.equal(s, '');",
          "65: s += decoder.write(buffer.slice(4, 6)); // complete trail surrogate",
          "66: assert.equal(s, '\\uD83D\\uDC4D'); // THUMBS UP SIGN (in UTF-16)",
          "68: var s = '';",
          "69: s += decoder.write(buffer.slice(0, 3)); // complete lead surrogate",
          "70: assert.equal(s, '');",
          "71: s += decoder.write(buffer.slice(3, 6)); // complete trail surrogate",
          "72: assert.equal(s, '\\uD83D\\uDC4D'); // THUMBS UP SIGN (in UTF-16)",
          "74: var s = '';",
          "75: s += decoder.write(buffer.slice(0, 4)); // complete lead surrogate",
          "76: assert.equal(s, '');",
          "77: s += decoder.write(buffer.slice(4, 5));",
          "78: s += decoder.write(buffer.slice(5, 6)); // complete trail surrogate",
          "79: assert.equal(s, '\\uD83D\\uDC4D'); // THUMBS UP SIGN (in UTF-16)",
          "81: var s = '';",
          "82: s += decoder.write(buffer.slice(0, 5)); // complete lead surrogate",
          "83: assert.equal(s, '');",
          "84: s += decoder.write(buffer.slice(5, 6)); // complete trail surrogate",
          "85: assert.equal(s, '\\uD83D\\uDC4D'); // THUMBS UP SIGN (in UTF-16)",
          "87: var s = '';",
          "88: s += decoder.write(buffer.slice(0, 6));",
          "89: assert.equal(s, '\\uD83D\\uDC4D'); // THUMBS UP SIGN (in UTF-16)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7cb0f5f84a2541578df8e62fcbe098108b0b8f43",
      "candidate_info": {
        "commit_hash": "7cb0f5f84a2541578df8e62fcbe098108b0b8f43",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7cb0f5f84a2541578df8e62fcbe098108b0b8f43",
        "files": [
          "Makefile",
          "tools/installer.js"
        ],
        "message": "install: update install.js to use `process.config`\n\nNow that the node_prefix is available from within node, we can use it :)",
        "before_after_code_files": [
          "tools/installer.js||tools/installer.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/installer.js||tools/installer.js": [
          "File: tools/installer.js -> tools/installer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: var fs = require('fs'),",
          "2:     path = require('path'),",
          "3:     exec = require('child_process').exec,",
          "7: if (cmd !== 'install' && cmd !== 'uninstall') {",
          "8:   console.error('Unknown command: ' + cmd);",
          "9:   process.exit(1);",
          "10: }",
          "19:     node_prefix = variables.node_prefix || '/usr/local';",
          "",
          "[Removed Lines]",
          "4:     options = fs.readFileSync(process.argv[2]).toString(),",
          "5:     cmd = process.argv[3];",
          "14: options = options.replace(/'/gi, '\"')",
          "17: options = JSON.parse(options.split('\\n').slice(1).join(''));",
          "18: var variables = options.variables,",
          "",
          "[Added Lines]",
          "4:     cmd = process.argv[2];",
          "12: var variables = process.config.variables,",
          "",
          "---------------"
        ]
      }
    }
  ]
}