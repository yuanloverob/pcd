{
  "cve_id": "CVE-2019-5716",
  "cve_desc": "In Wireshark 2.6.0 to 2.6.5, the 6LoWPAN dissector could crash. This was addressed in epan/dissectors/packet-6lowpan.c by avoiding use of a TVB before its creation.",
  "repo": "wireshark/wireshark",
  "patch_hash": "62e81562e4e3a33dad705b1b66a3407afbde3242",
  "patch_info": {
    "commit_hash": "62e81562e4e3a33dad705b1b66a3407afbde3242",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/62e81562e4e3a33dad705b1b66a3407afbde3242",
    "files": [
      "epan/dissectors/packet-6lowpan.c"
    ],
    "message": "6lowpan: don't try to use (new) TVB that wasn't created.\n\nIf the IPHC TVB wasn't created then bail out of dissection before trying\nto use it.\n\nBug: 15217\nChange-Id: I6e297590cdf86e13b0185f75f1d409888f2498d8\nReviewed-on: https://code.wireshark.org/review/31308\nPetri-Dish: Jeff Morriss <jeff.morriss.ws@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-6lowpan.c||epan/dissectors/packet-6lowpan.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-6lowpan.c||epan/dissectors/packet-6lowpan.c": [
      "File: epan/dissectors/packet-6lowpan.c -> epan/dissectors/packet-6lowpan.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1219:         next = dissect_6lowpan_6loRH(next, offset, lowpan_tree);",
      "1220:         if (tvb_get_bits8(next, 0, LOWPAN_PATTERN_IPHC_BITS) == LOWPAN_PATTERN_IPHC) {",
      "1221:             next = dissect_6lowpan_iphc(next, pinfo, lowpan_tree, -1, src_iid, dst_iid);",
      "1222:         }",
      "1223:         if (tvb_get_bits8(next, 0, LOWPAN_PATTERN_HC1_BITS) == LOWPAN_PATTERN_HC1) {",
      "1224:             next = dissect_6lowpan_hc1(next, pinfo, lowpan_tree, -1, src_iid, dst_iid);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1222:             if (!next) return tvb_captured_length(tvb);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2b2eea1793dbff813896e1ae9dff1bedb39ee010",
      "candidate_info": {
        "commit_hash": "2b2eea1793dbff813896e1ae9dff1bedb39ee010",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/2b2eea1793dbff813896e1ae9dff1bedb39ee010",
        "files": [
          "epan/dissectors/packet-6lowpan.c"
        ],
        "message": "6lowpan: don't try to use (new) TVB that wasn't created.\n\nIf the IPHC TVB wasn't created then bail out of dissection before trying\nto use it.\n\nBug: 15217\nChange-Id: I6e297590cdf86e13b0185f75f1d409888f2498d8\nReviewed-on: https://code.wireshark.org/review/31308\nPetri-Dish: Jeff Morriss <jeff.morriss.ws@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 62e81562e4e3a33dad705b1b66a3407afbde3242)\nReviewed-on: https://code.wireshark.org/review/31311\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-6lowpan.c||epan/dissectors/packet-6lowpan.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-6lowpan.c||epan/dissectors/packet-6lowpan.c"
          ],
          "candidate": [
            "epan/dissectors/packet-6lowpan.c||epan/dissectors/packet-6lowpan.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-6lowpan.c||epan/dissectors/packet-6lowpan.c": [
          "File: epan/dissectors/packet-6lowpan.c -> epan/dissectors/packet-6lowpan.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1218:         next = dissect_6lowpan_6loRH(next, offset, lowpan_tree);",
          "1219:         if (tvb_get_bits8(next, 0, LOWPAN_PATTERN_IPHC_BITS) == LOWPAN_PATTERN_IPHC) {",
          "1220:             next = dissect_6lowpan_iphc(next, pinfo, lowpan_tree, -1, src_iid, dst_iid);",
          "1221:         }",
          "1222:         if (tvb_get_bits8(next, 0, LOWPAN_PATTERN_HC1_BITS) == LOWPAN_PATTERN_HC1) {",
          "1223:             next = dissect_6lowpan_hc1(next, pinfo, lowpan_tree, -1, src_iid, dst_iid);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1221:             if (!next) return tvb_captured_length(tvb);",
          "",
          "---------------"
        ]
      }
    }
  ]
}