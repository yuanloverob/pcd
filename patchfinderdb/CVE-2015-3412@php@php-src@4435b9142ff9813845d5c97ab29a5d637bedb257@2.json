{
  "cve_id": "CVE-2015-3412",
  "cve_desc": "PHP before 5.4.40, 5.5.x before 5.5.24, and 5.6.x before 5.6.8 does not ensure that pathnames lack %00 sequences, which might allow remote attackers to read arbitrary files via crafted input to an application that calls the stream_resolve_include_path function in ext/standard/streamsfuncs.c, as demonstrated by a filename\\0.extension attack that bypasses an intended configuration in which client users may read files with only one specific extension.",
  "repo": "php/php-src",
  "patch_hash": "4435b9142ff9813845d5c97ab29a5d637bedb257",
  "patch_info": {
    "commit_hash": "4435b9142ff9813845d5c97ab29a5d637bedb257",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/4435b9142ff9813845d5c97ab29a5d637bedb257",
    "files": [
      "ext/dom/document.c",
      "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
      "ext/fileinfo/fileinfo.c",
      "ext/fileinfo/tests/finfo_file_basic.phpt",
      "ext/gd/gd.c",
      "ext/hash/hash.c",
      "ext/hash/tests/hash_hmac_file_error.phpt",
      "ext/pgsql/pgsql.c",
      "ext/standard/link.c",
      "ext/standard/streamsfuncs.c",
      "ext/xmlwriter/php_xmlwriter.c",
      "ext/zlib/zlib.c"
    ],
    "message": "Fixed bug #69353 (Missing null byte checks for paths in various PHP extensions)",
    "before_after_code_files": [
      "ext/dom/document.c||ext/dom/document.c",
      "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
      "ext/fileinfo/fileinfo.c||ext/fileinfo/fileinfo.c",
      "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt",
      "ext/gd/gd.c||ext/gd/gd.c",
      "ext/hash/hash.c||ext/hash/hash.c",
      "ext/hash/tests/hash_hmac_file_error.phpt||ext/hash/tests/hash_hmac_file_error.phpt",
      "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c",
      "ext/standard/link.c||ext/standard/link.c",
      "ext/standard/streamsfuncs.c||ext/standard/streamsfuncs.c",
      "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c",
      "ext/zlib/zlib.c||ext/zlib/zlib.c"
    ]
  },
  "patch_diff": {
    "ext/dom/document.c||ext/dom/document.c": [
      "File: ext/dom/document.c -> ext/dom/document.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1580:  xmlInitParser();",
      "1582:  if (mode == DOM_LOAD_FILE) {",
      "1583:   char *file_dest = _dom_get_valid_file_path(source, resolved_path, MAXPATHLEN  TSRMLS_CC);",
      "1584:   if (file_dest) {",
      "1585:    ctxt = xmlCreateFileParserCtxt(file_dest);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1583:   if (CHECK_NULL_PATH(source, source_len)) {",
      "1584:    return NULL;",
      "1585:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2169:  id = getThis();",
      "2172:   return;",
      "2173:  }",
      "",
      "[Removed Lines]",
      "2171:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|l\", &source, &source_len, &options) == FAILURE) {",
      "",
      "[Added Lines]",
      "2174:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p|l\", &source, &source_len, &options) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt": [
      "File: ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt -> ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "13: $doc = new DOMDocument();",
      "14: $result = $doc->loadHTMLFile(\"\");",
      "15: assert('$result === false');",
      "16: ?>",
      "17: --EXPECTF--",
      "18: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile(): Empty string supplied as input %s",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16: $doc = new DOMDocument();",
      "17: $result = $doc->loadHTMLFile(\"text.html\\0something\");",
      "18: assert('$result === null');",
      "23: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile() expects parameter 1 to be a valid path, string given %s",
      "",
      "---------------"
    ],
    "ext/fileinfo/fileinfo.c||ext/fileinfo/fileinfo.c": [
      "File: ext/fileinfo/fileinfo.c -> ext/fileinfo/fileinfo.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "506:     RETVAL_FALSE;",
      "507:     goto clean;",
      "508:    }",
      "510:    wrap = php_stream_locate_url_wrapper(buffer, &tmp2, 0 TSRMLS_CC);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "509:    if (CHECK_NULL_PATH(buffer, buffer_len)) {",
      "510:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
      "511:     RETVAL_FALSE;",
      "512:     goto clean;",
      "513:    }",
      "",
      "---------------"
    ],
    "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt": [
      "File: ext/fileinfo/tests/finfo_file_basic.phpt -> ext/fileinfo/tests/finfo_file_basic.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: var_dump( finfo_file( $finfo, __FILE__) );",
      "20: var_dump( finfo_file( $finfo, __FILE__, FILEINFO_CONTINUE ) );",
      "21: var_dump( finfo_file( $finfo, $magicFile ) );",
      "23: ?>",
      "24: ===DONE===",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: var_dump( finfo_file( $finfo, $magicFile.chr(0).$magicFile) );",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "27: string(28) \"text/x-php; charset=us-ascii\"",
      "28: string(22) \"PHP script, ASCII text\"",
      "29: string(25) \"text/plain; charset=utf-8\"",
      "30: ===DONE===",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32: Warning: finfo_file(): Invalid path in %s/finfo_file_basic.php on line %d",
      "33: bool(false)",
      "",
      "---------------"
    ],
    "ext/gd/gd.c||ext/gd/gd.c": [
      "File: ext/gd/gd.c -> ext/gd/gd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1495:  gdFontPtr font;",
      "1496:  php_stream *stream;",
      "1499:   return;",
      "1500:  }",
      "",
      "[Removed Lines]",
      "1498:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &file, &file_name) == FAILURE) {",
      "",
      "[Added Lines]",
      "1498:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &file, &file_name) == FAILURE) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2438:  long ignore_warning;",
      "2439: #endif",
      "2440:  if (image_type == PHP_GDIMG_TYPE_GD2PART) {",
      "2442:    return;",
      "2443:   }",
      "2444:   if (width < 1 || height < 1) {",
      "",
      "[Removed Lines]",
      "2441:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"sllll\", &file, &file_len, &srcx, &srcy, &width, &height) == FAILURE) {",
      "",
      "[Added Lines]",
      "2441:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"pllll\", &file, &file_len, &srcx, &srcy, &width, &height) == FAILURE) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2446:    RETURN_FALSE;",
      "2447:   }",
      "2448:  } else {",
      "2450:    return;",
      "2451:   }",
      "2452:  }",
      "",
      "[Removed Lines]",
      "2449:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &file, &file_len) == FAILURE) {",
      "",
      "[Added Lines]",
      "2449:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &file, &file_len) == FAILURE) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4178:  char *enc, **enc_vector;",
      "4179:  int enc_len, *f_ind;",
      "4182:   return;",
      "4183:  }",
      "",
      "[Removed Lines]",
      "4181:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs\", &fnt, &enc, &enc_len) == FAILURE) {",
      "",
      "[Added Lines]",
      "4181:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rp\", &fnt, &enc, &enc_len) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/hash/hash.c||ext/hash/hash.c": [
      "File: ext/hash/hash.c -> ext/hash/hash.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "142:  }",
      "143:  if (isfilename) {",
      "144:   if (CHECK_NULL_PATH(data, data_len)) {",
      "145:    RETURN_FALSE;",
      "146:   }",
      "147:   stream = php_stream_open_wrapper_ex(data, \"rb\", REPORT_ERRORS, NULL, DEFAULT_CONTEXT);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "145:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "222:   RETURN_FALSE;",
      "223:  }",
      "224:  if (isfilename) {",
      "225:   stream = php_stream_open_wrapper_ex(data, \"rb\", REPORT_ERRORS, NULL, DEFAULT_CONTEXT);",
      "226:   if (!stream) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "226:   if (CHECK_NULL_PATH(data, data_len)) {",
      "227:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
      "228:    RETURN_FALSE;",
      "229:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "449:  char *filename, buf[1024];",
      "450:  int filename_len, n;",
      "453:   return;",
      "454:  }",
      "",
      "[Removed Lines]",
      "452:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs|r\", &zhash, &filename, &filename_len, &zcontext) == FAILURE) {",
      "",
      "[Added Lines]",
      "457:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rp|r\", &zhash, &filename, &filename_len, &zcontext) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/hash/tests/hash_hmac_file_error.phpt||ext/hash/tests/hash_hmac_file_error.phpt": [
      "File: ext/hash/tests/hash_hmac_file_error.phpt -> ext/hash/tests/hash_hmac_file_error.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: echo \"\\n-- Testing hash_hmac_file() function with invalid hash algorithm --\\n\";",
      "29: hash_hmac_file('foo', $file, $key, TRUE);",
      "31: ?>",
      "32: ===Done===",
      "33: --EXPECTF--",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31: echo \"\\n-- Testing hash_hmac_file() function with bad path --\\n\";",
      "32: hash_hmac_file('crc32', $file.chr(0).$file, $key, TRUE);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "51: -- Testing hash_hmac_file() function with invalid hash algorithm --",
      "53: Warning: hash_hmac_file(): Unknown hashing algorithm: foo in %s on line %d",
      "54: ===Done===",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "58: -- Testing hash_hmac_file() function with bad path --",
      "60: Warning: hash_hmac_file(): Invalid path in %s on line %d",
      "",
      "---------------"
    ],
    "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c": [
      "File: ext/pgsql/pgsql.c -> ext/pgsql/pgsql.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3014:  php_stream *stream;",
      "3015:  id = PGG(default_link);",
      "3018:   return;",
      "3019:  }",
      "",
      "[Removed Lines]",
      "3017:  if (zend_parse_parameters(argc TSRMLS_CC, \"s|sr\", &z_filename, &z_filename_len, &mode, &mode_len, &pgsql_link) == FAILURE) {",
      "",
      "[Added Lines]",
      "3017:  if (zend_parse_parameters(argc TSRMLS_CC, \"p|sr\", &z_filename, &z_filename_len, &mode, &mode_len, &pgsql_link) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/standard/link.c||ext/standard/link.c": [
      "File: ext/standard/link.c -> ext/standard/link.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "59:  char buff[MAXPATHLEN];",
      "60:  int ret;",
      "63:   return;",
      "64:  }",
      "",
      "[Removed Lines]",
      "62:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &link, &link_len) == FAILURE) {",
      "",
      "[Added Lines]",
      "62:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &link, &link_len) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/standard/streamsfuncs.c||ext/standard/streamsfuncs.c": [
      "File: ext/standard/streamsfuncs.c -> ext/standard/streamsfuncs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1549:  char *filename, *resolved_path;",
      "1550:  int filename_len;",
      "1553:   return;",
      "1554:  }",
      "",
      "[Removed Lines]",
      "1552:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &filename, &filename_len) == FAILURE) {",
      "",
      "[Added Lines]",
      "1552:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &filename, &filename_len) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c": [
      "File: ext/xmlwriter/php_xmlwriter.c -> ext/xmlwriter/php_xmlwriter.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1759:  void *ioctx;",
      "1760: #endif",
      "1763:   return;",
      "1764:  }",
      "",
      "[Removed Lines]",
      "1762:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &source, &source_len) == FAILURE) {",
      "",
      "[Added Lines]",
      "1762:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &source, &source_len) == FAILURE) {",
      "",
      "---------------"
    ],
    "ext/zlib/zlib.c||ext/zlib/zlib.c": [
      "File: ext/zlib/zlib.c -> ext/zlib/zlib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "581:  php_stream *stream;",
      "582:  long use_include_path = 0;",
      "585:   return;",
      "586:  }",
      "",
      "[Removed Lines]",
      "584:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ss|l\", &filename, &filename_len, &mode, &mode_len, &use_include_path) == FAILURE) {",
      "",
      "[Added Lines]",
      "584:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ps|l\", &filename, &filename_len, &mode, &mode_len, &use_include_path) == FAILURE) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "609:  int size;",
      "610:  long use_include_path = 0;",
      "613:   return;",
      "614:  }",
      "",
      "[Removed Lines]",
      "612:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|l\", &filename, &filename_len, &use_include_path) == FAILURE) {",
      "",
      "[Added Lines]",
      "612:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p|l\", &filename, &filename_len, &use_include_path) == FAILURE) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "52b93f0cfd3cba7ff98cc5198df6ca4f23865f80",
      "candidate_info": {
        "commit_hash": "52b93f0cfd3cba7ff98cc5198df6ca4f23865f80",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/52b93f0cfd3cba7ff98cc5198df6ca4f23865f80",
        "files": [
          "ext/dom/document.c",
          "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
          "ext/fileinfo/fileinfo.c",
          "ext/fileinfo/tests/finfo_file_basic.phpt",
          "ext/gd/gd.c",
          "ext/hash/hash.c",
          "ext/hash/tests/hash_hmac_file_error.phpt",
          "ext/pgsql/pgsql.c",
          "ext/standard/link.c",
          "ext/standard/streamsfuncs.c",
          "ext/xmlwriter/php_xmlwriter.c",
          "ext/zlib/zlib.c"
        ],
        "message": "Fixed bug #69353 (Missing null byte checks for paths in various PHP extensions)",
        "before_after_code_files": [
          "ext/dom/document.c||ext/dom/document.c",
          "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
          "ext/fileinfo/fileinfo.c||ext/fileinfo/fileinfo.c",
          "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt",
          "ext/gd/gd.c||ext/gd/gd.c",
          "ext/hash/hash.c||ext/hash/hash.c",
          "ext/hash/tests/hash_hmac_file_error.phpt||ext/hash/tests/hash_hmac_file_error.phpt",
          "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c",
          "ext/standard/link.c||ext/standard/link.c",
          "ext/standard/streamsfuncs.c||ext/standard/streamsfuncs.c",
          "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c",
          "ext/zlib/zlib.c||ext/zlib/zlib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/dom/document.c||ext/dom/document.c",
            "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
            "ext/fileinfo/fileinfo.c||ext/fileinfo/fileinfo.c",
            "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt",
            "ext/gd/gd.c||ext/gd/gd.c",
            "ext/hash/hash.c||ext/hash/hash.c",
            "ext/hash/tests/hash_hmac_file_error.phpt||ext/hash/tests/hash_hmac_file_error.phpt",
            "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c",
            "ext/standard/link.c||ext/standard/link.c",
            "ext/standard/streamsfuncs.c||ext/standard/streamsfuncs.c",
            "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c",
            "ext/zlib/zlib.c||ext/zlib/zlib.c"
          ],
          "candidate": [
            "ext/dom/document.c||ext/dom/document.c",
            "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
            "ext/fileinfo/fileinfo.c||ext/fileinfo/fileinfo.c",
            "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt",
            "ext/gd/gd.c||ext/gd/gd.c",
            "ext/hash/hash.c||ext/hash/hash.c",
            "ext/hash/tests/hash_hmac_file_error.phpt||ext/hash/tests/hash_hmac_file_error.phpt",
            "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c",
            "ext/standard/link.c||ext/standard/link.c",
            "ext/standard/streamsfuncs.c||ext/standard/streamsfuncs.c",
            "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c",
            "ext/zlib/zlib.c||ext/zlib/zlib.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/dom/document.c||ext/dom/document.c": [
          "File: ext/dom/document.c -> ext/dom/document.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1580:  xmlInitParser();",
          "1582:  if (mode == DOM_LOAD_FILE) {",
          "1583:   char *file_dest = _dom_get_valid_file_path(source, resolved_path, MAXPATHLEN  TSRMLS_CC);",
          "1584:   if (file_dest) {",
          "1585:    ctxt = xmlCreateFileParserCtxt(file_dest);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1583:   if (CHECK_NULL_PATH(source, source_len)) {",
          "1584:    return NULL;",
          "1585:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2177:  id = getThis();",
          "2180:   return;",
          "2181:  }",
          "",
          "[Removed Lines]",
          "2179:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|l\", &source, &source_len, &options) == FAILURE) {",
          "",
          "[Added Lines]",
          "2182:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p|l\", &source, &source_len, &options) == FAILURE) {",
          "",
          "---------------"
        ],
        "ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt||ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt": [
          "File: ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt -> ext/dom/tests/DOMDocument_loadHTMLfile_error2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: $doc = new DOMDocument();",
          "14: $result = $doc->loadHTMLFile(\"\");",
          "15: assert('$result === false');",
          "16: ?>",
          "17: --EXPECTF--",
          "18: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile(): Empty string supplied as input %s",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: $doc = new DOMDocument();",
          "17: $result = $doc->loadHTMLFile(\"text.html\\0something\");",
          "18: assert('$result === null');",
          "23: %r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile() expects parameter 1 to be a valid path, string given %s",
          "",
          "---------------"
        ],
        "ext/fileinfo/fileinfo.c||ext/fileinfo/fileinfo.c": [
          "File: ext/fileinfo/fileinfo.c -> ext/fileinfo/fileinfo.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "506:     RETVAL_FALSE;",
          "507:     goto clean;",
          "508:    }",
          "510:    wrap = php_stream_locate_url_wrapper(buffer, &tmp2, 0 TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "509:    if (CHECK_NULL_PATH(buffer, buffer_len)) {",
          "510:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
          "511:     RETVAL_FALSE;",
          "512:     goto clean;",
          "513:    }",
          "",
          "---------------"
        ],
        "ext/fileinfo/tests/finfo_file_basic.phpt||ext/fileinfo/tests/finfo_file_basic.phpt": [
          "File: ext/fileinfo/tests/finfo_file_basic.phpt -> ext/fileinfo/tests/finfo_file_basic.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: var_dump( finfo_file( $finfo, __FILE__) );",
          "20: var_dump( finfo_file( $finfo, __FILE__, FILEINFO_CONTINUE ) );",
          "21: var_dump( finfo_file( $finfo, $magicFile ) );",
          "23: ?>",
          "24: ===DONE===",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var_dump( finfo_file( $finfo, $magicFile.chr(0).$magicFile) );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: string(28) \"text/x-php; charset=us-ascii\"",
          "28: string(22) \"PHP script, ASCII text\"",
          "29: string(25) \"text/plain; charset=utf-8\"",
          "30: ===DONE===",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: Warning: finfo_file(): Invalid path in %s/finfo_file_basic.php on line %d",
          "33: bool(false)",
          "",
          "---------------"
        ],
        "ext/gd/gd.c||ext/gd/gd.c": [
          "File: ext/gd/gd.c -> ext/gd/gd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1417:  gdFontPtr font;",
          "1418:  php_stream *stream;",
          "1421:   return;",
          "1422:  }",
          "",
          "[Removed Lines]",
          "1420:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &file, &file_name) == FAILURE) {",
          "",
          "[Added Lines]",
          "1420:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &file, &file_name) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2354:  long ignore_warning;",
          "2356:  if (image_type == PHP_GDIMG_TYPE_GD2PART) {",
          "2358:    return;",
          "2359:   }",
          "2360:   if (width < 1 || height < 1) {",
          "",
          "[Removed Lines]",
          "2357:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"sllll\", &file, &file_len, &srcx, &srcy, &width, &height) == FAILURE) {",
          "",
          "[Added Lines]",
          "2357:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"pllll\", &file, &file_len, &srcx, &srcy, &width, &height) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2362:    RETURN_FALSE;",
          "2363:   }",
          "2364:  } else {",
          "2366:    return;",
          "2367:   }",
          "2368:  }",
          "",
          "[Removed Lines]",
          "2365:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &file, &file_len) == FAILURE) {",
          "",
          "[Added Lines]",
          "2365:   if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &file, &file_len) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4031:  char *enc, **enc_vector;",
          "4032:  int enc_len, *f_ind;",
          "4035:   return;",
          "4036:  }",
          "",
          "[Removed Lines]",
          "4034:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs\", &fnt, &enc, &enc_len) == FAILURE) {",
          "",
          "[Added Lines]",
          "4034:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rp\", &fnt, &enc, &enc_len) == FAILURE) {",
          "",
          "---------------"
        ],
        "ext/hash/hash.c||ext/hash/hash.c": [
          "File: ext/hash/hash.c -> ext/hash/hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:  }",
          "144:  if (isfilename) {",
          "145:   if (CHECK_NULL_PATH(data, data_len)) {",
          "146:    RETURN_FALSE;",
          "147:   }",
          "148:   stream = php_stream_open_wrapper_ex(data, \"rb\", REPORT_ERRORS, NULL, DEFAULT_CONTEXT);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "258:   RETURN_FALSE;",
          "259:  }",
          "260:  if (isfilename) {",
          "261:   stream = php_stream_open_wrapper_ex(data, \"rb\", REPORT_ERRORS, NULL, DEFAULT_CONTEXT);",
          "262:   if (!stream) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "262:   if (CHECK_NULL_PATH(data, data_len)) {",
          "263:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid path\");",
          "264:    RETURN_FALSE;",
          "265:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "462:  char *filename, buf[1024];",
          "463:  int filename_len, n;",
          "466:   return;",
          "467:  }",
          "",
          "[Removed Lines]",
          "465:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs|r\", &zhash, &filename, &filename_len, &zcontext) == FAILURE) {",
          "",
          "[Added Lines]",
          "470:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rp|r\", &zhash, &filename, &filename_len, &zcontext) == FAILURE) {",
          "",
          "---------------"
        ],
        "ext/hash/tests/hash_hmac_file_error.phpt||ext/hash/tests/hash_hmac_file_error.phpt": [
          "File: ext/hash/tests/hash_hmac_file_error.phpt -> ext/hash/tests/hash_hmac_file_error.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: echo \"\\n-- Testing hash_hmac_file() function with invalid hash algorithm --\\n\";",
          "29: hash_hmac_file('foo', $file, $key, TRUE);",
          "31: ?>",
          "32: ===Done===",
          "33: --EXPECTF--",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: echo \"\\n-- Testing hash_hmac_file() function with bad path --\\n\";",
          "32: hash_hmac_file('crc32', $file.chr(0).$file, $key, TRUE);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51: -- Testing hash_hmac_file() function with invalid hash algorithm --",
          "53: Warning: hash_hmac_file(): Unknown hashing algorithm: foo in %s on line %d",
          "54: ===Done===",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: -- Testing hash_hmac_file() function with bad path --",
          "60: Warning: hash_hmac_file(): Invalid path in %s on line %d",
          "",
          "---------------"
        ],
        "ext/pgsql/pgsql.c||ext/pgsql/pgsql.c": [
          "File: ext/pgsql/pgsql.c -> ext/pgsql/pgsql.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3014:  php_stream *stream;",
          "3015:  id = PGG(default_link);",
          "3018:   return;",
          "3019:  }",
          "",
          "[Removed Lines]",
          "3017:  if (zend_parse_parameters(argc TSRMLS_CC, \"s|sr\", &z_filename, &z_filename_len, &mode, &mode_len, &pgsql_link) == FAILURE) {",
          "",
          "[Added Lines]",
          "3017:  if (zend_parse_parameters(argc TSRMLS_CC, \"p|sr\", &z_filename, &z_filename_len, &mode, &mode_len, &pgsql_link) == FAILURE) {",
          "",
          "---------------"
        ],
        "ext/standard/link.c||ext/standard/link.c": [
          "File: ext/standard/link.c -> ext/standard/link.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:  char buff[MAXPATHLEN];",
          "60:  int ret;",
          "63:   return;",
          "64:  }",
          "",
          "[Removed Lines]",
          "62:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &link, &link_len) == FAILURE) {",
          "",
          "[Added Lines]",
          "62:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &link, &link_len) == FAILURE) {",
          "",
          "---------------"
        ],
        "ext/standard/streamsfuncs.c||ext/standard/streamsfuncs.c": [
          "File: ext/standard/streamsfuncs.c -> ext/standard/streamsfuncs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1549:  char *filename, *resolved_path;",
          "1550:  int filename_len;",
          "1553:   return;",
          "1554:  }",
          "",
          "[Removed Lines]",
          "1552:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &filename, &filename_len) == FAILURE) {",
          "",
          "[Added Lines]",
          "1552:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &filename, &filename_len) == FAILURE) {",
          "",
          "---------------"
        ],
        "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c": [
          "File: ext/xmlwriter/php_xmlwriter.c -> ext/xmlwriter/php_xmlwriter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1759:  void *ioctx;",
          "1760: #endif",
          "1763:   return;",
          "1764:  }",
          "",
          "[Removed Lines]",
          "1762:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &source, &source_len) == FAILURE) {",
          "",
          "[Added Lines]",
          "1762:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p\", &source, &source_len) == FAILURE) {",
          "",
          "---------------"
        ],
        "ext/zlib/zlib.c||ext/zlib/zlib.c": [
          "File: ext/zlib/zlib.c -> ext/zlib/zlib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "593:  php_stream *stream;",
          "594:  long use_include_path = 0;",
          "597:   return;",
          "598:  }",
          "",
          "[Removed Lines]",
          "596:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ss|l\", &filename, &filename_len, &mode, &mode_len, &use_include_path) == FAILURE) {",
          "",
          "[Added Lines]",
          "596:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"ps|l\", &filename, &filename_len, &mode, &mode_len, &use_include_path) == FAILURE) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "621:  int size;",
          "622:  long use_include_path = 0;",
          "625:   return;",
          "626:  }",
          "",
          "[Removed Lines]",
          "624:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s|l\", &filename, &filename_len, &use_include_path) == FAILURE) {",
          "",
          "[Added Lines]",
          "624:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"p|l\", &filename, &filename_len, &use_include_path) == FAILURE) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}