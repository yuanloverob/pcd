{
  "cve_id": "CVE-2020-13775",
  "cve_desc": "ZNC 1.8.0 up to 1.8.1-rc1 allows authenticated users to trigger an application crash (with a NULL pointer dereference) if echo-message is not enabled and there is no network.",
  "repo": "znc/znc",
  "patch_hash": "d229761821da38d984a9e4098ad96842490dc001",
  "patch_info": {
    "commit_hash": "d229761821da38d984a9e4098ad96842490dc001",
    "repo": "znc/znc",
    "commit_url": "https://github.com/znc/znc/commit/d229761821da38d984a9e4098ad96842490dc001",
    "files": [
      "src/Client.cpp",
      "test/integration/tests/core.cpp"
    ],
    "message": "Fix echo-message for *status\n\nClose #1705",
    "before_after_code_files": [
      "src/Client.cpp||src/Client.cpp",
      "test/integration/tests/core.cpp||test/integration/tests/core.cpp"
    ]
  },
  "patch_diff": {
    "src/Client.cpp||src/Client.cpp": [
      "File: src/Client.cpp -> src/Client.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1234:         }",
      "1236:         if (sTarget.TrimPrefix(m_pUser->GetStatusPrefix())) {",
      "1237:             if (sTarget.Equals(\"status\")) {",
      "1238:                 CString sMsg = Message.GetText();",
      "1239:                 UserCommand(sMsg);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1237:             EchoMessage(Message);",
      "",
      "---------------"
    ],
    "test/integration/tests/core.cpp||test/integration/tests/core.cpp": [
      "File: test/integration/tests/core.cpp -> test/integration/tests/core.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: #include <gmock/gmock.h>",
      "20: using testing::HasSubstr;",
      "22: namespace znc_inttest {",
      "",
      "[Removed Lines]",
      "17: #include \"znctest.h\"",
      "",
      "[Added Lines]",
      "19: #include \"znctest.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "244:     client.Write(\"USER user/test x x :x\");",
      "245:     QByteArray cap_ls;",
      "246:     client.ReadUntilAndGet(\" LS :\", cap_ls);",
      "248:     client.Write(\"CAP REQ :cap-notify\");",
      "249:     client.ReadUntil(\"ACK :cap-notify\");",
      "250:     client.Write(\"CAP END\");",
      "",
      "[Removed Lines]",
      "247:     ASSERT_THAT(cap_ls.toStdString(), AllOf(HasSubstr(\"cap-notify\"), Not(HasSubstr(\"away-notify\"))));",
      "",
      "[Added Lines]",
      "248:     ASSERT_THAT(cap_ls.toStdString(),",
      "249:                 AllOf(HasSubstr(\"cap-notify\"), Not(HasSubstr(\"away-notify\"))));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "284:     ircd.ReadUntil(\"JOIN #znc secret\");",
      "285: }",
      "287: }  // namespace",
      "288: }  // namespace znc_inttest",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "289: TEST_F(ZNCTest, StatusEchoMessage) {",
      "290:     auto znc = Run();",
      "291:     auto ircd = ConnectIRCd();",
      "292:     auto client = LoginClient();",
      "293:     client.Write(\"CAP REQ :echo-message\");",
      "294:     client.Write(\"PRIVMSG *status :blah\");",
      "295:     client.ReadUntil(\":nick!user@irc.znc.in PRIVMSG *status :blah\");",
      "296:     client.ReadUntil(\":*status!znc@znc.in PRIVMSG nick :Unknown command\");",
      "297: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2390ad111bde16a78c98ac44572090b33c3bd2d8",
      "candidate_info": {
        "commit_hash": "2390ad111bde16a78c98ac44572090b33c3bd2d8",
        "repo": "znc/znc",
        "commit_url": "https://github.com/znc/znc/commit/2390ad111bde16a78c98ac44572090b33c3bd2d8",
        "files": [
          "src/Client.cpp",
          "test/integration/tests/core.cpp"
        ],
        "message": "Fix null pointer dereference in echo-message\n\nThe bug was introduced while fixing #1705. If a client did not enable\necho-message, and doesn't have a network, it crashes.\n\nThanks to LunarBNC for reporting this",
        "before_after_code_files": [
          "src/Client.cpp||src/Client.cpp",
          "test/integration/tests/core.cpp||test/integration/tests/core.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "src/Client.cpp||src/Client.cpp",
            "test/integration/tests/core.cpp||test/integration/tests/core.cpp"
          ],
          "candidate": [
            "src/Client.cpp||src/Client.cpp",
            "test/integration/tests/core.cpp||test/integration/tests/core.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/Client.cpp||src/Client.cpp": [
          "File: src/Client.cpp -> src/Client.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "889:     CMessage EchoedMessage = Message;",
          "890:     for (CClient* pClient : GetClients()) {",
          "891:         if (pClient->HasEchoMessage() ||",
          "893:                                  pClient->HasSelfMessage()))) {",
          "894:             EchoedMessage.SetNick(GetNickMask());",
          "895:             pClient->PutClient(EchoedMessage);",
          "",
          "[Removed Lines]",
          "892:             (pClient != this && (m_pNetwork->IsChan(Message.GetParam(0)) ||",
          "",
          "[Added Lines]",
          "892:             (pClient != this && ((m_pNetwork && m_pNetwork->IsChan(Message.GetParam(0))) ||",
          "",
          "---------------"
        ],
        "test/integration/tests/core.cpp||test/integration/tests/core.cpp": [
          "File: test/integration/tests/core.cpp -> test/integration/tests/core.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "297:     client.Write(\"PRIVMSG *status :blah\");",
          "298:     client.ReadUntil(\":nick!user@irc.znc.in PRIVMSG *status :blah\");",
          "299:     client.ReadUntil(\":*status!znc@znc.in PRIVMSG nick :Unknown command\");",
          "300: }",
          "302: }  // namespace",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "300:     client.Write(\"znc delnetwork test\");",
          "301:     client.ReadUntil(\"Network deleted\");",
          "302:     auto client2 = LoginClient();",
          "303:     client2.Write(\"PRIVMSG *status :blah2\");",
          "304:     client2.ReadUntil(\":*status!znc@znc.in PRIVMSG nick :Unknown command\");",
          "305:     auto client3 = LoginClient();",
          "306:     client3.Write(\"PRIVMSG *status :blah3\");",
          "307:     client3.ReadUntil(\":*status!znc@znc.in PRIVMSG nick :Unknown command\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}