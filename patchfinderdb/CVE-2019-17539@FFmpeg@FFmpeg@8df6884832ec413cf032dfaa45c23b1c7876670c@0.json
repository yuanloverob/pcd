{
  "cve_id": "CVE-2019-17539",
  "cve_desc": "In FFmpeg before 4.2, avcodec_open2 in libavcodec/utils.c allows a NULL pointer dereference and possibly unspecified other impact when there is no valid close function pointer.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "8df6884832ec413cf032dfaa45c23b1c7876670c",
  "patch_info": {
    "commit_hash": "8df6884832ec413cf032dfaa45c23b1c7876670c",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/8df6884832ec413cf032dfaa45c23b1c7876670c",
    "files": [
      "libavcodec/utils.c"
    ],
    "message": "avcodec/utils: Check close before calling it\n\nFixes: NULL pointer dereference\nFixes: 15733/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_IDF_fuzzer-5658616977162240\n\nReviewed-by: Paul B Mahol <onemda@gmail.com>\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavcodec/utils.c||libavcodec/utils.c"
    ]
  },
  "patch_diff": {
    "libavcodec/utils.c||libavcodec/utils.c": [
      "File: libavcodec/utils.c -> libavcodec/utils.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1025:     return ret;",
      "1026: free_and_end:",
      "1028:         (codec_init_ok ||",
      "1029:          (avctx->codec->caps_internal & FF_CODEC_CAP_INIT_CLEANUP)))",
      "1030:         avctx->codec->close(avctx);",
      "",
      "[Removed Lines]",
      "1027:     if (avctx->codec &&",
      "",
      "[Added Lines]",
      "1027:     if (avctx->codec && avctx->codec->close &&",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7200fd51211f509c390e24398635920a460406ca",
      "candidate_info": {
        "commit_hash": "7200fd51211f509c390e24398635920a460406ca",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/7200fd51211f509c390e24398635920a460406ca",
        "files": [
          "libavcodec/utils.c"
        ],
        "message": "avcodec/utils: Check close before calling it\n\nFixes: NULL pointer dereference\nFixes: 15733/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_IDF_fuzzer-5658616977162240\n\nReviewed-by: Paul B Mahol <onemda@gmail.com>\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 8df6884832ec413cf032dfaa45c23b1c7876670c)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/utils.c||libavcodec/utils.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/utils.c||libavcodec/utils.c"
          ],
          "candidate": [
            "libavcodec/utils.c||libavcodec/utils.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/utils.c||libavcodec/utils.c": [
          "File: libavcodec/utils.c -> libavcodec/utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1014:     return ret;",
          "1015: free_and_end:",
          "1017:         (codec_init_ok ||",
          "1018:          (avctx->codec->caps_internal & FF_CODEC_CAP_INIT_CLEANUP)))",
          "1019:         avctx->codec->close(avctx);",
          "",
          "[Removed Lines]",
          "1016:     if (avctx->codec &&",
          "",
          "[Added Lines]",
          "1016:     if (avctx->codec && avctx->codec->close &&",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb456b8fb00e04bedf117cb4b72c87a9c3db5145",
      "candidate_info": {
        "commit_hash": "cb456b8fb00e04bedf117cb4b72c87a9c3db5145",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/cb456b8fb00e04bedf117cb4b72c87a9c3db5145",
        "files": [
          "libavcodec/utils.c"
        ],
        "message": "avcodec/utils: Check close before calling it\n\nFixes: NULL pointer dereference\nFixes: 15733/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_IDF_fuzzer-5658616977162240\n\nReviewed-by: Paul B Mahol <onemda@gmail.com>\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 8df6884832ec413cf032dfaa45c23b1c7876670c)",
        "before_after_code_files": [
          "libavcodec/utils.c||libavcodec/utils.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/utils.c||libavcodec/utils.c"
          ],
          "candidate": [
            "libavcodec/utils.c||libavcodec/utils.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/utils.c||libavcodec/utils.c": [
          "File: libavcodec/utils.c -> libavcodec/utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1721:     return ret;",
          "1722: free_and_end:",
          "1724:         (avctx->codec->caps_internal & FF_CODEC_CAP_INIT_CLEANUP))",
          "1725:         avctx->codec->close(avctx);",
          "",
          "[Removed Lines]",
          "1723:     if (avctx->codec &&",
          "",
          "[Added Lines]",
          "1723:     if (avctx->codec && avctx->codec->close &&",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c3b7afa4e917d748f0c3f8237b04ebdd99bdcacb",
      "candidate_info": {
        "commit_hash": "c3b7afa4e917d748f0c3f8237b04ebdd99bdcacb",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/c3b7afa4e917d748f0c3f8237b04ebdd99bdcacb",
        "files": [
          "libavcodec/utils.c"
        ],
        "message": "avcodec/utils: Check close before calling it\n\nFixes: NULL pointer dereference\nFixes: 15733/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_IDF_fuzzer-5658616977162240\n\nReviewed-by: Paul B Mahol <onemda@gmail.com>\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 8df6884832ec413cf032dfaa45c23b1c7876670c)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/utils.c||libavcodec/utils.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/utils.c||libavcodec/utils.c"
          ],
          "candidate": [
            "libavcodec/utils.c||libavcodec/utils.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/utils.c||libavcodec/utils.c": [
          "File: libavcodec/utils.c -> libavcodec/utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1119:     return ret;",
          "1120: free_and_end:",
          "1122:         (codec_init_ok ||",
          "1123:          (avctx->codec->caps_internal & FF_CODEC_CAP_INIT_CLEANUP)))",
          "1124:         avctx->codec->close(avctx);",
          "",
          "[Removed Lines]",
          "1121:     if (avctx->codec &&",
          "",
          "[Added Lines]",
          "1121:     if (avctx->codec && avctx->codec->close &&",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2c01cc90b36e0efa60cc335bc910746d53e46ce",
      "candidate_info": {
        "commit_hash": "f2c01cc90b36e0efa60cc335bc910746d53e46ce",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f2c01cc90b36e0efa60cc335bc910746d53e46ce",
        "files": [
          "libavcodec/utils.c"
        ],
        "message": "avcodec/utils: Check close before calling it\n\nFixes: NULL pointer dereference\nFixes: 15733/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_IDF_fuzzer-5658616977162240\n\nReviewed-by: Paul B Mahol <onemda@gmail.com>\nFound-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/projects/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 8df6884832ec413cf032dfaa45c23b1c7876670c)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/utils.c||libavcodec/utils.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/utils.c||libavcodec/utils.c"
          ],
          "candidate": [
            "libavcodec/utils.c||libavcodec/utils.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/utils.c||libavcodec/utils.c": [
          "File: libavcodec/utils.c -> libavcodec/utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1021:     return ret;",
          "1022: free_and_end:",
          "1024:         (codec_init_ok ||",
          "1025:          (avctx->codec->caps_internal & FF_CODEC_CAP_INIT_CLEANUP)))",
          "1026:         avctx->codec->close(avctx);",
          "",
          "[Removed Lines]",
          "1023:     if (avctx->codec &&",
          "",
          "[Added Lines]",
          "1023:     if (avctx->codec && avctx->codec->close &&",
          "",
          "---------------"
        ]
      }
    }
  ]
}