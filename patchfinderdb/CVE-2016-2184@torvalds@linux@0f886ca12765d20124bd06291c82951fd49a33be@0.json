{
  "cve_id": "CVE-2016-2184",
  "cve_desc": "The create_fixed_stream_quirk function in sound/usb/quirks.c in the snd-usb-audio driver in the Linux kernel before 4.5.1 allows physically proximate attackers to cause a denial of service (NULL pointer dereference or double free, and system crash) via a crafted endpoints value in a USB device descriptor.",
  "repo": "torvalds/linux",
  "patch_hash": "0f886ca12765d20124bd06291c82951fd49a33be",
  "patch_info": {
    "commit_hash": "0f886ca12765d20124bd06291c82951fd49a33be",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/0f886ca12765d20124bd06291c82951fd49a33be",
    "files": [
      "sound/usb/quirks.c"
    ],
    "message": "ALSA: usb-audio: Fix NULL dereference in create_fixed_stream_quirk()\n\ncreate_fixed_stream_quirk() may cause a NULL-pointer dereference by\naccessing the non-existing endpoint when a USB device with a malformed\nUSB descriptor is used.\n\nThis patch avoids it simply by adding a sanity check of bNumEndpoints\nbefore the accesses.\n\nBugzilla: https://bugzilla.suse.com/show_bug.cgi?id=971125\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
    "before_after_code_files": [
      "sound/usb/quirks.c||sound/usb/quirks.c"
    ]
  },
  "patch_diff": {
    "sound/usb/quirks.c||sound/usb/quirks.c": [
      "File: sound/usb/quirks.c -> sound/usb/quirks.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "180:  }",
      "181:  alts = &iface->altsetting[fp->altset_idx];",
      "182:  altsd = get_iface_desc(alts);",
      "183:  fp->protocol = altsd->bInterfaceProtocol;",
      "185:  if (fp->datainterval == 0)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  if (altsd->bNumEndpoints < 1) {",
      "184:   kfree(fp);",
      "185:   kfree(rate_table);",
      "186:   return -EINVAL;",
      "187:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "902eb7fd1e4af3ac69b9b30f8373f118c92b9729",
      "candidate_info": {
        "commit_hash": "902eb7fd1e4af3ac69b9b30f8373f118c92b9729",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/902eb7fd1e4af3ac69b9b30f8373f118c92b9729",
        "files": [
          "sound/usb/quirks.c"
        ],
        "message": "ALSA: usb-audio: Minor code cleanup in create_fixed_stream_quirk()\n\nJust a minor code cleanup: unify the error paths.\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
        "before_after_code_files": [
          "sound/usb/quirks.c||sound/usb/quirks.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "sound/usb/quirks.c||sound/usb/quirks.c"
          ],
          "candidate": [
            "sound/usb/quirks.c||sound/usb/quirks.c"
          ]
        }
      },
      "candidate_diff": {
        "sound/usb/quirks.c||sound/usb/quirks.c": [
          "File: sound/usb/quirks.c -> sound/usb/quirks.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:  stream = (fp->endpoint & USB_DIR_IN)",
          "168:   ? SNDRV_PCM_STREAM_CAPTURE : SNDRV_PCM_STREAM_PLAYBACK;",
          "169:  err = snd_usb_add_audio_stream(chip, stream, fp);",
          "175:  if (fp->iface != get_iface_desc(&iface->altsetting[0])->bInterfaceNumber ||",
          "176:      fp->altset_idx >= iface->num_altsetting) {",
          "180:  }",
          "181:  alts = &iface->altsetting[fp->altset_idx];",
          "182:  altsd = get_iface_desc(alts);",
          "183:  if (altsd->bNumEndpoints < 1) {",
          "187:  }",
          "189:  fp->protocol = altsd->bInterfaceProtocol;",
          "",
          "[Removed Lines]",
          "170:  if (err < 0) {",
          "171:   kfree(fp);",
          "172:   kfree(rate_table);",
          "173:   return err;",
          "174:  }",
          "177:   kfree(fp);",
          "178:   kfree(rate_table);",
          "179:   return -EINVAL;",
          "184:   kfree(fp);",
          "185:   kfree(rate_table);",
          "186:   return -EINVAL;",
          "",
          "[Added Lines]",
          "170:  if (err < 0)",
          "171:   goto error;",
          "174:   err = -EINVAL;",
          "175:   goto error;",
          "180:   err = -EINVAL;",
          "181:   goto error;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "196:  snd_usb_init_pitch(chip, fp->iface, alts, fp);",
          "197:  snd_usb_init_sample_rate(chip, fp->iface, alts, fp, fp->rate_max);",
          "198:  return 0;",
          "199: }",
          "201: static int create_auto_pcm_quirk(struct snd_usb_audio *chip,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:  error:",
          "196:  kfree(fp);",
          "197:  kfree(rate_table);",
          "198:  return err;",
          "",
          "---------------"
        ]
      }
    }
  ]
}