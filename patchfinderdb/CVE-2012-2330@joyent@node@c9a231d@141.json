{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "21d26839762c52f20edcfcc245a0cfe1acb21196",
      "candidate_info": {
        "commit_hash": "21d26839762c52f20edcfcc245a0cfe1acb21196",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/21d26839762c52f20edcfcc245a0cfe1acb21196",
        "files": [
          "test/simple/test-https-timeout.js"
        ],
        "message": "test: don't make request until server is listening\n\nPreemptively fixes simple/test-https-timeout on platforms where binding to an\ninterface is not an instantaneous action.",
        "before_after_code_files": [
          "test/simple/test-https-timeout.js||test/simple/test-https-timeout.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-https-timeout.js||test/simple/test-https-timeout.js": [
          "File: test/simple/test-https-timeout.js -> test/simple/test-https-timeout.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: var server = https.createServer(options, function() {",
          "42:   console.log('Got request.  Doing nothing.');",
          "61:   });",
          "75: });",
          "",
          "[Removed Lines]",
          "43: }).listen(common.PORT);",
          "45: var req = https.request({",
          "46:   host: 'localhost',",
          "47:   port: common.PORT,",
          "48:   path: '/',",
          "49:   method: 'GET'",
          "50: });",
          "51: req.end();",
          "52: req.on('response', function(res) {",
          "53:   console.log('got response');",
          "54: });",
          "56: req.on('socket', function() {",
          "57:   console.log('got a socket');",
          "59:   req.socket.on('connect', function() {",
          "60:     console.log('socket connected');",
          "63:   setTimeout(function() {",
          "64:     throw new Error('Did not get timeout event');",
          "65:   }, 200);",
          "66: });",
          "68: req.setTimeout(10);",
          "70: req.on('timeout', function() {",
          "71:   console.log('timeout occurred outside');",
          "72:   req.destroy();",
          "73:   server.close();",
          "74:   process.exit(0);",
          "",
          "[Added Lines]",
          "41: }).listen(common.PORT, function() {",
          "42:   var req = https.request({",
          "43:     host: 'localhost',",
          "44:     port: common.PORT,",
          "45:     path: '/',",
          "46:     method: 'GET'",
          "47:   });",
          "48:   req.setTimeout(10);",
          "49:   req.end();",
          "51:   req.on('response', function(res) {",
          "52:     console.log('got response');",
          "55:   req.on('socket', function() {",
          "56:     console.log('got a socket');",
          "58:     req.socket.on('connect', function() {",
          "59:       console.log('socket connected');",
          "60:     });",
          "62:     setTimeout(function() {",
          "63:       throw new Error('Did not get timeout event');",
          "64:     }, 200);",
          "65:   });",
          "67:   req.on('timeout', function() {",
          "68:     console.log('timeout occurred outside');",
          "69:     req.destroy();",
          "70:     server.close();",
          "71:     process.exit(0);",
          "72:   });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed7fb149a20ee5e7aa9a0574a242a193d7acd761",
      "candidate_info": {
        "commit_hash": "ed7fb149a20ee5e7aa9a0574a242a193d7acd761",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ed7fb149a20ee5e7aa9a0574a242a193d7acd761",
        "files": [
          "lib/module.js",
          "test/fixtures/invalid.json",
          "test/simple/test-require-json.js"
        ],
        "message": "module: add filename to require() json errors\n\nOtherwise it can be quite difficult to figure out which file is busted.\n\nCloses #3580.",
        "before_after_code_files": [
          "lib/module.js||limodule.js",
          "test/simple/test-require-json.js||test/simple/test-require-json.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/module.js||limodule.js": [
          "File: lib/module.js -> limodule.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "472: Module._extensions['.json'] = function(module, filename) {",
          "473:   var content = NativeModule.require('fs').readFileSync(filename, 'utf8');",
          "475: };",
          "",
          "[Removed Lines]",
          "474:   module.exports = JSON.parse(stripBOM(content));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-require-json.js||test/simple/test-require-json.js": [
          "File: test/simple/test-require-json.js -> test/simple/test-require-json.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var assert = require('assert');",
          "24: try {",
          "25:   require('../fixtures/invalid.json');",
          "26: } catch (err) {",
          "27:   var i = err.message.indexOf('test/fixtures/invalid.json: Unexpected string')",
          "28:   assert(-1 != i, 'require() json error should include path');",
          "29: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "64ac54a64d68c1fffd352d0453d81b6c3c0455b0",
      "candidate_info": {
        "commit_hash": "64ac54a64d68c1fffd352d0453d81b6c3c0455b0",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/64ac54a64d68c1fffd352d0453d81b6c3c0455b0",
        "files": [
          "Makefile",
          "tools/getnodeisrelease.py"
        ],
        "message": "Makefile: add a better check to ensure a node \"release\"\n\nCloses #3841.\nCloses #3842.",
        "before_after_code_files": [
          "tools/getnodeisrelease.py||tools/getnodeisrelease.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/getnodeisrelease.py||tools/getnodeisrelease.py": [
          "File: tools/getnodeisrelease.py -> tools/getnodeisrelease.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import sys,os,re",
          "3: node_version_h = os.path.join(os.path.dirname(__file__), '..', 'src',",
          "4:     'node_version.h')",
          "6: f = open(node_version_h)",
          "8: for line in f:",
          "9:   if re.match('#define NODE_VERSION_IS_RELEASE', line):",
          "10:     release = int(line.split()[2])",
          "11:     print release",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8fd808dfb0065466712e5115b25f2c6ce984c14",
      "candidate_info": {
        "commit_hash": "e8fd808dfb0065466712e5115b25f2c6ce984c14",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e8fd808dfb0065466712e5115b25f2c6ce984c14",
        "files": [
          "src/node_object_wrap.h"
        ],
        "message": "windows: avoid MSVC warnings about templates not having a dll interface",
        "before_after_code_files": [
          "src/node_object_wrap.h||src/node_object_wrap.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_object_wrap.h||src/node_object_wrap.h": [
          "File: src/node_object_wrap.h -> src/node_object_wrap.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"v8.h\"",
          "27: #include <assert.h>",
          "29: namespace node {",
          "31: class NODE_EXTERN ObjectWrap {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: template class NODE_EXTERN v8::Persistent<v8::Object>;",
          "33: template class NODE_EXTERN v8::Persistent<v8::FunctionTemplate>;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "62c12d21612ee0c9a6892c585eea83a02cb8de63",
      "candidate_info": {
        "commit_hash": "62c12d21612ee0c9a6892c585eea83a02cb8de63",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/62c12d21612ee0c9a6892c585eea83a02cb8de63",
        "files": [
          "test/gc/test-http-client-connaborted.js",
          "test/gc/test-http-client-onerror.js",
          "test/gc/test-http-client-timeout.js",
          "test/gc/test-http-client.js",
          "test/gc/test-net-timeout.js"
        ],
        "message": "Clean up gc tests\n\nThis fixes the additional issues brought up in #3179.",
        "before_after_code_files": [
          "test/gc/test-http-client-connaborted.js||test/gc/test-http-client-connaborted.js",
          "test/gc/test-http-client-onerror.js||test/gc/test-http-client-onerror.js",
          "test/gc/test-http-client-timeout.js||test/gc/test-http-client-timeout.js",
          "test/gc/test-http-client.js||test/gc/test-http-client.js",
          "test/gc/test-net-timeout.js||test/gc/test-net-timeout.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/gc/test-http-client-connaborted.js||test/gc/test-http-client-connaborted.js": [
          "File: test/gc/test-http-client-connaborted.js -> test/gc/test-http-client-connaborted.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:     done    = 0,",
          "11:     count   = 0,",
          "12:     countGC = 0,",
          "14:     common = require('../common.js'),",
          "15:     assert = require('assert'),",
          "16:     PORT = common.PORT;",
          "",
          "[Removed Lines]",
          "13:     todo    = 18,",
          "",
          "[Added Lines]",
          "13:     todo    = 500,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:   countGC ++;",
          "46: }",
          "48: function statusLater() {",
          "50: }",
          "52: function status() {",
          "",
          "[Removed Lines]",
          "49:   setTimeout(status, 1);",
          "",
          "[Added Lines]",
          "48: var timer;",
          "50:   gc();",
          "51:   if (timer) clearTimeout(timer);",
          "52:   timer = setTimeout(status, 1);",
          "",
          "---------------"
        ],
        "test/gc/test-http-client-onerror.js||test/gc/test-http-client-onerror.js": [
          "File: test/gc/test-http-client-onerror.js -> test/gc/test-http-client-onerror.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:     done    = 0,",
          "12:     count   = 0,",
          "13:     countGC = 0,",
          "15:     common = require('../common.js'),",
          "16:     assert = require('assert'),",
          "17:     PORT = common.PORT;",
          "",
          "[Removed Lines]",
          "14:     todo    = 18,",
          "",
          "[Added Lines]",
          "14:     todo    = 500,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:   countGC ++;",
          "50: }",
          "52: function statusLater() {",
          "54: }",
          "56: function status() {",
          "",
          "[Removed Lines]",
          "53:   setTimeout(status, 1);",
          "",
          "[Added Lines]",
          "52: var timer;",
          "54:   gc();",
          "55:   if (timer) clearTimeout(timer);",
          "56:   timer = setTimeout(status, 1);",
          "",
          "---------------"
        ],
        "test/gc/test-http-client-timeout.js||test/gc/test-http-client-timeout.js": [
          "File: test/gc/test-http-client-timeout.js -> test/gc/test-http-client-timeout.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     done    = 0,",
          "14:     count   = 0,",
          "15:     countGC = 0,",
          "17:     common = require('../common.js'),",
          "18:     assert = require('assert'),",
          "19:     PORT = common.PORT;",
          "",
          "[Removed Lines]",
          "16:     todo    = 18,",
          "",
          "[Added Lines]",
          "16:     todo    = 500,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:   countGC ++;",
          "53: }",
          "55: function statusLater() {",
          "57: }",
          "59: function status() {",
          "",
          "[Removed Lines]",
          "56:   setTimeout(status, 1);",
          "",
          "[Added Lines]",
          "55: var timer;",
          "57:   gc();",
          "58:   if (timer) clearTimeout(timer);",
          "59:   timer = setTimeout(status, 1);",
          "",
          "---------------"
        ],
        "test/gc/test-http-client.js||test/gc/test-http-client.js": [
          "File: test/gc/test-http-client.js -> test/gc/test-http-client.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:     done    = 0,",
          "11:     count   = 0,",
          "12:     countGC = 0,",
          "14:     common = require('../common.js'),",
          "15:     assert = require('assert'),",
          "16:     PORT = common.PORT;",
          "",
          "[Removed Lines]",
          "13:     todo    = 5,",
          "",
          "[Added Lines]",
          "13:     todo    = 500,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:   countGC ++;",
          "48: }",
          "50: function statusLater() {",
          "52: }",
          "54: function status() {",
          "",
          "[Removed Lines]",
          "51:   setTimeout(status, 1);",
          "",
          "[Added Lines]",
          "50: var timer;",
          "52:   gc();",
          "53:   if (timer) clearTimeout(timer);",
          "54:   timer = setTimeout(status, 1);",
          "",
          "---------------"
        ],
        "test/gc/test-net-timeout.js||test/gc/test-net-timeout.js": [
          "File: test/gc/test-net-timeout.js -> test/gc/test-net-timeout.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     done    = 0,",
          "14:     count   = 0,",
          "15:     countGC = 0,",
          "17:     common = require('../common.js'),",
          "18:     assert = require('assert'),",
          "19:     PORT = common.PORT;",
          "",
          "[Removed Lines]",
          "16:     todo    = 18,",
          "",
          "[Added Lines]",
          "16:     todo    = 500,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:       count++;",
          "38:       weak(req, afterGC);",
          "40:   }",
          "41: }",
          "",
          "[Removed Lines]",
          "39:     })()",
          "",
          "[Added Lines]",
          "39:     })();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:   countGC ++;",
          "45: }",
          "47: function statusLater() {",
          "49: }",
          "51: function status() {",
          "",
          "[Removed Lines]",
          "48:   setTimeout(status, 1);",
          "",
          "[Added Lines]",
          "47: var timer;",
          "49:   gc();",
          "50:   if (timer) clearTimeout(timer);",
          "51:   timer = setTimeout(status, 1);",
          "",
          "---------------"
        ]
      }
    }
  ]
}