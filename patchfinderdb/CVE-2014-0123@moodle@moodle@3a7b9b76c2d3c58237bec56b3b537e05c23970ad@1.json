{
  "cve_id": "CVE-2014-0123",
  "cve_desc": "The wiki subsystem in Moodle through 2.3.11, 2.4.x before 2.4.9, 2.5.x before 2.5.5, and 2.6.x before 2.6.2 does not properly restrict (1) view and (2) edit access, which allows remote authenticated users to perform wiki operations by leveraging the student role and using the Recent Activity block to reach the individual wiki of an arbitrary student.",
  "repo": "moodle/moodle",
  "patch_hash": "3a7b9b76c2d3c58237bec56b3b537e05c23970ad",
  "patch_info": {
    "commit_hash": "3a7b9b76c2d3c58237bec56b3b537e05c23970ad",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/3a7b9b76c2d3c58237bec56b3b537e05c23970ad",
    "files": [
      "mod/wiki/admin.php",
      "mod/wiki/comments.php",
      "mod/wiki/create_form.php",
      "mod/wiki/diff.php",
      "mod/wiki/edit.php",
      "mod/wiki/editcomments.php",
      "mod/wiki/files.php",
      "mod/wiki/filesedit.php",
      "mod/wiki/history.php",
      "mod/wiki/lib.php",
      "mod/wiki/locallib.php",
      "mod/wiki/lock.php",
      "mod/wiki/map.php",
      "mod/wiki/overridelocks.php",
      "mod/wiki/prettyview.php",
      "mod/wiki/restoreversion.php",
      "mod/wiki/search.php",
      "mod/wiki/view.php",
      "mod/wiki/viewversion.php"
    ],
    "message": "MDL-39990 wiki: more detailed validation of view/edit access rights",
    "before_after_code_files": [
      "mod/wiki/admin.php||mod/wiki/admin.php",
      "mod/wiki/comments.php||mod/wiki/comments.php",
      "mod/wiki/create_form.php||mod/wiki/create_form.php",
      "mod/wiki/diff.php||mod/wiki/diff.php",
      "mod/wiki/edit.php||mod/wiki/edit.php",
      "mod/wiki/editcomments.php||mod/wiki/editcomments.php",
      "mod/wiki/files.php||mod/wiki/files.php",
      "mod/wiki/filesedit.php||mod/wiki/filesedit.php",
      "mod/wiki/history.php||mod/wiki/history.php",
      "mod/wiki/lib.php||mod/wiki/lib.php",
      "mod/wiki/locallib.php||mod/wiki/locallib.php",
      "mod/wiki/lock.php||mod/wiki/lock.php",
      "mod/wiki/map.php||mod/wiki/map.php",
      "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php",
      "mod/wiki/prettyview.php||mod/wiki/prettyview.php",
      "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php",
      "mod/wiki/search.php||mod/wiki/search.php",
      "mod/wiki/view.php||mod/wiki/view.php",
      "mod/wiki/viewversion.php||mod/wiki/viewversion.php"
    ]
  },
  "patch_diff": {
    "mod/wiki/admin.php||mod/wiki/admin.php": [
      "File: mod/wiki/admin.php -> mod/wiki/admin.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "56: require_login($course, true, $cm);",
      "59: $context = context_module::instance($cm->id);",
      "60: require_capability('mod/wiki:managewiki', $context);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "58: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "59:     print_error('cannotviewpage', 'wiki');",
      "60: }",
      "",
      "---------------"
    ],
    "mod/wiki/comments.php||mod/wiki/comments.php": [
      "File: mod/wiki/comments.php -> mod/wiki/comments.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "60: require_login($course, true, $cm);",
      "63: $event = \\mod_wiki\\event\\comments_viewed::create(",
      "64:         array(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "62: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "63:     print_error('cannotviewpage', 'wiki');",
      "64: }",
      "",
      "---------------"
    ],
    "mod/wiki/create_form.php||mod/wiki/create_form.php": [
      "File: mod/wiki/create_form.php -> mod/wiki/create_form.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "77:                 $groupname = $groupinfo[$groupid];",
      "78:                 $mform->addElement('static', 'groupdesciption', get_string('group'), $groupname);",
      "79:                 $mform->addElement('hidden', 'groupinfo', $groupid);",
      "80:             }",
      "81:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80:                 $mform->setType('groupinfo', PARAM_INT);",
      "",
      "---------------"
    ],
    "mod/wiki/diff.php||mod/wiki/diff.php": [
      "File: mod/wiki/diff.php -> mod/wiki/diff.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "69: require_login($course, true, $cm);",
      "71: $wikipage = new page_wiki_diff($wiki, $subwiki, $cm);",
      "73: $wikipage->set_page($page);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "71: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "72:     print_error('cannotviewpage', 'wiki');",
      "73: }",
      "",
      "---------------"
    ],
    "mod/wiki/edit.php||mod/wiki/edit.php": [
      "File: mod/wiki/edit.php -> mod/wiki/edit.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "75: require_login($course, true, $cm);",
      "77: $context = context_module::instance($cm->id);",
      "80: if ($option == get_string('save', 'wiki')) {",
      "81:     if (!confirm_sesskey()) {",
      "",
      "[Removed Lines]",
      "78: require_capability('mod/wiki:editpage', $context);",
      "",
      "[Added Lines]",
      "79: if (!wiki_user_can_edit($subwiki)) {",
      "80:     print_error('cannoteditpage', 'wiki');",
      "81: }",
      "",
      "---------------"
    ],
    "mod/wiki/editcomments.php||mod/wiki/editcomments.php": [
      "File: mod/wiki/editcomments.php -> mod/wiki/editcomments.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "54: }",
      "55: require_login($course, true, $cm);",
      "57: $editcomments = new page_wiki_editcomment($wiki, $subwiki, $cm);",
      "58: $comment = new stdClass();",
      "59: if ($action == 'edit') {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "57: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "58:     print_error('cannotviewpage', 'wiki');",
      "59: }",
      "",
      "---------------"
    ],
    "mod/wiki/files.php||mod/wiki/files.php": [
      "File: mod/wiki/files.php -> mod/wiki/files.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "79: $PAGE->set_url('/mod/wiki/files.php', array('pageid'=>$pageid));",
      "80: require_login($course, true, $cm);",
      "82: $PAGE->set_title(get_string('wikifiles', 'wiki'));",
      "83: $PAGE->set_heading($course->fullname);",
      "84: $PAGE->navbar->add(format_string(get_string('wikifiles', 'wiki')));",
      "",
      "[Removed Lines]",
      "81: $PAGE->set_context($context);",
      "",
      "[Added Lines]",
      "82: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "83:     print_error('cannotviewfiles', 'wiki');",
      "84: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "97: echo $OUTPUT->box_start('generalbox');",
      "104: echo $OUTPUT->box_end();",
      "106: if (has_capability('mod/wiki:managefiles', $context)) {",
      "",
      "[Removed Lines]",
      "98: if (has_capability('mod/wiki:viewpage', $context)) {",
      "99:     echo $renderer->wiki_print_subwiki_selector($PAGE->activityrecord, $subwiki, $page, 'files');",
      "100:     echo $renderer->wiki_files_tree($context, $subwiki);",
      "101: } else {",
      "102:     echo $OUTPUT->notification(get_string('cannotviewfiles', 'wiki'));",
      "103: }",
      "",
      "[Added Lines]",
      "102: echo $renderer->wiki_print_subwiki_selector($PAGE->activityrecord, $subwiki, $page, 'files');",
      "103: echo $renderer->wiki_files_tree($context, $subwiki);",
      "",
      "---------------"
    ],
    "mod/wiki/filesedit.php||mod/wiki/filesedit.php": [
      "File: mod/wiki/filesedit.php -> mod/wiki/filesedit.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "53: $context = context_module::instance($cm->id);",
      "55: require_login($course, true, $cm);",
      "56: require_capability('mod/wiki:managefiles', $context);",
      "58: if (empty($returnurl)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "57: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "58:     print_error('cannotviewpage', 'wiki');",
      "59: }",
      "",
      "---------------"
    ],
    "mod/wiki/history.php||mod/wiki/history.php": [
      "File: mod/wiki/history.php -> mod/wiki/history.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "59: $course = $DB->get_record('course', array('id' => $cm->course), '*', MUST_EXIST);",
      "61: require_login($course, true, $cm);",
      "66: $event = \\mod_wiki\\event\\page_history_viewed::create(",
      "67:         array(",
      "68:             'context' => $context,",
      "",
      "[Removed Lines]",
      "62: $context = context_module::instance($cm->id);",
      "63: require_capability('mod/wiki:viewpage', $context);",
      "",
      "[Added Lines]",
      "63: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "64:     print_error('cannotviewpage', 'wiki');",
      "65: }",
      "68: $context = context_module::instance($cm->id);",
      "",
      "---------------"
    ],
    "mod/wiki/lib.php||mod/wiki/lib.php": [
      "File: mod/wiki/lib.php -> mod/wiki/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "280:     global $CFG, $DB, $OUTPUT;",
      "282:     $usernamefields = get_all_user_name_fields(true, 'u');",
      "284:             FROM {wiki_pages} p",
      "285:                 JOIN {wiki_subwikis} sw ON sw.id = p.subwikiid",
      "286:                 JOIN {wiki} w ON w.id = sw.wikiid",
      "",
      "[Removed Lines]",
      "283:     $sql = \"SELECT p.*, w.id as wikiid, sw.groupid, $usernamefields",
      "",
      "[Added Lines]",
      "283:     $sql = \"SELECT p.id, p.timemodified, p.subwikiid, sw.wikiid, w.wikimode, sw.userid, sw.groupid, $usernamefields",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "290:     if (!$pages = $DB->get_records_sql($sql, array($timestart, $course->id))) {",
      "291:         return false;",
      "292:     }",
      "295:     $wikis = array();",
      "297:     $modinfo = get_fast_modinfo($course);",
      "299:     foreach ($pages as $page) {",
      "312:         }",
      "332:         }",
      "334:     }",
      "335:     unset($pages);",
      "337:     if (!$wikis) {",
      "",
      "[Removed Lines]",
      "293:     $modinfo = get_fast_modinfo($course);",
      "300:         if (!isset($modinfo->instances['wiki'][$page->wikiid])) {",
      "302:             continue;",
      "303:         }",
      "304:         $cm = $modinfo->instances['wiki'][$page->wikiid];",
      "305:         if (!$cm->uservisible) {",
      "306:             continue;",
      "307:         }",
      "308:         $context = context_module::instance($cm->id);",
      "310:         if (!has_capability('mod/wiki:viewpage', $context)) {",
      "311:             continue;",
      "314:         $groupmode = groups_get_activity_groupmode($cm, $course);",
      "316:         if ($groupmode) {",
      "317:             if ($groupmode == SEPARATEGROUPS and !has_capability('mod/wiki:managewiki', $context)) {",
      "319:                 if (isguestuser()) {",
      "321:                     continue;",
      "322:                 }",
      "324:                 if (is_null($modinfo->groups)) {",
      "325:                     $modinfo->groups = groups_get_user_groups($course->id); // load all my groups and cache it in modinfo",
      "326:                     }",
      "328:                 if (!in_array($page->groupid, $modinfo->groups[0])) {",
      "329:                     continue;",
      "330:                 }",
      "331:             }",
      "333:         $wikis[] = $page;",
      "",
      "[Added Lines]",
      "293:     require_once($CFG->dirroot . \"/mod/wiki/locallib.php\");",
      "299:     $subwikivisible = array();",
      "301:         if (!isset($subwikivisible[$page->subwikiid])) {",
      "302:             $subwiki = (object)array('id' => $page->subwikiid, 'wikiid' => $page->wikiid,",
      "303:                 'groupid' => $page->groupid, 'userid' => $page->userid);",
      "304:             $wiki = (object)array('id' => $page->wikiid, 'course' => $course->id, 'wikimode' => $page->wikimode);",
      "305:             $subwikivisible[$page->subwikiid] = wiki_user_can_view($subwiki, $wiki);",
      "307:         if ($subwikivisible[$page->subwikiid]) {",
      "308:             $wikis[] = $page;",
      "311:     unset($subwikivisible);",
      "",
      "---------------"
    ],
    "mod/wiki/locallib.php||mod/wiki/locallib.php": [
      "File: mod/wiki/locallib.php -> mod/wiki/locallib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "761:     global $USER;",
      "765:     $context = context_module::instance($cm->id);",
      "",
      "[Removed Lines]",
      "760: function wiki_user_can_view($subwiki) {",
      "763:     $wiki = wiki_get_wiki($subwiki->wikiid);",
      "764:     $cm = get_coursemodule_from_instance('wiki', $wiki->id);",
      "",
      "[Added Lines]",
      "763: function wiki_user_can_view($subwiki, $wiki = null) {",
      "766:     if (empty($wiki) || $wiki->id != $subwiki->wikiid) {",
      "767:         $wiki = wiki_get_wiki($subwiki->wikiid);",
      "768:     }",
      "769:     $modinfo = get_fast_modinfo($wiki->course);",
      "770:     if (!isset($modinfo->instances['wiki'][$subwiki->wikiid])) {",
      "772:         return false;",
      "773:     }",
      "774:     $cm = $modinfo->instances['wiki'][$subwiki->wikiid];",
      "775:     if (!$cm->uservisible) {",
      "777:         return false;",
      "778:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "804:         if ($wiki->wikimode == 'collaborative' || $wiki->wikimode == 'individual') {",
      "808:                 return has_capability('mod/wiki:viewpage', $context);",
      "",
      "[Removed Lines]",
      "806:             if (groups_is_member($subwiki->groupid)) {",
      "",
      "[Added Lines]",
      "820:             if (in_array($subwiki->groupid, $modinfo->get_groups($cm->groupingid))) {",
      "",
      "---------------"
    ],
    "mod/wiki/lock.php||mod/wiki/lock.php": [
      "File: mod/wiki/lock.php -> mod/wiki/lock.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "69: require_login($course, false, $cm);",
      "74: $wikipage = new page_wiki_lock($wiki, $subwiki, $cm);",
      "75: $wikipage->set_page($page);",
      "",
      "[Removed Lines]",
      "71: $context = context_module::instance($cm->id);",
      "72: require_capability('mod/wiki:editpage', $context);",
      "",
      "[Added Lines]",
      "71: if (!wiki_user_can_edit($subwiki)) {",
      "72:     print_error('cannoteditpage', 'wiki');",
      "73: }",
      "",
      "---------------"
    ],
    "mod/wiki/map.php||mod/wiki/map.php": [
      "File: mod/wiki/map.php -> mod/wiki/map.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "54: }",
      "56: require_login($course, true, $cm);",
      "60: $wikipage = new page_wiki_map($wiki, $subwiki, $cm);",
      "62: $event = \\mod_wiki\\event\\page_map_viewed::create(",
      "63:         array(",
      "64:             'context' => $context,",
      "",
      "[Removed Lines]",
      "57: $context = context_module::instance($cm->id);",
      "58: require_capability('mod/wiki:viewpage', $context);",
      "",
      "[Added Lines]",
      "58: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "59:     print_error('cannotviewpage', 'wiki');",
      "60: }",
      "64: $context = context_module::instance($cm->id);",
      "",
      "---------------"
    ],
    "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php": [
      "File: mod/wiki/overridelocks.php -> mod/wiki/overridelocks.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "65: require_login($course, true, $cm);",
      "72: }",
      "74: $wikipage = new page_wiki_overridelocks($wiki, $subwiki, $cm);",
      "75: $wikipage->set_page($page);",
      "",
      "[Removed Lines]",
      "67: $context = context_module::instance($cm->id);",
      "68: require_capability('mod/wiki:overridelock', $context);",
      "70: if (!confirm_sesskey()) {",
      "71:     print_error(get_string('invalidsesskey', 'wiki'));",
      "",
      "[Added Lines]",
      "67: require_sesskey();",
      "69: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "70:     print_error('cannotviewpage', 'wiki');",
      "72: $context = context_module::instance($cm->id);",
      "73: require_capability('mod/wiki:overridelock', $context);",
      "",
      "---------------"
    ],
    "mod/wiki/prettyview.php||mod/wiki/prettyview.php": [
      "File: mod/wiki/prettyview.php -> mod/wiki/prettyview.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "54: require_login($course, true, $cm);",
      "59: $wikipage = new page_wiki_prettyview($wiki, $subwiki, $cm);",
      "61: $wikipage->set_page($page);",
      "63: $event = \\mod_wiki\\event\\page_viewed::create(",
      "64:         array(",
      "65:             'context' => $context,",
      "",
      "[Removed Lines]",
      "56: $context = context_module::instance($cm->id);",
      "57: require_capability('mod/wiki:viewpage', $context);",
      "",
      "[Added Lines]",
      "56: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "57:     print_error('cannotviewpage', 'wiki');",
      "58: }",
      "64: $context = context_module::instance($cm->id);",
      "",
      "---------------"
    ],
    "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php": [
      "File: mod/wiki/restoreversion.php -> mod/wiki/restoreversion.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "61: require_login($course, true, $cm);",
      "63: if ($confirm) {",
      "64:     if (!confirm_sesskey()) {",
      "65:         print_error(get_string('invalidsesskey', 'wiki'));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "63: if (!wiki_user_can_view($subwiki)) {",
      "64:     print_error('cannotviewpage', 'wiki');",
      "65: }",
      "",
      "---------------"
    ],
    "mod/wiki/search.php||mod/wiki/search.php": [
      "File: mod/wiki/search.php -> mod/wiki/search.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "45:     $gid = 0;",
      "46: }",
      "47: if (!$subwiki = wiki_get_subwiki_by_group($cm->instance, $gid)) {",
      "49: }",
      "50: if (!$wiki = wiki_get_wiki($subwiki->wikiid)) {",
      "51:     print_error('incorrectwikiid', 'wiki');",
      "52: }",
      "54: $wikipage = new page_wiki_search($wiki, $subwiki, $cm);",
      "56: $wikipage->set_search_string($search, $searchcontent);",
      "",
      "[Removed Lines]",
      "48:     return false;",
      "",
      "[Added Lines]",
      "48:     print_error('incorrectsubwikiid', 'wiki');",
      "54: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "55:     print_error('cannotviewfiles', 'wiki');",
      "56: }",
      "",
      "---------------"
    ],
    "mod/wiki/view.php||mod/wiki/view.php": [
      "File: mod/wiki/view.php -> mod/wiki/view.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "271:     print_error('incorrectparameters');",
      "272: }",
      "278: require_once($CFG->libdir . '/completionlib.php');",
      "",
      "[Removed Lines]",
      "274: $context = context_module::instance($cm->id);",
      "275: require_capability('mod/wiki:viewpage', $context);",
      "",
      "[Added Lines]",
      "274: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "275:     print_error('cannotviewpage', 'wiki');",
      "276: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "288: $wikipage->set_gid($currentgroup);",
      "289: $wikipage->set_page($page);",
      "291: if($pageid) {",
      "292:     $event = \\mod_wiki\\event\\page_viewed::create(",
      "293:             array(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "292: $context = context_module::instance($cm->id);",
      "",
      "---------------"
    ],
    "mod/wiki/viewversion.php||mod/wiki/viewversion.php": [
      "File: mod/wiki/viewversion.php -> mod/wiki/viewversion.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "61: require_login($course, true, $cm);",
      "63: $wikipage = new page_wiki_viewversion($wiki, $subwiki, $cm);",
      "65: $wikipage->set_page($page);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "63: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "64:     print_error('cannotviewpage', 'wiki');",
      "65: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fa0777902633b54ca5566dd8af304ce5587051e5",
      "candidate_info": {
        "commit_hash": "fa0777902633b54ca5566dd8af304ce5587051e5",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/fa0777902633b54ca5566dd8af304ce5587051e5",
        "files": [
          "mod/wiki/admin.php",
          "mod/wiki/comments.php",
          "mod/wiki/create_form.php",
          "mod/wiki/diff.php",
          "mod/wiki/edit.php",
          "mod/wiki/editcomments.php",
          "mod/wiki/files.php",
          "mod/wiki/filesedit.php",
          "mod/wiki/history.php",
          "mod/wiki/lib.php",
          "mod/wiki/locallib.php",
          "mod/wiki/lock.php",
          "mod/wiki/map.php",
          "mod/wiki/overridelocks.php",
          "mod/wiki/prettyview.php",
          "mod/wiki/restoreversion.php",
          "mod/wiki/search.php",
          "mod/wiki/view.php",
          "mod/wiki/viewversion.php"
        ],
        "message": "MDL-39990 wiki: more detailed validation of view/edit access",
        "before_after_code_files": [
          "mod/wiki/admin.php||mod/wiki/admin.php",
          "mod/wiki/comments.php||mod/wiki/comments.php",
          "mod/wiki/create_form.php||mod/wiki/create_form.php",
          "mod/wiki/diff.php||mod/wiki/diff.php",
          "mod/wiki/edit.php||mod/wiki/edit.php",
          "mod/wiki/editcomments.php||mod/wiki/editcomments.php",
          "mod/wiki/files.php||mod/wiki/files.php",
          "mod/wiki/filesedit.php||mod/wiki/filesedit.php",
          "mod/wiki/history.php||mod/wiki/history.php",
          "mod/wiki/lib.php||mod/wiki/lib.php",
          "mod/wiki/locallib.php||mod/wiki/locallib.php",
          "mod/wiki/lock.php||mod/wiki/lock.php",
          "mod/wiki/map.php||mod/wiki/map.php",
          "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php",
          "mod/wiki/prettyview.php||mod/wiki/prettyview.php",
          "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php",
          "mod/wiki/search.php||mod/wiki/search.php",
          "mod/wiki/view.php||mod/wiki/view.php",
          "mod/wiki/viewversion.php||mod/wiki/viewversion.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "mod/wiki/admin.php||mod/wiki/admin.php",
            "mod/wiki/comments.php||mod/wiki/comments.php",
            "mod/wiki/create_form.php||mod/wiki/create_form.php",
            "mod/wiki/diff.php||mod/wiki/diff.php",
            "mod/wiki/edit.php||mod/wiki/edit.php",
            "mod/wiki/editcomments.php||mod/wiki/editcomments.php",
            "mod/wiki/files.php||mod/wiki/files.php",
            "mod/wiki/filesedit.php||mod/wiki/filesedit.php",
            "mod/wiki/history.php||mod/wiki/history.php",
            "mod/wiki/lib.php||mod/wiki/lib.php",
            "mod/wiki/locallib.php||mod/wiki/locallib.php",
            "mod/wiki/lock.php||mod/wiki/lock.php",
            "mod/wiki/map.php||mod/wiki/map.php",
            "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php",
            "mod/wiki/prettyview.php||mod/wiki/prettyview.php",
            "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php",
            "mod/wiki/search.php||mod/wiki/search.php",
            "mod/wiki/view.php||mod/wiki/view.php",
            "mod/wiki/viewversion.php||mod/wiki/viewversion.php"
          ],
          "candidate": [
            "mod/wiki/admin.php||mod/wiki/admin.php",
            "mod/wiki/comments.php||mod/wiki/comments.php",
            "mod/wiki/create_form.php||mod/wiki/create_form.php",
            "mod/wiki/diff.php||mod/wiki/diff.php",
            "mod/wiki/edit.php||mod/wiki/edit.php",
            "mod/wiki/editcomments.php||mod/wiki/editcomments.php",
            "mod/wiki/files.php||mod/wiki/files.php",
            "mod/wiki/filesedit.php||mod/wiki/filesedit.php",
            "mod/wiki/history.php||mod/wiki/history.php",
            "mod/wiki/lib.php||mod/wiki/lib.php",
            "mod/wiki/locallib.php||mod/wiki/locallib.php",
            "mod/wiki/lock.php||mod/wiki/lock.php",
            "mod/wiki/map.php||mod/wiki/map.php",
            "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php",
            "mod/wiki/prettyview.php||mod/wiki/prettyview.php",
            "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php",
            "mod/wiki/search.php||mod/wiki/search.php",
            "mod/wiki/view.php||mod/wiki/view.php",
            "mod/wiki/viewversion.php||mod/wiki/viewversion.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/wiki/admin.php||mod/wiki/admin.php": [
          "File: mod/wiki/admin.php -> mod/wiki/admin.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: require_login($course, true, $cm);",
          "59: $context = context_module::instance($cm->id);",
          "60: require_capability('mod/wiki:managewiki', $context);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "59:     print_error('cannotviewpage', 'wiki');",
          "60: }",
          "",
          "---------------"
        ],
        "mod/wiki/comments.php||mod/wiki/comments.php": [
          "File: mod/wiki/comments.php -> mod/wiki/comments.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: require_login($course, true, $cm);",
          "62: add_to_log($course->id, 'wiki', 'comments', \"comments.php?pageid=\".$pageid, $pageid, $cm->id);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "63:     print_error('cannotviewpage', 'wiki');",
          "64: }",
          "",
          "---------------"
        ],
        "mod/wiki/create_form.php||mod/wiki/create_form.php": [
          "File: mod/wiki/create_form.php -> mod/wiki/create_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:                 $groupname = $groupinfo[$groupid];",
          "78:                 $mform->addElement('static', 'groupdesciption', get_string('group'), $groupname);",
          "79:                 $mform->addElement('hidden', 'groupinfo', $groupid);",
          "80:             }",
          "81:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:                 $mform->setType('groupinfo', PARAM_INT);",
          "",
          "---------------"
        ],
        "mod/wiki/diff.php||mod/wiki/diff.php": [
          "File: mod/wiki/diff.php -> mod/wiki/diff.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: require_login($course, true, $cm);",
          "71: $wikipage = new page_wiki_diff($wiki, $subwiki, $cm);",
          "73: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "72:     print_error('cannotviewpage', 'wiki');",
          "73: }",
          "",
          "---------------"
        ],
        "mod/wiki/edit.php||mod/wiki/edit.php": [
          "File: mod/wiki/edit.php -> mod/wiki/edit.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "75: require_login($course, true, $cm);",
          "77: $context = context_module::instance($cm->id);",
          "80: if ($option == get_string('save', 'wiki')) {",
          "81:     if (!confirm_sesskey()) {",
          "",
          "[Removed Lines]",
          "78: require_capability('mod/wiki:editpage', $context);",
          "",
          "[Added Lines]",
          "79: if (!wiki_user_can_edit($subwiki)) {",
          "80:     print_error('cannoteditpage', 'wiki');",
          "81: }",
          "",
          "---------------"
        ],
        "mod/wiki/editcomments.php||mod/wiki/editcomments.php": [
          "File: mod/wiki/editcomments.php -> mod/wiki/editcomments.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: }",
          "55: require_login($course, true, $cm);",
          "57: $editcomments = new page_wiki_editcomment($wiki, $subwiki, $cm);",
          "58: $comment = new stdClass();",
          "59: if ($action == 'edit') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "58:     print_error('cannotviewpage', 'wiki');",
          "59: }",
          "",
          "---------------"
        ],
        "mod/wiki/files.php||mod/wiki/files.php": [
          "File: mod/wiki/files.php -> mod/wiki/files.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: $PAGE->set_url('/mod/wiki/files.php', array('pageid'=>$pageid));",
          "80: require_login($course, true, $cm);",
          "82: $PAGE->set_title(get_string('wikifiles', 'wiki'));",
          "83: $PAGE->set_heading(get_string('wikifiles', 'wiki'));",
          "84: $PAGE->navbar->add(format_string(get_string('wikifiles', 'wiki')));",
          "",
          "[Removed Lines]",
          "81: $PAGE->set_context($context);",
          "",
          "[Added Lines]",
          "82: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "83:     print_error('cannotviewfiles', 'wiki');",
          "84: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95: echo $OUTPUT->box_start('generalbox');",
          "102: echo $OUTPUT->box_end();",
          "104: if (has_capability('mod/wiki:managefiles', $context)) {",
          "",
          "[Removed Lines]",
          "96: if (has_capability('mod/wiki:viewpage', $context)) {",
          "97:     echo $renderer->wiki_print_subwiki_selector($PAGE->activityrecord, $subwiki, $page, 'files');",
          "98:     echo $renderer->wiki_files_tree($context, $subwiki);",
          "99: } else {",
          "100:     echo $OUTPUT->notification(get_string('cannotviewfiles', 'wiki'));",
          "101: }",
          "",
          "[Added Lines]",
          "100: echo $renderer->wiki_print_subwiki_selector($PAGE->activityrecord, $subwiki, $page, 'files');",
          "101: echo $renderer->wiki_files_tree($context, $subwiki);",
          "",
          "---------------"
        ],
        "mod/wiki/filesedit.php||mod/wiki/filesedit.php": [
          "File: mod/wiki/filesedit.php -> mod/wiki/filesedit.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: $context = context_module::instance($cm->id);",
          "55: require_login($course, true, $cm);",
          "56: require_capability('mod/wiki:managefiles', $context);",
          "58: if (empty($returnurl)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "58:     print_error('cannotviewpage', 'wiki');",
          "59: }",
          "",
          "---------------"
        ],
        "mod/wiki/history.php||mod/wiki/history.php": [
          "File: mod/wiki/history.php -> mod/wiki/history.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: $course = $DB->get_record('course', array('id' => $cm->course), '*', MUST_EXIST);",
          "61: require_login($course, true, $cm);",
          "64: add_to_log($course->id, 'wiki', 'history', \"history.php?pageid=\".$pageid, $pageid, $cm->id);",
          "",
          "[Removed Lines]",
          "62: $context = context_module::instance($cm->id);",
          "63: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "63: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "64:     print_error('cannotviewpage', 'wiki');",
          "65: }",
          "",
          "---------------"
        ],
        "mod/wiki/lib.php||mod/wiki/lib.php": [
          "File: mod/wiki/lib.php -> mod/wiki/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "279: function wiki_print_recent_activity($course, $viewfullnames, $timestart) {",
          "280:     global $CFG, $DB, $OUTPUT;",
          "283:             FROM {wiki_pages} p",
          "284:                 JOIN {wiki_subwikis} sw ON sw.id = p.subwikiid",
          "285:                 JOIN {wiki} w ON w.id = sw.wikiid",
          "",
          "[Removed Lines]",
          "282:     $sql = \"SELECT p.*, w.id as wikiid, sw.groupid",
          "",
          "[Added Lines]",
          "282:     $sql = \"SELECT p.id, p.timemodified, p.subwikiid, sw.wikiid, w.wikimode, sw.userid, sw.groupid",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "288:     if (!$pages = $DB->get_records_sql($sql, array($timestart, $course->id))) {",
          "289:         return false;",
          "290:     }",
          "293:     $wikis = array();",
          "295:     $modinfo = get_fast_modinfo($course);",
          "297:     foreach ($pages as $page) {",
          "310:         }",
          "330:         }",
          "332:     }",
          "333:     unset($pages);",
          "335:     if (!$wikis) {",
          "",
          "[Removed Lines]",
          "291:     $modinfo = get_fast_modinfo($course);",
          "298:         if (!isset($modinfo->instances['wiki'][$page->wikiid])) {",
          "300:             continue;",
          "301:         }",
          "302:         $cm = $modinfo->instances['wiki'][$page->wikiid];",
          "303:         if (!$cm->uservisible) {",
          "304:             continue;",
          "305:         }",
          "306:         $context = context_module::instance($cm->id);",
          "308:         if (!has_capability('mod/wiki:viewpage', $context)) {",
          "309:             continue;",
          "312:         $groupmode = groups_get_activity_groupmode($cm, $course);",
          "314:         if ($groupmode) {",
          "315:             if ($groupmode == SEPARATEGROUPS and !has_capability('mod/wiki:managewiki', $context)) {",
          "317:                 if (isguestuser()) {",
          "319:                     continue;",
          "320:                 }",
          "322:                 if (is_null($modinfo->groups)) {",
          "323:                     $modinfo->groups = groups_get_user_groups($course->id); // load all my groups and cache it in modinfo",
          "324:                     }",
          "326:                 if (!in_array($page->groupid, $modinfo->groups[0])) {",
          "327:                     continue;",
          "328:                 }",
          "329:             }",
          "331:         $wikis[] = $page;",
          "",
          "[Added Lines]",
          "291:     require_once($CFG->dirroot . \"/mod/wiki/locallib.php\");",
          "297:     $subwikivisible = array();",
          "299:         if (!isset($subwikivisible[$page->subwikiid])) {",
          "300:             $subwiki = (object)array('id' => $page->subwikiid, 'wikiid' => $page->wikiid,",
          "301:                 'groupid' => $page->groupid, 'userid' => $page->userid);",
          "302:             $wiki = (object)array('id' => $page->wikiid, 'course' => $course->id, 'wikimode' => $page->wikimode);",
          "303:             $subwikivisible[$page->subwikiid] = wiki_user_can_view($subwiki, $wiki);",
          "305:         if ($subwikivisible[$page->subwikiid]) {",
          "306:             $wikis[] = $page;",
          "309:     unset($subwikivisible);",
          "",
          "---------------"
        ],
        "mod/wiki/locallib.php||mod/wiki/locallib.php": [
          "File: mod/wiki/locallib.php -> mod/wiki/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "725:     global $USER;",
          "729:     $context = context_module::instance($cm->id);",
          "",
          "[Removed Lines]",
          "724: function wiki_user_can_view($subwiki) {",
          "727:     $wiki = wiki_get_wiki($subwiki->wikiid);",
          "728:     $cm = get_coursemodule_from_instance('wiki', $wiki->id);",
          "",
          "[Added Lines]",
          "727: function wiki_user_can_view($subwiki, $wiki = null) {",
          "730:     if (empty($wiki) || $wiki->id != $subwiki->wikiid) {",
          "731:         $wiki = wiki_get_wiki($subwiki->wikiid);",
          "732:     }",
          "733:     $modinfo = get_fast_modinfo($wiki->course);",
          "734:     if (!isset($modinfo->instances['wiki'][$subwiki->wikiid])) {",
          "736:         return false;",
          "737:     }",
          "738:     $cm = $modinfo->instances['wiki'][$subwiki->wikiid];",
          "739:     if (!$cm->uservisible) {",
          "741:         return false;",
          "742:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "768:         if ($wiki->wikimode == 'collaborative' || $wiki->wikimode == 'individual') {",
          "772:                 return has_capability('mod/wiki:viewpage', $context);",
          "",
          "[Removed Lines]",
          "770:             if (groups_is_member($subwiki->groupid)) {",
          "",
          "[Added Lines]",
          "784:             if (in_array($subwiki->groupid, $modinfo->get_groups($cm->groupingid))) {",
          "",
          "---------------"
        ],
        "mod/wiki/lock.php||mod/wiki/lock.php": [
          "File: mod/wiki/lock.php -> mod/wiki/lock.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: require_login($course, false, $cm);",
          "74: $wikipage = new page_wiki_lock($wiki, $subwiki, $cm);",
          "75: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "71: $context = context_module::instance($cm->id);",
          "72: require_capability('mod/wiki:editpage', $context);",
          "",
          "[Added Lines]",
          "71: if (!wiki_user_can_edit($subwiki)) {",
          "72:     print_error('cannoteditpage', 'wiki');",
          "73: }",
          "",
          "---------------"
        ],
        "mod/wiki/map.php||mod/wiki/map.php": [
          "File: mod/wiki/map.php -> mod/wiki/map.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: }",
          "56: require_login($course, true, $cm);",
          "60: $wikipage = new page_wiki_map($wiki, $subwiki, $cm);",
          "61: add_to_log($course->id, \"wiki\", \"map\", \"map.php?pageid=\".$pageid, $pageid, $cm->id);",
          "",
          "[Removed Lines]",
          "57: $context = context_module::instance($cm->id);",
          "58: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "58: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "59:     print_error('cannotviewpage', 'wiki');",
          "60: }",
          "",
          "---------------"
        ],
        "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php": [
          "File: mod/wiki/overridelocks.php -> mod/wiki/overridelocks.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: require_login($course, true, $cm);",
          "72: }",
          "74: $wikipage = new page_wiki_overridelocks($wiki, $subwiki, $cm);",
          "75: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "67: $context = context_module::instance($cm->id);",
          "68: require_capability('mod/wiki:overridelock', $context);",
          "70: if (!confirm_sesskey()) {",
          "71:     print_error(get_string('invalidsesskey', 'wiki'));",
          "",
          "[Added Lines]",
          "67: require_sesskey();",
          "69: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "70:     print_error('cannotviewpage', 'wiki');",
          "72: $context = context_module::instance($cm->id);",
          "73: require_capability('mod/wiki:overridelock', $context);",
          "",
          "---------------"
        ],
        "mod/wiki/prettyview.php||mod/wiki/prettyview.php": [
          "File: mod/wiki/prettyview.php -> mod/wiki/prettyview.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: require_login($course, true, $cm);",
          "59: $wikipage = new page_wiki_prettyview($wiki, $subwiki, $cm);",
          "",
          "[Removed Lines]",
          "56: $context = context_module::instance($cm->id);",
          "57: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "56: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "57:     print_error('cannotviewpage', 'wiki');",
          "58: }",
          "",
          "---------------"
        ],
        "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php": [
          "File: mod/wiki/restoreversion.php -> mod/wiki/restoreversion.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: require_login($course, true, $cm);",
          "63: if ($confirm) {",
          "64:     if (!confirm_sesskey()) {",
          "65:         print_error(get_string('invalidsesskey', 'wiki'));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: if (!wiki_user_can_view($subwiki)) {",
          "64:     print_error('cannotviewpage', 'wiki');",
          "65: }",
          "",
          "---------------"
        ],
        "mod/wiki/search.php||mod/wiki/search.php": [
          "File: mod/wiki/search.php -> mod/wiki/search.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     $gid = 0;",
          "46: }",
          "47: if (!$subwiki = wiki_get_subwiki_by_group($cm->instance, $gid)) {",
          "49: }",
          "50: if (!$wiki = wiki_get_wiki($subwiki->wikiid)) {",
          "51:     print_error('incorrectwikiid', 'wiki');",
          "52: }",
          "54: $wikipage = new page_wiki_search($wiki, $subwiki, $cm);",
          "56: $wikipage->set_search_string($search, $searchcontent);",
          "",
          "[Removed Lines]",
          "48:     return false;",
          "",
          "[Added Lines]",
          "48:     print_error('incorrectsubwikiid', 'wiki');",
          "54: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "55:     print_error('cannotviewfiles', 'wiki');",
          "56: }",
          "",
          "---------------"
        ],
        "mod/wiki/view.php||mod/wiki/view.php": [
          "File: mod/wiki/view.php -> mod/wiki/view.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "271:     print_error('incorrectparameters');",
          "272: }",
          "278: require_once($CFG->libdir . '/completionlib.php');",
          "",
          "[Removed Lines]",
          "274: $context = context_module::instance($cm->id);",
          "275: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "274: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "275:     print_error('cannotviewpage', 'wiki');",
          "276: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "297: $wikipage->set_gid($currentgroup);",
          "298: $wikipage->set_page($page);",
          "300: if($pageid) {",
          "301:     add_to_log($course->id, 'wiki', 'view', \"view.php?pageid=\".$pageid, $pageid, $cm->id);",
          "302: } else if($id) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "301: $context = context_module::instance($cm->id);",
          "",
          "---------------"
        ],
        "mod/wiki/viewversion.php||mod/wiki/viewversion.php": [
          "File: mod/wiki/viewversion.php -> mod/wiki/viewversion.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: require_login($course, true, $cm);",
          "63: $wikipage = new page_wiki_viewversion($wiki, $subwiki, $cm);",
          "65: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "64:     print_error('cannotviewpage', 'wiki');",
          "65: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}