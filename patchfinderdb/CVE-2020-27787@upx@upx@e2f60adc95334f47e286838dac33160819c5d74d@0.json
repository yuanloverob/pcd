{
  "cve_id": "CVE-2020-27787",
  "cve_desc": "A Segmentaation fault was found in UPX in invert_pt_dynamic() function in p_lx_elf.cpp. An attacker with a crafted input file allows invalid memory address access that could lead to a denial of service.",
  "repo": "upx/upx",
  "patch_hash": "e2f60adc95334f47e286838dac33160819c5d74d",
  "patch_info": {
    "commit_hash": "e2f60adc95334f47e286838dac33160819c5d74d",
    "repo": "upx/upx",
    "commit_url": "https://github.com/upx/upx/commit/e2f60adc95334f47e286838dac33160819c5d74d",
    "files": [
      "src/p_lx_elf.cpp"
    ],
    "message": "Detect 0==DT_SYMTAB in invert_pt_dynamic()\n\nhttps://github.com/upx/upx/issues/333\n\tmodified:   p_lx_elf.cpp",
    "before_after_code_files": [
      "src/p_lx_elf.cpp||src/p_lx_elf.cpp"
    ]
  },
  "patch_diff": {
    "src/p_lx_elf.cpp||src/p_lx_elf.cpp": [
      "File: src/p_lx_elf.cpp -> src/p_lx_elf.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1639:         unsigned const *const buckets = &hashtab[2];",
      "1640:         unsigned const *const chains = &buckets[nbucket]; (void)chains;",
      "1644:         || (nbucket>>31) || (file_size/sizeof(unsigned)) <= (2*nbucket)  // FIXME: weak",
      "1645:         || ((v_hsh < v_sym) && (v_sym - v_hsh) < (sizeof(unsigned)*2  // headers",
      "1646:                 + sizeof(*buckets)*nbucket  // buckets",
      "",
      "[Removed Lines]",
      "1642:         unsigned const v_sym = get_te32(&dynp0[-1+ x_sym].d_val);",
      "1643:         if (!nbucket",
      "",
      "[Added Lines]",
      "1642:         unsigned const v_sym = !x_sym ? 0 : get_te32(&dynp0[-1+ x_sym].d_val);",
      "1643:         if (!nbucket || !v_sym",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1670:         unsigned     const *const hasharr = &buckets[n_bucket]; (void)hasharr;",
      "1675:         || (-1+ n_bitmask) & n_bitmask  // not a power of 2",
      "1676:         || 8*sizeof(unsigned) <= gnu_shift  // shifted result always == 0",
      "1677:         || (n_bucket>>30)  // fie on fuzzers",
      "",
      "[Removed Lines]",
      "1673:         unsigned const v_sym = get_te32(&dynp0[-1+ x_sym].d_val);",
      "1674:         if (!n_bucket || !n_bitmask",
      "",
      "[Added Lines]",
      "1673:         unsigned const v_sym = !x_sym ? 0 : get_te32(&dynp0[-1+ x_sym].d_val);",
      "1674:         if (!n_bucket || !n_bitmask || !v_sym",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "5139:         unsigned const *const buckets = &hashtab[2];",
      "5140:         unsigned const *const chains = &buckets[nbucket]; (void)chains;",
      "5144:         || (nbucket>>31) || (file_size/sizeof(unsigned)) <= (2*nbucket)  // FIXME: weak",
      "5145:         || ((v_hsh < v_sym) && (v_sym - v_hsh) < (sizeof(unsigned)*2  // headers",
      "5146:                 + sizeof(*buckets)*nbucket  // buckets",
      "",
      "[Removed Lines]",
      "5142:         unsigned const v_sym = get_te32(&dynp0[-1+ x_sym].d_val);",
      "5143:         if (!nbucket",
      "",
      "[Added Lines]",
      "5142:         unsigned const v_sym = !x_sym ? 0 : get_te32(&dynp0[-1+ x_sym].d_val);",
      "5143:         if (!nbucket || !v_sym",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "5170:         unsigned     const *const hasharr = &buckets[n_bucket]; (void)hasharr;",
      "5175:         || (-1+ n_bitmask) & n_bitmask  // not a power of 2",
      "5176:         || 8*sizeof(upx_uint64_t) <= gnu_shift  // shifted result always == 0",
      "5177:         || (n_bucket>>30)  // fie on fuzzers",
      "",
      "[Removed Lines]",
      "5173:         upx_uint64_t const v_sym = get_te64(&dynp0[-1+ x_sym].d_val);",
      "5174:         if (!n_bucket || !n_bitmask",
      "",
      "[Added Lines]",
      "5173:         upx_uint64_t const v_sym = !x_sym ? 0 : get_te64(&dynp0[-1+ x_sym].d_val);",
      "5174:         if (!n_bucket || !n_bitmask || !v_sym",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "527139978abdb15a664a5a88e40d44ee576c7089",
      "candidate_info": {
        "commit_hash": "527139978abdb15a664a5a88e40d44ee576c7089",
        "repo": "upx/upx",
        "commit_url": "https://github.com/upx/upx/commit/527139978abdb15a664a5a88e40d44ee576c7089",
        "files": [
          "src/p_lx_elf.cpp"
        ],
        "message": "DT_HASH chains might be trimmed (64-bit, too)\n\nhttps://github.com/upx/upx/issues/383\n\tmodified:   p_lx_elf.cpp",
        "before_after_code_files": [
          "src/p_lx_elf.cpp||src/p_lx_elf.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/p_lx_elf.cpp||src/p_lx_elf.cpp"
          ],
          "candidate": [
            "src/p_lx_elf.cpp||src/p_lx_elf.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/p_lx_elf.cpp||src/p_lx_elf.cpp": [
          "File: src/p_lx_elf.cpp -> src/p_lx_elf.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "5241:         unsigned const *const chains = &buckets[nbucket]; (void)chains;",
          "5243:         unsigned const v_sym = !x_sym ? 0 : get_te32(&dynp0[-1+ x_sym].d_val);",
          "5250:         ) {",
          "5252:                 \"bad DT_HASH nbucket=%#x  len=%#x\",",
          "5253:                 nbucket, (v_sym - v_hsh));",
          "5254:             throwCantPack(msg);",
          "",
          "[Removed Lines]",
          "5244:         if (!nbucket || !v_sym",
          "5245:         || (nbucket>>31) || (file_size/sizeof(unsigned)) <= (2*nbucket)  // FIXME: weak",
          "5246:         || ((v_hsh < v_sym) && (v_sym - v_hsh) < (sizeof(unsigned)*2  // headers",
          "5247:                 + sizeof(*buckets)*nbucket  // buckets",
          "5248:                 + sizeof(*chains) *nbucket  // chains",
          "5249:            ))",
          "5251:             char msg[90]; snprintf(msg, sizeof(msg),",
          "",
          "[Added Lines]",
          "5244:         if (!nbucket || (nbucket>>31) || !v_sym || file_size <= v_sym",
          "5245:         || ((v_hsh < v_sym) && (v_sym - v_hsh) < sizeof(*buckets)*(2+ nbucket))",
          "5247:             char msg[80]; snprintf(msg, sizeof(msg),",
          "5248:                 \"bad DT_HASH nbucket=%#x  len=%#x\",",
          "5249:                 nbucket, (v_sym - v_hsh));",
          "5250:             throwCantPack(msg);",
          "5251:         }",
          "5252:         unsigned chmax = 0;",
          "5253:         for (unsigned j= 0; j < nbucket; ++j) {",
          "5254:             if (chmax < buckets[j]) {",
          "5255:                 chmax = buckets[j];",
          "5256:             }",
          "5257:         }",
          "5258:         if ((v_hsh < v_sym) && (v_sym - v_hsh) <",
          "5259:                 (sizeof(*buckets)*(2+ nbucket) + sizeof(*chains)*(1+ chmax))) {",
          "5260:             char msg[80]; snprintf(msg, sizeof(msg),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "47bc68fa6b5bcb170f947f0341940444b3c3d8b9",
      "candidate_info": {
        "commit_hash": "47bc68fa6b5bcb170f947f0341940444b3c3d8b9",
        "repo": "upx/upx",
        "commit_url": "https://github.com/upx/upx/commit/47bc68fa6b5bcb170f947f0341940444b3c3d8b9",
        "files": [
          "src/p_lx_elf.cpp"
        ],
        "message": "DT_HASH chains might be trimmed\n\nhttps://github.com/upx/upx/issues/383\n\tmodified:   p_lx_elf.cpp",
        "before_after_code_files": [
          "src/p_lx_elf.cpp||src/p_lx_elf.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/p_lx_elf.cpp||src/p_lx_elf.cpp"
          ],
          "candidate": [
            "src/p_lx_elf.cpp||src/p_lx_elf.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/p_lx_elf.cpp||src/p_lx_elf.cpp": [
          "File: src/p_lx_elf.cpp -> src/p_lx_elf.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1663:         unsigned const *const chains = &buckets[nbucket]; (void)chains;",
          "1665:         unsigned const v_sym = !x_sym ? 0 : get_te32(&dynp0[-1+ x_sym].d_val);",
          "1672:         ) {",
          "1674:                 \"bad DT_HASH nbucket=%#x  len=%#x\",",
          "1675:                 nbucket, (v_sym - v_hsh));",
          "1676:             throwCantPack(msg);",
          "",
          "[Removed Lines]",
          "1666:         if (!nbucket || !v_sym",
          "1667:         || (nbucket>>31) || (file_size/sizeof(unsigned)) <= (2*nbucket)  // FIXME: weak",
          "1668:         || ((v_hsh < v_sym) && (v_sym - v_hsh) < (sizeof(unsigned)*2  // headers",
          "1669:                 + sizeof(*buckets)*nbucket  // buckets",
          "1670:                 + sizeof(*chains) *nbucket  // chains",
          "1671:            ))",
          "1673:             char msg[90]; snprintf(msg, sizeof(msg),",
          "",
          "[Added Lines]",
          "1666:         if (!nbucket || (nbucket>>31) || !v_sym || file_size <= v_sym",
          "1667:         || ((v_hsh < v_sym) && (v_sym - v_hsh) < sizeof(*buckets)*(2+ nbucket))",
          "1669:             char msg[80]; snprintf(msg, sizeof(msg),",
          "1670:                 \"bad DT_HASH nbucket=%#x  len=%#x\",",
          "1671:                 nbucket, (v_sym - v_hsh));",
          "1672:             throwCantPack(msg);",
          "1673:         }",
          "1674:         unsigned chmax = 0;",
          "1675:         for (unsigned j= 0; j < nbucket; ++j) {",
          "1676:             if (chmax < buckets[j]) {",
          "1677:                 chmax = buckets[j];",
          "1678:             }",
          "1679:         }",
          "1680:         if ((v_hsh < v_sym) && (v_sym - v_hsh) <",
          "1681:                 (sizeof(*buckets)*(2+ nbucket) + sizeof(*chains)*(1+ chmax))) {",
          "1682:             char msg[80]; snprintf(msg, sizeof(msg),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e6ccef2cf1fea965038e41254a0c64f60f4ec2ba",
      "candidate_info": {
        "commit_hash": "e6ccef2cf1fea965038e41254a0c64f60f4ec2ba",
        "repo": "upx/upx",
        "commit_url": "https://github.com/upx/upx/commit/e6ccef2cf1fea965038e41254a0c64f60f4ec2ba",
        "files": [
          "src/p_lx_elf.cpp"
        ],
        "message": "MSVC strikes again\n\n\tmodified:   p_lx_elf.cpp",
        "before_after_code_files": [
          "src/p_lx_elf.cpp||src/p_lx_elf.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/p_lx_elf.cpp||src/p_lx_elf.cpp"
          ],
          "candidate": [
            "src/p_lx_elf.cpp||src/p_lx_elf.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/p_lx_elf.cpp||src/p_lx_elf.cpp": [
          "File: src/p_lx_elf.cpp -> src/p_lx_elf.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1683:         unsigned const *const chains = &buckets[nbucket]; (void)chains;",
          "1685:         unsigned const v_sym = !x_sym ? 0 : get_te32(&dynp0[-1+ x_sym].d_val);",
          "1687:         || ((v_hsh < v_sym) && (v_sym - v_hsh) < sizeof(*buckets)*(2+ nbucket))",
          "1688:         ) {",
          "1689:             char msg[80]; snprintf(msg, sizeof(msg),",
          "",
          "[Removed Lines]",
          "1686:         if (!nbucket || (nbucket>>31) || !v_sym || file_size <= v_sym",
          "",
          "[Added Lines]",
          "1686:         if (!nbucket || (nbucket>>31) || !v_sym || (unsigned)file_size <= v_sym",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5298:         unsigned const *const chains = &buckets[nbucket]; (void)chains;",
          "5300:         unsigned const v_sym = !x_sym ? 0 : get_te32(&dynp0[-1+ x_sym].d_val);",
          "5302:         || ((v_hsh < v_sym) && (v_sym - v_hsh) < sizeof(*buckets)*(2+ nbucket))",
          "5303:         ) {",
          "5304:             char msg[80]; snprintf(msg, sizeof(msg),",
          "",
          "[Removed Lines]",
          "5301:         if (!nbucket || (nbucket>>31) || !v_sym || file_size <= v_sym",
          "",
          "[Added Lines]",
          "5301:         if (!nbucket || (nbucket>>31) || !v_sym || (unsigned)file_size <= v_sym",
          "",
          "---------------"
        ]
      }
    }
  ]
}