{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a0fe5fe54fe57b4f1c8011d420c5775cc6f94968",
      "candidate_info": {
        "commit_hash": "a0fe5fe54fe57b4f1c8011d420c5775cc6f94968",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a0fe5fe54fe57b4f1c8011d420c5775cc6f94968",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c"
        ],
        "message": "When Select-Trace is enabled (in debugging builds only) do not show the result of Window function tree rewrites if there are no window functions.\n\nFossilOrigin-Name: d1acf72ae1ea7484bb9c3a8630094f1a3a9597578c7b9d6e02fc0a4e3f59c57d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f5ee30426e8876e70304f852153b56991a2a66e0f6a82597e9dcccf49163272d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5727:     goto select_end;",
          "5728:   }",
          "5729: #if SELECTTRACE_ENABLED",
          "5731:     SELECTTRACE(0x104,pParse,p, (\"after window rewrite:\\n\"));",
          "5732:     sqlite3TreeViewSelect(0, p, 0);",
          "5733:   }",
          "",
          "[Removed Lines]",
          "5730:   if( sqlite3SelectTrace & 0x108 ){",
          "",
          "[Added Lines]",
          "5730:   if( p->pWin && (sqlite3SelectTrace & 0x108)!=0 ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c72afaf33c8e3fd86999a3f56a382cdf2845caf",
      "candidate_info": {
        "commit_hash": "8c72afaf33c8e3fd86999a3f56a382cdf2845caf",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8c72afaf33c8e3fd86999a3f56a382cdf2845caf",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/window1.test"
        ],
        "message": "Add a test case for fix in check-in [1ca0bd982ab1183b]\n\nFossilOrigin-Name: 519864da8bb671941a64bf333c2086ad9a068b5f85759e7abd368f0706d3aefd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a96d02b4ab8c70cc20b322e4fa3a4b8814f05c51f5d8b071ec9d69e7379f3ea5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1314:   VALUES(2),(3),(count(*)OVER()),(4),(5);",
          "1315: } {2 3 1 4 5}",
          "1318: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1317: # 2019-12-17 crash test case found by Yongheng and Rui",
          "1318: # See check-in 1ca0bd982ab1183b",
          "1319: #",
          "1320: reset_db",
          "1321: do_execsql_test 37.10 {",
          "1322:   CREATE TABLE t0(a UNIQUE, b PRIMARY KEY);",
          "1323:   CREATE VIEW v0(c) AS SELECT max((SELECT count(a)OVER(ORDER BY 1))) FROM t0;",
          "1324:   SELECT c FROM v0 WHERE c BETWEEN 10 AND 20;",
          "1325: } {}",
          "1326: do_execsql_test 37.20 {",
          "1327:   DROP VIEW v0;",
          "1328:   CREATE VIEW v0(c) AS SELECT max((SELECT count(a)OVER(ORDER BY 1234))) FROM t0;",
          "1329:   SELECT c FROM v0 WHERE c BETWEEN -10 AND 20;",
          "1330: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cda50737f4be40a02bf786f99cdcc5cb87bb568e",
      "candidate_info": {
        "commit_hash": "cda50737f4be40a02bf786f99cdcc5cb87bb568e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cda50737f4be40a02bf786f99cdcc5cb87bb568e",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases added to test/fuzzdata8.db\n\nFossilOrigin-Name: 25fec62ac5a23382a54eee78d3705885eb4065826d7e8da098816d03ae9dc639",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fd7316cda0fdfe86985f41a97dff3beba188606ec9bc6fef38a686a6976a6e01",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c143114460ec0c214218978baa98b6585649cc22",
      "candidate_info": {
        "commit_hash": "c143114460ec0c214218978baa98b6585649cc22",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c143114460ec0c214218978baa98b6585649cc22",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "src/insert.c",
          "src/pragma.c",
          "src/sqliteInt.h",
          "src/update.c",
          "src/vtab.c"
        ],
        "message": "Some (but not all) INSERT and UPDATE statements now work for STORED columns.\n\nFossilOrigin-Name: fe7517bf4d360597576ab9aba29627d7926d23f2bbbfb3e7bf4d32761617574c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "src/insert.c||src/insert.c",
          "src/pragma.c||src/pragma.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/update.c||src/update.c",
          "src/vtab.c||src/vtab.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8f67b89b04622c1509dc102a83be7a80057dc791625804fc2c294089c98b97e4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1564:       goto generated_error;",
          "1565:     }",
          "1566:   }",
          "1568:   pCol->colFlags |= eType;",
          "1569:   pCol->pDflt = sqlite3ExprDup(pParse->db, pExpr, 0);",
          "1570:   goto generated_done;",
          "",
          "[Removed Lines]",
          "1567:   pTab->nVCol++;",
          "",
          "[Added Lines]",
          "1567:   if( eType==COLFLAG_VIRTUAL ) pTab->nVCol++;",
          "1569:   assert( TF_HasVirtual==COLFLAG_VIRTUAL );",
          "1570:   assert( TF_HasStored==COLFLAG_STORED );",
          "1571:   pTab->tabFlags |= eType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2177:   }",
          "2179: #ifndef SQLITE_OMIT_GENERATED_COLUMNS",
          "2181:     int ii;",
          "2182:     for(ii=0; ii<p->nCol; ii++){",
          "2183:       if( (p->aCol[ii].colFlags & (COLFLAG_STORED|COLFLAG_VIRTUAL))!=0 ){",
          "",
          "[Removed Lines]",
          "2180:   if( p->nVCol ){",
          "",
          "[Added Lines]",
          "2183:   if( p->tabFlags & (TF_HasVirtual|TF_HasStored) ){",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "202:   return 0;",
          "203: }",
          "205: #ifndef SQLITE_OMIT_AUTOINCREMENT",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "205: #ifndef SQLITE_OMIT_GENERATED_COLUMNS",
          "213: void sqlite3ComputeStoredColumns(",
          "217: ){",
          "218:   int i;",
          "219:   pParse->iSelfTab = -iRegStore;",
          "220:   for(i=0; i<pTab->nCol; i++, iRegStore++){",
          "221:     u32 colFlags = pTab->aCol[i].colFlags;",
          "222:     if( (colFlags & COLFLAG_VIRTUAL)!=0 ){",
          "224:       iRegStore--;",
          "225:     }else if( (colFlags & COLFLAG_STORED)!=0 ){",
          "227:       sqlite3ExprCode(pParse, pTab->aCol[i].pDflt, iRegStore);",
          "228:     }",
          "229:   }",
          "230:   pParse->iSelfTab = 0;",
          "231: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1028:           iRegStore--;",
          "1029:           continue;",
          "1033:           sqlite3ExprCodeFactorable(pParse, pTab->aCol[i].pDflt, iRegStore);",
          "1034:           continue;",
          "1035:         }",
          "",
          "[Removed Lines]",
          "1030:         }else if( (colFlags & COLFLAG_STORED)!=0 || pColumn==0 ){",
          "",
          "[Added Lines]",
          "1060:         }else if( (colFlags & COLFLAG_STORED)!=0 ){",
          "1062:           continue;",
          "1063:         }else if( pColumn==0 ){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1061:       }",
          "1062:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1096: #ifndef SQLITE_OMIT_GENERATED_COLUMNS",
          "1099:     if( pTab->tabFlags & TF_HasStored ){",
          "1100:       sqlite3ComputeStoredColumns(pParse, regRowid+1, pTab);",
          "1101:     }",
          "1102: #endif",
          "",
          "---------------"
        ],
        "src/pragma.c||src/pragma.c": [
          "File: src/pragma.c -> src/pragma.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1108:           }",
          "1109:           if( pCol->colFlags & COLFLAG_VIRTUAL ){",
          "1115:           }",
          "1116:         }",
          "",
          "[Removed Lines]",
          "1111:           }else if( pCol->colFlags & COLFLAG_VIRTUAL ){",
          "1113:           }else{",
          "",
          "[Added Lines]",
          "1111:           }else if( pCol->colFlags & COLFLAG_STORED ){",
          "1113:           }else{ assert( pCol->colFlags & COLFLAG_HIDDEN );",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4020: # define sqlite3AutoincrementEnd(X)",
          "4021: #endif",
          "4022: void sqlite3Insert(Parse*, SrcList*, Select*, IdList*, int, Upsert*);",
          "4023: void *sqlite3ArrayAllocate(sqlite3*,void*,int,int*,int*);",
          "4024: IdList *sqlite3IdListAppend(Parse*, IdList*, Token*);",
          "4025: int sqlite3IdListIndex(IdList*,const char*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4030: #ifndef SQLITE_OMIT_GENERATED_COLUMNS",
          "4031:   void sqlite3ComputeStoredColumns(Parse*, int, Table*);",
          "4032: #endif",
          "",
          "---------------"
        ],
        "src/update.c||src/update.c": [
          "File: src/update.c -> src/update.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "671:   for(i=0, k=regNew; i<pTab->nCol; i++, k++){",
          "672:     if( i==pTab->iPKey ){",
          "673:       sqlite3VdbeAddOp2(v, OP_Null, 0, k);",
          "676:     }else{",
          "677:       j = aXRef[i];",
          "678:       if( j>=0 ){",
          "",
          "[Removed Lines]",
          "674:     }else if( (pTab->aCol[i].colFlags & COLFLAG_VIRTUAL)!=0 ){",
          "675:       k--;",
          "",
          "[Added Lines]",
          "674:     }else if( (pTab->aCol[i].colFlags & COLFLAG_GENERATED)!=0 ){",
          "675:       if( pTab->aCol[i].colFlags & COLFLAG_VIRTUAL ) k--;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "691:       }",
          "692:     }",
          "693:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "694: #ifndef SQLITE_OMIT_GENERATED_COLUMNS",
          "695:   if( pTab->tabFlags & TF_HasStored ){",
          "696:     sqlite3ComputeStoredColumns(pParse, regNew, pTab);",
          "697:   }",
          "698: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "726:     for(i=0, k=regNew; i<pTab->nCol; i++, k++){",
          "729:       }else if( aXRef[i]<0 && i!=pTab->iPKey ){",
          "730:         sqlite3ExprCodeGetColumnOfTable(pParse, pTab, iDataCur, i, k);",
          "731:       }",
          "732:     }",
          "733:   }",
          "735:   if( !isView ){",
          "",
          "[Removed Lines]",
          "727:       if( pTab->aCol[i].colFlags & COLFLAG_VIRTUAL ){",
          "728:         k--;",
          "",
          "[Added Lines]",
          "732:       if( pTab->aCol[i].colFlags & COLFLAG_GENERATED ){",
          "733:         if( pTab->aCol[i].colFlags & COLFLAG_VIRTUAL ) k--;",
          "738: #ifndef SQLITE_OMIT_GENERATED_COLUMNS",
          "739:     if( pTab->tabFlags & TF_HasStored ){",
          "740:       sqlite3ComputeStoredColumns(pParse, regNew, pTab);",
          "741:     }",
          "742: #endif",
          "",
          "---------------"
        ],
        "src/vtab.c||src/vtab.c": [
          "File: src/vtab.c -> src/vtab.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "624:       rc = SQLITE_ERROR;",
          "625:     }else{",
          "626:       int iCol;",
          "",
          "[Removed Lines]",
          "627:       u8 oooHidden = 0;",
          "",
          "[Added Lines]",
          "627:       u16 oooHidden = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fffaf2301346190479d9febd4b563cf117bd47cb",
      "candidate_info": {
        "commit_hash": "fffaf2301346190479d9febd4b563cf117bd47cb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fffaf2301346190479d9febd4b563cf117bd47cb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/dbfuzz001.test"
        ],
        "message": "When saving the position of a cursor at the b-tree layer, allocate a few extra bytes at the end of the buffer used to save the key. Otherwise, if the key is corrupt, the code that restores the cursor position may overread the buffer by a little.\n\nFossilOrigin-Name: 160b1e31c0f27257c06c2987af9ec3a64abfacb2150325b72e8ccd3d217b5baa",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "test/dbfuzz001.test||test/dbfuzz001.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7e4ed8b5c2047b69bbb037497111e56e465a4d9f8afca3b337f9ac744471dc4a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "661:     pCur->nKey = sqlite3BtreeIntegerKey(pCur);",
          "662:   }else{",
          "664:     void *pKey;",
          "665:     pCur->nKey = sqlite3BtreePayloadSize(pCur);",
          "667:     if( pKey ){",
          "668:       rc = sqlite3BtreePayload(pCur, 0, (int)pCur->nKey, pKey);",
          "669:       if( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "666:     pKey = sqlite3Malloc( pCur->nKey );",
          "",
          "[Added Lines]",
          "671:     pKey = sqlite3Malloc( pCur->nKey + 9 + 8 );",
          "",
          "---------------"
        ],
        "test/dbfuzz001.test||test/dbfuzz001.test": [
          "File: test/dbfuzz001.test -> test/dbfuzz001.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "269:   catchsql {INSERT INTO t3 SELECT * FROM t2;}",
          "270: } {1 {database disk image is malformed}}",
          "272: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "273: do_test dbfuzz001-110 {",
          "274:   sqlite3 db {}",
          "275:   db deserialize [decode_hexdb {",
          "276: | size 3584 pagesize 512 filename x/c02.db",
          "277: | page 1 offset 0",
          "278: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "279: |     16: 02 00 01 01 00 40 20 20 00 00 00 0c 00 00 00 07   .....@  ........",
          "280: |     32: 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 04   ................",
          "281: |     48: 00 00 00 00 00 00 00 04 00 00 00 01 00 00 00 00   ................",
          "282: |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0c   ................",
          "283: |     96: 00 2e 2c 50 0d 00 00 00 06 01 06 00 01 da 01 b0   ..,P............",
          "284: |    112: 01 56 01 86 01 2a 01 06 00 00 00 00 00 00 00 00   .V...*..........",
          "285: |    256: 00 00 00 00 00 00 22 07 06 17 11 11 01 31 74 61   ......\"......1ta",
          "286: |    272: 62 6c 65 74 34 74 34 07 43 52 45 41 54 45 20 54   blet4t4.CREATE T",
          "287: |    288: 41 42 4c 45 20 74 34 28 78 29 2a 06 06 17 13 11   ABLE t4(x)*.....",
          "288: |    304: 01 3f 69 6e 64 65 78 74 33 78 74 33 05 43 52 45   .?indext3xt3.CRE",
          "289: |    320: 41 54 45 20 49 4e 44 45 58 20 74 33 78 20 4f 4e   ATE INDEX t3x ON",
          "290: |    336: 20 74 33 28 78 29 2e 04 06 17 15 11 01 45 69 6e    t3(x).......Ein",
          "291: |    352: 64 65 78 74 32 63 64 74 32 05 43 52 45 41 54 45   dext2cdt2.CREATE",
          "292: |    368: 20 49 4e 44 45 58 20 74 32 63 64 20 4f 4e 20 74    INDEX t2cd ON t",
          "293: |    384: 32 28 63 2c 64 29 28 05 06 17 11 11 01 3d 74 61   2(c,d)(......=ta",
          "294: |    400: 62 6c 65 74 33 74 33 07 43 52 45 41 54 45 20 54   blet3t3.CREATE T",
          "295: |    416: 41 42 4c 45 20 74 33 28 63 2c 78 2c 65 2c 66 29   ABLE t3(c,x,e,f)",
          "296: |    432: 28 02 06 17 11 11 01 3d 74 61 74 65 6c 03 62 74   (......=tatel.bt",
          "297: |    448: 32 32 43 52 45 41 54 45 20 54 41 42 4c 45 20 74   22CREATE TABLE t",
          "298: |    464: 32 28 63 2c 64 2c 65 2c 66 29 24 01 06 17 11 11   2(c,d,e,f)$.....",
          "299: |    480: 01 35 74 61 62 6c 65 74 31 74 31 02 43 52 45 41   .5tablet1t1.CREA",
          "300: |    496: 54 45 20 54 41 42 4c 45 20 74 31 28 61 2c 62 29   TE TABLE t1(a,b)",
          "301: | page 2 offset 512",
          "302: |      0: 0d 00 00 00 04 01 cf 00 01 fa 01 f3 01 de 01 cf   ................",
          "303: |    160: 00 00 20 00 00 00 00 00 00 00 00 00 00 00 00 00   .. .............",
          "304: |    448: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0d   ................",
          "305: |    464: 04 03 17 17 73 65 76 65 6e 65 69 67 68 74 13 03   ....seveneight..",
          "306: |    480: 03 07 07 40 14 00 00 00 00 00 00 40 18 00 00 00   ...@.......@....",
          "307: |    496: 00 00 00 05 02 03 01 01 03 04 04 01 03 09 01 02   ................",
          "308: | page 3 offset 1024",
          "309: |      0: 0d 00 00 00 08 01 54 00 01 f7 01 ec 01 c5 01 aa   ......T.........",
          "310: |     16: 01 a1 01 96 01 6f 01 54 00 00 00 00 00 00 00 00   .....o.T........",
          "311: |    112: 00 00 dd 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "312: |    336: 00 00 00 00 19 08 05 17 17 17 17 65 69 67 68 74   ...........eight",
          "313: |    352: 65 69 67 68 74 73 65 76 65 6e 73 65 76 65 6e 25   eightsevenseven%",
          "314: |    368: 07 05 07 07 07 07 40 18 00 00 00 00 00 00 40 18   ......@.......@.",
          "315: |    384: 00 00 00 00 00 00 40 14 00 00 00 00 00 00 40 14   ......@.......@.",
          "316: |    400: 00 00 00 00 00 00 09 06 05 01 01 01 01 04 04 03   ................",
          "317: |    416: 03 07 05 05 01 01 09 09 02 02 19 04 05 17 17 17   ................",
          "318: |    432: 17 73 65 76 65 6e 65 69 67 68 74 65 69 67 68 74   .seveneighteight",
          "319: |    448: 73 65 76 65 6e 25 03 05 07 07 07 07 40 14 00 00   seven%......@...",
          "320: |    464: 00 00 00 00 40 18 00 00 00 00 00 00 40 18 00 00   ....@.......@...",
          "321: |    480: 00 00 00 00 40 14 00 00 00 00 00 00 09 02 05 01   ....@...........",
          "322: |    496: 01 01 01 03 04 04 03 07 01 05 09 01 01 09 02 02   ................",
          "323: | page 4 offset 1536",
          "324: |      0: 0d 00 00 00 00 02 00 00 00 00 00 00 00 00 00 00   ................",
          "325: |    192: 00 00 00 00 00 00 7f 00 00 00 00 00 00 00 00 00   ................",
          "326: |    208: 00 e5 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "327: | page 5 offset 2048",
          "328: |      0: 0a 00 00 00 08 01 96 00 01 fa 01 c4 01 f2 01 bc   ................",
          "329: |     16: 01 dc 01 a6 01 96 01 cc 00 00 00 00 00 00 00 00   ................",
          "330: |    240: 00 00 00 00 00 00 00 00 00 00 00 00 00 0e 00 00   ................",
          "331: |    400: 00 00 00 00 00 00 0f 04 17 07 01 65 69 67 68 74   ...........eight",
          "332: |    416: 65 69 67 68 74 08 15 04 07 07 01 40 18 00 00 00   eight......@....",
          "333: |    432: 00 00 00 40 18 00 00 00 00 00 00 07 07 04 01 01   ...@............",
          "334: |    448: 01 04 04 06 07 04 01 01 01 02 02 05 0f 04 17 17   ................",
          "335: |    464: 01 73 65 76 65 6e 65 69 67 68 74 04 15 04 07 07   .seveneight.....",
          "336: |    480: 01 40 14 00 00 00 00 00 00 40 18 00 00 00 00 00   .@.......@......",
          "337: |    496: 00 03 07 04 01 01 01 03 04 02 05 04 09 01 09 02   ................",
          "338: | page 6 offset 2560",
          "339: |      0: 0a 00 00 00 00 02 00 00 00 00 00 00 00 00 00 00   ................",
          "340: |    464: 00 00 00 00 00 00 00 00 00 00 7f 00 00 00 00 00   ................",
          "341: | page 7 offset 3072",
          "342: |      0: 0d 00 00 00 08 01 c2 00 01 fb 01 f6 01 f1 01 ec   ................",
          "343: |     16: 01 e0 01 d4 01 cb 01 c2 00 00 00 00 00 00 00 00   ................",
          "344: |    448: 00 00 07 08 02 17 65 69 67 68 74 07 07 02 17 65   ......eight....e",
          "345: |    464: 69 67 68 74 0a 06 02 07 40 18 00 00 00 00 00 00   ight....@.......",
          "346: |    480: 0a 05 02 07 40 18 00 00 00 00 00 00 03 04 02 01   ....@...........",
          "347: |    496: 04 03 03 02 01 04 03 02 02 01 02 03 01 02 01 02   ................",
          "348: | end x/c02.db",
          "349:   }]",
          "350:   execsql {",
          "351:     DELETE FROM t3 WHERE x IN (SELECT x FROM t4);",
          "352:   }",
          "353: } {}",
          "",
          "---------------"
        ]
      }
    }
  ]
}