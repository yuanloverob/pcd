{
  "cve_id": "CVE-2014-0236",
  "cve_desc": "file before 5.18, as used in the Fileinfo component in PHP before 5.6.0, allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a zero root_storage value in a CDF file, related to cdf.c and readcdf.c.",
  "repo": "php/php-src",
  "patch_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
  "patch_info": {
    "commit_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "files": [
      "NEWS",
      "ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c"
    ],
    "message": "Fixed bug #67329 fileinfo: NULL pointer deference flaw by processing certain CDF files",
    "before_after_code_files": [
      "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c"
    ]
  },
  "patch_diff": {
    "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c": [
      "File: ext/fileinfo/libmagic/cdf.c -> ext/fileinfo/libmagic/cdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include \"file.h\"",
      "37: #ifndef lint",
      "39: #endif",
      "41: #include <assert.h>",
      "",
      "[Removed Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.53 2013/02/26 16:20:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "689: int",
      "690: cdf_read_short_stream(const cdf_info_t *info, const cdf_header_t *h,",
      "692: {",
      "693:  size_t i;",
      "694:  const cdf_directory_t *d;",
      "696:  for (i = 0; i < dir->dir_len; i++)",
      "697:   if (dir->dir_tab[i].d_type == CDF_DIR_TYPE_ROOT_STORAGE)",
      "698:    break;",
      "",
      "[Removed Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn)",
      "",
      "[Added Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn,",
      "692:     const cdf_directory_t **root)",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h": [
      "File: ext/fileinfo/libmagic/cdf.h -> ext/fileinfo/libmagic/cdf.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "300: int cdf_read_ssat(const cdf_info_t *, const cdf_header_t *, const cdf_sat_t *,",
      "301:     cdf_sat_t *);",
      "302: int cdf_read_short_stream(const cdf_info_t *, const cdf_header_t *,",
      "304: int cdf_read_property_info(const cdf_stream_t *, const cdf_header_t *, uint32_t,",
      "305:     cdf_property_info_t **, size_t *, size_t *);",
      "306: int cdf_read_summary_info(const cdf_info_t *, const cdf_header_t *,",
      "",
      "[Removed Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *);",
      "",
      "[Added Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *,",
      "304:     const cdf_directory_t **);",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c": [
      "File: ext/fileinfo/libmagic/readcdf.c -> ext/fileinfo/libmagic/readcdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #include \"file.h\"",
      "28: #ifndef lint",
      "30: #endif",
      "32: #include <stdlib.h>",
      "",
      "[Removed Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
      "",
      "[Added Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.40 2014/03/06 15:23:33 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: # define strcasestr strstr",
      "78: #endif",
      "80: private const char *",
      "81: cdf_app_to_mime(const char *vbuf, const struct nv *nv)",
      "82: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80: static const struct cv {",
      "81:  uint64_t clsid[2];",
      "82:  const char *mime;",
      "83: } clsid2mime[] = {",
      "84:  {",
      "85: #ifdef PHP_WIN32",
      "86:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "87: #else",
      "88:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "89: #endif",
      "90:   \"x-msi\",",
      "91:  }",
      "92: }, clsid2desc[] = {",
      "93:  {",
      "94: #ifdef PHP_WIN32",
      "95:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "96: #else",
      "97:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "98: #endif",
      "99:   \"MSI Installer\",",
      "100:  },",
      "101: };",
      "103: private const char *",
      "104: cdf_clsid_to_mime(const uint64_t clsid[2], const struct cv *cv)",
      "105: {",
      "106:  size_t i;",
      "107:  for (i = 0; cv[i].mime != NULL; i++) {",
      "108:   if (clsid[0] == cv[i].clsid[0] && clsid[1] == cv[i].clsid[1])",
      "109:    return cv[i].mime;",
      "110:  }",
      "111:  return NULL;",
      "112: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "96: private int",
      "97: cdf_file_property_info(struct magic_set *ms, const cdf_property_info_t *info,",
      "99: {",
      "100:         size_t i;",
      "101:         cdf_timestamp_t tp;",
      "",
      "[Removed Lines]",
      "98:     size_t count)",
      "",
      "[Added Lines]",
      "132:     size_t count, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "108:  memset(&ts, 0, sizeof(ts));",
      "110:         for (i = 0; i < count; i++) {",
      "111:                 cdf_print_property_name(buf, sizeof(buf), info[i].pi_id);",
      "112:                 switch (info[i].pi_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         if (!NOTMIME(ms) && root_storage)",
      "145:   str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2mime);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "163:                                                     buf, vbuf) == -1)",
      "164:                                                         return -1;",
      "165:                                         }",
      "167:         CDF_PROPERTY_NAME_OF_APPLICATION) {",
      "168:      str = cdf_app_to_mime(vbuf, app2mime);",
      "169:     }",
      "",
      "[Removed Lines]",
      "166:                                 } else if (info[i].pi_id ==",
      "",
      "[Added Lines]",
      "203:                                 } else if (str == NULL && info[i].pi_id ==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "218: private int",
      "219: cdf_file_summary_info(struct magic_set *ms, const cdf_header_t *h,",
      "221: {",
      "222:         cdf_summary_info_header_t si;",
      "223:         cdf_property_info_t *info;",
      "",
      "[Removed Lines]",
      "220:     const cdf_stream_t *sst)",
      "",
      "[Added Lines]",
      "257:     const cdf_stream_t *sst, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "228:                 return -1;",
      "230:         if (NOTMIME(ms)) {",
      "231:                 if (file_printf(ms, \"Composite Document File V2 Document\")",
      "232:       == -1)",
      "233:                         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "268:   const char *str;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "255:                                 return -2;",
      "256:                         break;",
      "257:                 }",
      "261:         free(info);",
      "263:         return m == -1 ? -2 : m;",
      "",
      "[Removed Lines]",
      "258:         }",
      "260:         m = cdf_file_property_info(ms, info, count);",
      "",
      "[Added Lines]",
      "297:   if (root_storage) {",
      "298:    str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2desc);",
      "299:    if (str)",
      "300:     if (file_printf(ms, \", %s\", str) == -1)",
      "301:      return -2;",
      "302:    }",
      "303:   }",
      "305:         m = cdf_file_property_info(ms, info, count, root_storage);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "275:         int i;",
      "276:         const char *expn = \"\";",
      "277:         const char *corrupt = \"corrupt: \";",
      "279:         info.i_fd = fd;",
      "280:         info.i_buf = buf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:         const cdf_directory_t *root_storage;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "308:                 goto out2;",
      "309:         }",
      "312:                 expn = \"Cannot read short stream\";",
      "313:                 goto out3;",
      "314:         }",
      "",
      "[Removed Lines]",
      "311:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst)) == -1) {",
      "",
      "[Added Lines]",
      "357:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst,",
      "358:      &root_storage)) == -1) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "329: #ifdef CDF_DEBUG",
      "330:         cdf_dump_summary_info(&h, &scn);",
      "331: #endif",
      "334:  if (i == 0) {",
      "335:   const char *str = NULL;",
      "336:   cdf_directory_t *d;",
      "337:   char name[__arraycount(d->d_name)];",
      "338:   size_t j, k;",
      "340:    d = &dir.dir_tab[j];",
      "341:    for (k = 0; k < sizeof(name); k++)",
      "342:     name[k] = (char)cdf_tole2(d->d_name[k]);",
      "349:   }",
      "350:   if (NOTMIME(ms)) {",
      "351:    if (str != NULL) {",
      "",
      "[Removed Lines]",
      "332:         if ((i = cdf_file_summary_info(ms, &h, &scn)) < 0)",
      "333:                 expn = \"Can't expand summary_info\";",
      "339:   for (j = 0; j < dir.dir_len; j++) {",
      "343:    if (NOTMIME(ms))",
      "344:     str = cdf_app_to_mime(name, name2desc);",
      "345:    else",
      "346:     str = cdf_app_to_mime(name, name2mime);",
      "347:    if (str != NULL)",
      "348:     break;",
      "",
      "[Added Lines]",
      "379:         if ((i = cdf_file_summary_info(ms, &h, &scn, root_storage)) < 0)",
      "380:             expn = \"Can't expand summary_info\";",
      "388:   for (j = 0; str == NULL && j < dir.dir_len; j++) {",
      "392:    str = cdf_app_to_mime(name,",
      "393:        NOTMIME(ms) ? name2desc : name2mime);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4aa80db758259ec3ce255aaa084cb38f41fc02f1",
      "candidate_info": {
        "commit_hash": "4aa80db758259ec3ce255aaa084cb38f41fc02f1",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/4aa80db758259ec3ce255aaa084cb38f41fc02f1",
        "files": [
          "phpdbg_watch.c"
        ],
        "message": "C89 compat",
        "before_after_code_files": [
          "phpdbg_watch.c||phpdbg_watch.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg_watch.c||phpdbg_watch.c": [
          "File: phpdbg_watch.c -> phpdbg_watch.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "465: void phpdbg_watch_HashTable_dtor(zval **zv) {",
          "466:  phpdbg_btree_result *result;",
          "468:  TSRMLS_FETCH();",
          "471:  if ((result = phpdbg_btree_find(&PHPDBG_G(watchpoint_tree), (zend_ulong)*zv))) {",
          "472:   phpdbg_watchpoint_t *watch = result->ptr;",
          "",
          "[Removed Lines]",
          "467:  zval_ptr_dtor_wrapper(zv);",
          "",
          "[Added Lines]",
          "469:  zval_ptr_dtor_wrapper(zv);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "772: }",
          "774: void phpdbg_watch_efree(void *ptr) {",
          "776:  TSRMLS_FETCH();",
          "778:  if (result) {",
          "779:   phpdbg_watchpoint_t *watch = result->ptr;",
          "",
          "[Removed Lines]",
          "775:  phpdbg_btree_result *result = phpdbg_btree_find_closest(&PHPDBG_G(watchpoint_tree), (zend_ulong)ptr);",
          "",
          "[Added Lines]",
          "775:  phpdbg_btree_result *result;",
          "778:  result = phpdbg_btree_find_closest(&PHPDBG_G(watchpoint_tree), (zend_ulong)ptr);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "158b03fdef46458604d9ada7560f062bd36b8ef6",
      "candidate_info": {
        "commit_hash": "158b03fdef46458604d9ada7560f062bd36b8ef6",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/158b03fdef46458604d9ada7560f062bd36b8ef6",
        "files": [
          "phpdbg_lexer.c",
          "phpdbg_lexer.l"
        ],
        "message": "Finish fixing phpdbg on ZTS build",
        "before_after_code_files": [
          "phpdbg_lexer.c||phpdbg_lexer.c",
          "phpdbg_lexer.l||phpdbg_lexer.l"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg_lexer.c||phpdbg_lexer.c": [
          "File: phpdbg_lexer.c -> phpdbg_lexer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "239: yyc_NORMAL:",
          "240:  {",
          "241:   static const unsigned char yybm[] = {",
          "243:     16,   8,   8,  16,  16,   8,  16,  16,",
          "244:     16,  16,  16,  16,  16,  16,  16,  16,",
          "245:     16,  16,  16,  16,  16,  16,  16,  16,",
          "",
          "[Removed Lines]",
          "242:     16,  16,  16,  16,  16,  16,  16,  16,",
          "",
          "[Added Lines]",
          "242:      0,  16,  16,  16,  16,  16,  16,  16,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "307:      if (yych <= 'e') goto yy40;",
          "308:      if (yych <= 'f') goto yy41;",
          "309:      if (yych <= 'h') goto yy32;",
          "311:     }",
          "312:    } else {",
          "313:     if (yych <= 's') {",
          "",
          "[Removed Lines]",
          "310:      goto yy31;",
          "",
          "[Added Lines]",
          "310:      goto yy30;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "351:   if (yybm[0+(yych = *YYCURSOR)] & 8) {",
          "352:    goto yy24;",
          "353:   }",
          "354:   YYDEBUG(28, *YYCURSOR);",
          "355:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "356: #line 68 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "357:   {",
          "358:  return 0;",
          "359: }",
          "361: yy29:",
          "362:   YYDEBUG(29, *YYCURSOR);",
          "363:   yyaccept = 0;",
          "364:   yych = *(YYMARKER = ++YYCURSOR);",
          "365:   goto yy33;",
          "368:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "369: #line 125 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "370:   {",
          "",
          "[Removed Lines]",
          "360: #line 361 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "366: yy30:",
          "367:   YYDEBUG(30, *YYCURSOR);",
          "",
          "[Added Lines]",
          "354: yy28:",
          "361: #line 362 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "364:   yych = *++YYCURSOR;",
          "365:   goto yy28;",
          "366: yy30:",
          "367:   YYDEBUG(30, *YYCURSOR);",
          "370:   if (yych == 'f') goto yy94;",
          "372: yy31:",
          "373:   YYDEBUG(31, *YYCURSOR);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "373:  yylval->len = yyleng;",
          "374:  return T_ID;",
          "375: }",
          "383: yy32:",
          "384:   YYDEBUG(32, *YYCURSOR);",
          "385:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "376: #line 377 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "377: yy31:",
          "378:   YYDEBUG(31, *YYCURSOR);",
          "379:   yyaccept = 0;",
          "380:   yych = *(YYMARKER = ++YYCURSOR);",
          "381:   if (yych == 'f') goto yy94;",
          "382:   goto yy33;",
          "",
          "[Added Lines]",
          "382: #line 383 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "391:   if (yybm[0+yych] & 16) {",
          "392:    goto yy32;",
          "393:   }",
          "395:   goto yy54;",
          "396: yy34:",
          "397:   YYDEBUG(34, *YYCURSOR);",
          "",
          "[Removed Lines]",
          "394:   if (yych <= '9') goto yy30;",
          "",
          "[Added Lines]",
          "394:   if (yych <= '9') goto yy31;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "405:   }",
          "406:   if (yych <= 0x1F) {",
          "407:    if (yych <= '\\n') {",
          "408:     if (yych <= 0x08) goto yy32;",
          "409:    } else {",
          "410:     if (yych != '\\r') goto yy32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408:     if (yych <= 0x00) goto yy36;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "427:  yylval->num = atoi(yytext);",
          "428:  return T_DIGITS;",
          "429: }",
          "431: yy37:",
          "432:   YYDEBUG(37, *YYCURSOR);",
          "433:   yyaccept = 1;",
          "",
          "[Removed Lines]",
          "430: #line 431 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "431: #line 432 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "437:   }",
          "438:   if (yych <= 0x1F) {",
          "439:    if (yych <= '\\n') {",
          "440:     if (yych <= 0x08) goto yy33;",
          "441:     goto yy36;",
          "442:    } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "441:     if (yych <= 0x00) goto yy36;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "517:   {",
          "518:  return T_POUND;",
          "519: }",
          "521: yy49:",
          "522:   YYDEBUG(49, *YYCURSOR);",
          "523:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "520: #line 521 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "522: #line 523 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "528:   {",
          "529:  return T_COLON;",
          "530: }",
          "532: yy51:",
          "533:   YYDEBUG(51, *YYCURSOR);",
          "534:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "531: #line 532 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "533: #line 534 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "538:   {",
          "539:  return T_DCOLON;",
          "540: }",
          "542: yy53:",
          "543:   YYDEBUG(53, *YYCURSOR);",
          "544:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "541: #line 542 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "543: #line 544 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "555:   if (yyaccept <= 3) {",
          "556:    if (yyaccept <= 1) {",
          "557:     if (yyaccept <= 0) {",
          "559:     } else {",
          "560:      goto yy36;",
          "561:     }",
          "",
          "[Removed Lines]",
          "558:      goto yy30;",
          "",
          "[Added Lines]",
          "560:      goto yy31;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "592:  yylval->len = yyleng;",
          "593:  return T_PROTO;",
          "594: }",
          "596: yy59:",
          "597:   YYDEBUG(59, *YYCURSOR);",
          "598:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "595: #line 596 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "597: #line 598 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "622:   }",
          "623:   if (yych <= 0x1F) {",
          "624:    if (yych <= '\\n') {",
          "625:     if (yych <= 0x08) goto yy32;",
          "626:    } else {",
          "627:     if (yych != '\\r') goto yy32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "627:     if (yych <= 0x00) goto yy64;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "645:  yylval->len = yyleng;",
          "646:  return T_OPCODE;",
          "647: }",
          "649: yy65:",
          "650:   YYDEBUG(65, *YYCURSOR);",
          "651:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "648: #line 649 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "651: #line 652 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "656:   yyaccept = 3;",
          "657:   yych = *(YYMARKER = ++YYCURSOR);",
          "658:   if (yych <= '\\r') {",
          "662:   } else {",
          "663:    if (yych <= ' ') {",
          "664:     if (yych <= 0x1F) goto yy33;",
          "",
          "[Removed Lines]",
          "659:    if (yych <= 0x08) goto yy33;",
          "660:    if (yych <= '\\n') goto yy67;",
          "661:    if (yych <= '\\f') goto yy33;",
          "",
          "[Added Lines]",
          "662:    if (yych <= 0x08) {",
          "663:     if (yych >= 0x01) goto yy33;",
          "664:    } else {",
          "665:     if (yych <= '\\n') goto yy67;",
          "666:     if (yych <= '\\f') goto yy33;",
          "667:    }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "675:  yylval->num = 1;",
          "676:  return T_TRUTHY;",
          "677: }",
          "679: yy68:",
          "680:   YYDEBUG(68, *YYCURSOR);",
          "681:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "678: #line 679 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "684: #line 685 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "696:   yyaccept = 4;",
          "697:   yych = *(YYMARKER = ++YYCURSOR);",
          "698:   if (yych <= '\\r') {",
          "702:   } else {",
          "703:    if (yych <= ' ') {",
          "704:     if (yych <= 0x1F) goto yy33;",
          "",
          "[Removed Lines]",
          "699:    if (yych <= 0x08) goto yy33;",
          "700:    if (yych <= '\\n') goto yy72;",
          "701:    if (yych <= '\\f') goto yy33;",
          "",
          "[Added Lines]",
          "705:    if (yych <= 0x08) {",
          "706:     if (yych >= 0x01) goto yy33;",
          "707:    } else {",
          "708:     if (yych <= '\\n') goto yy72;",
          "709:     if (yych <= '\\f') goto yy33;",
          "710:    }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "715:  yylval->num = 0;",
          "716:  return T_FALSY;",
          "717: }",
          "719: yy73:",
          "720:   YYDEBUG(73, *YYCURSOR);",
          "721:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "718: #line 719 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "727: #line 728 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "812:   }",
          "813:   if (yych <= 0x1F) {",
          "814:    if (yych <= '\\n') {",
          "815:     if (yych <= 0x08) goto yy32;",
          "816:    } else {",
          "817:     if (yych != '\\r') goto yy32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "824:     if (yych <= 0x00) goto yy93;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "834:  yylval->addr = strtoul(yytext, 0, 16);",
          "835:  return T_ADDR;",
          "836: }",
          "838: yy94:",
          "839:   YYDEBUG(94, *YYCURSOR);",
          "840:   yyaccept = 6;",
          "841:   yych = *(YYMARKER = ++YYCURSOR);",
          "842:   if (yych <= '\\r') {",
          "846:   } else {",
          "847:    if (yych <= ' ') {",
          "848:     if (yych <= 0x1F) goto yy33;",
          "",
          "[Removed Lines]",
          "837: #line 838 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "843:    if (yych <= 0x08) goto yy33;",
          "844:    if (yych <= '\\n') goto yy95;",
          "845:    if (yych <= '\\f') goto yy33;",
          "",
          "[Added Lines]",
          "847: #line 848 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "853:    if (yych <= 0x08) {",
          "854:     if (yych >= 0x01) goto yy33;",
          "855:    } else {",
          "856:     if (yych <= '\\n') goto yy95;",
          "857:     if (yych <= '\\f') goto yy33;",
          "858:    }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "859:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "860:  return T_IF;",
          "861: }",
          "863:  }",
          "865: yyc_RAW:",
          "",
          "[Removed Lines]",
          "862: #line 863 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "875: #line 876 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "929:  yylval->len = yyleng;",
          "930:  return T_INPUT;",
          "931: }",
          "933: yy101:",
          "934:   YYDEBUG(101, *YYCURSOR);",
          "935:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "932: #line 933 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "945: #line 946 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "943:   {",
          "944:  return 0;",
          "945: }",
          "947: yy103:",
          "948:   YYDEBUG(103, *YYCURSOR);",
          "949:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "946: #line 947 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "959: #line 960 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "976:  goto restart;",
          "977: }",
          "979:  }",
          "980: }",
          "981: #line 168 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "",
          "[Removed Lines]",
          "978: #line 979 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "991: #line 992 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------"
        ],
        "phpdbg_lexer.l||phpdbg_lexer.l": [
          "File: phpdbg_lexer.l -> phpdbg_lexer.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: T_RUN_SHORT \"r\"",
          "59: WS          [ \\r\\n\\t]+",
          "60: DIGITS      [0-9\\.]+",
          "62: ADDR        [0][x][a-fA-F0-9]+",
          "63: OPCODE      (ZEND_|zend_)([A-Za-z])+",
          "64: INPUT       [^\\n\\000]+",
          "",
          "[Removed Lines]",
          "61: ID          [^ \\r\\n\\t:#]+",
          "",
          "[Added Lines]",
          "61: ID          [^ \\r\\n\\t:#\\000]+",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3d48c7e5ec86c3cf1ffb06916b4097810cd17563",
      "candidate_info": {
        "commit_hash": "3d48c7e5ec86c3cf1ffb06916b4097810cd17563",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/3d48c7e5ec86c3cf1ffb06916b4097810cd17563",
        "files": [
          "phpdbg_utils.h"
        ],
        "message": "Fix issue #89 \u2014 Compile failure in PHP 5.4\n\nzend_hash_get_current_key_zval_ex isn't defined in PHP 5.4. (used in phpdbg_watch.c)",
        "before_after_code_files": [
          "phpdbg_utils.h||phpdbg_utils.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg_utils.h||phpdbg_utils.h": [
          "File: phpdbg_utils.h -> phpdbg_utils.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "125: int phpdbg_rebuild_symtable(TSRMLS_D);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127: #if PHP_VERSION_ID < 50500",
          "129: static void zend_hash_get_current_key_zval_ex(const HashTable *ht, zval *key, HashPosition *pos) {",
          "130:  Bucket *p;",
          "132:  p = pos ? (*pos) : ht->pInternalPointer;",
          "134:  if (!p) {",
          "135:   Z_TYPE_P(key) = IS_NULL;",
          "136:  } else if (p->nKeyLength) {",
          "137:   Z_TYPE_P(key) = IS_STRING;",
          "138:   Z_STRVAL_P(key) = IS_INTERNED(p->arKey) ? (char*)p->arKey : estrndup(p->arKey, p->nKeyLength - 1);",
          "139:   Z_STRLEN_P(key) = p->nKeyLength - 1;",
          "140:  } else {",
          "141:   Z_TYPE_P(key) = IS_LONG;",
          "142:   Z_LVAL_P(key) = p->h;",
          "143:  }",
          "144: }",
          "145: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "467b19a9486a745aca86d7aff22bb2a3b669d52d",
      "candidate_info": {
        "commit_hash": "467b19a9486a745aca86d7aff22bb2a3b669d52d",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/467b19a9486a745aca86d7aff22bb2a3b669d52d",
        "files": [
          "phpdbg.c"
        ],
        "message": "Fixed startup segfault in non-debug builds Fixes issue #87",
        "before_after_code_files": [
          "phpdbg.c||phpdbg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg.c||phpdbg.c": [
          "File: phpdbg.c -> phpdbg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "879: }",
          "880: #endif",
          "883: {",
          "884:  sapi_module_struct *phpdbg = &phpdbg_sapi_module;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "882: static inline zend_mm_heap *phpdbg_mm_get_heap() {",
          "883:  zend_mm_heap *mm_heap;",
          "885:  TSRMLS_FETCH();",
          "887:  mm_heap = zend_mm_set_heap(NULL TSRMLS_CC);",
          "888:  zend_mm_set_heap(mm_heap TSRMLS_CC);",
          "890:  return mm_heap;",
          "891: }",
          "893: void *phpdbg_malloc_wrapper(size_t size)",
          "894: {",
          "895:  return zend_mm_alloc(phpdbg_mm_get_heap(), size);",
          "896: }",
          "898: void phpdbg_free_wrapper(void *p)",
          "899: {",
          "900:  zend_mm_free(phpdbg_mm_get_heap(), p);",
          "901: }",
          "903: void *phpdbg_realloc_wrapper(void *ptr, size_t size)",
          "904: {",
          "905:  return zend_mm_realloc(phpdbg_mm_get_heap(), ptr, size);",
          "906: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1221:     EXCEPTION_POINTERS *xp;",
          "1222:     __try {",
          "1223: #endif",
          "1233:    mm_heap->use_zend_alloc = 0;",
          "1235:   }",
          "1239:   zend_activate(TSRMLS_C);",
          "",
          "[Removed Lines]",
          "1224:   zend_mm_heap *mm_heap = zend_mm_set_heap(NULL TSRMLS_CC);",
          "1225: #if ZEND_DEBUG",
          "1226:   if (!mm_heap->use_zend_alloc) {",
          "1227:    mm_heap->_malloc = malloc;",
          "1228:    mm_heap->_realloc = realloc;",
          "1229:    mm_heap->_free = free;",
          "1230: #endif",
          "1231:    PHPDBG_G(original_free_function) = mm_heap->_free;",
          "1232:    mm_heap->_free = phpdbg_watch_efree;",
          "1234: #if ZEND_DEBUG",
          "1236: #endif",
          "1237:   zend_mm_set_heap(mm_heap TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1250:   zend_mm_heap *mm_heap = phpdbg_mm_get_heap();",
          "1252:   if (mm_heap->use_zend_alloc) {",
          "1253:    mm_heap->_malloc = phpdbg_malloc_wrapper;",
          "1254:    mm_heap->_realloc = phpdbg_realloc_wrapper;",
          "1255:    mm_heap->_free = phpdbg_free_wrapper;",
          "1259:   PHPDBG_G(original_free_function) = mm_heap->_free;",
          "1260:   mm_heap->_free = phpdbg_watch_efree;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca8c94c917cb46983da681eec2cf6b17d22c5d5f",
      "candidate_info": {
        "commit_hash": "ca8c94c917cb46983da681eec2cf6b17d22c5d5f",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/ca8c94c917cb46983da681eec2cf6b17d22c5d5f",
        "files": [
          "sapi/litespeed/lsapilib.c",
          "sapi/litespeed/lsapilib.h"
        ],
        "message": "fixed broken merged code",
        "before_after_code_files": [
          "sapi/litespeed/lsapilib.c||sapi/litespeed/lsapilib.c",
          "sapi/litespeed/lsapilib.h||sapi/litespeed/lsapilib.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sapi/litespeed/lsapilib.c||sapi/litespeed/lsapilib.c": [
          "File: sapi/litespeed/lsapilib.c -> sapi/litespeed/lsapilib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "868: #endif",
          "869:     return 0;",
          "870: }",
          "1056: static int lsapi_suexec_auth( LSAPI_Request *pReq,",
          "1057:             char * pAuth, int len, char * pUgid, int ugidLen )",
          "",
          "[Removed Lines]",
          "871: #endif",
          "874: static int setUID_LVE(LSAPI_Request * pReq, uid_t uid, gid_t gid, const char * pChroot)",
          "875: {",
          "876:     int rv;",
          "877:     struct passwd * pw;",
          "878:     pw = getpwuid( uid );",
          "879: #if defined(linux) || defined(__linux) || defined(__linux__) || defined(__gnu_linux__)",
          "880:     if ( s_lve )",
          "881:     {",
          "882:         if( lsapi_enterLVE( pReq, uid ) == -1 )",
          "883:             return -1;",
          "884:         if ( pw && fp_lve_jail)",
          "885:         {",
          "886:             rv = lsapi_jailLVE( pReq, uid, pw );",
          "887:             if ( rv == -1 )",
          "888:                 return -1;",
          "889:             if (( rv == 1 )&&(s_enable_lve == LSAPI_CAGEFS_NO_SUEXEC ))    //this mode only use cageFS, does not use suEXEC",
          "890:             {",
          "891:                 uid = s_defaultUid;",
          "892:                 gid = s_defaultGid;",
          "893:                 pw = getpwuid( uid );",
          "894:             }",
          "895:         }",
          "896:     }",
          "897: #endif",
          "903: #if defined(__FreeBSD__ ) || defined(__NetBSD__) || defined(__OpenBSD__) \\",
          "904:     || defined(macintosh) || defined(__APPLE__) || defined(__APPLE_CC__)",
          "905:     if ( s_enable_core_dump )",
          "906:         lsapi_enable_core_dump();",
          "907: #endif",
          "909:     rv = setgid(gid);",
          "910:     if (rv == -1)",
          "911:     {",
          "912:         LSAPI_perror_r(pReq, \"LSAPI: setgid()\", NULL);",
          "913:         return -1;",
          "914:     }",
          "915:     if ( pw && (pw->pw_gid == gid ))",
          "916:     {",
          "917:         rv = initgroups( pw->pw_name, gid );",
          "918:         if (rv == -1)",
          "919:         {",
          "920:             LSAPI_perror_r(pReq, \"LSAPI: initgroups()\", NULL);",
          "921:             return -1;",
          "922:         }",
          "923:     }",
          "924:     else",
          "925:     {",
          "926:         rv = setgroups(1, &gid);",
          "927:         if (rv == -1)",
          "928:         {",
          "929:             LSAPI_perror_r(pReq, \"LSAPI: setgroups()\", NULL);",
          "930:         }",
          "931:     }",
          "932:     if ( pChroot )",
          "933:     {",
          "934:         rv = chroot( pChroot );",
          "935:         if ( rv == -1 )",
          "936:         {",
          "937:             LSAPI_perror_r(pReq, \"LSAPI: chroot()\", NULL);",
          "938:             return -1;",
          "939:         }",
          "940:     }",
          "941:     rv = setuid(uid);",
          "942:     if (rv == -1)",
          "943:     {",
          "944:         LSAPI_perror_r(pReq, \"LSAPI: setuid()\", NULL);",
          "945:         return -1;",
          "946:     }",
          "947: #if defined(linux) || defined(__linux) || defined(__linux__) || defined(__gnu_linux__)",
          "948:     if ( s_enable_core_dump )",
          "949:         lsapi_enable_core_dump();",
          "950: #endif",
          "951:     return 0;",
          "952: }",
          "954: static int lsapi_suexec_auth( LSAPI_Request *pReq,",
          "955:             char * pAuth, int len, char * pUgid, int ugidLen )",
          "956: {",
          "957:     lsapi_MD5_CTX md5ctx;",
          "958:     unsigned char achMD5[16];",
          "959:     if ( len < 32 )",
          "960:         return -1;",
          "961:     memmove( achMD5, pAuth + 16, 16 );",
          "962:     memmove( pAuth + 16, s_pSecret, 16 );",
          "963:     lsapi_MD5Init( &md5ctx );",
          "964:     lsapi_MD5Update( &md5ctx, (unsigned char *)pAuth, 32 );",
          "965:     lsapi_MD5Update( &md5ctx, (unsigned char *)pUgid, 8 );",
          "966:     lsapi_MD5Final( (unsigned char *)pAuth + 16, &md5ctx);",
          "967:     if ( memcmp( achMD5, pAuth + 16, 16 ) == 0 )",
          "968:         return 0;",
          "969:     return 1;",
          "970: }",
          "973: static int lsapi_changeUGid( LSAPI_Request * pReq )",
          "974: {",
          "975:     int uid = s_defaultUid;",
          "976:     int gid = s_defaultGid;",
          "977:     const char * pChroot = NULL;",
          "978:     struct LSAPI_key_value_pair * pEnv;",
          "979:     struct LSAPI_key_value_pair * pAuth;",
          "980:     int i;",
          "981:     if ( s_uid )",
          "982:         return 0;",
          "988:     i = pReq->m_pHeader->m_cntSpecialEnv - 1;",
          "989:     if ( i >= 0 )",
          "990:     {",
          "991:         pEnv = pReq->m_pSpecialEnvList + i;",
          "992:         if (( *pEnv->pKey == '\\000' )&&",
          "993:             ( strcmp( pEnv->pKey+1, \"SUEXEC_AUTH\" ) == 0 ))",
          "994:         {",
          "995:             --pReq->m_pHeader->m_cntSpecialEnv;",
          "996:             pAuth = pEnv--;",
          "997:             if (( *pEnv->pKey == '\\000' )&&",
          "998:                 ( strcmp( pEnv->pKey+1, \"SUEXEC_UGID\" ) == 0 ))",
          "999:             {",
          "1000:                 --pReq->m_pHeader->m_cntSpecialEnv;",
          "1001:                 uid = *(uint32_t *)pEnv->pValue;",
          "1002:                 gid = *(((uint32_t *)pEnv->pValue) + 1 );",
          "1004:             }",
          "1005:             else",
          "1006:             {",
          "1007:                 fprintf( stderr, \"LSAPI: missing SUEXEC_UGID env, use default user!\\n\" );",
          "1008:                 pEnv = NULL;",
          "1009:             }",
          "1010:             if ( pEnv&& lsapi_suexec_auth( pReq, pAuth->pValue, pAuth->valLen, pEnv->pValue, pEnv->valLen ) == 0 )",
          "1011:             {",
          "1014:             }",
          "1015:             else",
          "1016:             {",
          "1018:                 fprintf( stderr, \"LSAPI: SUEXEC_AUTH authentication failed, use default user!\\n\" );",
          "1019:                 uid = 0;",
          "1020:             }",
          "1021:         }",
          "1022:         else",
          "1023:         {",
          "1025:         }",
          "1026:     }",
          "1029:     if ( !uid )",
          "1030:     {",
          "1031:         uid = s_defaultUid;",
          "1032:         gid = s_defaultGid;",
          "1033:     }",
          "1036:     if ( setUID_LVE( pReq, uid, gid, pChroot ) == -1 )",
          "1037:     {",
          "1038:         return -1;",
          "1039:     }",
          "1041:     s_uid = uid;",
          "1043:     return 0;",
          "1045: }",
          "1047: static int parseContentLenFromHeader(LSAPI_Request * pReq)",
          "1048: {",
          "1049:     const char * pContentLen = LSAPI_GetHeader_r( pReq, H_CONTENT_LENGTH );",
          "1050:     if ( pContentLen )",
          "1051:         pReq->m_reqBodyLen = strtoll( pContentLen, NULL, 10 );",
          "1052:     return 0;",
          "1053: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "sapi/litespeed/lsapilib.h||sapi/litespeed/lsapilib.h": [
          "File: sapi/litespeed/lsapilib.h -> sapi/litespeed/lsapilib.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
          "59: #ifndef  _LSAPILIB_H_",
          "60: #define  _LSAPILIB_H_",
          "",
          "[Removed Lines]",
          "52:                           lsapilib.h  -  description",
          "53:                              -------------------",
          "54:     begin                : Mon Feb 21 2005",
          "55:     copyright            : (C) 2005 by George Wang",
          "56:     email                : gwang@litespeedtech.com",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}