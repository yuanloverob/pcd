{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d0afd01e882b86952106cf8c29cb78e6b7deb89f",
      "candidate_info": {
        "commit_hash": "d0afd01e882b86952106cf8c29cb78e6b7deb89f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d0afd01e882b86952106cf8c29cb78e6b7deb89f",
        "files": [
          "bindings/python/capstone/__init__.py"
        ],
        "message": "Python: Actually attempt to load .so.3 extension on linux",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "249: else:",
          "250:     _lib = \"libcapstone.so\"",
          "253: _found = False",
          "255: def _load_lib(path):",
          "",
          "[Removed Lines]",
          "252: _all_libs = ['capstone.dll', 'libcapstone.so.3', 'libcapstone.so', 'libcapstone.dylib']",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "260:         # if we're on linux, try again with .so.3 extension",
          "261:         if lib_file.endswith('.so'):",
          "262:             try:",
          "264:             except OSError:",
          "265:                 return None",
          "266:         return None",
          "",
          "[Removed Lines]",
          "263:                 return ctypes.cdll.LoadLibrary(lib_file)",
          "",
          "[Added Lines]",
          "262:                 return ctypes.cdll.LoadLibrary(lib_file + '.3')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8ac54c5d65c22a413b8fdfd2d4322f384479ae1b",
      "candidate_info": {
        "commit_hash": "8ac54c5d65c22a413b8fdfd2d4322f384479ae1b",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/8ac54c5d65c22a413b8fdfd2d4322f384479ae1b",
        "files": [
          "arch/ARM/ARMInstPrinter.c"
        ],
        "message": "arm: fix issue #760",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "660:        if (Opcode == ARM_t2LDMIA_UPD)",
          "661:         SStream_concat0(O, \".w\");",
          "662:        SStream_concat0(O, \"\\t\");",
          "663:        if (MI->csh->detail) {",
          "664:         MI->flat_insn->detail->regs_read[MI->flat_insn->detail->regs_read_count] = ARM_REG_SP;",
          "665:         MI->flat_insn->detail->regs_read_count++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "664:        MI->ac_idx = 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1601b15f07f5d627c9150b2bdb1ef2dc58dc23d3",
      "candidate_info": {
        "commit_hash": "1601b15f07f5d627c9150b2bdb1ef2dc58dc23d3",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/1601b15f07f5d627c9150b2bdb1ef2dc58dc23d3",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: cleanup",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74: static void usage(char *prog)",
          "75: {",
          "76:  printf(\"Cstool v%s for Capstone Disassembler Engine (core v%u.%u)\\n\\n\", VERSION, CS_API_MAJOR, CS_API_MINOR);",
          "78:  printf(\"\\nThe following <arch+mode> options are supported:\\n\");",
          "80:  if (cs_support(CS_ARCH_X86)) {",
          "",
          "[Removed Lines]",
          "77:  printf(\"Syntax: %s [-d:print all detail information] <arch+mode> <assembly-hexstring> [start-address-in-hex-format]\\n\", prog);",
          "",
          "[Added Lines]",
          "77:  printf(\"Syntax: %s [-d] <arch+mode> <assembly-hexstring> [start-address-in-hex-format]\\n\", prog);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "358156320b6ad666ee29523d6794980651778c9a",
      "candidate_info": {
        "commit_hash": "358156320b6ad666ee29523d6794980651778c9a",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/358156320b6ad666ee29523d6794980651778c9a",
        "files": [
          "arch/M68K/M68KDisassembler.c",
          "include/capstone/m68k.h"
        ],
        "message": "Changed register pair handling in M68K header\n\n* instead of using bit operations, we now leverage the size of the\n  enclosing union to avoid running code and provide a more convenient\n  interface to the library user.",
        "before_after_code_files": [
          "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c",
          "include/capstone/m68k.h||include/capstone/m68k.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/M68K/M68KDisassembler.c||arch/M68K/M68KDisassembler.c": [
          "File: arch/M68K/M68KDisassembler.c -> arch/M68K/M68KDisassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "980:  op0->address_mode = M68K_AM_NONE;",
          "981:  op0->type = M68K_OP_REG_PAIR;",
          "984:  op1->address_mode = M68K_AM_NONE;",
          "985:  op1->type = M68K_OP_REG_PAIR;",
          "988:  reg_0 = (extension >> 28) & 7;",
          "989:  reg_1 = (extension >> 12) & 7;",
          "991:  op2->address_mode = M68K_AM_NONE;",
          "992:  op2->type = M68K_OP_REG_PAIR;",
          "995: }",
          "997: static void build_chk2_cmp2(m68k_info *info, int size)",
          "",
          "[Removed Lines]",
          "982:  op0->register_bits = (((extension >> 16) & 7) << 4) | (extension & 7);",
          "986:  op1->register_bits = (((extension >> 22) & 7) << 4) | ((extension >> 6) & 7);",
          "993:  op2->register_bits = ((reg_0 + (BIT_1F(extension) ? 8 : 0)) << 4) |",
          "994:   (reg_1 + (BIT_F(extension) ? 8 : 0));",
          "",
          "[Added Lines]",
          "982:  op0->reg_pair.reg_0 = (extension >> 16) & 7;",
          "983:  op0->reg_pair.reg_1 = extension & 7;",
          "987:  op1->reg_pair.reg_0 = (extension >> 22) & 7;",
          "988:  op1->reg_pair.reg_1 = (extension >> 6) & 7;",
          "995:  op2->reg_pair.reg_0 = reg_0 + (BIT_1F(extension) ? 8 : 0);",
          "996:  op2->reg_pair.reg_1 = reg_1 + (BIT_F(extension) ? 8 : 0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2245:  op1->address_mode = M68K_AM_NONE;",
          "2246:  op1->type = M68K_OP_REG_PAIR;",
          "2249:  if ((reg_0 == reg_1) || !BIT_A(extension)) {",
          "2250:   op1->type = M68K_OP_REG;",
          "",
          "[Removed Lines]",
          "2247:  op1->register_bits = (reg_0 << 4) | reg_1;",
          "",
          "[Added Lines]",
          "2249:  op1->reg_pair.reg_0 = reg_0;",
          "2250:  op1->reg_pair.reg_1 = reg_1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2790:  op1->address_mode = M68K_AM_NONE;",
          "2791:  op1->type = M68K_OP_REG_PAIR;",
          "2794:  if (!BIT_A(extension)) {",
          "2795:   op1->type = M68K_OP_REG;",
          "",
          "[Removed Lines]",
          "2792:  op1->register_bits = (reg_0 << 4) | reg_1;",
          "",
          "[Added Lines]",
          "2795:  op1->reg_pair.reg_0 = reg_0;",
          "2796:  op1->reg_pair.reg_1 = reg_1;",
          "",
          "---------------"
        ],
        "include/capstone/m68k.h||include/capstone/m68k.h": [
          "File: include/capstone/m68k.h -> include/capstone/m68k.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:  M68K_OP_REG,         // = CS_OP_REG (Register operand).",
          "113:  M68K_OP_IMM,         // = CS_OP_IMM (Immediate operand).",
          "114:  M68K_OP_MEM,         // = CS_OP_MEM (Memory operand).",
          "116:  M68K_OP_REG_BITS,    // Register bits move",
          "117:  M68K_OP_REG_PAIR,    // Register pair in the same op (upper 4 bits for first reg, lower for second)",
          "118: } m68k_op_type;",
          "",
          "[Removed Lines]",
          "115:  M68K_OP_FP,          // = CS_OP_FP  (Floating-Point operand)",
          "",
          "[Added Lines]",
          "115:  M68K_OP_FP_SINGLE,   // single precision Floating-Point operand",
          "116:  M68K_OP_FP_DOUBLE,   // double precision Floating-Point operand",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "137: typedef struct cs_m68k_op {",
          "138:  union {",
          "140:   double dimm;       // double imm",
          "141:   float simm;       // float imm",
          "142:   m68k_reg reg;      // register value for REG operand",
          "143:   m68k_op_mem mem;      // data when operand is targeting memory",
          "145:  };",
          "146:  m68k_op_type type;",
          "147:  m68k_address_mode address_mode; // M68K addressing mode for this op",
          "",
          "[Removed Lines]",
          "139:   uint64_t imm;           // immediate value for IMM operand",
          "144:   uint32_t register_bits; // register bits for movem/cas2/etc (always in d0-d7, a0-a7, fp0 - fp7 order)",
          "",
          "[Added Lines]",
          "140:   uint64_t imm;               // immediate value for IMM operand",
          "144:   struct {      // register pair in one operand",
          "145:    m68k_reg reg_0;",
          "146:    m68k_reg reg_1;",
          "147:   } reg_pair;",
          "149:   uint32_t register_bits; // register bits for movem etc. (always in d0-d7, a0-a7, fp0 - fp7 order)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4f8d7999bfec38827fe0a9ddfbf4f40f91a0af2b",
      "candidate_info": {
        "commit_hash": "4f8d7999bfec38827fe0a9ddfbf4f40f91a0af2b",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/4f8d7999bfec38827fe0a9ddfbf4f40f91a0af2b",
        "files": [
          "cs.c"
        ],
        "message": "Update cs.c\n\nremove a dead code, suggested by @vit9696 on #867",
        "before_after_code_files": [
          "cs.c||cs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "354: #ifndef CAPSTONE_DIET",
          "358:  mnem = insn->mnemonic;",
          "359:  for (sp = buffer; *sp; sp++) {",
          "360:   if (*sp == ' '|| *sp == '\\t')",
          "",
          "[Removed Lines]",
          "357:  sp = buffer;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}