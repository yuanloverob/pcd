{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "37874d7dccf49e8de10341cf61184db407425eb4",
      "candidate_info": {
        "commit_hash": "37874d7dccf49e8de10341cf61184db407425eb4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/37874d7dccf49e8de10341cf61184db407425eb4",
        "files": [
          "ext/expert/expert1.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Disable broken test case in expert1.test.\n\nFossilOrigin-Name: 73e30c2e92ccab274ff7cee48511c461de148786bb9d338921c1ecb193822282",
        "before_after_code_files": [
          "ext/expert/expert1.test||ext/expert/expert1.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/expert/expert1.test||ext/expert/expert1.test": [
          "File: ext/expert/expert1.test -> ext/expert/expert1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:   SEARCH TABLE t1 USING COVERING INDEX t1_idx_000123a7 (a=?)",
          "135: }",
          "137: do_setup_rec_test $tn.6 {",
          "138:   CREATE TABLE t1(a, b, c);",
          "139: } {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137: if 0 {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:   CREATE INDEX t1_idx_00000061 ON t1(a);",
          "143:   SEARCH TABLE t1 USING COVERING INDEX t1_idx_00000061",
          "144: }",
          "146: do_setup_rec_test $tn.7 {",
          "147:   CREATE TABLE t1(a, b, c);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146: }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6153bcf41a9aa0497f8210311c99ac23846223068f2b6a3a1c2d9dec7673c7e1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b23603eb9ab79dac61a232b2b1c8f6857ecb329",
      "candidate_info": {
        "commit_hash": "6b23603eb9ab79dac61a232b2b1c8f6857ecb329",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6b23603eb9ab79dac61a232b2b1c8f6857ecb329",
        "files": [
          "VERSION",
          "configure",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Increase the version number to 3.29 for the next development cycle.\n\nFossilOrigin-Name: 6cf16703fd4a835c249c947006ae4a4bf81873c8ca1803945453c9845f882dc1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0fbd154eb419b57b9c064c1f47346835d6324388b966b73f8a0122de065f08b1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "455100533256d5bd5d67f9bfac7b6bdabeeacceb",
      "candidate_info": {
        "commit_hash": "455100533256d5bd5d67f9bfac7b6bdabeeacceb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/455100533256d5bd5d67f9bfac7b6bdabeeacceb",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Load all the latest dbsqlfuzz finds into test/fuzzdata8.db.\n\nFossilOrigin-Name: e744d2dd93a78235e6c1d938b08232183b5ce7e355d1b7daf2199e585b03c106",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 97704cb7d29fa7cc4ea9a6761a7844c1946d637ea2b22d287fc787ae0f63c407",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8328369740b33c1de8ed362fc70e76d07f1e1159",
      "candidate_info": {
        "commit_hash": "8328369740b33c1de8ed362fc70e76d07f1e1159",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8328369740b33c1de8ed362fc70e76d07f1e1159",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/minmax4.test"
        ],
        "message": "Add tests to ensure that this branch really does fix ticket [f8a7060ece].\n\nFossilOrigin-Name: f892066425671a8a0ac923e3ad4744677f6434a66f97b91afa8141f11f179975",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/minmax4.test||test/minmax4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b49df1fe9b7174ebc60023179e8da628c926e59df3dc01b15d4a28e17807bb97",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/minmax4.test||test/minmax4.test": [
          "File: test/minmax4.test -> test/minmax4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "200:   SELECT MIN(a) FROM t1 WHERE a=123;",
          "201: } {123}",
          "203: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203: #-------------------------------------------------------------------------",
          "204: # Tests for ticket f8a7060ece.",
          "205: #",
          "206: reset_db",
          "207: do_execsql_test 6.1.0 {",
          "208:   CREATE TABLE t1(a, b, c);",
          "209:   INSERT INTO t1 VALUES(NULL, 1, 'x');",
          "210:   CREATE INDEX i1 ON t1(a);",
          "211: }",
          "212: do_execsql_test 6.1.1 {",
          "213:   SELECT min(a), b, c FROM t1 WHERE c='x';",
          "214: } {{} 1 x}",
          "215: do_execsql_test 6.1.2 {",
          "216:   INSERT INTO t1 VALUES(1,    2, 'y');",
          "217: } {}",
          "218: do_execsql_test 6.1.3 {",
          "219:   SELECT min(a), b, c FROM t1 WHERE c='x';",
          "220: } {{} 1 x}",
          "222: do_execsql_test 6.2.0 {",
          "223:   CREATE TABLE t0(c0 UNIQUE, c1);",
          "224:   INSERT INTO t0(c1) VALUES (0);",
          "225:   INSERT INTO t0(c0) VALUES (0);",
          "226:   CREATE VIEW v0(c0, c1) AS",
          "227:       SELECT t0.c1, t0.c0 FROM t0 WHERE CAST(t0.rowid AS INT) = 1;",
          "228: }",
          "229: do_execsql_test 6.2.1 {",
          "230:   SELECT c0, c1 FROM v0;",
          "231: } {0 {}}",
          "232: do_execsql_test 6.2.2 {",
          "233:   SELECT v0.c0, MIN(v0.c1) FROM v0;",
          "234: } {0 {}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce678c297bc0a533fe7ba38581ee14b04239cbae",
      "candidate_info": {
        "commit_hash": "ce678c297bc0a533fe7ba38581ee14b04239cbae",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ce678c297bc0a533fe7ba38581ee14b04239cbae",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/lemon.c",
          "tool/lempar.c"
        ],
        "message": "Improved tracing output from the LEMON-generated parser.\n\nFossilOrigin-Name: 4d6d2fc046d586a1e5989bbb2757f13d0371fbfad0acf45a0e2fd77dffd8d8f9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/lemon.c||tool/lemon.c",
          "tool/lempar.c||tool/lempar.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 840de36df1aaeb4bad9a7c18e97cc560ba3b8c629c4520a05bc456d67b3347b9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/lemon.c||tool/lemon.c": [
          "File: tool/lemon.c -> tool/lemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1716:   for(i=0, rp=lem.rule; rp; rp=rp->next){",
          "1717:     rp->iRule = rp->code ? i++ : -1;",
          "1718:   }",
          "1719:   for(rp=lem.rule; rp; rp=rp->next){",
          "1720:     if( rp->iRule<0 ) rp->iRule = i++;",
          "1721:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1720:   lem.nruleWithAction = i;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4431:   fprintf(out,\"#define YYNSTATE             %d\\n\",lemp->nxstate);  lineno++;",
          "4432:   fprintf(out,\"#define YYNRULE              %d\\n\",lemp->nrule);  lineno++;",
          "4433:   fprintf(out,\"#define YYNTOKEN             %d\\n\",lemp->nterminal); lineno++;",
          "4434:   fprintf(out,\"#define YY_MAX_SHIFT         %d\\n\",lemp->nxstate-1); lineno++;",
          "4435:   i = lemp->minShiftReduce;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4435:   fprintf(out,\"#define YYNRULE_WITH_ACTION  %d\\n\",lemp->nruleWithAction);",
          "4436:          lineno++;",
          "",
          "---------------"
        ],
        "tool/lempar.c||tool/lempar.c": [
          "File: tool/lempar.c -> tool/lempar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "725:   if( yyTraceFILE && yyruleno<(int)(sizeof(yyRuleName)/sizeof(yyRuleName[0])) ){",
          "726:     yysize = yyRuleInfoNRhs[yyruleno];",
          "727:     if( yysize ){",
          "729:         yyTracePrompt,",
          "731:     }else{",
          "734:     }",
          "735:   }",
          "",
          "[Removed Lines]",
          "728:       fprintf(yyTraceFILE, \"%sReduce %d [%s], go to state %d.\\n\",",
          "730:         yyruleno, yyRuleName[yyruleno], yymsp[yysize].stateno);",
          "732:       fprintf(yyTraceFILE, \"%sReduce %d [%s].\\n\",",
          "733:         yyTracePrompt, yyruleno, yyRuleName[yyruleno]);",
          "",
          "[Added Lines]",
          "728:       fprintf(yyTraceFILE, \"%sReduce %d [%s]%s, pop back to state %d.\\n\",",
          "730:         yyruleno, yyRuleName[yyruleno],",
          "731:         yyruleno<YYNRULE_WITH_ACTION ? \"\" : \" without external action\",",
          "732:         yymsp[yysize].stateno);",
          "734:       fprintf(yyTraceFILE, \"%sReduce %d [%s]%s.\\n\",",
          "735:         yyTracePrompt, yyruleno, yyRuleName[yyruleno],",
          "736:         yyruleno<YYNRULE_WITH_ACTION ? \"\" : \" without external action\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}