{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "74d076caf1837ddacae0f7cd5d9e6ee0b47d63d2",
      "candidate_info": {
        "commit_hash": "74d076caf1837ddacae0f7cd5d9e6ee0b47d63d2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/74d076caf1837ddacae0f7cd5d9e6ee0b47d63d2",
        "files": [
          "lib/net.js"
        ],
        "message": "errnoException must be done immediately",
        "before_after_code_files": [
          "lib/net.js||linet.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "926:   if (!self._handle) {",
          "927:     self._handle = createServerHandle(address, port, addressType, fd);",
          "928:     if (!self._handle) {",
          "929:       process.nextTick(function() {",
          "931:       });",
          "932:       return;",
          "933:     }",
          "",
          "[Removed Lines]",
          "930:         self.emit('error', errnoException(errno, 'listen'));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "78db18739a740851b9800071a7fae0c734a915ce",
      "candidate_info": {
        "commit_hash": "78db18739a740851b9800071a7fae0c734a915ce",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/78db18739a740851b9800071a7fae0c734a915ce",
        "files": [
          "lib/tls.js",
          "test/simple/test-https-socket-options.js"
        ],
        "message": "tls: proxy set(Timeout|NoDelay|KeepAlive) methods\n\n- fix crash calling ClientRequest::setKeepAlive if the underlying request is\n  HTTPS.\n- fix discarding of callback parameter when calling ClientRequest::setTimeout on\n  HTTPS requests.\n- fix discarding of noDelay parameter when calling ClientRequest::setNoDelay on\n  HTTPS requests.",
        "before_after_code_files": [
          "lib/tls.js||litls.js",
          "test/simple/test-https-socket-options.js||test/simple/test-https-socket-options.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "166: };",
          "171: };",
          "176: };",
          "",
          "[Removed Lines]",
          "169: CryptoStream.prototype.setTimeout = function(n) {",
          "170:   if (this.socket) this.socket.setTimeout(n);",
          "174: CryptoStream.prototype.setNoDelay = function() {",
          "175:   if (this.socket) this.socket.setNoDelay();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-https-socket-options.js||test/simple/test-https-socket-options.js": [
          "File: test/simple/test-https-socket-options.js -> test/simple/test-https-socket-options.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: if (!process.versions.openssl) {",
          "26:   console.error('Skipping because node compiled without OpenSSL.');",
          "27:   process.exit(0);",
          "28: }",
          "30: var common = require('../common');",
          "31: var assert = require('assert');",
          "33: var fs = require('fs');",
          "34: var exec = require('child_process').exec;",
          "36: var http = require('http');",
          "37: var https = require('https');",
          "39: var options = {",
          "40:   key: fs.readFileSync(common.fixturesDir + '/keys/agent1-key.pem'),",
          "41:   cert: fs.readFileSync(common.fixturesDir + '/keys/agent1-cert.pem')",
          "42: };",
          "44: var body = 'hello world\\n';",
          "48: var server_http = http.createServer(function(req, res) {",
          "49:   console.log('got HTTP request');",
          "50:   res.writeHead(200, { 'content-type': 'text/plain' });",
          "51:   res.end(body);",
          "52: });",
          "55: server_http.listen(common.PORT, function() {",
          "56:   var req = http.request({ port: common.PORT }, function(res) {",
          "57:     server_http.close();",
          "58:   });",
          "60:   req.setNoDelay(true);",
          "61:   req.setTimeout(1000, function() { });",
          "62:   req.setSocketKeepAlive(true, 1000);",
          "63:   req.end();",
          "64: });",
          "68: var server_https = https.createServer(options, function(req, res) {",
          "69:   console.log('got HTTPS request');",
          "70:   res.writeHead(200, { 'content-type': 'text/plain' });",
          "71:   res.end(body);",
          "72: });",
          "74: server_https.listen(common.PORT+1, function() {",
          "75:   var req = https.request({ port: common.PORT+1 }, function(res) {",
          "76:     server_https.close();",
          "77:   });",
          "79:   req.setNoDelay(true);",
          "80:   req.setTimeout(1000, function() { });",
          "81:   req.setSocketKeepAlive(true, 1000);",
          "82:   req.end();",
          "83: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd907174e8082afd6dd8553940aac09cae3dcfb7",
      "candidate_info": {
        "commit_hash": "bd907174e8082afd6dd8553940aac09cae3dcfb7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/bd907174e8082afd6dd8553940aac09cae3dcfb7",
        "files": [
          "src/node.js",
          "test/simple/test-child-process-fork-and-spawn.js"
        ],
        "message": "node: delete NODE_CHANNEL_FD from env\n\nPrevents accidental inheritance by child processes. If the child process is a\nnode process, it would try to set up a channel with the parent and consequently\nnever quit because the channel kept the event loop alive.\n\nFixes #3240.",
        "before_after_code_files": [
          "src/node.js||src/node.js",
          "test/simple/test-child-process-fork-and-spawn.js||test/simple/test-child-process-fork-and-spawn.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "416:     if (process.env.NODE_CHANNEL_FD) {",
          "417:       assert(parseInt(process.env.NODE_CHANNEL_FD) >= 0);",
          "418:       var cp = NativeModule.require('child_process');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "420:       delete process.env.NODE_CHANNEL_FD;",
          "",
          "---------------"
        ],
        "test/simple/test-child-process-fork-and-spawn.js||test/simple/test-child-process-fork-and-spawn.js": [
          "File: test/simple/test-child-process-fork-and-spawn.js -> test/simple/test-child-process-fork-and-spawn.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var spawn = require('child_process').spawn;",
          "25: var fork = require('child_process').fork;",
          "28: switch (process.argv[2] || '') {",
          "29: case '':",
          "30:   fork(__filename, ['fork']).on('exit', checkExit);",
          "31:   process.on('exit', haveExit);",
          "32:   break;",
          "33: case 'fork':",
          "34:   spawn(process.execPath, [__filename, 'spawn']).on('exit', checkExit);",
          "35:   process.on('exit', haveExit);",
          "36:   break;",
          "37: case 'spawn':",
          "38:   break;",
          "39: default:",
          "40:   assert(0);",
          "41: }",
          "43: var seenExit = false;",
          "45: function checkExit(statusCode) {",
          "46:   seenExit = true;",
          "47:   assert.equal(statusCode, 0);",
          "48:   process.nextTick(process.exit);",
          "49: }",
          "51: function haveExit() {",
          "52:   assert.equal(seenExit, true);",
          "53: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ebfb8a5613b2e7f5961644cc24ca023d2ca73255",
      "candidate_info": {
        "commit_hash": "ebfb8a5613b2e7f5961644cc24ca023d2ca73255",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ebfb8a5613b2e7f5961644cc24ca023d2ca73255",
        "files": [
          "deps/v8/src/platform-posix.cc"
        ],
        "message": "v8: posix: handle EINTR in socket functions\n\nThe socket functions did not handle EINTR (syscall interrupted by signal) which\ntripped up the debug agent.",
        "before_after_code_files": [
          "deps/v8/src/platform-posix.cc||deps/v8/src/platform-posix.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/src/platform-posix.cc||deps/v8/src/platform-posix.cc": [
          "File: deps/v8/src/platform-posix.cc -> deps/v8/src/platform-posix.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "419:     return NULL;",
          "420:   }",
          "423:   if (socket == -1) {",
          "424:     return NULL;",
          "425:   } else {",
          "",
          "[Removed Lines]",
          "422:   int socket = accept(socket_, NULL, NULL);",
          "",
          "[Added Lines]",
          "422:   int socket;",
          "423:   do",
          "424:     socket = accept(socket_, NULL, NULL);",
          "425:   while (socket == -1 && errno == EINTR);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "446:   }",
          "450:   freeaddrinfo(result);",
          "451:   return status == 0;",
          "452: }",
          "",
          "[Removed Lines]",
          "449:   status = connect(socket_, result->ai_addr, result->ai_addrlen);",
          "",
          "[Added Lines]",
          "453:   do",
          "454:     status = connect(socket_, result->ai_addr, result->ai_addrlen);",
          "455:   while (status == -1 && errno == EINTR);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "467: int POSIXSocket::Send(const char* data, int len) const {",
          "469:   return status;",
          "470: }",
          "473: int POSIXSocket::Receive(char* data, int len) const {",
          "475:   return status;",
          "476: }",
          "",
          "[Removed Lines]",
          "468:   int status = send(socket_, data, len, 0);",
          "474:   int status = recv(socket_, data, len, 0);",
          "",
          "[Added Lines]",
          "475:   int status;",
          "477:   do",
          "478:     status = send(socket_, data, len, 0);",
          "479:   while (status == -1 && errno == EINTR);",
          "486:   int status;",
          "488:   do",
          "489:     status = recv(socket_, data, len, 0);",
          "490:   while (status == -1 && errno == EINTR);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8559a4ae0f035a5627a9a87dd4b5b7fbdcdef35a",
      "candidate_info": {
        "commit_hash": "8559a4ae0f035a5627a9a87dd4b5b7fbdcdef35a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/8559a4ae0f035a5627a9a87dd4b5b7fbdcdef35a",
        "files": [
          "node.gyp"
        ],
        "message": "Fix 64-bit SmartOS build",
        "before_after_code_files": [
          "node.gyp||node.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "310:       'target_name': 'node_dtrace_ustack',",
          "311:       'type': 'none',",
          "312:       'conditions': [",
          "314:           'actions': [",
          "315:             {",
          "316:               'action_name': 'node_dtrace_ustack_constants',",
          "",
          "[Removed Lines]",
          "313:         [ 'node_use_dtrace==\"true\"', {",
          "",
          "[Added Lines]",
          "313:         [ 'node_use_dtrace==\"true\" and target_arch==\"ia32\"', {",
          "",
          "---------------"
        ]
      }
    }
  ]
}