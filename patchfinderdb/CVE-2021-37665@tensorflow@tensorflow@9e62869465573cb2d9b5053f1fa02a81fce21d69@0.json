{
  "cve_id": "CVE-2021-37665",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in MKL implementation of requantization, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc) does not validate the dimensions of the `input` tensor. A similar issue occurs in `MklRequantizePerChannelOp`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantize_per_channel_op.cc) does not perform full validation for all the input arguments. We have patched the issue in GitHub commit 9e62869465573cb2d9b5053f1fa02a81fce21d69 and in the Github commit 203214568f5bc237603dbab6e1fd389f1572f5c9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "9e62869465573cb2d9b5053f1fa02a81fce21d69",
  "patch_info": {
    "commit_hash": "9e62869465573cb2d9b5053f1fa02a81fce21d69",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/9e62869465573cb2d9b5053f1fa02a81fce21d69",
    "files": [
      "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
    ],
    "message": "Add more validation to `RequantizationRangePerChannel`.\n\nPiperOrigin-RevId: 387693946\nChange-Id: Ife8dcbdb021bec4787eef6a4361dd08f17c14bd6",
    "before_after_code_files": [
      "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc": [
      "File: tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc -> tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "57:         ctx, input_max.dim_size(0) == depth,",
      "58:         errors::InvalidArgument(\"input_max has incorrect size, expected \",",
      "59:                                 depth, \" was \", input_max.dim_size(0)));",
      "61:     const float* input_min_data = input_min.flat<float>().data();",
      "62:     const float* input_max_data = input_max.flat<float>().data();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "60:     OP_REQUIRES(",
      "61:         ctx, input_min.NumElements() == depth,",
      "62:         errors::InvalidArgument(\"input_min must have the same number of \"",
      "63:                                 \"elements as input_max, got \",",
      "64:                                 input_min.NumElements(), \" and \", depth));",
      "65:     OP_REQUIRES(ctx, input.NumElements() > 0,",
      "66:                 errors::InvalidArgument(\"input must not be empty\"));",
      "67:     OP_REQUIRES(ctx, input.dims() == 4,",
      "68:                 errors::InvalidArgument(\"input must be in NHWC format\"));",
      "69:     OP_REQUIRES(",
      "70:         ctx, input.dim_size(3) == depth,",
      "71:         errors::InvalidArgument(",
      "72:             \"input must have same number of channels as length of input_min: \",",
      "73:             input.dim_size(3), \" vs \", depth));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "242e99ba1ba1e249592b8da2d42b5dd5662ce97e",
      "candidate_info": {
        "commit_hash": "242e99ba1ba1e249592b8da2d42b5dd5662ce97e",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/242e99ba1ba1e249592b8da2d42b5dd5662ce97e",
        "files": [
          "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
        ],
        "message": "Add more validation to `RequantizationRangePerChannel`.\n\nPiperOrigin-RevId: 387693946\nChange-Id: Ife8dcbdb021bec4787eef6a4361dd08f17c14bd6",
        "before_after_code_files": [
          "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc": [
          "File: tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc -> tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:         ctx, input_max.dim_size(0) == depth,",
          "58:         errors::InvalidArgument(\"input_max has incorrect size, expected \",",
          "59:                                 depth, \" was \", input_max.dim_size(0)));",
          "61:     const float* input_min_data = input_min.flat<float>().data();",
          "62:     const float* input_max_data = input_max.flat<float>().data();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:     OP_REQUIRES(",
          "61:         ctx, input_min.NumElements() == depth,",
          "62:         errors::InvalidArgument(\"input_min must have the same number of \"",
          "63:                                 \"elements as input_max, got \",",
          "64:                                 input_min.NumElements(), \" and \", depth));",
          "65:     OP_REQUIRES(ctx, input.NumElements() > 0,",
          "66:                 errors::InvalidArgument(\"input must not be empty\"));",
          "67:     OP_REQUIRES(ctx, input.dims() == 4,",
          "68:                 errors::InvalidArgument(\"input must be in NHWC format\"));",
          "69:     OP_REQUIRES(",
          "70:         ctx, input.dim_size(3) == depth,",
          "71:         errors::InvalidArgument(",
          "72:             \"input must have same number of channels as length of input_min: \",",
          "73:             input.dim_size(3), \" vs \", depth));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f1980390a4740bdbd245a7ad45c9cf4f322298d",
      "candidate_info": {
        "commit_hash": "5f1980390a4740bdbd245a7ad45c9cf4f322298d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5f1980390a4740bdbd245a7ad45c9cf4f322298d",
        "files": [
          "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
        ],
        "message": "Add more validation to `RequantizationRangePerChannel`.\n\nPiperOrigin-RevId: 387693946\nChange-Id: Ife8dcbdb021bec4787eef6a4361dd08f17c14bd6",
        "before_after_code_files": [
          "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc": [
          "File: tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc -> tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:         ctx, input_max.dim_size(0) == depth,",
          "58:         errors::InvalidArgument(\"input_max has incorrect size, expected \",",
          "59:                                 depth, \" was \", input_max.dim_size(0)));",
          "61:     const float* input_min_data = input_min.flat<float>().data();",
          "62:     const float* input_max_data = input_max.flat<float>().data();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:     OP_REQUIRES(",
          "61:         ctx, input_min.NumElements() == depth,",
          "62:         errors::InvalidArgument(\"input_min must have the same number of \"",
          "63:                                 \"elements as input_max, got \",",
          "64:                                 input_min.NumElements(), \" and \", depth));",
          "65:     OP_REQUIRES(ctx, input.NumElements() > 0,",
          "66:                 errors::InvalidArgument(\"input must not be empty\"));",
          "67:     OP_REQUIRES(ctx, input.dims() == 4,",
          "68:                 errors::InvalidArgument(\"input must be in NHWC format\"));",
          "69:     OP_REQUIRES(",
          "70:         ctx, input.dim_size(3) == depth,",
          "71:         errors::InvalidArgument(",
          "72:             \"input must have same number of channels as length of input_min: \",",
          "73:             input.dim_size(3), \" vs \", depth));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5dbd4ef661059a28f717822448dfef63b2d75f45",
      "candidate_info": {
        "commit_hash": "5dbd4ef661059a28f717822448dfef63b2d75f45",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5dbd4ef661059a28f717822448dfef63b2d75f45",
        "files": [
          "tensorflow/core/kernels/mkl_requantization_range_per_channel_op.cc"
        ],
        "message": "Add more validation to `RequantizationRangePerChannel`.\n\nPiperOrigin-RevId: 387693946\nChange-Id: Ife8dcbdb021bec4787eef6a4361dd08f17c14bd6",
        "before_after_code_files": [
          "tensorflow/core/kernels/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl_requantization_range_per_channel_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl_requantization_range_per_channel_op.cc": [
          "File: tensorflow/core/kernels/mkl_requantization_range_per_channel_op.cc -> tensorflow/core/kernels/mkl_requantization_range_per_channel_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:         ctx, input_max.dim_size(0) == depth,",
          "58:         errors::InvalidArgument(\"input_max has incorrect size, expected \",",
          "59:                                 depth, \" was \", input_max.dim_size(0)));",
          "61:     const float* input_min_data = input_min.flat<float>().data();",
          "62:     const float* input_max_data = input_max.flat<float>().data();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:     OP_REQUIRES(",
          "61:         ctx, input_min.NumElements() == depth,",
          "62:         errors::InvalidArgument(\"input_min must have the same number of \"",
          "63:                                 \"elements as input_max, got \",",
          "64:                                 input_min.NumElements(), \" and \", depth));",
          "65:     OP_REQUIRES(ctx, input.NumElements() > 0,",
          "66:                 errors::InvalidArgument(\"input must not be empty\"));",
          "67:     OP_REQUIRES(ctx, input.dims() == 4,",
          "68:                 errors::InvalidArgument(\"input must be in NHWC format\"));",
          "69:     OP_REQUIRES(",
          "70:         ctx, input.dim_size(3) == depth,",
          "71:         errors::InvalidArgument(",
          "72:             \"input must have same number of channels as length of input_min: \",",
          "73:             input.dim_size(3), \" vs \", depth));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a21f4239da46ed2d77682ffde66ec8b3e5e9e6a0",
      "candidate_info": {
        "commit_hash": "a21f4239da46ed2d77682ffde66ec8b3e5e9e6a0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/a21f4239da46ed2d77682ffde66ec8b3e5e9e6a0",
        "files": [
          "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
        ],
        "message": "Add more validation to `RequantizationRangePerChannel`.\n\nPiperOrigin-RevId: 387693946\nChange-Id: Ife8dcbdb021bec4787eef6a4361dd08f17c14bd6",
        "before_after_code_files": [
          "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc||tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc": [
          "File: tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc -> tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:         ctx, input_max.dim_size(0) == depth,",
          "58:         errors::InvalidArgument(\"input_max has incorrect size, expected \",",
          "59:                                 depth, \" was \", input_max.dim_size(0)));",
          "61:     const float* input_min_data = input_min.flat<float>().data();",
          "62:     const float* input_max_data = input_max.flat<float>().data();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:     OP_REQUIRES(",
          "61:         ctx, input_min.NumElements() == depth,",
          "62:         errors::InvalidArgument(\"input_min must have the same number of \"",
          "63:                                 \"elements as input_max, got \",",
          "64:                                 input_min.NumElements(), \" and \", depth));",
          "65:     OP_REQUIRES(ctx, input.NumElements() > 0,",
          "66:                 errors::InvalidArgument(\"input must not be empty\"));",
          "67:     OP_REQUIRES(ctx, input.dims() == 4,",
          "68:                 errors::InvalidArgument(\"input must be in NHWC format\"));",
          "69:     OP_REQUIRES(",
          "70:         ctx, input.dim_size(3) == depth,",
          "71:         errors::InvalidArgument(",
          "72:             \"input must have same number of channels as length of input_min: \",",
          "73:             input.dim_size(3), \" vs \", depth));",
          "",
          "---------------"
        ]
      }
    }
  ]
}