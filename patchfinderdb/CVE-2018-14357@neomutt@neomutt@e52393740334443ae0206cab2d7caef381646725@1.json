{
  "cve_id": "CVE-2018-14357",
  "cve_desc": "An issue was discovered in Mutt before 1.10.1 and NeoMutt before 2018-07-16. They allow remote IMAP servers to execute arbitrary commands via backquote characters, related to the mailboxes command associated with an automatic subscription.",
  "repo": "neomutt/neomutt",
  "patch_hash": "e52393740334443ae0206cab2d7caef381646725",
  "patch_info": {
    "commit_hash": "e52393740334443ae0206cab2d7caef381646725",
    "repo": "neomutt/neomutt",
    "commit_url": "https://github.com/neomutt/neomutt/commit/e52393740334443ae0206cab2d7caef381646725",
    "files": [
      "imap/auth_login.c",
      "imap/command.c",
      "imap/imap.c",
      "imap/imap_private.h",
      "imap/util.c"
    ],
    "message": "quote imap strings more carefully\n\nCo-authored-by: JerikoOne <jeriko.one@gmx.us>",
    "before_after_code_files": [
      "imap/auth_login.c||imap/auth_login.c",
      "imap/command.c||imap/command.c",
      "imap/imap.c||imap/imap.c",
      "imap/imap_private.h||imap/imap_private.h",
      "imap/util.c||imap/util.c"
    ]
  },
  "patch_diff": {
    "imap/auth_login.c||imap/auth_login.c": [
      "File: imap/auth_login.c -> imap/auth_login.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "66:   mutt_message(_(\"Logging in...\"));",
      "",
      "[Removed Lines]",
      "68:   imap_quote_string(q_user, sizeof(q_user), idata->conn->account.user);",
      "69:   imap_quote_string(q_pass, sizeof(q_pass), idata->conn->account.pass);",
      "",
      "[Added Lines]",
      "68:   imap_quote_string(q_user, sizeof(q_user), idata->conn->account.user, false);",
      "69:   imap_quote_string(q_pass, sizeof(q_pass), idata->conn->account.pass, false);",
      "",
      "---------------"
    ],
    "imap/command.c||imap/command.c": [
      "File: imap/command.c -> imap/command.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:   mutt_str_strfcpy(buf, \"mailboxes \\\"\", sizeof(buf));",
      "500:   mutt_account_tourl(&idata->conn->account, &url);",
      "503:   url.path = errstr + 1;",
      "504:   url.path[strlen(url.path) - 1] = '\\0';",
      "505:   if (mutt_str_strcmp(url.user, ImapUser) == 0)",
      "",
      "[Removed Lines]",
      "502:   imap_quote_string(errstr, sizeof(errstr), list.name);",
      "",
      "[Added Lines]",
      "502:   imap_quote_string(errstr, sizeof(errstr), list.name, true);",
      "",
      "---------------"
    ],
    "imap/imap.c||imap/imap.c": [
      "File: imap/imap.c -> imap/imap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "464:           return -1;",
      "465:         }",
      "468:         mutt_buffer_addstr(buf, term);",
      "469:         mutt_buffer_addch(buf, ' ');",
      "",
      "[Removed Lines]",
      "467:         imap_quote_string(term, sizeof(term), pat->p.str);",
      "",
      "[Added Lines]",
      "467:         imap_quote_string(term, sizeof(term), pat->p.str, false);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "473:         delim++;",
      "474:         SKIPWS(delim);",
      "476:         mutt_buffer_addstr(buf, term);",
      "477:         break;",
      "478:       case MUTT_BODY:",
      "479:         mutt_buffer_addstr(buf, \"BODY \");",
      "481:         mutt_buffer_addstr(buf, term);",
      "482:         break;",
      "483:       case MUTT_WHOLE_MSG:",
      "484:         mutt_buffer_addstr(buf, \"TEXT \");",
      "486:         mutt_buffer_addstr(buf, term);",
      "487:         break;",
      "488:       case MUTT_SERVERSEARCH:",
      "",
      "[Removed Lines]",
      "475:         imap_quote_string(term, sizeof(term), delim);",
      "480:         imap_quote_string(term, sizeof(term), pat->p.str);",
      "485:         imap_quote_string(term, sizeof(term), pat->p.str);",
      "",
      "[Added Lines]",
      "475:         imap_quote_string(term, sizeof(term), delim, false);",
      "480:         imap_quote_string(term, sizeof(term), pat->p.str, false);",
      "485:         imap_quote_string(term, sizeof(term), pat->p.str, false);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "495:         }",
      "496:       }",
      "497:         mutt_buffer_addstr(buf, \"X-GM-RAW \");",
      "499:         mutt_buffer_addstr(buf, term);",
      "500:         break;",
      "501:     }",
      "",
      "[Removed Lines]",
      "498:         imap_quote_string(term, sizeof(term), pat->p.str);",
      "",
      "[Added Lines]",
      "498:         imap_quote_string(term, sizeof(term), pat->p.str, false);",
      "",
      "---------------"
    ],
    "imap/imap_private.h||imap/imap_private.h": [
      "File: imap/imap_private.h -> imap/imap_private.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "328: int imap_mxcmp(const char *mx1, const char *mx2);",
      "329: char *imap_next_word(char *s);",
      "330: void imap_qualify_path(char *dest, size_t len, struct ImapMbox *mx, char *path);",
      "332: void imap_unquote_string(char *s);",
      "333: void imap_munge_mbox_name(struct ImapData *idata, char *dest, size_t dlen, const char *src);",
      "334: void imap_unmunge_mbox_name(struct ImapData *idata, char *s);",
      "",
      "[Removed Lines]",
      "331: void imap_quote_string(char *dest, size_t dlen, const char *src);",
      "",
      "[Added Lines]",
      "331: void imap_quote_string(char *dest, size_t dlen, const char *src, bool quote_backtick);",
      "",
      "---------------"
    ],
    "imap/util.c||imap/util.c": [
      "File: imap/util.c -> imap/util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "802: {",
      "804:   char *pt = dest;",
      "805:   const char *s = src;",
      "",
      "[Removed Lines]",
      "801: void imap_quote_string(char *dest, size_t dlen, const char *src)",
      "803:   static const char quote[] = \"\\\"\\\\\";",
      "",
      "[Added Lines]",
      "801: void imap_quote_string(char *dest, size_t dlen, const char *src, bool quote_backtick)",
      "803:   const char *quote = \"`\\\"\\\\\";",
      "804:   if (!quote_backtick)",
      "805:     quote++;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "874:   char *buf = mutt_str_strdup(src);",
      "875:   imap_utf_encode(idata, &buf);",
      "879:   FREE(&buf);",
      "880: }",
      "",
      "[Removed Lines]",
      "877:   imap_quote_string(dest, dlen, buf);",
      "",
      "[Added Lines]",
      "880:   imap_quote_string(dest, dlen, buf, false);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "56267217bff09d8a59a00c73a391172ce6e2ce02",
      "candidate_info": {
        "commit_hash": "56267217bff09d8a59a00c73a391172ce6e2ce02",
        "repo": "neomutt/neomutt",
        "commit_url": "https://github.com/neomutt/neomutt/commit/56267217bff09d8a59a00c73a391172ce6e2ce02",
        "files": [
          "commands.c",
          "curs_main.c",
          "globals.h",
          "imap/imap.c",
          "init.h",
          "mutt.h",
          "ncrypt/crypt.c",
          "nntp.c",
          "pager.c",
          "pop.c",
          "pop_lib.c",
          "recvattach.c",
          "recvcmd.c",
          "send.c",
          "smtp.c"
        ],
        "message": "rename: global quad variables (insert underscores)\n\nRename constants for better legibility, such as:\n    OPT_PGPENCRYPTSELF -> OPT_PGP_ENCRYPT_SELF",
        "before_after_code_files": [
          "commands.c||commands.c",
          "curs_main.c||curs_main.c",
          "globals.h||globals.h",
          "imap/imap.c||imap/imap.c",
          "init.h||init.h",
          "mutt.h||mutt.h",
          "ncrypt/crypt.c||ncrypt/crypt.c",
          "nntp.c||nntp.c",
          "pager.c||pager.c",
          "pop.c||pop.c",
          "pop_lib.c||pop_lib.c",
          "recvattach.c||recvattach.c",
          "recvcmd.c||recvcmd.c",
          "send.c||send.c",
          "smtp.c||smtp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "imap/imap.c||imap/imap.c"
          ],
          "candidate": [
            "imap/imap.c||imap/imap.c"
          ]
        }
      },
      "candidate_diff": {
        "commands.c||commands.c": [
          "File: commands.c -> commands.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:     else if (cur->security & SIGN)",
          "103:     {",
          "106:       {",
          "107:         cmflags |= MUTT_CM_VERIFY;",
          "108:       }",
          "",
          "[Removed Lines]",
          "105:       if (query_quadoption(OPT_VERIFYSIG, _(\"Verify PGP signature?\")) == MUTT_YES)",
          "",
          "[Added Lines]",
          "105:       if (query_quadoption(OPT_VERIFY_SIG, _(\"Verify PGP signature?\")) == MUTT_YES)",
          "",
          "---------------"
        ],
        "curs_main.c||curs_main.c": [
          "File: curs_main.c -> curs_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3100:         CHECK_ATTACH;",
          "3101:         if (op != OP_FOLLOWUP || !CURHDR->env->followup_to ||",
          "3102:             (mutt_strcasecmp(CURHDR->env->followup_to, \"poster\") != 0) ||",
          "3104:                              _(\"Reply by mail as poster prefers?\")) != MUTT_YES)",
          "3105:         {",
          "3106:           if (Context && Context->magic == MUTT_NNTP &&",
          "3108:             break;",
          "3109:           if (op == OP_POST)",
          "3110:             ci_send_message(SENDNEWS, NULL, NULL, Context, NULL);",
          "",
          "[Removed Lines]",
          "3103:             query_quadoption(OPT_FOLLOWUPTOPOSTER,",
          "3107:               !((struct NntpData *) Context->data)->allowed && query_quadoption(OPT_TOMODERATED, _(\"Posting to this group not allowed, may be moderated. Continue?\")) != MUTT_YES)",
          "",
          "[Added Lines]",
          "3103:             query_quadoption(OPT_FOLLOW_UP_TO_POSTER,",
          "3107:               !((struct NntpData *) Context->data)->allowed && query_quadoption(OPT_TO_MODERATED, _(\"Posting to this group not allowed, may be moderated. Continue?\")) != MUTT_YES)",
          "",
          "---------------"
        ],
        "globals.h||globals.h": [
          "File: globals.h -> globals.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "227: #ifdef MAIN_C",
          "229: #else",
          "230: extern unsigned char QuadOptions[];",
          "231: #endif",
          "",
          "[Removed Lines]",
          "228: unsigned char QuadOptions[(OPT_MAX * 2 + 7) / 8];",
          "",
          "[Added Lines]",
          "228: unsigned char QuadOptions[(OPT_QUAD_MAX * 2 + 7) / 8];",
          "",
          "---------------"
        ],
        "imap/imap.c||imap/imap.c": [
          "File: imap/imap.c -> imap/imap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "475:       if (option(OPT_SSL_FORCE_TLS))",
          "476:         rc = MUTT_YES;",
          "478:                                       _(\"Secure connection with TLS?\"))) == MUTT_ABORT)",
          "479:         goto err_close_conn;",
          "480:       if (rc == MUTT_YES)",
          "",
          "[Removed Lines]",
          "477:       else if ((rc = query_quadoption(OPT_SSLSTARTTLS,",
          "",
          "[Added Lines]",
          "477:       else if ((rc = query_quadoption(OPT_SSL_START_TLS,",
          "",
          "---------------"
        ],
        "init.h||init.h": [
          "File: init.h -> init.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "643:   { \"pgp_verify_sig\",   DT_SYN,  R_NONE, UL \"crypt_verify_sig\", 0 },",
          "",
          "[Removed Lines]",
          "644:   { \"crypt_verify_sig\", DT_QUAD, R_NONE, OPT_VERIFYSIG, MUTT_YES },",
          "",
          "[Added Lines]",
          "644:   { \"crypt_verify_sig\", DT_QUAD, R_NONE, OPT_VERIFY_SIG, MUTT_YES },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "855:   { \"fcc_attach\",       DT_QUAD, R_NONE, OPT_FCCATTACH, MUTT_YES },",
          "",
          "[Added Lines]",
          "855:   { \"fcc_attach\",       DT_QUAD, R_NONE, OPT_FCC_ATTACH, MUTT_YES },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "940: #ifdef USE_NNTP",
          "",
          "[Removed Lines]",
          "941:   { \"followup_to_poster\", DT_QUAD, R_NONE, OPT_FOLLOWUPTOPOSTER, MUTT_ASKYES },",
          "",
          "[Added Lines]",
          "941:   { \"followup_to_poster\", DT_QUAD, R_NONE, OPT_FOLLOW_UP_TO_POSTER, MUTT_ASKYES },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "995:   { \"forw_decrypt\",     DT_SYN,  R_NONE, UL \"forward_decrypt\", 0 },",
          "",
          "[Removed Lines]",
          "998:   { \"forward_edit\",     DT_QUAD, R_NONE, OPT_FORWEDIT, MUTT_YES },",
          "",
          "[Added Lines]",
          "998:   { \"forward_edit\",     DT_QUAD, R_NONE, OPT_FORW_EDIT, MUTT_YES },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1256:   { \"honor_followup_to\", DT_QUAD, R_NONE, OPT_MFUPTO, MUTT_YES },",
          "",
          "[Added Lines]",
          "1256:   { \"honor_followup_to\", DT_QUAD, R_NONE, OPT_MF_UP_TO, MUTT_YES },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1878:   { \"mime_forward\",     DT_QUAD, R_NONE, OPT_MIMEFWD, MUTT_NO },",
          "",
          "[Added Lines]",
          "1878:   { \"mime_forward\",     DT_QUAD, R_NONE, OPT_MIME_FWD, MUTT_NO },",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1897:   { \"mime_fwd\",         DT_SYN,  R_NONE, UL \"mime_forward\", 0 },",
          "",
          "[Removed Lines]",
          "1900:   { \"mime_forward_rest\", DT_QUAD, R_NONE, OPT_MIMEFWDREST, MUTT_YES },",
          "",
          "[Added Lines]",
          "1900:   { \"mime_forward_rest\", DT_QUAD, R_NONE, OPT_MIME_FWD_REST, MUTT_YES },",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2429:   { \"pgp_mime_auto\", DT_QUAD, R_NONE, OPT_PGPMIMEAUTO, MUTT_ASKYES },",
          "",
          "[Added Lines]",
          "2429:   { \"pgp_mime_auto\", DT_QUAD, R_NONE, OPT_PGP_MIME_AUTO, MUTT_ASKYES },",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2630:   { \"pop_delete\",       DT_QUAD, R_NONE, OPT_POPDELETE, MUTT_ASKNO },",
          "",
          "[Added Lines]",
          "2630:   { \"pop_delete\",       DT_QUAD, R_NONE, OPT_POP_DELETE, MUTT_ASKNO },",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2665:   { \"pop_reconnect\",    DT_QUAD, R_NONE, OPT_POPRECONNECT, MUTT_ASKYES },",
          "",
          "[Added Lines]",
          "2665:   { \"pop_reconnect\",    DT_QUAD, R_NONE, OPT_POP_RECONNECT, MUTT_ASKYES },",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2688: #ifdef USE_NNTP",
          "",
          "[Removed Lines]",
          "2689:   { \"post_moderated\",   DT_QUAD, R_NONE, OPT_TOMODERATED, MUTT_ASKYES },",
          "",
          "[Added Lines]",
          "2689:   { \"post_moderated\",   DT_QUAD, R_NONE, OPT_TO_MODERATED, MUTT_ASKYES },",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2954:   { \"reply_to\",         DT_QUAD, R_NONE, OPT_REPLYTO, MUTT_ASKYES },",
          "",
          "[Added Lines]",
          "2954:   { \"reply_to\",         DT_QUAD, R_NONE, OPT_REPLY_TO, MUTT_ASKYES },",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "3834:   { \"ssl_starttls\", DT_QUAD, R_NONE, OPT_SSLSTARTTLS, MUTT_YES },",
          "",
          "[Added Lines]",
          "3834:   { \"ssl_starttls\", DT_QUAD, R_NONE, OPT_SSL_START_TLS, MUTT_YES },",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4405:   { NULL, 0, 0, 0, 0 },",
          "4406: };",
          "",
          "[Removed Lines]",
          "4403:   { \"pgp_encrypt_self\",   DT_QUAD, R_NONE, OPT_PGPENCRYPTSELF,   MUTT_NO },",
          "4404:   { \"smime_encrypt_self\", DT_QUAD, R_NONE, OPT_SMIMEENCRYPTSELF, MUTT_NO },",
          "",
          "[Added Lines]",
          "4403:   { \"pgp_encrypt_self\",   DT_QUAD, R_NONE, OPT_PGP_ENCRYPT_SELF,   MUTT_NO },",
          "4404:   { \"smime_encrypt_self\", DT_QUAD, R_NONE, OPT_SMIME_ENCRYPT_SELF, MUTT_NO },",
          "",
          "---------------"
        ],
        "mutt.h||mutt.h": [
          "File: mutt.h -> mutt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "251:   OPT_BOUNCE,",
          "252:   OPT_COPY,",
          "253:   OPT_DELETE,",
          "256:   OPT_INCLUDE,",
          "260:   OPT_MOVE,",
          "264: #ifdef USE_POP",
          "267: #endif",
          "268:   OPT_POSTPONE,",
          "269:   OPT_PRINT,",
          "270:   OPT_QUIT,",
          "272:   OPT_RECALL,",
          "273: #ifdef USE_SSL",
          "275: #endif",
          "276:   OPT_SUBJECT,",
          "278: #ifdef USE_NNTP",
          "280:   OPT_CATCHUP,",
          "282: #endif",
          "286: };",
          "",
          "[Removed Lines]",
          "254:   OPT_FORWEDIT,",
          "255:   OPT_FCCATTACH,",
          "257:   OPT_MFUPTO,",
          "258:   OPT_MIMEFWD,",
          "259:   OPT_MIMEFWDREST,",
          "262:   OPT_SMIMEENCRYPTSELF,",
          "263:   OPT_PGPENCRYPTSELF,",
          "265:   OPT_POPDELETE,",
          "266:   OPT_POPRECONNECT,",
          "271:   OPT_REPLYTO,",
          "274:   OPT_SSLSTARTTLS,",
          "279:   OPT_TOMODERATED,",
          "281:   OPT_FOLLOWUPTOPOSTER,",
          "285:   OPT_MAX",
          "",
          "[Added Lines]",
          "254:   OPT_FORW_EDIT,",
          "255:   OPT_FCC_ATTACH,",
          "257:   OPT_MF_UP_TO,",
          "258:   OPT_MIME_FWD,",
          "259:   OPT_MIME_FWD_REST,",
          "262:   OPT_SMIME_ENCRYPT_SELF,",
          "263:   OPT_PGP_ENCRYPT_SELF,",
          "265:   OPT_POP_DELETE,",
          "266:   OPT_POP_RECONNECT,",
          "271:   OPT_REPLY_TO,",
          "274:   OPT_SSL_START_TLS,",
          "279:   OPT_TO_MODERATED,",
          "281:   OPT_FOLLOW_UP_TO_POSTER,",
          "285:   OPT_QUAD_MAX,",
          "",
          "---------------"
        ],
        "ncrypt/crypt.c||ncrypt/crypt.c": [
          "File: ncrypt/crypt.c -> ncrypt/crypt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:     if ((msg->content->type != TYPETEXT) ||",
          "152:         (ascii_strcasecmp(msg->content->subtype, \"plain\") != 0))",
          "153:     {",
          "155:                            _(\"Inline PGP can't be used with attachments.  \"",
          "156:                              \"Revert to PGP/MIME?\")) != MUTT_YES)",
          "157:       {",
          "",
          "[Removed Lines]",
          "154:       if (query_quadoption(OPT_PGPMIMEAUTO,",
          "",
          "[Added Lines]",
          "154:       if (query_quadoption(OPT_PGP_MIME_AUTO,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "176:       if (query_quadoption(",
          "178:               _(\"Message can't be sent inline.  Revert to using PGP/MIME?\")) != MUTT_YES)",
          "179:       {",
          "180:         mutt_error(_(\"Mail not sent.\"));",
          "",
          "[Removed Lines]",
          "177:               OPT_PGPMIMEAUTO,",
          "",
          "[Added Lines]",
          "177:               OPT_PGP_MIME_AUTO,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "836:         return -1;",
          "837:       }",
          "838:       unset_option(OPT_PGP_CHECK_TRUST);",
          "840:         self_encrypt = PgpSelfEncryptAs;",
          "841:     }",
          "842:     if ((WithCrypto & APPLICATION_SMIME) && (msg->security & APPLICATION_SMIME))",
          "",
          "[Removed Lines]",
          "839:       if (option(OPT_PGP_SELF_ENCRYPT) || (quadoption(OPT_PGPENCRYPTSELF) == MUTT_YES))",
          "",
          "[Added Lines]",
          "839:       if (option(OPT_PGP_SELF_ENCRYPT) || (quadoption(OPT_PGP_ENCRYPT_SELF) == MUTT_YES))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "846:         rfc822_free_address(&adrlist);",
          "847:         return -1;",
          "848:       }",
          "850:         self_encrypt = SmimeSelfEncryptAs;",
          "851:     }",
          "852:   }",
          "",
          "[Removed Lines]",
          "849:       if (option(OPT_SMIME_SELF_ENCRYPT) || (quadoption(OPT_SMIMEENCRYPTSELF) == MUTT_YES))",
          "",
          "[Added Lines]",
          "849:       if (option(OPT_SMIME_SELF_ENCRYPT) || (quadoption(OPT_SMIME_ENCRYPT_SELF) == MUTT_YES))",
          "",
          "---------------"
        ],
        "nntp.c||nntp.c": [
          "File: nntp.c -> nntp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "671:     if (nserv->use_tls == 0)",
          "672:       nserv->use_tls =",
          "673:           option(OPT_SSL_FORCE_TLS) ||",
          "675:                                    _(\"Secure connection with TLS?\")) == MUTT_YES ?",
          "676:               2 :",
          "677:               1;",
          "",
          "[Removed Lines]",
          "674:                   query_quadoption(OPT_SSLSTARTTLS,",
          "",
          "[Added Lines]",
          "674:                   query_quadoption(OPT_SSL_START_TLS,",
          "",
          "---------------"
        ],
        "pager.c||pager.c": [
          "File: pager.c -> pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2874:         CHECK_MODE(IsHeader(extra) && !IsAttach(extra));",
          "2875:         CHECK_ATTACH;",
          "2876:         if (extra->ctx && extra->ctx->magic == MUTT_NNTP &&",
          "2878:           break;",
          "2879:         ci_send_message(SENDNEWS, NULL, NULL, extra->ctx, NULL);",
          "2880:         pager_menu->redraw = REDRAW_FULL;",
          "",
          "[Removed Lines]",
          "2877:             !((struct NntpData *) extra->ctx->data)->allowed && query_quadoption(OPT_TOMODERATED, _(\"Posting to this group not allowed, may be moderated. Continue?\")) != MUTT_YES)",
          "",
          "[Added Lines]",
          "2877:             !((struct NntpData *) extra->ctx->data)->allowed && query_quadoption(OPT_TO_MODERATED, _(\"Posting to this group not allowed, may be moderated. Continue?\")) != MUTT_YES)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2884:         CHECK_MODE(IsHeader(extra) || IsMsgAttach(extra));",
          "2885:         CHECK_ATTACH;",
          "2886:         if (extra->ctx && extra->ctx->magic == MUTT_NNTP &&",
          "2888:           break;",
          "2889:         if (IsMsgAttach(extra))",
          "2890:           mutt_attach_forward(extra->fp, extra->hdr, extra->idx, extra->idxlen,",
          "",
          "[Removed Lines]",
          "2887:             !((struct NntpData *) extra->ctx->data)->allowed && query_quadoption(OPT_TOMODERATED, _(\"Posting to this group not allowed, may be moderated. Continue?\")) != MUTT_YES)",
          "",
          "[Added Lines]",
          "2887:             !((struct NntpData *) extra->ctx->data)->allowed && query_quadoption(OPT_TO_MODERATED, _(\"Posting to this group not allowed, may be moderated. Continue?\")) != MUTT_YES)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2904:           followup_to = extra->hdr->env->followup_to;",
          "2906:         if (!followup_to || (mutt_strcasecmp(followup_to, \"poster\") != 0) ||",
          "2908:                              _(\"Reply by mail as poster prefers?\")) != MUTT_YES)",
          "2909:         {",
          "2910:           if (extra->ctx && extra->ctx->magic == MUTT_NNTP &&",
          "2912:             break;",
          "2913:           if (IsMsgAttach(extra))",
          "2914:             mutt_attach_reply(extra->fp, extra->hdr, extra->idx, extra->idxlen,",
          "",
          "[Removed Lines]",
          "2907:             query_quadoption(OPT_FOLLOWUPTOPOSTER,",
          "2911:               !((struct NntpData *) extra->ctx->data)->allowed && query_quadoption(OPT_TOMODERATED, _(\"Posting to this group not allowed, may be moderated. Continue?\")) != MUTT_YES)",
          "",
          "[Added Lines]",
          "2907:             query_quadoption(OPT_FOLLOW_UP_TO_POSTER,",
          "2911:               !((struct NntpData *) extra->ctx->data)->allowed && query_quadoption(OPT_TO_MODERATED, _(\"Posting to this group not allowed, may be moderated. Continue?\")) != MUTT_YES)",
          "",
          "---------------"
        ],
        "pop.c||pop.c": [
          "File: pop.c -> pop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "893:     goto finish;",
          "895:   delanswer =",
          "898:   snprintf(msgbuf, sizeof(msgbuf), _(\"Reading new messages (%d bytes)...\"), bytes);",
          "899:   mutt_message(\"%s\", msgbuf);",
          "",
          "[Removed Lines]",
          "896:       query_quadoption(OPT_POPDELETE, _(\"Delete messages from server?\"));",
          "",
          "[Added Lines]",
          "896:       query_quadoption(OPT_POP_DELETE, _(\"Delete messages from server?\"));",
          "",
          "---------------"
        ],
        "pop_lib.c||pop_lib.c": [
          "File: pop_lib.c -> pop_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:       pop_data->use_stls = 2;",
          "327:     if (pop_data->use_stls == 0)",
          "328:     {",
          "330:       if (ret == MUTT_ABORT)",
          "331:         return -2;",
          "332:       pop_data->use_stls = 1;",
          "",
          "[Removed Lines]",
          "329:       ret = query_quadoption(OPT_SSLSTARTTLS, _(\"Secure connection with TLS?\"));",
          "",
          "[Added Lines]",
          "329:       ret = query_quadoption(OPT_SSL_START_TLS, _(\"Secure connection with TLS?\"));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "645:     if (ret < -1)",
          "646:       return -1;",
          "649:                          _(\"Connection lost. Reconnect to POP server?\")) != MUTT_YES)",
          "650:       return -1;",
          "651:   }",
          "",
          "[Removed Lines]",
          "648:     if (query_quadoption(OPT_POPRECONNECT,",
          "",
          "[Added Lines]",
          "648:     if (query_quadoption(OPT_POP_RECONNECT,",
          "",
          "---------------"
        ],
        "recvattach.c||recvattach.c": [
          "File: recvattach.c -> recvattach.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1253:         if (!idx[menu->current]->content->hdr->env->followup_to ||",
          "1254:             (mutt_strcasecmp(idx[menu->current]->content->hdr->env->followup_to, \"poster\") != 0) ||",
          "1256:                              _(\"Reply by mail as poster prefers?\")) != MUTT_YES)",
          "1257:         {",
          "1258:           mutt_attach_reply(fp, hdr, idx, idxlen,",
          "",
          "[Removed Lines]",
          "1255:             query_quadoption(OPT_FOLLOWUPTOPOSTER,",
          "",
          "[Added Lines]",
          "1255:             query_quadoption(OPT_FOLLOW_UP_TO_POSTER,",
          "",
          "---------------"
        ],
        "recvcmd.c||recvcmd.c": [
          "File: recvcmd.c -> recvcmd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "441:   if ((!cur || mutt_can_decode(cur)) &&",
          "443:     mime_fwd_all = true;",
          "444:   else if (rc == -1)",
          "445:     goto bail;",
          "",
          "[Removed Lines]",
          "442:       (rc = query_quadoption(OPT_MIMEFWD, _(\"Forward as attachments?\"))) == MUTT_YES)",
          "",
          "[Added Lines]",
          "442:       (rc = query_quadoption(OPT_MIME_FWD, _(\"Forward as attachments?\"))) == MUTT_YES)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "452:   if (!mime_fwd_all && !cur && (nattach > 1) && !check_can_decode(idx, idxlen, cur))",
          "453:   {",
          "455:                                _(\"Can't decode all tagged attachments.  \"",
          "456:                                  \"MIME-forward the others?\"))) == MUTT_ABORT)",
          "457:       goto bail;",
          "",
          "[Removed Lines]",
          "454:     if ((rc = query_quadoption(OPT_MIMEFWDREST,",
          "",
          "[Added Lines]",
          "454:     if ((rc = query_quadoption(OPT_MIME_FWD_REST,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "574:   tmpbody[0] = '\\0';",
          "577:   {",
          "",
          "[Removed Lines]",
          "576:   if ((rc = query_quadoption(OPT_MIMEFWD, _(\"Forward MIME encapsulated?\"))) == MUTT_NO)",
          "",
          "[Added Lines]",
          "576:   if ((rc = query_quadoption(OPT_MIME_FWD, _(\"Forward MIME encapsulated?\"))) == MUTT_NO)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "811:   if (nattach > 1 && !check_can_decode(idx, idxlen, cur))",
          "812:   {",
          "814:                                _(\"Can't decode all tagged attachments.  \"",
          "815:                                  \"MIME-encapsulate the others?\"))) == MUTT_ABORT)",
          "816:       return;",
          "",
          "[Removed Lines]",
          "813:     if ((rc = query_quadoption(OPT_MIMEFWDREST,",
          "",
          "[Added Lines]",
          "813:     if ((rc = query_quadoption(OPT_MIME_FWD_REST,",
          "",
          "---------------"
        ],
        "send.c||send.c": [
          "File: send.c -> send.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "579:       rfc822_append(to, env->from, 0);",
          "580:     }",
          "581:     else if (!(addrcmp(env->from, env->reply_to) && !env->reply_to->next) &&",
          "583:     {",
          "",
          "[Removed Lines]",
          "582:              quadoption(OPT_REPLYTO) != MUTT_YES)",
          "",
          "[Added Lines]",
          "582:              quadoption(OPT_REPLY_TO) != MUTT_YES)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "592:       snprintf(prompt, sizeof(prompt), _(\"Reply to %s%s?\"),",
          "593:                env->reply_to->mailbox, env->reply_to->next ? \",...\" : \"\");",
          "595:       {",
          "596:         case MUTT_YES:",
          "597:           rfc822_append(to, env->reply_to, 0);",
          "",
          "[Removed Lines]",
          "594:       switch (query_quadoption(OPT_REPLYTO, prompt))",
          "",
          "[Added Lines]",
          "594:       switch (query_quadoption(OPT_REPLY_TO, prompt))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "626:              in->mail_followup_to->mailbox,",
          "627:              in->mail_followup_to->next ? \",...\" : \"\");",
          "630:       return -1;",
          "631:   }",
          "",
          "[Removed Lines]",
          "629:     if ((hmfupto = query_quadoption(OPT_MFUPTO, prompt)) == MUTT_ABORT)",
          "",
          "[Added Lines]",
          "629:     if ((hmfupto = query_quadoption(OPT_MF_UP_TO, prompt)) == MUTT_ABORT)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "922:   }",
          "923:   else if (flags & SENDFORWARD)",
          "924:   {",
          "926:     {",
          "927:       struct Body *last = msg->content;",
          "",
          "[Removed Lines]",
          "925:     if ((i = query_quadoption(OPT_MIMEFWD, _(\"Forward as attachment?\"))) == MUTT_YES)",
          "",
          "[Added Lines]",
          "925:     if ((i = query_quadoption(OPT_MIME_FWD, _(\"Forward as attachment?\"))) == MUTT_YES)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1678:     if (!(flags & SENDKEY) &&",
          "1679:         ((flags & SENDFORWARD) == 0 || (option(OPT_EDIT_HDRS) && option(OPT_AUTO_EDIT)) ||",
          "1681:     {",
          "1683:       if (mutt_needs_mailcap(msg->content))",
          "",
          "[Removed Lines]",
          "1680:          query_quadoption(OPT_FORWEDIT, _(\"Edit forwarded message?\")) == MUTT_YES))",
          "",
          "[Added Lines]",
          "1680:          query_quadoption(OPT_FORW_EDIT, _(\"Edit forwarded message?\")) == MUTT_YES))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2088:       msg->content = clear_content;",
          "2092:         msg->content->type == TYPEMULTIPART)",
          "2093:     {",
          "2094:       if (WithCrypto && (msg->security & (ENCRYPT | SIGN)) &&",
          "",
          "[Removed Lines]",
          "2091:     if (query_quadoption(OPT_FCCATTACH, _(\"Save attachments in Fcc?\")) != MUTT_YES &&",
          "",
          "[Added Lines]",
          "2091:     if (query_quadoption(OPT_FCC_ATTACH, _(\"Save attachments in Fcc?\")) != MUTT_YES &&",
          "",
          "---------------"
        ],
        "smtp.c||smtp.c": [
          "File: smtp.c -> smtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "340:     if (conn->account.flags & MUTT_ACCT_USER)",
          "341:       Esmtp = 1;",
          "342: #ifdef USE_SSL",
          "344:       Esmtp = 1;",
          "345: #endif",
          "346:   }",
          "",
          "[Removed Lines]",
          "343:     if (option(OPT_SSL_FORCE_TLS) || quadoption(OPT_SSLSTARTTLS) != MUTT_NO)",
          "",
          "[Added Lines]",
          "343:     if (option(OPT_SSL_FORCE_TLS) || quadoption(OPT_SSL_START_TLS) != MUTT_NO)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "591:   else if (option(OPT_SSL_FORCE_TLS))",
          "592:     rc = MUTT_YES;",
          "593:   else if (mutt_bit_isset(Capabilities, STARTTLS) &&",
          "595:                                   _(\"Secure connection with TLS?\"))) == MUTT_ABORT)",
          "596:     return rc;",
          "",
          "[Removed Lines]",
          "594:            (rc = query_quadoption(OPT_SSLSTARTTLS,",
          "",
          "[Added Lines]",
          "594:            (rc = query_quadoption(OPT_SSL_START_TLS,",
          "",
          "---------------"
        ]
      }
    }
  ]
}