{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4d34766f4e537d570de4e280b1d4667244efed15",
      "candidate_info": {
        "commit_hash": "4d34766f4e537d570de4e280b1d4667244efed15",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4d34766f4e537d570de4e280b1d4667244efed15",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Clarify the comment on the sqlite3BtreeGetRequestedReserve() routine. No changes to code.\n\nFossilOrigin-Name: 52a6acca6d5d376308d354c02f4d676d9375c34c3841d7b1941196ee8b4e2511",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f534ebeaaf34f825550138f09f9a40221dfa7cd5c6537ef9f86dce5249025ec3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c"
        ]
      }
    },
    {
      "candidate_hash": "2aee514b4cab86856051aafaff767eeb1131eae0",
      "candidate_info": {
        "commit_hash": "2aee514b4cab86856051aafaff767eeb1131eae0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2aee514b4cab86856051aafaff767eeb1131eae0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "src/sqliteInt.h",
          "src/walker.c"
        ],
        "message": "Recompute the set of columns used for each table when the table is involved in query flattening.\n\nFossilOrigin-Name: a9bb71ba708ba72255ba8d18c9856e38ddf53eae2d61c8435149354fb2b2459e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/walker.c||src/walker.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 86e98ddc19470410ccc6d2cf4ad56ef0bc5a23b7fbe6331b8cae374689f54529",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3580: }",
          "3583: #if !defined(SQLITE_OMIT_SUBQUERY) || !defined(SQLITE_OMIT_VIEW)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3583: #if !defined(SQLITE_OMIT_SUBQUERY) || !defined(SQLITE_OMIT_VIEW)",
          "3591: static int recomputeColumnsUsedExpr(Walker *pWalker, Expr *pExpr){",
          "3592:   struct SrcList_item *pItem;",
          "3593:   ynVar iCol;",
          "3594:   if( pExpr->op!=TK_COLUMN ) return WRC_Continue;",
          "3595:   pItem = pWalker->u.pSrcItem;",
          "3596:   if( pItem->iCursor!=pExpr->iTable ) return WRC_Continue;",
          "3597:   iCol = pExpr->iColumn;",
          "3598:   if( iCol<0 ) return WRC_Continue;",
          "3599:   if( iCol>=BMS ) iCol = BMS-1;",
          "3600:   pItem->colUsed |= ((Bitmask)1)<<iCol;",
          "3601:   return WRC_Continue;",
          "3602: }",
          "3603: static void recomputeColumnsUsed(",
          "3606: ){",
          "3607:   Walker w;",
          "3608:   if( NEVER(pSrcItem->pTab==0) ) return;",
          "3609:   memset(&w, 0, sizeof(w));",
          "3610:   w.xExprCallback = recomputeColumnsUsedExpr;",
          "3611:   w.xSelectCallback = sqlite3SelectWalkNoop;",
          "3612:   w.u.pSrcItem = pSrcItem;",
          "3613:   pSrcItem->colUsed = 0;",
          "3614:   sqlite3WalkSelect(&w, pSelect);",
          "3615: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4118:       pParent->pLimit = pSub->pLimit;",
          "4119:       pSub->pLimit = 0;",
          "4120:     }",
          "4121:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4159:     for(i=0; i<nSubSrc; i++){",
          "4160:       recomputeColumnsUsed(pParent, &pSrc->a[i+iFrom]);",
          "4161:     }",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/walker.c||src/walker.c": [
          "File: src/walker.c -> src/walker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:   struct SrcList_item *pItem;",
          "158:   pSrc = p->pSrc;",
          "168:     }",
          "169:   }",
          "170:   return WRC_Continue;",
          "",
          "[Removed Lines]",
          "159:   assert( pSrc!=0 );",
          "160:   for(i=pSrc->nSrc, pItem=pSrc->a; i>0; i--, pItem++){",
          "161:     if( pItem->pSelect && sqlite3WalkSelect(pWalker, pItem->pSelect) ){",
          "162:       return WRC_Abort;",
          "163:     }",
          "164:     if( pItem->fg.isTabFunc",
          "165:      && sqlite3WalkExprList(pWalker, pItem->u1.pFuncArg)",
          "166:     ){",
          "167:       return WRC_Abort;",
          "",
          "[Added Lines]",
          "159:   if( pSrc ){",
          "160:     for(i=pSrc->nSrc, pItem=pSrc->a; i>0; i--, pItem++){",
          "161:       if( pItem->pSelect && sqlite3WalkSelect(pWalker, pItem->pSelect) ){",
          "162:         return WRC_Abort;",
          "163:       }",
          "164:       if( pItem->fg.isTabFunc",
          "165:        && sqlite3WalkExprList(pWalker, pItem->u1.pFuncArg)",
          "166:       ){",
          "167:         return WRC_Abort;",
          "168:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3e6495970590691f05c6fe0057637c1b2bfe6bb",
      "candidate_info": {
        "commit_hash": "a3e6495970590691f05c6fe0057637c1b2bfe6bb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a3e6495970590691f05c6fe0057637c1b2bfe6bb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c"
        ],
        "message": "Improvement on the previous fix.\n\nFossilOrigin-Name: f6cffa2d50bfebe5b025f412b7a49b7fdafb798aaf1ddc80e6656ccd1f012a7f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 41de742c5713ab1a0c0c15c44af3ffac40bbc527ae2dc11d829ba9773eb4c84a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1194:       SrcList *pSrc = sqlite3TriggerStepSrc(pParse, pStep);",
          "1195:       if( pSrc ){",
          "1196:         int i;",
          "1198:           struct SrcList_item *p = &pSrc->a[i];",
          "1199:           p->pTab = sqlite3LocateTableItem(pParse, 0, p);",
          "1200:           p->iCursor = pParse->nTab++;",
          "1201:           if( p->pTab==0 ){",
          "1202:             rc = SQLITE_ERROR;",
          "1204:           }else{",
          "1205:             p->pTab->nTabRef++;",
          "1206:             rc = sqlite3ViewGetColumnNames(pParse, p->pTab);",
          "",
          "[Removed Lines]",
          "1197:         for(i=0; i<pSrc->nSrc; i++){",
          "1203:             break;",
          "",
          "[Added Lines]",
          "1197:         for(i=0; i<pSrc->nSrc && rc==SQLITE_OK; i++){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a4e42d24df0f34afd769e8fe5466f7a9ebcdfe50",
      "candidate_info": {
        "commit_hash": "a4e42d24df0f34afd769e8fe5466f7a9ebcdfe50",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a4e42d24df0f34afd769e8fe5466f7a9ebcdfe50",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix the line-number of error messages coming out of the \".import\" command when the --skip option is used.\n\nFossilOrigin-Name: e0a8b11dfd6b3ab89ae5032d60cf3c1bba7198a1a2debe5c691b5d1f2e1befee",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b27bb4fe389e12472a6144441df2dca6a7393024f2621fd22dd1a2b4033c46ec",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "8136:     }",
          "8137:     while( (nSkip--)>0 ){",
          "8138:       while( xRead(&sCtx) && sCtx.cTerm==sCtx.cColSep ){}",
          "8140:     }",
          "8141:     zSql = sqlite3_mprintf(\"SELECT * FROM %s\", zTable);",
          "8142:     if( zSql==0 ){",
          "",
          "[Removed Lines]",
          "8139:       sCtx.nLine++;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4cf2121e1c0adfcae41d89426e1e5e81ca4721a9",
      "candidate_info": {
        "commit_hash": "4cf2121e1c0adfcae41d89426e1e5e81ca4721a9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4cf2121e1c0adfcae41d89426e1e5e81ca4721a9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c"
        ],
        "message": "When printing the OP_CollSeq opcode for EXPLAIN listings, include the text encoding with the name of the collating sequence.\n\nFossilOrigin-Name: eb5c1b77d1c55fc286ff8fccfd61e21cb67aec92d6f93b093b9af5c32165d82b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0463576b5de0a1ee71530f0e4988fc9cceda79148520bea2c67f1fbc4a99cea9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1658:     }",
          "1659: #endif",
          "1660:     case P4_COLLSEQ: {",
          "1661:       CollSeq *pColl = pOp->p4.pColl;",
          "1663:       break;",
          "1664:     }",
          "1665:     case P4_FUNCDEF: {",
          "",
          "[Removed Lines]",
          "1662:       sqlite3_str_appendf(&x, \"(%.20s)\", pColl->zName);",
          "",
          "[Added Lines]",
          "1661:       static const char *const encnames[] = {\"?\", \"8\", \"16LE\", \"16BE\"};",
          "1663:       assert( pColl->enc>=0 && pColl->enc<4 );",
          "1664:       sqlite3_str_appendf(&x, \"%.18s-%s\", pColl->zName,",
          "1665:                           encnames[pColl->enc]);",
          "",
          "---------------"
        ]
      }
    }
  ]
}