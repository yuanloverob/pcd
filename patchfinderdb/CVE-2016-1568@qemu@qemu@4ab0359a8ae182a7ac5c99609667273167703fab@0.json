{
  "cve_id": "CVE-2016-1568",
  "cve_desc": "Use-after-free vulnerability in hw/ide/ahci.c in QEMU, when built with IDE AHCI Emulation support, allows guest OS users to cause a denial of service (instance crash) or possibly execute arbitrary code via an invalid AHCI Native Command Queuing (NCQ) AIO command.",
  "repo": "qemu/qemu",
  "patch_hash": "4ab0359a8ae182a7ac5c99609667273167703fab",
  "patch_info": {
    "commit_hash": "4ab0359a8ae182a7ac5c99609667273167703fab",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/4ab0359a8ae182a7ac5c99609667273167703fab",
    "files": [
      "hw/ide/ahci.c"
    ],
    "message": "ide: ahci: reset ncq object to unused on error\n\nWhen processing NCQ commands, AHCI device emulation prepares a\nNCQ transfer object; To which an aio control block(aiocb) object\nis assigned in 'execute_ncq_command'. In case, when the NCQ\ncommand is invalid, the 'aiocb' object is not assigned, and NCQ\ntransfer object is left as 'used'. This leads to a use after\nfree kind of error in 'bdrv_aio_cancel_async' via 'ahci_reset_port'.\nReset NCQ transfer object to 'unused' to avoid it.\n\n[Maintainer edit: s/ACHI/AHCI/ in the commit message. --js]\n\nReported-by: Qinghao Tang <luodalongde@gmail.com>\nSigned-off-by: Prasad J Pandit <pjp@fedoraproject.org>\nReviewed-by: John Snow <jsnow@redhat.com>\nMessage-id: 1452282511-4116-1-git-send-email-ppandit@redhat.com\nSigned-off-by: John Snow <jsnow@redhat.com>",
    "before_after_code_files": [
      "hw/ide/ahci.c||hw/ide/ahci.c"
    ]
  },
  "patch_diff": {
    "hw/ide/ahci.c||hw/ide/ahci.c": [
      "File: hw/ide/ahci.c -> hw/ide/ahci.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "910:     ide_state->error = ABRT_ERR;",
      "911:     ide_state->status = READY_STAT | ERR_STAT;",
      "912:     ncq_tfs->drive->port_regs.scr_err |= (1 << ncq_tfs->tag);",
      "913: }",
      "915: static void ncq_finish(NCQTransferState *ncq_tfs)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "913:     ncq_tfs->used = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4f046a6ba1d558eb043dc13a80d40cf7cb62ef95",
      "candidate_info": {
        "commit_hash": "4f046a6ba1d558eb043dc13a80d40cf7cb62ef95",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/4f046a6ba1d558eb043dc13a80d40cf7cb62ef95",
        "files": [
          "hw/ide/ahci.c"
        ],
        "message": "ide: ahci: reset ncq object to unused on error\n\nWhen processing NCQ commands, AHCI device emulation prepares a\nNCQ transfer object; To which an aio control block(aiocb) object\nis assigned in 'execute_ncq_command'. In case, when the NCQ\ncommand is invalid, the 'aiocb' object is not assigned, and NCQ\ntransfer object is left as 'used'. This leads to a use after\nfree kind of error in 'bdrv_aio_cancel_async' via 'ahci_reset_port'.\nReset NCQ transfer object to 'unused' to avoid it.\n\n[Maintainer edit: s/ACHI/AHCI/ in the commit message. --js]\n\nReported-by: Qinghao Tang <luodalongde@gmail.com>\nSigned-off-by: Prasad J Pandit <pjp@fedoraproject.org>\nReviewed-by: John Snow <jsnow@redhat.com>\nMessage-id: 1452282511-4116-1-git-send-email-ppandit@redhat.com\nSigned-off-by: John Snow <jsnow@redhat.com>\n(cherry picked from commit 4ab0359a8ae182a7ac5c99609667273167703fab)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/ide/ahci.c||hw/ide/ahci.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/ide/ahci.c||hw/ide/ahci.c"
          ],
          "candidate": [
            "hw/ide/ahci.c||hw/ide/ahci.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/ide/ahci.c||hw/ide/ahci.c": [
          "File: hw/ide/ahci.c -> hw/ide/ahci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "918:     ide_state->error = ABRT_ERR;",
          "919:     ide_state->status = READY_STAT | ERR_STAT;",
          "920:     ncq_tfs->drive->port_regs.scr_err |= (1 << ncq_tfs->tag);",
          "921: }",
          "923: static void ncq_finish(NCQTransferState *ncq_tfs)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "921:     ncq_tfs->used = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}