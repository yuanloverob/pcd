{
  "cve_id": "CVE-2014-5045",
  "cve_desc": "The mountpoint_last function in fs/namei.c in the Linux kernel before 3.15.8 does not properly maintain a certain reference count during attempts to use the umount system call in conjunction with a symlink, which allows local users to cause a denial of service (memory consumption or use-after-free) or possibly have unspecified other impact via the umount program.",
  "repo": "torvalds/linux",
  "patch_hash": "295dc39d941dc2ae53d5c170365af4c9d5c16212",
  "patch_info": {
    "commit_hash": "295dc39d941dc2ae53d5c170365af4c9d5c16212",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/295dc39d941dc2ae53d5c170365af4c9d5c16212",
    "files": [
      "fs/namei.c"
    ],
    "message": "fs: umount on symlink leaks mnt count\n\nCurrently umount on symlink blocks following umount:\n\n/vz is separate mount\n\n# ls /vz/ -al | grep test\ndrwxr-xr-x.  2 root root       4096 Jul 19 01:14 testdir\nlrwxrwxrwx.  1 root root         11 Jul 19 01:16 testlink -> /vz/testdir\n# umount -l /vz/testlink\numount: /vz/testlink: not mounted (expected)\n\n# lsof /vz\n# umount /vz\numount: /vz: device is busy. (unexpected)\n\nIn this case mountpoint_last() gets an extra refcount on path->mnt\n\nSigned-off-by: Vasily Averin <vvs@openvz.org>\nAcked-by: Ian Kent <raven@themaw.net>\nAcked-by: Jeff Layton <jlayton@primarydata.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Christoph Hellwig <hch@lst.de>",
    "before_after_code_files": [
      "fs/namei.c||fs/namei.c"
    ]
  },
  "patch_diff": {
    "fs/namei.c||fs/namei.c": [
      "File: fs/namei.c -> fs/namei.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2256:   goto out;",
      "2257:  }",
      "2258:  path->dentry = dentry;",
      "2260:  if (should_follow_link(dentry, nd->flags & LOOKUP_FOLLOW))",
      "2261:   return 1;",
      "2262:  follow_mount(path);",
      "2263:  error = 0;",
      "2264: out:",
      "",
      "[Removed Lines]",
      "2259:  path->mnt = mntget(nd->path.mnt);",
      "",
      "[Added Lines]",
      "2259:  path->mnt = nd->path.mnt;",
      "2262:  mntget(path->mnt);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "35759521eedf60ce7d3127c5d33953cd2d1bd35f",
      "candidate_info": {
        "commit_hash": "35759521eedf60ce7d3127c5d33953cd2d1bd35f",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/35759521eedf60ce7d3127c5d33953cd2d1bd35f",
        "files": [
          "fs/namei.c"
        ],
        "message": "take unlazy_walk() into umount_lookup_last()\n\n... and massage it a bit to reduce nesting\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "fs/namei.c||fs/namei.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/namei.c||fs/namei.c"
          ],
          "candidate": [
            "fs/namei.c||fs/namei.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/namei.c||fs/namei.c": [
          "File: fs/namei.c -> fs/namei.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2256:  struct dentry *dentry;",
          "2257:  struct dentry *dir = nd->path.dentry;",
          "2263:  }",
          "2265:  nd->flags &= ~LOOKUP_PARENT;",
          "2267:  if (unlikely(nd->last_type != LAST_NORM)) {",
          "2268:   error = handle_dots(nd, nd->last_type);",
          "2272:  }",
          "2274:  mutex_lock(&dir->d_inode->i_mutex);",
          "",
          "[Removed Lines]",
          "2259:  if (unlikely(nd->flags & LOOKUP_RCU)) {",
          "2260:   WARN_ON_ONCE(1);",
          "2261:   error = -ECHILD;",
          "2262:   goto error_check;",
          "2269:   if (!error)",
          "2270:    dentry = dget(nd->path.dentry);",
          "2271:   goto error_check;",
          "",
          "[Added Lines]",
          "2260:  if (nd->flags & LOOKUP_RCU) {",
          "2261:   if (unlazy_walk(nd, NULL)) {",
          "2262:    error = -ECHILD;",
          "2263:    goto out;",
          "2264:   }",
          "2271:   if (error)",
          "2272:    goto out;",
          "2273:   dentry = dget(nd->path.dentry);",
          "2274:   goto done;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2282:   dentry = d_alloc(dir, &nd->last);",
          "2283:   if (!dentry) {",
          "2284:    error = -ENOMEM;",
          "2289:   }",
          "2290:  }",
          "2291:  mutex_unlock(&dir->d_inode->i_mutex);",
          "2306:  }",
          "2307:  terminate_walk(nd);",
          "2308:  return error;",
          "2309: }",
          "",
          "[Removed Lines]",
          "2285:   } else {",
          "2286:    dentry = lookup_real(dir->d_inode, dentry, nd->flags);",
          "2287:    if (IS_ERR(dentry))",
          "2288:     error = PTR_ERR(dentry);",
          "2293: error_check:",
          "2294:  if (!error) {",
          "2295:   if (!dentry->d_inode) {",
          "2296:    error = -ENOENT;",
          "2297:    dput(dentry);",
          "2298:   } else {",
          "2299:    path->dentry = dentry;",
          "2300:    path->mnt = mntget(nd->path.mnt);",
          "2301:    if (should_follow_link(dentry->d_inode,",
          "2302:       nd->flags & LOOKUP_FOLLOW))",
          "2303:     return 1;",
          "2304:    follow_mount(path);",
          "2305:   }",
          "",
          "[Added Lines]",
          "2288:    goto out;",
          "2290:   dentry = lookup_real(dir->d_inode, dentry, nd->flags);",
          "2291:   error = PTR_ERR(dentry);",
          "2292:   if (IS_ERR(dentry))",
          "2293:    goto out;",
          "2297: done:",
          "2298:  if (!dentry->d_inode) {",
          "2299:   error = -ENOENT;",
          "2300:   dput(dentry);",
          "2301:   goto out;",
          "2303:  path->dentry = dentry;",
          "2304:  path->mnt = mntget(nd->path.mnt);",
          "2305:  if (should_follow_link(dentry->d_inode, nd->flags & LOOKUP_FOLLOW))",
          "2306:   return 1;",
          "2307:  follow_mount(path);",
          "2308:  error = 0;",
          "2309: out:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2334:  if (err)",
          "2335:   goto out;",
          "2346:  err = umount_lookup_last(&nd, path);",
          "2347:  while (err > 0) {",
          "2348:   void *cookie;",
          "",
          "[Removed Lines]",
          "2338:  if (nd.flags & LOOKUP_RCU) {",
          "2339:   err = unlazy_walk(&nd, NULL);",
          "2340:   if (err) {",
          "2341:    terminate_walk(&nd);",
          "2342:    goto out;",
          "2343:   }",
          "2344:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}