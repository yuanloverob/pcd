{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b042d921280d839ca891cd15ff0d880379c19aaa",
      "candidate_info": {
        "commit_hash": "b042d921280d839ca891cd15ff0d880379c19aaa",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b042d921280d839ca891cd15ff0d880379c19aaa",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c",
          "test/misc7.test"
        ],
        "message": "Give a meaningful error on an attempt to use UPSERT on a virtual table, rather than simply not working.\n\nFossilOrigin-Name: fa98748f956cff95fcfda3a513cea4df27aa573ae795a6855c40bfeca661d0b2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c",
          "test/misc7.test||test/misc7.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d7f55c62c3fa053b9b930a044b60076a8278cbf679d8e5116b95f2ff19247f6b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "826:   }",
          "827: #ifndef SQLITE_OMIT_UPSERT",
          "828:   if( pUpsert ){",
          "829:     pTabList->a[0].iCursor = iDataCur;",
          "830:     pUpsert->pUpsertSrc = pTabList;",
          "831:     pUpsert->regData = regData;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "829:     if( IsVirtual(pTab) ){",
          "830:       sqlite3ErrorMsg(pParse, \"UPSERT not implemented for virtual table \\\"%s\\\"\",",
          "831:               pTab->zName);",
          "832:       goto insert_cleanup;",
          "833:     }",
          "",
          "---------------"
        ],
        "test/misc7.test||test/misc7.test": [
          "File: test/misc7.test -> test/misc7.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "227:     }",
          "228:   } {1}",
          "229:   set sqlite_where_trace 0",
          "231:   # Specify an ORDER BY clause that cannot be indexed.",
          "232:   do_test misc7-11 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "230:   do_catchsql_test misc7-10.1 {",
          "231:     INSERT INTO t1(a,b,c) VALUES(12345,2,3) ON CONFLICT(a) DO NOTHING;",
          "232:   } {1 {UPSERT not implemented for virtual table \"t1\"}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "55b4c827fae95c394729c6968605863f5ce9eac5",
      "candidate_info": {
        "commit_hash": "55b4c827fae95c394729c6968605863f5ce9eac5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/55b4c827fae95c394729c6968605863f5ce9eac5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqliteInt.h",
          "src/treeview.c",
          "src/where.c"
        ],
        "message": "In the \".wheretrace 0x100\" debugging mode, show the structure of the main parameters to sqlite3WhereBegin() calls.\n\nFossilOrigin-Name: fd598e475d353363e19adc27a671170f11ae9f6d8cad58cb2303fb2ad8ac6bec",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/treeview.c||src/treeview.c",
          "src/where.c||src/where.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2660e9292ae2c229eb7c57a6a79bb19f0c970072f86750fbe9cca3113d44ffe4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/treeview.c||src/treeview.c": [
          "File: src/treeview.c -> src/treeview.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:     sqlite3TreeViewPush(pView, 1);",
          "177:   }",
          "178:   do{",
          "186:     if( cnt++ ) sqlite3TreeViewPop(pView);",
          "187:     if( p->pPrior ){",
          "188:       n = 1000;",
          "",
          "[Removed Lines]",
          "179:     sqlite3TreeViewLine(pView,",
          "180:       \"SELECT%s%s (%u/%p) selFlags=0x%x nSelectRow=%d\",",
          "181:       ((p->selFlags & SF_Distinct) ? \" DISTINCT\" : \"\"),",
          "182:       ((p->selFlags & SF_Aggregate) ? \" agg_flag\" : \"\"),",
          "183:       p->selId, p, p->selFlags,",
          "184:       (int)p->nSelectRow",
          "185:     );",
          "",
          "[Added Lines]",
          "179:     if( p->selFlags & SF_WhereBegin ){",
          "180:       sqlite3TreeViewLine(pView, \"sqlite3WhereBegin()\");",
          "181:     }else{",
          "182:       sqlite3TreeViewLine(pView,",
          "183:         \"SELECT%s%s (%u/%p) selFlags=0x%x nSelectRow=%d\",",
          "184:         ((p->selFlags & SF_Distinct) ? \" DISTINCT\" : \"\"),",
          "185:         ((p->selFlags & SF_Aggregate) ? \" agg_flag\" : \"\"),",
          "186:         p->selId, p, p->selFlags,",
          "187:         (int)p->nSelectRow",
          "188:       );",
          "189:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "199:       if( p->pWinDefn ) n++;",
          "200: #endif",
          "201:     }",
          "203: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "204:     if( p->pWin ){",
          "205:       Window *pX;",
          "",
          "[Removed Lines]",
          "202:     sqlite3TreeViewExprList(pView, p->pEList, (n--)>0, \"result-set\");",
          "",
          "[Added Lines]",
          "206:     if( p->pEList ){",
          "207:       sqlite3TreeViewExprList(pView, p->pEList, n>0, \"result-set\");",
          "208:     }",
          "209:     n--;",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4769:       sqlite3DebugPrintf(\", limit: %d\", iAuxArg);",
          "4770:     }",
          "4771:     sqlite3DebugPrintf(\")\\n\");",
          "4772:   }",
          "4774:     sqlite3WhereClausePrint(sWLB.pWC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4772:     if( sqlite3WhereTrace & 0x100 ){",
          "4773:       Select sSelect;",
          "4774:       memset(&sSelect, 0, sizeof(sSelect));",
          "4775:       sSelect.selFlags = SF_WhereBegin;",
          "4776:       sSelect.pSrc = pTabList;",
          "4777:       sSelect.pWhere = pWhere;",
          "4778:       sSelect.pOrderBy = pOrderBy;",
          "4779:       sSelect.pEList = pResultSet;",
          "4780:       sqlite3TreeViewSelect(0, &sSelect, 0);",
          "4781:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "29c992cb049c0fbf3185082d3f81dd76c13e746d",
      "candidate_info": {
        "commit_hash": "29c992cb049c0fbf3185082d3f81dd76c13e746d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/29c992cb049c0fbf3185082d3f81dd76c13e746d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "src/delete.c",
          "src/fkey.c",
          "src/parse.y",
          "src/select.c",
          "src/sqliteInt.h",
          "src/trigger.c",
          "src/window.c",
          "test/with1.test"
        ],
        "message": "Revamp the SrcList allocator routines to be methods of Parse instead of being methods of the \"sqlite3\" object, so that they can leave better error messages when the SrcList object grows too large.\n\nFossilOrigin-Name: df08d472b090b212fb77ce2aae0e1ffe79ae5db4b1accf55e6fdb18e8b0a7098",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "src/delete.c||src/delete.c",
          "src/fkey.c||src/fkey.c",
          "src/parse.y||src/parse.y",
          "src/select.c||src/select.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/trigger.c||src/trigger.c",
          "src/window.c||src/window.c",
          "test/with1.test||test/with1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7cac614d5df55eb092b863163483b6782b942b21bd15fd787576fef5619fa849",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3873:     SrcList *pNew;",
          "3874:     int nAlloc = pSrc->nSrc*2+nExtra;",
          "3875:     int nGot;",
          "3877:     if( pSrc->nSrc+nExtra>=SQLITE_MAX_SRCLIST ){",
          "3885:     }",
          "3886:     if( nAlloc>SQLITE_MAX_SRCLIST ) nAlloc = SQLITE_MAX_SRCLIST;",
          "3887:     pNew = sqlite3DbRealloc(db, pSrc,",
          "3888:                sizeof(*pSrc) + (nAlloc-1)*sizeof(pSrc->a[0]) );",
          "3889:     if( pNew==0 ){",
          "3890:       assert( db->mallocFailed );",
          "3892:     }",
          "3893:     pSrc = pNew;",
          "3894:     nGot = (sqlite3DbMallocSize(db, pNew) - sizeof(*pSrc))/sizeof(pSrc->a[0])+1;",
          "",
          "[Removed Lines]",
          "3883:       sqlite3OomFault(db);",
          "3884:       return pSrc;",
          "3891:       return pSrc;",
          "",
          "[Added Lines]",
          "3877:     sqlite3 *db = pParse->db;",
          "3880:       sqlite3ErrorMsg(pParse, \"too many FROM clause terms, max: %d\",",
          "3881:                       SQLITE_MAX_SRCLIST);",
          "3882:       return 0;",
          "3889:       return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3950: SrcList *sqlite3SrcListAppend(",
          "3955: ){",
          "3956:   struct SrcList_item *pItem;",
          "3959:   if( pList==0 ){",
          "3961:     if( pList==0 ) return 0;",
          "3962:     pList->nAlloc = 1;",
          "3963:     pList->nSrc = 1;",
          "3964:     memset(&pList->a[0], 0, sizeof(pList->a[0]));",
          "3965:     pList->a[0].iCursor = -1;",
          "3966:   }else{",
          "3972:   }",
          "3973:   pItem = &pList->a[pList->nSrc-1];",
          "3974:   if( pDatabase && pDatabase->z==0 ){",
          "",
          "[Removed Lines]",
          "3958:   assert( db!=0 );",
          "3960:     pList = sqlite3DbMallocRawNN(db, sizeof(SrcList) );",
          "3967:     pList = sqlite3SrcListEnlarge(db, pList, 1, pList->nSrc);",
          "3968:   }",
          "3969:   if( db->mallocFailed ){",
          "3970:     sqlite3SrcListDelete(db, pList);",
          "3971:     return 0;",
          "",
          "[Added Lines]",
          "3956:   sqlite3 *db;",
          "3958:   assert( pParse!=0 );",
          "3959:   assert( pParse->db!=0 );",
          "3960:   db = pParse->db;",
          "3962:     pList = sqlite3DbMallocRawNN(pParse->db, sizeof(SrcList) );",
          "3969:     SrcList *pNew = sqlite3SrcListEnlarge(pParse, pList, 1, pList->nSrc);",
          "3970:     if( pNew==0 ){",
          "3971:       sqlite3SrcListDelete(db, pList);",
          "3972:       return 0;",
          "3973:     }else{",
          "3974:       pList = pNew;",
          "3975:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4057:     );",
          "4058:     goto append_from_error;",
          "4059:   }",
          "4061:   if( p==0 ){",
          "4062:     goto append_from_error;",
          "4063:   }",
          "",
          "[Removed Lines]",
          "4060:   p = sqlite3SrcListAppend(db, p, pTable, pDatabase);",
          "",
          "[Added Lines]",
          "4064:   p = sqlite3SrcListAppend(pParse, p, pTable, pDatabase);",
          "",
          "---------------"
        ],
        "src/delete.c||src/delete.c": [
          "File: src/delete.c -> src/delete.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:   sqlite3 *db = pParse->db;",
          "118:   int iDb = sqlite3SchemaToIndex(db, pView->pSchema);",
          "119:   pWhere = sqlite3ExprDup(db, pWhere, 0);",
          "121:   if( pFrom ){",
          "122:     assert( pFrom->nSrc==1 );",
          "123:     pFrom->a[0].zName = sqlite3DbStrDup(db, pView->zName);",
          "",
          "[Removed Lines]",
          "120:   pFrom = sqlite3SrcListAppend(db, 0, 0, 0);",
          "",
          "[Added Lines]",
          "120:   pFrom = sqlite3SrcListAppend(pParse, 0, 0, 0);",
          "",
          "---------------"
        ],
        "src/fkey.c||src/fkey.c": [
          "File: src/fkey.c -> src/fkey.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1018:     if( pSrc ){",
          "1019:       struct SrcList_item *pItem = pSrc->a;",
          "1020:       pItem->pTab = pFKey->pFrom;",
          "",
          "[Removed Lines]",
          "1017:     pSrc = sqlite3SrcListAppend(db, 0, 0, 0);",
          "",
          "[Added Lines]",
          "1017:     pSrc = sqlite3SrcListAppend(pParse, 0, 0, 0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1291:       }",
          "1292:       pSelect = sqlite3SelectNew(pParse,",
          "1293:           sqlite3ExprListAppend(pParse, 0, pRaise),",
          "1295:           pWhere,",
          "1296:           0, 0, 0, 0, 0",
          "1297:       );",
          "",
          "[Removed Lines]",
          "1294:           sqlite3SrcListAppend(db, 0, &tFrom, 0),",
          "",
          "[Added Lines]",
          "1294:           sqlite3SrcListAppend(pParse, 0, &tFrom, 0),",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "690: %type fullname {SrcList*}",
          "691: %destructor fullname {sqlite3SrcListDelete(pParse->db, $$);}",
          "692: fullname(A) ::= nm(X).  {",
          "694:   if( IN_RENAME_OBJECT && A ) sqlite3RenameTokenMap(pParse, A->a[0].zName, &X);",
          "695: }",
          "696: fullname(A) ::= nm(X) DOT nm(Y). {",
          "698:   if( IN_RENAME_OBJECT && A ) sqlite3RenameTokenMap(pParse, A->a[0].zName, &Y);",
          "699: }",
          "701: %type xfullname {SrcList*}",
          "702: %destructor xfullname {sqlite3SrcListDelete(pParse->db, $$);}",
          "703: xfullname(A) ::= nm(X).",
          "705: xfullname(A) ::= nm(X) DOT nm(Y).",
          "707: xfullname(A) ::= nm(X) DOT nm(Y) AS nm(Z).  {",
          "709:    if( A ) A->a[0].zAlias = sqlite3NameFromToken(pParse->db, &Z);",
          "710: }",
          "711: xfullname(A) ::= nm(X) AS nm(Z). {",
          "713:    if( A ) A->a[0].zAlias = sqlite3NameFromToken(pParse->db, &Z);",
          "714: }",
          "",
          "[Removed Lines]",
          "693:   A = sqlite3SrcListAppend(pParse->db,0,&X,0);",
          "697:   A = sqlite3SrcListAppend(pParse->db,0,&X,&Y);",
          "704:    {A = sqlite3SrcListAppend(pParse->db,0,&X,0); /*A-overwrites-X*/}",
          "706:    {A = sqlite3SrcListAppend(pParse->db,0,&X,&Y); /*A-overwrites-X*/}",
          "",
          "[Added Lines]",
          "693:   A = sqlite3SrcListAppend(pParse,0,&X,0);",
          "697:   A = sqlite3SrcListAppend(pParse,0,&X,&Y);",
          "704:    {A = sqlite3SrcListAppend(pParse,0,&X,0); /*A-overwrites-X*/}",
          "706:    {A = sqlite3SrcListAppend(pParse,0,&X,&Y); /*A-overwrites-X*/}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1216:     if( N ) A = sqlite3PExpr(pParse, TK_NOT, A, 0);",
          "1217:   }",
          "1218:   expr(A) ::= expr(A) in_op(N) nm(Y) dbnm(Z) paren_exprlist(E). [IN] {",
          "1220:     Select *pSelect = sqlite3SelectNew(pParse, 0,pSrc,0,0,0,0,0,0);",
          "1221:     if( E )  sqlite3SrcListFuncArgs(pParse, pSelect ? pSrc : 0, E);",
          "1222:     A = sqlite3PExpr(pParse, TK_IN, A, 0);",
          "",
          "[Removed Lines]",
          "1219:     SrcList *pSrc = sqlite3SrcListAppend(pParse->db, 0,&Y,&Z);",
          "",
          "[Added Lines]",
          "1219:     SrcList *pSrc = sqlite3SrcListAppend(pParse, 0,&Y,&Z);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1287: cmd ::= createkw(S) uniqueflag(U) INDEX ifnotexists(NE) nm(X) dbnm(D)",
          "1288:         ON nm(Y) LP sortlist(Z) RP where_opt(W). {",
          "1289:   sqlite3CreateIndex(pParse, &X, &D,",
          "1291:                       &S, W, SQLITE_SO_ASC, NE, SQLITE_IDXTYPE_APPDEF);",
          "1292:   if( IN_RENAME_OBJECT && pParse->pNewIndex ){",
          "1293:     sqlite3RenameTokenMap(pParse, pParse->pNewIndex->zName, &Y);",
          "",
          "[Removed Lines]",
          "1290:                      sqlite3SrcListAppend(pParse->db,0,&Y,0), Z, U,",
          "",
          "[Added Lines]",
          "1290:                      sqlite3SrcListAppend(pParse,0,&Y,0), Z, U,",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3960:       jointype = pSubitem->fg.jointype;",
          "3961:     }else{",
          "3968:     }",
          "",
          "[Removed Lines]",
          "3963:       pSrc = pParent->pSrc = sqlite3SrcListAppend(db, 0, 0, 0);",
          "3964:       if( pSrc==0 ){",
          "3965:         assert( db->mallocFailed );",
          "3966:         break;",
          "3967:       }",
          "",
          "[Added Lines]",
          "3963:       pSrc = sqlite3SrcListAppend(pParse, 0, 0, 0);",
          "3964:       if( pSrc==0 ) break;",
          "3965:       pParent->pSrc = pSrc;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3985:     if( nSubSrc>1 ){",
          "3990:     }",
          "",
          "[Removed Lines]",
          "3986:       pParent->pSrc = pSrc = sqlite3SrcListEnlarge(db, pSrc, nSubSrc-1,iFrom+1);",
          "3987:       if( db->mallocFailed ){",
          "3988:         break;",
          "3989:       }",
          "",
          "[Added Lines]",
          "3984:       pSrc = sqlite3SrcListEnlarge(pParse, pSrc, nSubSrc-1,iFrom+1);",
          "3985:       if( pSrc==0 ) break;",
          "3986:       pParent->pSrc = pSrc;",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3929: void *sqlite3ArrayAllocate(sqlite3*,void*,int,int*,int*);",
          "3930: IdList *sqlite3IdListAppend(Parse*, IdList*, Token*);",
          "3931: int sqlite3IdListIndex(IdList*,const char*);",
          "3934: SrcList *sqlite3SrcListAppendFromTerm(Parse*, SrcList*, Token*, Token*,",
          "3935:                                       Token*, Select*, Expr*, IdList*);",
          "3936: void sqlite3SrcListIndexedBy(Parse *, SrcList *, Token *);",
          "",
          "[Removed Lines]",
          "3932: SrcList *sqlite3SrcListEnlarge(sqlite3*, SrcList*, int, int);",
          "3933: SrcList *sqlite3SrcListAppend(sqlite3*, SrcList*, Token*, Token*);",
          "",
          "[Added Lines]",
          "3932: SrcList *sqlite3SrcListEnlarge(Parse*, SrcList*, int, int);",
          "3933: SrcList *sqlite3SrcListAppend(Parse*, SrcList*, Token*, Token*);",
          "",
          "---------------"
        ],
        "src/trigger.c||src/trigger.c": [
          "File: src/trigger.c -> src/trigger.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "735:   if( pSrc ){",
          "736:     assert( pSrc->nSrc>0 );",
          "737:     pSrc->a[pSrc->nSrc-1].zName = sqlite3DbStrDup(db, pStep->zTarget);",
          "",
          "[Removed Lines]",
          "734:   pSrc = sqlite3SrcListAppend(db, 0, 0, 0);",
          "",
          "[Added Lines]",
          "734:   pSrc = sqlite3SrcListAppend(pParse, 0, 0, 0);",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "823:     pSub = sqlite3SelectNew(",
          "824:         pParse, pSublist, pSrc, pWhere, pGroupBy, pHaving, pSort, 0, 0",
          "825:     );",
          "828:     if( p->pSrc ){",
          "829:       p->pSrc->a[0].pSelect = pSub;",
          "830:       sqlite3SrcListAssignCursors(pParse, p->pSrc);",
          "",
          "[Removed Lines]",
          "826:     p->pSrc = sqlite3SrcListAppend(db, 0, 0, 0);",
          "827:     assert( p->pSrc || db->mallocFailed );",
          "",
          "[Added Lines]",
          "826:     p->pSrc = sqlite3SrcListAppend(pParse, 0, 0, 0);",
          "",
          "---------------"
        ],
        "test/with1.test||test/with1.test": [
          "File: test/with1.test -> test/with1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1089:      SELECT 3 FROM c,c,c,c,c,c,c,c,c",
          "1090:   )",
          "1091:   SELECT 4 FROM c,c,c,c,c,c,c,c,c;",
          "1094: finish_test",
          "",
          "[Removed Lines]",
          "1092: } {1 {out of memory}}",
          "",
          "[Added Lines]",
          "1092: } {1 {at most 64 tables in a join}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93b6c1666dfe43b77653d11512ba391a82f66094",
      "candidate_info": {
        "commit_hash": "93b6c1666dfe43b77653d11512ba391a82f66094",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/93b6c1666dfe43b77653d11512ba391a82f66094",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/altertab2.test"
        ],
        "message": "Fix a problem with using ALTER TABLE to rename a table or column when the database schema contains a trigger or view that itself contains an expression  \"<column> AND 0\".\n\nFossilOrigin-Name: 908ff7fffa302255a74e2334ca3a1779ed43acb0268fce5a83a56fd16794dc88",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/altertab2.test||test/altertab2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fbd681dce2905d8b8ad7948ba684b0b62d6c04be0f7a2992ee7d6836a99010de",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "851: ){",
          "852:   Expr *p;",
          "855:     p = sqlite3ExprAnd(pParse->db, pLeft, pRight);",
          "856:   }else{",
          "",
          "[Removed Lines]",
          "853:   if( op==TK_AND && pParse->nErr==0 ){",
          "",
          "[Added Lines]",
          "853:   if( op==TK_AND && pParse->nErr==0 && !IN_RENAME_OBJECT ){",
          "",
          "---------------"
        ],
        "test/altertab2.test||test/altertab2.test": [
          "File: test/altertab2.test -> test/altertab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "333:   INSERT INTO t3 VALUES(4, 5, 6);",
          "334: }",
          "336: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336: do_execsql_test 8.1 {",
          "337:   CREATE TABLE t4(a, b);",
          "338:   CREATE VIEW v4 AS SELECT * FROM t4 WHERE (a=1 AND 0) OR b=2;",
          "339: }",
          "340: do_execsql_test 8.2 {",
          "341:   ALTER TABLE t4 RENAME a TO c;",
          "342:   SELECT sql FROM sqlite_master WHERE name = 'v4'",
          "343: } {{CREATE VIEW v4 AS SELECT * FROM t4 WHERE (c=1 AND 0) OR b=2}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25f933ad93e5990cf5b02fb5447790b027273710",
      "candidate_info": {
        "commit_hash": "25f933ad93e5990cf5b02fb5447790b027273710",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/25f933ad93e5990cf5b02fb5447790b027273710",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/showdb.c"
        ],
        "message": "In the \"pgidx\" report from \"showdb\", also show the number of rows on each database btree page.\n\nFossilOrigin-Name: 2bda9dc41c07092ae37d0c6001c1271e0622bfff7151201fc2bb4c95422c087b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/showdb.c||tool/showdb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: eed701ef919c70d891727250be6a1b626aeb894c562d221e319ae6d74fc71d3d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/showdb.c||tool/showdb.c": [
          "File: tool/showdb.c -> tool/showdb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "861:   int nCell;",
          "862:   int i;",
          "863:   int hdr = pgno==1 ? 100 : 0;",
          "865:   if( pgno<=0 || pgno>g.mxPage ) return;",
          "866:   a = fileRead((pgno-1)*g.pagesize, g.pagesize);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "864:   char zEntry[30];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "884:       zType = \"corrupt node\";",
          "885:     }",
          "886:   }",
          "887:   if( parent>0 ){",
          "890:   }else if( parent==0 ){",
          "892:   }else{",
          "894:   }",
          "896:   if( a[hdr]==2 || a[hdr]==5 ){",
          "897:     int cellstart = hdr+12;",
          "898:     unsigned int child;",
          "",
          "[Removed Lines]",
          "888:     page_usage_msg(pgno, \"%s [%s], child %d of page %d\",",
          "889:                    zType, zName, idx, parent);",
          "891:     page_usage_msg(pgno, \"root %s [%s]\", zType, zName);",
          "893:     page_usage_msg(pgno, \"orphaned %s\", zType);",
          "895:   nCell = a[hdr+3]*256 + a[hdr+4];",
          "",
          "[Added Lines]",
          "888:   nCell = a[hdr+3]*256 + a[hdr+4];",
          "889:   if( nCell==1 ){",
          "890:     sqlite3_snprintf(sizeof(zEntry),zEntry,\"1 row\");",
          "891:   }else{",
          "892:     sqlite3_snprintf(sizeof(zEntry),zEntry,\"%d rows\", nCell);",
          "893:   }",
          "895:     page_usage_msg(pgno, \"%s [%s], child %d of page %d, %s\",",
          "896:                    zType, zName, idx, parent, zEntry);",
          "898:     page_usage_msg(pgno, \"root %s [%s], %s\", zType, zName, zEntry);",
          "900:     page_usage_msg(pgno, \"orphaned %s, %s\", zType, zEntry);",
          "",
          "---------------"
        ]
      }
    }
  ]
}