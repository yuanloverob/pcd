{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2773e1181dfb1e10fc2e3bfd3ffd83c71b730408",
      "candidate_info": {
        "commit_hash": "2773e1181dfb1e10fc2e3bfd3ffd83c71b730408",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/2773e1181dfb1e10fc2e3bfd3ffd83c71b730408",
        "files": [
          "src/unix/process.c"
        ],
        "message": "unix: call setgoups before calling setuid/setgid\n\nBackported from v1.x (66ab389)\n\nPR-URL: https://github.com/libuv/libuv/pull/215\nReviewed-By: Ben Noordhuis <info@bnoordhuis.nl>",
        "before_after_code_files": [
          "src/unix/process.c||src/unix/process.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/unix/process.c||src/unix/process.c"
          ],
          "candidate": [
            "src/unix/process.c||src/unix/process.c"
          ]
        }
      },
      "candidate_diff": {
        "src/unix/process.c||src/unix/process.c": [
          "File: src/unix/process.c -> src/unix/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: extern char **environ;",
          "41: #endif",
          "44: static ngx_queue_t* uv__process_queue(uv_loop_t* loop, int pid) {",
          "45:   assert(pid > 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: #ifdef __linux__",
          "44: # include <grp.h>",
          "45: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "331:     _exit(127);",
          "332:   }",
          "334:   if ((options.flags & UV_PROCESS_SETGID) && setgid(options.gid)) {",
          "335:     uv__write_int(error_fd, errno);",
          "336:     _exit(127);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "338:   if (options.flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
          "346:     SAVE_ERRNO(setgroups(0, NULL));",
          "347:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}