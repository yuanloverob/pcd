{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "73ff84721302f20c56090886fe1fad4cf5544da2",
      "candidate_info": {
        "commit_hash": "73ff84721302f20c56090886fe1fad4cf5544da2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/73ff84721302f20c56090886fe1fad4cf5544da2",
        "files": [
          "crypto/rand/rand_egd.c"
        ],
        "message": "Fixed the return code of RAND_query_egd_bytes when connect fails.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1886)\n(cherry picked from commit 1381684daf8800487b48a70cd634f433b1d6366f)",
        "before_after_code_files": [
          "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c": [
          "File: crypto/rand/rand_egd.c -> crypto/rand/rand_egd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:                 break;",
          "134: #  endif",
          "135:             default:",
          "137:             }",
          "138:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:                 ret = -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230:     int num, ret = 0;",
          "232:     num = RAND_query_egd_bytes(path, NULL, bytes);",
          "236:         ret = num;",
          "237:  err:",
          "238:     return (ret);",
          "",
          "[Removed Lines]",
          "233:     if (num < 1)",
          "234:         goto err;",
          "235:     if (RAND_status() == 1)",
          "",
          "[Added Lines]",
          "234:     if (num < 1 || RAND_status() == 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "12ac28e0928a9cb2b970042b86c0a5ff4476590b",
      "candidate_info": {
        "commit_hash": "12ac28e0928a9cb2b970042b86c0a5ff4476590b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/12ac28e0928a9cb2b970042b86c0a5ff4476590b",
        "files": [
          "crypto/bn/bn_div.c",
          "crypto/bn/bn_mul.c",
          "crypto/bn/bn_shift.c",
          "crypto/bn/bn_word.c"
        ],
        "message": "bn: fix occurances of negative zero\n\nThe BIGNUM behaviour is supposed to be \"consistent\" when going into and\nout of APIs, where \"consistent\" means 'top' is set minimally and that\n'neg' (negative) is not set if the BIGNUM is zero (which is iff 'top' is\nzero, due to the previous point).\n\nThe BN_DEBUG testing (make test) caught the cases that this patch\ncorrects.\n\nNote, bn_correct_top() could have been used instead, but that is intended\nfor where 'top' is expected to (sometimes) require adjustment after direct\nword-array manipulation, and so is heavier-weight. Here, we are just\ncatching the negative-zero case, so we test and correct for that\nexplicitly, in-place.\n\nChange-Id: Iddefbd3c28a13d935648932beebcc765d5b85ae7\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1672)\n(cherry picked from commit 38d1b3cc0271008b8bd130a2c4b442775b028a08)",
        "before_after_code_files": [
          "crypto/bn/bn_div.c||crypto/bn/bn_div.c",
          "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c",
          "crypto/bn/bn_shift.c||crypto/bn/bn_shift.c",
          "crypto/bn/bn_word.c||crypto/bn/bn_word.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_div.c||crypto/bn/bn_div.c": [
          "File: crypto/bn/bn_div.c -> crypto/bn/bn_div.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:     wnump = &(snum->d[num_n - 1]);",
          "258:     if (!bn_wexpand(res, (loop + 1)))",
          "259:         goto err;",
          "260:     res->top = loop - no_branch;",
          "261:     resp = &(res->d[loop - 1]);",
          "",
          "[Removed Lines]",
          "257:     res->neg = (num->neg ^ divisor->neg);",
          "",
          "[Added Lines]",
          "259:     res->neg = (num->neg ^ divisor->neg);",
          "",
          "---------------"
        ],
        "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c": [
          "File: crypto/bn/bn_mul.c -> crypto/bn/bn_mul.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "857:             goto err;",
          "858:     } else",
          "859:         rr = r;",
          "862: #if defined(BN_MUL_COMBA) || defined(BN_RECURSION)",
          "863:     i = al - bl;",
          "",
          "[Removed Lines]",
          "860:     rr->neg = a->neg ^ b->neg;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "969: #if defined(BN_MUL_COMBA) || defined(BN_RECURSION)",
          "970:  end:",
          "971: #endif",
          "972:     bn_correct_top(rr);",
          "973:     if (r != rr && BN_copy(r, rr) == NULL)",
          "974:         goto err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "971:     rr->neg = a->neg ^ b->neg;",
          "",
          "---------------"
        ],
        "crypto/bn/bn_shift.c||crypto/bn/bn_shift.c": [
          "File: crypto/bn/bn_shift.c -> crypto/bn/bn_shift.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:         return 0;",
          "93:     }",
          "96:     nw = n / BN_BITS2;",
          "97:     if (bn_wexpand(r, a->top + nw + 1) == NULL)",
          "98:         return (0);",
          "99:     lb = n % BN_BITS2;",
          "100:     rb = BN_BITS2 - lb;",
          "101:     f = a->d;",
          "",
          "[Removed Lines]",
          "95:     r->neg = a->neg;",
          "",
          "[Added Lines]",
          "98:     r->neg = a->neg;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:     }",
          "141:     i = (BN_num_bits(a) - n + (BN_BITS2 - 1)) / BN_BITS2;",
          "142:     if (r != a) {",
          "144:         if (bn_wexpand(r, i) == NULL)",
          "145:             return (0);",
          "146:     } else {",
          "147:         if (n == 0)",
          "",
          "[Removed Lines]",
          "143:         r->neg = a->neg;",
          "",
          "[Added Lines]",
          "145:         r->neg = a->neg;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "166:         if ((l = (l >> rb) & BN_MASK2))",
          "168:     }",
          "169:     bn_check_top(r);",
          "170:     return (1);",
          "171: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "169:     if (!r->top)",
          "",
          "---------------"
        ],
        "crypto/bn/bn_word.c||crypto/bn/bn_word.c": [
          "File: crypto/bn/bn_word.c -> crypto/bn/bn_word.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     if ((a->top > 0) && (a->d[a->top - 1] == 0))",
          "90:         a->top--;",
          "91:     ret >>= j;",
          "92:     bn_check_top(a);",
          "93:     return (ret);",
          "94: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:     if (!a->top)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "173738281046d280bcf7671b6b4218cc95f239cd",
      "candidate_info": {
        "commit_hash": "173738281046d280bcf7671b6b4218cc95f239cd",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/173738281046d280bcf7671b6b4218cc95f239cd",
        "files": [
          "NOTES.WIN"
        ],
        "message": "NOTES.WIN: mention Strawberry Perl as option.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 3a80bd29be74b50771dd20e15282db693dbe9522)",
        "before_after_code_files": [
          "NOTES.WIN||NOTES.WIN"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "NOTES.WIN||NOTES.WIN": [
          "File: NOTES.WIN -> NOTES.WIN",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  this are required as well:",
          "11:  - You need Perl.  We recommend ActiveState Perl, available from",
          "13:    You also need the perl module Text::Template, available on CPAN.",
          "14:    Please read NOTES.PERL for more information.",
          "",
          "[Removed Lines]",
          "12:    https://www.activestate.com/ActivePerl.",
          "",
          "[Added Lines]",
          "12:    https://www.activestate.com/ActivePerl. Another viable alternative",
          "13:    appears to be Strawberry Perl, http://strawberryperl.com.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "13ed1afa923f4ffb553e389de08f26e9ce84e8a2",
      "candidate_info": {
        "commit_hash": "13ed1afa923f4ffb553e389de08f26e9ce84e8a2",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/13ed1afa923f4ffb553e389de08f26e9ce84e8a2",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "Avoid questionable use of the value of a pointer that refers to space deallocated by a call to the free function in tls_decrypt_ticket.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2897)",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "ssl/t1_lib.c||ssl/t1_lib.c"
          ],
          "candidate": [
            "ssl/t1_lib.c||ssl/t1_lib.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3170:     p = sdec;",
          "3172:     sess = d2i_SSL_SESSION(NULL, &p, slen);",
          "3173:     OPENSSL_free(sdec);",
          "3174:     if (sess) {",
          "3177:             SSL_SESSION_free(sess);",
          "3178:             return 2;",
          "3179:         }",
          "",
          "[Removed Lines]",
          "3176:         if (p != sdec + slen || sess->session_id_length != 0) {",
          "",
          "[Added Lines]",
          "3173:     slen -= p - sdec;",
          "3177:         if (slen != 0 || sess->session_id_length != 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0140f9d98b31142c81dc1cc35aa153682c1a313a",
      "candidate_info": {
        "commit_hash": "0140f9d98b31142c81dc1cc35aa153682c1a313a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0140f9d98b31142c81dc1cc35aa153682c1a313a",
        "files": [
          "test/ct_test.c"
        ],
        "message": "Make sure things get deleted when test setup fails in ct_test.c\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1548)\n(cherry picked from commit 765731a88899771989a53c72259cacd1c658bb3f)",
        "before_after_code_files": [
          "test/ct_test.c||test/ct_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ct_test.c||test/ct_test.c": [
          "File: test/ct_test.c -> test/ct_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: {",
          "62:     CT_TEST_FIXTURE fixture;",
          "63:     int setup_ok = 1;",
          "66:     memset(&fixture, 0, sizeof(fixture));",
          "71:         setup_ok = 0;",
          "72:         fprintf(stderr, \"Failed to create a new CT log store\\n\");",
          "73:         goto end;",
          "74:     }",
          "77:         setup_ok = 0;",
          "78:         fprintf(stderr, \"Failed to load CT log list\\n\");",
          "79:         goto end;",
          "80:     }",
          "86: end:",
          "87:     if (!setup_ok) {",
          "88:         exit(EXIT_FAILURE);",
          "89:     }",
          "90:     return fixture;",
          "",
          "[Removed Lines]",
          "64:     CTLOG_STORE *ctlog_store;",
          "68:     ctlog_store = CTLOG_STORE_new();",
          "70:     if (ctlog_store == NULL) {",
          "76:     if (CTLOG_STORE_load_default_file(ctlog_store) != 1) {",
          "82:     fixture.test_case_name = test_case_name;",
          "84:     fixture.ctlog_store = ctlog_store;",
          "",
          "[Added Lines]",
          "67:     fixture.test_case_name = test_case_name;",
          "69:     fixture.ctlog_store = CTLOG_STORE_new();",
          "71:     if (fixture.ctlog_store == NULL) {",
          "77:     if (CTLOG_STORE_load_default_file(fixture.ctlog_store) != 1) {",
          "85:         CTLOG_STORE_free(fixture.ctlog_store);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "515:     const char extensions[] = \"\";",
          "516:     const char signature[] = \"BAMARzBAMiBIL2dRrzXbplQ2vh/WZA89v5pBQpSVkkUwKI+j5\"",
          "517:             \"eI+BgIhAOTtwNs6xXKx4vXoq2poBlOYfc9BAn3+/6EFUZ2J7b8I\";",
          "519:     SETUP_CT_TEST_FIXTURE();",
          "526:     if (sct == NULL) {",
          "527:         fprintf(stderr, \"Failed to create SCT from base64-encoded test data\\n\");",
          "528:         return 0;",
          "529:     }",
          "533:     fixture.sct_dir = ct_dir;",
          "534:     fixture.sct_text_file = \"tls1.sct\";",
          "535:     EXECUTE_CT_TEST();",
          "",
          "[Removed Lines]",
          "521:     STACK_OF(SCT) *sct_list = sk_SCT_new_null();",
          "522:     SCT *sct = SCT_new_from_base64(SCT_VERSION_V1, log_id,",
          "523:                                    CT_LOG_ENTRY_TYPE_X509, timestamp,",
          "524:                                    extensions, signature);",
          "531:     sk_SCT_push(sct_list, sct);",
          "532:     fixture.sct_list = sct_list;",
          "",
          "[Added Lines]",
          "516:     SCT *sct = NULL;",
          "520:     fixture.sct_list = sk_SCT_new_null();",
          "521:     sct = SCT_new_from_base64(SCT_VERSION_V1, log_id,",
          "522:                               CT_LOG_ENTRY_TYPE_X509, timestamp,",
          "523:                               extensions, signature);",
          "526:         tear_down(fixture);",
          "531:     sk_SCT_push(fixture.sct_list, sct);",
          "",
          "---------------"
        ]
      }
    }
  ]
}