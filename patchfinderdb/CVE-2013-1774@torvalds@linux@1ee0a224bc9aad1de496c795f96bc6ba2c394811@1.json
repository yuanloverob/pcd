{
  "cve_id": "CVE-2013-1774",
  "cve_desc": "The chase_port function in drivers/usb/serial/io_ti.c in the Linux kernel before 3.7.4 allows local users to cause a denial of service (NULL pointer dereference and system crash) via an attempted /dev/ttyUSB read or write operation on a disconnected Edgeport USB serial converter.",
  "repo": "torvalds/linux",
  "patch_hash": "1ee0a224bc9aad1de496c795f96bc6ba2c394811",
  "patch_info": {
    "commit_hash": "1ee0a224bc9aad1de496c795f96bc6ba2c394811",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/1ee0a224bc9aad1de496c795f96bc6ba2c394811",
    "files": [
      "drivers/usb/serial/io_ti.c"
    ],
    "message": "USB: io_ti: Fix NULL dereference in chase_port()\n\nThe tty is NULL when the port is hanging up.\nchase_port() needs to check for this.\n\nThis patch is intended for stable series.\nThe behavior was observed and tested in Linux 3.2 and 3.7.1.\n\nJohan Hovold submitted a more elaborate patch for the mainline kernel.\n\n[   56.277883] usb 1-1: edge_bulk_in_callback - nonzero read bulk status received: -84\n[   56.278811] usb 1-1: USB disconnect, device number 3\n[   56.278856] usb 1-1: edge_bulk_in_callback - stopping read!\n[   56.279562] BUG: unable to handle kernel NULL pointer dereference at 00000000000001c8\n[   56.280536] IP: [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19/0x35\n[   56.281212] PGD 1dc1b067 PUD 1e0f7067 PMD 0\n[   56.282085] Oops: 0002 [#1] SMP\n[   56.282744] Modules linked in:\n[   56.283512] CPU 1\n[   56.283512] Pid: 25, comm: khubd Not tainted 3.7.1 #1 innotek GmbH VirtualBox/VirtualBox\n[   56.283512] RIP: 0010:[<ffffffff8144e62a>]  [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19/0x35\n[   56.283512] RSP: 0018:ffff88001fa99ab0  EFLAGS: 00010046\n[   56.283512] RAX: 0000000000000046 RBX: 00000000000001c8 RCX: 0000000000640064\n[   56.283512] RDX: 0000000000010000 RSI: ffff88001fa99b20 RDI: 00000000000001c8\n[   56.283512] RBP: ffff88001fa99b20 R08: 0000000000000000 R09: 0000000000000000\n[   56.283512] R10: 0000000000000000 R11: ffffffff812fcb4c R12: ffff88001ddf53c0\n[   56.283512] R13: 0000000000000000 R14: 00000000000001c8 R15: ffff88001e19b9f4\n[   56.283512] FS:  0000000000000000(0000) GS:ffff88001fd00000(0000) knlGS:0000000000000000\n[   56.283512] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[   56.283512] CR2: 00000000000001c8 CR3: 000000001dc51000 CR4: 00000000000006e0\n[   56.283512] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   56.283512] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n[   56.283512] Process khubd (pid: 25, threadinfo ffff88001fa98000, task ffff88001fa94f80)\n[   56.283512] Stack:\n[   56.283512]  0000000000000046 00000000000001c8 ffffffff810578ec ffffffff812fcb4c\n[   56.283512]  ffff88001e19b980 0000000000002710 ffffffff812ffe81 0000000000000001\n[   56.283512]  ffff88001fa94f80 0000000000000202 ffffffff00000001 0000000000000296\n[   56.283512] Call Trace:\n[   56.283512]  [<ffffffff810578ec>] ? add_wait_queue+0x12/0x3c\n[   56.283512]  [<ffffffff812fcb4c>] ? usb_serial_port_work+0x28/0x28\n[   56.283512]  [<ffffffff812ffe81>] ? chase_port+0x84/0x2d6\n[   56.283512]  [<ffffffff81063f27>] ? try_to_wake_up+0x199/0x199\n[   56.283512]  [<ffffffff81263a5c>] ? tty_ldisc_hangup+0x222/0x298\n[   56.283512]  [<ffffffff81300171>] ? edge_close+0x64/0x129\n[   56.283512]  [<ffffffff810612f7>] ? __wake_up+0x35/0x46\n[   56.283512]  [<ffffffff8106135b>] ? should_resched+0x5/0x23\n[   56.283512]  [<ffffffff81264916>] ? tty_port_shutdown+0x39/0x44\n[   56.283512]  [<ffffffff812fcb4c>] ? usb_serial_port_work+0x28/0x28\n[   56.283512]  [<ffffffff8125d38c>] ? __tty_hangup+0x307/0x351\n[   56.283512]  [<ffffffff812e6ddc>] ? usb_hcd_flush_endpoint+0xde/0xed\n[   56.283512]  [<ffffffff8144e625>] ? _raw_spin_lock_irqsave+0x14/0x35\n[   56.283512]  [<ffffffff812fd361>] ? usb_serial_disconnect+0x57/0xc2\n[   56.283512]  [<ffffffff812ea99b>] ? usb_unbind_interface+0x5c/0x131\n[   56.283512]  [<ffffffff8128d738>] ? __device_release_driver+0x7f/0xd5\n[   56.283512]  [<ffffffff8128d9cd>] ? device_release_driver+0x1a/0x25\n[   56.283512]  [<ffffffff8128d393>] ? bus_remove_device+0xd2/0xe7\n[   56.283512]  [<ffffffff8128b7a3>] ? device_del+0x119/0x167\n[   56.283512]  [<ffffffff812e8d9d>] ? usb_disable_device+0x6a/0x180\n[   56.283512]  [<ffffffff812e2ae0>] ? usb_disconnect+0x81/0xe6\n[   56.283512]  [<ffffffff812e4435>] ? hub_thread+0x577/0xe82\n[   56.283512]  [<ffffffff8144daa7>] ? __schedule+0x490/0x4be\n[   56.283512]  [<ffffffff8105798f>] ? abort_exclusive_wait+0x79/0x79\n[   56.283512]  [<ffffffff812e3ebe>] ? usb_remote_wakeup+0x2f/0x2f\n[   56.283512]  [<ffffffff812e3ebe>] ? usb_remote_wakeup+0x2f/0x2f\n[   56.283512]  [<ffffffff810570b4>] ? kthread+0x81/0x89\n[   56.283512]  [<ffffffff81057033>] ? __kthread_parkme+0x5c/0x5c\n[   56.283512]  [<ffffffff8145387c>] ? ret_from_fork+0x7c/0xb0\n[   56.283512]  [<ffffffff81057033>] ? __kthread_parkme+0x5c/0x5c\n[   56.283512] Code: 8b 7c 24 08 e8 17 0b c3 ff 48 8b 04 24 48 83 c4 10 c3 53 48 89 fb 41 50 e8 e0 0a c3 ff 48 89 04 24 e8 e7 0a c3 ff ba 00 00 01 00\n<f0> 0f c1 13 48 8b 04 24 89 d1 c1 ea 10 66 39 d1 74 07 f3 90 66\n[   56.283512] RIP  [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19/0x35\n[   56.283512]  RSP <ffff88001fa99ab0>\n[   56.283512] CR2: 00000000000001c8\n[   56.283512] ---[ end trace 49714df27e1679ce ]---\n\nSigned-off-by: Wolfgang Frisch <wfpub@roembden.net>\nCc: Johan Hovold <jhovold@gmail.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "before_after_code_files": [
      "drivers/usb/serial/io_ti.c||drivers/usserial/io_ti.c"
    ]
  },
  "patch_diff": {
    "drivers/usb/serial/io_ti.c||drivers/usserial/io_ti.c": [
      "File: drivers/usb/serial/io_ti.c -> drivers/usserial/io_ti.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "530:  wait_queue_t wait;",
      "531:  unsigned long flags;",
      "533:  if (!timeout)",
      "534:   timeout = (HZ * EDGE_CLOSING_WAIT)/100;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "103a197c0c4ec936f5a243b5b092e4e49213f569",
      "candidate_info": {
        "commit_hash": "103a197c0c4ec936f5a243b5b092e4e49213f569",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/103a197c0c4ec936f5a243b5b092e4e49213f569",
        "files": [
          "security/device_cgroup.c"
        ],
        "message": "security/device_cgroup: lock assert fails in dev_exception_clean()\n\ndevcgroup_css_free() calls dev_exception_clean() without the devcgroup_mutex being locked.\n\nShutting down a kvm virt was giving me the following trace:\n\n[36280.732764] ------------[ cut here ]------------\n[36280.732778] WARNING: at /home/snits/dev/linux/security/device_cgroup.c:172 dev_exception_clean+0xa9/0xc0()\n[36280.732782] Hardware name: Studio XPS 8100\n[36280.732785] Modules linked in: xt_REDIRECT fuse ebtable_nat ebtables ipt_MASQUERADE iptable_nat nf_nat_ipv4 nf_nat xt_CHECKSUM iptable_mangle bridge stp llc nf_conntrack_ipv4 ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 nf_defrag_ipv4 ip6table_filter it87 hwmon_vid xt_state nf_conntrack ip6_tables snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_intel snd_hda_codec snd_hwdep snd_seq coretemp snd_seq_device crc32c_intel snd_pcm snd_page_alloc snd_timer snd broadcom tg3 serio_raw i7core_edac edac_core ptp pps_core lpc_ich pcspkr mfd_core soundcore microcode i2c_i801 nfsd auth_rpcgss nfs_acl lockd vhost_net sunrpc tun macvtap macvlan kvm_intel kvm uinput binfmt_misc autofs4 usb_storage firewire_ohci firewire_core crc_itu_t radeon drm_kms_helper ttm\n[36280.732921] Pid: 933, comm: libvirtd Tainted: G        W    3.8.0-rc3-00307-g4c217de #1\n[36280.732922] Call Trace:\n[36280.732927]  [<ffffffff81044303>] warn_slowpath_common+0x93/0xc0\n[36280.732930]  [<ffffffff8104434a>] warn_slowpath_null+0x1a/0x20\n[36280.732932]  [<ffffffff812deaf9>] dev_exception_clean+0xa9/0xc0\n[36280.732934]  [<ffffffff812deb2a>] devcgroup_css_free+0x1a/0x30\n[36280.732938]  [<ffffffff810ccd76>] cgroup_diput+0x76/0x210\n[36280.732941]  [<ffffffff8119eac0>] d_delete+0x120/0x180\n[36280.732943]  [<ffffffff81195cff>] vfs_rmdir+0xef/0x130\n[36280.732945]  [<ffffffff81195e47>] do_rmdir+0x107/0x1c0\n[36280.732949]  [<ffffffff8132d17e>] ? trace_hardirqs_on_thunk+0x3a/0x3f\n[36280.732951]  [<ffffffff81198646>] sys_rmdir+0x16/0x20\n[36280.732954]  [<ffffffff8173bd82>] system_call_fastpath+0x16/0x1b\n[36280.732956] ---[ end trace ca39dced899a7d9f ]---\n\nSigned-off-by: Jerry Snitselaar <jerry.snitselaar@oracle.com>\nCc: stable@kernel.org\nSigned-off-by: James Morris <james.l.morris@oracle.com>",
        "before_after_code_files": [
          "security/device_cgroup.c||security/device_cgroup.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "security/device_cgroup.c||security/device_cgroup.c": [
          "File: security/device_cgroup.c -> security/device_cgroup.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "215:  struct dev_cgroup *dev_cgroup;",
          "217:  dev_cgroup = cgroup_to_devcgroup(cgroup);",
          "218:  dev_exception_clean(dev_cgroup);",
          "219:  kfree(dev_cgroup);",
          "220: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "218:  mutex_lock(&devcgroup_mutex);",
          "220:  mutex_unlock(&devcgroup_mutex);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b88a634a903d9670aa5f2f785aa890628ce0dece",
      "candidate_info": {
        "commit_hash": "b88a634a903d9670aa5f2f785aa890628ce0dece",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/b88a634a903d9670aa5f2f785aa890628ce0dece",
        "files": [
          "drivers/acpi/processor_idle.c"
        ],
        "message": "ACPI / cpuidle: Fix NULL pointer issues when cpuidle is disabled\n\nIf cpuidle is disabled, that means that:\n\n\tper_cpu(acpi_cpuidle_device, pr->id)\n\nis set to NULL as the acpi_processor_power_init ends up failing at\n\n\t retval = cpuidle_register_driver(&acpi_idle_driver)\n\n(in acpi_processor_power_init) and never sets the per_cpu idle\ndevice.  So when acpi_processor_hotplug on CPU online notification\ntries to reference said device it crashes:\n\ncpu 3 spinlock event irq 62\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000004\nIP: [<ffffffff81381013>] acpi_processor_setup_cpuidle_cx+0x3f/0x105\nPGD a259b067 PUD ab38b067 PMD 0\nOops: 0002 [#1] SMP\nodules linked in: dm_multipath dm_mod xen_evtchn iscsi_boot_sysfs iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi libcrc32c crc32c nouveau mxm_wmi wmi radeon ttm sg sr_mod sd_mod cdrom ata_generic ata_piix libata crc32c_intel scsi_mod atl1c i915 fbcon tileblit font bitblit softcursor drm_kms_helper video xen_blkfront xen_netfront fb_sys_fops sysimgblt sysfillrect syscopyarea xenfs xen_privcmd mperf\nCPU 1\nPid: 3047, comm: bash Not tainted 3.8.0-rc3upstream-00250-g165c029 #1 MSI MS-7680/H61M-P23 (MS-7680)\nRIP: e030:[<ffffffff81381013>]  [<ffffffff81381013>] acpi_processor_setup_cpuidle_cx+0x3f/0x105\nRSP: e02b:ffff88001742dca8  EFLAGS: 00010202\nRAX: 0000000000010be9 RBX: ffff8800a0a61800 RCX: ffff880105380000\nRDX: 0000000000000003 RSI: 0000000000000200 RDI: ffff8800a0a61800\nRBP: ffff88001742dce8 R08: ffffffff81812360 R09: 0000000000000200\nR10: aaaaaaaaaaaaaaaa R11: 0000000000000001 R12: ffff8800a0a61800\nR13: 00000000ffffff01 R14: 0000000000000000 R15: ffffffff81a907a0\nFS:  00007fd6942f7700(0000) GS:ffff880105280000(0000) knlGS:0000000000000000\nCS:  e033 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000004 CR3: 00000000a6773000 CR4: 0000000000042660\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\nProcess bash (pid: 3047, threadinfo ffff88001742c000, task ffff880017944000)\nStack:\n 0000000000000150 ffff880100f59e00 ffff88001742dcd8 ffff8800a0a61800\n 0000000000000000 00000000ffffff01 0000000000000000 ffffffff81a907a0\n ffff88001742dd18 ffffffff813815b1 ffff88001742dd08 ffffffff810ae336\nCall Trace:\n [<ffffffff813815b1>] acpi_processor_hotplug+0x7c/0x9f\n [<ffffffff810ae336>] ? schedule_delayed_work_on+0x16/0x20\n [<ffffffff8137ee8f>] acpi_cpu_soft_notify+0x90/0xca\n [<ffffffff8166023d>] notifier_call_chain+0x4d/0x70\n [<ffffffff810bc369>] __raw_notifier_call_chain+0x9/0x10\n [<ffffffff81094a4b>] __cpu_notify+0x1b/0x30\n [<ffffffff81652cf7>] _cpu_up+0x103/0x14b\n [<ffffffff81652e18>] cpu_up+0xd9/0xec\n [<ffffffff8164a254>] store_online+0x94/0xd0\n [<ffffffff814122fb>] dev_attr_store+0x1b/0x20\n [<ffffffff81216404>] sysfs_write_file+0xf4/0x170\n\nThis patch fixes it.\n\nSigned-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>",
        "before_after_code_files": [
          "drivers/acpi/processor_idle.c||drivers/acpi/processor_idle.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/acpi/processor_idle.c||drivers/acpi/processor_idle.c": [
          "File: drivers/acpi/processor_idle.c -> drivers/acpi/processor_idle.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "958:   return -EINVAL;",
          "959:  }",
          "961:  dev->cpu = pr->id;",
          "963:  if (max_cstate == 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "961:  if (!dev)",
          "962:   return -EINVAL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d0b4d64aadb9f4a90669848de9ef3819050a98cd",
      "candidate_info": {
        "commit_hash": "d0b4d64aadb9f4a90669848de9ef3819050a98cd",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d0b4d64aadb9f4a90669848de9ef3819050a98cd",
        "files": [
          "drivers/xen/grant-table.c"
        ],
        "message": "xen/grant-table: correctly initialize grant table version 1\n\nCommit 85ff6acb075a484780b3d763fdf41596d8fc0970 (xen/granttable: Grant\ntables V2 implementation) changed the GREFS_PER_GRANT_FRAME macro from\na constant to a conditional expression. The expression depends on\ngrant_table_version being appropriately set. Unfortunately, at init\ntime grant_table_version will be 0. The GREFS_PER_GRANT_FRAME\nconditional expression checks for \"grant_table_version == 1\", and\ntherefore returns the number of grant references per frame for v2.\n\nThis causes gnttab_init() to allocate fewer pages for gnttab_list, as\na frame can old half the number of v2 entries than v1 entries. After\ngnttab_resume() is called, grant_table_version is appropriately\nset. nr_init_grefs will then be miscalculated and gnttab_free_count\nwill hold a value larger than the actual number of free gref entries.\n\nIf a guest is heavily utilizing improperly initialized v1 grant\ntables, memory corruption can occur. One common manifestation is\ncorruption of the vmalloc list, resulting in a poisoned pointer\nderefrence when accessing /proc/meminfo or /proc/vmallocinfo:\n\n[   40.770064] BUG: unable to handle kernel paging request at 0000200200001407\n[   40.770083] IP: [<ffffffff811a6fb0>] get_vmalloc_info+0x70/0x110\n[   40.770102] PGD 0\n[   40.770107] Oops: 0000 [#1] SMP\n[   40.770114] CPU 10\n\nThis patch introduces a static variable, grefs_per_grant_frame, to\ncache the calculated value. gnttab_init() now calls\ngnttab_request_version() early so that grant_table_version and\ngrefs_per_grant_frame can be appropriately set. A few BUG_ON()s have\nbeen added to prevent this type of bug from reoccurring in the future.\n\nSigned-off-by: Matt Wilson <msw@amazon.com>\nReviewed-and-Tested-by: Steven Noonan <snoonan@amazon.com>\nAcked-by: Ian Campbell <Ian.Campbell@citrix.com>\nCc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nCc: Annie Li <annie.li@oracle.com>\nCc: xen-devel@lists.xen.org\nCc: linux-kernel@vger.kernel.org\nCc: stable@vger.kernel.org # v3.3 and newer\nSigned-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>",
        "before_after_code_files": [
          "drivers/xen/grant-table.c||drivers/xen/grant-table.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/xen/grant-table.c||drivers/xen/grant-table.c": [
          "File: drivers/xen/grant-table.c -> drivers/xen/grant-table.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: #define NR_RESERVED_ENTRIES 8",
          "58: #define GNTTAB_LIST_END 0xffffffff",
          "64: static grant_ref_t **gnttab_list;",
          "65: static unsigned int nr_grant_frames;",
          "",
          "[Removed Lines]",
          "59: #define GREFS_PER_GRANT_FRAME \\",
          "60: (grant_table_version == 1 ?                      \\",
          "61: (PAGE_SIZE / sizeof(struct grant_entry_v1)) :   \\",
          "62: (PAGE_SIZE / sizeof(union grant_entry_v2)))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "154: static grant_status_t *grstatus;",
          "156: static int grant_table_version;",
          "158: static struct gnttab_free_callback *gnttab_free_callback_list;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153: static int grefs_per_grant_frame;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "767:  unsigned int new_nr_grant_frames, extra_entries, i;",
          "768:  unsigned int nr_glist_frames, new_nr_glist_frames;",
          "770:  new_nr_grant_frames = nr_grant_frames + more_frames;",
          "774:  new_nr_glist_frames =",
          "776:  for (i = nr_glist_frames; i < new_nr_glist_frames; i++) {",
          "777:   gnttab_list[i] = (grant_ref_t *)__get_free_page(GFP_ATOMIC);",
          "778:   if (!gnttab_list[i])",
          "",
          "[Removed Lines]",
          "771:  extra_entries       = more_frames * GREFS_PER_GRANT_FRAME;",
          "773:  nr_glist_frames = (nr_grant_frames * GREFS_PER_GRANT_FRAME + RPP - 1) / RPP;",
          "775:   (new_nr_grant_frames * GREFS_PER_GRANT_FRAME + RPP - 1) / RPP;",
          "",
          "[Added Lines]",
          "767:  BUG_ON(grefs_per_grant_frame == 0);",
          "770:  extra_entries       = more_frames * grefs_per_grant_frame;",
          "772:  nr_glist_frames = (nr_grant_frames * grefs_per_grant_frame + RPP - 1) / RPP;",
          "774:   (new_nr_grant_frames * grefs_per_grant_frame + RPP - 1) / RPP;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "780:  }",
          "785:   gnttab_entry(i) = i + 1;",
          "787:  gnttab_entry(i) = gnttab_free_head;",
          "789:  gnttab_free_count += extra_entries;",
          "791:  nr_grant_frames = new_nr_grant_frames;",
          "",
          "[Removed Lines]",
          "783:  for (i = GREFS_PER_GRANT_FRAME * nr_grant_frames;",
          "784:       i < GREFS_PER_GRANT_FRAME * new_nr_grant_frames - 1; i++)",
          "788:  gnttab_free_head = GREFS_PER_GRANT_FRAME * nr_grant_frames;",
          "",
          "[Added Lines]",
          "782:  for (i = grefs_per_grant_frame * nr_grant_frames;",
          "783:       i < grefs_per_grant_frame * new_nr_grant_frames - 1; i++)",
          "787:  gnttab_free_head = grefs_per_grant_frame * nr_grant_frames;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "958: static unsigned nr_status_frames(unsigned nr_grant_frames)",
          "959: {",
          "961: }",
          "963: static int gnttab_map_frames_v1(xen_pfn_t *frames, unsigned int nr_gframes)",
          "",
          "[Removed Lines]",
          "960:  return (nr_grant_frames * GREFS_PER_GRANT_FRAME + SPP - 1) / SPP;",
          "",
          "[Added Lines]",
          "959:  BUG_ON(grefs_per_grant_frame == 0);",
          "960:  return (nr_grant_frames * grefs_per_grant_frame + SPP - 1) / SPP;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1115:  rc = HYPERVISOR_grant_table_op(GNTTABOP_set_version, &gsv, 1);",
          "1116:  if (rc == 0 && gsv.version == 2) {",
          "1117:   grant_table_version = 2;",
          "1118:   gnttab_interface = &gnttab_v2_ops;",
          "1119:  } else if (grant_table_version == 2) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1118:   grefs_per_grant_frame = PAGE_SIZE / sizeof(union grant_entry_v2);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1127:   panic(\"we need grant tables version 2, but only version 1 is available\");",
          "1128:  } else {",
          "1129:   grant_table_version = 1;",
          "1130:   gnttab_interface = &gnttab_v1_ops;",
          "1131:  }",
          "1132:  printk(KERN_INFO \"Grant tables using version %d layout.\\n\",",
          "1133:   grant_table_version);",
          "1134: }",
          "1137: {",
          "1138:  unsigned int max_nr_gframes;",
          "1141:  max_nr_gframes = gnttab_max_grant_frames();",
          "1142:  if (max_nr_gframes < nr_grant_frames)",
          "1143:   return -ENOSYS;",
          "",
          "[Removed Lines]",
          "1136: int gnttab_resume(void)",
          "1140:  gnttab_request_version();",
          "",
          "[Added Lines]",
          "1131:   grefs_per_grant_frame = PAGE_SIZE / sizeof(struct grant_entry_v1);",
          "1138: static int gnttab_setup(void)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1160:  return 0;",
          "1161: }",
          "1163: int gnttab_suspend(void)",
          "1164: {",
          "1165:  gnttab_interface->unmap_frames();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1164: int gnttab_resume(void)",
          "1165: {",
          "1166:  gnttab_request_version();",
          "1167:  return gnttab_setup();",
          "1168: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1171:  int rc;",
          "1172:  unsigned int cur, extra;",
          "1174:  cur = nr_grant_frames;",
          "1177:  if (cur + extra > gnttab_max_grant_frames())",
          "1178:   return -ENOSPC;",
          "",
          "[Removed Lines]",
          "1175:  extra = ((req_entries + (GREFS_PER_GRANT_FRAME-1)) /",
          "1176:    GREFS_PER_GRANT_FRAME);",
          "",
          "[Added Lines]",
          "1181:  BUG_ON(grefs_per_grant_frame == 0);",
          "1183:  extra = ((req_entries + (grefs_per_grant_frame-1)) /",
          "1184:    grefs_per_grant_frame);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1191:  unsigned int nr_init_grefs;",
          "1192:  int ret;",
          "1194:  nr_grant_frames = 1;",
          "1195:  boot_max_nr_grant_frames = __max_nr_grant_frames();",
          "1200:  max_nr_glist_frames = (boot_max_nr_grant_frames *",
          "1203:  gnttab_list = kmalloc(max_nr_glist_frames * sizeof(grant_ref_t *),",
          "1204:          GFP_KERNEL);",
          "1205:  if (gnttab_list == NULL)",
          "1206:   return -ENOMEM;",
          "1209:  for (i = 0; i < nr_glist_frames; i++) {",
          "1210:   gnttab_list[i] = (grant_ref_t *)__get_free_page(GFP_KERNEL);",
          "1211:   if (gnttab_list[i] == NULL) {",
          "",
          "[Removed Lines]",
          "1201:           GREFS_PER_GRANT_FRAME / RPP);",
          "1208:  nr_glist_frames = (nr_grant_frames * GREFS_PER_GRANT_FRAME + RPP - 1) / RPP;",
          "",
          "[Added Lines]",
          "1202:  gnttab_request_version();",
          "1209:  BUG_ON(grefs_per_grant_frame == 0);",
          "1211:           grefs_per_grant_frame / RPP);",
          "1218:  nr_glist_frames = (nr_grant_frames * grefs_per_grant_frame + RPP - 1) / RPP;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1214:   }",
          "1215:  }",
          "1218:   ret = -ENODEV;",
          "1219:   goto ini_nomem;",
          "1220:  }",
          "1224:  for (i = NR_RESERVED_ENTRIES; i < nr_init_grefs - 1; i++)",
          "1225:   gnttab_entry(i) = i + 1;",
          "",
          "[Removed Lines]",
          "1217:  if (gnttab_resume() < 0) {",
          "1222:  nr_init_grefs = nr_grant_frames * GREFS_PER_GRANT_FRAME;",
          "",
          "[Added Lines]",
          "1227:  if (gnttab_setup() < 0) {",
          "1232:  nr_init_grefs = nr_grant_frames * grefs_per_grant_frame;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e9a4a9a5c8e8765417d54ed6917c7e1e4d09f4d",
      "candidate_info": {
        "commit_hash": "8e9a4a9a5c8e8765417d54ed6917c7e1e4d09f4d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/8e9a4a9a5c8e8765417d54ed6917c7e1e4d09f4d",
        "files": [
          "drivers/misc/mei/client.c"
        ],
        "message": "mei: drop the warning when cl is not initialized during unlinking\n\nOn systems where wd and amthif is not initialized\nwe will hit cl->dev == NULL. This condition is okay\nso we don't need to be laud about it.\n\nFixes the follwing warning during suspend\n[  137.061985] WARNING: at drivers/misc/mei/client.c:315 mei_cl_unlink+0x86/0x90 [mei]()\n[  137.061986] Hardware name: 530U3BI/530U4BI/530U4BH\n[  137.062140] Modules linked in: snd_hda_codec_hdmi snd_hda_codec_realtek joydev coretemp kvm_intel snd_hda_intel snd_hda_codec kvm arc4 iwldvm snd_hwdep i915 snd_pcm mac80211 ghash_clmulni_intel snd_page_alloc aesni_intel snd_seq_midi xts snd_seq_midi_event aes_x86_64 rfcomm snd_rawmidi parport_pc bnep lrw snd_seq uvcvideo i2c_algo_bit ppdev gf128mul iwlwifi snd_timer drm_kms_helper ablk_helper cryptd drm snd_seq_device videobuf2_vmalloc psmouse videobuf2_memops snd cfg80211 btusb videobuf2_core soundcore videodev lp bluetooth samsung_laptop wmi microcode mei serio_raw mac_hid video hid_generic lpc_ich parport usbhid hid r8169\n[  137.062143] Pid: 2706, comm: kworker/u:15 Tainted: G      D W    3.8.0-rc2-next20130109-1-iniza-generic #1\n[  137.062144] Call Trace:\n[  137.062156]  [<ffffffff8105860f>] warn_slowpath_common+0x7f/0xc0\n[  137.062159]  [<ffffffff8135b1ea>] ? ioread32+0x3a/0x40\n[  137.062162]  [<ffffffff8105866a>] warn_slowpath_null+0x1a/0x20\n[  137.062168]  [<ffffffffa0076be6>] mei_cl_unlink+0x86/0x90 [mei]\n[  137.062173]  [<ffffffffa0071325>] mei_reset+0xc5/0x240 [mei]\n[  137.062178]  [<ffffffffa0073703>] mei_pci_resume+0xa3/0x110 [mei]\n[  137.062183]  [<ffffffff81379cae>] pci_pm_resume+0x7e/0xe0\n[  137.062185]  [<ffffffff81379c30>] ? pci_pm_thaw+0x80/0x80\n[  137.062189]  [<ffffffff8145a415>] dpm_run_callback.isra.6+0x25/0x50\n[  137.062192]  [<ffffffff8145a6cf>] device_resume+0x9f/0x140\n[  137.062194]  [<ffffffff8145a791>] async_resume+0x21/0x50\n[  137.062200]  [<ffffffff810858b0>] async_run_entry_fn+0x90/0x1c0\n[  137.062203]  [<ffffffff810778e5>] process_one_work+0x155/0x460\n[  137.062207]  [<ffffffff81078578>] worker_thread+0x168/0x400\n[  137.062210]  [<ffffffff81078410>] ? manage_workers+0x2b0/0x2b0\n[  137.062214]  [<ffffffff8107d9f0>] kthread+0xc0/0xd0\n[  137.062218]  [<ffffffff8107d930>] ? flush_kthread_worker+0xb0/0xb0\n[  137.062222]  [<ffffffff816bac6c>] ret_from_fork+0x7c/0xb0\n[  137.062228]  [<ffffffff8107d930>] ? flush_kthread_worker+0xb0/0xb0\n\nReported-by: Sedat Dilek <sedat.dilek@gmail.com>\nTested-by: Sedat Dilek <sedat.dilek@gmail.com>\nSigned-off-by: Tomas Winkler <tomas.winkler@intel.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
        "before_after_code_files": [
          "drivers/misc/mei/client.c||drivers/misc/mei/client.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/misc/mei/client.c||drivers/misc/mei/client.c": [
          "File: drivers/misc/mei/client.c -> drivers/misc/mei/client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "312:  if (!cl)",
          "313:   return 0;",
          "318:  dev = cl->dev;",
          "",
          "[Removed Lines]",
          "315:  if (WARN_ON(!cl->dev))",
          "316:   return -EINVAL;",
          "",
          "[Added Lines]",
          "316:  if (!cl->dev)",
          "317:   return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "27e89ae5d6e94e30231ee89a7736f62d84ba4c6f",
      "candidate_info": {
        "commit_hash": "27e89ae5d6e94e30231ee89a7736f62d84ba4c6f",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/27e89ae5d6e94e30231ee89a7736f62d84ba4c6f",
        "files": [
          "kernel/cpuset.c"
        ],
        "message": "cpuset: fix RCU lockdep splat\n\n5d21cc2db040d01f8c19b8602f6987813e1176b4 (\"cpuset: replace\ncgroup_mutex locking with cpuset internal locking\") incorrectly\nconverted proc_cpuset_show() from cgroup_lock() to cpuset_mutex.\nproc_cpuset_show() is accessing cgroup hierarchy proper to determine\ncgroup path which can't be protected by cpuset_mutex.  This triggered\nthe following RCU warning.\n\n ===============================\n [ INFO: suspicious RCU usage. ]\n 3.8.0-rc3-next-20130114-sasha-00016-ga107525-dirty #262 Tainted: G        W\n -------------------------------\n include/linux/cgroup.h:534 suspicious rcu_dereference_check() usage!\n\n other info that might help us debug this:\n\n rcu_scheduler_active = 1, debug_locks = 1\n 2 locks held by trinity/7514:\n  #0:  (&p->lock){+.+.+.}, at: [<ffffffff812b06aa>] seq_read+0x3a/0x3e0\n  #1:  (cpuset_mutex){+.+...}, at: [<ffffffff811abae4>] proc_cpuset_show+0x84/0x190\n\n stack backtrace:\n Pid: 7514, comm: trinity Tainted: G        W\n+3.8.0-rc3-next-20130114-sasha-00016-ga107525-dirty #262\n Call Trace:\n  [<ffffffff81182cab>] lockdep_rcu_suspicious+0x10b/0x120\n  [<ffffffff811abb71>] proc_cpuset_show+0x111/0x190\n  [<ffffffff812b0827>] seq_read+0x1b7/0x3e0\n  [<ffffffff812b0670>] ? seq_lseek+0x110/0x110\n  [<ffffffff8128b4fb>] do_loop_readv_writev+0x4b/0x90\n  [<ffffffff8128b776>] do_readv_writev+0xf6/0x1d0\n  [<ffffffff8128b8ee>] vfs_readv+0x3e/0x60\n  [<ffffffff8128b960>] sys_readv+0x50/0xd0\n  [<ffffffff83d33d18>] tracesys+0xe1/0xe6\n\nThe operation can be performed under RCU read lock.  Replace\ncpuset_mutex locking with RCU read locking.\n\ntj: Rewrote patch description.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: Li Zefan <lizefan@huawei.com>\nSigned-off-by: Tejun Heo <tj@kernel.org>",
        "before_after_code_files": [
          "kernel/cpuset.c||kernel/cpuset.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kernel/cpuset.c||kernel/cpuset.c": [
          "File: kernel/cpuset.c -> kernel/cpuset.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2678:   goto out_free;",
          "2680:  retval = -EINVAL;",
          "2682:  css = task_subsys_state(tsk, cpuset_subsys_id);",
          "2683:  retval = cgroup_path(css->cgroup, buf, PAGE_SIZE);",
          "2684:  if (retval < 0)",
          "2686:  seq_puts(m, buf);",
          "2687:  seq_putc(m, '\\n');",
          "2690:  put_task_struct(tsk);",
          "2691: out_free:",
          "2692:  kfree(buf);",
          "",
          "[Removed Lines]",
          "2681:  mutex_lock(&cpuset_mutex);",
          "2685:   goto out_unlock;",
          "2688: out_unlock:",
          "2689:  mutex_unlock(&cpuset_mutex);",
          "",
          "[Added Lines]",
          "2681:  rcu_read_lock();",
          "2684:  rcu_read_unlock();",
          "2686:   goto out_put_task;",
          "2689: out_put_task:",
          "",
          "---------------"
        ]
      }
    }
  ]
}