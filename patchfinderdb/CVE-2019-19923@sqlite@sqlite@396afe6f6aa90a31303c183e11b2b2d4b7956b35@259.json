{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bedf84c17bb5b5a811cd395892c1f89f5f458b70",
      "candidate_info": {
        "commit_hash": "bedf84c17bb5b5a811cd395892c1f89f5f458b70",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bedf84c17bb5b5a811cd395892c1f89f5f458b70",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c"
        ],
        "message": "Fix an assert() that [28196d89] caused to fail.\n\nFossilOrigin-Name: 8fb0c6d5a38e77aa4c5f394fb8af1b0c7c6a4790e932aabc213a3078ee9acaf6",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 28196d894ac9fad9d8f877c7bf17ec9d299d12acdcc942f9ea0783777b14fdc5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "619: #ifdef SQLITE_DEBUG",
          "623:   int nLookaside = 0;",
          "625:     nLookaside = sqlite3LookasideUsed(db, 0);",
          "626:   }",
          "627: #endif",
          "",
          "[Removed Lines]",
          "624:   if( db && (pTable->tabFlags & TF_Ephemeral)==0 ){",
          "",
          "[Added Lines]",
          "628:   if( db && !db->mallocFailed && (pTable->tabFlags & TF_Ephemeral)==0 ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "660107f35eb9f8e74ea26f6a66c6c05d2cb1f83e",
      "candidate_info": {
        "commit_hash": "660107f35eb9f8e74ea26f6a66c6c05d2cb1f83e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/660107f35eb9f8e74ea26f6a66c6c05d2cb1f83e",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/symbols.sh"
        ],
        "message": "Update tool/symbols.sh to ignore symbols from sessions and rebaser and to not try to compile with ICU which is not available on all platforms.\n\nFossilOrigin-Name: 0bab4ece6e81916d0f7255a8e553b8ca040cb8a96ab21e294212e232119f8ddc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/symbols.sh||tool/symbols.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0ada58e9303d53aba8bdc37abe5904aa40e91f80e247eb51cb1192387b0d661c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/symbols.sh||tool/symbols.sh": [
          "File: tool/symbols.sh -> tool/symbols.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #",
          "6: make sqlite3.c",
          "9: gcc -c -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_RTREE \\",
          "10:   -DSQLITE_ENABLE_MEMORY_MANAGEMENT -DSQLITE_ENABLE_STAT3 \\",
          "11:   -DSQLITE_ENABLE_MEMSYS5 -DSQLITE_ENABLE_UNLOCK_NOTIFY \\",
          "12:   -DSQLITE_ENABLE_COLUMN_METADATA -DSQLITE_ENABLE_ATOMIC_WRITE \\",
          "14:   sqlite3.c",
          "15: nm sqlite3.o | grep ' [TD] ' | sort -k 3",
          "20: echo '****** Dependencies of the core. No extensions. No OS interface *******'",
          "21: gcc -c -DSQLITE_ENABLE_MEMORY_MANAGEMENT -DSQLITE_ENABLE_STAT3 \\",
          "",
          "[Removed Lines]",
          "8: echo '****** Exported symbols from a build including RTREE, FTS4 & ICU ******'",
          "13:   -DSQLITE_ENABLE_ICU -DSQLITE_ENABLE_PREUPDATE_HOOK -DSQLITE_ENABLE_SESSION \\",
          "17: echo '****** Surplus symbols from a build including RTREE, FTS4 & ICU ******'",
          "18: nm sqlite3.o | grep ' [TD] ' | grep -v ' .*sqlite3_'",
          "",
          "[Added Lines]",
          "8: echo '****** Exported symbols from a build including RTREE, FTS4 & FTS5 ******'",
          "13:   -DSQLITE_ENABLE_PREUPDATE_HOOK -DSQLITE_ENABLE_SESSION \\",
          "14:   -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_GEOPOLY \\",
          "18: echo '****** Surplus symbols from a build including RTREE, FTS4 & FTS5 ******'",
          "19: nm sqlite3.o | grep ' [TD] ' |",
          "20:    egrep -v ' .*sqlite3(session|rebaser|changeset|changegroup)?_'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "65455fc682394dc7ec0b0c5599a2175e05e94f4b",
      "candidate_info": {
        "commit_hash": "65455fc682394dc7ec0b0c5599a2175e05e94f4b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/65455fc682394dc7ec0b0c5599a2175e05e94f4b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "test/altertab.test"
        ],
        "message": "Fix a problem with renaming a table that starts with \"sqlite\". Fix for ticket [f00d7b65].\n\nFossilOrigin-Name: a2ead8aa4517b63cda7bf84464326e9cb5e228224caa603568c0e04ea44e6588",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "test/altertab.test||test/altertab.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6de980a09c3a7adf71f2c9a63a242673b5e1f246e8ee071b26844275f0dad0fc",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:   sqlite3NestedParse(pParse,",
          "55:       \"SELECT 1 \"",
          "56:       \"FROM \\\"%w\\\".%s \"",
          "58:       \" AND sql NOT LIKE 'create virtual%%'\"",
          "59:       \" AND sqlite_rename_test(%Q, sql, type, name, %d)=NULL \",",
          "60:       zDb, MASTER_NAME,",
          "",
          "[Removed Lines]",
          "57:       \"WHERE name NOT LIKE 'sqlite_%%'\"",
          "",
          "[Added Lines]",
          "57:       \"WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X'\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:     sqlite3NestedParse(pParse,",
          "66:         \"SELECT 1 \"",
          "67:         \"FROM temp.%s \"",
          "69:         \" AND sql NOT LIKE 'create virtual%%'\"",
          "70:         \" AND sqlite_rename_test(%Q, sql, type, name, 1)=NULL \",",
          "71:         MASTER_NAME, zDb",
          "",
          "[Removed Lines]",
          "68:         \"WHERE name NOT LIKE 'sqlite_%%'\"",
          "",
          "[Added Lines]",
          "68:         \"WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X'\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "186:       \"UPDATE \\\"%w\\\".%s SET \"",
          "187:       \"sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, %d) \"",
          "188:       \"WHERE (type!='index' OR tbl_name=%Q COLLATE nocase)\"",
          "190:       , zDb, MASTER_NAME, zDb, zTabName, zName, (iDb==1), zTabName",
          "191:   );",
          "",
          "[Removed Lines]",
          "189:       \"AND   name NOT LIKE 'sqlite_%%'\"",
          "",
          "[Added Lines]",
          "189:       \"AND   name NOT LIKE 'sqliteX_%%' ESCAPE 'X'\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "197:           \"tbl_name = %Q, \"",
          "198:           \"name = CASE \"",
          "199:             \"WHEN type='table' THEN %Q \"",
          "201:              \"'sqlite_autoindex_' || %Q || substr(name,%d+18) \"",
          "202:             \"ELSE name END \"",
          "203:       \"WHERE tbl_name=%Q COLLATE nocase AND \"",
          "",
          "[Removed Lines]",
          "200:             \"WHEN name LIKE 'sqlite_autoindex%%' AND type='index' THEN \"",
          "",
          "[Added Lines]",
          "200:             \"WHEN name LIKE 'sqliteX_autoindex%%' ESCAPE 'X' \"",
          "201:             \"     AND type='index' THEN \"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "571:   sqlite3NestedParse(pParse,",
          "572:       \"UPDATE \\\"%w\\\".%s SET \"",
          "573:       \"sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, %d) \"",
          "575:       \" AND sql NOT LIKE 'create virtual%%'\",",
          "576:       zDb, MASTER_NAME,",
          "577:       zDb, pTab->zName, iCol, zNew, bQuote, iSchema==1,",
          "",
          "[Removed Lines]",
          "574:       \"WHERE name NOT LIKE 'sqlite_%%' AND (type != 'index' OR tbl_name = %Q)\"",
          "",
          "[Added Lines]",
          "575:       \"WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' \"",
          "576:       \" AND (type != 'index' OR tbl_name = %Q)\"",
          "",
          "---------------"
        ],
        "test/altertab.test||test/altertab.test": [
          "File: test/altertab.test -> test/altertab.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "559:   }",
          "560: }",
          "562: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "562: #-------------------------------------------------------------------------",
          "563: reset_db",
          "564: do_execsql_test 17.0 {",
          "565:   CREATE TABLE sqlite1234 (id integer);",
          "566:   ALTER TABLE sqlite1234 RENAME TO User;",
          "567:   SELECT name, sql FROM sqlite_master WHERE sql IS NOT NULL;",
          "568: } {",
          "569:   User {CREATE TABLE \"User\" (id integer)}",
          "570: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5f6243f6d851422dc643977cee096786eb0d0fd",
      "candidate_info": {
        "commit_hash": "b5f6243f6d851422dc643977cee096786eb0d0fd",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b5f6243f6d851422dc643977cee096786eb0d0fd",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c",
          "src/vdbe.c"
        ],
        "message": "Set the affinity of regular columns prior to computing the values of generated columns.  Ticket [d7c3f125c925c522]\n\nFossilOrigin-Name: d47d66e3d360d8aa6203a855228d2bc40d9a00d69c15f5066b7632d8fb1ed2cc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f065cf003bd2a3a580cb5b9fa2eacd8be075fe8c2bbc5688e9a9406abbfb3804",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229:   Walker w;",
          "230:   Column *pRedo;",
          "231:   int eProgress;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "232:   VdbeOp *pOp;",
          "234:   assert( pTab->tabFlags & TF_HasGenerated );",
          "235:   testcase( pTab->tabFlags & TF_HasVirtual );",
          "236:   testcase( pTab->tabFlags & TF_HasStored );",
          "241:   sqlite3TableAffinity(pParse->pVdbe, pTab, iRegStore);",
          "242:   if( (pTab->tabFlags & TF_HasStored)!=0",
          "243:    && (pOp = sqlite3VdbeGetOp(pParse->pVdbe,-1))->opcode==OP_Affinity",
          "244:   ){",
          "248:     int ii, jj;",
          "249:     char *zP4 = pOp->p4.z;",
          "250:     assert( zP4!=0 );",
          "251:     assert( pOp->p4type==P4_DYNAMIC );",
          "252:     for(ii=jj=0; zP4[jj]; ii++){",
          "253:       if( pTab->aCol[ii].colFlags & COLFLAG_VIRTUAL ){",
          "254:         continue;",
          "255:       }",
          "256:       if( pTab->aCol[ii].colFlags & COLFLAG_STORED ){",
          "257:         zP4[jj] = SQLITE_AFF_NONE;",
          "258:       }",
          "259:       jj++;",
          "260:     }",
          "261:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1191:     if( pTab->tabFlags & TF_HasGenerated ){",
          "1194:       sqlite3ComputeGeneratedColumns(pParse, regRowid+1, pTab);",
          "1195:     }",
          "1196: #endif",
          "",
          "[Removed Lines]",
          "1192:       testcase( pTab->tabFlags & TF_HasVirtual );",
          "1193:       testcase( pTab->tabFlags & TF_HasStored );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2818:   pIn1 = &aMem[pOp->p1];",
          "2819:   while( 1 /*exit-by-break*/ ){",
          "2820:     assert( pIn1 <= &p->aMem[(p->nMem+1 - p->nCursor)] );",
          "2822:     applyAffinity(pIn1, zAffinity[0], encoding);",
          "2823:     if( zAffinity[0]==SQLITE_AFF_REAL && (pIn1->flags & MEM_Int)!=0 ){",
          "",
          "[Removed Lines]",
          "2821:     assert( memIsValid(pIn1) );",
          "",
          "[Added Lines]",
          "2821:     assert( zAffinity[0]==SQLITE_AFF_NONE || memIsValid(pIn1) );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d86fe44ab5a442a065935cb8b11a138b238dcf4b",
      "candidate_info": {
        "commit_hash": "d86fe44ab5a442a065935cb8b11a138b238dcf4b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d86fe44ab5a442a065935cb8b11a138b238dcf4b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Fix typo in a comment.  No code changes.\n\nFossilOrigin-Name: d0cc06d8a30444125e5655f6587a6355471c3447c08a2e5f7a046a4ed5cc5f09",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9690013a00d73a8047b25149ded50d20c74b5c62c0725eec50ed8477688e58a0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c"
        ]
      }
    }
  ]
}