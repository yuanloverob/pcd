{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "147ab0c5826eb5200647c2dcc251378226318071",
      "candidate_info": {
        "commit_hash": "147ab0c5826eb5200647c2dcc251378226318071",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/147ab0c5826eb5200647c2dcc251378226318071",
        "files": [
          "test/test-signal-multiple-loops.c"
        ],
        "message": "test: clean up signal_multiple_loops\n\nThe test uses some questionable binary math.  Rewrite it in a more\nexplicit fashion.",
        "before_after_code_files": [
          "test/test-signal-multiple-loops.c||test/test-signal-multiple-loops.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/test-signal-multiple-loops.c||test/test-signal-multiple-loops.c": [
          "File: test/test-signal-multiple-loops.c -> test/test-signal-multiple-loops.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: #include <string.h>",
          "35: #include <unistd.h>",
          "39: #define NUM_LOOP_CREATING_THREADS 10",
          "42: static uv_sem_t sem;",
          "43: static uv_mutex_t counter_lock;",
          "",
          "[Removed Lines]",
          "38: #define NUM_SIGNAL_HANDLING_THREADS 25",
          "",
          "[Added Lines]",
          "43: #define NUM_SIGNAL_HANDLING_THREADS 24",
          "46: enum signal_action {",
          "47:   ONLY_SIGUSR1,",
          "48:   ONLY_SIGUSR2,",
          "49:   SIGUSR1_AND_SIGUSR2",
          "50: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72: static void signal_handling_worker(void* context) {",
          "75:   uv_signal_t signal1a;",
          "76:   uv_signal_t signal1b;",
          "77:   uv_signal_t signal2;",
          "78:   int r;",
          "80:   loop = uv_loop_new();",
          "81:   ASSERT(loop != NULL);",
          "85:     r = uv_signal_init(loop, &signal1a);",
          "86:     ASSERT(r == 0);",
          "87:     r = uv_signal_start(&signal1a, signal1_cb, SIGUSR1);",
          "",
          "[Removed Lines]",
          "73:   uintptr_t mask = (uintptr_t) context;",
          "74:   uv_loop_t* loop;",
          "84:   if (mask & SIGUSR1) {",
          "",
          "[Added Lines]",
          "83:   enum signal_action action;",
          "87:   uv_loop_t* loop;",
          "90:   action = (enum signal_action) (uintptr_t) context;",
          "96:   if (action == ONLY_SIGUSR1 || action == SIGUSR1_AND_SIGUSR2) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:     r = uv_signal_start(&signal1b, signal1_cb, SIGUSR1);",
          "92:     ASSERT(r == 0);",
          "93:   }",
          "95:     r = uv_signal_init(loop, &signal2);",
          "96:     ASSERT(r == 0);",
          "97:     r = uv_signal_start(&signal2, signal2_cb, SIGUSR2);",
          "",
          "[Removed Lines]",
          "94:   if (mask & SIGUSR2) {",
          "",
          "[Added Lines]",
          "107:   if (action == ONLY_SIGUSR2 || action == SIGUSR1_AND_SIGUSR2) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108:   ASSERT(r == 0);",
          "112:     r = uv_signal_start(&signal1a, signal1_cb, SIGUSR1);",
          "113:     ASSERT(r == 0);",
          "114:     r = uv_signal_start(&signal1b, signal1_cb, SIGUSR1);",
          "115:     ASSERT(r == 0);",
          "116:   }",
          "118:     r = uv_signal_start(&signal2, signal2_cb, SIGUSR2);",
          "119:     ASSERT(r == 0);",
          "120:   }",
          "",
          "[Removed Lines]",
          "111:   if (mask & SIGUSR1) {",
          "117:   if (mask & SIGUSR2) {",
          "",
          "[Added Lines]",
          "124:   if (action == ONLY_SIGUSR1 || action == SIGUSR1_AND_SIGUSR2) {",
          "131:   if (action == ONLY_SIGUSR2 || action == SIGUSR1_AND_SIGUSR2) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "126:   ASSERT(r == 0);",
          "130:     uv_close((uv_handle_t*) &signal1a, NULL);",
          "131:     uv_close((uv_handle_t*) &signal1b, NULL);",
          "132:   }",
          "134:     uv_close((uv_handle_t*) &signal2, NULL);",
          "135:   }",
          "",
          "[Removed Lines]",
          "129:   if (mask & SIGUSR1) {",
          "133:   if (mask & SIGUSR2) {",
          "",
          "[Added Lines]",
          "143:   if (action == ONLY_SIGUSR1 || action == SIGUSR1_AND_SIGUSR2) {",
          "148:   if (action == ONLY_SIGUSR2 || action == SIGUSR1_AND_SIGUSR2) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "179: TEST_IMPL(signal_multiple_loops) {",
          "181:   uv_thread_t loop_creating_threads[NUM_LOOP_CREATING_THREADS];",
          "182:   uv_thread_t signal_handling_threads[NUM_SIGNAL_HANDLING_THREADS];",
          "183:   sigset_t sigset;",
          "185:   r = uv_sem_init(&sem, 0);",
          "186:   ASSERT(r == 0);",
          "",
          "[Removed Lines]",
          "180:   int i, r;",
          "",
          "[Added Lines]",
          "197:   enum signal_action action;",
          "199:   int i;",
          "200:   int r;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "200:   for (i = 0; i < NUM_SIGNAL_HANDLING_THREADS; i++) {",
          "203:     switch (i % 3) {",
          "207:     }",
          "209:     r = uv_thread_create(&signal_handling_threads[i],",
          "210:                          signal_handling_worker,",
          "212:     ASSERT(r == 0);",
          "213:   }",
          "",
          "[Removed Lines]",
          "201:     uintptr_t mask;",
          "204:       case 0: mask = SIGUSR1; break;",
          "205:       case 1: mask = SIGUSR2; break;",
          "206:       case 2: mask = SIGUSR1 | SIGUSR2; break;",
          "211:                          (void*) mask);",
          "",
          "[Added Lines]",
          "219:       case 0: action = ONLY_SIGUSR1; break;",
          "220:       case 1: action = ONLY_SIGUSR2; break;",
          "221:       case 2: action = SIGUSR1_AND_SIGUSR2; break;",
          "226:                          (void*) (uintptr_t) action);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "256:   printf(\"signal2_cb calls: %d\\n\", signal2_cb_counter);",
          "257:   printf(\"loops created and destroyed: %d\\n\", loop_creation_counter);",
          "",
          "[Removed Lines]",
          "259:   ASSERT(signal1_cb_counter == 4 * NUM_SIGNAL_HANDLING_THREADS);",
          "260:   ASSERT(signal2_cb_counter == 2 * NUM_SIGNAL_HANDLING_THREADS);",
          "",
          "[Added Lines]",
          "277:   ASSERT(signal1_cb_counter == 8 * (NUM_SIGNAL_HANDLING_THREADS / 3));",
          "278:   ASSERT(signal2_cb_counter == 4 * (NUM_SIGNAL_HANDLING_THREADS / 3));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ddd7e04fd6442ae0edba6fd64dbe416be5bca86b",
      "candidate_info": {
        "commit_hash": "ddd7e04fd6442ae0edba6fd64dbe416be5bca86b",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/ddd7e04fd6442ae0edba6fd64dbe416be5bca86b",
        "files": [
          ".gitignore",
          "Makefile",
          "Makefile.am",
          "README.md",
          "autogen.sh",
          "build.mk",
          "checksparse.sh",
          "config-mingw.mk",
          "config-unix.mk",
          "configure.ac",
          "include/pthread-fixes.h",
          "include/stdint-msvc2008.h",
          "include/tree.h",
          "include/uv-bsd.h",
          "include/uv-darwin.h",
          "include/uv-linux.h",
          "include/uv-private/pthread-fixes.h",
          "include/uv-private/stdint-msvc2008.h",
          "include/uv-private/tree.h",
          "include/uv-private/uv-bsd.h",
          "include/uv-private/uv-darwin.h",
          "include/uv-private/uv-linux.h",
          "include/uv-private/uv-sunos.h",
          "include/uv-private/uv-unix.h",
          "include/uv-private/uv-win.h",
          "include/uv-sunos.h",
          "include/uv-unix.h",
          "include/uv-win.h",
          "include/uv.h",
          "m4/.gitignore",
          "src/inet.c",
          "src/uv-common.h",
          "src/win/tty.c",
          "test/task.h",
          "uv.gyp"
        ],
        "message": "build: switch to autotools\n\nSwitch to the build tool everyone loves to hate.  The Makefile has\nserved us well over the years but it's been acquiring more and more\nfeatures that autotools gives us for free, like easy static+shared\nlibrary building, sane install targets, and so on.\n\nThis commit drops MinGW support.  If there is demand for it, we'll\nre-add it.",
        "before_after_code_files": [
          "Makefile.am||Makefile.am",
          "autogen.sh||autogen.sh",
          "build.mk||build.mk",
          "checksparse.sh||checksparse.sh",
          "config-mingw.mk||config-mingw.mk",
          "config-unix.mk||config-unix.mk",
          "configure.ac||configure.ac",
          "include/uv-private/uv-win.h||include/uv-win.h",
          "include/uv.h||include/uv.h",
          "src/inet.c||src/inet.c",
          "src/uv-common.h||src/uv-common.h",
          "src/win/tty.c||src/win/tty.c",
          "test/task.h||test/task.h",
          "uv.gyp||uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Copyright (c) 2013, Ben Noordhuis <info@bnoordhuis.nl>",
          "2: #",
          "3: # Permission to use, copy, modify, and/or distribute this software for any",
          "4: # purpose with or without fee is hereby granted, provided that the above",
          "5: # copyright notice and this permission notice appear in all copies.",
          "6: #",
          "7: # THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES",
          "8: # WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF",
          "9: # MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR",
          "10: # ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES",
          "11: # WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN",
          "12: # ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF",
          "13: # OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
          "15: ACLOCAL_AMFLAGS = -I m4",
          "17: AM_CPPFLAGS = -I$(top_srcdir)/include \\",
          "18:               -I$(top_srcdir)/src/unix \\",
          "19:               -I$(top_srcdir)/src",
          "21: include_HEADERS=include/uv.h include/uv-unix.h",
          "23: lib_LTLIBRARIES = libuv.la",
          "24: libuv_la_CFLAGS = @CFLAGS@",
          "25: libuv_la_LDFLAGS = -no-undefined -version-info 11:0:0",
          "26: libuv_la_SOURCES = src/fs-poll.c \\",
          "27:                    src/inet.c \\",
          "28:                    src/uv-common.c \\",
          "29:                    src/uv-common.h \\",
          "30:                    src/version.c \\",
          "31:                    src/unix/async.c \\",
          "32:                    src/unix/core.c \\",
          "33:                    src/unix/dl.c \\",
          "34:                    src/unix/error.c \\",
          "35:                    src/unix/fs.c \\",
          "36:                    src/unix/getaddrinfo.c \\",
          "37:                    src/unix/internal.h \\",
          "38:                    src/unix/loop-watcher.c \\",
          "39:                    src/unix/loop.c \\",
          "40:                    src/unix/pipe.c \\",
          "41:                    src/unix/poll.c \\",
          "42:                    src/unix/process.c \\",
          "43:                    src/unix/signal.c \\",
          "44:                    src/unix/stream.c \\",
          "45:                    src/unix/tcp.c \\",
          "46:                    src/unix/thread.c \\",
          "47:                    src/unix/threadpool.c \\",
          "48:                    src/unix/timer.c \\",
          "49:                    src/unix/tty.c \\",
          "50:                    src/unix/udp.c",
          "52: TESTS = test/run-tests",
          "53: check_PROGRAMS = test/run-tests",
          "54: test_run_tests_SOURCES = test/blackhole-server.c \\",
          "55:                          test/dns-server.c \\",
          "56:                          test/echo-server.c \\",
          "57:                          test/run-tests.c \\",
          "58:                          test/runner-unix.c \\",
          "59:                          test/runner-unix.h \\",
          "60:                          test/runner.c \\",
          "61:                          test/runner.h \\",
          "62:                          test/task.h \\",
          "63:                          test/test-active.c \\",
          "64:                          test/test-async.c \\",
          "65:                          test/test-barrier.c \\",
          "66:                          test/test-callback-order.c \\",
          "67:                          test/test-callback-stack.c \\",
          "68:                          test/test-condvar.c \\",
          "69:                          test/test-connection-fail.c \\",
          "70:                          test/test-cwd-and-chdir.c \\",
          "71:                          test/test-delayed-accept.c \\",
          "72:                          test/test-dlerror.c \\",
          "73:                          test/test-embed.c \\",
          "74:                          test/test-error.c \\",
          "75:                          test/test-fail-always.c \\",
          "76:                          test/test-fs-event.c \\",
          "77:                          test/test-fs-poll.c \\",
          "78:                          test/test-fs.c \\",
          "79:                          test/test-get-currentexe.c \\",
          "80:                          test/test-get-loadavg.c \\",
          "81:                          test/test-get-memory.c \\",
          "82:                          test/test-getaddrinfo.c \\",
          "83:                          test/test-getsockname.c \\",
          "84:                          test/test-hrtime.c \\",
          "85:                          test/test-idle.c \\",
          "86:                          test/test-ipc-send-recv.c \\",
          "87:                          test/test-ipc.c \\",
          "88:                          test/test-list.h \\",
          "89:                          test/test-loop-handles.c \\",
          "90:                          test/test-loop-stop.c \\",
          "91:                          test/test-multiple-listen.c \\",
          "92:                          test/test-mutexes.c \\",
          "93:                          test/test-osx-select.c \\",
          "94:                          test/test-pass-always.c \\",
          "95:                          test/test-ping-pong.c \\",
          "96:                          test/test-pipe-bind-error.c \\",
          "97:                          test/test-pipe-connect-error.c \\",
          "98:                          test/test-platform-output.c \\",
          "99:                          test/test-poll-close.c \\",
          "100:                          test/test-poll.c \\",
          "101:                          test/test-process-title.c \\",
          "102:                          test/test-ref.c \\",
          "103:                          test/test-run-nowait.c \\",
          "104:                          test/test-run-once.c \\",
          "105:                          test/test-semaphore.c \\",
          "106:                          test/test-shutdown-close.c \\",
          "107:                          test/test-shutdown-eof.c \\",
          "108:                          test/test-signal-multiple-loops.c \\",
          "109:                          test/test-signal.c \\",
          "110:                          test/test-spawn.c \\",
          "111:                          test/test-stdio-over-pipes.c \\",
          "112:                          test/test-tcp-bind-error.c \\",
          "113:                          test/test-tcp-bind6-error.c \\",
          "114:                          test/test-tcp-close-while-connecting.c \\",
          "115:                          test/test-tcp-close.c \\",
          "116:                          test/test-tcp-connect-error-after-write.c \\",
          "117:                          test/test-tcp-connect-error.c \\",
          "118:                          test/test-tcp-connect-timeout.c \\",
          "119:                          test/test-tcp-connect6-error.c \\",
          "120:                          test/test-tcp-flags.c \\",
          "121:                          test/test-tcp-open.c \\",
          "122:                          test/test-tcp-read-stop.c \\",
          "123:                          test/test-tcp-shutdown-after-write.c \\",
          "124:                          test/test-tcp-unexpected-read.c \\",
          "125:                          test/test-tcp-write-to-half-open-connection.c \\",
          "126:                          test/test-tcp-writealot.c \\",
          "127:                          test/test-thread.c \\",
          "128:                          test/test-threadpool-cancel.c \\",
          "129:                          test/test-threadpool.c \\",
          "130:                          test/test-timer-again.c \\",
          "131:                          test/test-timer-from-check.c \\",
          "132:                          test/test-timer.c \\",
          "133:                          test/test-tty.c \\",
          "134:                          test/test-udp-dgram-too-big.c \\",
          "135:                          test/test-udp-ipv6.c \\",
          "136:                          test/test-udp-multicast-join.c \\",
          "137:                          test/test-udp-multicast-ttl.c \\",
          "138:                          test/test-udp-open.c \\",
          "139:                          test/test-udp-options.c \\",
          "140:                          test/test-udp-send-and-recv.c \\",
          "141:                          test/test-util.c \\",
          "142:                          test/test-walk-handles.c",
          "143: test_run_tests_LDADD = libuv.la",
          "145: if AIX",
          "146: libuv_la_CFLAGS += -D_ALL_SOURCE -D_XOPEN_SOURCE=500",
          "147: libuv_la_SOURCES += src/unix/aix.c",
          "148: endif",
          "150: if DARWIN",
          "151: include_HEADERS += include/uv-darwin.h",
          "152: libuv_la_CFLAGS += -D_DARWIN_USE_64_BIT_INODE=1",
          "153: libuv_la_SOURCES += src/unix/darwin.c \\",
          "154:                     src/unix/darwin-proctitle.c \\",
          "155:                     src/unix/fsevents.c \\",
          "156:                     src/unix/kqueue.c \\",
          "157:                     src/unix/proctitle.c",
          "158: libuv_la_LDFLAGS += -framework ApplicationServices \\",
          "159:                     -framework CoreServices \\",
          "160:                     -framework Foundation",
          "161: endif",
          "163: if FREEBSD",
          "164: include_HEADERS += include/uv-bsd.h",
          "165: libuv_la_SOURCES += src/unix/freebsd.c src/unix/kqueue.c",
          "166: endif",
          "168: if LINUX",
          "169: include_HEADERS += include/uv-linux.h",
          "170: libuv_la_SOURCES += src/unix/linux-core.c \\",
          "171:                     src/unix/linux-inotify.c \\",
          "172:                     src/unix/linux-syscalls.c \\",
          "173:                     src/unix/linux-syscalls.h \\",
          "174:                     src/unix/proctitle.c",
          "175: endif",
          "177: if NETBSD",
          "178: include_HEADERS += include/uv-bsd.h",
          "179: libuv_la_SOURCES += src/unix/kqueue.c src/unix/netbsd.c",
          "180: endif",
          "182: if OPENBSD",
          "183: include_HEADERS += include/uv-bsd.h",
          "184: libuv_la_SOURCES += src/unix/kqueue.c src/unix/openbsd.c",
          "185: endif",
          "187: if SUNOS",
          "188: include_HEADERS += include/uv-sunos.h",
          "189: libuv_la_CFLAGS += -D__EXTENSIONS__ -D_XOPEN_SOURCE=500",
          "190: libuv_la_SOURCES += src/unix/sunos.c",
          "191: endif",
          "",
          "---------------"
        ],
        "autogen.sh||autogen.sh": [
          "File: autogen.sh -> autogen.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/bin/sh",
          "3: # Copyright (c) 2013, Ben Noordhuis <info@bnoordhuis.nl>",
          "4: #",
          "5: # Permission to use, copy, modify, and/or distribute this software for any",
          "6: # purpose with or without fee is hereby granted, provided that the above",
          "7: # copyright notice and this permission notice appear in all copies.",
          "8: #",
          "9: # THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES",
          "10: # WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF",
          "11: # MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR",
          "12: # ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES",
          "13: # WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN",
          "14: # ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF",
          "15: # OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
          "17: if [ \"$LIBTOOLIZE\" == \"\" ] && [ \"`uname`\" == \"Darwin\" ]; then",
          "18:   LIBTOOLIZE=glibtoolize",
          "19: fi",
          "21: set -ex",
          "22: ${LIBTOOLIZE:-libtoolize}",
          "23: ${ACLOCAL:-aclocal}",
          "24: ${AUTOCONF:-autoconf}",
          "25: ${AUTOMAKE:-automake} --add-missing",
          "",
          "---------------"
        ],
        "build.mk||build.mk": [
          "File: build.mk -> build.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "checksparse.sh||checksparse.sh": [
          "File: checksparse.sh -> checksparse.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: -Wno-do-while",
          "23: -Wno-transparent-union",
          "24: -Iinclude",
          "26: -Isrc",
          "27: \"}",
          "29: SOURCES=\"",
          "32: include/uv.h",
          "33: src/fs-poll.c",
          "34: src/inet.c",
          "",
          "[Removed Lines]",
          "25: -Iinclude/uv-private",
          "30: include/uv-private/tree.h",
          "31: include/uv-private/uv-unix.h",
          "",
          "[Added Lines]",
          "29: include/tree.h",
          "30: include/uv-unix.h",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "172: Darwin)",
          "173:   SPARSE_FLAGS=\"$SPARSE_FLAGS -D__APPLE__=1\"",
          "174:   SOURCES=\"$SOURCES",
          "176:            src/unix/darwin.c",
          "177:            src/unix/kqueue.c",
          "178:            src/unix/fsevents.c\"",
          "",
          "[Removed Lines]",
          "175:            include/uv-private/uv-bsd.h",
          "",
          "[Added Lines]",
          "174:            include/uv-bsd.h",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "180: DragonFly)",
          "181:   SPARSE_FLAGS=\"$SPARSE_FLAGS -D__DragonFly__=1\"",
          "182:   SOURCES=\"$SOURCES",
          "184:            src/unix/kqueue.c",
          "185:            src/unix/freebsd.c\"",
          "186:   ;;",
          "187: FreeBSD)",
          "188:   SPARSE_FLAGS=\"$SPARSE_FLAGS -D__FreeBSD__=1\"",
          "189:   SOURCES=\"$SOURCES",
          "191:            src/unix/kqueue.c",
          "192:            src/unix/freebsd.c\"",
          "193:   ;;",
          "194: Linux)",
          "195:   SPARSE_FLAGS=\"$SPARSE_FLAGS -D__linux__=1\"",
          "196:   SOURCES=\"$SOURCES",
          "198:            src/unix/linux-inotify.c",
          "199:            src/unix/linux-core.c",
          "200:            src/unix/linux-syscalls.c",
          "",
          "[Removed Lines]",
          "183:            include/uv-private/uv-bsd.h",
          "190:            include/uv-private/uv-bsd.h",
          "197:            include/uv-private/uv-linux.h",
          "",
          "[Added Lines]",
          "182:            include/uv-bsd.h",
          "189:            include/uv-bsd.h",
          "196:            include/uv-linux.h",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "203: NetBSD)",
          "204:   SPARSE_FLAGS=\"$SPARSE_FLAGS -D__NetBSD__=1\"",
          "205:   SOURCES=\"$SOURCES",
          "207:            src/unix/kqueue.c",
          "208:            src/unix/netbsd.c\"",
          "209:   ;;",
          "210: OpenBSD)",
          "211:   SPARSE_FLAGS=\"$SPARSE_FLAGS -D__OpenBSD__=1\"",
          "212:   SOURCES=\"$SOURCES",
          "214:            src/unix/kqueue.c",
          "215:            src/unix/openbsd.c\"",
          "216:   ;;",
          "217: SunOS)",
          "218:   SPARSE_FLAGS=\"$SPARSE_FLAGS -D__sun=1\"",
          "219:   SOURCES=\"$SOURCES",
          "221:            src/unix/sunos.c\"",
          "222:   ;;",
          "223: esac",
          "",
          "[Removed Lines]",
          "206:            include/uv-private/uv-bsd.h",
          "213:            include/uv-private/uv-bsd.h",
          "220:            include/uv-private/uv-sunos.h",
          "",
          "[Added Lines]",
          "205:            include/uv-bsd.h",
          "212:            include/uv-bsd.h",
          "219:            include/uv-sunos.h",
          "",
          "---------------"
        ],
        "config-mingw.mk||config-mingw.mk": [
          "File: config-mingw.mk -> config-mingw.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "config-unix.mk||config-unix.mk": [
          "File: config-unix.mk -> config-unix.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # Copyright (c) 2013, Ben Noordhuis <info@bnoordhuis.nl>",
          "2: #",
          "3: # Permission to use, copy, modify, and/or distribute this software for any",
          "4: # purpose with or without fee is hereby granted, provided that the above",
          "5: # copyright notice and this permission notice appear in all copies.",
          "6: #",
          "7: # THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES",
          "8: # WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF",
          "9: # MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR",
          "10: # ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES",
          "11: # WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN",
          "12: # ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF",
          "13: # OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
          "15: AC_PREREQ(2.57)",
          "16: AC_INIT([libuv], [0.11.5], [https://github.com/joyent/libuv/issues])",
          "17: AM_INIT_AUTOMAKE([foreign -Wall -Werror])",
          "18: AM_SILENT_RULES([yes])",
          "19: AC_CONFIG_MACRO_DIR([m4])",
          "20: AC_CANONICAL_HOST",
          "21: AC_ENABLE_SHARED",
          "22: AC_ENABLE_STATIC",
          "23: AC_PROG_CC",
          "24: AM_PROG_AR",
          "25: LT_INIT",
          "26: # TODO(bnoordhuis) Check for -pthread vs. -pthreads",
          "27: AC_CHECK_LIB([dl], [dlopen])",
          "28: AC_CHECK_LIB([kstat], [kstat_lookup])",
          "29: AC_CHECK_LIB([kvm], [kvm_open])",
          "30: AC_CHECK_LIB([nsl], [gethostbyname])",
          "31: AC_CHECK_LIB([perfstat], [perfstat_cpu])",
          "32: AC_CHECK_LIB([pthread], [pthread_mutex_init])",
          "33: AC_CHECK_LIB([rt], [clock_gettime])",
          "34: AC_CHECK_LIB([sendfile], [sendfile])",
          "35: AC_CHECK_LIB([socket], [socket])",
          "36: AC_SYS_LARGEFILE",
          "37: AM_CONDITIONAL([AIX],     [AS_CASE([$host_os], [aix*],     [true], [false])])",
          "38: AM_CONDITIONAL([DARWIN],  [AS_CASE([$host_os], [darwin*],  [true], [false])])",
          "39: AM_CONDITIONAL([FREEBSD], [AS_CASE([$host_os], [freebsd*], [true], [false])])",
          "40: AM_CONDITIONAL([LINUX],   [AS_CASE([$host_os], [linux*],   [true], [false])])",
          "41: AM_CONDITIONAL([NETBSD],  [AS_CASE([$host_os], [netbsd*],  [true], [false])])",
          "42: AM_CONDITIONAL([OPENBSD], [AS_CASE([$host_os], [openbsd*], [true], [false])])",
          "43: AM_CONDITIONAL([SUNOS],   [AS_CASE([$host_os], [solaris*], [true], [false])])",
          "44: AC_CONFIG_FILES([Makefile])",
          "45: AC_OUTPUT",
          "",
          "---------------"
        ],
        "include/uv-private/uv-win.h||include/uv-win.h": [
          "File: include/uv-private/uv-win.h -> include/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: #include <sys/stat.h>",
          "41: #if defined(_MSC_VER) && _MSC_VER < 1600",
          "43: #else",
          "44: # include <stdint.h>",
          "45: #endif",
          "",
          "[Removed Lines]",
          "42: # include \"uv-private/stdint-msvc2008.h\"",
          "",
          "[Added Lines]",
          "42: # include \"stdint-msvc2008.h\"",
          "",
          "---------------"
        ],
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #endif",
          "48: #if defined(_MSC_VER) && _MSC_VER < 1600",
          "50: #else",
          "51: # include <stdint.h>",
          "52: #endif",
          "",
          "[Removed Lines]",
          "49: # include \"uv-private/stdint-msvc2008.h\"",
          "",
          "[Added Lines]",
          "49: # include \"stdint-msvc2008.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60: #if defined(__unix__) || defined(__POSIX__) || \\",
          "61:     defined(__APPLE__) || defined(_AIX)",
          "63: #else",
          "65: #endif",
          "",
          "[Removed Lines]",
          "62: # include \"uv-private/uv-unix.h\"",
          "64: # include \"uv-private/uv-win.h\"",
          "",
          "[Added Lines]",
          "62: # include \"uv-unix.h\"",
          "64: # include \"uv-win.h\"",
          "",
          "---------------"
        ],
        "src/inet.c||src/inet.c": [
          "File: src/inet.c -> src/inet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <string.h>",
          "21: #if defined(_MSC_VER) && _MSC_VER < 1600",
          "23: #else",
          "24: # include <stdint.h>",
          "25: #endif",
          "",
          "[Removed Lines]",
          "22: # include \"uv-private/stdint-msvc2008.h\"",
          "",
          "[Added Lines]",
          "22: # include \"stdint-msvc2008.h\"",
          "",
          "---------------"
        ],
        "src/uv-common.h||src/uv-common.h": [
          "File: src/uv-common.h -> src/uv-common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #include <stddef.h>",
          "33: #if defined(_MSC_VER) && _MSC_VER < 1600",
          "35: #else",
          "36: # include <stdint.h>",
          "37: #endif",
          "",
          "[Removed Lines]",
          "34: # include \"uv-private/stdint-msvc2008.h\"",
          "",
          "[Added Lines]",
          "34: # include \"stdint-msvc2008.h\"",
          "",
          "---------------"
        ],
        "src/win/tty.c||src/win/tty.c": [
          "File: src/win/tty.c -> src/win/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: #include <string.h>",
          "26: #if defined(_MSC_VER) && _MSC_VER < 1600",
          "28: #else",
          "29: # include <stdint.h>",
          "30: #endif",
          "",
          "[Removed Lines]",
          "27: # include \"uv-private/stdint-msvc2008.h\"",
          "",
          "[Added Lines]",
          "27: # include \"stdint-msvc2008.h\"",
          "",
          "---------------"
        ],
        "test/task.h||test/task.h": [
          "File: test/task.h -> test/task.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include <stdlib.h>",
          "29: #if defined(_MSC_VER) && _MSC_VER < 1600",
          "31: #else",
          "32: # include <stdint.h>",
          "33: #endif",
          "",
          "[Removed Lines]",
          "30: # include \"uv-private/stdint-msvc2008.h\"",
          "",
          "[Added Lines]",
          "30: # include \"stdint-msvc2008.h\"",
          "",
          "---------------"
        ],
        "uv.gyp||uv.gyp": [
          "File: uv.gyp -> uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:       'type': '<(library)',",
          "36:       'include_dirs': [",
          "37:         'include',",
          "39:         'src/',",
          "40:       ],",
          "41:       'direct_dependent_settings': {",
          "",
          "[Removed Lines]",
          "38:         'include/uv-private',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:       'sources': [",
          "62:         'common.gypi',",
          "63:         'include/uv.h',",
          "65:         'src/fs-poll.c',",
          "66:         'src/inet.c',",
          "67:         'src/queue.h',",
          "",
          "[Removed Lines]",
          "64:         'include/uv-private/tree.h',",
          "",
          "[Added Lines]",
          "63:         'include/tree.h',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76:             '_GNU_SOURCE',",
          "77:           ],",
          "78:           'sources': [",
          "80:             'src/win/async.c',",
          "81:             'src/win/atomicops-inl.h',",
          "82:             'src/win/core.c',",
          "",
          "[Removed Lines]",
          "79:             'include/uv-private/uv-win.h',",
          "",
          "[Added Lines]",
          "78:             'include/uv-win.h',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "129:             '-Wno-unused-parameter',",
          "130:           ],",
          "131:           'sources': [",
          "137:             'src/unix/async.c',",
          "138:             'src/unix/core.c',",
          "139:             'src/unix/dl.c',",
          "",
          "[Removed Lines]",
          "132:             'include/uv-private/uv-unix.h',",
          "133:             'include/uv-private/uv-linux.h',",
          "134:             'include/uv-private/uv-sunos.h',",
          "135:             'include/uv-private/uv-darwin.h',",
          "136:             'include/uv-private/uv-bsd.h',",
          "",
          "[Added Lines]",
          "131:             'include/uv-unix.h',",
          "132:             'include/uv-linux.h',",
          "133:             'include/uv-sunos.h',",
          "134:             'include/uv-darwin.h',",
          "135:             'include/uv-bsd.h',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb93ea4f179d3ff5ab5fb4612bd4c9a6db9b4e70",
      "candidate_info": {
        "commit_hash": "fb93ea4f179d3ff5ab5fb4612bd4c9a6db9b4e70",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/fb93ea4f179d3ff5ab5fb4612bd4c9a6db9b4e70",
        "files": [
          "src/win/timer.c"
        ],
        "message": "windows: simplify code in uv_timer_again\n\nRemove duplicated code by directly calling uv_timer_stop",
        "before_after_code_files": [
          "src/win/timer.c||src/win/timer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/timer.c||src/win/timer.c": [
          "File: src/win/timer.c -> src/win/timer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "157: int uv_timer_again(uv_timer_t* handle) {",
          "161:   if (!handle->timer_cb) {",
          "162:     return UV_EINVAL;",
          "163:   }",
          "171:   if (handle->repeat) {",
          "180:   }",
          "182:   return 0;",
          "",
          "[Removed Lines]",
          "158:   uv_loop_t* loop = handle->loop;",
          "165:   if (handle->flags & UV_HANDLE_ACTIVE) {",
          "166:     RB_REMOVE(uv_timer_tree_s, &loop->timers, handle);",
          "167:     handle->flags &= ~UV_HANDLE_ACTIVE;",
          "168:     uv__handle_stop(handle);",
          "169:   }",
          "172:     handle->due = get_clamped_due_time(loop->time, handle->repeat);",
          "174:     if (RB_INSERT(uv_timer_tree_s, &loop->timers, handle) != NULL) {",
          "175:       uv_fatal_error(ERROR_INVALID_DATA, \"RB_INSERT\");",
          "176:     }",
          "178:     handle->flags |= UV_HANDLE_ACTIVE;",
          "179:     uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "164:     uv_timer_stop(handle);",
          "165:     uv_timer_start(handle, handle->timer_cb, handle->repeat, handle->repeat);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "359d6678930fbb25e612d290a2ff5114e10eda6f",
      "candidate_info": {
        "commit_hash": "359d6678930fbb25e612d290a2ff5114e10eda6f",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/359d6678930fbb25e612d290a2ff5114e10eda6f",
        "files": [
          "src/unix/aix.c",
          "src/unix/async.c",
          "src/unix/core.c",
          "src/unix/internal.h",
          "src/unix/kqueue.c",
          "src/unix/linux-core.c",
          "src/unix/linux-inotify.c",
          "src/unix/loop.c",
          "src/unix/pipe.c",
          "src/unix/process.c",
          "src/unix/signal.c",
          "src/unix/stream.c",
          "src/unix/sunos.c",
          "src/unix/tcp.c",
          "src/unix/udp.c",
          "test/test-stdio-over-pipes.c"
        ],
        "message": "unix: sanity-check fds before closing\n\nEnsure that close() system calls don't close stdio file descriptors\nbecause that is almost never the intention.\n\nThis is also a partial workaround for a kernel bug that seems to affect\nall Linux kernels when stdin is a pipe that gets closed: fd 0 keeps\nsignalling EPOLLHUP but a subsequent call to epoll_ctl(EPOLL_CTL_DEL)\nfails with EBADF.  See joyent/node#6271 for details and a test case.",
        "before_after_code_files": [
          "src/unix/aix.c||src/unix/aix.c",
          "src/unix/async.c||src/unix/async.c",
          "src/unix/core.c||src/unix/core.c",
          "src/unix/internal.h||src/unix/internal.h",
          "src/unix/kqueue.c||src/unix/kqueue.c",
          "src/unix/linux-core.c||src/unix/linux-core.c",
          "src/unix/linux-inotify.c||src/unix/linux-inotify.c",
          "src/unix/loop.c||src/unix/loop.c",
          "src/unix/pipe.c||src/unix/pipe.c",
          "src/unix/process.c||src/unix/process.c",
          "src/unix/signal.c||src/unix/signal.c",
          "src/unix/stream.c||src/unix/stream.c",
          "src/unix/sunos.c||src/unix/sunos.c",
          "src/unix/tcp.c||src/unix/tcp.c",
          "src/unix/udp.c||src/unix/udp.c",
          "test/test-stdio-over-pipes.c||test/test-stdio-over-pipes.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [
            "src/unix/process.c||src/unix/process.c"
          ],
          "candidate": [
            "src/unix/process.c||src/unix/process.c"
          ]
        }
      },
      "candidate_diff": {
        "src/unix/aix.c||src/unix/aix.c": [
          "File: src/unix/aix.c -> src/unix/aix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:     return fd;",
          "87:   res = read(fd, &ps, sizeof(ps));",
          "89:   if (res < 0)",
          "90:     return res;",
          "",
          "[Removed Lines]",
          "88:   close(fd);",
          "",
          "[Added Lines]",
          "88:   uv__close(fd);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180:     err = 0;",
          "181:   }",
          "184:   return err;",
          "185: }",
          "",
          "[Removed Lines]",
          "182:   close(fd);",
          "",
          "[Added Lines]",
          "182:   uv__close(fd);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "291:   }",
          "293:   if (ioctl(sockfd, SIOCGSIZIFCONF, &size) == -1) {",
          "295:     return -ENOSYS;",
          "296:   }",
          "298:   ifc.ifc_req = (struct ifreq*)malloc(size);",
          "299:   ifc.ifc_len = size;",
          "300:   if (ioctl(sockfd, SIOCGIFCONF, &ifc) == -1) {",
          "302:     return -ENOSYS;",
          "303:   }",
          "",
          "[Removed Lines]",
          "294:     close(sockfd);",
          "301:     close(sockfd);",
          "",
          "[Added Lines]",
          "294:     uv__close(sockfd);",
          "301:     uv__close(sockfd);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "318:     memcpy(flg.ifr_name, p->ifr_name, sizeof(flg.ifr_name));",
          "319:     if (ioctl(sockfd, SIOCGIFFLAGS, &flg) == -1) {",
          "321:       return -ENOSYS;",
          "322:     }",
          "",
          "[Removed Lines]",
          "320:       close(sockfd);",
          "",
          "[Added Lines]",
          "320:       uv__close(sockfd);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "332:     malloc(*count * sizeof(uv_interface_address_t));",
          "333:   if (!(*addresses)) {",
          "335:     return -ENOMEM;",
          "336:   }",
          "337:   address = *addresses;",
          "",
          "[Removed Lines]",
          "334:     close(sockfd);",
          "",
          "[Added Lines]",
          "334:     uv__close(sockfd);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "349:     memcpy(flg.ifr_name, p->ifr_name, sizeof(flg.ifr_name));",
          "350:     if (ioctl(sockfd, SIOCGIFFLAGS, &flg) == -1) {",
          "352:       return -ENOSYS;",
          "353:     }",
          "",
          "[Removed Lines]",
          "351:       close(sockfd);",
          "",
          "[Added Lines]",
          "351:       uv__close(sockfd);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "375: #undef ADDR_SIZE",
          "378:   return 0;",
          "379: }",
          "",
          "[Removed Lines]",
          "377:   close(sockfd);",
          "",
          "[Added Lines]",
          "377:   uv__close(sockfd);",
          "",
          "---------------"
        ],
        "src/unix/async.c||src/unix/async.c": [
          "File: src/unix/async.c -> src/unix/async.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:     return;",
          "239:   uv__io_stop(loop, &wa->io_watcher, UV__POLLIN);",
          "241:   wa->io_watcher.fd = -1;",
          "243:   if (wa->wfd != -1) {",
          "245:     wa->wfd = -1;",
          "246:   }",
          "247: }",
          "",
          "[Removed Lines]",
          "240:   close(wa->io_watcher.fd);",
          "244:     close(wa->wfd);",
          "",
          "[Added Lines]",
          "240:   uv__close(wa->io_watcher.fd);",
          "244:     uv__close(wa->wfd);",
          "",
          "---------------"
        ],
        "src/unix/core.c||src/unix/core.c": [
          "File: src/unix/core.c -> src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "340:     err = uv__cloexec(sockfd, 1);",
          "342:   if (err) {",
          "344:     return err;",
          "345:   }",
          "",
          "[Removed Lines]",
          "343:     close(sockfd);",
          "",
          "[Added Lines]",
          "343:     uv__close(sockfd);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "397:       err = uv__nonblock(peerfd, 1);",
          "399:     if (err) {",
          "401:       return err;",
          "402:     }",
          "",
          "[Removed Lines]",
          "400:       close(peerfd);",
          "",
          "[Added Lines]",
          "400:       uv__close(peerfd);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "406: }",
          "409: #if defined(__linux__) || defined(__FreeBSD__) || defined(__APPLE__)",
          "411: int uv__nonblock(int fd, int set) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "409: int uv__close(int fd) {",
          "410:   int saved_errno;",
          "411:   int rc;",
          "416:   saved_errno = errno;",
          "417:   rc = close(fd);",
          "418:   if (rc == -1) {",
          "419:     rc = -errno;",
          "420:     if (rc == -EINTR)",
          "422:     errno = saved_errno;",
          "423:   }",
          "425:   return rc;",
          "426: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "515:   err = uv__cloexec(fd, 1);",
          "516:   if (err) {",
          "518:     return err;",
          "519:   }",
          "",
          "[Removed Lines]",
          "517:     close(fd);",
          "",
          "[Added Lines]",
          "537:     uv__close(fd);",
          "",
          "---------------"
        ],
        "src/unix/internal.h||src/unix/internal.h": [
          "File: src/unix/internal.h -> src/unix/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "132: int uv__nonblock(int fd, int set);",
          "133: int uv__cloexec(int fd, int set);",
          "134: int uv__socket(int domain, int type, int protocol);",
          "135: int uv__dup(int fd);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133: int uv__close(int fd);",
          "",
          "---------------"
        ],
        "src/unix/kqueue.c||src/unix/kqueue.c": [
          "File: src/unix/kqueue.c -> src/unix/kqueue.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "354:   free(handle->filename);",
          "355:   handle->filename = NULL;",
          "358:   handle->event_watcher.fd = -1;",
          "359: }",
          "",
          "[Removed Lines]",
          "357:   close(handle->event_watcher.fd);",
          "",
          "[Added Lines]",
          "357:   uv__close(handle->event_watcher.fd);",
          "",
          "---------------"
        ],
        "src/unix/linux-core.c||src/unix/linux-core.c": [
          "File: src/unix/linux-core.c -> src/unix/linux-core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98: void uv__platform_loop_delete(uv_loop_t* loop) {",
          "99:   if (loop->inotify_fd == -1) return;",
          "100:   uv__io_stop(loop, &loop->inotify_read_watcher, UV__POLLIN);",
          "102:   loop->inotify_fd = -1;",
          "103: }",
          "",
          "[Removed Lines]",
          "101:   close(loop->inotify_fd);",
          "",
          "[Added Lines]",
          "101:   uv__close(loop->inotify_fd);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "309:     n = read(fd, buf, sizeof(buf) - 1);",
          "310:   while (n == -1 && errno == EINTR);",
          "313:   if (n == -1)",
          "314:     return -errno;",
          "315:   buf[n] = '\\0';",
          "",
          "[Removed Lines]",
          "312:   SAVE_ERRNO(close(fd));",
          "",
          "[Added Lines]",
          "312:   uv__close(fd);",
          "",
          "---------------"
        ],
        "src/unix/linux-inotify.c||src/unix/linux-inotify.c": [
          "File: src/unix/linux-inotify.c -> src/unix/linux-inotify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:     err = uv__nonblock(fd, 1);",
          "83:   if (err) {",
          "85:     return err;",
          "86:   }",
          "",
          "[Removed Lines]",
          "84:     close(fd);",
          "",
          "[Added Lines]",
          "84:     uv__close(fd);",
          "",
          "---------------"
        ],
        "src/unix/loop.c||src/unix/loop.c": [
          "File: src/unix/loop.c -> src/unix/loop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:   uv__async_stop(loop, &loop->async_watcher);",
          "138:   if (loop->emfile_fd != -1) {",
          "140:     loop->emfile_fd = -1;",
          "141:   }",
          "143:   if (loop->backend_fd != -1) {",
          "145:     loop->backend_fd = -1;",
          "146:   }",
          "",
          "[Removed Lines]",
          "139:     close(loop->emfile_fd);",
          "144:     close(loop->backend_fd);",
          "",
          "[Added Lines]",
          "139:     uv__close(loop->emfile_fd);",
          "144:     uv__close(loop->backend_fd);",
          "",
          "---------------"
        ],
        "src/unix/pipe.c||src/unix/pipe.c": [
          "File: src/unix/pipe.c -> src/unix/pipe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94: out:",
          "95:   if (bound) {",
          "97:     assert(pipe_fname != NULL);",
          "98:     unlink(pipe_fname);",
          "99:   }",
          "101:   free((void*)pipe_fname);",
          "102:   return err;",
          "103: }",
          "",
          "[Removed Lines]",
          "100:   close(sockfd);",
          "",
          "[Added Lines]",
          "100:   uv__close(sockfd);",
          "",
          "---------------"
        ],
        "src/unix/process.c||src/unix/process.c": [
          "File: src/unix/process.c -> src/unix/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:   if (!(container->flags & UV_CREATE_PIPE) || pipefds[0] < 0)",
          "232:     return 0;",
          "235:     if (errno != EINTR && errno != EINPROGRESS)",
          "236:       abort();",
          "",
          "[Removed Lines]",
          "234:   if (close(pipefds[1]))",
          "",
          "[Added Lines]",
          "234:   if (uv__close(pipefds[1]))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "285:     close_fd = pipes[fd][0];",
          "286:     use_fd = pipes[fd][1];",
          "290:     else if (fd >= 3)",
          "291:       continue;",
          "292:     else {",
          "",
          "[Removed Lines]",
          "288:     if (use_fd >= 0)",
          "289:       close(close_fd);",
          "",
          "[Added Lines]",
          "288:     if (use_fd >= 0) {",
          "289:       if (close_fd != -1)",
          "290:         uv__close(close_fd);",
          "291:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "306:       uv__cloexec(use_fd, 0);",
          "307:     else {",
          "308:       dup2(use_fd, fd);",
          "310:     }",
          "312:     if (fd <= 2)",
          "",
          "[Removed Lines]",
          "309:       close(use_fd);",
          "",
          "[Added Lines]",
          "311:       uv__close(use_fd);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "415:   if (pid == -1) {",
          "416:     err = -errno;",
          "419:     goto error;",
          "420:   }",
          "",
          "[Removed Lines]",
          "417:     close(signal_pipe[0]);",
          "418:     close(signal_pipe[1]);",
          "",
          "[Added Lines]",
          "419:     uv__close(signal_pipe[0]);",
          "420:     uv__close(signal_pipe[1]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "424:     abort();",
          "425:   }",
          "429:   process->errorno = 0;",
          "430:   do",
          "",
          "[Removed Lines]",
          "427:   close(signal_pipe[1]);",
          "",
          "[Added Lines]",
          "429:   uv__close(signal_pipe[1]);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "440:   else",
          "441:     abort();",
          "445:   for (i = 0; i < options->stdio_count; i++) {",
          "446:     err = uv__process_open_stream(options->stdio + i, pipes[i], i == 0);",
          "",
          "[Removed Lines]",
          "443:   close(signal_pipe[0]);",
          "",
          "[Added Lines]",
          "445:   uv__close(signal_pipe[0]);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "466: error:",
          "467:   for (i = 0; i < stdio_count; i++) {",
          "470:   }",
          "471:   free(pipes);",
          "",
          "[Removed Lines]",
          "468:     close(pipes[i][0]);",
          "469:     close(pipes[i][1]);",
          "",
          "[Added Lines]",
          "470:     uv__close(pipes[i][0]);",
          "471:     uv__close(pipes[i][1]);",
          "",
          "---------------"
        ],
        "src/unix/signal.c||src/unix/signal.c": [
          "File: src/unix/signal.c -> src/unix/signal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "240:   }",
          "242:   if (loop->signal_pipefd[0] != -1) {",
          "244:     loop->signal_pipefd[0] = -1;",
          "245:   }",
          "247:   if (loop->signal_pipefd[1] != -1) {",
          "249:     loop->signal_pipefd[1] = -1;",
          "250:   }",
          "251: }",
          "",
          "[Removed Lines]",
          "243:     close(loop->signal_pipefd[0]);",
          "248:     close(loop->signal_pipefd[1]);",
          "",
          "[Added Lines]",
          "243:     uv__close(loop->signal_pipefd[0]);",
          "248:     uv__close(loop->signal_pipefd[1]);",
          "",
          "---------------"
        ],
        "src/unix/stream.c||src/unix/stream.c": [
          "File: src/unix/stream.c -> src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:   err = uv__cloexec(fd, 1);",
          "87:   if (err) {",
          "89:     return err;",
          "90:   }",
          "",
          "[Removed Lines]",
          "88:     close(fd);",
          "",
          "[Added Lines]",
          "88:     uv__close(fd);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "309:   timeout.tv_nsec = 1;",
          "311:   ret = kevent(kq, filter, 1, events, 1, &timeout);",
          "314:   if (ret == -1)",
          "315:     return -errno;",
          "",
          "[Removed Lines]",
          "312:   SAVE_ERRNO(close(kq));",
          "",
          "[Added Lines]",
          "312:   uv__close(kq);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "357:   return 0;",
          "359: fatal4:",
          "362:   s->fake_fd = -1;",
          "363:   s->int_fd = -1;",
          "364: fatal3:",
          "",
          "[Removed Lines]",
          "360:   close(s->fake_fd);",
          "361:   close(s->int_fd);",
          "",
          "[Added Lines]",
          "360:   uv__close(s->fake_fd);",
          "361:   uv__close(s->int_fd);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "467:   if (loop->emfile_fd == -1)",
          "468:     return -EMFILE;",
          "472:   for (;;) {",
          "473:     fd = uv__accept(accept_fd);",
          "475:     if (fd != -1) {",
          "477:       continue;",
          "478:     }",
          "",
          "[Removed Lines]",
          "470:   close(loop->emfile_fd);",
          "476:       close(fd);",
          "",
          "[Added Lines]",
          "470:   uv__close(loop->emfile_fd);",
          "476:       uv__close(fd);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "572:                             UV_STREAM_READABLE | UV_STREAM_WRITABLE);",
          "573:       if (err) {",
          "576:         server->accepted_fd = -1;",
          "577:         return err;",
          "578:       }",
          "",
          "[Removed Lines]",
          "575:         close(server->accepted_fd);",
          "",
          "[Added Lines]",
          "575:         uv__close(server->accepted_fd);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "581:     case UV_UDP:",
          "582:       err = uv_udp_open((uv_udp_t*) client, server->accepted_fd);",
          "583:       if (err) {",
          "585:         server->accepted_fd = -1;",
          "586:         return err;",
          "587:       }",
          "",
          "[Removed Lines]",
          "584:         close(server->accepted_fd);",
          "",
          "[Added Lines]",
          "584:         uv__close(server->accepted_fd);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1424:     uv_thread_join(&s->thread);",
          "1425:     uv_sem_destroy(&s->close_sem);",
          "1426:     uv_sem_destroy(&s->async_sem);",
          "1429:     uv_close((uv_handle_t*) &s->async, uv__stream_osx_cb_close);",
          "1431:     handle->select = NULL;",
          "",
          "[Removed Lines]",
          "1427:     close(s->fake_fd);",
          "1428:     close(s->int_fd);",
          "",
          "[Added Lines]",
          "1427:     uv__close(s->fake_fd);",
          "1428:     uv__close(s->int_fd);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1436:   uv_read_stop(handle);",
          "1437:   uv__handle_stop(handle);",
          "1444:     handle->accepted_fd = -1;",
          "1445:   }",
          "",
          "[Removed Lines]",
          "1439:   close(handle->io_watcher.fd);",
          "1440:   handle->io_watcher.fd = -1;",
          "1442:   if (handle->accepted_fd >= 0) {",
          "1443:     close(handle->accepted_fd);",
          "",
          "[Added Lines]",
          "1439:   if (handle->io_watcher.fd != -1) {",
          "1441:     if (handle->io_watcher.fd > STDERR_FILENO)",
          "1442:       uv__close(handle->io_watcher.fd);",
          "1443:     handle->io_watcher.fd = -1;",
          "1444:   }",
          "1446:   if (handle->accepted_fd != -1) {",
          "1447:     uv__close(handle->accepted_fd);",
          "",
          "---------------"
        ],
        "src/unix/sunos.c||src/unix/sunos.c": [
          "File: src/unix/sunos.c -> src/unix/sunos.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:   err = uv__cloexec(fd, 1);",
          "77:   if (err) {",
          "79:     return err;",
          "80:   }",
          "81:   loop->backend_fd = fd;",
          "",
          "[Removed Lines]",
          "78:     close(fd);",
          "",
          "[Added Lines]",
          "78:     uv__close(fd);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87: void uv__platform_loop_delete(uv_loop_t* loop) {",
          "88:   if (loop->fs_fd != -1) {",
          "90:     loop->fs_fd = -1;",
          "91:   }",
          "93:   if (loop->backend_fd != -1) {",
          "95:     loop->backend_fd = -1;",
          "96:   }",
          "97: }",
          "",
          "[Removed Lines]",
          "89:     close(loop->fs_fd);",
          "94:     close(loop->backend_fd);",
          "",
          "[Added Lines]",
          "89:     uv__close(loop->fs_fd);",
          "94:     uv__close(loop->backend_fd);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "452:     err = 0;",
          "453:   }",
          "456:   return err;",
          "457: }",
          "",
          "[Removed Lines]",
          "454:   close(fd);",
          "",
          "[Added Lines]",
          "454:   uv__close(fd);",
          "",
          "---------------"
        ],
        "src/unix/tcp.c||src/unix/tcp.c": [
          "File: src/unix/tcp.c -> src/unix/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:   err = uv__stream_open((uv_stream_t*) handle, sockfd, flags);",
          "50:   if (err) {",
          "52:     return err;",
          "53:   }",
          "",
          "[Removed Lines]",
          "51:     close(sockfd);",
          "",
          "[Added Lines]",
          "51:     uv__close(sockfd);",
          "",
          "---------------"
        ],
        "src/unix/udp.c||src/unix/udp.c": [
          "File: src/unix/udp.c -> src/unix/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: void uv__udp_close(uv_udp_t* handle) {",
          "41:   uv__io_close(handle->loop, &handle->io_watcher);",
          "42:   uv__handle_stop(handle);",
          "45: }",
          "",
          "[Removed Lines]",
          "43:   close(handle->io_watcher.fd);",
          "44:   handle->io_watcher.fd = -1;",
          "",
          "[Added Lines]",
          "44:   if (handle->io_watcher.fd != -1) {",
          "45:     uv__close(handle->io_watcher.fd);",
          "46:     handle->io_watcher.fd = -1;",
          "47:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "337:   return 0;",
          "339: out:",
          "341:   handle->io_watcher.fd = -1;",
          "342:   return err;",
          "343: }",
          "",
          "[Removed Lines]",
          "340:   close(handle->io_watcher.fd);",
          "",
          "[Added Lines]",
          "343:   uv__close(handle->io_watcher.fd);",
          "",
          "---------------"
        ],
        "test/test-stdio-over-pipes.c||test/test-stdio-over-pipes.c": [
          "File: test/test-stdio-over-pipes.c -> test/test-stdio-over-pipes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: static void close_cb(uv_handle_t* handle) {",
          "47:   close_cb_called++;",
          "48: }",
          "",
          "[Removed Lines]",
          "46:   printf(\"close_cb\\n\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7e4b31444c94623060979126e29648c0b940aec",
      "candidate_info": {
        "commit_hash": "c7e4b31444c94623060979126e29648c0b940aec",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/c7e4b31444c94623060979126e29648c0b940aec",
        "files": [
          "src/win/process.c",
          "test/test-list.h",
          "test/test-spawn.c"
        ],
        "message": "windows: read the PATH env var of the child\n\nThe unix and windows process implementations diverge in their behavior\nwhen dealing with subprocesses that are spawned with a relative path.\nWith unix the *child's* PATH environment variable is read, whereas\nwith windows the *parent's* environment variable is read.\n\nThis commit brings the two implementation in line with respect to\ntheir behavior of reading PATH by having both read the *child's* PATH\nenvironment variable. This involves looking into the user-provided\nenvironment on windows and extracting the PATH variable specifically\nso it can be inspected later on.",
        "before_after_code_files": [
          "src/win/process.c||src/win/process.c",
          "test/test-list.h||test/test-list.h",
          "test/test-spawn.c||test/test-spawn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/process.c||src/win/process.c": [
          "File: src/win/process.c -> src/win/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "813:   return 0;",
          "814: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "822: static WCHAR* find_path(WCHAR *env) {",
          "823:   for (; env != NULL && *env != 0; env += wcslen(env) + 1) {",
          "824:     if (wcsncmp(env, L\"PATH=\", 5) == 0)",
          "825:       return &env[5];",
          "826:   }",
          "828:   return NULL;",
          "829: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "910:              const uv_process_options_t* options) {",
          "911:   int i;",
          "912:   int err = 0;",
          "914:   BOOL result;",
          "915:   WCHAR* application_path = NULL, *application = NULL, *arguments = NULL,",
          "",
          "[Removed Lines]",
          "913:   WCHAR* path = NULL;",
          "",
          "[Added Lines]",
          "927:   WCHAR* path = NULL, *alloc_path = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "984:   }",
          "988:     DWORD path_len, r;",
          "990:     path_len = GetEnvironmentVariableW(L\"PATH\", NULL, 0);",
          "",
          "[Removed Lines]",
          "987:   {",
          "",
          "[Added Lines]",
          "1001:   path = find_path(env);",
          "1002:   if (path == NULL) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "993:       goto done;",
          "994:     }",
          "998:       err = ERROR_OUTOFMEMORY;",
          "999:       goto done;",
          "1000:     }",
          "1002:     r = GetEnvironmentVariableW(L\"PATH\", path, path_len);",
          "1003:     if (r == 0 || r >= path_len) {",
          "",
          "[Removed Lines]",
          "996:     path = (WCHAR*) malloc(path_len * sizeof(WCHAR));",
          "997:     if (path == NULL) {",
          "",
          "[Added Lines]",
          "1011:     alloc_path = (WCHAR*) malloc(path_len * sizeof(WCHAR));",
          "1012:     if (alloc_path == NULL) {",
          "1016:     path = alloc_path;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1131:   free(arguments);",
          "1132:   free(cwd);",
          "1133:   free(env);",
          "1136:   if (process->child_stdio_buffer != NULL) {",
          "",
          "[Removed Lines]",
          "1134:   free(path);",
          "",
          "[Added Lines]",
          "1150:   free(alloc_path);",
          "",
          "---------------"
        ],
        "test/test-list.h||test/test-list.h": [
          "File: test/test-list.h -> test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "192: TEST_DECLARE   (spawn_stdout_and_stderr_to_file)",
          "193: TEST_DECLARE   (spawn_auto_unref)",
          "194: TEST_DECLARE   (spawn_closed_process_io)",
          "195: TEST_DECLARE   (fs_poll)",
          "196: TEST_DECLARE   (fs_poll_getpath)",
          "197: TEST_DECLARE   (kill)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195: TEST_DECLARE   (spawn_reads_child_path)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "520:   TEST_ENTRY  (spawn_stdout_and_stderr_to_file)",
          "521:   TEST_ENTRY  (spawn_auto_unref)",
          "522:   TEST_ENTRY  (spawn_closed_process_io)",
          "523:   TEST_ENTRY  (fs_poll)",
          "524:   TEST_ENTRY  (fs_poll_getpath)",
          "525:   TEST_ENTRY  (kill)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "524:   TEST_ENTRY  (spawn_reads_child_path)",
          "",
          "---------------"
        ],
        "test/test-spawn.c||test/test-spawn.c": [
          "File: test/test-spawn.c -> test/test-spawn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1291:   return 0;",
          "1292: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1295: TEST_IMPL(spawn_reads_child_path) {",
          "1296:   int r;",
          "1297:   int len;",
          "1298:   char path[1024];",
          "1299:   char *env[2] = {path, NULL};",
          "1303:   init_process_options(\"spawn_helper1\", exit_cb);",
          "1304:   options.file = \"run-tests\";",
          "1305:   args[0] = \"run-tests\";",
          "1308:   for (len = strlen(exepath);",
          "1309:        exepath[len - 1] != '/' && exepath[len - 1] != '\\\\';",
          "1310:        len--);",
          "1311:   exepath[len] = 0;",
          "1312:   strcpy(path, \"PATH=\");",
          "1313:   strcpy(path + 5, exepath);",
          "1315:   options.env = env;",
          "1317:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "1318:   ASSERT(r == 0);",
          "1320:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "1321:   ASSERT(r == 0);",
          "1323:   ASSERT(exit_cb_called == 1);",
          "1324:   ASSERT(close_cb_called == 1);",
          "1326:   MAKE_VALGRIND_HAPPY();",
          "1327:   return 0;",
          "1328: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}