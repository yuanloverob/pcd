{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "42be2ad30bad38f15a4c33956d6fe2b9c4b00989",
      "candidate_info": {
        "commit_hash": "42be2ad30bad38f15a4c33956d6fe2b9c4b00989",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/42be2ad30bad38f15a4c33956d6fe2b9c4b00989",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/in.test"
        ],
        "message": "Make sure the affinity of the RHS of an IN operator does not affect the outcome even if the RHS expression contains a COLLATE clause. Ticket [57353f8243c637c0]\n\nFossilOrigin-Name: 0f748fe58bbbb7ce3f30303da25ec811b2bbce249549aa9c7927979ac5b38013",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/in.test||test/in.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d4755aca4b435eed62b54af84013f7f176d3fa5b7b1c243555d59de5749fcde5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: char sqlite3ExprAffinity(Expr *pExpr){",
          "46:   int op;",
          "48:   if( pExpr->flags & EP_Generic ) return 0;",
          "49:   op = pExpr->op;",
          "50:   if( op==TK_SELECT ){",
          "51:     assert( pExpr->flags&EP_xIsSelect );",
          "",
          "[Removed Lines]",
          "47:   pExpr = sqlite3ExprSkipCollate(pExpr);",
          "",
          "[Added Lines]",
          "48:   pExpr = sqlite3ExprSkipCollate(pExpr);",
          "",
          "---------------"
        ],
        "test/in.test||test/in.test": [
          "File: test/in.test -> test/in.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "734:   ORDER BY a DESC, b;",
          "735: } {}",
          "739: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "737: # 2019-06-11",
          "738: # https://www.sqlite.org/src/info/57353f8243c637c0",
          "739: #",
          "740: do_execsql_test in-17.1 {",
          "741:   SELECT 1 IN ('1');",
          "742: } 0",
          "743: do_execsql_test in-17.2 {",
          "744:   SELECT 1 IN ('1' COLLATE nocase);",
          "745: } 0",
          "746: do_execsql_test in-17.3 {",
          "747:   SELECT 1 IN (CAST('1' AS text));",
          "748: } 0",
          "749: do_execsql_test in-17.4 {",
          "750:   SELECT 1 IN (CAST('1' AS text) COLLATE nocase);",
          "751: } 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a9c6bcc158633596ea7c7d9778c4e7671fd183b",
      "candidate_info": {
        "commit_hash": "5a9c6bcc158633596ea7c7d9778c4e7671fd183b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5a9c6bcc158633596ea7c7d9778c4e7671fd183b",
        "files": [
          "Makefile.in",
          "main.mk",
          "manifest",
          "manifest.uuid",
          "tool/index_usage.c"
        ],
        "message": "Enhancements to the index_usage utility program.\n\nFossilOrigin-Name: 19c739b4a8a43d894e37a99fa34838f3e3fa1fe0d019aefbc33f1d38d76af1a4",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "main.mk||main.mk",
          "manifest.uuid||manifest.uuid",
          "tool/index_usage.c||tool/index_usage.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1335:  $(LTLINK) -o $@ $(TOP)/tool/showshm.c",
          "1337: index_usage$(TEXE): $(TOP)/tool/index_usage.c sqlite3.lo",
          "1340: changeset$(TEXE): $(TOP)/ext/session/changeset.c sqlite3.lo",
          "1341:  $(LTLINK) -o $@ $(TOP)/ext/session/changeset.c sqlite3.lo $(TLIBS)",
          "",
          "[Removed Lines]",
          "1338:  $(LTLINK) -o $@ $(TOP)/tool/index_usage.c sqlite3.lo $(TLIBS)",
          "",
          "[Added Lines]",
          "1338:  $(LTLINK) $(SHELL_OPT) -o $@ $(TOP)/tool/index_usage.c sqlite3.lo $(TLIBS)",
          "",
          "---------------"
        ],
        "main.mk||main.mk": [
          "File: main.mk -> main.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "1021:  $(TCC) -o showshm$(EXE) $(TOP)/tool/showshm.c",
          "1023: index_usage$(EXE): $(TOP)/tool/index_usage.c sqlite3.o",
          "1025:   $(TOP)/tool/index_usage.c sqlite3.o $(THREADLIB)",
          "1027: changeset$(EXE): $(TOP)/ext/session/changeset.c sqlite3.o",
          "",
          "[Removed Lines]",
          "1024:  $(TCC) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_DEPRECATED -o index_usage$(EXE) \\",
          "",
          "[Added Lines]",
          "1024:  $(TCC) -DSQLITE_THREADSAFE=0 -DSQLITE_OMIT_DEPRECATED $(SHELL_OPTS) -o index_usage$(EXE) \\",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 760d14374d40bcd9ce3a89771c18dc236c9728553c4747c9b7452ee7b24f4140",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/index_usage.c||tool/index_usage.c": [
          "File: tool/index_usage.c -> tool/index_usage.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:            argv[2], sqlite3_errmsg(db));",
          "91:     goto errorOut;",
          "92:   }",
          "94:                           -1, &pStmt, 0);",
          "95:   if( rc ){",
          "96:     printf(\"Cannot read the SQLLOG table in the LOG database \\\"%s\\\" - %s\\n\",",
          "",
          "[Removed Lines]",
          "93:   rc = sqlite3_prepare_v2(db, \"SELECT sql, rowid FROM log.sqllog\",",
          "",
          "[Added Lines]",
          "93:   rc = sqlite3_prepare_v2(db,",
          "94:      \"SELECT sql, rowid FROM log.sqllog\"",
          "95:      \" WHERE upper(substr(sql,1,5)) NOT IN ('BEGIN','COMMI','ROLLB','PRAGM')\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "821afa44c13e1bbe0de726dbace1145bf38b057f",
      "candidate_info": {
        "commit_hash": "821afa44c13e1bbe0de726dbace1145bf38b057f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/821afa44c13e1bbe0de726dbace1145bf38b057f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/main.c",
          "test/collate1.test"
        ],
        "message": "Fix the implementation of the built-in RTRIM collating sequence so that it works for control characters at the end of the string. Ticket [f1580ba1b574e9e9]\n\nFossilOrigin-Name: 86fa0087cd1f5c79ed51b99a226ec2eef5b0fa0a23981d469bec0e02fadf2a68",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/main.c||src/main.c",
          "test/collate1.test||test/collate1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b4a9e09e60213ccff925d09f0b6e549e2a3e3862856c710f108779e2867dec76",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "875:   return rc;",
          "876: }",
          "894: static int binCollFunc(",
          "896:   int nKey1, const void *pKey1,",
          "897:   int nKey2, const void *pKey2",
          "898: ){",
          "899:   int rc, n;",
          "900:   n = nKey1<nKey2 ? nKey1 : nKey2;",
          "",
          "[Removed Lines]",
          "882: static int allSpaces(const char *z, int n){",
          "883:   while( n>0 && z[n-1]==' ' ){ n--; }",
          "884:   return n==0;",
          "885: }",
          "895:   void *padFlag,",
          "",
          "[Added Lines]",
          "883:   void *NotUsed,",
          "888:   UNUSED_PARAMETER(NotUsed);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "904:   assert( pKey1 && pKey2 );",
          "905:   rc = memcmp(pKey1, pKey2, n);",
          "906:   if( rc==0 ){",
          "919:   }",
          "920:   return rc;",
          "921: }",
          "926: int sqlite3IsBinary(const CollSeq *p){",
          "930: }",
          "",
          "[Removed Lines]",
          "907:     if( padFlag",
          "908:      && allSpaces(((char*)pKey1)+n, nKey1-n)",
          "909:      && allSpaces(((char*)pKey2)+n, nKey2-n)",
          "910:     ){",
          "916:     }else{",
          "917:       rc = nKey1 - nKey2;",
          "918:     }",
          "927:   assert( p==0 || p->xCmp!=binCollFunc || p->pUser!=0",
          "928:             || strcmp(p->zName,\"BINARY\")==0 );",
          "929:   return p==0 || (p->xCmp==binCollFunc && p->pUser==0);",
          "",
          "[Added Lines]",
          "896:     rc = nKey1 - nKey2;",
          "905: static int rtrimCollFunc(",
          "906:   void *pUser,",
          "907:   int nKey1, const void *pKey1,",
          "908:   int nKey2, const void *pKey2",
          "909: ){",
          "910:   const u8 *pK1 = (const u8*)pKey1;",
          "911:   const u8 *pK2 = (const u8*)pKey2;",
          "912:   while( nKey1 && pK1[nKey1-1]==' ' ) nKey1--;",
          "913:   while( nKey2 && pK2[nKey2-1]==' ' ) nKey2--;",
          "914:   return binCollFunc(pUser, nKey1, pKey1, nKey2, pKey2);",
          "915: }",
          "921:   assert( p==0 || p->xCmp!=binCollFunc || strcmp(p->zName,\"BINARY\")==0 );",
          "922:   return p==0 || p->xCmp==binCollFunc;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3128:   createCollation(db, sqlite3StrBINARY, SQLITE_UTF16BE, 0, binCollFunc, 0);",
          "3129:   createCollation(db, sqlite3StrBINARY, SQLITE_UTF16LE, 0, binCollFunc, 0);",
          "3130:   createCollation(db, \"NOCASE\", SQLITE_UTF8, 0, nocaseCollatingFunc, 0);",
          "3132:   if( db->mallocFailed ){",
          "3133:     goto opendb_out;",
          "3134:   }",
          "",
          "[Removed Lines]",
          "3131:   createCollation(db, \"RTRIM\", SQLITE_UTF8, (void*)1, binCollFunc, 0);",
          "",
          "[Added Lines]",
          "3124:   createCollation(db, \"RTRIM\", SQLITE_UTF8, 0, rtrimCollFunc, 0);",
          "",
          "---------------"
        ],
        "test/collate1.test||test/collate1.test": [
          "File: test/collate1.test -> test/collate1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "400:     ORDER BY 1 COLLATE binary COLLATE binary COLLATE binary COLLATE nocase;",
          "401: } {abc DEF}",
          "404: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "403: # 2019-06-14",
          "404: # https://sqlite.org/src/info/f1580ba1b574e9e9",
          "405: #",
          "406: do_execsql_test 8.0 {",
          "407:   SELECT ' ' > char(20) COLLATE rtrim;",
          "408: } 0",
          "409: do_execsql_test 8.1 {",
          "410:   SELECT '' < char(20) COLLATE rtrim;",
          "411: } 1",
          "412: do_execsql_test 8.2 {",
          "413:   DROP TABLE IF EXISTS t0;",
          "414:   CREATE TABLE t0(c0 COLLATE RTRIM, c1 BLOB UNIQUE,",
          "415:                   PRIMARY KEY (c0, c1)) WITHOUT ROWID;",
          "416:   INSERT INTO t0 VALUES (123, 3), (' ', 1), (' ', 2), ('', 4);",
          "417:   SELECT * FROM t0 WHERE c1 = 1;",
          "418: } {{ } 1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e4fe01dda7240dd6550406f9d3e9f56f6fc0ccf",
      "candidate_info": {
        "commit_hash": "8e4fe01dda7240dd6550406f9d3e9f56f6fc0ccf",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8e4fe01dda7240dd6550406f9d3e9f56f6fc0ccf",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/permutations.test"
        ],
        "message": "Do not run shmlock.test as part of the journaltest permutation.\n\nFossilOrigin-Name: 5b7d0c784e6467154d9549af0163d788b69d5e5a6478a735834cdea945e7dbb7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/permutations.test||test/permutations.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a7126a4f4fb4e3e25be95d673323f835252bb2b427469616046a90b2acf64071",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/permutations.test||test/permutations.test": [
          "File: test/permutations.test -> test/permutations.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "966:   async4.test bigfile.test backcompat.test e_wal* fstat.test mmap2.test",
          "967:   pager1.test syscall.test tkt3457.test *malloc* mmap* multiplex* nolock*",
          "968:   pager2.test *fault* rowal* snapshot* superlock* symlink.test",
          "970: }]",
          "972: if {[info commands register_demovfs] != \"\"} {",
          "",
          "[Removed Lines]",
          "969:   delete_db.test",
          "",
          "[Added Lines]",
          "969:   delete_db.test shmlock.test",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
      "candidate_info": {
        "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/window1.test"
        ],
        "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
          "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
          "6067:   ){",
          "6068:     p->selFlags &= ~SF_Distinct;",
          "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6067:    && p->pWin==0",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1243:   ALTER TABLE a0 RENAME TO S;",
          "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
          "1246: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1246: reset_db",
          "1247: do_execsql_test 33.1 {",
          "1248:   CREATE TABLE t1(aa, bb);",
          "1249:   INSERT INTO t1 VALUES(1, 2);",
          "1250:   INSERT INTO t1 VALUES(5, 6);",
          "1251:   CREATE TABLE t2(x);",
          "1252:   INSERT INTO t2 VALUES(1);",
          "1253: }",
          "1254: do_execsql_test 33.2 {",
          "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
          "1256:   ORDER BY 1;",
          "1257: } {6 1}",
          "",
          "---------------"
        ]
      }
    }
  ]
}