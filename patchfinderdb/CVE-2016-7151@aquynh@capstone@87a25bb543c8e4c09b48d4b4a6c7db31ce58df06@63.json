{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "72daee3d071d1c978f35dd342241f573c1d3956c",
      "candidate_info": {
        "commit_hash": "72daee3d071d1c978f35dd342241f573c1d3956c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/72daee3d071d1c978f35dd342241f573c1d3956c",
        "files": [
          "bindings/python/capstone/__init__.py"
        ],
        "message": "Workaround unicorn handing back bytearrays",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "843:             print(code)",
          "844:             code = code.encode()",
          "845:             print(code)'''",
          "846:         res = _cs.cs_disasm(self.csh, code, len(code), offset, count, ctypes.byref(all_insn))",
          "847:         if res > 0:",
          "848:             try:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "846:         # Hack, unicorn's memory accessors give you back bytearrays, but they",
          "847:         # cause TypeErrors when you hand them into Capstone.",
          "848:         if isinstance(code, bytearray):",
          "849:             code = bytes(code)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bc0e173daba8d8cb0b603e2f5da866ca4973b63d",
      "candidate_info": {
        "commit_hash": "bc0e173daba8d8cb0b603e2f5da866ca4973b63d",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/bc0e173daba8d8cb0b603e2f5da866ca4973b63d",
        "files": [
          "capstone.pc.in"
        ],
        "message": "CMake: fix pkgconfig file",
        "before_after_code_files": [
          "capstone.pc.in||capstone.pc.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "capstone.pc.in||capstone.pc.in": [
          "File: capstone.pc.in -> capstone.pc.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: Name: capstone",
          "2: Description: Capstone disassembly engine",
          "4: URL: http://www.capstone-engine.org",
          "5: Libs: -L@CMAKE_INSTALL_PREFIX@/lib -lcapstone",
          "6: Cflags: -I@CMAKE_INSTALL_PREFIX@/include/capstone",
          "",
          "[Removed Lines]",
          "3: Version: @VERSION_MAJOR@.@VERSION_MAJOR@.@VERSION_PATCH@",
          "",
          "[Added Lines]",
          "3: Version: @VERSION_MAJOR@.@VERSION_MINOR@.@VERSION_PATCH@",
          "5: archive=@CMAKE_INSTALL_PREFIX@/lib/libcapstone.a",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd2077c2d6d198cdd9e36212ad270855792e431f",
      "candidate_info": {
        "commit_hash": "bd2077c2d6d198cdd9e36212ad270855792e431f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/bd2077c2d6d198cdd9e36212ad270855792e431f",
        "files": [
          "arch/AArch64/AArch64Module.c",
          "arch/ARM/ARMModule.c",
          "arch/Mips/MipsModule.c",
          "arch/PowerPC/PPCModule.c",
          "arch/Sparc/SparcModule.c"
        ],
        "message": "switch endian mode with cs_option() for Arm/Arm64/Mips/Sparc. fix issue #849",
        "before_after_code_files": [
          "arch/AArch64/AArch64Module.c||arch/AArch64/AArch64Module.c",
          "arch/ARM/ARMModule.c||arch/ARM/ARMModule.c",
          "arch/Mips/MipsModule.c||arch/Mips/MipsModule.c",
          "arch/PowerPC/PPCModule.c||arch/PowerPC/PPCModule.c",
          "arch/Sparc/SparcModule.c||arch/Sparc/SparcModule.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64Module.c||arch/AArch64/AArch64Module.c": [
          "File: arch/AArch64/AArch64Module.c -> arch/AArch64/AArch64Module.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: static cs_err option(cs_struct *handle, cs_opt_type type, size_t value)",
          "40: {",
          "41:  return CS_ERR_OK;",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:  if (type == CS_OPT_MODE) {",
          "42:   handle->big_endian = (((cs_mode)value & CS_MODE_BIG_ENDIAN) != 0);",
          "43:  }",
          "",
          "---------------"
        ],
        "arch/ARM/ARMModule.c||arch/ARM/ARMModule.c": [
          "File: arch/ARM/ARMModule.c -> arch/ARM/ARMModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     handle->disasm = ARM_getInstruction;",
          "54:    handle->mode = (cs_mode)value;",
          "55:    break;",
          "56:   case CS_OPT_SYNTAX:",
          "57:    ARM_getRegName(handle, (int)value);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:    handle->big_endian = ((handle->mode & CS_MODE_BIG_ENDIAN) != 0);",
          "",
          "---------------"
        ],
        "arch/Mips/MipsModule.c||arch/Mips/MipsModule.c": [
          "File: arch/Mips/MipsModule.c -> arch/Mips/MipsModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: {",
          "38:  if (type == CS_OPT_MODE) {",
          "39:   handle->mode = (cs_mode)value;",
          "40:   return CS_ERR_OK;",
          "41:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   handle->big_endian = ((handle->mode & CS_MODE_BIG_ENDIAN) != 0);",
          "",
          "---------------"
        ],
        "arch/PowerPC/PPCModule.c||arch/PowerPC/PPCModule.c": [
          "File: arch/PowerPC/PPCModule.c -> arch/PowerPC/PPCModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:  if (type == CS_OPT_SYNTAX)",
          "41:   handle->syntax = (int) value;",
          "43:  return CS_ERR_OK;",
          "44: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:  if (type == CS_OPT_MODE) {",
          "44:   handle->big_endian = (((cs_mode)value & CS_MODE_BIG_ENDIAN) != 0);",
          "45:  }",
          "",
          "---------------"
        ],
        "arch/Sparc/SparcModule.c||arch/Sparc/SparcModule.c": [
          "File: arch/Sparc/SparcModule.c -> arch/Sparc/SparcModule.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:  if (type == CS_OPT_SYNTAX)",
          "40:   handle->syntax = (int) value;",
          "42:  return CS_ERR_OK;",
          "43: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:  if (type == CS_OPT_MODE) {",
          "43:   handle->big_endian = (((cs_mode)value & CS_MODE_BIG_ENDIAN) != 0);",
          "44:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6beb6ad931ba18efb2a91e293efa646bf47e02cd",
      "candidate_info": {
        "commit_hash": "6beb6ad931ba18efb2a91e293efa646bf47e02cd",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/6beb6ad931ba18efb2a91e293efa646bf47e02cd",
        "files": [
          "arch/X86/X86Disassembler.c"
        ],
        "message": "Bugfix : setting all fields to insns cache (#899)\n\n* Bugfix : setting all fields to insns cache\n\n* Bugfix\nFixing root cause, not setting opcode to 0 in default case\n\n* Not resetting opcode to 0 in this case as well\n\n* Finalizing bugfix",
        "before_after_code_files": [
          "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c": [
          "File: arch/X86/X86Disassembler.c -> arch/X86/X86Disassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:     case X86_VPCOMUQmi: NewOpc = X86_VPCOMUQmi_alt; break;",
          "221:    }",
          "224:   }",
          "225: #endif",
          "226:  } else if (type == TYPE_IMM5) {",
          "",
          "[Removed Lines]",
          "223:    MCInst_setOpcode(mcInst, NewOpc);",
          "",
          "[Added Lines]",
          "223:    if (NewOpc != 0) {",
          "224:     MCInst_setOpcode(mcInst, NewOpc);",
          "225:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "386:     case X86_VPCMPWZrrik:      NewOpc = X86_VPCMPWZrrik_alt;      break;",
          "387:    }",
          "390:   }",
          "391: #endif",
          "392:  }",
          "",
          "[Removed Lines]",
          "389:    MCInst_setOpcode(mcInst, NewOpc);",
          "",
          "[Added Lines]",
          "391:    if (NewOpc != 0) {",
          "392:     MCInst_setOpcode(mcInst, NewOpc);",
          "393:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "733984689188729d2f0db5bc74d1158fd3c5b8b0",
      "candidate_info": {
        "commit_hash": "733984689188729d2f0db5bc74d1158fd3c5b8b0",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/733984689188729d2f0db5bc74d1158fd3c5b8b0",
        "files": [
          "arch/X86/X86GenDisassemblerTables.inc"
        ],
        "message": "x86: Fix the operand encoding in the test instruction, issue #702",
        "before_after_code_files": [
          "arch/X86/X86GenDisassemblerTables.inc||arch/X86/X86GenDisassemblerTables.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86GenDisassemblerTables.inc||arch/X86/X86GenDisassemblerTables.inc": [
          "File: arch/X86/X86GenDisassemblerTables.inc -> arch/X86/X86GenDisassemblerTables.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "21532:   },",
          "21536:   },",
          "",
          "[Removed Lines]",
          "21534:     69,",
          "",
          "[Added Lines]",
          "21534:     73,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21560:   },",
          "21564:   },",
          "",
          "[Removed Lines]",
          "21562:     69,",
          "",
          "[Added Lines]",
          "21562:     73,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "21588:   },",
          "21592:   },",
          "",
          "[Removed Lines]",
          "21590:     43,",
          "",
          "[Added Lines]",
          "21590:     76,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "21620:   },",
          "21624:   },",
          "",
          "[Removed Lines]",
          "21622:     88,",
          "",
          "[Added Lines]",
          "21622:     87,",
          "",
          "---------------"
        ]
      }
    }
  ]
}