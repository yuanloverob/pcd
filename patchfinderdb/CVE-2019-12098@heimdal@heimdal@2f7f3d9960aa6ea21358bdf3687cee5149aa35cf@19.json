{
  "cve_id": "CVE-2019-12098",
  "cve_desc": "In the client side of Heimdal before 7.6.0, failure to verify anonymous PKINIT PA-PKINIT-KX key exchange permits a man-in-the-middle attack. This issue is in krb5_init_creds_step in lib/krb5/init_creds_pw.c.",
  "repo": "heimdal/heimdal",
  "patch_hash": "2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
  "patch_info": {
    "commit_hash": "2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
    "repo": "heimdal/heimdal",
    "commit_url": "https://github.com/heimdal/heimdal/commit/2f7f3d9960aa6ea21358bdf3687cee5149aa35cf",
    "files": [
      "lib/krb5/init_creds_pw.c",
      "lib/krb5/krb5_locl.h",
      "lib/krb5/pkinit.c"
    ],
    "message": "CVE-2019-12098: krb5: always confirm PA-PKINIT-KX for anon PKINIT\n\nRFC8062 Section 7 requires verification of the PA-PKINIT-KX key excahnge\nwhen anonymous PKINIT is used.  Failure to do so can permit an active\nattacker to become a man-in-the-middle.\n\nIntroduced by a1ef548600c5bb51cf52a9a9ea12676506ede19f.  First tagged\nrelease Heimdal 1.4.0.\n\nCVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N (4.8)\n\nChange-Id: I6cc1c0c24985936468af08693839ac6c3edda133\nSigned-off-by: Jeffrey Altman <jaltman@auristor.com>\nApproved-by: Jeffrey Altman <jaltman@auritor.com>\n(cherry picked from commit 38c797e1ae9b9c8f99ae4aa2e73957679031fd2b)",
    "before_after_code_files": [
      "lib/krb5/init_creds_pw.c||lib/krb5/init_creds_pw.c",
      "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h",
      "lib/krb5/pkinit.c||lib/krb5/pkinit.c"
    ]
  },
  "patch_diff": {
    "lib/krb5/init_creds_pw.c||lib/krb5/init_creds_pw.c": [
      "File: lib/krb5/init_creds_pw.c -> lib/krb5/init_creds_pw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2267:            &ctx->req_buffer,",
      "2268:            NULL,",
      "2269:            NULL);",
      "2270:      if (ret == 0)",
      "2271:   ret = copy_EncKDCRepPart(&rep.enc_part, &ctx->enc_part);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2270:      if (ret == 0 && ctx->pk_init_ctx) {",
      "2271:   PA_DATA *pa_pkinit_kx;",
      "2272:   int idx = 0;",
      "2274:   pa_pkinit_kx =",
      "2275:       krb5_find_padata(rep.kdc_rep.padata->val,",
      "2276:          rep.kdc_rep.padata->len,",
      "2277:          KRB5_PADATA_PKINIT_KX,",
      "2278:          &idx);",
      "2280:   ret = _krb5_pk_kx_confirm(context, ctx->pk_init_ctx,",
      "2281:        ctx->fast_state.reply_key,",
      "2282:        &ctx->cred.session,",
      "2283:        pa_pkinit_kx);",
      "2284:   if (ret)",
      "2285:       krb5_set_error_message(context, ret,",
      "2286:         N_(\"Failed to confirm PA-PKINIT-KX\", \"\"));",
      "2287:   else if (pa_pkinit_kx != NULL)",
      "2288:       ctx->ic_flags |= KRB5_INIT_CREDS_PKINIT_KX_VALID;",
      "2289:      }",
      "",
      "---------------"
    ],
    "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h": [
      "File: lib/krb5/krb5_locl.h -> lib/krb5/krb5_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "208: #define KRB5_INIT_CREDS_CANONICALIZE  1",
      "209: #define KRB5_INIT_CREDS_NO_C_CANON_CHECK 2",
      "210: #define KRB5_INIT_CREDS_NO_C_NO_EKU_CHECK 4",
      "211:     struct {",
      "212:         krb5_gic_process_last_req func;",
      "213:         void *ctx;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "211: #define KRB5_INIT_CREDS_PKINIT_KX_VALID  32",
      "",
      "---------------"
    ],
    "lib/krb5/pkinit.c||lib/krb5/pkinit.c": [
      "File: lib/krb5/pkinit.c -> lib/krb5/pkinit.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1220:     return ret;",
      "1221: }",
      "1223: static krb5_error_code",
      "1224: pk_rd_pa_reply_dh(krb5_context context,",
      "1225:     const heim_octet_string *indata,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1230: KRB5_LIB_FUNCTION krb5_error_code KRB5_LIB_CALL",
      "1231: _krb5_pk_kx_confirm(krb5_context context,",
      "1232:       krb5_pk_init_ctx ctx,",
      "1233:       krb5_keyblock *reply_key,",
      "1234:       krb5_keyblock *session_key,",
      "1235:       PA_DATA *pa_pkinit_kx)",
      "1236: {",
      "1237:     krb5_error_code ret;",
      "1238:     EncryptedData ed;",
      "1239:     krb5_keyblock ck, sk_verify;",
      "1240:     krb5_crypto ck_crypto = NULL;",
      "1241:     krb5_crypto rk_crypto = NULL;",
      "1242:     size_t len;",
      "1243:     krb5_data data;",
      "1244:     krb5_data p1 = { sizeof(\"PKINIT\") - 1, \"PKINIT\" };",
      "1245:     krb5_data p2 = { sizeof(\"KEYEXCHANGE\") - 1, \"KEYEXCHANGE\" };",
      "1247:     heim_assert(ctx != NULL, \"PKINIT context is non-NULL\");",
      "1248:     heim_assert(reply_key != NULL, \"reply key is non-NULL\");",
      "1249:     heim_assert(session_key != NULL, \"session key is non-NULL\");",
      "1252:     if (pa_pkinit_kx == NULL)",
      "1253:  return ctx->anonymous ? KRB5_KDCREP_MODIFIED : 0;",
      "1255:     memset(&ed, 0, sizeof(ed));",
      "1256:     krb5_keyblock_zero(&ck);",
      "1257:     krb5_keyblock_zero(&sk_verify);",
      "1258:     krb5_data_zero(&data);",
      "1260:     ret = decode_EncryptedData(pa_pkinit_kx->padata_value.data,",
      "1261:           pa_pkinit_kx->padata_value.length,",
      "1262:           &ed, &len);",
      "1263:     if (ret)",
      "1264:  goto out;",
      "1266:     if (len != pa_pkinit_kx->padata_value.length) {",
      "1267:  ret = KRB5_KDCREP_MODIFIED;",
      "1268:  goto out;",
      "1269:     }",
      "1271:     ret = krb5_crypto_init(context, reply_key, 0, &rk_crypto);",
      "1272:     if (ret)",
      "1273:  goto out;",
      "1275:     ret = krb5_decrypt_EncryptedData(context, rk_crypto,",
      "1276:          KRB5_KU_PA_PKINIT_KX,",
      "1277:          &ed, &data);",
      "1278:     if (ret)",
      "1279:  goto out;",
      "1281:     ret = decode_EncryptionKey(data.data, data.length,",
      "1282:           &ck, &len);",
      "1283:     if (ret)",
      "1284:  goto out;",
      "1286:     ret = krb5_crypto_init(context, &ck, 0, &ck_crypto);",
      "1287:     if (ret)",
      "1288:  goto out;",
      "1290:     ret = krb5_crypto_fx_cf2(context, ck_crypto, rk_crypto,",
      "1291:         &p1, &p2, session_key->keytype,",
      "1292:         &sk_verify);",
      "1293:     if (ret)",
      "1294:  goto out;",
      "1296:     if (sk_verify.keytype != session_key->keytype ||",
      "1297:  krb5_data_ct_cmp(&sk_verify.keyvalue, &session_key->keyvalue) != 0) {",
      "1298:  ret = KRB5_KDCREP_MODIFIED;",
      "1299:  goto out;",
      "1300:     }",
      "1302: out:",
      "1303:     free_EncryptedData(&ed);",
      "1304:     krb5_free_keyblock_contents(context, &ck);",
      "1305:     krb5_free_keyblock_contents(context, &sk_verify);",
      "1306:     if (ck_crypto)",
      "1307:  krb5_crypto_destroy(context, ck_crypto);",
      "1308:     if (rk_crypto)",
      "1309:  krb5_crypto_destroy(context, rk_crypto);",
      "1310:     krb5_data_free(&data);",
      "1312:     return ret;",
      "1313: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6c9914c871d14d46ec7be34ec320c9b2e847e851",
      "candidate_info": {
        "commit_hash": "6c9914c871d14d46ec7be34ec320c9b2e847e851",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/6c9914c871d14d46ec7be34ec320c9b2e847e851",
        "files": [
          "lib/krb5/send_to_kdc.c"
        ],
        "message": "Windows-compatible sentinel socket type and value\n\n(cherry picked from commit 8740528b2477f872147998ca19a66d2fae12631b)",
        "before_after_code_files": [
          "lib/krb5/send_to_kdc.c||lib/krb5/send_to_kdc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041",
          "https://github.com/heimdal/heimdal/pull/556"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/krb5/send_to_kdc.c||lib/krb5/send_to_kdc.c": [
          "File: lib/krb5/send_to_kdc.c -> lib/krb5/send_to_kdc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "928:     krb5_sendto_ctx ctx;",
          "929:     fd_set rfds;",
          "930:     fd_set wfds;",
          "932:     int got_reply;",
          "933:     time_t timenow;",
          "934: };",
          "",
          "[Removed Lines]",
          "931:     int max_fd;",
          "",
          "[Added Lines]",
          "931:     rk_socket_t max_fd;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1032:     wait_ctx.ctx = ctx;",
          "1033:     FD_ZERO(&wait_ctx.rfds);",
          "1034:     FD_ZERO(&wait_ctx.wfds);",
          "1038:     if (ctx->response.length) {",
          "",
          "[Removed Lines]",
          "1035:     wait_ctx.max_fd = -1;",
          "",
          "[Added Lines]",
          "1035:     wait_ctx.max_fd = rk_INVALID_SOCKET;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1058:  return 0;",
          "1059:     }",
          "",
          "[Removed Lines]",
          "1061:     if (wait_ctx.max_fd == -1) {",
          "",
          "[Added Lines]",
          "1061:     if (wait_ctx.max_fd == rk_INVALID_SOCKET) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "064ab7e2777a4b47141f63045c70b4230f5059ec",
      "candidate_info": {
        "commit_hash": "064ab7e2777a4b47141f63045c70b4230f5059ec",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/064ab7e2777a4b47141f63045c70b4230f5059ec",
        "files": [
          "lib/wind/gen-normalize.py"
        ],
        "message": "Bulk: enclose .keys() method with list where list (from python2) expected\n\nSigned-off-by: Noel Power <noel.power@suse.com>\nReviewed-by: Andrew Bartlett <abartlet@samba.org>\n(cherry picked from Samba commit 521bc6056edc5252f2256664f4eacba13a3749e3)\n(cherry picked from commit fa3c0031a8becea94045cd0d060ce37d1a58ed52)",
        "before_after_code_files": [
          "lib/wind/gen-normalize.py||lib/wind/gen-normalize.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/wind/gen-normalize.py||lib/wind/gen-normalize.py": [
          "File: lib/wind/gen-normalize.py -> lib/wind/gen-normalize.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: def sortedKeys(d):",
          "53:     \"\"\"Return a sorted list of the keys of a dict\"\"\"",
          "55:     keys.sort()",
          "56:     return keys",
          "",
          "[Removed Lines]",
          "54:     keys = d.keys()",
          "",
          "[Added Lines]",
          "54:     keys = list(d.keys())",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8bee05fa1f13438c75fa223611bfbbed3f975478",
      "candidate_info": {
        "commit_hash": "8bee05fa1f13438c75fa223611bfbbed3f975478",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/8bee05fa1f13438c75fa223611bfbbed3f975478",
        "files": [
          "lib/wind/gen-combining.py"
        ],
        "message": "PY3: dict_keys doesn't have a sort method\n\nSigned-off-by: Noel Power <noel.power@suse.com>\nReviewed-by: Andrew Bartlett <abartlet@samba.org>\n(cherry picked from Samba commit 0358d57db4705b2330e294b5d6318c1a78a8518c)\n(cherry picked from commit 07e3cbb7fb88ef27d6145f4f2b22a1becf7088c5)",
        "before_after_code_files": [
          "lib/wind/gen-combining.py||lib/wind/gen-combining.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/wind/gen-combining.py||lib/wind/gen-combining.py": [
          "File: lib/wind/gen-combining.py -> lib/wind/gen-combining.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: const struct translation _wind_combining_table[] = {",
          "80: ''')",
          "84: for k in s:",
          "85:     v = trans[k]",
          "86:     combining_c.file.write(\"{0x%x, %u}, /* %s */\\n\"",
          "",
          "[Removed Lines]",
          "82: s = trans.keys()",
          "83: s.sort()",
          "",
          "[Added Lines]",
          "82: s = sorted(trans)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "58a28ca5197e2024b37afa6bd3ddc2f4fc2beba5",
      "candidate_info": {
        "commit_hash": "58a28ca5197e2024b37afa6bd3ddc2f4fc2beba5",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/58a28ca5197e2024b37afa6bd3ddc2f4fc2beba5",
        "files": [
          "lib/krb5/krb5_locl.h"
        ],
        "message": "krb5: remove duplicate KRB5_ANON_MATCH_xxx defines\n\nCommit bdcd7d2f moved the KRB5_ANON_MATCH_xxx preprocessor symbols to krb5.h,\nbut did not remove the originals from krb5_locl.h. This commit removes them.\n\n(cherry picked from commit dc791c8fcfb8f61fe0d0a14307a6a6cf999a13b7)\n\nChange-Id: Ia24d4b1467c6547a9748325c9632d1df5add563c",
        "before_after_code_files": [
          "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [
            "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h"
          ],
          "candidate": [
            "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/krb5/krb5_locl.h||lib/krb5/krb5_locl.h": [
          "File: lib/krb5/krb5_locl.h -> lib/krb5/krb5_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "379: # define ISPATHSEP(x) (x == '/')",
          "380: #endif",
          "",
          "[Removed Lines]",
          "385: #define KRB5_ANON_MATCH_ANY  ( KRB5_ANON_MATCH_AUTHENTICATED | KRB5_ANON_MATCH_UNAUTHENTICATED )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "56f9911670986e8e3fba4063d1bae05d1bc82170",
      "candidate_info": {
        "commit_hash": "56f9911670986e8e3fba4063d1bae05d1bc82170",
        "repo": "heimdal/heimdal",
        "commit_url": "https://github.com/heimdal/heimdal/commit/56f9911670986e8e3fba4063d1bae05d1bc82170",
        "files": [
          "lib/hcrypto/evp-pkcs11.c"
        ],
        "message": "solaris 8 sparc defines _LP64 to empty, causing build failure\n\n(cherry picked from commit f132d2040dbc326b8f3c8b3970001a966e58ade1)",
        "before_after_code_files": [
          "lib/hcrypto/evp-pkcs11.c||lib/hcrypto/evp-pkcs11.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/heimdal/heimdal/pull/1222",
          "https://github.com/heimdal/heimdal/pull/1041"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/hcrypto/evp-pkcs11.c||lib/hcrypto/evp-pkcs11.c": [
          "File: lib/hcrypto/evp-pkcs11.c -> lib/hcrypto/evp-pkcs11.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: #include <ref/pkcs11.h>",
          "62: #if __sun && !defined(PKCS11_MODULE_PATH)",
          "64: # define PKCS11_MODULE_PATH \"/usr/lib/64/libpkcs11.so\"",
          "65: # else",
          "66: # define PKCS11_MODULE_PATH \"/usr/lib/libpkcs11.so\"",
          "",
          "[Removed Lines]",
          "63: # if _LP64",
          "",
          "[Added Lines]",
          "63: # ifdef _LP64",
          "",
          "---------------"
        ]
      }
    }
  ]
}