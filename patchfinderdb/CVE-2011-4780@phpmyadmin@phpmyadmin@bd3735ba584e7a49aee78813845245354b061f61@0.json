{
  "cve_id": "CVE-2011-4780",
  "cve_desc": "Multiple cross-site scripting (XSS) vulnerabilities in libraries/display_export.lib.php in phpMyAdmin 3.4.x before 3.4.9 allow remote attackers to inject arbitrary web script or HTML via crafted URL parameters, related to the export panels in the (1) server, (2) database, and (3) table sections.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "bd3735ba584e7a49aee78813845245354b061f61",
  "patch_info": {
    "commit_hash": "bd3735ba584e7a49aee78813845245354b061f61",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/bd3735ba584e7a49aee78813845245354b061f61",
    "files": [
      "ChangeLog",
      "libraries/display_export.lib.php"
    ],
    "message": "[security] Self-XSS on export options (export server/database/table), see PMASA-2011-20",
    "before_after_code_files": [
      "libraries/display_export.lib.php||libraries/display_export.lib.php"
    ]
  },
  "patch_diff": {
    "libraries/display_export.lib.php||libraries/display_export.lib.php": [
      "File: libraries/display_export.lib.php -> libraries/display_export.lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "150:                     echo '<label for =\"radio_allrows_0\">' . __('Dump some row(s)') . '</label>'; ?>",
      "151:                 <ul>",
      "152:                     <li><label for=\"limit_to\"><?php echo __('Number of rows:') . '</label> <input type=\"text\" id=\"limit_to\" name=\"limit_to\" size=\"5\" value=\"'",
      "154:                 . '\" onfocus=\"this.select()\" />' ?></li>",
      "155:                     <li><label for=\"limit_from\"><?php echo __('Row to begin at:') . '</label> <input type=\"text\" id=\"limit_from\" name=\"limit_from\" value=\"'",
      "157:                  . '\" size=\"5\" onfocus=\"this.select()\" />'; ?></li>",
      "158:                 </ul>",
      "159:             </li>",
      "",
      "[Removed Lines]",
      "153:                 . ((isset($_GET['limit_to'])) ? $_GET['limit_to'] : ((isset($unlim_num_rows) ? $unlim_num_rows : PMA_Table::countRecords($db, $table))))",
      "156:                  . ((isset($_GET['limit_from'])) ? $_GET['limit_from'] : '0')",
      "",
      "[Added Lines]",
      "153:                 . ((isset($_GET['limit_to'])) ? htmlspecialchars($_GET['limit_to']) : ((isset($unlim_num_rows) ? $unlim_num_rows : PMA_Table::countRecords($db, $table))))",
      "156:                  . ((isset($_GET['limit_from'])) ? htmlspecialchars($_GET['limit_from']) : '0')",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "242:                     <?php",
      "243:                         echo ' value=\"';",
      "244:                         if(isset($_GET['filename_template'])) {",
      "246:                         } else {",
      "247:                             if ($export_type == 'database') {",
      "248:                                 echo htmlspecialchars($GLOBALS['PMA_Config']->getUserValue(",
      "",
      "[Removed Lines]",
      "245:                             echo $_GET['filename_template'];",
      "",
      "[Added Lines]",
      "245:                             echo htmlspecialchars($_GET['filename_template']);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aebacc391f1f1ae1df02977bae8d0de248f25dff",
      "candidate_info": {
        "commit_hash": "aebacc391f1f1ae1df02977bae8d0de248f25dff",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/aebacc391f1f1ae1df02977bae8d0de248f25dff",
        "files": [
          "libraries/display_export.lib.php"
        ],
        "message": "Various fixes in coding style",
        "before_after_code_files": [
          "libraries/display_export.lib.php||libraries/display_export.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ],
          "candidate": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/display_export.lib.php||libraries/display_export.lib.php": [
          "File: libraries/display_export.lib.php -> libraries/display_export.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:     echo '</li>';",
          "223:     echo '</ul>';",
          "224:     echo '</div>';",
          "392: echo $common_functions->getExternalBug(",
          "393:     __('SQL compatibility mode'), 'mysql', '50027', '14515'",
          "394: );",
          "",
          "[Removed Lines]",
          "225: } ?>",
          "227: <div class=\"exportoptions\" id=\"output\">",
          "228:     <h3><?php echo __('Output:'); ?></h3>",
          "229:     <ul id=\"ul_output\">",
          "230:         <li>",
          "231:             <input type=\"radio\" name=\"output_format\" value=\"sendit\" id=\"radio_dump_asfile\" <?php isset($_GET['repopulate']) ? '' : PMA_exportCheckboxCheck('asfile'); ?> />",
          "232:             <label for=\"radio_dump_asfile\"><?php echo __('Save output to a file'); ?></label>",
          "233:             <ul id=\"ul_save_asfile\">",
          "234:                 <?php if (isset($cfg['SaveDir']) && !empty($cfg['SaveDir'])) { ?>",
          "235:                 <li>",
          "236:                     <input type=\"checkbox\" name=\"onserver\" value=\"saveit\"",
          "237:                         id=\"checkbox_dump_onserver\"",
          "238:                         <?php PMA_exportCheckboxCheck('onserver'); ?> />",
          "239:                     <label for=\"checkbox_dump_onserver\">",
          "240:                         <?php echo sprintf(__('Save on server in the directory <b>%s</b>'), htmlspecialchars($common_functions->userDir($cfg['SaveDir']))); ?>",
          "241:                     </label>",
          "242:                 </li>",
          "243:                 <li>",
          "244:                     <input type=\"checkbox\" name=\"onserverover\" value=\"saveitover\"",
          "245:                     id=\"checkbox_dump_onserverover\"",
          "246:                     <?php PMA_exportCheckboxCheck('onserver_overwrite'); ?> />",
          "247:                     <label for=\"checkbox_dump_onserverover\"><?php echo __('Overwrite existing file(s)'); ?></label>",
          "248:                 </li>",
          "249:                 <?php } ?>",
          "250:                 <li>",
          "251:                     <label for=\"filename_template\" class=\"desc\">",
          "252:                     <?php",
          "253:                     echo __('File name template:');",
          "254:                     $trans = new PMA_Message;",
          "255:                     $trans->addMessage(__('@SERVER@ will become the server name'));",
          "256:                     if ($export_type == 'database' || $export_type == 'table') {",
          "257:                         $trans->addMessage(__(', @DATABASE@ will become the database name'));",
          "258:                         if ($export_type == 'table') {",
          "259:                             $trans->addMessage(__(', @TABLE@ will become the table name'));",
          "260:                         }",
          "261:                     }",
          "263:                     $msg = new PMA_Message(__('This value is interpreted using %1$sstrftime%2$s, so you can use time formatting strings. Additionally the following transformations will happen: %3$s. Other text will be kept as is. See the %4$sFAQ%5$s for details.'));",
          "264:                     $msg->addParam(",
          "265:                         '<a href=\"' . PMA_linkURL(PMA_getPHPDocLink('function.strftime.php'))",
          "266:                         . '\" target=\"documentation\" title=\"' . __('Documentation') . '\">',",
          "267:                         false",
          "268:                     );",
          "269:                     $msg->addParam('</a>', false);",
          "270:                     $msg->addParam($trans);",
          "271:                     $msg->addParam('<a href=\"Documentation.html#faq6_27\" target=\"documentation\">', false);",
          "272:                     $msg->addParam('</a>', false);",
          "274:                     echo $common_functions->showHint($msg);",
          "275:                     ?>",
          "276:                     </label>",
          "277:                     <input type=\"text\" name=\"filename_template\" id=\"filename_template\"",
          "278:                     <?php",
          "279:                         echo ' value=\"';",
          "280:                         if (isset($_GET['filename_template'])) {",
          "281:                             echo htmlspecialchars($_GET['filename_template']);",
          "282:                         } else {",
          "283:                             if ($export_type == 'database') {",
          "284:                                 echo htmlspecialchars(",
          "285:                                     $GLOBALS['PMA_Config']->getUserValue(",
          "286:                                         'pma_db_filename_template',",
          "287:                                         $GLOBALS['cfg']['Export']['file_template_database']",
          "288:                                     )",
          "289:                                 );",
          "290:                             } elseif ($export_type == 'table') {",
          "291:                                 echo htmlspecialchars(",
          "292:                                     $GLOBALS['PMA_Config']->getUserValue(",
          "293:                                         'pma_table_filename_template',",
          "294:                                         $GLOBALS['cfg']['Export']['file_template_table']",
          "295:                                     )",
          "296:                                 );",
          "297:                             } else {",
          "298:                                 echo htmlspecialchars(",
          "299:                                     $GLOBALS['PMA_Config']->getUserValue(",
          "300:                                         'pma_server_filename_template',",
          "301:                                         $GLOBALS['cfg']['Export']['file_template_server']",
          "302:                                     )",
          "303:                                 );",
          "304:                             }",
          "305:                     }",
          "306:                         echo '\"';",
          "307:                     ?>",
          "308:                     />",
          "309:                     <input type=\"checkbox\" name=\"remember_template\"",
          "310:                         id=\"checkbox_remember_template\"",
          "311:                         <?php PMA_exportCheckboxCheck('remember_file_template'); ?> />",
          "312:                     <label for=\"checkbox_remember_template\">",
          "313:                         <?php echo __('use this for future exports'); ?></label>",
          "314:                 </li>",
          "315:                 <?php",
          "317:                 if ($GLOBALS['PMA_recoding_engine'] != PMA_CHARSET_NONE) {",
          "318:                     echo '        <li><label for=\"select_charset_of_file\" class=\"desc\">'",
          "319:                         . __('Character set of the file:') . '</label>' . \"\\n\";",
          "320:                     reset($cfg['AvailableCharsets']);",
          "321:                     echo '<select id=\"select_charset_of_file\" name=\"charset_of_file\" size=\"1\">';",
          "322:                     foreach ($cfg['AvailableCharsets'] as $temp_charset) {",
          "323:                         echo '<option value=\"' . $temp_charset . '\"';",
          "324:                         if (isset($_GET['charset_of_file']) && ($_GET['charset_of_file'] != $temp_charset)) {",
          "325:                             echo '';",
          "326:                         } elseif ((empty($cfg['Export']['charset']) && $temp_charset == 'utf-8')",
          "327:                           || $temp_charset == $cfg['Export']['charset']) {",
          "328:                             echo ' selected=\"selected\"';",
          "329:                         }",
          "330:                         echo '>' . $temp_charset . '</option>';",
          "331:                     } // end foreach",
          "332:                     echo '</select></li>';",
          "333:                 } // end if",
          "334:                 ?>",
          "335:                  <?php",
          "336:                 if (isset($_GET['compression'])) {",
          "337:                     $selected_compression = $_GET['compression'];",
          "338:                 } elseif (isset($cfg['Export']['compression'])) {",
          "339:                     $selected_compression = $cfg['Export']['compression'];",
          "340:                 } else {",
          "341:                     $selected_compression = \"none\";",
          "342:                 }",
          "344:                 $is_zip  = ($cfg['ZipDump']  && @function_exists('gzcompress'));",
          "345:                 $is_gzip = ($cfg['GZipDump'] && @function_exists('gzencode'));",
          "346:                 $is_bzip2 = ($cfg['BZipDump'] && @function_exists('bzcompress'));",
          "347:                 if ($is_zip || $is_gzip || $is_bzip2) { ?>",
          "348:                     <li>",
          "349:                     <label for=\"compression\" class=\"desc\"><?php echo __('Compression:'); ?></label>",
          "350:                     <select id=\"compression\" name=\"compression\">",
          "351:                         <option value=\"none\"><?php echo __('None'); ?></option>",
          "352:                         <?php if ($is_zip) { ?>",
          "353:                             <option value=\"zip\" <?php echo ($selected_compression == \"zip\") ? 'selected=\"selected\"' : ''; ?>><?php echo __('zipped'); ?></option>",
          "354:                         <?php } if ($is_gzip) { ?>",
          "355:                             <option value=\"gzip\" <?php echo ($selected_compression == \"gzip\") ? 'selected=\"selected\"' : ''; ?>><?php echo __('gzipped'); ?></option>",
          "356:                         <?php } if ($is_bzip2) { ?>",
          "357:                             <option value=\"bzip2\" <?php echo ($selected_compression == \"bzip2\") ? 'selected=\"selected\"' : ''; ?>><?php echo __('bzipped'); ?></option>",
          "358:                         <?php } ?>",
          "359:                     </select>",
          "360:                     </li>",
          "361:                 <?php } else { ?>",
          "362:                     <input type=\"hidden\" name=\"compression\" value=\"<?php echo $selected_compression; ?>\" />",
          "363:                 <?php } ?>",
          "364:              </ul>",
          "365:         </li>",
          "366:         <li><input type=\"radio\" id=\"radio_view_as_text\" name=\"output_format\" value=\"astext\" <?php echo (isset($_GET['repopulate']) || $GLOBALS['cfg']['Export']['asfile'] == false) ? 'checked=\"checked\"' : '' ?>/><label for=\"radio_view_as_text\"><?php echo __('View output as text'); ?></label></li>",
          "367:     </ul>",
          "368:  </div>",
          "370: <div class=\"exportoptions\" id=\"format\">",
          "371:     <h3><?php echo __('Format:'); ?></h3>",
          "372:     <?php echo PMA_pluginGetChoice('Export', 'what', $export_list, 'format'); ?>",
          "373: </div>",
          "375: <div class=\"exportoptions\" id=\"format_specific_opts\">",
          "376:     <h3><?php echo __('Format-specific options:'); ?></h3>",
          "377:     <p class=\"no_js_msg\" id=\"scroll_to_options_msg\"><?php echo __('Scroll down to fill in the options for the selected format and ignore the options for other formats.'); ?></p>",
          "378:     <?php echo PMA_pluginGetOptions('Export', $export_list); ?>",
          "379: </div>",
          "381: <?php if (function_exists('PMA_set_enc_form')) { ?>",
          "382: <!-- Encoding setting form appended by Y.Kawada -->",
          "383: <!-- Japanese encoding setting -->",
          "384:     <div class=\"exportoptions\" id=\"kanji_encoding\">",
          "385:         <h3><?php echo __('Encoding Conversion:'); ?></h3>",
          "386:         <?php echo PMA_set_enc_form('            '); ?>",
          "387:     </div>",
          "388: <?php } ?>",
          "390: <div class=\"exportoptions\" id=\"submit\">",
          "391: <?php",
          "395: ?>",
          "396:     <input type=\"submit\" value=\"<?php echo __('Go'); ?>\" id=\"buttonGo\" />",
          "397: </div>",
          "398: </form>",
          "",
          "[Added Lines]",
          "225: }",
          "227: echo '<div class=\"exportoptions\" id=\"output\">';",
          "228: echo '<h3>' . __('Output:') . '</h3>';",
          "229: echo '<ul id=\"ul_output\">';",
          "230: echo '<li>';",
          "231: echo '<input type=\"radio\" name=\"output_format\" value=\"sendit\" ';",
          "232: echo 'id=\"radio_dump_asfile\" ';",
          "233: if (!isset($_GET['repopulate'])) {",
          "234:     PMA_exportCheckboxCheck('asfile');",
          "235: }",
          "236: echo '/>';",
          "237: echo '<label for=\"radio_dump_asfile\">' . __('Save output to a file') . '</label>';",
          "238: echo '<ul id=\"ul_save_asfile\">';",
          "239: if (isset($cfg['SaveDir']) && !empty($cfg['SaveDir'])) {",
          "240:     echo '<li>';",
          "241:     echo '<input type=\"checkbox\" name=\"onserver\" value=\"saveit\" ';",
          "242:     echo 'id=\"checkbox_dump_onserver\" ';",
          "243:     PMA_exportCheckboxCheck('onserver');",
          "244:     echo '/>';",
          "245:     echo '<label for=\"checkbox_dump_onserver\">';",
          "246:     printf(",
          "247:         __('Save on server in the directory <b>%s</b>'),",
          "248:         htmlspecialchars($common_functions->userDir($cfg['SaveDir']))",
          "249:     );",
          "250:     echo '</label>';",
          "251:     echo '</li>';",
          "252:     echo '<li>';",
          "253:     echo '<input type=\"checkbox\" name=\"onserverover\" value=\"saveitover\"';",
          "254:     echo ' id=\"checkbox_dump_onserverover\" ';",
          "255:     PMA_exportCheckboxCheck('onserver_overwrite');",
          "256:     echo '/>';",
          "257:     echo '<label for=\"checkbox_dump_onserverover\">';",
          "258:     echo __('Overwrite existing file(s)');",
          "259:     echo '</label>';",
          "260:     echo '</li>';",
          "261: }",
          "262: echo '<li>';",
          "263: echo '<label for=\"filename_template\" class=\"desc\">';",
          "264: echo __('File name template:');",
          "265: $trans = new PMA_Message;",
          "266: $trans->addMessage(__('@SERVER@ will become the server name'));",
          "267: if ($export_type == 'database' || $export_type == 'table') {",
          "268:     $trans->addMessage(__(', @DATABASE@ will become the database name'));",
          "269:     if ($export_type == 'table') {",
          "270:         $trans->addMessage(__(', @TABLE@ will become the table name'));",
          "271:     }",
          "272: }",
          "274: $msg = new PMA_Message(",
          "275:     __('This value is interpreted using %1$sstrftime%2$s, so you can use time formatting strings. Additionally the following transformations will happen: %3$s. Other text will be kept as is. See the %4$sFAQ%5$s for details.')",
          "276: );",
          "277: $msg->addParam(",
          "278:     '<a href=\"' . PMA_linkURL(PMA_getPHPDocLink('function.strftime.php'))",
          "279:     . '\" target=\"documentation\" title=\"' . __('Documentation') . '\">',",
          "280:     false",
          "281: );",
          "282: $msg->addParam('</a>', false);",
          "283: $msg->addParam($trans);",
          "284: $msg->addParam(",
          "285:     '<a href=\"Documentation.html#faq6_27\" target=\"documentation\">',",
          "286:     false",
          "287: );",
          "288: $msg->addParam('</a>', false);",
          "290: echo $common_functions->showHint($msg);",
          "291: echo '</label>';",
          "292: echo '<input type=\"text\" name=\"filename_template\" id=\"filename_template\" ';",
          "293: echo ' value=\"';",
          "294: if (isset($_GET['filename_template'])) {",
          "295:     echo htmlspecialchars($_GET['filename_template']);",
          "296: } else {",
          "297:     if ($export_type == 'database') {",
          "298:         echo htmlspecialchars(",
          "299:             $GLOBALS['PMA_Config']->getUserValue(",
          "300:                 'pma_db_filename_template',",
          "301:                 $GLOBALS['cfg']['Export']['file_template_database']",
          "302:             )",
          "303:         );",
          "304:     } elseif ($export_type == 'table') {",
          "305:         echo htmlspecialchars(",
          "306:             $GLOBALS['PMA_Config']->getUserValue(",
          "307:                 'pma_table_filename_template',",
          "308:                 $GLOBALS['cfg']['Export']['file_template_table']",
          "309:             )",
          "310:         );",
          "311:     } else {",
          "312:         echo htmlspecialchars(",
          "313:             $GLOBALS['PMA_Config']->getUserValue(",
          "314:                 'pma_server_filename_template',",
          "315:                 $GLOBALS['cfg']['Export']['file_template_server']",
          "316:             )",
          "317:         );",
          "318:     }",
          "319: }",
          "320: echo '\"';",
          "321: echo '/>';",
          "322: echo '<input type=\"checkbox\" name=\"remember_template\" ';",
          "323: echo 'id=\"checkbox_remember_template\" ';",
          "324: PMA_exportCheckboxCheck('remember_file_template');",
          "325: echo '/>';",
          "326: echo '<label for=\"checkbox_remember_template\">';",
          "327: echo __('use this for future exports');",
          "328: echo '</label>';",
          "329: echo '</li>';",
          "331: if ($GLOBALS['PMA_recoding_engine'] != PMA_CHARSET_NONE) {",
          "332:     echo '        <li><label for=\"select_charset_of_file\" class=\"desc\">'",
          "333:         . __('Character set of the file:') . '</label>' . \"\\n\";",
          "334:     reset($cfg['AvailableCharsets']);",
          "335:     echo '<select id=\"select_charset_of_file\" name=\"charset_of_file\" size=\"1\">';",
          "336:     foreach ($cfg['AvailableCharsets'] as $temp_charset) {",
          "337:         echo '<option value=\"' . $temp_charset . '\"';",
          "338:         if (isset($_GET['charset_of_file']) && ($_GET['charset_of_file'] != $temp_charset)) {",
          "339:             echo '';",
          "340:         } elseif ((empty($cfg['Export']['charset']) && $temp_charset == 'utf-8')",
          "341:             || $temp_charset == $cfg['Export']['charset']",
          "342:         ) {",
          "343:             echo ' selected=\"selected\"';",
          "344:         }",
          "345:         echo '>' . $temp_charset . '</option>';",
          "346:     } // end foreach",
          "347:     echo '</select></li>';",
          "348: } // end if",
          "350: if (isset($_GET['compression'])) {",
          "351:     $selected_compression = $_GET['compression'];",
          "352: } elseif (isset($cfg['Export']['compression'])) {",
          "353:     $selected_compression = $cfg['Export']['compression'];",
          "354: } else {",
          "355:     $selected_compression = \"none\";",
          "356: }",
          "359: $is_zip  = ($cfg['ZipDump']  && @function_exists('gzcompress'));",
          "360: $is_gzip = ($cfg['GZipDump'] && @function_exists('gzencode'));",
          "361: $is_bzip2 = ($cfg['BZipDump'] && @function_exists('bzcompress'));",
          "362: if ($is_zip || $is_gzip || $is_bzip2) {",
          "363:     echo '<li>';",
          "364:     echo '<label for=\"compression\" class=\"desc\">' . __('Compression:') . '</label>';",
          "365:     echo '<select id=\"compression\" name=\"compression\">';",
          "366:     echo '<option value=\"none\">' . __('None') . '</option>';",
          "367:     if ($is_zip) {",
          "368:         echo '<option value=\"zip\" ';",
          "369:         if ($selected_compression == \"zip\") {",
          "370:             echo 'selected=\"selected\"';",
          "371:         }",
          "372:         echo '>' . __('zipped') . '</option>';",
          "373:     }",
          "374:     if ($is_gzip) {",
          "375:         echo '<option value=\"gzip\" ';",
          "376:         if ($selected_compression == \"gzip\") {",
          "377:             echo 'selected=\"selected\"';",
          "378:         }",
          "379:         echo '>' . __('gzipped') . '</option>';",
          "380:     }",
          "381:     if ($is_bzip2) {",
          "382:         echo '<option value=\"bzip2\" ';",
          "383:         if ($selected_compression == \"bzip2\") {",
          "384:             echo 'selected=\"selected\"';",
          "385:         }",
          "386:         echo '>' . __('bzipped') . '</option>';",
          "387:     }",
          "388:     echo '</select>';",
          "389:     echo '</li>';",
          "390: } else {",
          "391:     echo '<input type=\"hidden\" name=\"compression\" value=\"'",
          "392:         . htmlspecialchars($selected_compression) . '\" />';",
          "393: }",
          "394: echo '</ul>';",
          "395: echo '</li>';",
          "396: echo '<li>';",
          "397: echo '<input type=\"radio\" id=\"radio_view_as_text\" name=\"output_format\" '",
          "398:     . 'value=\"astext\" ';",
          "399: if (isset($_GET['repopulate']) || $GLOBALS['cfg']['Export']['asfile'] == false) {",
          "400:     echo 'checked=\"checked\"';",
          "401: }",
          "402: echo '/>';",
          "403: echo '<label for=\"radio_view_as_text\">'",
          "404:     . __('View output as text') . '</label></li>';",
          "405: echo '</ul>';",
          "406: echo '</div>';",
          "408: echo '<div class=\"exportoptions\" id=\"format\">';",
          "409: echo '<h3>' . __('Format:') . '</h3>';",
          "410: echo PMA_pluginGetChoice('Export', 'what', $export_list, 'format');",
          "411: echo '</div>';",
          "413: echo '<div class=\"exportoptions\" id=\"format_specific_opts\">';",
          "414: echo '<h3>' . __('Format-specific options:') . '</h3>';",
          "415: echo '<p class=\"no_js_msg\" id=\"scroll_to_options_msg\">';",
          "416: echo __('Scroll down to fill in the options for the selected format and ignore the options for other formats.');",
          "417: echo '</p>';",
          "418: echo PMA_pluginGetOptions('Export', $export_list);",
          "419: echo '</div>';",
          "421: if (function_exists('PMA_set_enc_form')) {",
          "424:     echo '<div class=\"exportoptions\" id=\"kanji_encoding\">';",
          "425:     echo '<h3>' . __('Encoding Conversion:') . '</h3>';",
          "426:     echo PMA_set_enc_form('            ');",
          "427:     echo '</div>';",
          "428: }",
          "430: echo '<div class=\"exportoptions\" id=\"submit\">';",
          "436: echo '<input type=\"submit\" value=\"' . __('Go') . '\" id=\"buttonGo\" />';",
          "437: echo '</div>';",
          "438: echo '</form>';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd456f76964706453c6234ba454b33a3de6e1862",
      "candidate_info": {
        "commit_hash": "cd456f76964706453c6234ba454b33a3de6e1862",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/cd456f76964706453c6234ba454b33a3de6e1862",
        "files": [
          "libraries/display_export.lib.php"
        ],
        "message": "Wrap some long lines",
        "before_after_code_files": [
          "libraries/display_export.lib.php||libraries/display_export.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ],
          "candidate": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/display_export.lib.php||libraries/display_export.lib.php": [
          "File: libraries/display_export.lib.php -> libraries/display_export.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "113: echo '<h3>' . __('Export Method:') . '</h3>';",
          "114: echo '<ul>';",
          "115: echo '<li>';",
          "117: if ($export_method == 'quick' || $export_method == 'quick_no_form') {",
          "118:     echo ' checked=\"checked\"';",
          "119: }",
          "",
          "[Removed Lines]",
          "116: echo '<input type=\"radio\" name=\"quick_or_custom\" value=\"quick\" id=\"radio_quick_export\"';",
          "",
          "[Added Lines]",
          "116: echo '<input type=\"radio\" name=\"quick_or_custom\" value=\"quick\" '",
          "117:     . ' id=\"radio_quick_export\"';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124: echo '</li>';",
          "126: echo '<li>';",
          "128: if ($export_method == 'custom' || $export_method == 'custom_no_form') {",
          "129:     echo ' checked=\"checked\"';",
          "130: }",
          "",
          "[Removed Lines]",
          "127: echo '<input type=\"radio\" name=\"quick_or_custom\" value=\"custom\" id=\"radio_custom_export\"';",
          "",
          "[Added Lines]",
          "128: echo '<input type=\"radio\" name=\"quick_or_custom\" value=\"custom\" '",
          "129:     . ' id=\"radio_custom_export\"';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "335:     echo '<select id=\"select_charset_of_file\" name=\"charset_of_file\" size=\"1\">';",
          "336:     foreach ($cfg['AvailableCharsets'] as $temp_charset) {",
          "337:         echo '<option value=\"' . $temp_charset . '\"';",
          "339:             echo '';",
          "340:         } elseif ((empty($cfg['Export']['charset']) && $temp_charset == 'utf-8')",
          "341:             || $temp_charset == $cfg['Export']['charset']",
          "",
          "[Removed Lines]",
          "338:         if (isset($_GET['charset_of_file']) && ($_GET['charset_of_file'] != $temp_charset)) {",
          "",
          "[Added Lines]",
          "340:         if (isset($_GET['charset_of_file'])",
          "341:             && ($_GET['charset_of_file'] != $temp_charset)",
          "342:         ) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "003d879a64971573400e22b0756800c92ce40864",
      "candidate_info": {
        "commit_hash": "003d879a64971573400e22b0756800c92ce40864",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/003d879a64971573400e22b0756800c92ce40864",
        "files": [
          "ChangeLog",
          "libraries/display_export.lib.php"
        ],
        "message": "Merge branch 'QA_3_4'",
        "before_after_code_files": [
          "libraries/display_export.lib.php||libraries/display_export.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ],
          "candidate": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/display_export.lib.php||libraries/display_export.lib.php": [
          "File: libraries/display_export.lib.php -> libraries/display_export.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:                 $is_zip  = ($cfg['ZipDump']  && @function_exists('gzcompress'));",
          "302:                 $is_gzip = ($cfg['GZipDump'] && @function_exists('gzencode'));",
          "305:                     <li>",
          "306:                     <label for=\"compression\" class=\"desc\"><?php echo __('Compression:'); ?></label>",
          "307:                     <select id=\"compression\" name=\"compression\">",
          "",
          "[Removed Lines]",
          "303:                 $is_bzip = ($cfg['BZipDump'] && @function_exists('bzcompress'));",
          "304:                 if ($is_zip || $is_gzip || $is_bzip) { ?>",
          "",
          "[Added Lines]",
          "303:                 $is_bzip2 = ($cfg['BZipDump'] && @function_exists('bzcompress'));",
          "304:                 if ($is_zip || $is_gzip || $is_bzip2) { ?>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "310:                             <option value=\"zip\" <?php echo ($selected_compression == \"zip\") ? 'selected=\"selected\"' : ''; ?>><?php echo __('zipped'); ?></option>",
          "311:                         <?php } if ($is_gzip) { ?>",
          "312:                             <option value=\"gzip\" <?php echo ($selected_compression == \"gzip\") ? 'selected=\"selected\"' : ''; ?>><?php echo __('gzipped'); ?></option>",
          "315:                         <?php } ?>",
          "316:                     </select>",
          "317:                     </li>",
          "",
          "[Removed Lines]",
          "313:                         <?php } if ($is_bzip) { ?>",
          "314:                             <option value=\"bzip\" <?php echo ($selected_compression == \"bzip\") ? 'selected=\"selected\"' : ''; ?>><?php echo __('bzipped'); ?></option>",
          "",
          "[Added Lines]",
          "313:                         <?php } if ($is_bzip2) { ?>",
          "314:                             <option value=\"bzip2\" <?php echo ($selected_compression == \"bzip2\") ? 'selected=\"selected\"' : ''; ?>><?php echo __('bzipped'); ?></option>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c555fc1b347dd25b02ce2e586d2d76c7c6b3d216",
      "candidate_info": {
        "commit_hash": "c555fc1b347dd25b02ce2e586d2d76c7c6b3d216",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/c555fc1b347dd25b02ce2e586d2d76c7c6b3d216",
        "files": [
          "ChangeLog",
          "libraries/config/ConfigFile.class.php",
          "libraries/display_export.lib.php"
        ],
        "message": "Fix merge conflicts",
        "before_after_code_files": [
          "libraries/config/ConfigFile.class.php||libraries/config/ConfigFile.class.php",
          "libraries/display_export.lib.php||libraries/display_export.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ],
          "candidate": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/config/ConfigFile.class.php||libraries/config/ConfigFile.class.php": [
          "File: libraries/config/ConfigFile.class.php -> libraries/config/ConfigFile.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:             return htmlspecialchars($verbose);",
          "418:         }",
          "419:         $host = $this->get(\"Servers/$id/host\");",
          "421:     }",
          "",
          "[Removed Lines]",
          "420:         return empty($host) ? 'localhost' : $host;",
          "",
          "[Added Lines]",
          "420:         return empty($host) ? 'localhost' : htmlspecialchars($host);",
          "",
          "---------------"
        ],
        "libraries/display_export.lib.php||libraries/display_export.lib.php": [
          "File: libraries/display_export.lib.php -> libraries/display_export.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:                     echo '<label for =\"radio_allrows_0\">' . __('Dump some row(s)') . '</label>'; ?>",
          "153:                 <ul>",
          "154:                     <li><label for=\"limit_to\"><?php echo __('Number of rows:') . '</label> <input type=\"text\" id=\"limit_to\" name=\"limit_to\" size=\"5\" value=\"'",
          "156:                 . '\" onfocus=\"this.select()\" />' ?></li>",
          "157:                     <li><label for=\"limit_from\"><?php echo __('Row to begin at:') . '</label> <input type=\"text\" id=\"limit_from\" name=\"limit_from\" value=\"'",
          "159:                  . '\" size=\"5\" onfocus=\"this.select()\" />'; ?></li>",
          "160:                 </ul>",
          "161:             </li>",
          "",
          "[Removed Lines]",
          "155:                 . ((isset($_GET['limit_to'])) ? $_GET['limit_to'] : ((isset($unlim_num_rows) ? $unlim_num_rows : PMA_Table::countRecords($db, $table))))",
          "158:                  . ((isset($_GET['limit_from'])) ? $_GET['limit_from'] : '0')",
          "",
          "[Added Lines]",
          "155:                 . ((isset($_GET['limit_to'])) ? htmlspecialchars($_GET['limit_to']) : ((isset($unlim_num_rows) ? $unlim_num_rows : PMA_Table::countRecords($db, $table))))",
          "158:                  . ((isset($_GET['limit_from'])) ? htmlspecialchars($_GET['limit_from']) : '0')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "244:                     <?php",
          "245:                         echo ' value=\"';",
          "246:                         if (isset($_GET['filename_template'])) {",
          "248:                         } else {",
          "249:                             if ($export_type == 'database') {",
          "250:                                 echo htmlspecialchars($GLOBALS['PMA_Config']->getUserValue(",
          "",
          "[Removed Lines]",
          "247:                             echo $_GET['filename_template'];",
          "",
          "[Added Lines]",
          "247:                             echo htmlspecialchars($_GET['filename_template']);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71b01ec8799280a5f2967c98286673e963836bb0",
      "candidate_info": {
        "commit_hash": "71b01ec8799280a5f2967c98286673e963836bb0",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/71b01ec8799280a5f2967c98286673e963836bb0",
        "files": [
          "libraries/common.lib.php",
          "libraries/display_export.lib.php"
        ],
        "message": "Modifications to PMA_externalBug() function in common.lib.php and renamed as PMA_getExternalBug()",
        "before_after_code_files": [
          "libraries/common.lib.php||libraries/common.lib.php",
          "libraries/display_export.lib.php||libraries/display_export.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ],
          "candidate": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/common.lib.php||libraries/common.lib.php": [
          "File: libraries/common.lib.php -> libraries/common.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2598:     if ($component == 'mysql' && PMA_MYSQL_INT_VERSION < $minimum_version) {",
          "2600:             sprintf(",
          "2601:                 __('The %s functionality is affected by a known bug, see %s'),",
          "2602:                 $functionality,",
          "2603:                 PMA_linkURL('http://bugs.mysql.com/') . $bugref",
          "2604:             )",
          "2605:         );",
          "2607: }",
          "",
          "[Removed Lines]",
          "2596: function PMA_externalBug($functionality, $component, $minimum_version, $bugref)",
          "2597: {",
          "2599:         echo PMA_showHint(",
          "2606:     }",
          "",
          "[Added Lines]",
          "2596: function PMA_getExternalBug($functionality, $component, $minimum_version, $bugref)",
          "2597: {",
          "2598:     $ext_but_html = '';",
          "2600:         $ext_but_html .= PMA_showHint(",
          "2607:     }",
          "2608:     return $ext_but_html;",
          "",
          "---------------"
        ],
        "libraries/display_export.lib.php||libraries/display_export.lib.php": [
          "File: libraries/display_export.lib.php -> libraries/display_export.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "360: <?php } ?>",
          "362: <div class=\"exportoptions\" id=\"submit\">",
          "364:     <input type=\"submit\" value=\"<?php echo __('Go'); ?>\" id=\"buttonGo\" />",
          "365: </div>",
          "366: </form>",
          "",
          "[Removed Lines]",
          "363: <?php PMA_externalBug(__('SQL compatibility mode'), 'mysql', '50027', '14515'); ?>",
          "",
          "[Added Lines]",
          "363: <?php echo PMA_getExternalBug(__('SQL compatibility mode'), 'mysql', '50027', '14515'); ?>",
          "",
          "---------------"
        ]
      }
    }
  ]
}