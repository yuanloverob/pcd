{
  "cve_id": "CVE-2014-5165",
  "cve_desc": "The dissect_ber_constrained_bitstring function in epan/dissectors/packet-ber.c in the ASN.1 BER dissector in Wireshark 1.10.x before 1.10.9 does not properly validate padding values, which allows remote attackers to cause a denial of service (buffer underflow and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "17a552666b50896a9b9dde8ee6a1052e7f9a622e",
  "patch_info": {
    "commit_hash": "17a552666b50896a9b9dde8ee6a1052e7f9a622e",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/17a552666b50896a9b9dde8ee6a1052e7f9a622e",
    "files": [
      "epan/dissectors/packet-ber.c"
    ],
    "message": "fix underflow in BER constrained bitstrings\n\nthis can happen and cause invalid memory accesses with incorrectly-large padding\nvalues\n\nBug:10187\nChange-Id: Ib9b2a2fa10766efb4d95d588f57354a56373c626\nReviewed-on: https://code.wireshark.org/review/2325\nReviewed-by: Evan Huus <eapache@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c": [
      "File: epan/dissectors/packet-ber.c -> epan/dissectors/packet-ber.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3855:         bitstring = (guint8 *)tvb_memdup(wmem_packet_scope(), tvb, offset, len);",
      "3857:         while (nb->p_id) {",
      "3859:                 val = tvb_get_guint8(tvb, offset + nb->bit/8);",
      "3860:                 bitstring[(nb->bit/8)] &= ~(0x80 >> (nb->bit%8));",
      "3861:                 val &= 0x80 >> (nb->bit%8);",
      "",
      "[Removed Lines]",
      "3858:             if ((len > 0) && (nb->bit < (8*len-pad))) {",
      "",
      "[Added Lines]",
      "3858:             if ((len > 0) && (pad < 8*len) && (nb->bit < (8*len-pad))) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1eb9b9ec1e7cb0a8617ea3b5a94a2d9f5a0869ed",
      "candidate_info": {
        "commit_hash": "1eb9b9ec1e7cb0a8617ea3b5a94a2d9f5a0869ed",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1eb9b9ec1e7cb0a8617ea3b5a94a2d9f5a0869ed",
        "files": [
          "epan/dissectors/packet-ber.c"
        ],
        "message": "fix underflow in BER constrained bitstrings\n\nthis can happen and cause invalid memory accesses with incorrectly-large padding\nvalues\n\nBug:10187\nChange-Id: Ib9b2a2fa10766efb4d95d588f57354a56373c626\nReviewed-on: https://code.wireshark.org/review/2328\nReviewed-by: Evan Huus <eapache@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c": [
          "File: epan/dissectors/packet-ber.c -> epan/dissectors/packet-ber.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4854:         bitstring = tvb_get_ephemeral_string(tvb, offset, len);",
          "4856:         while (nb->p_id) {",
          "4858:                 val = tvb_get_guint8(tvb, offset + nb->bit/8);",
          "4859:                 bitstring[(nb->bit/8)] &= ~(0x80 >> (nb->bit%8));",
          "4860:                 val &= 0x80 >> (nb->bit%8);",
          "",
          "[Removed Lines]",
          "4857:             if ((len > 0) && (nb->bit < (8*len-pad))) {",
          "",
          "[Added Lines]",
          "4857:             if ((len > 0) && (pad < 8*len) && (nb->bit < (8*len-pad))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e13dd1c8d17aa3460cf751cddaa1c6d982af60a6",
      "candidate_info": {
        "commit_hash": "e13dd1c8d17aa3460cf751cddaa1c6d982af60a6",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/e13dd1c8d17aa3460cf751cddaa1c6d982af60a6",
        "files": [
          "epan/dissectors/packet-ber.c"
        ],
        "message": "fix underflow in BER constrained bitstrings\n\nthis can happen and cause invalid memory accesses with incorrectly-large padding\nvalues\n\nConflicts:\n\tepan/dissectors/packet-ber.c\n\nBug:10187\nChange-Id: Ib9b2a2fa10766efb4d95d588f57354a56373c626\nReviewed-on: https://code.wireshark.org/review/2328\nReviewed-by: Evan Huus <eapache@gmail.com>\nReviewed-on: https://code.wireshark.org/review/3438\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c": [
          "File: epan/dissectors/packet-ber.c -> epan/dissectors/packet-ber.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4459:         bitstring = tvb_get_ephemeral_string(tvb, offset, len);",
          "4461:         while (nb->p_id) {",
          "4463:                 val = tvb_get_guint8(tvb, offset + nb->bit/8);",
          "4464:                 bitstring[(nb->bit/8)] &= ~(0x80 >> (nb->bit%8));",
          "4465:                 val &= 0x80 >> (nb->bit%8);",
          "",
          "[Removed Lines]",
          "4462:             if(len > 0 && nb->bit < (8*len-pad)) {",
          "",
          "[Added Lines]",
          "4462:             if ((len > 0) && (pad < 8*len) && (nb->bit < (8*len-pad))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d0156c4cbc2f51491b8ca2f31b18d92915ac8f8b",
      "candidate_info": {
        "commit_hash": "d0156c4cbc2f51491b8ca2f31b18d92915ac8f8b",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/d0156c4cbc2f51491b8ca2f31b18d92915ac8f8b",
        "files": [
          "epan/dissectors/packet-ber.c"
        ],
        "message": "fix underflow in BER constrained bitstrings\n\nthis can happen and cause invalid memory accesses with incorrectly-large padding\nvalues\n\nBug:10187\nChange-Id: Ib9b2a2fa10766efb4d95d588f57354a56373c626\nReviewed-on: https://code.wireshark.org/review/2327\nReviewed-by: Evan Huus <eapache@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ber.c||epan/dissectors/packet-ber.c": [
          "File: epan/dissectors/packet-ber.c -> epan/dissectors/packet-ber.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3855:         bitstring = (guint8 *)tvb_memdup(wmem_packet_scope(), tvb, offset, len);",
          "3857:         while (nb->p_id) {",
          "3859:                 val = tvb_get_guint8(tvb, offset + nb->bit/8);",
          "3860:                 bitstring[(nb->bit/8)] &= ~(0x80 >> (nb->bit%8));",
          "3861:                 val &= 0x80 >> (nb->bit%8);",
          "",
          "[Removed Lines]",
          "3858:             if ((len > 0) && (nb->bit < (8*len-pad))) {",
          "",
          "[Added Lines]",
          "3858:             if ((len > 0) && (pad < 8*len) && (nb->bit < (8*len-pad))) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}