{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ff552ddbaa3cde93301f5227c95971ddd02682ef",
      "candidate_info": {
        "commit_hash": "ff552ddbaa3cde93301f5227c95971ddd02682ef",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ff552ddbaa3cde93301f5227c95971ddd02682ef",
        "files": [
          "lib/tls.js",
          "test/pummel/test-tls-ci-reneg-attack.js"
        ],
        "message": "tls: fix off-by-one error in renegotiation check\n\nMake CLIENT_RENEG_LIMIT inclusive instead of exclusive, i.e. a limit of 2\nmeans the peer can renegotiate twice, not just once.\n\nUpdate pummel/test-tls-ci-reneg-attack accordingly and make it less timing\nsensitive (and run faster) while we're at it.",
        "before_after_code_files": [
          "lib/tls.js||litls.js",
          "test/pummel/test-tls-ci-reneg-attack.js||test/pummel/test-tls-ci-reneg-attack.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "572:   debug('onhandshakestart');",
          "574:   var self = this, ssl = this.ssl;",
          "578:     function timeout() {",
          "579:       ssl.handshakes = 0;",
          "580:       ssl.timer = null;",
          "581:     }",
          "582:     ssl.timer = setTimeout(timeout, exports.CLIENT_RENEG_WINDOW * 1000);",
          "583:   }",
          "",
          "[Removed Lines]",
          "575:   ssl.handshakes++;",
          "577:   if (ssl.handshakes === 1) {",
          "584:   else if (ssl.handshakes >= exports.CLIENT_RENEG_LIMIT) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/pummel/test-tls-ci-reneg-attack.js||test/pummel/test-tls-ci-reneg-attack.js": [
          "File: test/pummel/test-tls-ci-reneg-attack.js -> test/pummel/test-tls-ci-reneg-attack.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     key: fs.readFileSync(common.fixturesDir + '/test_key.pem')",
          "50:   };",
          "52:   var server = tls.createServer(options, function(conn) {",
          "53:     conn.on('error', function(err) {",
          "54:       console.error('Caught exception: ' + err);",
          "55:       assert(/TLS session renegotiation attack/.test(err));",
          "56:       conn.destroy();",
          "57:     });",
          "58:     conn.pipe(conn);",
          "59:   });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:   var seenError = false;",
          "59:       seenError = true;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:     var handshakes = 0;",
          "70:     child.stderr.on('data', function(data) {",
          "71:       handshakes += (('' + data).match(/verify return:1/g) || []).length;",
          "72:       if (handshakes === 2) spam();",
          "73:     });",
          "75:     child.on('exit', function() {",
          "80:       server.close();",
          "81:       process.nextTick(next);",
          "82:     });",
          "",
          "[Removed Lines]",
          "79:       assert.equal(handshakes, 2 * Math.max(2, tls.CLIENT_RENEG_LIMIT));",
          "",
          "[Added Lines]",
          "73:     var renegs = 0;",
          "76:       if (seenError) return;",
          "79:       renegs += (('' + data).match(/RENEGOTIATING/g) || []).length;",
          "83:       assert.equal(renegs, tls.CLIENT_RENEG_LIMIT + 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "94:     function spam() {",
          "95:       if (closed) return;",
          "96:       child.stdin.write('R\\n');",
          "98:     }",
          "99:   });",
          "100: }",
          "",
          "[Removed Lines]",
          "97:       setTimeout(spam, 250);",
          "",
          "[Added Lines]",
          "101:       setTimeout(spam, 50);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "40c93486e8b08f7f37dfd8be95ff03990ab858bd",
      "candidate_info": {
        "commit_hash": "40c93486e8b08f7f37dfd8be95ff03990ab858bd",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/40c93486e8b08f7f37dfd8be95ff03990ab858bd",
        "files": [
          "lib/zlib.js",
          "test/simple/test-zlib-invalid-input.js"
        ],
        "message": "Fix #2365 zlib crashing on invalid input\n\nFix zlib crashes on error due to improper use of removeListener\nin the error handler",
        "before_after_code_files": [
          "lib/zlib.js||lizlib.js",
          "test/simple/test-zlib-invalid-input.js||test/simple/test-zlib-invalid-input.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/zlib.js||lizlib.js": [
          "File: lib/zlib.js -> lizlib.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:   var buffers = [];",
          "123:   var nread = 0;",
          "128:     callback(err);",
          "132:     buffers.push(chunk);",
          "133:     nread += chunk.length;",
          "137:     var buffer;",
          "138:     switch(buffers.length) {",
          "139:       case 0:",
          "",
          "[Removed Lines]",
          "125:   engine.on('error', function(err) {",
          "126:     engine.removeListener('end');",
          "127:     engine.removeListener('error');",
          "129:   });",
          "131:   engine.on('data', function(chunk) {",
          "134:   });",
          "136:   engine.on('end', function() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:         break;",
          "154:     }",
          "155:     callback(null, buffer);",
          "158:   engine.write(buffer);",
          "159:   engine.end();",
          "",
          "[Removed Lines]",
          "156:   });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-zlib-invalid-input.js||test/simple/test-zlib-invalid-input.js": [
          "File: test/simple/test-zlib-invalid-input.js -> test/simple/test-zlib-invalid-input.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: var common = require('../common.js'),",
          "25:     assert = require('assert'),",
          "26:     zlib = require('zlib');",
          "28: var nonStringInputs = [1, true, {a: 1}, ['a']];",
          "30: nonStringInputs.forEach(function(input) {",
          "32:   assert.doesNotThrow(function () {",
          "33:     zlib.gunzip(input, function (err, buffer) {",
          "35:       assert.ok(err);",
          "36:     });",
          "37:   });",
          "38: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0ca30187cfc4c437510bf0ed3d27a660ba54c80b",
      "candidate_info": {
        "commit_hash": "0ca30187cfc4c437510bf0ed3d27a660ba54c80b",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0ca30187cfc4c437510bf0ed3d27a660ba54c80b",
        "files": [
          "doc/api/crypto.markdown",
          "src/node_crypto.cc",
          "test/simple/test-crypto-padding.js"
        ],
        "message": "Crypto: adding ability to turn off automatic PKCS padding",
        "before_after_code_files": [
          "src/node_crypto.cc||src/node_crypto.cc",
          "test/simple/test-crypto-padding.js||test/simple/test-crypto-padding.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1882:     NODE_SET_PROTOTYPE_METHOD(t, \"init\", CipherInit);",
          "1883:     NODE_SET_PROTOTYPE_METHOD(t, \"initiv\", CipherInitIv);",
          "1884:     NODE_SET_PROTOTYPE_METHOD(t, \"update\", CipherUpdate);",
          "1885:     NODE_SET_PROTOTYPE_METHOD(t, \"final\", CipherFinal);",
          "1887:     target->Set(String::NewSymbol(\"Cipher\"), t->GetFunction());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1885:     NODE_SET_PROTOTYPE_METHOD(t, \"setAutoPadding\", SetAutoPadding);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1955:     return 1;",
          "1956:   }",
          "1958:   int CipherFinal(unsigned char** out, int *out_len) {",
          "1959:     if (!initialised_) return 0;",
          "1962:     EVP_CIPHER_CTX_cleanup(&ctx);",
          "1963:     initialised_ = false;",
          "1965:   }",
          "1968:  protected:",
          "1971:     HandleScope scope;",
          "1973:     Cipher *cipher = new Cipher();",
          "",
          "[Removed Lines]",
          "1961:     EVP_CipherFinal_ex(&ctx,*out,out_len);",
          "1964:     return 1;",
          "1970:   static Handle<Value> New (const Arguments& args) {",
          "",
          "[Added Lines]",
          "1958:   int SetAutoPadding(bool auto_padding) {",
          "1959:     if (!initialised_) return 0;",
          "1960:     return EVP_CIPHER_CTX_set_padding(&ctx, auto_padding ? 1 : 0);",
          "1961:   }",
          "1966:     int r = EVP_CipherFinal_ex(&ctx,*out, out_len);",
          "1969:     return r;",
          "1975:   static Handle<Value> New(const Arguments& args) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2155:     return scope.Close(outString);",
          "2156:   }",
          "2158:   static Handle<Value> CipherFinal(const Arguments& args) {",
          "2159:     Cipher *cipher = ObjectWrap::Unwrap<Cipher>(args.This());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2163:   static Handle<Value> SetAutoPadding(const Arguments& args) {",
          "2164:     HandleScope scope;",
          "2165:     Cipher *cipher = ObjectWrap::Unwrap<Cipher>(args.This());",
          "2167:     cipher->SetAutoPadding(args.Length() < 1 || args[0]->BooleanValue());",
          "2169:     return Undefined();",
          "2170:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2169:     int r = cipher->CipherFinal(&out_value, &out_len);",
          "2171:     assert(out_value != NULL);",
          "2174:     if (out_len == 0 || r == 0) {",
          "2176:     }",
          "2178:     enum encoding enc = ParseEncoding(args[0], BINARY);",
          "",
          "[Removed Lines]",
          "2172:     assert(out_len != -1);",
          "2175:       return scope.Close(String::New(\"\"));",
          "",
          "[Added Lines]",
          "2186:     assert(out_len != -1 || r == 0);",
          "2190:       delete[] out_value;",
          "2191:       if (r == 0) {",
          "2192:         Local<Value> exception = Exception::TypeError(",
          "2193:           String::New(\"CipherFinal fail\"));",
          "2194:         return ThrowException(exception);",
          "2195:       } else {",
          "2196:         return scope.Close(String::New(\"\"));",
          "2197:       }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2247:     NODE_SET_PROTOTYPE_METHOD(t, \"initiv\", DecipherInitIv);",
          "2248:     NODE_SET_PROTOTYPE_METHOD(t, \"update\", DecipherUpdate);",
          "2249:     NODE_SET_PROTOTYPE_METHOD(t, \"final\", DecipherFinal<false>);",
          "2250:     NODE_SET_PROTOTYPE_METHOD(t, \"finaltol\", DecipherFinal<true>);",
          "2252:     target->Set(String::NewSymbol(\"Decipher\"), t->GetFunction());",
          "2253:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2274:     NODE_SET_PROTOTYPE_METHOD(t, \"setAutoPadding\", SetAutoPadding);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2330:     return 1;",
          "2331:   }",
          "2334:   template <bool TOLERATE_PADDING>",
          "2335:   int DecipherFinal(unsigned char** out, int *out_len) {",
          "2336:     if (!initialised_) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2357:   int SetAutoPadding(bool auto_padding) {",
          "2358:     if (!initialised_) return 0;",
          "2359:     return EVP_CIPHER_CTX_set_padding(&ctx, auto_padding ? 1 : 0);",
          "2360:   }",
          "2365:     int r;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2343:     if (TOLERATE_PADDING) {",
          "2345:     } else {",
          "2347:     }",
          "2348:     EVP_CIPHER_CTX_cleanup(&ctx);",
          "2349:     initialised_ = false;",
          "2351:   }",
          "",
          "[Removed Lines]",
          "2344:       local_EVP_DecryptFinal_ex(&ctx,*out,out_len);",
          "2346:       EVP_CipherFinal_ex(&ctx,*out,out_len);",
          "2350:     return 1;",
          "",
          "[Added Lines]",
          "2375:       r = local_EVP_DecryptFinal_ex(&ctx,*out,out_len);",
          "2377:       r = EVP_CipherFinal_ex(&ctx,*out,out_len);",
          "2381:     return r;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2581:   }",
          "2583:   template <bool TOLERATE_PADDING>",
          "2584:   static Handle<Value> DecipherFinal(const Arguments& args) {",
          "2585:     HandleScope scope;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2614:   static Handle<Value> SetAutoPadding(const Arguments& args) {",
          "2615:     HandleScope scope;",
          "2616:     Decipher *cipher = ObjectWrap::Unwrap<Decipher>(args.This());",
          "2618:     cipher->SetAutoPadding(args.Length() < 1 || args[0]->BooleanValue());",
          "2620:     return Undefined();",
          "2621:   }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2596:     assert(out_len != -1);",
          "2598:     if (out_len == 0 || r == 0) {",
          "2601:     }",
          "2603:     if (args.Length() == 0 || !args[0]->IsString()) {",
          "",
          "[Removed Lines]",
          "2599:       delete[] out_value;",
          "2600:       return scope.Close(String::New(\"\"));",
          "",
          "[Added Lines]",
          "2639:       delete [] out_value; // allocated even if out_len == 0",
          "2640:       if (r == 0) {",
          "2641:         Local<Value> exception = Exception::TypeError(",
          "2642:           String::New(\"DecipherFinal fail\"));",
          "2643:         return ThrowException(exception);",
          "2644:       } else {",
          "2645:         return scope.Close(String::New(\"\"));",
          "2646:       }",
          "",
          "---------------"
        ],
        "test/simple/test-crypto-padding.js||test/simple/test-crypto-padding.js": [
          "File: test/simple/test-crypto-padding.js -> test/simple/test-crypto-padding.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "25: try {",
          "26:   var crypto = require('crypto');",
          "27: } catch (e) {",
          "28:   console.log('Not compiled with OPENSSL support.');",
          "29:   process.exit();",
          "30: }",
          "37: var ODD_LENGTH_PLAIN = 'Hello node world!',",
          "38:     EVEN_LENGTH_PLAIN = 'Hello node world!AbC09876dDeFgHi';",
          "40: var KEY_PLAIN = 'S3c.r.e.t.K.e.Y!',",
          "41:     IV_PLAIN = 'blahFizz2011Buzz';",
          "43: var CIPHER_NAME = 'aes-128-cbc';",
          "51: var ODD_LENGTH_ENCRYPTED = '7f57859550d4d2fdb9806da2a750461a9fe77253cd1cbd4b07beee4e070d561f';",
          "54: var EVEN_LENGTH_ENCRYPTED = '7f57859550d4d2fdb9806da2a750461ab46e71b3d78ebe2d9684dfc87f7575b9886119866912cb8c7bcaf76c5ebc2378';",
          "57: var EVEN_LENGTH_ENCRYPTED_NOPAD = '7f57859550d4d2fdb9806da2a750461ab46e71b3d78ebe2d9684dfc87f7575b9';",
          "64: function enc(plain, pad) {",
          "65:   var encrypt = crypto.createCipheriv(CIPHER_NAME, KEY_PLAIN, IV_PLAIN);",
          "66:   encrypt.setAutoPadding(pad);",
          "67:   var hex = encrypt.update(plain, 'ascii', 'hex');",
          "68:   hex += encrypt.final('hex');",
          "69:   return hex;",
          "70: }",
          "72: function dec(encd, pad) {",
          "73:   var decrypt = crypto.createDecipheriv(CIPHER_NAME, KEY_PLAIN, IV_PLAIN);",
          "74:   decrypt.setAutoPadding(pad);",
          "75:   var plain = decrypt.update(encd, 'hex');",
          "76:   plain += decrypt.final('binary');",
          "77:   return plain;",
          "78: }",
          "85: assert.equal(enc(ODD_LENGTH_PLAIN, true), ODD_LENGTH_ENCRYPTED);",
          "86: assert.equal(enc(EVEN_LENGTH_PLAIN, true), EVEN_LENGTH_ENCRYPTED);",
          "88: assert.throws(function() {",
          "90:   enc(ODD_LENGTH_PLAIN, false);",
          "91: });",
          "93: assert.doesNotThrow(function() {",
          "94:   assert.equal(enc(EVEN_LENGTH_PLAIN, false), EVEN_LENGTH_ENCRYPTED_NOPAD);",
          "95: });",
          "102: assert.equal(dec(ODD_LENGTH_ENCRYPTED, true), ODD_LENGTH_PLAIN);",
          "103: assert.equal(dec(EVEN_LENGTH_ENCRYPTED, true), EVEN_LENGTH_PLAIN);",
          "105: assert.doesNotThrow(function() {",
          "107:   assert.equal(dec(ODD_LENGTH_ENCRYPTED, false).length, 32);",
          "108:   assert.equal(dec(EVEN_LENGTH_ENCRYPTED, false).length, 48);",
          "109: });",
          "111: assert.throws(function() {",
          "113:   assert.equal(dec(EVEN_LENGTH_ENCRYPTED_NOPAD, true), EVEN_LENGTH_PLAIN);",
          "114: });",
          "116: assert.doesNotThrow(function() {",
          "118:   assert.equal(dec(EVEN_LENGTH_ENCRYPTED_NOPAD, false), EVEN_LENGTH_PLAIN);",
          "119: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "87bb848268820ec9b91ea860dadf3ba3769cdea4",
      "candidate_info": {
        "commit_hash": "87bb848268820ec9b91ea860dadf3ba3769cdea4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/87bb848268820ec9b91ea860dadf3ba3769cdea4",
        "files": [
          "src/cares_wrap.cc",
          "src/fs_event_wrap.cc",
          "src/handle_wrap.cc",
          "src/node.cc",
          "src/node.h",
          "src/node_crypto.cc",
          "src/node_file.cc",
          "src/node_zlib.cc",
          "src/pipe_wrap.cc",
          "src/process_wrap.cc",
          "src/stream_wrap.cc",
          "src/tcp_wrap.cc",
          "src/timer_wrap.cc",
          "src/tty_wrap.cc",
          "src/udp_wrap.cc"
        ],
        "message": "Remove node_isolate.h from node.h",
        "before_after_code_files": [
          "src/cares_wrap.cc||src/cares_wrap.cc",
          "src/fs_event_wrap.cc||src/fs_event_wrap.cc",
          "src/handle_wrap.cc||src/handle_wrap.cc",
          "src/node.cc||src/node.cc",
          "src/node.h||src/node.h",
          "src/node_crypto.cc||src/node_crypto.cc",
          "src/node_file.cc||src/node_file.cc",
          "src/node_zlib.cc||src/node_zlib.cc",
          "src/pipe_wrap.cc||src/pipe_wrap.cc",
          "src/process_wrap.cc||src/process_wrap.cc",
          "src/stream_wrap.cc||src/stream_wrap.cc",
          "src/tcp_wrap.cc||src/tcp_wrap.cc",
          "src/timer_wrap.cc||src/timer_wrap.cc",
          "src/tty_wrap.cc||src/tty_wrap.cc",
          "src/udp_wrap.cc||src/udp_wrap.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/cares_wrap.cc||src/cares_wrap.cc": [
          "File: src/cares_wrap.cc -> src/cares_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <assert.h>",
          "23: #include <node.h>",
          "24: #include <req_wrap.h>",
          "25: #include <uv.h>",
          "27: #include <string.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/fs_event_wrap.cc||src/fs_event_wrap.cc": [
          "File: src/fs_event_wrap.cc -> src/fs_event_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <node.h>",
          "23: #include <handle_wrap.h>",
          "25: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/handle_wrap.cc||src/handle_wrap.cc": [
          "File: src/handle_wrap.cc -> src/handle_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <node.h>",
          "23: #include <handle_wrap.h>",
          "25: namespace node {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <node.h>",
          "24: #include <uv.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/node.h||src/node.h": [
          "File: src/node.h -> src/node.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: #include <sys/stat.h>",
          "65: #include <assert.h>",
          "68: #include <node_object_wrap.h>",
          "70: #if NODE_WANT_INTERNALS",
          "",
          "[Removed Lines]",
          "67: #include <node_isolate.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include <node.h>",
          "26: #include <node_buffer.h>",
          "27: #include <node_root_certs.h>",
          "29: #include <string.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/node_file.cc||src/node_file.cc": [
          "File: src/node_file.cc -> src/node_file.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"node.h\"",
          "23: #include \"node_file.h\"",
          "24: #include \"node_buffer.h\"",
          "25: #ifdef __POSIX__",
          "26: # include \"node_stat_watcher.h\"",
          "27: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/node_zlib.cc||src/node_zlib.cc": [
          "File: src/node_zlib.cc -> src/node_zlib.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #include <node.h>",
          "31: #include <node_buffer.h>",
          "32: #include <req_wrap.h>",
          "34: #include <node_vars.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/pipe_wrap.cc||src/pipe_wrap.cc": [
          "File: src/pipe_wrap.cc -> src/pipe_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <node.h>",
          "23: #include <node_buffer.h>",
          "24: #include <req_wrap.h>",
          "25: #include <handle_wrap.h>",
          "26: #include <stream_wrap.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/process_wrap.cc||src/process_wrap.cc": [
          "File: src/process_wrap.cc -> src/process_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <node.h>",
          "23: #include <handle_wrap.h>",
          "24: #include <pipe_wrap.h>",
          "25: #include <string.h>",
          "26: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/stream_wrap.cc||src/stream_wrap.cc": [
          "File: src/stream_wrap.cc -> src/stream_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <node.h>",
          "23: #include <node_buffer.h>",
          "24: #include <handle_wrap.h>",
          "25: #include <stream_wrap.h>",
          "26: #include <tcp_wrap.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/tcp_wrap.cc||src/tcp_wrap.cc": [
          "File: src/tcp_wrap.cc -> src/tcp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <node.h>",
          "23: #include <node_buffer.h>",
          "24: #include <req_wrap.h>",
          "25: #include <handle_wrap.h>",
          "26: #include <stream_wrap.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/timer_wrap.cc||src/timer_wrap.cc": [
          "File: src/timer_wrap.cc -> src/timer_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <node.h>",
          "23: #include <handle_wrap.h>",
          "25: #define UNWRAP \\",
          "26:   assert(!args.Holder().IsEmpty()); \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/tty_wrap.cc||src/tty_wrap.cc": [
          "File: src/tty_wrap.cc -> src/tty_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <node.h>",
          "23: #include <node_buffer.h>",
          "24: #include <req_wrap.h>",
          "25: #include <handle_wrap.h>",
          "26: #include <stream_wrap.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include <node_isolate.h>",
          "",
          "---------------"
        ],
        "src/udp_wrap.cc||src/udp_wrap.cc": [
          "File: src/udp_wrap.cc -> src/udp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <node.h>",
          "23: #include <node_buffer.h>",
          "25: #include <req_wrap.h>",
          "26: #include <handle_wrap.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include <node_isolate.h>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff2a1b86c31d481917b942ff62492365b7801cd1",
      "candidate_info": {
        "commit_hash": "ff2a1b86c31d481917b942ff62492365b7801cd1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ff2a1b86c31d481917b942ff62492365b7801cd1",
        "files": [
          "doc/blog.html",
          "doc/blog/npm/managing-node-js-dependencies-with-shrinkwrap.md",
          "tools/blog/generate.js"
        ],
        "message": "blog: Minor tweaks to style and some data conversion cleanup",
        "before_after_code_files": [
          "tools/blog/generate.js||tools/blog/generate.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/blog/generate.js||tools/blog/generate.js": [
          "File: tools/blog/generate.js -> tools/blog/generate.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: var template = path.resolve(process.argv[4]);",
          "14: var config = {",
          "16: };",
          "18: console.error(\"argv=%j\", process.argv)",
          "",
          "[Removed Lines]",
          "15:   postsPerPage: 5",
          "",
          "[Added Lines]",
          "15:   postsPerPage: 4",
          "",
          "---------------"
        ]
      }
    }
  ]
}