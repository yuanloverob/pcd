{
  "cve_id": "CVE-2019-9003",
  "cve_desc": "In the Linux kernel before 4.20.5, attackers can trigger a drivers/char/ipmi/ipmi_msghandler.c use-after-free and OOPS by arranging for certain simultaneous execution of the code, as demonstrated by a \"service ipmievd restart\" loop.",
  "repo": "torvalds/linux",
  "patch_hash": "77f8269606bf95fcb232ee86f6da80886f1dfae8",
  "patch_info": {
    "commit_hash": "77f8269606bf95fcb232ee86f6da80886f1dfae8",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/77f8269606bf95fcb232ee86f6da80886f1dfae8",
    "files": [
      "drivers/char/ipmi/ipmi_msghandler.c"
    ],
    "message": "ipmi: fix use-after-free of user->release_barrier.rda\n\nWhen we do the following test, we got oops in ipmi_msghandler driver\nwhile((1))\ndo\n\tservice ipmievd restart & service ipmievd restart\ndone\n\n---------------------------------------------------------------\n[  294.230186] Unable to handle kernel paging request at virtual address 0000803fea6ea008\n[  294.230188] Mem abort info:\n[  294.230190]   ESR = 0x96000004\n[  294.230191]   Exception class = DABT (current EL), IL = 32 bits\n[  294.230193]   SET = 0, FnV = 0\n[  294.230194]   EA = 0, S1PTW = 0\n[  294.230195] Data abort info:\n[  294.230196]   ISV = 0, ISS = 0x00000004\n[  294.230197]   CM = 0, WnR = 0\n[  294.230199] user pgtable: 4k pages, 48-bit VAs, pgdp = 00000000a1c1b75a\n[  294.230201] [0000803fea6ea008] pgd=0000000000000000\n[  294.230204] Internal error: Oops: 96000004 [#1] SMP\n[  294.235211] Modules linked in: nls_utf8 isofs rpcrdma ib_iser ib_srpt target_core_mod ib_srp scsi_transport_srp ib_ipoib rdma_ucm ib_umad rdma_cm ib_cm iw_cm dm_mirror dm_region_hash dm_log dm_mod aes_ce_blk crypto_simd cryptd aes_ce_cipher ghash_ce sha2_ce ses sha256_arm64 sha1_ce hibmc_drm hisi_sas_v2_hw enclosure sg hisi_sas_main sbsa_gwdt ip_tables mlx5_ib ib_uverbs marvell ib_core mlx5_core ixgbe ipmi_si mdio hns_dsaf ipmi_devintf ipmi_msghandler hns_enet_drv hns_mdio\n[  294.277745] CPU: 3 PID: 0 Comm: swapper/3 Kdump: loaded Not tainted 5.0.0-rc2+ #113\n[  294.285511] Hardware name: Huawei TaiShan 2280 /BC11SPCD, BIOS 1.37 11/21/2017\n[  294.292835] pstate: 80000005 (Nzcv daif -PAN -UAO)\n[  294.297695] pc : __srcu_read_lock+0x38/0x58\n[  294.301940] lr : acquire_ipmi_user+0x2c/0x70 [ipmi_msghandler]\n[  294.307853] sp : ffff00001001bc80\n[  294.311208] x29: ffff00001001bc80 x28: ffff0000117e5000\n[  294.316594] x27: 0000000000000000 x26: dead000000000100\n[  294.321980] x25: dead000000000200 x24: ffff803f6bd06800\n[  294.327366] x23: 0000000000000000 x22: 0000000000000000\n[  294.332752] x21: ffff00001001bd04 x20: ffff80df33d19018\n[  294.338137] x19: ffff80df33d19018 x18: 0000000000000000\n[  294.343523] x17: 0000000000000000 x16: 0000000000000000\n[  294.348908] x15: 0000000000000000 x14: 0000000000000002\n[  294.354293] x13: 0000000000000000 x12: 0000000000000000\n[  294.359679] x11: 0000000000000000 x10: 0000000000100000\n[  294.365065] x9 : 0000000000000000 x8 : 0000000000000004\n[  294.370451] x7 : 0000000000000000 x6 : ffff80df34558678\n[  294.375836] x5 : 000000000000000c x4 : 0000000000000000\n[  294.381221] x3 : 0000000000000001 x2 : 0000803fea6ea000\n[  294.386607] x1 : 0000803fea6ea008 x0 : 0000000000000001\n[  294.391994] Process swapper/3 (pid: 0, stack limit = 0x0000000083087293)\n[  294.398791] Call trace:\n[  294.401266]  __srcu_read_lock+0x38/0x58\n[  294.405154]  acquire_ipmi_user+0x2c/0x70 [ipmi_msghandler]\n[  294.410716]  deliver_response+0x80/0xf8 [ipmi_msghandler]\n[  294.416189]  deliver_local_response+0x28/0x68 [ipmi_msghandler]\n[  294.422193]  handle_one_recv_msg+0x158/0xcf8 [ipmi_msghandler]\n[  294.432050]  handle_new_recv_msgs+0xc0/0x210 [ipmi_msghandler]\n[  294.441984]  smi_recv_tasklet+0x8c/0x158 [ipmi_msghandler]\n[  294.451618]  tasklet_action_common.isra.5+0x88/0x138\n[  294.460661]  tasklet_action+0x2c/0x38\n[  294.468191]  __do_softirq+0x120/0x2f8\n[  294.475561]  irq_exit+0x134/0x140\n[  294.482445]  __handle_domain_irq+0x6c/0xc0\n[  294.489954]  gic_handle_irq+0xb8/0x178\n[  294.497037]  el1_irq+0xb0/0x140\n[  294.503381]  arch_cpu_idle+0x34/0x1a8\n[  294.510096]  do_idle+0x1d4/0x290\n[  294.516322]  cpu_startup_entry+0x28/0x30\n[  294.523230]  secondary_start_kernel+0x184/0x1d0\n[  294.530657] Code: d538d082 d2800023 8b010c81 8b020021 (c85f7c25)\n[  294.539746] ---[ end trace 8a7a880dee570b29 ]---\n[  294.547341] Kernel panic - not syncing: Fatal exception in interrupt\n[  294.556837] SMP: stopping secondary CPUs\n[  294.563996] Kernel Offset: disabled\n[  294.570515] CPU features: 0x002,21006008\n[  294.577638] Memory Limit: none\n[  294.587178] Starting crashdump kernel...\n[  294.594314] Bye!\n\nBecause the user->release_barrier.rda is freed in ipmi_destroy_user(), but\nthe refcount is not zero, when acquire_ipmi_user() uses user->release_barrier.rda\nin __srcu_read_lock(), it causes oops.\nFix this by calling cleanup_srcu_struct() when the refcount is zero.\n\nFixes: e86ee2d44b44 (\"ipmi: Rework locking and shutdown for hot remove\")\nCc: stable@vger.kernel.org # 4.18\nSigned-off-by: Yang Yingliang <yangyingliang@huawei.com>\n\nSigned-off-by: Corey Minyard <cminyard@mvista.com>",
    "before_after_code_files": [
      "drivers/char/ipmi/ipmi_msghandler.c||drivers/char/ipmi/ipmi_msghandler.c"
    ]
  },
  "patch_diff": {
    "drivers/char/ipmi/ipmi_msghandler.c||drivers/char/ipmi/ipmi_msghandler.c": [
      "File: drivers/char/ipmi/ipmi_msghandler.c -> drivers/char/ipmi/ipmi_msghandler.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1184: static void free_user(struct kref *ref)",
      "1185: {",
      "1186:  struct ipmi_user *user = container_of(ref, struct ipmi_user, refcount);",
      "1187:  kfree(user);",
      "1188: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1187:  cleanup_srcu_struct(&user->release_barrier);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1260: {",
      "1261:  _ipmi_destroy_user(user);",
      "1264:  kref_put(&user->refcount, free_user);",
      "1266:  return 0;",
      "",
      "[Removed Lines]",
      "1263:  cleanup_srcu_struct(&user->release_barrier);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d67247566450cf89a693307c9bc9f05a32d96cea",
      "candidate_info": {
        "commit_hash": "d67247566450cf89a693307c9bc9f05a32d96cea",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d67247566450cf89a693307c9bc9f05a32d96cea",
        "files": [
          "drivers/scsi/ufs/ufshcd.c"
        ],
        "message": "scsi: ufs: Use explicit access size in ufshcd_dump_regs\n\nmemcpy_fromio() doesn't provide any control over access size.  For example,\non arm64, it is implemented using readb and readq.  This may trigger a\nsynchronous external abort:\n\n[    3.729943] Internal error: synchronous external abort: 96000210 [#1] PREEMPT SMP\n[    3.737000] Modules linked in:\n[    3.744371] CPU: 2 PID: 1 Comm: swapper/0 Tainted: G S                4.20.0-rc4 #16\n[    3.747413] Hardware name: Qualcomm Technologies, Inc. MSM8998 v1 MTP (DT)\n[    3.755295] pstate: 00000005 (nzcv daif -PAN -UAO)\n[    3.761978] pc : __memcpy_fromio+0x68/0x80\n[    3.766718] lr : ufshcd_dump_regs+0x50/0xb0\n[    3.770767] sp : ffff00000807ba00\n[    3.774830] x29: ffff00000807ba00 x28: 00000000fffffffb\n[    3.778344] x27: ffff0000089db068 x26: ffff8000f6e58000\n[    3.783728] x25: 000000000000000e x24: 0000000000000800\n[    3.789023] x23: ffff8000f6e587c8 x22: 0000000000000800\n[    3.794319] x21: ffff000008908368 x20: ffff8000f6e1ab80\n[    3.799615] x19: 000000000000006c x18: ffffffffffffffff\n[    3.804910] x17: 0000000000000000 x16: 0000000000000000\n[    3.810206] x15: ffff000009199648 x14: ffff000089244187\n[    3.815502] x13: ffff000009244195 x12: ffff0000091ab000\n[    3.820797] x11: 0000000005f5e0ff x10: ffff0000091998a0\n[    3.826093] x9 : 0000000000000000 x8 : ffff8000f6e1ac00\n[    3.831389] x7 : 0000000000000000 x6 : 0000000000000068\n[    3.836676] x5 : ffff8000f6e1abe8 x4 : 0000000000000000\n[    3.841971] x3 : ffff00000928c868 x2 : ffff8000f6e1abec\n[    3.847267] x1 : ffff00000928c868 x0 : ffff8000f6e1abe8\n[    3.852567] Process swapper/0 (pid: 1, stack limit = 0x(____ptrval____))\n[    3.857900] Call trace:\n[    3.864473]  __memcpy_fromio+0x68/0x80\n[    3.866683]  ufs_qcom_dump_dbg_regs+0x1c0/0x370\n[    3.870522]  ufshcd_print_host_regs+0x168/0x190\n[    3.874946]  ufshcd_init+0xd4c/0xde0\n[    3.879459]  ufshcd_pltfrm_init+0x3c8/0x550\n[    3.883264]  ufs_qcom_probe+0x24/0x60\n[    3.887188]  platform_drv_probe+0x50/0xa0\n\nAssuming aligned 32-bit registers, let's use readl, after making sure\nthat 'offset' and 'len' are indeed multiples of 4.\n\nFixes: ba80917d9932d (\"scsi: ufs: ufshcd_dump_regs to use memcpy_fromio\")\nCc: <stable@vger.kernel.org>\nSigned-off-by: Marc Gonzalez <marc.w.gonzalez@free.fr>\nAcked-by: Tomas Winkler <tomas.winkler@intel.com>\nReviewed-by: Jeffrey Hugo <jhugo@codeaurora.org>\nReviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>\nTested-by: Evan Green <evgreen@chromium.org>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
        "before_after_code_files": [
          "drivers/scsi/ufs/ufshcd.c||drivers/scsi/ufs/ufshcd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/scsi/ufs/ufshcd.c||drivers/scsi/ufs/ufshcd.c": [
          "File: drivers/scsi/ufs/ufshcd.c -> drivers/scsi/ufs/ufshcd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "108: int ufshcd_dump_regs(struct ufs_hba *hba, size_t offset, size_t len,",
          "109:        const char *prefix)",
          "110: {",
          "113:  regs = kzalloc(len, GFP_KERNEL);",
          "114:  if (!regs)",
          "115:   return -ENOMEM;",
          "118:  ufshcd_hex_dump(prefix, regs, len);",
          "119:  kfree(regs);",
          "",
          "[Removed Lines]",
          "111:  u8 *regs;",
          "117:  memcpy_fromio(regs, hba->mmio_base + offset, len);",
          "",
          "[Added Lines]",
          "111:  u32 *regs;",
          "112:  size_t pos;",
          "115:   return -EINVAL;",
          "121:  for (pos = 0; pos < len; pos += 4)",
          "122:   regs[pos / 4] = ufshcd_readl(hba, offset + pos);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "425784aa5b029eeb80498c73a68f62c3ad1d3b3f",
      "candidate_info": {
        "commit_hash": "425784aa5b029eeb80498c73a68f62c3ad1d3b3f",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/425784aa5b029eeb80498c73a68f62c3ad1d3b3f",
        "files": [
          "drivers/infiniband/core/uverbs_main.c"
        ],
        "message": "IB/uverbs: Fix OOPs upon device disassociation\n\nThe async_file might be freed before the disassociation has been ended,\ncausing qp shutdown to use after free on it.\n\nSince uverbs_destroy_ufile_hw is not a fence, it returns if a\ndisassociation is ongoing in another thread. It has to be written this way\nto avoid deadlock. However this means that the ufile FD close cannot\ndestroy anything that may still be used by an active kref, such as the the\nasync_file.\n\nTo fix that move the kref_put() to be in ib_uverbs_release_file().\n\n BUG: unable to handle kernel paging request at ffffffffba682787\n PGD bc80e067 P4D bc80e067 PUD bc80f063 PMD 1313df163 PTE 80000000bc682061\n Oops: 0003 [#1] SMP PTI\n CPU: 1 PID: 32410 Comm: bash Tainted: G           OE 4.20.0-rc6+ #3\n Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\n RIP: 0010:__pv_queued_spin_lock_slowpath+0x1b3/0x2a0\n Code: 98 83 e2 60 49 89 df 48 8b 04 c5 80 18 72 ba 48 8d\n\t\tba 80 32 02 00 ba 00 80 00 00 4c 8d 65 14 41 bd 01 00 00 00 48 01 c7 85\n\t\td2 <48> 89 2f 48 89 fb 74 14 8b 45 08 85 c0 75 42 84 d2 74 6b f3 90 83\n RSP: 0018:ffffc1bbc064fb58 EFLAGS: 00010006\n RAX: ffffffffba65f4e7 RBX: ffff9f209c656c00 RCX: 0000000000000001\n RDX: 0000000000008000 RSI: 0000000000000000 RDI: ffffffffba682787\n RBP: ffff9f217bb23280 R08: 0000000000000001 R09: 0000000000000000\n R10: ffff9f209d2c7800 R11: ffffffffffffffe8 R12: ffff9f217bb23294\n R13: 0000000000000001 R14: 0000000000000000 R15: ffff9f209c656c00\n FS:  00007fac55aad740(0000) GS:ffff9f217bb00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: ffffffffba682787 CR3: 000000012f8e0000 CR4: 00000000000006e0\n Call Trace:\n  _raw_spin_lock_irq+0x27/0x30\n  ib_uverbs_release_uevent+0x1e/0xa0 [ib_uverbs]\n  uverbs_free_qp+0x7e/0x90 [ib_uverbs]\n  destroy_hw_idr_uobject+0x1c/0x50 [ib_uverbs]\n  uverbs_destroy_uobject+0x2e/0x180 [ib_uverbs]\n  __uverbs_cleanup_ufile+0x73/0x90 [ib_uverbs]\n  uverbs_destroy_ufile_hw+0x5d/0x120 [ib_uverbs]\n  ib_uverbs_remove_one+0xea/0x240 [ib_uverbs]\n  ib_unregister_device+0xfb/0x200 [ib_core]\n  mlx5_ib_remove+0x51/0xe0 [mlx5_ib]\n  mlx5_remove_device+0xc1/0xd0 [mlx5_core]\n  mlx5_unregister_device+0x3d/0xb0 [mlx5_core]\n  remove_one+0x2a/0x90 [mlx5_core]\n  pci_device_remove+0x3b/0xc0\n  device_release_driver_internal+0x16d/0x240\n  unbind_store+0xb2/0x100\n  kernfs_fop_write+0x102/0x180\n  __vfs_write+0x36/0x1a0\n  ? __alloc_fd+0xa9/0x170\n  ? set_close_on_exec+0x49/0x70\n  vfs_write+0xad/0x1a0\n  ksys_write+0x52/0xc0\n  do_syscall_64+0x5b/0x180\n  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n RIP: 0033:0x7fac551aac60\n\nCc: <stable@vger.kernel.org> # 4.2\nFixes: 036b10635739 (\"IB/uverbs: Enable device removal when there are active user space applications\")\nSigned-off-by: Yishai Hadas <yishaih@mellanox.com>\nSigned-off-by: Leon Romanovsky <leonro@mellanox.com>\nSigned-off-by: Jason Gunthorpe <jgg@mellanox.com>",
        "before_after_code_files": [
          "drivers/infiniband/core/uverbs_main.c||drivers/infiniband/core/uverbs_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/infiniband/core/uverbs_main.c||drivers/infiniband/core/uverbs_main.c": [
          "File: drivers/infiniband/core/uverbs_main.c -> drivers/infiniband/core/uverbs_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:  if (atomic_dec_and_test(&file->device->refcount))",
          "205:   ib_uverbs_comp_dev(file->device);",
          "207:  put_device(&file->device->dev);",
          "208:  kfree(file);",
          "209: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207:  if (file->async_file)",
          "208:   kref_put(&file->async_file->ref,",
          "209:     ib_uverbs_release_async_event_file);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1096:  list_del_init(&file->list);",
          "1097:  mutex_unlock(&file->device->lists_mutex);",
          "1103:  kref_put(&file->ref, ib_uverbs_release_file);",
          "1105:  return 0;",
          "",
          "[Removed Lines]",
          "1099:  if (file->async_file)",
          "1100:   kref_put(&file->async_file->ref,",
          "1101:     ib_uverbs_release_async_event_file);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f45f8edbe1d345273ba0d8d8a9872bb30966869b",
      "candidate_info": {
        "commit_hash": "f45f8edbe1d345273ba0d8d8a9872bb30966869b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/f45f8edbe1d345273ba0d8d8a9872bb30966869b",
        "files": [
          "drivers/infiniband/hw/mlx4/mad.c"
        ],
        "message": "IB/mlx4: Fix using wrong function to destroy sqp AHs under SRIOV\n\nThe commit cited below replaced rdma_create_ah with\nmlx4_ib_create_slave_ah when creating AHs for the paravirtualized special\nQPs.\n\nHowever, this change also required replacing rdma_destroy_ah with\nmlx4_ib_destroy_ah in the affected flows.\n\nThe commit missed 3 places where rdma_destroy_ah should have been replaced\nwith mlx4_ib_destroy_ah.\n\nAs a result, the pd usecount was decremented when the ah was destroyed --\nalthough the usecount was NOT incremented when the ah was created.\n\nThis caused the pd usecount to become negative, and resulted in the\nWARN_ON stack trace below when the mlx4_ib.ko module was unloaded:\n\nWARNING: CPU: 3 PID: 25303 at drivers/infiniband/core/verbs.c:329 ib_dealloc_pd+0x6d/0x80 [ib_core]\nModules linked in: rdma_ucm rdma_cm iw_cm ib_cm ib_umad mlx4_ib(-) ib_uverbs ib_core mlx4_en mlx4_core nfsv3 nfs fscache configfs xt_conntrack nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 libcrc32c ipt_REJECT nf_reject_ipv4 tun ebtable_filter ebtables ip6table_filter ip6_tables iptable_filter bridge stp llc dm_mirror dm_region_hash dm_log dm_mod dax rndis_wlan rndis_host coretemp kvm_intel cdc_ether kvm usbnet iTCO_wdt iTCO_vendor_support cfg80211 irqbypass lpc_ich ipmi_si i2c_i801 mii pcspkr i2c_core mfd_core ipmi_devintf i7core_edac ipmi_msghandler ioatdma pcc_cpufreq dca acpi_cpufreq nfsd auth_rpcgss nfs_acl lockd grace sunrpc ip_tables ext4 mbcache jbd2 sr_mod cdrom ata_generic pata_acpi mptsas scsi_transport_sas mptscsih crc32c_intel ata_piix bnx2 mptbase ipv6 crc_ccitt autofs4 [last unloaded: mlx4_core]\nCPU: 3 PID: 25303 Comm: modprobe Tainted: G        W I       5.0.0-rc1-net-mlx4+ #1\nHardware name: IBM  -[7148ZV6]-/Node 1, System Card, BIOS -[MLE170CUS-1.70]- 09/23/2011\nRIP: 0010:ib_dealloc_pd+0x6d/0x80 [ib_core]\nCode: 00 00 85 c0 75 02 5b c3 80 3d aa 87 03 00 00 75 f5 48 c7 c7 88 d7 8f a0 31 c0 c6 05 98 87 03 00 01 e8 07 4c 79 e0 0f 0b 5b c3 <0f> 0b eb be 0f 0b eb ab 90 66 2e 0f 1f 84 00 00 00 00 00 66 66 66\nRSP: 0018:ffffc90005347e30 EFLAGS: 00010282\nRAX: 00000000ffffffea RBX: ffff8888589e9540 RCX: 0000000000000006\nRDX: 0000000000000006 RSI: ffff88885d57ad40 RDI: 0000000000000000\nRBP: ffff88885b029c00 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000004 R12: ffff8887f06c0000\nR13: ffff8887f06c13e8 R14: 0000000000000000 R15: 0000000000000000\nFS:  00007fd6743c6740(0000) GS:ffff88887fcc0000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000ed1038 CR3: 00000007e3156000 CR4: 00000000000006e0\nCall Trace:\n mlx4_ib_close_sriov+0x125/0x180 [mlx4_ib]\n mlx4_ib_remove+0x57/0x1f0 [mlx4_ib]\n mlx4_remove_device+0x92/0xa0 [mlx4_core]\n mlx4_unregister_interface+0x39/0x90 [mlx4_core]\n mlx4_ib_cleanup+0xc/0xd7 [mlx4_ib]\n __x64_sys_delete_module+0x17d/0x290\n ? trace_hardirqs_off_thunk+0x1a/0x1c\n ? do_syscall_64+0x12/0x180\n do_syscall_64+0x4a/0x180\n entry_SYSCALL_64_after_hwframe+0x49/0xbe\n\nFixes: 5e62d5ff1b9a (\"IB/mlx4: Create slave AH's directly\")\nSigned-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>\nSigned-off-by: Leon Romanovsky <leonro@mellanox.com>\nSigned-off-by: Jason Gunthorpe <jgg@mellanox.com>",
        "before_after_code_files": [
          "drivers/infiniband/hw/mlx4/mad.c||drivers/infiniband/hw/mlx4/mad.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/infiniband/hw/mlx4/mad.c||drivers/infiniband/hw/mlx4/mad.c": [
          "File: drivers/infiniband/hw/mlx4/mad.c -> drivers/infiniband/hw/mlx4/mad.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1412:  sqp_mad = (struct mlx4_mad_snd_buf *) (sqp->tx_ring[wire_tx_ix].buf.addr);",
          "1413:  if (sqp->tx_ring[wire_tx_ix].ah)",
          "1415:  sqp->tx_ring[wire_tx_ix].ah = ah;",
          "1416:  ib_dma_sync_single_for_cpu(&dev->ib_dev,",
          "1417:        sqp->tx_ring[wire_tx_ix].buf.map,",
          "",
          "[Removed Lines]",
          "1414:   rdma_destroy_ah(sqp->tx_ring[wire_tx_ix].ah, 0);",
          "",
          "[Added Lines]",
          "1414:   mlx4_ib_destroy_ah(sqp->tx_ring[wire_tx_ix].ah, 0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1902:   if (wc.status == IB_WC_SUCCESS) {",
          "1903:    switch (wc.opcode) {",
          "1904:    case IB_WC_SEND:",
          "1906:            (MLX4_NUM_TUNNEL_BUFS - 1)].ah, 0);",
          "1907:     sqp->tx_ring[wc.wr_id & (MLX4_NUM_TUNNEL_BUFS - 1)].ah",
          "1908:      = NULL;",
          "",
          "[Removed Lines]",
          "1905:     rdma_destroy_ah(sqp->tx_ring[wc.wr_id &",
          "",
          "[Added Lines]",
          "1905:     mlx4_ib_destroy_ah(sqp->tx_ring[wc.wr_id &",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1931:      \" status = %d, wrid = 0x%llx\\n\",",
          "1932:      ctx->slave, wc.status, wc.wr_id);",
          "1933:    if (!MLX4_TUN_IS_RECV(wc.wr_id)) {",
          "1935:            (MLX4_NUM_TUNNEL_BUFS - 1)].ah, 0);",
          "1936:     sqp->tx_ring[wc.wr_id & (MLX4_NUM_TUNNEL_BUFS - 1)].ah",
          "1937:      = NULL;",
          "",
          "[Removed Lines]",
          "1934:     rdma_destroy_ah(sqp->tx_ring[wc.wr_id &",
          "",
          "[Added Lines]",
          "1934:     mlx4_ib_destroy_ah(sqp->tx_ring[wc.wr_id &",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0ce23d6d42147a692768e6baaaa3db75c44f4235",
      "candidate_info": {
        "commit_hash": "0ce23d6d42147a692768e6baaaa3db75c44f4235",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0ce23d6d42147a692768e6baaaa3db75c44f4235",
        "files": [
          "sound/soc/codecs/hdmi-codec.c"
        ],
        "message": "ASoC: hdmi-codec: fix oops on re-probe\n\nhdmi-codec oopses the kernel when it is unbound from a successfully\nbound audio subsystem, and is then rebound:\n\nUnable to handle kernel NULL pointer dereference at virtual address 0000001c\npgd = ee3f0000\n[0000001c] *pgd=3cc59831\nInternal error: Oops: 817 [#1] PREEMPT ARM\nModules linked in: ext2 snd_soc_spdif_tx vmeta dove_thermal snd_soc_kirkwood ofpart marvell_cesa m25p80 orion_wdt mtd spi_nor des_generic gpio_ir_recv snd_soc_kirkwood_spdif bmm_dmabuf auth_rpcgss nfsd autofs4 etnaviv thermal_sys hwmon gpu_sched tda9950\nCPU: 0 PID: 1005 Comm: bash Not tainted 4.20.0+ #1762\nHardware name: Marvell Dove (Cubox)\nPC is at hdmi_dai_probe+0x68/0x80\nLR is at find_held_lock+0x20/0x94\npc : [<c04c7de0>]    lr : [<c0063bf4>]    psr: 600f0013\nsp : ee15bd28  ip : eebd8b1c  fp : c093b488\nr10: ee048000  r9 : eebdab18  r8 : ee048600\nr7 : 00000001  r6 : 00000000  r5 : 00000000  r4 : ee82c100\nr3 : 00000006  r2 : 00000001  r1 : c067e38c  r0 : ee82c100\nFlags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none[  297.318599] Control: 10c5387d  Table: 2e3f0019  DAC: 00000051\nProcess bash (pid: 1005, stack limit = 0xee15a248)\n...\n[<c04c7de0>] (hdmi_dai_probe) from [<c04b7060>] (soc_probe_dai.part.9+0x34/0x70)\n[<c04b7060>] (soc_probe_dai.part.9) from [<c04b81a8>] (snd_soc_instantiate_card+0x734/0xc9c)\n[<c04b81a8>] (snd_soc_instantiate_card) from [<c04b8b6c>] (snd_soc_add_component+0x29c/0x378)\n[<c04b8b6c>] (snd_soc_add_component) from [<c04b8c8c>] (snd_soc_register_component+0x44/0x54)\n[<c04b8c8c>] (snd_soc_register_component) from [<c04c64b4>] (devm_snd_soc_register_component+0x48/0x84)\n[<c04c64b4>] (devm_snd_soc_register_component) from [<c04c7be8>] (hdmi_codec_probe+0x150/0x260)\n[<c04c7be8>] (hdmi_codec_probe) from [<c0373124>] (platform_drv_probe+0x48/0x98)\n\nThis happens because hdmi_dai_probe() attempts to access the HDMI\ncodec private data, but this has not been assigned by hdmi_dai_probe()\nbefore it calls devm_snd_soc_register_component().  Move the call to\ndev_set_drvdata() before devm_snd_soc_register_component() to avoid\nthis oops.\n\nSigned-off-by: Russell King <rmk+kernel@armlinux.org.uk>\nSigned-off-by: Mark Brown <broonie@kernel.org>\nCc: stable@vger.kernel.org",
        "before_after_code_files": [
          "sound/soc/codecs/hdmi-codec.c||sound/soc/codecs/hdmi-codec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sound/soc/codecs/hdmi-codec.c||sound/soc/codecs/hdmi-codec.c": [
          "File: sound/soc/codecs/hdmi-codec.c -> sound/soc/codecs/hdmi-codec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "795:  if (hcd->spdif)",
          "796:   hcp->daidrv[i] = hdmi_spdif_dai;",
          "798:  ret = devm_snd_soc_register_component(dev, &hdmi_driver, hcp->daidrv,",
          "799:          dai_count);",
          "800:  if (ret) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "798:  dev_set_drvdata(dev, hcp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "802:    __func__, ret);",
          "803:   return ret;",
          "804:  }",
          "807:  return 0;",
          "808: }",
          "",
          "[Removed Lines]",
          "806:  dev_set_drvdata(dev, hcp);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2093dd35f8cfb28dd7c878ccbd020c1bb20d0d7",
      "candidate_info": {
        "commit_hash": "a2093dd35f8cfb28dd7c878ccbd020c1bb20d0d7",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a2093dd35f8cfb28dd7c878ccbd020c1bb20d0d7",
        "files": [
          "drivers/infiniband/core/umem_odp.c"
        ],
        "message": "RDMA/umem: Add missing initialization of owning_mm\n\nWhen allocating a umem leaf for implicit ODP MR during page fault the\nfield owning_mm was not set.\n\nInitialize and take a reference on this field to avoid kernel panic when\ntrying to access this field.\n\n BUG: unable to handle kernel NULL pointer dereference at 0000000000000058\n PGD 800000022dfed067 P4D 800000022dfed067 PUD 22dfcf067 PMD 0\n Oops: 0000 [#1] SMP PTI\n CPU: 0 PID: 634 Comm: kworker/u33:0 Not tainted 4.20.0-rc6+ #89\n Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011\n Workqueue: mlx5_ib_page_fault mlx5_ib_eqe_pf_action [mlx5_ib]\n RIP: 0010:ib_umem_odp_map_dma_pages+0xf3/0x710 [ib_core]\n Code: 45 c0 48 21 f3 48 89 75 b0 31 f6 4a 8d 04 33 48 89 45 a8 49 8b 44 24 60 48 8b 78 10 e8 66 16 a8 c5 49 8b 54 24 08 48 89 45 98 <8b> 42 58 85 c0 0f 84 8e 05 00 00 8d 48 01 48 8d 72 58 f0 0f b1 4a\n RSP: 0000:ffffb610813a7c20 EFLAGS: 00010202\n RAX: ffff95ace6e8ac80 RBX: 0000000000000000 RCX: 000000000000000c\n RDX: 0000000000000000 RSI: 0000000000000850 RDI: ffff95aceaadae80\n RBP: ffffb610813a7ce0 R08: 0000000000000000 R09: 0000000000080c77\n R10: ffff95acfffdbd00 R11: 0000000000000000 R12: ffff95aceaa20a00\n R13: 0000000000001000 R14: 0000000000001000 R15: 000000000000000c\n FS:  0000000000000000(0000) GS:ffff95acf7800000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000058 CR3: 000000022c834001 CR4: 00000000001606f0\n Call Trace:\n  pagefault_single_data_segment+0x1df/0xc60 [mlx5_ib]\n  mlx5_ib_eqe_pf_action+0x7bc/0xa70 [mlx5_ib]\n  ? __switch_to+0xe1/0x470\n  process_one_work+0x174/0x390\n  worker_thread+0x4f/0x3e0\n  kthread+0x102/0x140\n  ? drain_workqueue+0x130/0x130\n  ? kthread_stop+0x110/0x110\n  ret_from_fork+0x1f/0x30\n\nFixes: f27a0d50a4bc (\"RDMA/umem: Use umem->owning_mm inside ODP\")\nSigned-off-by: Artemy Kovalyov <artemyko@mellanox.com>\nSigned-off-by: Moni Shoua <monis@mellanox.com>\nSigned-off-by: Leon Romanovsky <leonro@mellanox.com>\nSigned-off-by: Jason Gunthorpe <jgg@mellanox.com>",
        "before_after_code_files": [
          "drivers/infiniband/core/umem_odp.c||drivers/infiniband/core/umem_odp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/infiniband/core/umem_odp.c||drivers/infiniband/core/umem_odp.c": [
          "File: drivers/infiniband/core/umem_odp.c -> drivers/infiniband/core/umem_odp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "352:  umem->writable   = 1;",
          "353:  umem->is_odp = 1;",
          "354:  odp_data->per_mm = per_mm;",
          "356:  mutex_init(&odp_data->umem_mutex);",
          "357:  init_completion(&odp_data->notifier_completion);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "355:  umem->owning_mm  = per_mm->mm;",
          "356:  mmgrab(umem->owning_mm);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "384: out_page_list:",
          "385:  vfree(odp_data->page_list);",
          "386: out_odp_data:",
          "387:  kfree(odp_data);",
          "388:  return ERR_PTR(ret);",
          "389: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "389:  mmdrop(umem->owning_mm);",
          "",
          "---------------"
        ]
      }
    }
  ]
}