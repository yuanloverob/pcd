{
  "cve_id": "CVE-2016-0798",
  "cve_desc": "Memory leak in the SRP_VBASE_get_by_user implementation in OpenSSL 1.0.1 before 1.0.1s and 1.0.2 before 1.0.2g allows remote attackers to cause a denial of service (memory consumption) by providing an invalid username in a connection attempt, related to apps/s_server.c and crypto/srp/srp_vfy.c.",
  "repo": "openssl/openssl",
  "patch_hash": "380f18ed5f140e0ae1b68f3ab8f4f7c395658d9e",
  "patch_info": {
    "commit_hash": "380f18ed5f140e0ae1b68f3ab8f4f7c395658d9e",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/380f18ed5f140e0ae1b68f3ab8f4f7c395658d9e",
    "files": [
      "CHANGES",
      "apps/s_server.c",
      "crypto/srp/srp_vfy.c",
      "include/openssl/srp.h",
      "util/libeay.num"
    ],
    "message": "CVE-2016-0798: avoid memory leak in SRP\n\nThe SRP user database lookup method SRP_VBASE_get_by_user had confusing\nmemory management semantics; the returned pointer was sometimes newly\nallocated, and sometimes owned by the callee. The calling code has no\nway of distinguishing these two cases.\n\nSpecifically, SRP servers that configure a secret seed to hide valid\nlogin information are vulnerable to a memory leak: an attacker\nconnecting with an invalid username can cause a memory leak of around\n300 bytes per connection.\n\nServers that do not configure SRP, or configure SRP but do not configure\na seed are not vulnerable.\n\nIn Apache, the seed directive is known as SSLSRPUnknownUserSeed.\n\nTo mitigate the memory leak, the seed handling in SRP_VBASE_get_by_user\nis now disabled even if the user has configured a seed.\n\nApplications are advised to migrate to SRP_VBASE_get1_by_user. However,\nnote that OpenSSL makes no strong guarantees about the\nindistinguishability of valid and invalid logins. In particular,\ncomputations are currently not carried out in constant time.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "apps/s_server.c||apps/s_server.c",
      "crypto/srp/srp_vfy.c||crypto/srp/srp_vfy.c",
      "include/openssl/srp.h||include/openssl/srp.h",
      "util/libeay.num||util/libeay.num"
    ]
  },
  "patch_diff": {
    "apps/s_server.c||apps/s_server.c": [
      "File: apps/s_server.c -> apps/s_server.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "352: static int ssl_srp_server_param_cb(SSL *s, int *ad, void *arg)",
      "353: {",
      "354:     srpsrvparm *p = (srpsrvparm *) arg;",
      "355:     if (p->login == NULL && p->user == NULL) {",
      "356:         p->login = SSL_get_srp_username(s);",
      "357:         BIO_printf(bio_err, \"SRP username = \\\"%s\\\"\\n\", p->login);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "355:     int ret = SSL3_AL_FATAL;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "361:     if (p->user == NULL) {",
      "362:         BIO_printf(bio_err, \"User %s doesn't exist\\n\", p->login);",
      "364:     }",
      "365:     if (SSL_set_srp_server_param",
      "366:         (s, p->user->N, p->user->g, p->user->s, p->user->v,",
      "367:          p->user->info) < 0) {",
      "370:     }",
      "371:     BIO_printf(bio_err,",
      "372:                \"SRP parameters set: username = \\\"%s\\\" info=\\\"%s\\\" \\n\",",
      "373:                p->login, p->user->info);",
      "375:     p->user = NULL;",
      "376:     p->login = NULL;",
      "378: }",
      "380: #endif",
      "",
      "[Removed Lines]",
      "363:         return SSL3_AL_FATAL;",
      "369:         return SSL3_AL_FATAL;",
      "377:     return SSL_ERROR_NONE;",
      "",
      "[Added Lines]",
      "365:         goto err;",
      "372:         goto err;",
      "377:     ret = SSL_ERROR_NONE;",
      "379: err:",
      "380:     SRP_user_pwd_free(p->user);",
      "383:     return ret;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2325: #ifndef OPENSSL_NO_SRP",
      "2326:                 while (SSL_get_error(con, k) == SSL_ERROR_WANT_X509_LOOKUP) {",
      "2327:                     BIO_printf(bio_s_out, \"LOOKUP renego during write\\n\");",
      "2328:                     srp_callback_parm.user =",
      "2331:                     if (srp_callback_parm.user)",
      "2332:                         BIO_printf(bio_s_out, \"LOOKUP done %s\\n\",",
      "2333:                                    srp_callback_parm.user->info);",
      "",
      "[Removed Lines]",
      "2329:                         SRP_VBASE_get_by_user(srp_callback_parm.vb,",
      "2330:                                               srp_callback_parm.login);",
      "",
      "[Added Lines]",
      "2334:                     SRP_user_pwd_free(srp_callback_parm.user);",
      "2336:                         SRP_VBASE_get1_by_user(srp_callback_parm.vb,",
      "2337:                                                srp_callback_parm.login);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2393: #ifndef OPENSSL_NO_SRP",
      "2394:                 while (SSL_get_error(con, i) == SSL_ERROR_WANT_X509_LOOKUP) {",
      "2395:                     BIO_printf(bio_s_out, \"LOOKUP renego during read\\n\");",
      "2396:                     srp_callback_parm.user =",
      "2399:                     if (srp_callback_parm.user)",
      "2400:                         BIO_printf(bio_s_out, \"LOOKUP done %s\\n\",",
      "2401:                                    srp_callback_parm.user->info);",
      "",
      "[Removed Lines]",
      "2397:                         SRP_VBASE_get_by_user(srp_callback_parm.vb,",
      "2398:                                               srp_callback_parm.login);",
      "",
      "[Added Lines]",
      "2403:                     SRP_user_pwd_free(srp_callback_parm.user);",
      "2405:                         SRP_VBASE_get1_by_user(srp_callback_parm.vb,",
      "2406:                                                srp_callback_parm.login);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2520:         while (i <= 0 && SSL_get_error(con, i) == SSL_ERROR_WANT_X509_LOOKUP) {",
      "2521:             BIO_printf(bio_s_out, \"LOOKUP during accept %s\\n\",",
      "2522:                        srp_callback_parm.login);",
      "2523:             srp_callback_parm.user =",
      "2526:             if (srp_callback_parm.user)",
      "2527:                 BIO_printf(bio_s_out, \"LOOKUP done %s\\n\",",
      "2528:                            srp_callback_parm.user->info);",
      "",
      "[Removed Lines]",
      "2524:                 SRP_VBASE_get_by_user(srp_callback_parm.vb,",
      "2525:                                       srp_callback_parm.login);",
      "",
      "[Added Lines]",
      "2531:             SRP_user_pwd_free(srp_callback_parm.user);",
      "2533:                 SRP_VBASE_get1_by_user(srp_callback_parm.vb,",
      "2534:                                        srp_callback_parm.login);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2732:                 if (BIO_should_io_special(io)",
      "2733:                     && BIO_get_retry_reason(io) == BIO_RR_SSL_X509_LOOKUP) {",
      "2734:                     BIO_printf(bio_s_out, \"LOOKUP renego during read\\n\");",
      "2735:                     srp_callback_parm.user =",
      "2738:                     if (srp_callback_parm.user)",
      "2739:                         BIO_printf(bio_s_out, \"LOOKUP done %s\\n\",",
      "2740:                                    srp_callback_parm.user->info);",
      "",
      "[Removed Lines]",
      "2736:                         SRP_VBASE_get_by_user(srp_callback_parm.vb,",
      "2737:                                               srp_callback_parm.login);",
      "",
      "[Added Lines]",
      "2744:                     SRP_user_pwd_free(srp_callback_parm.user);",
      "2746:                         SRP_VBASE_get1_by_user(srp_callback_parm.vb,",
      "2747:                                                srp_callback_parm.login);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "3093:         if (BIO_should_io_special(io)",
      "3094:             && BIO_get_retry_reason(io) == BIO_RR_SSL_X509_LOOKUP) {",
      "3095:             BIO_printf(bio_s_out, \"LOOKUP renego during accept\\n\");",
      "3096:             srp_callback_parm.user =",
      "3099:             if (srp_callback_parm.user)",
      "3100:                 BIO_printf(bio_s_out, \"LOOKUP done %s\\n\",",
      "3101:                            srp_callback_parm.user->info);",
      "",
      "[Removed Lines]",
      "3097:                 SRP_VBASE_get_by_user(srp_callback_parm.vb,",
      "3098:                                       srp_callback_parm.login);",
      "",
      "[Added Lines]",
      "3106:             SRP_user_pwd_free(srp_callback_parm.user);",
      "3108:                 SRP_VBASE_get1_by_user(srp_callback_parm.vb,",
      "3109:                                        srp_callback_parm.login);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "3121:                 if (BIO_should_io_special(io)",
      "3122:                     && BIO_get_retry_reason(io) == BIO_RR_SSL_X509_LOOKUP) {",
      "3123:                     BIO_printf(bio_s_out, \"LOOKUP renego during read\\n\");",
      "3124:                     srp_callback_parm.user =",
      "3127:                     if (srp_callback_parm.user)",
      "3128:                         BIO_printf(bio_s_out, \"LOOKUP done %s\\n\",",
      "3129:                                    srp_callback_parm.user->info);",
      "",
      "[Removed Lines]",
      "3125:                         SRP_VBASE_get_by_user(srp_callback_parm.vb,",
      "3126:                                               srp_callback_parm.login);",
      "",
      "[Added Lines]",
      "3135:                     SRP_user_pwd_free(srp_callback_parm.user);",
      "3137:                         SRP_VBASE_get1_by_user(srp_callback_parm.vb,",
      "3138:                                                srp_callback_parm.login);",
      "",
      "---------------"
    ],
    "crypto/srp/srp_vfy.c||crypto/srp/srp_vfy.c": [
      "File: crypto/srp/srp_vfy.c -> crypto/srp/srp_vfy.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "184:     return olddst;",
      "185: }",
      "188: {",
      "189:     if (user_pwd == NULL)",
      "190:         return;",
      "",
      "[Removed Lines]",
      "187: static void SRP_user_pwd_free(SRP_user_pwd *user_pwd)",
      "",
      "[Added Lines]",
      "187: void SRP_user_pwd_free(SRP_user_pwd *user_pwd)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "246:     return (vinfo->s != NULL && vinfo->v != NULL);",
      "247: }",
      "249: SRP_VBASE *SRP_VBASE_new(char *seed_key)",
      "250: {",
      "251:     SRP_VBASE *vb = OPENSSL_malloc(sizeof(*vb));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "249: static SRP_user_pwd *srp_user_pwd_dup(SRP_user_pwd *src)",
      "250: {",
      "251:     SRP_user_pwd *ret;",
      "253:     if (src == NULL)",
      "254:         return NULL;",
      "255:     if ((ret = SRP_user_pwd_new()) == NULL)",
      "256:         return NULL;",
      "258:     SRP_user_pwd_set_gN(ret, src->g, src->N);",
      "259:     if (!SRP_user_pwd_set_ids(ret, src->id, src->info)",
      "260:         || !SRP_user_pwd_set_sv_BN(ret, BN_dup(src->s), BN_dup(src->v))) {",
      "261:             SRP_user_pwd_free(ret);",
      "262:             return NULL;",
      "263:     }",
      "264:     return ret;",
      "265: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "468: }",
      "471: {",
      "472:     int i;",
      "473:     SRP_user_pwd *user;",
      "478:     if (vb == NULL)",
      "479:         return NULL;",
      "480:     for (i = 0; i < sk_SRP_user_pwd_num(vb->users_pwd); i++) {",
      "481:         user = sk_SRP_user_pwd_value(vb->users_pwd, i);",
      "482:         if (strcmp(user->id, username) == 0)",
      "483:             return user;",
      "484:     }",
      "485:     if ((vb->seed_key == NULL) ||",
      "486:         (vb->default_g == NULL) || (vb->default_N == NULL))",
      "487:         return NULL;",
      "",
      "[Removed Lines]",
      "470: SRP_user_pwd *SRP_VBASE_get_by_user(SRP_VBASE *vb, char *username)",
      "474:     unsigned char digv[SHA_DIGEST_LENGTH];",
      "475:     unsigned char digs[SHA_DIGEST_LENGTH];",
      "476:     EVP_MD_CTX *ctxt = NULL;",
      "",
      "[Added Lines]",
      "488: static SRP_user_pwd *find_user(SRP_VBASE *vb, char *username)",
      "502:     return NULL;",
      "503: }",
      "511: SRP_user_pwd *SRP_VBASE_get_by_user(SRP_VBASE *vb, char *username)",
      "512: {",
      "513:     return find_user(vb, username);",
      "514: }",
      "520: SRP_user_pwd *SRP_VBASE_get1_by_user(SRP_VBASE *vb, char *username)",
      "521: {",
      "522:     SRP_user_pwd *user;",
      "523:     unsigned char digv[SHA_DIGEST_LENGTH];",
      "524:     unsigned char digs[SHA_DIGEST_LENGTH];",
      "525:     EVP_MD_CTX *ctxt = NULL;",
      "527:     if (vb == NULL)",
      "528:         return NULL;",
      "530:     if ((user = find_user(vb, username)) != NULL)",
      "531:         return srp_user_pwd_dup(user);",
      "",
      "---------------"
    ],
    "include/openssl/srp.h||include/openssl/srp.h": [
      "File: include/openssl/srp.h -> include/openssl/srp.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: DEFINE_STACK_OF(SRP_gN_cache)",
      "87: typedef struct SRP_user_pwd_st {",
      "88:     char *id;",
      "89:     BIGNUM *s;",
      "90:     BIGNUM *v;",
      "91:     const BIGNUM *g;",
      "92:     const BIGNUM *N;",
      "93:     char *info;",
      "94: } SRP_user_pwd;",
      "96: DEFINE_STACK_OF(SRP_user_pwd)",
      "98: typedef struct SRP_VBASE_st {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "99: void SRP_user_pwd_free(SRP_user_pwd *user_pwd);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "118: SRP_VBASE *SRP_VBASE_new(char *seed_key);",
      "119: void SRP_VBASE_free(SRP_VBASE *vb);",
      "120: int SRP_VBASE_init(SRP_VBASE *vb, char *verifier_file);",
      "122: char *SRP_create_verifier(const char *user, const char *pass, char **salt,",
      "123:                           char **verifier, const char *N, const char *g);",
      "124: int SRP_create_verifier_BN(const char *user, const char *pass, BIGNUM **salt,",
      "",
      "[Removed Lines]",
      "121: SRP_user_pwd *SRP_VBASE_get_by_user(SRP_VBASE *vb, char *username);",
      "",
      "[Added Lines]",
      "128: DEPRECATEDIN_1_1_0(SRP_user_pwd *SRP_VBASE_get_by_user(SRP_VBASE *vb, char *username))",
      "130: SRP_user_pwd *SRP_VBASE_get1_by_user(SRP_VBASE *vb, char *username);",
      "",
      "---------------"
    ],
    "util/libeay.num||util/libeay.num": [
      "File: util/libeay.num -> util/libeay.num",
      "--- Hunk 1 ---",
      "[Context before]",
      "4073: OPENSSL_strncasecmp                     4566 1_1_0 EXIST::FUNCTION:",
      "4074: OPENSSL_gmtime                          4567 1_1_0 EXIST::FUNCTION:",
      "4075: OPENSSL_gmtime_adj                      4568 1_1_0 EXIST::FUNCTION:",
      "4077: SRP_Calc_server_key                     4570 1_1_0 EXIST::FUNCTION:SRP",
      "4078: SRP_create_verifier                     4571 1_1_0 EXIST::FUNCTION:SRP",
      "4079: SRP_create_verifier_BN                  4572 1_1_0 EXIST::FUNCTION:SRP",
      "",
      "[Removed Lines]",
      "4076: SRP_VBASE_get_by_user                   4569 1_1_0 EXIST::FUNCTION:SRP",
      "",
      "[Added Lines]",
      "4076: SRP_VBASE_get_by_user                   4569 1_1_0 EXIST::FUNCTION:DEPRECATEDIN_1_1_0,SRP",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4711: OPENSSL_INIT_new                        5215 1_1_0 EXIST::FUNCTION:",
      "4712: OPENSSL_INIT_free                       5216 1_1_0 EXIST::FUNCTION:",
      "4713: OPENSSL_INIT_set_config_filename        5217 1_1_0 EXIST::FUNCTION:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4714: SRP_user_pwd_free                       5218 1_1_0 EXIST::FUNCTION:SRP",
      "4715: SRP_VBASE_get1_by_user                  5219 1_1_0 EXIST::FUNCTION:SRP",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e15a18de96b8c948cc69df35aba7e1e245f6c999",
      "candidate_info": {
        "commit_hash": "e15a18de96b8c948cc69df35aba7e1e245f6c999",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e15a18de96b8c948cc69df35aba7e1e245f6c999",
        "files": [
          "crypto/ts/Makefile",
          "crypto/x509/Makefile",
          "crypto/x509v3/Makefile",
          "util/libeay.num"
        ],
        "message": "make update\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "util/libeay.num||util/libeay.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "util/libeay.num||util/libeay.num"
          ],
          "candidate": [
            "util/libeay.num||util/libeay.num"
          ]
        }
      },
      "candidate_diff": {
        "util/libeay.num||util/libeay.num": [
          "File: util/libeay.num -> util/libeay.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "4629: EVP_PKEY_meth_get_copy                  4988 EXIST::FUNCTION:",
          "4630: EVP_PKEY_meth_get_verify_recover        4989 EXIST::FUNCTION:",
          "4631: EVP_PKEY_meth_get_encrypt               4990 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4632: X509_get0_subject_key_id                4991 EXIST::FUNCTION:",
          "4633: i2d_re_X509_CRL_tbs                     4992 EXIST::FUNCTION:",
          "4634: X509_REQ_get_X509_PUBKEY                4993 EXIST::FUNCTION:",
          "4635: X509_REQ_get0_signature                 4994 EXIST::FUNCTION:",
          "4636: X509_REVOKED_get0_revocationDate        4995 EXIST::FUNCTION:",
          "4637: X509_REVOKED_get0_serialNumber          4996 EXIST::FUNCTION:",
          "4638: X509_CRL_get0_extensions                4997 EXIST::FUNCTION:",
          "4639: X509_REQ_get_signature_nid              4998 EXIST::FUNCTION:",
          "4640: X509_CRL_get_signature_nid              5000 EXIST::FUNCTION:",
          "4641: i2d_re_X509_REQ_tbs                     5001 EXIST::FUNCTION:",
          "4642: X509_REVOKED_get0_extensions            5002 EXIST::FUNCTION:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f003251ffffc2573d5a879661d6c6ccb8cc40e4",
      "candidate_info": {
        "commit_hash": "1f003251ffffc2573d5a879661d6c6ccb8cc40e4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1f003251ffffc2573d5a879661d6c6ccb8cc40e4",
        "files": [
          "util/libeay.num"
        ],
        "message": "Fix 4c42ebd; forgot to inutil util/libeay.num\n\nReviewed-by: Tim Hudson <tjh@openssl.org>",
        "before_after_code_files": [
          "util/libeay.num||util/libeay.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "util/libeay.num||util/libeay.num"
          ],
          "candidate": [
            "util/libeay.num||util/libeay.num"
          ]
        }
      },
      "candidate_diff": {
        "util/libeay.num||util/libeay.num": [
          "File: util/libeay.num -> util/libeay.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "1373: s2i_ASN1_INTEGER                        1509 EXIST::FUNCTION:",
          "1374: CRYPTO_set_locked_mem_functions         1510 NOEXIST::FUNCTION:",
          "1375: CRYPTO_get_locked_mem_functions         1511 NOEXIST::FUNCTION:",
          "1378: BN_mod_exp2_mont                        1514 EXIST::FUNCTION:",
          "1379: ERR_get_error_line_data                 1515 EXIST::FUNCTION:",
          "1380: ERR_peek_error_line_data                1516 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "1376: CRYPTO_malloc_locked                    1512 EXIST::FUNCTION:",
          "1377: CRYPTO_free_locked                      1513 EXIST::FUNCTION:",
          "",
          "[Added Lines]",
          "1376: CRYPTO_malloc_locked                    1512 NOEXIST::FUNCTION:",
          "1377: CRYPTO_free_locked                      1513 NOEXIST::FUNCTION:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7070e5ca2fa41940d56599bf016a45cb1c0e03f0",
      "candidate_info": {
        "commit_hash": "7070e5ca2fa41940d56599bf016a45cb1c0e03f0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7070e5ca2fa41940d56599bf016a45cb1c0e03f0",
        "files": [
          "crypto/async/Makefile",
          "crypto/async/arch/async_posix.c",
          "crypto/async/arch/async_posix.h",
          "util/libeay.num"
        ],
        "message": "Use longjmp at setjmp where possible\n\nWhere we can we should use longjmp and setjmp in preference to swapcontext/\nsetcontext as they seem to be more performant.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "crypto/async/arch/async_posix.c||crypto/async/arch/async_posix.c",
          "crypto/async/arch/async_posix.h||crypto/async/arch/async_posix.h",
          "util/libeay.num||util/libeay.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "util/libeay.num||util/libeay.num"
          ],
          "candidate": [
            "util/libeay.num||util/libeay.num"
          ]
        }
      },
      "candidate_diff": {
        "crypto/async/arch/async_posix.c||crypto/async/arch/async_posix.c": [
          "File: crypto/async/arch/async_posix.c -> crypto/async/arch/async_posix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     fibre->fibre.uc_stack.ss_sp = stack;",
          "76:     fibre->fibre.uc_stack.ss_size = STACKSIZE;",
          "77:     fibre->fibre.uc_link = NULL;",
          "79:     return 1;",
          "80: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:     fibre->env_init = 0;",
          "",
          "---------------"
        ],
        "crypto/async/arch/async_posix.h||crypto/async/arch/async_posix.h": [
          "File: crypto/async/arch/async_posix.h -> crypto/async/arch/async_posix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: #  define ASYNC_ARCH",
          "64: #  include <ucontext.h>",
          "66: extern __thread ASYNC_CTX *sysvctx;",
          "68: typedef struct async_fibre_st {",
          "69:     ucontext_t fibre;",
          "70: } ASYNC_FIBRE;",
          "72: #  define ASYNC_set_ctx(nctx)             (sysvctx = (nctx))",
          "73: #  define ASYNC_get_ctx()                 (sysvctx)",
          "79: #  define ASYNC_FIBRE_makecontext(c) \\",
          "80:             (ASYNC_FIBRE_init(c) \\",
          "81:             && !getcontext(&(c)->fibre) \\",
          "",
          "[Removed Lines]",
          "74: #  define ASYNC_FIBRE_swapcontext(o,n,r) \\",
          "75:             ((r)? \\",
          "76:                 !swapcontext(&(o)->fibre, &(n)->fibre) \\",
          "77:             : \\",
          "78:                 !setcontext(&(n)->fibre))",
          "",
          "[Added Lines]",
          "65: #  include <setjmp.h>",
          "66: #  include \"e_os.h\"",
          "72:     jmp_buf env;",
          "73:     int env_init;",
          "79: static inline int ASYNC_FIBRE_swapcontext(ASYNC_FIBRE *o, ASYNC_FIBRE *n, int r)",
          "80: {",
          "81:     o->env_init = 1;",
          "83:     if (!r || !setjmp(o->env)) {",
          "84:         if (n->env_init)",
          "85:             longjmp(n->env, 1);",
          "86:         else",
          "87:             setcontext(&n->fibre);",
          "88:     }",
          "90:     return 1;",
          "91: }",
          "",
          "---------------"
        ],
        "util/libeay.num||util/libeay.num": [
          "File: util/libeay.num -> util/libeay.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "4651: TS_CONF_set_signer_digest               5011 EXIST::FUNCTION:",
          "4652: ENGINE_load_dasync                      5012 EXIST::FUNCTION:ENGINE,STATIC_ENGINE",
          "4653: ASYNC_pause_job                         5013 EXIST::FUNCTION:",
          "4655: ASYNC_in_job                            5015 EXIST::FUNCTION:",
          "4656: ASYNC_start_job                         5016 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "4654: ASYNC_job_is_waiting                    5014 EXIST::FUNCTION:",
          "",
          "[Added Lines]",
          "4654: ASYNC_job_is_waiting                    5014 NOEXIST::FUNCTION:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e968561d5e762e6c05e74541137916b4f20a144b",
      "candidate_info": {
        "commit_hash": "e968561d5e762e6c05e74541137916b4f20a144b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e968561d5e762e6c05e74541137916b4f20a144b",
        "files": [
          "crypto/dh/Makefile",
          "crypto/dh/dh_kdf.c",
          "crypto/dh/dh_pmeth.c",
          "crypto/ec/ec_ameth.c",
          "crypto/rsa/rsa_ameth.c",
          "include/openssl/dh.h",
          "test/cms-test.pl",
          "util/libeay.num"
        ],
        "message": "RT3674: Make no-cms build work.\n\nAlso has changes from from David Woodhouse <David.Woodhouse@intel.com>\nand some tweaks from me.\n\nSigned-off-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Tim Hudson <tjh@openssl.org>",
        "before_after_code_files": [
          "crypto/dh/dh_kdf.c||crypto/dh/dh_kdf.c",
          "crypto/dh/dh_pmeth.c||crypto/dh/dh_pmeth.c",
          "crypto/ec/ec_ameth.c||crypto/ec/ec_ameth.c",
          "crypto/rsa/rsa_ameth.c||crypto/rsa/rsa_ameth.c",
          "include/openssl/dh.h||include/openssl/dh.h",
          "test/cms-test.pl||test/cms-test.pl",
          "util/libeay.num||util/libeay.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "util/libeay.num||util/libeay.num"
          ],
          "candidate": [
            "util/libeay.num||util/libeay.num"
          ]
        }
      },
      "candidate_diff": {
        "crypto/dh/dh_kdf.c||crypto/dh/dh_kdf.c": [
          "File: crypto/dh/dh_kdf.c -> crypto/dh/dh_kdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: #include <string.h>",
          "55: #include <openssl/dh.h>",
          "56: #include <openssl/evp.h>",
          "57: #include <openssl/asn1.h>",
          "58: #include <openssl/cms.h>",
          "62: #define DH_KDF_MAX      (1L << 30)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: #include <e_os.h>",
          "56: #ifndef OPENSSL_NO_CMS",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "184:     EVP_MD_CTX_cleanup(&mctx);",
          "185:     return rv;",
          "186: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192: #endif",
          "",
          "---------------"
        ],
        "crypto/dh/dh_pmeth.c||crypto/dh/dh_pmeth.c": [
          "File: crypto/dh/dh_pmeth.c -> crypto/dh/dh_pmeth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:     case EVP_PKEY_CTRL_DH_KDF_TYPE:",
          "206:         if (p1 == -2)",
          "207:             return dctx->kdf_type;",
          "208:         if (p1 != EVP_PKEY_DH_KDF_NONE && p1 != EVP_PKEY_DH_KDF_X9_42)",
          "209:             return -2;",
          "210:         dctx->kdf_type = p1;",
          "211:         return 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208: #ifdef OPENSSL_NO_CMS",
          "209:         if (p1 != EVP_PKEY_DH_KDF_NONE)",
          "210: #else",
          "212: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "447:             return ret;",
          "449:         return 1;",
          "451:         unsigned char *Z = NULL;",
          "452:         size_t Zlen = 0;",
          "453:         if (!dctx->kdf_outlen || !dctx->kdf_oid)",
          "",
          "[Removed Lines]",
          "450:     } else if (dctx->kdf_type == EVP_PKEY_DH_KDF_X9_42) {",
          "",
          "[Added Lines]",
          "454:     }",
          "455: #ifndef OPENSSL_NO_CMS",
          "456:     else if (dctx->kdf_type == EVP_PKEY_DH_KDF_X9_42) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "475:         OPENSSL_clear_free(Z, Zlen);",
          "476:         return ret;",
          "477:     }",
          "479: }",
          "481: const EVP_PKEY_METHOD dh_pkey_meth = {",
          "",
          "[Removed Lines]",
          "478:     return 1;",
          "",
          "[Added Lines]",
          "485: #endif",
          "486:     return 0;",
          "",
          "---------------"
        ],
        "crypto/ec/ec_ameth.c||crypto/ec/ec_ameth.c": [
          "File: crypto/ec/ec_ameth.c -> crypto/ec/ec_ameth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: #include <openssl/asn1t.h>",
          "68: #include \"internal/asn1_int.h\"",
          "70: static int ecdh_cms_decrypt(CMS_RecipientInfo *ri);",
          "71: static int ecdh_cms_encrypt(CMS_RecipientInfo *ri);",
          "73: static int eckey_param2type(int *pptype, void **ppval, EC_KEY *ec_key)",
          "74: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: #ifndef OPENSSL_NO_CMS",
          "73: #endif",
          "",
          "---------------"
        ],
        "crypto/rsa/rsa_ameth.c||crypto/rsa/rsa_ameth.c": [
          "File: crypto/rsa/rsa_ameth.c -> crypto/rsa/rsa_ameth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68: #endif",
          "69: #include \"internal/asn1_int.h\"",
          "71: static int rsa_cms_sign(CMS_SignerInfo *si);",
          "72: static int rsa_cms_verify(CMS_SignerInfo *si);",
          "73: static int rsa_cms_decrypt(CMS_RecipientInfo *ri);",
          "74: static int rsa_cms_encrypt(CMS_RecipientInfo *ri);",
          "76: static int rsa_pub_encode(X509_PUBKEY *pk, const EVP_PKEY *pkey)",
          "77: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: #ifndef OPENSSL_NO_CMS",
          "76: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "653:     return rv;",
          "654: }",
          "656: static int rsa_cms_verify(CMS_SignerInfo *si)",
          "657: {",
          "658:     int nid, nid2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "658: #ifndef OPENSSL_NO_CMS",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "671:     }",
          "672:     return 0;",
          "673: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "677: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "693:     return -1;",
          "694: }",
          "696: static int rsa_cms_sign(CMS_SignerInfo *si)",
          "697: {",
          "698:     int pad_mode = RSA_PKCS1_PADDING;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "700: #ifndef OPENSSL_NO_CMS",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "717:     X509_ALGOR_set0(alg, OBJ_nid2obj(NID_rsassaPss), V_ASN1_SEQUENCE, os);",
          "718:     return 1;",
          "719: }",
          "721: static int rsa_item_sign(EVP_MD_CTX *ctx, const ASN1_ITEM *it, void *asn,",
          "722:                          X509_ALGOR *alg1, X509_ALGOR *alg2,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "725: #endif",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "750:     return 2;",
          "751: }",
          "753: static RSA_OAEP_PARAMS *rsa_oaep_decode(const X509_ALGOR *alg,",
          "754:                                         X509_ALGOR **pmaskHash)",
          "755: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "759: #ifndef OPENSSL_NO_CMS",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "900:     ASN1_STRING_free(os);",
          "901:     return rv;",
          "902: }",
          "904: const EVP_PKEY_ASN1_METHOD rsa_asn1_meths[] = {",
          "905:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "910: #endif",
          "",
          "---------------"
        ],
        "include/openssl/dh.h||include/openssl/dh.h": [
          "File: include/openssl/dh.h -> include/openssl/dh.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "239: DH *DH_get_2048_224(void);",
          "240: DH *DH_get_2048_256(void);",
          "243: int DH_KDF_X9_42(unsigned char *out, size_t outlen,",
          "244:                  const unsigned char *Z, size_t Zlen,",
          "245:                  ASN1_OBJECT *key_oid,",
          "246:                  const unsigned char *ukm, size_t ukmlen, const EVP_MD *md);",
          "248: # define EVP_PKEY_CTX_set_dh_paramgen_prime_len(ctx, len) \\",
          "249:         EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242: # ifndef OPENSSL_NO_CMS",
          "248: # endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "338: # define EVP_PKEY_DH_KDF_NONE                            1",
          "339: # define EVP_PKEY_DH_KDF_X9_42                           2",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "341: # ifndef OPENSSL_NO_CMS",
          "343: # endif",
          "",
          "---------------"
        ],
        "test/cms-test.pl||test/cms-test.pl": [
          "File: test/cms-test.pl -> test/cms-test.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "100: my $no_ecdh;",
          "101: my $ossl8 = `$ossl_path version -v` =~ /0\\.9\\.8/;",
          "103: system (\"$ossl_path no-ec > $null_path\");",
          "104: if ($? == 0)",
          "105:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103: system (\"$ossl_path no-cms > $null_path\");",
          "104: if ($? == 0)",
          "105:         {",
          "106:         print \"CMS disabled\\n\";",
          "107:         exit 0;",
          "108:         }",
          "",
          "---------------"
        ],
        "util/libeay.num||util/libeay.num": [
          "File: util/libeay.num -> util/libeay.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "4368: ECDSA_METHOD_set_sign                   4733 EXIST::FUNCTION:EC",
          "4369: CMS_RecipientEncryptedKey_cert_cmp      4734 EXIST:!VMS:FUNCTION:CMS",
          "4370: CMS_RecipEncryptedKey_cert_cmp          4734 EXIST:VMS:FUNCTION:CMS",
          "4372: RSA_OAEP_PARAMS_free                    4736 EXIST::FUNCTION:RSA",
          "4373: EVP_des_ede3_wrap                       4737 EXIST::FUNCTION:DES",
          "4374: RSA_OAEP_PARAMS_it                      4738 EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:RSA",
          "",
          "[Removed Lines]",
          "4371: DH_KDF_X9_42                            4735 EXIST::FUNCTION:DH",
          "",
          "[Added Lines]",
          "4371: DH_KDF_X9_42                            4735 EXIST::FUNCTION:CMS,DH",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb14aec713ccab92d1c21d3d5b066570c4bca5ee",
      "candidate_info": {
        "commit_hash": "cb14aec713ccab92d1c21d3d5b066570c4bca5ee",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/cb14aec713ccab92d1c21d3d5b066570c4bca5ee",
        "files": [
          "crypto/asn1/Makefile",
          "util/libeay.num"
        ],
        "message": "make update\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "util/libeay.num||util/libeay.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "util/libeay.num||util/libeay.num"
          ],
          "candidate": [
            "util/libeay.num||util/libeay.num"
          ]
        }
      },
      "candidate_diff": {
        "util/libeay.num||util/libeay.num": [
          "File: util/libeay.num -> util/libeay.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "1729: BIO_number_read                         2203 EXIST::FUNCTION:",
          "1730: X509_STORE_CTX_get1_chain               2204 EXIST::FUNCTION:",
          "1731: ERR_load_RAND_strings                   2205 EXIST::FUNCTION:",
          "1733: X509_REQ_get_attr_by_NID                2207 EXIST::FUNCTION:",
          "1734: X509_REQ_get_attr                       2208 EXIST::FUNCTION:",
          "1735: X509_REQ_add1_attr_by_NID               2209 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "1732: RAND_pseudo_bytes                       2206 EXIST::FUNCTION:",
          "",
          "[Added Lines]",
          "1732: RAND_pseudo_bytes                       2206 EXIST::FUNCTION:DEPRECATED",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2011: UI_ctrl                                 2580 EXIST::FUNCTION:",
          "2012: _shadow_DES_rw_mode                     2581 EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:DES",
          "2013: _shadow_DES_rw_mode                     2581 EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:DES",
          "2015: ASN1_template_i2d                       2583 EXIST::FUNCTION:",
          "2016: ENGINE_register_DH                      2584 EXIST::FUNCTION:ENGINE",
          "2017: UI_construct_prompt                     2585 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "2014: asn1_do_adb                             2582 EXIST::FUNCTION:",
          "",
          "[Added Lines]",
          "2014: asn1_do_adb                             2582 NOEXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2107: EVP_EncryptFinal_ex                     2660 EXIST::FUNCTION:",
          "2108: ENGINE_set_default_digests              2661 EXIST::FUNCTION:ENGINE",
          "2109: X509_get0_pubkey_bitstr                 2662 EXIST::FUNCTION:",
          "2111: ENGINE_register_RSA                     2664 EXIST::FUNCTION:ENGINE",
          "2112: ENGINE_unregister_DSA                   2665 EXIST::FUNCTION:ENGINE",
          "2113: _ossl_old_des_key_sched                 2666 NOEXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "2110: asn1_ex_i2c                             2663 EXIST::FUNCTION:",
          "",
          "[Added Lines]",
          "2110: asn1_ex_i2c                             2663 NOEXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2385: EC_GROUP_new_curve_GFp                  2885 EXIST::FUNCTION:EC",
          "2386: OCSP_REQUEST_get1_ext_d2i               2886 EXIST::FUNCTION:",
          "2387: PKCS12_item_pack_safebag                2887 EXIST::FUNCTION:",
          "2389: ENGINE_register_digests                 2889 EXIST::FUNCTION:ENGINE",
          "2390: i2d_OCSP_REVOKEDINFO                    2890 EXIST::FUNCTION:",
          "2392: UI_free                                 2892 EXIST::FUNCTION:",
          "2393: UI_new_method                           2893 EXIST::FUNCTION:",
          "2394: EVP_EncryptInit_ex                      2894 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "2388: asn1_ex_c2i                             2888 EXIST::FUNCTION:",
          "2391: asn1_enc_restore                        2891 EXIST::FUNCTION:",
          "",
          "[Added Lines]",
          "2388: asn1_ex_c2i                             2888 NOEXIST::FUNCTION:",
          "2391: asn1_enc_restore                        2891 NOEXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2504: POLICYINFO_it                           2991 EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "2505: POLICYINFO_it                           2991 EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "2506: ENGINE_set_destroy_function             2992 EXIST::FUNCTION:ENGINE",
          "2508: OCSP_RESPID_it                          2994 EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "2509: OCSP_RESPID_it                          2994 EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "2510: EC_GROUP_new                            2995 EXIST::FUNCTION:EC",
          "",
          "[Removed Lines]",
          "2507: asn1_enc_free                           2993 EXIST::FUNCTION:",
          "",
          "[Added Lines]",
          "2507: asn1_enc_free                           2993 NOEXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2564: i2d_KRB5_TKTBODY                        3038 EXIST::FUNCTION:",
          "2565: EC_POINT_clear_free                     3039 EXIST::FUNCTION:EC",
          "2566: AES_decrypt                             3040 EXIST::FUNCTION:AES",
          "2568: UI_get_result_maxsize                   3042 EXIST::FUNCTION:",
          "2569: OCSP_CERTID_new                         3043 EXIST::FUNCTION:",
          "2570: ENGINE_unregister_RAND                  3044 EXIST::FUNCTION:ENGINE",
          "",
          "[Removed Lines]",
          "2567: asn1_enc_init                           3041 EXIST::FUNCTION:",
          "",
          "[Added Lines]",
          "2567: asn1_enc_init                           3041 NOEXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2577: ASN1_primitive_free                     3051 EXIST::FUNCTION:",
          "2578: i2d_EXTENDED_KEY_USAGE                  3052 EXIST::FUNCTION:",
          "2579: i2d_OCSP_SIGNATURE                      3053 EXIST::FUNCTION:",
          "2581: ENGINE_load_nuron                       3055 EXIST::FUNCTION:ENGINE,STATIC_ENGINE",
          "2582: _ossl_old_des_pcbc_encrypt              3056 NOEXIST::FUNCTION:",
          "2583: PKCS12_MAC_DATA_it                      3057 EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "2584: PKCS12_MAC_DATA_it                      3057 EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "2585: OCSP_accept_responses_new               3058 EXIST::FUNCTION:",
          "2587: PKCS7_ATTR_VERIFY_it                    3060 EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "2588: PKCS7_ATTR_VERIFY_it                    3060 EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "2589: KRB5_APREQBODY_it                       3061 EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "",
          "[Removed Lines]",
          "2580: asn1_enc_save                           3054 EXIST::FUNCTION:",
          "2586: asn1_do_lock                            3059 EXIST::FUNCTION:",
          "",
          "[Added Lines]",
          "2580: asn1_enc_save                           3054 NOEXIST::FUNCTION:",
          "2586: asn1_do_lock                            3059 NOEXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2598: i2d_OCSP_CERTID                         3068 EXIST::FUNCTION:",
          "2599: ASN1_item_d2i_bio                       3069 EXIST::FUNCTION:",
          "2600: EC_POINT_dbl                            3070 EXIST::FUNCTION:EC",
          "2602: i2d_KRB5_CHECKSUM                       3072 EXIST::FUNCTION:",
          "2603: ENGINE_set_table_flags                  3073 EXIST::FUNCTION:ENGINE",
          "2604: AES_options                             3074 EXIST::FUNCTION:AES",
          "",
          "[Removed Lines]",
          "2601: asn1_get_choice_selector                3071 EXIST::FUNCTION:",
          "",
          "[Added Lines]",
          "2601: asn1_get_choice_selector                3071 NOEXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2660: BN_mod_lshift                           3120 EXIST::FUNCTION:",
          "2661: KRB5_AUTHDATA_it                        3121 EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "2662: KRB5_AUTHDATA_it                        3121 EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "2664: OCSP_basic_add1_status                  3123 EXIST::FUNCTION:",
          "2665: OCSP_RESPID_free                        3124 EXIST::FUNCTION:",
          "2667: UI_add_input_string                     3126 EXIST::FUNCTION:",
          "2668: OCSP_CRLID_it                           3127 EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "2669: OCSP_CRLID_it                           3127 EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "",
          "[Removed Lines]",
          "2663: asn1_set_choice_selector                3122 EXIST::FUNCTION:",
          "2666: asn1_get_field_ptr                      3125 EXIST::FUNCTION:",
          "",
          "[Added Lines]",
          "2663: asn1_set_choice_selector                3122 NOEXIST::FUNCTION:",
          "2666: asn1_get_field_ptr                      3125 NOEXIST::FUNCTION:",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4552: OCSP_resp_get0_signature                4911 EXIST::FUNCTION:",
          "4553: OBJ_length                              4912 EXIST::FUNCTION:",
          "4554: OBJ_get0_data                           4913 EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4555: X509_NAME_ENTRY_set                     4914 EXIST::FUNCTION:",
          "",
          "---------------"
        ]
      }
    }
  ]
}