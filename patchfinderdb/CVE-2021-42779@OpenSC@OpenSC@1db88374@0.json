{
  "cve_id": "CVE-2021-42779",
  "cve_desc": "A heap use after free issue was found in Opensc before version 0.22.0 in sc_file_valid.",
  "repo": "OpenSC/OpenSC",
  "patch_hash": "1db88374bb7706a115d5c3617c6f16115c33bf27",
  "patch_info": {
    "commit_hash": "1db88374bb7706a115d5c3617c6f16115c33bf27",
    "repo": "OpenSC/OpenSC",
    "commit_url": "https://github.com/OpenSC/OpenSC/commit/1db88374",
    "files": [
      "src/libopensc/pkcs15-oberthur.c"
    ],
    "message": "oberthur: Correctly check for return values\n\nThanks oss-fuzz\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28843",
    "before_after_code_files": [
      "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c"
    ]
  },
  "patch_diff": {
    "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c": [
      "File: src/libopensc/pkcs15-oberthur.c -> src/libopensc/pkcs15-oberthur.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "304:  if (verify_pin && rv == SC_ERROR_SECURITY_STATUS_NOT_SATISFIED)   {",
      "305:   struct sc_pkcs15_object *objs[0x10], *pin_obj = NULL;",
      "306:   const struct sc_acl_entry *acl = sc_file_get_acl_entry(file, SC_AC_OP_READ);",
      "309:   if (acl == NULL) {",
      "310:    sc_file_free(file);",
      "",
      "[Removed Lines]",
      "307:   int ii;",
      "",
      "[Added Lines]",
      "307:   int ii, nobjs;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "313:    LOG_FUNC_RETURN(ctx, SC_ERROR_INVALID_DATA);",
      "314:   }",
      "318:    sc_file_free(file);",
      "319:    free(*out);",
      "322:   }",
      "325:    struct sc_pkcs15_auth_info *auth_info = (struct sc_pkcs15_auth_info *) objs[ii]->data;",
      "326:    sc_log(ctx, \"compare PIN/ACL refs:%i/%i, method:%i/%i\",",
      "328:    if (auth_info->attrs.pin.reference == (int)acl->key_ref && auth_info->auth_method == (unsigned)acl->method)   {",
      "329:     pin_obj = objs[ii];",
      "330:     break;",
      "",
      "[Removed Lines]",
      "316:   rv = sc_pkcs15_get_objects(p15card, SC_PKCS15_TYPE_AUTH_PIN, objs, 0x10);",
      "317:   if (rv != SC_SUCCESS) {",
      "321:    LOG_TEST_RET(ctx, rv, \"Cannot read oberthur file: get AUTH objects error\");",
      "324:   for (ii=0; ii<rv; ii++)   {",
      "327:      auth_info->attrs.pin.reference, acl->key_ref, auth_info->auth_method, acl->method);",
      "",
      "[Added Lines]",
      "316:   nobjs = sc_pkcs15_get_objects(p15card, SC_PKCS15_TYPE_AUTH_PIN, objs, 0x10);",
      "317:   if (nobjs < 1) {",
      "321:    LOG_TEST_RET(ctx, SC_ERROR_DATA_OBJECT_NOT_FOUND,",
      "322:     \"Cannot read oberthur file: get AUTH objects error\");",
      "325:   for (ii = 0; ii < nobjs; ii++) {",
      "328:     auth_info->attrs.pin.reference, acl->key_ref, auth_info->auth_method, acl->method);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b820bdf5b3799aa15c0a29150e64c227d1c0abfc",
      "candidate_info": {
        "commit_hash": "b820bdf5b3799aa15c0a29150e64c227d1c0abfc",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/b820bdf5b3799aa15c0a29150e64c227d1c0abfc",
        "files": [
          "src/libopensc/card-tcos.c"
        ],
        "message": "tcos: Reformat tcos_decipher",
        "before_after_code_files": [
          "src/libopensc/card-tcos.c||src/libopensc/card-tcos.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/2203"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/libopensc/card-tcos.c||src/libopensc/card-tcos.c": [
          "File: src/libopensc/card-tcos.c -> src/libopensc/card-tcos.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "654:  LOG_TEST_RET(ctx, r, \"APDU transmit failed\");",
          "656:  if (apdu.sw1 == 0x90 && apdu.sw2 == 0x00) {",
          "658:   unsigned int offset = 0;",
          "660:   if (tcos3 && (data->pad_flags & SC_ALGORITHM_RSA_PAD_PKCS1) && apdu.resp[0] == 0 && apdu.resp[1] == 2) {",
          "",
          "[Removed Lines]",
          "657:   size_t len = (apdu.resplen>outlen) ? outlen : apdu.resplen;",
          "",
          "[Added Lines]",
          "657:   size_t len = (apdu.resplen > outlen) ? outlen : apdu.resplen;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "663:     ++offset;",
          "664:    offset = (offset < len - 1) ? offset + 1 : 0;",
          "665:   }",
          "667:   SC_FUNC_RETURN(ctx, SC_LOG_DEBUG_VERBOSE, len - offset);",
          "668:  }",
          "669:  SC_FUNC_RETURN(ctx, SC_LOG_DEBUG_VERBOSE, sc_check_sw(card, apdu.sw1, apdu.sw2));",
          "",
          "[Removed Lines]",
          "666:   memcpy(out, apdu.resp + offset, len-offset);",
          "",
          "[Added Lines]",
          "666:   memcpy(out, apdu.resp + offset, len - offset);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f16ffae848e88dc2c93a6a4c1501501dddbbdd8",
      "candidate_info": {
        "commit_hash": "5f16ffae848e88dc2c93a6a4c1501501dddbbdd8",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/5f16ffae848e88dc2c93a6a4c1501501dddbbdd8",
        "files": [
          "src/tests/p11test/p11test_case_common.h"
        ],
        "message": "p11test: Explicitly return in case of SKIP macro is used\n\nThanks coverity\n\nFixes CID 365263",
        "before_after_code_files": [
          "src/tests/p11test/p11test_case_common.h||src/tests/p11test/p11test_case_common.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/2203"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/tests/p11test/p11test_case_common.h||src/tests/p11test/p11test_case_common.h": [
          "File: src/tests/p11test/p11test_case_common.h -> src/tests/p11test/p11test_case_common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:  } \\",
          "99:  } else {}",
          "103: #define P11TEST_PASS(info) do { _P11TEST_FINALIZE(info, \"pass\"); } while(0);",
          "",
          "[Removed Lines]",
          "101: #define P11TEST_SKIP(info) do { _P11TEST_FINALIZE(info, \"skip\"); skip(); } while(0);",
          "",
          "[Added Lines]",
          "101: #define P11TEST_SKIP(info) do { _P11TEST_FINALIZE(info, \"skip\"); skip(); return; } while(0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03cbf91be54e2b54dd87176d1136570610e32f3f",
      "candidate_info": {
        "commit_hash": "03cbf91be54e2b54dd87176d1136570610e32f3f",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/03cbf91be54e2b54dd87176d1136570610e32f3f",
        "files": [
          "src/libopensc/card-iasecc.c"
        ],
        "message": "iasecc: Avoid another memory leak\n\nThanks oss-fuzz\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=29456",
        "before_after_code_files": [
          "src/libopensc/card-iasecc.c||src/libopensc/card-iasecc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/2203"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/libopensc/card-iasecc.c||src/libopensc/card-iasecc.c": [
          "File: src/libopensc/card-iasecc.c -> src/libopensc/card-iasecc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "310:  mf_file->type = SC_FILE_TYPE_DF;",
          "311:  mf_file->path = path;",
          "315:  card->cache.current_df = NULL;",
          "318:   sc_file_free(card->cache.current_ef);",
          "319:  card->cache.current_ef = NULL;",
          "321:  sc_file_dup(&card->cache.current_df, mf_file);",
          "",
          "[Removed Lines]",
          "313:  if (card->cache.valid)",
          "314:    sc_file_free(card->cache.current_df);",
          "317:  if (card->cache.valid)",
          "",
          "[Added Lines]",
          "313:  if (card->cache.valid) {",
          "314:   sc_file_free(card->cache.current_df);",
          "315:  }",
          "318:  if (card->cache.valid) {",
          "320:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1070:    sc_log(ctx, \"FileType %i\", file->type);",
          "1071:    if (file->type == SC_FILE_TYPE_DF)   {",
          "1073:      sc_file_free(card->cache.current_df);",
          "1074:     card->cache.current_df = NULL;",
          "1081:     sc_file_dup(&card->cache.current_df, file);",
          "1082:     card->cache.valid = 1;",
          "1083:    }",
          "1084:    else   {",
          "1086:      sc_file_free(card->cache.current_ef);",
          "1088:     card->cache.current_ef = NULL;",
          "1090:     sc_file_dup(&card->cache.current_ef, file);",
          "1091:    }",
          "1093:    if (file_out)   {",
          "",
          "[Removed Lines]",
          "1072:     if (card->cache.valid)",
          "1077:     if (card->cache.valid)",
          "1078:      sc_file_free(card->cache.current_ef);",
          "1079:     card->cache.current_ef = NULL;",
          "1085:     if (card->cache.valid)",
          "",
          "[Added Lines]",
          "1074:     if (card->cache.valid) {",
          "1076:     }",
          "1083:     if (card->cache.valid) {",
          "1085:     }",
          "1090:     card->cache.valid = 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1493:   rv = sc_check_sw(card, apdu.sw1, apdu.sw2);",
          "1494:   LOG_TEST_RET(ctx, rv, \"Delete file failed\");",
          "1497:    sc_file_free(card->cache.current_ef);",
          "1498:   card->cache.current_ef = NULL;",
          "1499:  }",
          "",
          "[Removed Lines]",
          "1496:   if (card->cache.valid)",
          "",
          "[Added Lines]",
          "1496:   if (card->cache.valid) {",
          "1498:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a34d11cb7495ea4ea4dc9132bfb3a2702a4a261",
      "candidate_info": {
        "commit_hash": "0a34d11cb7495ea4ea4dc9132bfb3a2702a4a261",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/0a34d11cb7495ea4ea4dc9132bfb3a2702a4a261",
        "files": [
          "src/libopensc/pkcs15-oberthur.c"
        ],
        "message": "oberthur: Avoid memory leaks on error paths",
        "before_after_code_files": [
          "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c"
          ],
          "candidate": [
            "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c"
          ]
        }
      },
      "candidate_diff": {
        "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c": [
          "File: src/libopensc/pkcs15-oberthur.c -> src/libopensc/pkcs15-oberthur.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "252:  sc_format_path(in_path, &path);",
          "253:  rv = sc_select_file(card, &path, &file);",
          "256:  if (file->ef_structure == SC_FILE_EF_TRANSPARENT)",
          "257:   sz = file->size;",
          "",
          "[Removed Lines]",
          "254:  LOG_TEST_RET(ctx, rv, \"Cannot select oberthur file to read\");",
          "",
          "[Added Lines]",
          "254:  if (rv != SC_SUCCESS) {",
          "255:   sc_file_free(file);",
          "256:   LOG_TEST_RET(ctx, rv, \"Cannot select oberthur file to read\");",
          "257:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "259:   sz = (file->record_length + 2) * file->record_count;",
          "263:   LOG_TEST_RET(ctx, SC_ERROR_OUT_OF_MEMORY, \"Cannot read oberthur file\");",
          "265:  if (file->ef_structure == SC_FILE_EF_TRANSPARENT)   {",
          "266:   rv = sc_read_binary(card, 0, *out, sz, 0);",
          "",
          "[Removed Lines]",
          "262:  if (*out == NULL)",
          "",
          "[Added Lines]",
          "265:  if (*out == NULL) {",
          "266:   sc_file_free(file);",
          "268:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "298:   int ii;",
          "300:   rv = sc_pkcs15_get_objects(p15card, SC_PKCS15_TYPE_AUTH_PIN, objs, 0x10);",
          "303:   for (ii=0; ii<rv; ii++)   {",
          "304:    struct sc_pkcs15_auth_info *auth_info = (struct sc_pkcs15_auth_info *) objs[ii]->data;",
          "",
          "[Removed Lines]",
          "301:   LOG_TEST_RET(ctx, rv, \"Cannot read oberthur file: get AUTH objects error\");",
          "",
          "[Added Lines]",
          "306:   if (rv != SC_SUCCESS) {",
          "307:    sc_file_free(file);",
          "308:    LOG_TEST_RET(ctx, rv, \"Cannot read oberthur file: get AUTH objects error\");",
          "309:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c8b2e8271350ad3a5a4ebb5824f387b727d424f7",
      "candidate_info": {
        "commit_hash": "c8b2e8271350ad3a5a4ebb5824f387b727d424f7",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/c8b2e8271350ad3a5a4ebb5824f387b727d424f7",
        "files": [
          "src/libopensc/pkcs15-oberthur.c"
        ],
        "message": "oberthur: Once again, fix the error check\n\nThe shared codition was executed but the condition in LOG_TEST_RET\nwas not met in case of the acl was null.\n\nThanks oss-fuzz\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25962",
        "before_after_code_files": [
          "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c"
          ],
          "candidate": [
            "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c"
          ]
        }
      },
      "candidate_diff": {
        "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c": [
          "File: src/libopensc/pkcs15-oberthur.c -> src/libopensc/pkcs15-oberthur.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "306:   const struct sc_acl_entry *acl = sc_file_get_acl_entry(file, SC_AC_OP_READ);",
          "307:   int ii;",
          "309:   rv = sc_pkcs15_get_objects(p15card, SC_PKCS15_TYPE_AUTH_PIN, objs, 0x10);",
          "311:    sc_file_free(file);",
          "312:    free(*out);",
          "",
          "[Removed Lines]",
          "310:   if (rv != SC_SUCCESS || acl == NULL) {",
          "",
          "[Added Lines]",
          "309:   if (acl == NULL) {",
          "310:    sc_file_free(file);",
          "311:    free(*out);",
          "313:    LOG_FUNC_RETURN(ctx, SC_ERROR_INVALID_DATA);",
          "314:   }",
          "317:   if (rv != SC_SUCCESS) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}