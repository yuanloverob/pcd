{
  "cve_id": "CVE-2015-3185",
  "cve_desc": "The ap_some_auth_required function in server/request.c in the Apache HTTP Server 2.4.x before 2.4.14 does not consider that a Require directive may be associated with an authorization setting rather than an authentication setting, which allows remote attackers to bypass intended access restrictions in opportunistic circumstances by leveraging the presence of a module that relies on the 2.2 API behavior.",
  "repo": "apache/httpd",
  "patch_hash": "db81019ab88734ed35fa70294a0cfa7a19743f73",
  "patch_info": {
    "commit_hash": "db81019ab88734ed35fa70294a0cfa7a19743f73",
    "repo": "apache/httpd",
    "commit_url": "https://github.com/apache/httpd/commit/db81019ab88734ed35fa70294a0cfa7a19743f73",
    "files": [
      "include/ap_mmn.h",
      "include/http_request.h",
      "server/request.c"
    ],
    "message": "SECURITY: CVE-2015-3185 (cve.mitre.org)\n\nReplacement of ap_some_auth_required (unusable in Apache httpd 2.4)\nwith new ap_some_authn_required and ap_force_authn hook.\n\nSubmitted by: breser\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@1684524 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "include/ap_mmn.h||include/ap_mmn.h",
      "include/http_request.h||include/http_request.h",
      "server/request.c||server/request.c"
    ]
  },
  "patch_diff": {
    "include/ap_mmn.h||include/ap_mmn.h": [
      "File: include/ap_mmn.h -> include/ap_mmn.h"
    ],
    "include/http_request.h||include/http_request.h": [
      "File: include/http_request.h -> include/http_request.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "542: AP_DECLARE_HOOK(int,post_perdir_config,(request_rec *r))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "555: AP_DECLARE_HOOK(int,force_authn,(request_rec *r))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "587: AP_DECLARE(apr_bucket *) ap_bucket_eor_create(apr_bucket_alloc_t *list,",
      "588:                                               request_rec *r);",
      "590: #ifdef __cplusplus",
      "591: }",
      "592: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "612: AP_DECLARE(int) ap_some_authn_required(request_rec *r);",
      "",
      "---------------"
    ],
    "server/request.c||server/request.c": [
      "File: server/request.c -> server/request.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "71:     APR_HOOK_LINK(create_request)",
      "72:     APR_HOOK_LINK(post_perdir_config)",
      "73:     APR_HOOK_LINK(dirwalk_stat)",
      "74: )",
      "76: AP_IMPLEMENT_HOOK_RUN_FIRST(int,translate_name,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "74:     APR_HOOK_LINK(force_authn)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "97: AP_IMPLEMENT_HOOK_RUN_FIRST(apr_status_t,dirwalk_stat,",
      "98:                             (apr_finfo_t *finfo, request_rec *r, apr_int32_t wanted),",
      "99:                             (finfo, r, wanted), AP_DECLINED)",
      "101: static int auth_internal_per_conf = 0;",
      "102: static int auth_internal_per_conf_hooks = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "101: AP_IMPLEMENT_HOOK_RUN_FIRST(int,force_authn,",
      "102:                             (request_rec *r), (r), DECLINED)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "118:     }",
      "119: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "124: AP_DECLARE(int) ap_some_authn_required(request_rec *r)",
      "125: {",
      "126:     int access_status;",
      "128:     switch (ap_satisfies(r)) {",
      "129:     case SATISFY_ALL:",
      "130:     case SATISFY_NOSPEC:",
      "131:         if ((access_status = ap_run_access_checker(r)) != OK) {",
      "132:             break;",
      "133:         }",
      "135:         access_status = ap_run_access_checker_ex(r);",
      "136:         if (access_status == DECLINED) {",
      "137:             return TRUE;",
      "138:         }",
      "140:         break;",
      "141:     case SATISFY_ANY:",
      "142:         if ((access_status = ap_run_access_checker(r)) == OK) {",
      "143:             break;",
      "144:         }",
      "146:         access_status = ap_run_access_checker_ex(r);",
      "147:         if (access_status == DECLINED) {",
      "148:             return TRUE;",
      "149:         }",
      "151:         break;",
      "152:     }",
      "154:     return FALSE;",
      "155: }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "236:             }",
      "238:             access_status = ap_run_access_checker_ex(r);",
      "248:                 if ((access_status = ap_run_check_user_id(r)) != OK) {",
      "249:                     return decl_die(access_status, \"check user\", r);",
      "250:                 }",
      "",
      "[Removed Lines]",
      "239:             if (access_status == OK) {",
      "240:                 ap_log_rerror(APLOG_MARK, APLOG_TRACE3, 0, r,",
      "241:                               \"request authorized without authentication by \"",
      "242:                               \"access_checker_ex hook: %s\", r->uri);",
      "243:             }",
      "244:             else if (access_status != DECLINED) {",
      "245:                 return decl_die(access_status, \"check access\", r);",
      "246:             }",
      "247:             else {",
      "",
      "[Added Lines]",
      "275:             if (access_status == DECLINED",
      "276:                 || (access_status == OK && ap_run_force_authn(r) == OK)) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "262:                     return decl_die(access_status, \"check authorization\", r);",
      "263:                 }",
      "264:             }",
      "265:             break;",
      "266:         case SATISFY_ANY:",
      "267:             if ((access_status = ap_run_access_checker(r)) == OK) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "294:             else if (access_status == OK) {",
      "295:                 ap_log_rerror(APLOG_MARK, APLOG_TRACE3, 0, r,",
      "296:                               \"request authorized without authentication by \"",
      "297:                               \"access_checker_ex hook: %s\", r->uri);",
      "298:             }",
      "299:             else {",
      "300:                 return decl_die(access_status, \"check access\", r);",
      "301:             }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "273:             }",
      "275:             access_status = ap_run_access_checker_ex(r);",
      "285:                 if ((access_status = ap_run_check_user_id(r)) != OK) {",
      "286:                     return decl_die(access_status, \"check user\", r);",
      "287:                 }",
      "",
      "[Removed Lines]",
      "276:             if (access_status == OK) {",
      "277:                 ap_log_rerror(APLOG_MARK, APLOG_TRACE3, 0, r,",
      "278:                               \"request authorized without authentication by \"",
      "279:                               \"access_checker_ex hook: %s\", r->uri);",
      "280:             }",
      "281:             else if (access_status != DECLINED) {",
      "282:                 return decl_die(access_status, \"check access\", r);",
      "283:             }",
      "284:             else {",
      "",
      "[Added Lines]",
      "313:             if (access_status == DECLINED",
      "314:                 || (access_status == OK && ap_run_force_authn(r) == OK)) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "299:                     return decl_die(access_status, \"check authorization\", r);",
      "300:                 }",
      "301:             }",
      "302:             break;",
      "303:         }",
      "304:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "332:             else if (access_status == OK) {",
      "333:                 ap_log_rerror(APLOG_MARK, APLOG_TRACE3, 0, r,",
      "334:                               \"request authorized without authentication by \"",
      "335:                               \"access_checker_ex hook: %s\", r->uri);",
      "336:             }",
      "337:             else {",
      "338:                 return decl_die(access_status, \"check access\", r);",
      "339:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2182cbc99fd3423c3f95d8c5f909b7cd1f29a3c8",
      "candidate_info": {
        "commit_hash": "2182cbc99fd3423c3f95d8c5f909b7cd1f29a3c8",
        "repo": "apache/httpd",
        "commit_url": "https://github.com/apache/httpd/commit/2182cbc99fd3423c3f95d8c5f909b7cd1f29a3c8",
        "files": [
          "CHANGES",
          "include/ap_mmn.h",
          "include/http_request.h",
          "server/request.c"
        ],
        "message": "SECURITY: CVE-2015-3185 (cve.mitre.org)\n\nReplacement of ap_some_auth_required (unusable in Apache httpd 2.4)\nwith new ap_some_authn_required and ap_force_authn hook.  \n\nSubmitted by: breser\nBackports: r1684524\nReviewed by: wrowe, ylavic, jim\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x@1684525 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "include/ap_mmn.h||include/ap_mmn.h",
          "include/http_request.h||include/http_request.h",
          "server/request.c||server/request.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "include/ap_mmn.h||include/ap_mmn.h",
            "include/http_request.h||include/http_request.h",
            "server/request.c||server/request.c"
          ],
          "candidate": [
            "include/ap_mmn.h||include/ap_mmn.h",
            "include/http_request.h||include/http_request.h",
            "server/request.c||server/request.c"
          ]
        }
      },
      "candidate_diff": {
        "include/ap_mmn.h||include/ap_mmn.h": [
          "File: include/ap_mmn.h -> include/ap_mmn.h"
        ],
        "include/http_request.h||include/http_request.h": [
          "File: include/http_request.h -> include/http_request.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "539: AP_DECLARE_HOOK(int,post_perdir_config,(request_rec *r))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "551: AP_DECLARE_HOOK(int,force_authn,(request_rec *r))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "584: AP_DECLARE(apr_bucket *) ap_bucket_eor_create(apr_bucket_alloc_t *list,",
          "585:                                               request_rec *r);",
          "587: #ifdef __cplusplus",
          "588: }",
          "589: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "608: AP_DECLARE(int) ap_some_authn_required(request_rec *r);",
          "",
          "---------------"
        ],
        "server/request.c||server/request.c": [
          "File: server/request.c -> server/request.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:     APR_HOOK_LINK(create_request)",
          "72:     APR_HOOK_LINK(post_perdir_config)",
          "73:     APR_HOOK_LINK(dirwalk_stat)",
          "74: )",
          "76: AP_IMPLEMENT_HOOK_RUN_FIRST(int,translate_name,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     APR_HOOK_LINK(force_authn)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97: AP_IMPLEMENT_HOOK_RUN_FIRST(apr_status_t,dirwalk_stat,",
          "98:                             (apr_finfo_t *finfo, request_rec *r, apr_int32_t wanted),",
          "99:                             (finfo, r, wanted), AP_DECLINED)",
          "101: static int auth_internal_per_conf = 0;",
          "102: static int auth_internal_per_conf_hooks = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101: AP_IMPLEMENT_HOOK_RUN_FIRST(int,force_authn,",
          "102:                           (request_rec *r), (r), DECLINED)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "118:     }",
          "119: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124: AP_DECLARE(int) ap_some_authn_required(request_rec *r)",
          "125: {",
          "126:     int access_status;",
          "128:     switch (ap_satisfies(r)) {",
          "129:     case SATISFY_ALL:",
          "130:     case SATISFY_NOSPEC:",
          "131:         if ((access_status = ap_run_access_checker(r)) != OK) {",
          "132:             break;",
          "133:         }",
          "135:         access_status = ap_run_access_checker_ex(r);",
          "136:         if (access_status == DECLINED) {",
          "137:             return TRUE;",
          "138:         }",
          "140:         break;",
          "141:     case SATISFY_ANY:",
          "142:         if ((access_status = ap_run_access_checker(r)) == OK) {",
          "143:             break;",
          "144:         }",
          "146:         access_status = ap_run_access_checker_ex(r);",
          "147:         if (access_status == DECLINED) {",
          "148:             return TRUE;",
          "149:         }",
          "151:         break;",
          "152:     }",
          "154:     return FALSE;",
          "155: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "232:             }",
          "234:             access_status = ap_run_access_checker_ex(r);",
          "244:                 if ((access_status = ap_run_check_user_id(r)) != OK) {",
          "245:                     return decl_die(access_status, \"check user\", r);",
          "246:                 }",
          "",
          "[Removed Lines]",
          "235:             if (access_status == OK) {",
          "236:                 ap_log_rerror(APLOG_MARK, APLOG_TRACE3, 0, r,",
          "237:                               \"request authorized without authentication by \"",
          "238:                               \"access_checker_ex hook: %s\", r->uri);",
          "239:             }",
          "240:             else if (access_status != DECLINED) {",
          "241:                 return decl_die(access_status, \"check access\", r);",
          "242:             }",
          "243:             else {",
          "",
          "[Added Lines]",
          "271:             if (access_status == DECLINED",
          "272:                 || (access_status == OK && ap_run_force_authn(r) == OK)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "258:                     return decl_die(access_status, \"check authorization\", r);",
          "259:                 }",
          "260:             }",
          "261:             break;",
          "262:         case SATISFY_ANY:",
          "263:             if ((access_status = ap_run_access_checker(r)) == OK) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "290:             else if (access_status == OK) {",
          "291:                 ap_log_rerror(APLOG_MARK, APLOG_TRACE3, 0, r,",
          "292:                               \"request authorized without authentication by \"",
          "293:                               \"access_checker_ex hook: %s\", r->uri);",
          "294:             }",
          "295:             else {",
          "296:                 return decl_die(access_status, \"check access\", r);",
          "297:             }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "269:             }",
          "271:             access_status = ap_run_access_checker_ex(r);",
          "281:                 if ((access_status = ap_run_check_user_id(r)) != OK) {",
          "282:                     return decl_die(access_status, \"check user\", r);",
          "283:                 }",
          "",
          "[Removed Lines]",
          "272:             if (access_status == OK) {",
          "273:                 ap_log_rerror(APLOG_MARK, APLOG_TRACE3, 0, r,",
          "274:                               \"request authorized without authentication by \"",
          "275:                               \"access_checker_ex hook: %s\", r->uri);",
          "276:             }",
          "277:             else if (access_status != DECLINED) {",
          "278:                 return decl_die(access_status, \"check access\", r);",
          "279:             }",
          "280:             else {",
          "",
          "[Added Lines]",
          "309:             if (access_status == DECLINED",
          "310:                 || (access_status == OK && ap_run_force_authn(r) == OK)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "295:                     return decl_die(access_status, \"check authorization\", r);",
          "296:                 }",
          "297:             }",
          "298:             break;",
          "299:         }",
          "300:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "328:             else if (access_status == OK) {",
          "329:                 ap_log_rerror(APLOG_MARK, APLOG_TRACE3, 0, r,",
          "330:                               \"request authorized without authentication by \"",
          "331:                               \"access_checker_ex hook: %s\", r->uri);",
          "332:             }",
          "333:             else {",
          "334:                 return decl_die(access_status, \"check access\", r);",
          "335:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}