{
  "cve_id": "CVE-2020-15190",
  "cve_desc": "In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the `tf.raw_ops.Switch` operation takes as input a tensor and a boolean and outputs two tensors. Depending on the boolean value, one of the tensors is exactly the input tensor whereas the other one should be an empty tensor. However, the eager runtime traverses all tensors in the output. Since only one of the tensors is defined, the other one is `nullptr`, hence we are binding a reference to `nullptr`. This is undefined behavior and reported as an error if compiling with `-fsanitize=null`. In this case, this results in a segmentation fault The issue is patched in commit da8558533d925694483d2c136a9220d6d49d843c, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "da8558533d925694483d2c136a9220d6d49d843c",
  "patch_info": {
    "commit_hash": "da8558533d925694483d2c136a9220d6d49d843c",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/da8558533d925694483d2c136a9220d6d49d843c",
    "files": [
      "tensorflow/core/common_runtime/eager/kernel_and_device.cc",
      "tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
    ],
    "message": "Fix undefined behavior in `tf.raw_ops.Switch` in eager mode.\n\nPiperOrigin-RevId: 332578058\nChange-Id: I9727571d2f21476b10d8aa27c1b7176564b76ac9",
    "before_after_code_files": [
      "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
      "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc": [
      "File: tensorflow/core/common_runtime/eager/kernel_and_device.cc -> tensorflow/core/common_runtime/eager/kernel_and_device.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "308:   if (outputs != nullptr) {",
      "309:     outputs->clear();",
      "310:     for (int i = 0; i < context.num_outputs(); ++i) {",
      "312:     }",
      "313:   }",
      "314:   return Status::OK();",
      "",
      "[Removed Lines]",
      "311:       outputs->push_back(Tensor(*context.mutable_output(i)));",
      "",
      "[Added Lines]",
      "311:       const auto* output_tensor = context.mutable_output(i);",
      "312:       if (output_tensor != nullptr) {",
      "313:         outputs->push_back(Tensor(*output_tensor));",
      "314:       } else {",
      "315:         outputs->push_back(Tensor());",
      "316:       }",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py": [
      "File: tensorflow/python/kernel_tests/control_flow_ops_py_test.py -> tensorflow/python/kernel_tests/control_flow_ops_py_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "4579:       result = control_flow_ops.merge([v_f, v_t])",
      "4580:       self.evaluate(result)",
      "4582:   @test_util.run_deprecated_v1",
      "4583:   def testQIntArgAndRet(self):",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4582:   def testSwitchEagerMode(self):",
      "4583:     if not context.executing_eagerly():",
      "4584:       return",
      "4585:     input_data = [1, 2, 3, 4]",
      "4586:     vf, vt = control_flow_ops.switch(input_data, False)",
      "4587:     self.assertAllEqual(vf, input_data)",
      "4588:     self.assertAllEqual(vt, [])",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "42afb8a459897e59e9f050c730923216be781e7c",
      "candidate_info": {
        "commit_hash": "42afb8a459897e59e9f050c730923216be781e7c",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/42afb8a459897e59e9f050c730923216be781e7c",
        "files": [
          "tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
        ],
        "message": "Fix undefined behavior in `tf.raw_ops.Switch` in eager mode.\n\nPiperOrigin-RevId: 332584498\nChange-Id: I5637f3a978e97315928aac2fffd1956bd356773b",
        "before_after_code_files": [
          "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
            "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
          ],
          "candidate": [
            "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
            "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc": [
          "File: tensorflow/core/common_runtime/eager/kernel_and_device.cc -> tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:   if (outputs != nullptr) {",
          "309:     outputs->clear();",
          "310:     for (int i = 0; i < context.num_outputs(); ++i) {",
          "317:     }",
          "318:   }",
          "319:   return Status::OK();",
          "",
          "[Removed Lines]",
          "311:       const auto* output_tensor = context.mutable_output(i);",
          "312:       if (output_tensor != nullptr) {",
          "313:         outputs->push_back(Tensor(*output_tensor));",
          "314:       } else {",
          "315:         outputs->push_back(Tensor());",
          "316:       }",
          "",
          "[Added Lines]",
          "311:       outputs->push_back(Tensor(*context.mutable_output(i)));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py": [
          "File: tensorflow/python/kernel_tests/control_flow_ops_py_test.py -> tensorflow/python/kernel_tests/control_flow_ops_py_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4579:       result = control_flow_ops.merge([v_f, v_t])",
          "4580:       self.evaluate(result)",
          "4590:   @test_util.run_deprecated_v1",
          "4591:   def testQIntArgAndRet(self):",
          "",
          "[Removed Lines]",
          "4582:   def testSwitchEagerMode(self):",
          "4583:     if not context.executing_eagerly():",
          "4584:       return",
          "4585:     input_data = [1, 2, 3, 4]",
          "4586:     vf, vt = control_flow_ops.switch(input_data, False)",
          "4587:     self.assertAllEqual(vf, input_data)",
          "4588:     self.assertAllEqual(vt, [])",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7a2e7af955eb0e5b4f4c6c6524a7812c66785c2b",
      "candidate_info": {
        "commit_hash": "7a2e7af955eb0e5b4f4c6c6524a7812c66785c2b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/7a2e7af955eb0e5b4f4c6c6524a7812c66785c2b",
        "files": [
          "tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
        ],
        "message": "Fix undefined behavior in `tf.raw_ops.Switch` in eager mode.\n\nPiperOrigin-RevId: 332874903\nChange-Id: I8860fe840418571e22e7e32d122737b5ed4f01ae",
        "before_after_code_files": [
          "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
            "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
          ],
          "candidate": [
            "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
            "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc": [
          "File: tensorflow/core/common_runtime/eager/kernel_and_device.cc -> tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:   if (outputs != nullptr) {",
          "309:     outputs->clear();",
          "310:     for (int i = 0; i < context.num_outputs(); ++i) {",
          "312:     }",
          "313:   }",
          "314:   return Status::OK();",
          "",
          "[Removed Lines]",
          "311:       outputs->push_back(Tensor(*context.mutable_output(i)));",
          "",
          "[Added Lines]",
          "311:       const auto* output_tensor = context.mutable_output(i);",
          "312:       if (output_tensor != nullptr) {",
          "313:         outputs->push_back(Tensor(*output_tensor));",
          "314:       } else {",
          "315:         outputs->push_back(Tensor());",
          "316:       }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py": [
          "File: tensorflow/python/kernel_tests/control_flow_ops_py_test.py -> tensorflow/python/kernel_tests/control_flow_ops_py_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4579:       result = control_flow_ops.merge([v_f, v_t])",
          "4580:       self.evaluate(result)",
          "4582:   @test_util.run_deprecated_v1",
          "4583:   def testQIntArgAndRet(self):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4582:   def testSwitchEagerMode(self):",
          "4583:     if not context.executing_eagerly():",
          "4584:       return",
          "4585:     input_data = [1, 2, 3, 4]",
          "4586:     vf, vt = control_flow_ops.switch(input_data, False)",
          "4587:     self.assertAllEqual(vf, input_data)",
          "4588:     self.assertAllEqual(vt, [])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ec14e1b42947fc29abd8f677f8bdfde15c754ac2",
      "candidate_info": {
        "commit_hash": "ec14e1b42947fc29abd8f677f8bdfde15c754ac2",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ec14e1b42947fc29abd8f677f8bdfde15c754ac2",
        "files": [
          "tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
        ],
        "message": "Fix undefined behavior in `tf.raw_ops.Switch` in eager mode.\n\nPiperOrigin-RevId: 332578058\nChange-Id: I9727571d2f21476b10d8aa27c1b7176564b76ac9",
        "before_after_code_files": [
          "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
            "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
          ],
          "candidate": [
            "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
            "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc": [
          "File: tensorflow/core/common_runtime/eager/kernel_and_device.cc -> tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "336:   if (outputs != nullptr) {",
          "337:     outputs->clear();",
          "338:     for (int i = 0; i < context.num_outputs(); ++i) {",
          "340:     }",
          "341:   }",
          "342:   if (stats != nullptr) {",
          "",
          "[Removed Lines]",
          "339:       outputs->push_back(Tensor(*context.mutable_output(i)));",
          "",
          "[Added Lines]",
          "339:       const auto* output_tensor = context.mutable_output(i);",
          "340:       if (output_tensor != nullptr) {",
          "341:         outputs->push_back(Tensor(*output_tensor));",
          "342:       } else {",
          "343:         outputs->push_back(Tensor());",
          "344:       }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py": [
          "File: tensorflow/python/kernel_tests/control_flow_ops_py_test.py -> tensorflow/python/kernel_tests/control_flow_ops_py_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4505:       result = control_flow_ops.merge([v_f, v_t])",
          "4506:       self.evaluate(result)",
          "4508:   @test_util.run_deprecated_v1",
          "4509:   def testQIntArgAndRet(self):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4508:   def testSwitchEagerMode(self):",
          "4509:     if not context.executing_eagerly():",
          "4510:       return",
          "4511:     input_data = [1, 2, 3, 4]",
          "4512:     vf, vt = control_flow_ops.switch(input_data, False)",
          "4513:     self.assertAllEqual(vf, input_data)",
          "4514:     self.assertAllEqual(vt, [])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7a8ccaca69ddd0863abee77bd5542d06623bcba4",
      "candidate_info": {
        "commit_hash": "7a8ccaca69ddd0863abee77bd5542d06623bcba4",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/7a8ccaca69ddd0863abee77bd5542d06623bcba4",
        "files": [
          "tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
        ],
        "message": "Fix undefined behavior in `tf.raw_ops.Switch` in eager mode.\n\nPiperOrigin-RevId: 332578058\nChange-Id: I9727571d2f21476b10d8aa27c1b7176564b76ac9",
        "before_after_code_files": [
          "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
            "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
          ],
          "candidate": [
            "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
            "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc": [
          "File: tensorflow/core/common_runtime/eager/kernel_and_device.cc -> tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "323:   if (outputs != nullptr) {",
          "324:     outputs->clear();",
          "325:     for (int i = 0; i < context.num_outputs(); ++i) {",
          "327:     }",
          "328:   }",
          "329:   return Status::OK();",
          "",
          "[Removed Lines]",
          "326:       outputs->push_back(Tensor(*context.mutable_output(i)));",
          "",
          "[Added Lines]",
          "326:       const auto* output_tensor = context.mutable_output(i);",
          "327:       if (output_tensor != nullptr) {",
          "328:         outputs->push_back(Tensor(*output_tensor));",
          "329:       } else {",
          "330:         outputs->push_back(Tensor());",
          "331:       }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py": [
          "File: tensorflow/python/kernel_tests/control_flow_ops_py_test.py -> tensorflow/python/kernel_tests/control_flow_ops_py_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4542:       result = control_flow_ops.merge([v_f, v_t])",
          "4543:       self.evaluate(result)",
          "4545:   @test_util.run_deprecated_v1",
          "4546:   def testQIntArgAndRet(self):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4545:   def testSwitchEagerMode(self):",
          "4546:     if not context.executing_eagerly():",
          "4547:       return",
          "4548:     input_data = [1, 2, 3, 4]",
          "4549:     vf, vt = control_flow_ops.switch(input_data, False)",
          "4550:     self.assertAllEqual(vf, input_data)",
          "4551:     self.assertAllEqual(vt, [])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92d5b97a0ad3190b2e69c870e6d6d910b0d0bcb7",
      "candidate_info": {
        "commit_hash": "92d5b97a0ad3190b2e69c870e6d6d910b0d0bcb7",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/92d5b97a0ad3190b2e69c870e6d6d910b0d0bcb7",
        "files": [
          "tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
        ],
        "message": "Fix undefined behavior in `tf.raw_ops.Switch` in eager mode.\n\nPiperOrigin-RevId: 332578058\nChange-Id: I9727571d2f21476b10d8aa27c1b7176564b76ac9",
        "before_after_code_files": [
          "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
            "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
          ],
          "candidate": [
            "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc",
            "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/common_runtime/eager/kernel_and_device.cc||tensorflow/core/common_runtime/eager/kernel_and_device.cc": [
          "File: tensorflow/core/common_runtime/eager/kernel_and_device.cc -> tensorflow/core/common_runtime/eager/kernel_and_device.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "307:   if (outputs != nullptr) {",
          "308:     outputs->clear();",
          "309:     for (int i = 0; i < context.num_outputs(); ++i) {",
          "311:     }",
          "312:   }",
          "313:   return Status::OK();",
          "",
          "[Removed Lines]",
          "310:       outputs->push_back(Tensor(*context.mutable_output(i)));",
          "",
          "[Added Lines]",
          "310:       const auto* output_tensor = context.mutable_output(i);",
          "311:       if (output_tensor != nullptr) {",
          "312:         outputs->push_back(Tensor(*output_tensor));",
          "313:       } else {",
          "314:         outputs->push_back(Tensor());",
          "315:       }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/control_flow_ops_py_test.py||tensorflow/python/kernel_tests/control_flow_ops_py_test.py": [
          "File: tensorflow/python/kernel_tests/control_flow_ops_py_test.py -> tensorflow/python/kernel_tests/control_flow_ops_py_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4581:       result = control_flow_ops.merge([v_f, v_t])",
          "4582:       self.evaluate(result)",
          "4584:   @test_util.run_deprecated_v1",
          "4585:   def testQIntArgAndRet(self):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4584:   def testSwitchEagerMode(self):",
          "4585:     if not context.executing_eagerly():",
          "4586:       return",
          "4587:     input_data = [1, 2, 3, 4]",
          "4588:     vf, vt = control_flow_ops.switch(input_data, False)",
          "4589:     self.assertAllEqual(vf, input_data)",
          "4590:     self.assertAllEqual(vt, [])",
          "",
          "---------------"
        ]
      }
    }
  ]
}