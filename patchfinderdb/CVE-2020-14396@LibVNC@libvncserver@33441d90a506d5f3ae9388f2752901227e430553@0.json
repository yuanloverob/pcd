{
  "cve_id": "CVE-2020-14396",
  "cve_desc": "An issue was discovered in LibVNCServer before 0.9.13. libvncclient/tls_openssl.c has a NULL pointer dereference.",
  "repo": "LibVNC/libvncserver",
  "patch_hash": "33441d90a506d5f3ae9388f2752901227e430553",
  "patch_info": {
    "commit_hash": "33441d90a506d5f3ae9388f2752901227e430553",
    "repo": "LibVNC/libvncserver",
    "commit_url": "https://github.com/LibVNC/libvncserver/commit/33441d90a506d5f3ae9388f2752901227e430553",
    "files": [
      "libvncclient/tls_openssl.c"
    ],
    "message": "libvncclient/tls_openssl: do not deref a NULL pointer\n\nHappens in anonTLS mode where cred is NULL.\n\nre #347",
    "before_after_code_files": [
      "libvncclient/tls_openssl.c||libvncclient/tls_openssl.c"
    ]
  },
  "patch_diff": {
    "libvncclient/tls_openssl.c||libvncclient/tls_openssl.c": [
      "File: libvncclient/tls_openssl.c -> libvncclient/tls_openssl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "268:   SSL *ssl = NULL;",
      "269:   int n, finished = 0;",
      "270:   X509_VERIFY_PARAM *param;",
      "273:   if (!(ssl_ctx = SSL_CTX_new(SSLv23_client_method())))",
      "274:   {",
      "",
      "[Removed Lines]",
      "271:   uint8_t verify_crls = cred->x509Credential.x509CrlVerifyMode;",
      "",
      "[Added Lines]",
      "271:   uint8_t verify_crls;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "282:   if (!anonTLS)",
      "283:   {",
      "284:     if (cred->x509Credential.x509CACertFile)",
      "285:     {",
      "286:       if (!SSL_CTX_load_verify_locations(ssl_ctx, cred->x509Credential.x509CACertFile, NULL))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "284:     verify_crls = cred->x509Credential.x509CrlVerifyMode;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9d375c1f7a7cf5f908894e7a6d99eb90412b9c9d",
      "candidate_info": {
        "commit_hash": "9d375c1f7a7cf5f908894e7a6d99eb90412b9c9d",
        "repo": "LibVNC/libvncserver",
        "commit_url": "https://github.com/LibVNC/libvncserver/commit/9d375c1f7a7cf5f908894e7a6d99eb90412b9c9d",
        "files": [
          "libvncclient/tls_openssl.c"
        ],
        "message": "libvncclient/tls_openssl: fix anonTLS connection setup\n\n...for OpenSSL 1.0.2, LibreSSL and OpenSSL 1.1.x\n\nThanks go to Gaurav Ujjwal who did the groundwork finding out\nthe root cause ADH cipher.\n\nCloses #347",
        "before_after_code_files": [
          "libvncclient/tls_openssl.c||libvncclient/tls_openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "libvncclient/tls_openssl.c||libvncclient/tls_openssl.c"
          ],
          "candidate": [
            "libvncclient/tls_openssl.c||libvncclient/tls_openssl.c"
          ]
        }
      },
      "candidate_diff": {
        "libvncclient/tls_openssl.c||libvncclient/tls_openssl.c": [
          "File: libvncclient/tls_openssl.c -> libvncclient/tls_openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "339:       goto error_free_ctx;",
          "340:     }",
          "341:     SSL_CTX_set1_param(ssl_ctx, param);",
          "344: #if OPENSSL_VERSION_NUMBER >= 0x10100000L && !defined LIBRESSL_VERSION_NUMBER",
          "350: #endif",
          "352:   if (!(ssl = SSL_new (ssl_ctx)))",
          "353:   {",
          "",
          "[Removed Lines]",
          "342:   }",
          "346:     See https://www.openssl.org/docs/man1.1.0/man3/SSL_set_security_level.html",
          "347:     Not specifying 0 here makes LibVNCClient fail connecting to some servers.",
          "349:   SSL_CTX_set_security_level(ssl_ctx, 0);",
          "",
          "[Added Lines]",
          "342:     SSL_CTX_set_cipher_list(ssl_ctx, \"ALL\");",
          "345:       SSL_CTX_set_cipher_list(ssl_ctx, \"ADH\");",
          "348:  See https://www.openssl.org/docs/man1.1.0/man3/SSL_set_security_level.html",
          "349:  Not specifying 0 here makes LibVNCClient fail connecting to some servers.",
          "351:       SSL_CTX_set_security_level(ssl_ctx, 0);",
          "353:  Specifying a maximum protocol version of 1.2 gets us ADH cipher on OpenSSL 1.1.x,",
          "354:  see https://github.com/LibVNC/libvncserver/issues/347#issuecomment-597974313",
          "356:       SSL_CTX_set_max_proto_version(ssl_ctx, TLS1_2_VERSION);",
          "358:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "355:     goto error_free_ctx;",
          "356:   }",
          "361:   SSL_set_fd (ssl, sockfd);",
          "362:   SSL_CTX_set_app_data (ssl_ctx, client);",
          "",
          "[Removed Lines]",
          "359:   SSL_set_cipher_list(ssl, \"ALL\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d3fd2601a05a328c6c5a07a7169a734fd91edc86",
      "candidate_info": {
        "commit_hash": "d3fd2601a05a328c6c5a07a7169a734fd91edc86",
        "repo": "LibVNC/libvncserver",
        "commit_url": "https://github.com/LibVNC/libvncserver/commit/d3fd2601a05a328c6c5a07a7169a734fd91edc86",
        "files": [
          "libvncclient/tls_openssl.c"
        ],
        "message": "libvncclient/tls_openssl: fix connection setup with OpenSSL 1.1.x\n\nConnecting to some servers, e.g. vino 3.22, fails with OpenSSL\n1.1.x when this compatibility setting is not applied, probably\nbecause something deemed insecure in the default level 1 is\ngetting used.\n\nSee https://www.openssl.org/docs/man1.1.0/man3/SSL_set_security_level.html\n\nre #347",
        "before_after_code_files": [
          "libvncclient/tls_openssl.c||libvncclient/tls_openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "libvncclient/tls_openssl.c||libvncclient/tls_openssl.c"
          ],
          "candidate": [
            "libvncclient/tls_openssl.c||libvncclient/tls_openssl.c"
          ]
        }
      },
      "candidate_diff": {
        "libvncclient/tls_openssl.c||libvncclient/tls_openssl.c": [
          "File: libvncclient/tls_openssl.c -> libvncclient/tls_openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "341:     SSL_CTX_set1_param(ssl_ctx, param);",
          "342:   }",
          "344:   if (!(ssl = SSL_new (ssl_ctx)))",
          "345:   {",
          "346:     rfbClientLog(\"Could not create a new SSL session.\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "344: #if OPENSSL_VERSION_NUMBER >= 0x10100000L",
          "346:     See https://www.openssl.org/docs/man1.1.0/man3/SSL_set_security_level.html",
          "347:     Not specifying 0 here makes LibVNCClient fail connecting to some servers.",
          "349:   SSL_CTX_set_security_level(ssl_ctx, 0);",
          "350: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}