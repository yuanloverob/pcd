{
  "cve_id": "CVE-2019-19646",
  "cve_desc": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
  "repo": "sqlite/sqlite",
  "patch_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
  "patch_info": {
    "commit_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/pragma.c",
      "test/gencol1.test"
    ],
    "message": "Fix the NOT NULL verification logic in PRAGMA integrity_check so that it works for generated columns whose value is the result of a comparison operator. Ticket [bd8c280671ba44a7]\n\nFossilOrigin-Name: f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/pragma.c||src/pragma.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/pragma.c||src/pragma.c": [
      "File: src/pragma.c -> src/pragma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1596:           if( j==pTab->iPKey ) continue;",
      "1597:           if( pTab->aCol[j].notNull==0 ) continue;",
      "1598:           sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);",
      "1600:           jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);",
      "1601:           zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,",
      "1602:                               pTab->aCol[j].zName);",
      "",
      "[Removed Lines]",
      "1599:           sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "",
      "[Added Lines]",
      "1599:           if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){",
      "1600:             sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "1601:           }",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
      "329: } {1 {FOREIGN KEY constraint failed}}",
      "331: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331: # 2019-12-09 ticket bd8c280671ba44a7",
      "332: # With generated columns, the sqlite3ExprGetColumnOfTable() routine might",
      "333: # generate a code sequence that does not end with OP_Column.  So check to",
      "334: # make sure that the last instruction generated is an OP_column prior to",
      "335: # applying the OPFLAG_TYPEOFARG optimization to NOT NULL checks in the",
      "336: # PRAGMA integrity_check code.",
      "337: #",
      "338: sqlite3 db :memory:",
      "339: do_execsql_test gencol1-12.10 {",
      "340:   CREATE TABLE t0 (c0, c1 NOT NULL AS (c0==0));",
      "341:   INSERT INTO t0(c0) VALUES (0);",
      "342:   PRAGMA integrity_check;",
      "343: } {ok}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bde3a4f680b7c99ae918aa0477e81541ebdafbe5",
      "candidate_info": {
        "commit_hash": "bde3a4f680b7c99ae918aa0477e81541ebdafbe5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bde3a4f680b7c99ae918aa0477e81541ebdafbe5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wherecode.c"
        ],
        "message": "Minor simplification to the changes from check-in [36c11ad51f].\n\nFossilOrigin-Name: 7bc8205dd9c1657c736a9c6a1a90dd9dad442accfbb77d296eaae2c09ab46bd1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wherecode.c||src/wherecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 36c11ad51fe9ab1bde0b98d0ea9b8588e07d168cd8027486749372894941ad93",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1059:         x1 = pIdx->aiColumn[i];",
          "1060:         x2 = sqlite3TableColumnToStorage(pTab, x1);",
          "1061:         testcase( x1!=x2 );",
          "1063:       }",
          "1064:       sqlite3VdbeChangeP4(v, -1, (char*)ai, P4_INTARRAY);",
          "1065:     }",
          "",
          "[Removed Lines]",
          "1062:         if( pIdx->aiColumn[i]>=0 ) ai[x2+1] = i+1;",
          "",
          "[Added Lines]",
          "1062:         if( x1>=0 ) ai[x2+1] = i+1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8f4076223d248f0cbe6bfc5769f7574f1b0033e5",
      "candidate_info": {
        "commit_hash": "8f4076223d248f0cbe6bfc5769f7574f1b0033e5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8f4076223d248f0cbe6bfc5769f7574f1b0033e5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "test/altertab3.test"
        ],
        "message": "Fix an assert() failure that could occur in ALTER TABLE code when the schema contains a view that uses a CTE.\n\nFossilOrigin-Name: 75b04a4b0d2e65bfcd02cf4e0b6d8f1954957c590814a9b8f9a9ee2adc2ec022",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e01fdbf9f700e1bd9dd5283c65547d10d26ce4f4506d3cfef9e1087aecdc2305",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "733:   return WRC_Continue;",
          "734: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "740: static void renameWalkWith(Walker *pWalker, Select *pSelect){",
          "741:   if( pSelect->pWith ){",
          "742:     int i;",
          "743:     for(i=0; i<pSelect->pWith->nCte; i++){",
          "744:       Select *p = pSelect->pWith->a[i].pSelect;",
          "745:       NameContext sNC;",
          "746:       memset(&sNC, 0, sizeof(sNC));",
          "747:       sNC.pParse = pWalker->pParse;",
          "748:       sqlite3SelectPrep(sNC.pParse, p, &sNC);",
          "749:       sqlite3WalkSelect(pWalker, p);",
          "750:     }",
          "751:   }",
          "752: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "753:       sqlite3RenameTokenRemap(pParse, 0, (void*)pSrc->a[i].zName);",
          "754:     }",
          "755:   }",
          "756:   return WRC_Continue;",
          "757: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "775:   renameWalkWith(pWalker, p);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "819:   }",
          "820: }",
          "",
          "[Removed Lines]",
          "826: static void renameWalkWith(Walker *pWalker, Select *pSelect){",
          "827:   if( pSelect->pWith ){",
          "828:     int i;",
          "829:     for(i=0; i<pSelect->pWith->nCte; i++){",
          "830:       Select *p = pSelect->pWith->a[i].pSelect;",
          "831:       NameContext sNC;",
          "832:       memset(&sNC, 0, sizeof(sNC));",
          "833:       sNC.pParse = pWalker->pParse;",
          "834:       sqlite3SelectPrep(sNC.pParse, p, &sNC);",
          "835:       sqlite3WalkSelect(pWalker, p);",
          "836:     }",
          "837:   }",
          "838: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "411:   ALTER TABLE t1 RENAME TO t1x;",
          "412: } {1 {error in trigger r1: 1st ORDER BY term does not match any column in the result set}}",
          "415: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "414: #-------------------------------------------------------------------------",
          "415: reset_db",
          "416: do_execsql_test 19.0 {",
          "417:   CREATE TABLE a(a,h CONSTRAINT a UNIQUE ON CONFLICT FAIL,CONSTRAINT a);",
          "418: }",
          "420: foreach {tn v res} {",
          "421:   1 {",
          "422:     CREATE VIEW q AS SELECT 123",
          "424:       WINDOW x AS (",
          "425:         RANGE BETWEEN UNBOUNDED PRECEDING AND INDEXED() OVER(",
          "426:           PARTITION BY ( WITH x AS(VALUES(col1)) VALUES(453) )",
          "427:         )",
          "428:       FOLLOWING",
          "429:     )",
          "430:   } {1 {error in view q: no such column: col1}}",
          "432:   2 {",
          "433:     CREATE VIEW q AS SELECT",
          "434:     CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(CAST(RIGHT",
          "435:     AS)AS)AS)AS)AS)AS)AS)AS)AS)AS)AS)WINDOW x AS(RANGE BETWEEN UNBOUNDED",
          "436:     PRECEDING AND INDEXED(*)OVER(PARTITION BY",
          "437:     CROSS,CROSS,NATURAL,sqlite_master(*)OVER a,(WITH a AS(VALUES(LEFT)UNION",
          "438:     VALUES(LEFT)UNION VALUES(LEFT)UNION VALUES(LEFT)UNION VALUES(LEFT)UNION",
          "439:     VALUES(LEFT)UNION VALUES(LEFT))VALUES(LEFT))IN",
          "440:     STORED,LEFT,LEFT,LEFT,LEFT,LEFT,LEFT)*LEFT FOLLOWING)ORDER BY",
          "441:     LEFT,LEFT,LEFT,LEFT,LEFT,LEFT,LEFT,LEFT,LEFT,LEFT,LEFT LIMIT",
          "442:     LEFT,INDEXED(*)OVER(PARTITION BY",
          "443:     CROSS,CROSS,CROSS,LEFT,INDEXED(*)OVER(PARTITION BY",
          "444:     CROSS,CROSS,CROSS),INDEXED(*)OVER(PARTITION BY",
          "445:     LEFT,LEFT,LEFT,LEFT,LEFT,LEFT,LEFT,LEFT,LEFT,LEFT,LEFT),",
          "446:     LEFT,LEFT,INNER,CROSS,CROSS,CROSS,INNER,NATURAL ORDER BY",
          "447:     OUTER,NATURAL,NATURAL,NATURAL,NATURAL,NATURAL,NATURAL,NATURAL,INNER,",
          "448:     INNER,INNER NULLS LAST GROUPS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED",
          "449:     FOLLOWING);",
          "450:   } {1 {error in view q: no such column: LEFT}}",
          "452:   3 {",
          "453:     CREATE VIEW q AS SELECT 99 WINDOW x AS (RANGE BETWEEN UNBOUNDED PRECEDING",
          "454:     AND count(*)OVER(PARTITION BY (WITH a AS(VALUES(2),(x3))VALUES(0)))",
          "455:     FOLLOWING)ORDER BY x2,sum(1)OVER(PARTITION BY avg(5)OVER(PARTITION BY x1));",
          "456:   } {1 {error in view q: no such column: x3}}",
          "457: } {",
          "458:   do_execsql_test 19.$tn.1 \"",
          "459:     DROP VIEW IF EXISTS q;",
          "460:     $v",
          "461:   \" {}",
          "463:   do_catchsql_test 19.$tn.2 {",
          "464:     ALTER TABLE a RENAME TO g;",
          "465:   } $res",
          "466: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2de66c6b4f7a89f55cfd4098d27f8b031e29229",
      "candidate_info": {
        "commit_hash": "a2de66c6b4f7a89f55cfd4098d27f8b031e29229",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a2de66c6b4f7a89f55cfd4098d27f8b031e29229",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Enhance the \".recover\" output in the shell to use double-quotes around table and column identifiers.\n\nFossilOrigin-Name: 846d2d2d2f7fd2e4178c70bc2b92f18941a7972fe88c0129035b7a253ed21785",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bfc29e62eff0ed00c153e18a27815f7e3ba316f46871e9645b84ab1e6709a392",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3977:   }",
          "3978: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3984: static void shellIdQuote(",
          "3985:   sqlite3_context *context,",
          "3986:   int argc,",
          "3987:   sqlite3_value **argv",
          "3988: ){",
          "3989:   const char *zName = (const char*)sqlite3_value_text(argv[0]);",
          "3990:   if( zName ){",
          "3991:     char *z = sqlite3_mprintf(\"\\\"%w\\\"\", zName);",
          "3992:     sqlite3_result_text(context, z, -1, sqlite3_free);",
          "3993:   }",
          "3994: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4153:                             shellEscapeCrnl, 0, 0);",
          "4154:     sqlite3_create_function(p->db, \"shell_int32\", 2, SQLITE_UTF8, 0,",
          "4155:                             shellInt32, 0, 0);",
          "4156: #ifndef SQLITE_NOHAVE_SYSTEM",
          "4157:     sqlite3_create_function(p->db, \"edit\", 1, SQLITE_UTF8, 0,",
          "4158:                             editFunc, 0, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4172:     sqlite3_create_function(p->db, \"shell_idquote\", 1, SQLITE_UTF8, 0,",
          "4173:                             shellIdQuote, 0, 0);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6330:     sqlite3_stmt *pStmt = 0;",
          "6332:     rc = sqlite3_open(\"\", &dbtmp);",
          "6333:     if( rc==SQLITE_OK ){",
          "6334:       rc = sqlite3_exec(dbtmp, \"PRAGMA writable_schema = on\", 0, 0, 0);",
          "6335:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6351:     if( rc==SQLITE_OK ){",
          "6352:       sqlite3_create_function(dbtmp, \"shell_idquote\", 1, SQLITE_UTF8, 0,",
          "6353:                               shellIdQuote, 0, 0);",
          "6354:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6386:         }",
          "6387:       }",
          "6390:       pTab->azlCol = (char**)shellMalloc(&rc, sizeof(char*) * (nSqlCol+1));",
          "6391:       pTab->nCol = nSqlCol;",
          "6393:       if( bIntkey ){",
          "6395:       }else{",
          "6396:         pTab->azlCol[0] = shellMPrintf(&rc, \"\");",
          "6397:       }",
          "6398:       i = 1;",
          "6399:       shellPreparePrintf(dbtmp, &rc, &pStmt,",
          "6401:           \"  FILTER (WHERE cid!=%d) OVER (ORDER BY %s cid) \"",
          "6402:           \"FROM pragma_table_info(%Q)\",",
          "6403:           bIntkey ? \", \" : \"\", pTab->iPk,",
          "",
          "[Removed Lines]",
          "6389:       pTab->zQuoted = shellMPrintf(&rc, \"%Q\", zName);",
          "6394:         pTab->azlCol[0] = shellMPrintf(&rc, \"%Q\", zPk);",
          "6400:           \"SELECT %Q || group_concat(quote(name), ', ') \"",
          "",
          "[Added Lines]",
          "6411:       pTab->zQuoted = shellMPrintf(&rc, \"\\\"%w\\\"\", zName);",
          "6416:         pTab->azlCol[0] = shellMPrintf(&rc, \"\\\"%w\\\"\", zPk);",
          "6422:           \"SELECT %Q || group_concat(shell_idquote(name), ', ') \"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6512:     pTab = (RecoverTable*)shellMalloc(pRc, sizeof(RecoverTable));",
          "6513:     if( pTab ){",
          "6515:       pTab->nCol = nCol;",
          "6516:       pTab->iPk = -2;",
          "6517:       if( nCol>0 ){",
          "",
          "[Removed Lines]",
          "6514:       pTab->zQuoted = shellMPrintf(pRc, \"%Q\", zTab);",
          "",
          "[Added Lines]",
          "6536:       pTab->zQuoted = shellMPrintf(pRc, \"\\\"%w\\\"\", zTab);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6775:       if( pTab==0 ) break;",
          "6776:     }",
          "6779:       raw_printf(pState->out, \"DELETE FROM sqlite_sequence;\\n\");",
          "6780:     }",
          "6781:     sqlite3_bind_int(pPages, 1, iRoot);",
          "",
          "[Removed Lines]",
          "6778:     if( 0==sqlite3_stricmp(pTab->zQuoted, \"'sqlite_sequence'\") ){",
          "",
          "[Added Lines]",
          "6800:     if( 0==sqlite3_stricmp(pTab->zQuoted, \"\\\"sqlite_sequence\\\"\") ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7dc76d8ba03f4ad649d4022d78e94e6cb8ed0355",
      "candidate_info": {
        "commit_hash": "7dc76d8ba03f4ad649d4022d78e94e6cb8ed0355",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7dc76d8ba03f4ad649d4022d78e94e6cb8ed0355",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c"
        ],
        "message": "Fix an out-of-bounds array reference in the generated column logic. Problem discovered by valgrind.\n\nFossilOrigin-Name: a0ab42f779b9a96f4e43879210dfaba8fa593de77fc0ec0e2e6f116d9301ea59",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6601da58032d18ae00b466c0f2077fb2b1ecd84225b56e1787724bea478eedc9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "202: }",
          "207: static int exprColumnFlagUnion(Walker *pWalker, Expr *pExpr){",
          "209:     pWalker->eCode |= pWalker->u.pTab->aCol[pExpr->iColumn].colFlags;",
          "210:   }",
          "211:   return WRC_Continue;",
          "",
          "[Removed Lines]",
          "208:   if( pExpr->op==TK_COLUMN ){",
          "",
          "[Added Lines]",
          "208:   if( pExpr->op==TK_COLUMN && pExpr->iColumn>=0 ){",
          "209:     assert( pExpr->iColumn < pWalker->u.pTab->nCol );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "666636b6de98b5fd9b745ff8e03fa59537e561e8",
      "candidate_info": {
        "commit_hash": "666636b6de98b5fd9b745ff8e03fa59537e561e8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/666636b6de98b5fd9b745ff8e03fa59537e561e8",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a buffer overwrite in fts5 triggered by a corrupt database.\n\nFossilOrigin-Name: a385298df264dbfa6765f63ad8708f74bc8e8a1404239c1049890b39a1bda888",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3903:   Fts5PageWriter *pPage = &pWriter->writer;",
          "3904:   Fts5Buffer *pPgidx = &pWriter->writer.pgidx;",
          "3906:   assert( p->rc==SQLITE_OK );",
          "3907:   assert( pPage->buf.n>=4 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3905:   int nMin = MIN(pPage->term.n, nTerm);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3944:       int n = nTerm;",
          "3945:       if( pPage->term.n ){",
          "3947:       }",
          "3948:       fts5WriteBtreeTerm(p, pWriter, n, pTerm);",
          "3949:       pPage = &pWriter->writer;",
          "3950:     }",
          "3951:   }else{",
          "3953:     fts5BufferAppendVarint(&p->rc, &pPage->buf, nPrefix);",
          "3954:   }",
          "",
          "[Removed Lines]",
          "3946:         n = 1 + fts5PrefixCompress(pPage->term.n, pPage->term.p, pTerm);",
          "3952:     nPrefix = fts5PrefixCompress(pPage->term.n, pPage->term.p, pTerm);",
          "",
          "[Added Lines]",
          "3947:         n = 1 + fts5PrefixCompress(nMin, pPage->term.p, pTerm);",
          "3953:     nPrefix = fts5PrefixCompress(nMin, pPage->term.p, pTerm);",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1436:   INSERT INTO t1(t1) VALUES('optimize');",
          "1437: } {1 {database disk image is malformed}}",
          "1439: sqlite3_fts5_may_be_corrupt 0",
          "1440: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1439: #--------------------------------------------------------------------------",
          "1440: reset_db",
          "1441: do_test 19.0 {",
          "1442:   sqlite3 db {}",
          "1443:   db deserialize [decode_hexdb {",
          "1444: | size 28672 pagesize 4096 filename c20b.db",
          "1445: | page 1 offset 0",
          "1446: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "1447: |     16: 10 00 01 01 00 40 20 20 00 00 00 01 00 00 00 07   .....@  ........",
          "1448: |     32: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "1449: |     48: 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00   ................",
          "1450: |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01   ................",
          "1451: |     96: 00 2e 30 38 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ..08...........m",
          "1452: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "1453: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "1454: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "1455: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "1456: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "1457: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "1458: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "1459: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "1460: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "1461: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "1462: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "1463: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "1464: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "1465: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "1466: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "1467: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "1468: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "1469: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "1470: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "1471: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "1472: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "1473: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "1474: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "1475: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "1476: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "1477: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "1478: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "1479: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "1480: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "1481: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "1482: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "1483: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "1484: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "1485: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "1486: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "1487: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "1488: | page 2 offset 4096",
          "1489: |      0: 0d 0f 20 00 05 0e a0 00 0f e8 0e a0 0f bd 0f 34   .. ............4",
          "1490: |     16: 0e b7 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "1491: |   3744: 15 0a 03 00 30 00 00 00 00 01 03 03 00 03 01 01   ....0...........",
          "1492: |   3760: 01 02 01 01 03 01 01 62 8c 80 80 80 80 01 04 00   .......b........",
          "1493: |   3776: 81 48 00 00 00 55 06 30 61 62 61 63 6b 08 01 04   .H...U.0aback...",
          "1494: |   3792: 04 6e 64 6f 6e 03 01 05 01 02 05 63 74 69 76 65   .ndon......ctive",
          "1495: |   3808: 08 01 02 04 6c 70 68 61 08 01 02 03 74 6f 6d 08   ....lpha....tom.",
          "1496: |   3824: 01 01 06 62 61 63 6b 75 70 08 01 02 05 6f 6f 6d   ...backup....oom",
          "1497: |   3840: 65 72 08 01 01 07 63 68 61 6e 6e 65 6c 08 01 01   er....channel...",
          "1498: |   3856: 04 74 65 73 74 08 01 04 09 0a 09 08 07 0a 09 0b   .test...........",
          "1499: |   3872: 0f ef 00 14 2a 00 00 00 00 01 02 02 00 02 01 01   ....*...........",
          "1500: |   3888: 01 02 01 01 81 01 88 80 80 80 80 01 04 00 82 06   ................",
          "1501: |   3904: 00 00 00 72 06 30 61 62 61 63 6b 08 02 07 04 04   ...r.0aback.....",
          "1502: |   3920: 6e 64 6f 6e 08 02 05 02 05 63 74 69 76 65 04 02   ndon.....ctive..",
          "1503: |   3936: 02 04 02 0b 02 04 6c 70 68 61 08 04 02 0a 02 03   ......lpha......",
          "1504: |   3952: 74 6f 6d 06 02 02 02 02 09 05 02 69 63 07 02 02   tom........ic...",
          "1505: |   3968: 01 06 62 61 63 6b 75 70 08 02 04 02 05 6f 6f 66   ..backup.....oof",
          "1506: |   3984: 65 72 05 02 02 04 03 6d 65 72 08 02 08 01 07 63   er.....mer.....c",
          "1507: |   4000: 68 61 6e 6e 65 6c 08 02 03 01 04 74 65 73 74 08   hannel.....test.",
          "1508: |   4016: 02 06 04 0a 09 0d 0a 0b 07 0b 0a 08 0c 24 84 80   .............$..",
          "1509: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "1510: |   4048: 63 6b 01 02 66 04 00 22 74 00 02 22 04 04 6e 64   ck..f...t.....nd",
          "1511: |   4064: 6f 6e 03 02 02 04 0a 07 05 01 03 00 10 06 06 00   on..............",
          "1512: |   4080: 00 00 11 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "1513: | page 3 offset 8192",
          "1514: |      0: 0a 00 00 00 03 0f ec 00 0f fa 0f f3 0f ec 00 00   ................",
          "1515: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 06 04 01 0c   ................",
          "1516: |   4080: 01 03 02 06 04 01 0c 01 02 02 05 04 09 0c 01 02   ................",
          "1517: | page 4 offset 12288",
          "1518: |      0: 0d 0f e0 00 06 0f b6 00 0f f6 0f ec 0f d5 0f ca   ................",
          "1519: |     16: 0f c1 0f b6 0f 70 0f 70 00 00 00 00 00 00 00 00   .....p.p........",
          "1520: |   3952: 0f e0 00 46 81 0d 61 6c 70 68 61 20 63 68 61 6e   ...F..alpha chan",
          "1521: |   3968: 6e 65 6c 20 62 61 63 6b 75 70 20 61 62 61 6e 64   nel backup aband",
          "1522: |   3984: 6f 6e 20 74 65 73 74 20 61 62 61 63 6b 20 62 6f   on test aback bo",
          "1523: |   4000: 6f 6d 65 72 20 61 74 6f 6d 20 61 6c 70 68 61 20   omer atom alpha",
          "1524: |   4016: 61 63 74 69 76 65 09 07 03 00 19 61 74 6f 6d 69   active.....atomi",
          "1525: |   4032: 63 07 06 03 00 15 61 74 6f 6d 09 05 03 00 19 62   c.....atom.....b",
          "1526: |   4048: 6f 6f 66 65 72 09 04 03 00 19 61 63 74 69 76 65   oofer.....active",
          "1527: |   4064: 00 00 00 0c 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "1528: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "1529: | page 5 offset 16384",
          "1530: |      0: 0d 0f ee 00 06 0f d6 00 0f fa 0f f4 0f e8 0f e2   ................",
          "1531: |     16: 0f dc 0f d6 0f d0 0f d0 00 00 00 00 00 00 00 00   ................",
          "1532: |   4048: 0f ee 00 06 0e 0a 04 07 03 00 0e 01 04 06 03 00   ................",
          "1533: |   4064: 0e 01 04 05 03 00 0e 01 04 04 03 00 0e 01 00 00   ................",
          "1534: |   4080: 00 06 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "1535: | page 6 offset 20480",
          "1536: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "1537: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "1538: | page 7 offset 24576",
          "1539: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "1540: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "1541: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "1542: |   4080: 86 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   .eck....optimize",
          "1543: | end c20b.db",
          "1544: }]} {}",
          "1546: do_catchsql_test 19.1 {",
          "1547:   INSERT INTO t1(t1) VALUES('optimize');",
          "1548: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c564bf870106faef297594a51995619c80311d06bd5f8a0c7644f666f22ba576",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}