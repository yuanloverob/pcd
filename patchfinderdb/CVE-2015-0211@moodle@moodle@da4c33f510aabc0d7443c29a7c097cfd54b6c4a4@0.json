{
  "cve_id": "CVE-2015-0211",
  "cve_desc": "mod/lti/ajax.php in Moodle through 2.5.9, 2.6.x before 2.6.7, 2.7.x before 2.7.4, and 2.8.x before 2.8.2 does not consider the moodle/course:manageactivities and mod/lti:addinstance capabilities before proceeding with registered-tool list searches, which allows remote authenticated users to obtain sensitive information via requests to the LTI Ajax service.",
  "repo": "moodle/moodle",
  "patch_hash": "da4c33f510aabc0d7443c29a7c097cfd54b6c4a4",
  "patch_info": {
    "commit_hash": "da4c33f510aabc0d7443c29a7c097cfd54b6c4a4",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/da4c33f510aabc0d7443c29a7c097cfd54b6c4a4",
    "files": [
      "mod/lti/ajax.php"
    ],
    "message": "MDL-47920 mod_lti: add capability checks, http headers",
    "before_after_code_files": [
      "mod/lti/ajax.php||mod/lti/ajax.php"
    ]
  },
  "patch_diff": {
    "mod/lti/ajax.php||mod/lti/ajax.php": [
      "File: mod/lti/ajax.php -> mod/lti/ajax.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: require_once(dirname(__FILE__) . \"/../../config.php\");",
      "31: require_once($CFG->dirroot . '/mod/lti/locallib.php');",
      "33: $courseid = required_param('course', PARAM_INT);",
      "35: require_login($courseid, false);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29: define('AJAX_SCRIPT', true);",
      "35: $context = context_course::instance($courseid);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "43:         $toolurl = required_param('toolurl', PARAM_RAW);",
      "44:         $toolid = optional_param('toolid', 0, PARAM_INT);",
      "46:         if (empty($toolid) && !empty($toolurl)) {",
      "47:             $tool = lti_get_tool_by_url_match($toolurl, $courseid);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "48:         require_capability('moodle/course:manageactivities', $context);",
      "49:         require_capability('mod/lti:addinstance', $context);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "50:                 $toolid = $tool->id;",
      "52:                 $response->toolid = $tool->id;",
      "55:             }",
      "56:         } else {",
      "57:             $response->toolid = $toolid;",
      "",
      "[Removed Lines]",
      "53:                 $response->toolname = htmlspecialchars($tool->name);",
      "54:                 $response->tooldomain = htmlspecialchars($tool->tooldomain);",
      "",
      "[Added Lines]",
      "58:                 $response->toolname = s($tool->name);",
      "59:                 $response->tooldomain = s($tool->tooldomain);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "68:             ';",
      "70:             $privacyconfigs = $DB->get_records_sql($query, array('typeid' => $toolid));",
      "71:             foreach ($privacyconfigs as $config) {",
      "72:                 $configname = $config->name;",
      "73:                 $response->$configname = $config->value;",
      "74:             }",
      "75:         }",
      "76:         break;",
      "77: }",
      "79: echo json_encode($response);",
      "81: die;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76:             $success = count($privacyconfigs) > 0;",
      "81:             if (!$success) {",
      "82:                 $response->error = s(get_string('tool_config_not_found', 'mod_lti'));",
      "83:             }",
      "88: echo $OUTPUT->header();",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "52555c36989b6704550ed0b3c6e832f5e7e150b7",
      "candidate_info": {
        "commit_hash": "52555c36989b6704550ed0b3c6e832f5e7e150b7",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/52555c36989b6704550ed0b3c6e832f5e7e150b7",
        "files": [
          "mod/lti/ajax.php"
        ],
        "message": "MDL-47920 mod_lti: add capability checks, http headers",
        "before_after_code_files": [
          "mod/lti/ajax.php||mod/lti/ajax.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/lti/ajax.php||mod/lti/ajax.php"
          ],
          "candidate": [
            "mod/lti/ajax.php||mod/lti/ajax.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lti/ajax.php||mod/lti/ajax.php": [
          "File: mod/lti/ajax.php -> mod/lti/ajax.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: require_once(dirname(__FILE__) . \"/../../config.php\");",
          "29: require_once($CFG->dirroot . '/mod/lti/locallib.php');",
          "31: $courseid = required_param('course', PARAM_INT);",
          "33: require_login($courseid, false);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: define('AJAX_SCRIPT', true);",
          "33: $context = context_course::instance($courseid);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:         $toolurl = required_param('toolurl', PARAM_RAW);",
          "42:         $toolid = optional_param('toolid', 0, PARAM_INT);",
          "45:             $tool = lti_get_tool_by_url_match($toolurl, $courseid);",
          "47:             if(!empty($tool)){",
          "48:                 $toolid = $tool->id;",
          "50:                 $response->toolid = $tool->id;",
          "53:             }",
          "54:         } else {",
          "55:             $response->toolid = $toolid;",
          "",
          "[Removed Lines]",
          "44:         if(empty($toolid) && !empty($toolurl)){",
          "51:                 $response->toolname = htmlspecialchars($tool->name);",
          "52:                 $response->tooldomain = htmlspecialchars($tool->tooldomain);",
          "",
          "[Added Lines]",
          "46:         require_capability('moodle/course:manageactivities', $context);",
          "47:         require_capability('mod/lti:addinstance', $context);",
          "49:         if (empty($toolid) && !empty($toolurl)) {",
          "56:                 $response->toolname = s($tool->name);",
          "57:                 $response->tooldomain = s($tool->tooldomain);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "66:             ';",
          "68:             $privacyconfigs = $DB->get_records_sql($query, array('typeid' => $toolid));",
          "70:                 $configname = $config->name;",
          "71:                 $response->$configname = $config->value;",
          "72:             }",
          "73:         }",
          "74:         break;",
          "75: }",
          "77: echo json_encode($response);",
          "79: die;",
          "",
          "[Removed Lines]",
          "69:             foreach($privacyconfigs as $config){",
          "",
          "[Added Lines]",
          "74:             $success = count($privacyconfigs) > 0;",
          "75:             foreach ($privacyconfigs as $config) {",
          "79:             if (!$success) {",
          "80:                 $response->error = s(get_string('tool_config_not_found', 'mod_lti'));",
          "81:             }",
          "86: echo $OUTPUT->header();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fc6619d5c0bb297e6736880ff5353bb668048002",
      "candidate_info": {
        "commit_hash": "fc6619d5c0bb297e6736880ff5353bb668048002",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/fc6619d5c0bb297e6736880ff5353bb668048002",
        "files": [
          "mod/lti/ajax.php"
        ],
        "message": "MDL-47920 mod_lti: add capability checks, http headers",
        "before_after_code_files": [
          "mod/lti/ajax.php||mod/lti/ajax.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/lti/ajax.php||mod/lti/ajax.php"
          ],
          "candidate": [
            "mod/lti/ajax.php||mod/lti/ajax.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lti/ajax.php||mod/lti/ajax.php": [
          "File: mod/lti/ajax.php -> mod/lti/ajax.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: require_once(dirname(__FILE__) . \"/../../config.php\");",
          "29: require_once($CFG->dirroot . '/mod/lti/locallib.php');",
          "31: $courseid = required_param('course', PARAM_INT);",
          "33: require_login($courseid, false);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: define('AJAX_SCRIPT', true);",
          "33: $context = context_course::instance($courseid);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:         $toolurl = required_param('toolurl', PARAM_RAW);",
          "42:         $toolid = optional_param('toolid', 0, PARAM_INT);",
          "45:             $tool = lti_get_tool_by_url_match($toolurl, $courseid);",
          "47:             if(!empty($tool)){",
          "48:                 $toolid = $tool->id;",
          "50:                 $response->toolid = $tool->id;",
          "53:             }",
          "54:         } else {",
          "55:             $response->toolid = $toolid;",
          "",
          "[Removed Lines]",
          "44:         if(empty($toolid) && !empty($toolurl)){",
          "51:                 $response->toolname = htmlspecialchars($tool->name);",
          "52:                 $response->tooldomain = htmlspecialchars($tool->tooldomain);",
          "",
          "[Added Lines]",
          "46:         require_capability('moodle/course:manageactivities', $context);",
          "47:         require_capability('mod/lti:addinstance', $context);",
          "49:         if (empty($toolid) && !empty($toolurl)) {",
          "56:                 $response->toolname = s($tool->name);",
          "57:                 $response->tooldomain = s($tool->tooldomain);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "66:             ';",
          "68:             $privacyconfigs = $DB->get_records_sql($query, array('typeid' => $toolid));",
          "70:                 $configname = $config->name;",
          "71:                 $response->$configname = $config->value;",
          "72:             }",
          "73:         }",
          "74:         break;",
          "75: }",
          "77: echo json_encode($response);",
          "79: die;",
          "",
          "[Removed Lines]",
          "69:             foreach($privacyconfigs as $config){",
          "",
          "[Added Lines]",
          "74:             $success = count($privacyconfigs) > 0;",
          "75:             foreach ($privacyconfigs as $config) {",
          "79:             if (!$success) {",
          "80:                 $response->error = s(get_string('tool_config_not_found', 'mod_lti'));",
          "81:             }",
          "86: echo $OUTPUT->header();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "faf0cd9098517cd6274219b58f6f4a278d26455d",
      "candidate_info": {
        "commit_hash": "faf0cd9098517cd6274219b58f6f4a278d26455d",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/faf0cd9098517cd6274219b58f6f4a278d26455d",
        "files": [
          "mod/lti/ajax.php"
        ],
        "message": "MDL-47920 mod_lti: add capability checks, http headers",
        "before_after_code_files": [
          "mod/lti/ajax.php||mod/lti/ajax.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/lti/ajax.php||mod/lti/ajax.php"
          ],
          "candidate": [
            "mod/lti/ajax.php||mod/lti/ajax.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lti/ajax.php||mod/lti/ajax.php": [
          "File: mod/lti/ajax.php -> mod/lti/ajax.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: require_once(dirname(__FILE__) . \"/../../config.php\");",
          "31: require_once($CFG->dirroot . '/mod/lti/locallib.php');",
          "33: $courseid = required_param('course', PARAM_INT);",
          "35: require_login($courseid, false);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: define('AJAX_SCRIPT', true);",
          "35: $context = context_course::instance($courseid);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:         $toolurl = required_param('toolurl', PARAM_RAW);",
          "44:         $toolid = optional_param('toolid', 0, PARAM_INT);",
          "46:         if (empty($toolid) && !empty($toolurl)) {",
          "47:             $tool = lti_get_tool_by_url_match($toolurl, $courseid);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:         require_capability('moodle/course:manageactivities', $context);",
          "49:         require_capability('mod/lti:addinstance', $context);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "50:                 $toolid = $tool->id;",
          "52:                 $response->toolid = $tool->id;",
          "55:             }",
          "56:         } else {",
          "57:             $response->toolid = $toolid;",
          "",
          "[Removed Lines]",
          "53:                 $response->toolname = htmlspecialchars($tool->name);",
          "54:                 $response->tooldomain = htmlspecialchars($tool->tooldomain);",
          "",
          "[Added Lines]",
          "58:                 $response->toolname = s($tool->name);",
          "59:                 $response->tooldomain = s($tool->tooldomain);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "68:             ';",
          "70:             $privacyconfigs = $DB->get_records_sql($query, array('typeid' => $toolid));",
          "71:             foreach ($privacyconfigs as $config) {",
          "72:                 $configname = $config->name;",
          "73:                 $response->$configname = $config->value;",
          "74:             }",
          "75:         }",
          "76:         break;",
          "77: }",
          "79: echo json_encode($response);",
          "81: die;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:             $success = count($privacyconfigs) > 0;",
          "81:             if (!$success) {",
          "82:                 $response->error = s(get_string('tool_config_not_found', 'mod_lti'));",
          "83:             }",
          "88: echo $OUTPUT->header();",
          "",
          "---------------"
        ]
      }
    }
  ]
}