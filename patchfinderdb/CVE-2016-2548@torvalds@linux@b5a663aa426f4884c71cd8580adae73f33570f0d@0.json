{
  "cve_id": "CVE-2016-2548",
  "cve_desc": "sound/core/timer.c in the Linux kernel before 4.4.1 retains certain linked lists after a close or stop action, which allows local users to cause a denial of service (system crash) via a crafted ioctl call, related to the (1) snd_timer_close and (2) _snd_timer_stop functions.",
  "repo": "torvalds/linux",
  "patch_hash": "b5a663aa426f4884c71cd8580adae73f33570f0d",
  "patch_info": {
    "commit_hash": "b5a663aa426f4884c71cd8580adae73f33570f0d",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/b5a663aa426f4884c71cd8580adae73f33570f0d",
    "files": [
      "sound/core/timer.c"
    ],
    "message": "ALSA: timer: Harden slave timer list handling\n\nA slave timer instance might be still accessible in a racy way while\noperating the master instance as it lacks of locking.  Since the\nmaster operation is mostly protected with timer->lock, we should cope\nwith it while changing the slave instance, too.  Also, some linked\nlists (active_list and ack_list) of slave instances aren't unlinked\nimmediately at stopping or closing, and this may lead to unexpected\naccesses.\n\nThis patch tries to address these issues.  It adds spin lock of\ntimer->lock (either from master or slave, which is equivalent) in a\nfew places.  For avoiding a deadlock, we ensure that the global\nslave_active_lock is always locked at first before each timer lock.\n\nAlso, ack and active_list of slave instances are properly unlinked at\nsnd_timer_stop() and snd_timer_close().\n\nLast but not least, remove the superfluous call of _snd_timer_stop()\nat removing slave links.  This is a noop, and calling it may confuse\nreaders wrt locking.  Further cleanup will follow in a later patch.\n\nActually we've got reports of use-after-free by syzkaller fuzzer, and\nthis hopefully fixes these issues.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
    "before_after_code_files": [
      "sound/core/timer.c||sound/core/timer.c"
    ]
  },
  "patch_diff": {
    "sound/core/timer.c||sound/core/timer.c": [
      "File: sound/core/timer.c -> sound/core/timer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "215:       slave->slave_id == master->slave_id) {",
      "216:    list_move_tail(&slave->open_list, &master->slave_list_head);",
      "217:    spin_lock_irq(&slave_active_lock);",
      "218:    slave->master = master;",
      "219:    slave->timer = master->timer;",
      "220:    if (slave->flags & SNDRV_TIMER_IFLG_RUNNING)",
      "221:     list_add_tail(&slave->active_list,",
      "222:            &master->slave_active_head);",
      "223:    spin_unlock_irq(&slave_active_lock);",
      "224:   }",
      "225:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "218:    spin_lock(&master->timer->lock);",
      "224:    spin_unlock(&master->timer->lock);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "346:       timer->hw.close)",
      "347:    timer->hw.close(timer);",
      "349:   list_for_each_entry_safe(slave, tmp, &timeri->slave_list_head,",
      "350:       open_list) {",
      "353:    list_move_tail(&slave->open_list, &snd_timer_slave_list);",
      "354:    slave->master = NULL;",
      "355:    slave->timer = NULL;",
      "357:   }",
      "358:   mutex_unlock(&register_mutex);",
      "359:  }",
      "360:  out:",
      "",
      "[Removed Lines]",
      "351:    spin_lock_irq(&slave_active_lock);",
      "352:    _snd_timer_stop(slave, 1, SNDRV_TIMER_EVENT_RESOLUTION);",
      "356:    spin_unlock_irq(&slave_active_lock);",
      "",
      "[Added Lines]",
      "351:   spin_lock_irq(&slave_active_lock);",
      "352:   spin_lock(&timer->lock);",
      "358:    list_del_init(&slave->ack_list);",
      "359:    list_del_init(&slave->active_list);",
      "361:   spin_unlock(&timer->lock);",
      "362:   spin_unlock_irq(&slave_active_lock);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "442:  spin_lock_irqsave(&slave_active_lock, flags);",
      "443:  timeri->flags |= SNDRV_TIMER_IFLG_RUNNING;",
      "445:   list_add_tail(&timeri->active_list,",
      "446:          &timeri->master->slave_active_head);",
      "447:  spin_unlock_irqrestore(&slave_active_lock, flags);",
      "449: }",
      "",
      "[Removed Lines]",
      "444:  if (timeri->master)",
      "",
      "[Added Lines]",
      "449:  if (timeri->master && timeri->timer) {",
      "450:   spin_lock(&timeri->timer->lock);",
      "453:   spin_unlock(&timeri->timer->lock);",
      "454:  }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "489:   if (!keep_flag) {",
      "490:    spin_lock_irqsave(&slave_active_lock, flags);",
      "491:    timeri->flags &= ~SNDRV_TIMER_IFLG_RUNNING;",
      "492:    spin_unlock_irqrestore(&slave_active_lock, flags);",
      "493:   }",
      "494:   goto __end;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "500:    list_del_init(&timeri->ack_list);",
      "501:    list_del_init(&timeri->active_list);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c3b1681375dc6e71d89a3ae00cc3ce9e775a8917",
      "candidate_info": {
        "commit_hash": "c3b1681375dc6e71d89a3ae00cc3ce9e775a8917",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/c3b1681375dc6e71d89a3ae00cc3ce9e775a8917",
        "files": [
          "sound/core/timer.c"
        ],
        "message": "ALSA: timer: Code cleanup\n\nThis is a minor code cleanup without any functional changes:\n- Kill keep_flag argument from _snd_timer_stop(), as all callers pass\n  only it false.\n- Remove redundant NULL check in _snd_timer_stop().\n\nSigned-off-by: Takashi Iwai <tiwai@suse.de>",
        "before_after_code_files": [
          "sound/core/timer.c||sound/core/timer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "sound/core/timer.c||sound/core/timer.c"
          ],
          "candidate": [
            "sound/core/timer.c||sound/core/timer.c"
          ]
        }
      },
      "candidate_diff": {
        "sound/core/timer.c||sound/core/timer.c": [
          "File: sound/core/timer.c -> sound/core/timer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:  return 0;",
          "302: }",
          "",
          "[Removed Lines]",
          "304: static int _snd_timer_stop(struct snd_timer_instance *timeri,",
          "305:       int keep_flag, int event);",
          "",
          "[Added Lines]",
          "304: static int _snd_timer_stop(struct snd_timer_instance *timeri, int event);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "344:   spin_unlock_irq(&timer->lock);",
          "345:   mutex_lock(&register_mutex);",
          "346:   list_del(&timeri->open_list);",
          "348:       timer->hw.close)",
          "349:    timer->hw.close(timer);",
          "",
          "[Removed Lines]",
          "347:   if (timer && list_empty(&timer->open_list_head) &&",
          "",
          "[Added Lines]",
          "346:   if (list_empty(&timer->open_list_head) &&",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "484:  return result;",
          "485: }",
          "489: {",
          "490:  struct snd_timer *timer;",
          "491:  unsigned long flags;",
          "",
          "[Removed Lines]",
          "487: static int _snd_timer_stop(struct snd_timer_instance * timeri,",
          "488:       int keep_flag, int event)",
          "",
          "[Added Lines]",
          "486: static int _snd_timer_stop(struct snd_timer_instance *timeri, int event)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "494:   return -ENXIO;",
          "496:  if (timeri->flags & SNDRV_TIMER_IFLG_SLAVE) {",
          "504:   goto __end;",
          "505:  }",
          "506:  timer = timeri->timer;",
          "",
          "[Removed Lines]",
          "497:   if (!keep_flag) {",
          "498:    spin_lock_irqsave(&slave_active_lock, flags);",
          "499:    timeri->flags &= ~SNDRV_TIMER_IFLG_RUNNING;",
          "500:    list_del_init(&timeri->ack_list);",
          "501:    list_del_init(&timeri->active_list);",
          "502:    spin_unlock_irqrestore(&slave_active_lock, flags);",
          "503:   }",
          "",
          "[Added Lines]",
          "495:   spin_lock_irqsave(&slave_active_lock, flags);",
          "496:   timeri->flags &= ~SNDRV_TIMER_IFLG_RUNNING;",
          "497:   list_del_init(&timeri->ack_list);",
          "498:   list_del_init(&timeri->active_list);",
          "499:   spin_unlock_irqrestore(&slave_active_lock, flags);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "521:    }",
          "522:   }",
          "523:  }",
          "527:  spin_unlock_irqrestore(&timer->lock, flags);",
          "528:       __end:",
          "529:  if (event != SNDRV_TIMER_EVENT_RESOLUTION)",
          "",
          "[Removed Lines]",
          "524:  if (!keep_flag)",
          "525:   timeri->flags &=",
          "526:    ~(SNDRV_TIMER_IFLG_RUNNING | SNDRV_TIMER_IFLG_START);",
          "",
          "[Added Lines]",
          "520:  timeri->flags &= ~(SNDRV_TIMER_IFLG_RUNNING | SNDRV_TIMER_IFLG_START);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "542:  unsigned long flags;",
          "543:  int err;",
          "546:  if (err < 0)",
          "547:   return err;",
          "548:  timer = timeri->timer;",
          "",
          "[Removed Lines]",
          "545:  err = _snd_timer_stop(timeri, 0, SNDRV_TIMER_EVENT_STOP);",
          "",
          "[Added Lines]",
          "539:  err = _snd_timer_stop(timeri, SNDRV_TIMER_EVENT_STOP);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "587: int snd_timer_pause(struct snd_timer_instance * timeri)",
          "588: {",
          "590: }",
          "",
          "[Removed Lines]",
          "589:  return _snd_timer_stop(timeri, 0, SNDRV_TIMER_EVENT_PAUSE);",
          "",
          "[Added Lines]",
          "583:  return _snd_timer_stop(timeri, SNDRV_TIMER_EVENT_PAUSE);",
          "",
          "---------------"
        ]
      }
    }
  ]
}