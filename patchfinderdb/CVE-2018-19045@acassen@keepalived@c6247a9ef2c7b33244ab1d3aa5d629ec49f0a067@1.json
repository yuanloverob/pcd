{
  "cve_id": "CVE-2018-19045",
  "cve_desc": "keepalived 2.0.8 used mode 0666 when creating new temporary files upon a call to PrintData or PrintStats, potentially leaking sensitive information.",
  "repo": "acassen/keepalived",
  "patch_hash": "c6247a9ef2c7b33244ab1d3aa5d629ec49f0a067",
  "patch_info": {
    "commit_hash": "c6247a9ef2c7b33244ab1d3aa5d629ec49f0a067",
    "repo": "acassen/keepalived",
    "commit_url": "https://github.com/acassen/keepalived/commit/c6247a9ef2c7b33244ab1d3aa5d629ec49f0a067",
    "files": [
      "doc/keepalived.conf.SYNOPSIS",
      "doc/man/man5/keepalived.conf.5",
      "doc/man/man8/keepalived.8",
      "keepalived/core/global_data.c",
      "keepalived/core/global_parser.c",
      "keepalived/core/main.c",
      "keepalived/include/global_data.h",
      "keepalived/include/main.h"
    ],
    "message": "Add command line and configuration option to set umask\n\nIssue #1048 identified that files created by keepalived are created\nwith mode 0666. This commit changes the default to 0644, and also\nallows the umask to be specified in the configuration or as a command\nline option.\n\nSigned-off-by: Quentin Armitage <quentin@armitage.org.uk>",
    "before_after_code_files": [
      "keepalived/core/global_data.c||keepalived/core/global_data.c",
      "keepalived/core/global_parser.c||keepalived/core/global_parser.c",
      "keepalived/core/main.c||keepalived/core/main.c",
      "keepalived/include/global_data.h||keepalived/include/global_data.h",
      "keepalived/include/main.h||keepalived/include/main.h"
    ]
  },
  "patch_diff": {
    "keepalived/core/global_data.c||keepalived/core/global_data.c": [
      "File: keepalived/core/global_data.c -> keepalived/core/global_data.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "571:  if (buf[0])",
      "572:   conf_write(fp, \"%s\", buf);",
      "573:  conf_write(fp, \" rx_bufs_multiples = %u\", global_data->vrrp_rx_bufs_multiples);",
      "574: #endif",
      "575: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "574:  conf_write(fp, \" umask = 0%o\", global_data->umask);",
      "",
      "---------------"
    ],
    "keepalived/core/global_parser.c||keepalived/core/global_parser.c": [
      "File: keepalived/core/global_parser.c -> keepalived/core/global_parser.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include <sched.h>",
      "36: #endif",
      "37: #include <strings.h>",
      "39: #ifdef _WITH_SNMP_",
      "40: #include \"snmp.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "38: #include <sys/types.h>",
      "39: #include <sys/stat.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1341: }",
      "1342: #endif",
      "1344: void",
      "1345: init_global_keywords(bool global_active)",
      "1346: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1346: static void",
      "1347: umask_handler(vector_t *strvec)",
      "1348: {",
      "1349:  long umask_long;",
      "1350:  mode_t umask_val = 0;",
      "1351:  char *mask = strvec_slot(strvec, 1);",
      "1352:  char *endptr;",
      "1353:  unsigned i;",
      "1354:  char *p;",
      "1356:  if (umask_cmdline) {",
      "1357:   log_message(LOG_INFO, \"umask command line option specified, ignoring config option\");",
      "1358:   return;",
      "1359:  }",
      "1361:  if (isdigit(mask[0])) {",
      "1362:   if (vector_size(strvec) != 2) {",
      "1363:    report_config_error(CONFIG_GENERAL_ERROR, \"%s parameter(s) to umask option\", vector_size(strvec) == 1 ? \"Missing\" : \"Extra\");",
      "1364:    return;",
      "1365:   }",
      "1366:   umask_long = strtol(mask, &endptr, 0);",
      "1367:   if (*endptr || umask_long < 0 || umask_long & ~0777L) {",
      "1368:    report_config_error(CONFIG_GENERAL_ERROR, \"invalid umask value %s\", mask);",
      "1369:    return;",
      "1370:   }",
      "1371:   umask_val = umask_long & 0777;",
      "1372:  }",
      "1373:  else {",
      "1374:   bool need_or = false;",
      "1375:   for (i = 1; i < vector_size(strvec); i++) {",
      "1376:    for (p = strvec_slot(strvec, i); *p; ) {",
      "1377:     if (need_or) {",
      "1378:      if (*p == '|') {",
      "1379:       need_or = false;",
      "1380:       p++;",
      "1381:       continue;",
      "1382:      }",
      "1384:      report_config_error(CONFIG_GENERAL_ERROR, \"Invalid umask syntax %s\", FMT_STR_VSLOT(strvec, i));",
      "1385:      return;",
      "1386:     }",
      "1388:     if      (!strncmp(p, \"IRUSR\", 5)) umask_val |= S_IRUSR;",
      "1389:     else if (!strncmp(p, \"IWUSR\", 5)) umask_val |= S_IWUSR;",
      "1390:     else if (!strncmp(p, \"IXUSR\", 5)) umask_val |= S_IXUSR;",
      "1391:     else if (!strncmp(p, \"IRGRP\", 5)) umask_val |= S_IRGRP;",
      "1392:     else if (!strncmp(p, \"IWGRP\", 5)) umask_val |= S_IWGRP;",
      "1393:     else if (!strncmp(p, \"IXGRP\", 5)) umask_val |= S_IXGRP;",
      "1394:     else if (!strncmp(p, \"IROTH\", 5)) umask_val |= S_IROTH;",
      "1395:     else if (!strncmp(p, \"IWOTH\", 5)) umask_val |= S_IWOTH;",
      "1396:     else if (!strncmp(p, \"IXOTH\", 5)) umask_val |= S_IXOTH;",
      "1397:     else {",
      "1398:      report_config_error(CONFIG_GENERAL_ERROR, \"Unknown umask bit %s\", p);",
      "1399:      return;",
      "1400:     }",
      "1402:     p += 5;",
      "1403:     need_or = true;",
      "1404:    }",
      "1405:   }",
      "1406:   if (!need_or) {",
      "1407:    report_config_error(CONFIG_GENERAL_ERROR, \"umask missing bit value\");",
      "1408:    return;",
      "1409:   }",
      "1410:  }",
      "1412:  global_data->umask = umask_val;",
      "1413:  umask(umask_val);",
      "1414: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1483:  install_keyword(\"vrrp_rx_bufs_policy\", &vrrp_rx_bufs_policy_handler);",
      "1484:  install_keyword(\"vrrp_rx_bufs_multiplier\", &vrrp_rx_bufs_multiplier_handler);",
      "1485: #endif",
      "1486: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1558:  install_keyword(\"umask\", &umask_handler);",
      "",
      "---------------"
    ],
    "keepalived/core/main.c||keepalived/core/main.c": [
      "File: keepalived/core/main.c -> keepalived/core/main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "33: #include <signal.h>",
      "34: #include <fcntl.h>",
      "35: #include <sys/wait.h>",
      "36: #include <sys/stat.h>",
      "37: #include <unistd.h>",
      "38: #include <getopt.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "36: #include <sys/types.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "155: };",
      "156: #define LOG_FACILITY_MAX ((sizeof(LOG_FACILITY) / sizeof(LOG_FACILITY[0])) - 1)",
      "159: static bool set_core_dump_pattern = false;",
      "160: static bool create_core_dump = false;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "160: bool umask_cmdline;",
      "161: static mode_t umask_val = S_IXUSR | S_IWGRP | S_IXGRP | S_IWOTH | S_IXOTH;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "866:  }",
      "867: }",
      "869: void",
      "870: initialise_debug_options(void)",
      "871: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "874: static mode_t",
      "875: set_umask(const char *optarg)",
      "876: {",
      "877:  long umask_long;",
      "878:  mode_t umask_val;",
      "879:  char *endptr;",
      "881:  umask_long = strtoll(optarg, &endptr, 0);",
      "883:  if (*endptr || umask_long < 0 || umask_long & ~0777L) {",
      "884:   fprintf(stderr, \"Invalid --umask option %s\", optarg);",
      "885:   return;",
      "886:  }",
      "888:  umask_val = umask_long & 0777;",
      "889:  umask(umask_val);",
      "891:  umask_cmdline = true;",
      "893:  return umask_val;",
      "894: }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1090:  fprintf(stderr, \"  -g, --log-file=FILE          Also log to FILE (default /tmp/keepalived.log)\\n\");",
      "1091:  fprintf(stderr, \"      --flush-log-file         Flush log file on write\\n\");",
      "1092:  fprintf(stderr, \"  -G, --no-syslog              Don't log via syslog\\n\");",
      "1093: #ifdef _WITH_VRRP_",
      "1094:  fprintf(stderr, \"  -X, --release-vips           Drop VIP on transition from signal.\\n\");",
      "1095:  fprintf(stderr, \"  -V, --dont-release-vrrp      Don't remove VRRP VIPs and VROUTEs on daemon stop\\n\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1120:  fprintf(stderr, \"  -u, --umask=MASK             umask for file creation (in numeric form)\\n\");",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1183:  int curind;",
      "1184:  bool bad_option = false;",
      "1185:  unsigned facility;",
      "1187:  struct option long_options[] = {",
      "1188:   {\"use-file\",  required_argument, NULL, 'f'},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1214:  mode_t new_umask_val;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1200:   {\"log-file\",  optional_argument, NULL, 'g'},",
      "1201:   {\"flush-log-file\", no_argument,  NULL,  2 },",
      "1202:   {\"no-syslog\",  no_argument,  NULL, 'G'},",
      "1203: #ifdef _WITH_VRRP_",
      "1204:   {\"release-vips\", no_argument,  NULL, 'X'},",
      "1205:   {\"dont-release-vrrp\", no_argument,  NULL, 'V'},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1232:   {\"umask\",  required_argument, NULL, 'u'},",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1254:  curind = optind;",
      "1256: #if defined _WITH_VRRP_ && defined _WITH_LVS_",
      "1257:          \"PC\"",
      "1258: #endif",
      "",
      "[Removed Lines]",
      "1255:  while (longindex = -1, (c = getopt_long(argc, argv, \":vhlndDRS:f:p:i:mM::g::Gt::\"",
      "",
      "[Added Lines]",
      "1285:  while (longindex = -1, (c = getopt_long(argc, argv, \":vhlndu:DRS:f:p:i:mM::g::Gt::\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1358:    __set_bit(NO_SYSLOG_BIT, &debug);",
      "1359:    reopen_log = true;",
      "1360:    break;",
      "1361:   case 't':",
      "1362:    __set_bit(CONFIG_TEST_BIT, &debug);",
      "1363:    __set_bit(DONT_RESPAWN_BIT, &debug);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1391:   case 'u':",
      "1392:    new_umask_val = set_umask(optarg);",
      "1393:    if (umask_cmdline)",
      "1394:     umask_val = new_umask_val;",
      "1395:    break;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1582:  __set_bit(DAEMON_BFD, &daemon_mode);",
      "1583: #endif",
      "1586:  openlog(PACKAGE_NAME, LOG_PID, log_facility);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1621:  umask(022);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1678:  }",
      "1680:  global_data = alloc_global_data();",
      "1682:  read_config_file();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1719:  global_data->umask = umask_val;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1809:   exit(0);",
      "1810:  }",
      "1815: #ifdef _MEM_CHECK_",
      "1816:  enable_mem_log_termination();",
      "1817: #endif",
      "",
      "[Removed Lines]",
      "1813:  umask(0);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "keepalived/include/global_data.h||keepalived/include/global_data.h": [
      "File: keepalived/include/global_data.h -> keepalived/include/global_data.h"
    ],
    "keepalived/include/main.h||keepalived/include/main.h": [
      "File: keepalived/include/main.h -> keepalived/include/main.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "98: extern unsigned child_wait_time;",
      "100: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "99: extern bool umask_cmdline;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ec4ba47546299b5284c523df44834e55f5d089a3",
      "candidate_info": {
        "commit_hash": "ec4ba47546299b5284c523df44834e55f5d089a3",
        "repo": "acassen/keepalived",
        "commit_url": "https://github.com/acassen/keepalived/commit/ec4ba47546299b5284c523df44834e55f5d089a3",
        "files": [
          "keepalived/bfd/bfd_daemon.c",
          "keepalived/core/global_data.c",
          "keepalived/core/global_parser.c",
          "keepalived/core/main.c",
          "keepalived/include/global_data.h",
          "lib/logger.c",
          "lib/logger.h",
          "lib/memory.c",
          "lib/memory.h",
          "lib/utils.c",
          "lib/utils.h"
        ],
        "message": "Make umask configuration apply to created file\n\nSigned-off-by: Quentin Armitage <quentin@armitage.org.uk>",
        "before_after_code_files": [
          "keepalived/bfd/bfd_daemon.c||keepalived/bfd/bfd_daemon.c",
          "keepalived/core/global_data.c||keepalived/core/global_data.c",
          "keepalived/core/global_parser.c||keepalived/core/global_parser.c",
          "keepalived/core/main.c||keepalived/core/main.c",
          "keepalived/include/global_data.h||keepalived/include/global_data.h",
          "lib/logger.c||lib/logger.c",
          "lib/logger.h||lib/logger.h",
          "lib/memory.c||lib/memory.c",
          "lib/memory.h||lib/memory.h",
          "lib/utils.c||lib/utils.c",
          "lib/utils.h||lib/utils.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "keepalived/core/global_data.c||keepalived/core/global_data.c",
            "keepalived/core/global_parser.c||keepalived/core/global_parser.c",
            "keepalived/core/main.c||keepalived/core/main.c",
            "keepalived/include/global_data.h||keepalived/include/global_data.h"
          ],
          "candidate": [
            "keepalived/core/global_data.c||keepalived/core/global_data.c",
            "keepalived/core/global_parser.c||keepalived/core/global_parser.c",
            "keepalived/core/main.c||keepalived/core/main.c",
            "keepalived/include/global_data.h||keepalived/include/global_data.h"
          ]
        }
      },
      "candidate_diff": {
        "keepalived/bfd/bfd_daemon.c||keepalived/bfd/bfd_daemon.c": [
          "File: keepalived/bfd/bfd_daemon.c -> keepalived/bfd/bfd_daemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "390:  if (ret < 0) {",
          "391:   log_message(LOG_INFO, \"BFD child process: error chdir\");",
          "392:  }",
          "396: #endif",
          "",
          "[Removed Lines]",
          "395:  umask(0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "keepalived/core/global_data.c||keepalived/core/global_data.c": [
          "File: keepalived/core/global_data.c -> keepalived/core/global_data.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "594:  if (buf[0])",
          "595:   conf_write(fp, \"%s\", buf);",
          "596:  conf_write(fp, \" rx_bufs_multiples = %u\", global_data->vrrp_rx_bufs_multiples);",
          "598: #endif",
          "599: }",
          "",
          "[Removed Lines]",
          "597:  conf_write(fp, \" umask = 0%o\", global_data->umask);",
          "",
          "[Added Lines]",
          "597:  conf_write(fp, \" umask = 0%o\", umask_val);",
          "",
          "---------------"
        ],
        "keepalived/core/global_parser.c||keepalived/core/global_parser.c": [
          "File: keepalived/core/global_parser.c -> keepalived/core/global_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: #ifdef _WITH_FIREWALL_",
          "53: #include \"vrrp_firewall.h\"",
          "54: #endif",
          "56: #if HAVE_DECL_CLONE_NEWNET",
          "57: #include \"namespaces.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55: #include \"memory.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1403: umask_handler(vector_t *strvec)",
          "1404: {",
          "1405:  long umask_long;",
          "1407:  char *mask = strvec_slot(strvec, 1);",
          "1408:  char *endptr;",
          "1409:  unsigned i;",
          "",
          "[Removed Lines]",
          "1406:  mode_t umask_val = 0;",
          "",
          "[Added Lines]",
          "1407:  mode_t umask_bits = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1420:    return;",
          "1421:   }",
          "1422:   umask_long = strtol(mask, &endptr, 0);",
          "1424:    report_config_error(CONFIG_GENERAL_ERROR, \"invalid umask value %s\", mask);",
          "1425:    return;",
          "1426:   }",
          "1428:  }",
          "1429:  else {",
          "1430:   bool need_or = false;",
          "",
          "[Removed Lines]",
          "1423:   if (*endptr || umask_long < 0 || umask_long & ~0777L) {",
          "1427:   umask_val = umask_long & 0777;",
          "",
          "[Added Lines]",
          "1424:   if (*endptr || umask_long < 0 || umask_long & ~(S_IRWXU | S_IRWXG | S_IRWXO)) {",
          "1428:   umask_bits = umask_long & (S_IRWXU | S_IRWXG | S_IRWXO);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1441:      return;",
          "1442:     }",
          "1453:     else {",
          "1454:      report_config_error(CONFIG_GENERAL_ERROR, \"Unknown umask bit %s\", p);",
          "1455:      return;",
          "",
          "[Removed Lines]",
          "1444:     if      (!strncmp(p, \"IRUSR\", 5)) umask_val |= S_IRUSR;",
          "1445:     else if (!strncmp(p, \"IWUSR\", 5)) umask_val |= S_IWUSR;",
          "1446:     else if (!strncmp(p, \"IXUSR\", 5)) umask_val |= S_IXUSR;",
          "1447:     else if (!strncmp(p, \"IRGRP\", 5)) umask_val |= S_IRGRP;",
          "1448:     else if (!strncmp(p, \"IWGRP\", 5)) umask_val |= S_IWGRP;",
          "1449:     else if (!strncmp(p, \"IXGRP\", 5)) umask_val |= S_IXGRP;",
          "1450:     else if (!strncmp(p, \"IROTH\", 5)) umask_val |= S_IROTH;",
          "1451:     else if (!strncmp(p, \"IWOTH\", 5)) umask_val |= S_IWOTH;",
          "1452:     else if (!strncmp(p, \"IXOTH\", 5)) umask_val |= S_IXOTH;",
          "",
          "[Added Lines]",
          "1445:     if      (!strncmp(p, \"IRUSR\", 5)) umask_bits |= S_IRUSR;",
          "1446:     else if (!strncmp(p, \"IWUSR\", 5)) umask_bits |= S_IWUSR;",
          "1447:     else if (!strncmp(p, \"IXUSR\", 5)) umask_bits |= S_IXUSR;",
          "1448:     else if (!strncmp(p, \"IRGRP\", 5)) umask_bits |= S_IRGRP;",
          "1449:     else if (!strncmp(p, \"IWGRP\", 5)) umask_bits |= S_IWGRP;",
          "1450:     else if (!strncmp(p, \"IXGRP\", 5)) umask_bits |= S_IXGRP;",
          "1451:     else if (!strncmp(p, \"IROTH\", 5)) umask_bits |= S_IROTH;",
          "1452:     else if (!strncmp(p, \"IWOTH\", 5)) umask_bits |= S_IWOTH;",
          "1453:     else if (!strncmp(p, \"IXOTH\", 5)) umask_bits |= S_IXOTH;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1465:   }",
          "1466:  }",
          "1470: }",
          "1472: void",
          "",
          "[Removed Lines]",
          "1468:  global_data->umask = umask_val;",
          "1469:  umask(umask_val);",
          "",
          "[Added Lines]",
          "1469:  umask_val = umask_bits;",
          "1470:  umask(umask_bits);",
          "1472: #ifdef _MEM_CHECK_",
          "1473:  update_mem_check_log_perms(umask_bits);",
          "1474: #endif",
          "1475: #ifdef ENABLE_LOG_TO_FILE",
          "1476:  update_log_file_perms(umask_bits);",
          "1477: #endif",
          "",
          "---------------"
        ],
        "keepalived/core/main.c||keepalived/core/main.c": [
          "File: keepalived/core/main.c -> keepalived/core/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "160: bool umask_cmdline;",
          "164: static bool set_core_dump_pattern = false;",
          "",
          "[Removed Lines]",
          "161: static mode_t umask_val = S_IXUSR | S_IWGRP | S_IXGRP | S_IWOTH | S_IXOTH;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "887: set_umask(const char *optarg)",
          "888: {",
          "889:  long umask_long;",
          "891:  char *endptr;",
          "893:  umask_long = strtoll(optarg, &endptr, 0);",
          "896:   fprintf(stderr, \"Invalid --umask option %s\", optarg);",
          "897:   return 0;",
          "898:  }",
          "903:  umask_cmdline = true;",
          "906: }",
          "908: void",
          "",
          "[Removed Lines]",
          "890:  mode_t umask_val;",
          "895:  if (*endptr || umask_long < 0 || umask_long & ~0777L) {",
          "900:  umask_val = umask_long & 0777;",
          "901:  umask(umask_val);",
          "905:  return umask_val;",
          "",
          "[Added Lines]",
          "889:  mode_t umask_bits;",
          "894:  if (*endptr || umask_long < 0 || umask_long & ~(S_IRWXU | S_IRWXG | S_IRWXO)) {",
          "899:  umask_bits = umask_long & (S_IRWXU | S_IRWXG | S_IRWXO);",
          "900:  umask(umask_bits);",
          "904: #ifdef _MEM_CHECK_",
          "905:  update_mem_check_log_perms(umask_bits);",
          "906: #endif",
          "907: #ifdef ENABLE_LOG_TO_FILE",
          "908:  update_log_file_perms(umask_bits);",
          "909: #endif",
          "911:  return umask_bits;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1642: #endif",
          "1648:  openlog(PACKAGE_NAME, LOG_PID, log_facility);",
          "",
          "[Removed Lines]",
          "1645:  umask(022);",
          "",
          "[Added Lines]",
          "1651:  umask(umask_val);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1741:  }",
          "1743:  global_data = alloc_global_data();",
          "1746:  read_config_file();",
          "",
          "[Removed Lines]",
          "1744:  global_data->umask = umask_val;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "keepalived/include/global_data.h||keepalived/include/global_data.h": [
          "File: keepalived/include/global_data.h -> keepalived/include/global_data.h"
        ],
        "lib/logger.c||lib/logger.c": [
          "File: lib/logger.c -> lib/logger.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:  if (log_file)",
          "98:   fflush(log_file);",
          "99: }",
          "100: #endif",
          "102: void",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101: void",
          "102: update_log_file_perms(mode_t umask_bits)",
          "103: {",
          "104:         if (log_file)",
          "105:                 fchmod(fileno(log_file), (S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH) & ~umask_bits);",
          "106: }",
          "",
          "---------------"
        ],
        "lib/logger.h||lib/logger.h": [
          "File: lib/logger.h -> lib/logger.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include <stdarg.h>",
          "27: #include <syslog.h>",
          "28: #include <stdio.h>",
          "30: #define MAX_LOG_MSG 255",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: #ifdef ENABLE_LOG_TO_FILE",
          "30: #include <sys/stat.h>",
          "31: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: extern void close_log_file(void);",
          "40: extern void open_log_file(const char *, const char *, const char *, const char *);",
          "41: extern void flush_log_file(void);",
          "42: #endif",
          "43: extern void vlog_message(const int facility, const char* format, va_list args)",
          "44:  __attribute__ ((format (printf, 2, 0)));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: extern void update_log_file_perms(mode_t);",
          "",
          "---------------"
        ],
        "lib/memory.c||lib/memory.c": [
          "File: lib/memory.c -> lib/memory.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #include <stdlib.h>",
          "31: #include <time.h>",
          "32: #include <limits.h>",
          "33: #endif",
          "35: #include <errno.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: #include <sys/stat.h>",
          "34: #include <stdio.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "654: {",
          "655:  atexit(keepalived_free_final);",
          "656: }",
          "657: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "660: void",
          "661: update_mem_check_log_perms(mode_t umask_bits)",
          "662: {",
          "663:  if (log_op)",
          "664:   fchmod(fileno(log_op), (S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH) & ~umask_bits);",
          "665: }",
          "",
          "---------------"
        ],
        "lib/memory.h||lib/memory.h": [
          "File: lib/memory.h -> lib/memory.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #include <stddef.h>",
          "31: #ifdef _MEM_CHECK_",
          "32: #include <sys/types.h>",
          "33: #else",
          "34: #include <stdlib.h>",
          "35: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: #include <sys/stat.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60: extern void skip_mem_dump(void);",
          "61: extern void enable_mem_log_termination(void);",
          "63: #else",
          "65: extern void *zalloc(unsigned long size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64: extern void update_mem_check_log_perms(mode_t);",
          "",
          "---------------"
        ],
        "lib/utils.c||lib/utils.c": [
          "File: lib/utils.c -> lib/utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68: unsigned long debug = 0;",
          "71: void",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69: mode_t umask_val = S_IXUSR | S_IRWXG | S_IRWXO;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "858:  }",
          "859: #endif",
          "863:   sav_errno = errno;",
          "864:   log_message(LOG_INFO, \"Unable to change file permission of %s - errno %d (%m)\", path, errno);",
          "865:   close(fd);",
          "",
          "[Removed Lines]",
          "862:  if (fchmod(fd, S_IRUSR | S_IWUSR)) {",
          "",
          "[Added Lines]",
          "863:  if (fchmod(fd, (S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH) & ~umask_val)) {",
          "",
          "---------------"
        ],
        "lib/utils.h||lib/utils.h": [
          "File: lib/utils.h -> lib/utils.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "154: extern unsigned long debug;",
          "155: #ifdef _WITH_PERF_",
          "156: extern perf_t perf_run;",
          "157: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "155: extern mode_t umask_val;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5241e4d7b177d0b6f073cfc9ed5444bf51ec89d6",
      "candidate_info": {
        "commit_hash": "5241e4d7b177d0b6f073cfc9ed5444bf51ec89d6",
        "repo": "acassen/keepalived",
        "commit_url": "https://github.com/acassen/keepalived/commit/5241e4d7b177d0b6f073cfc9ed5444bf51ec89d6",
        "files": [
          "keepalived/core/main.c"
        ],
        "message": "Fix compile warning introduced in commit c6247a9\n\nCommit c6247a9 - \"Add command line and configuration option to set umask\"\nintroduced a compile warning, although the code would have worked OK.\n\nSigned-off-by: Quentin Armitage <quentin@armitage.org.uk>",
        "before_after_code_files": [
          "keepalived/core/main.c||keepalived/core/main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "keepalived/core/main.c||keepalived/core/main.c"
          ],
          "candidate": [
            "keepalived/core/main.c||keepalived/core/main.c"
          ]
        }
      },
      "candidate_diff": {
        "keepalived/core/main.c||keepalived/core/main.c": [
          "File: keepalived/core/main.c -> keepalived/core/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "883:  if (*endptr || umask_long < 0 || umask_long & ~0777L) {",
          "884:   fprintf(stderr, \"Invalid --umask option %s\", optarg);",
          "886:  }",
          "888:  umask_val = umask_long & 0777;",
          "",
          "[Removed Lines]",
          "885:   return;",
          "",
          "[Added Lines]",
          "885:   return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}