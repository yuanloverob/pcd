{
  "cve_id": "CVE-2019-15683",
  "cve_desc": "TurboVNC server code contains stack buffer overflow vulnerability in commit prior to cea98166008301e614e0d36776bf9435a536136e. This could possibly result into remote code execution, since stack frame is not protected with stack canary. This attack appear to be exploitable via network connectivity. To exploit this vulnerability authorization on server is required. These issues have been fixed in commit cea98166008301e614e0d36776bf9435a536136e.",
  "repo": "TurboVNC/turbovnc",
  "patch_hash": "cea98166008301e614e0d36776bf9435a536136e",
  "patch_info": {
    "commit_hash": "cea98166008301e614e0d36776bf9435a536136e",
    "repo": "TurboVNC/turbovnc",
    "commit_url": "https://github.com/TurboVNC/turbovnc/commit/cea98166008301e614e0d36776bf9435a536136e",
    "files": [
      "unix/Xvnc/programs/Xserver/hw/vnc/auth.c",
      "unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c"
    ],
    "message": "Server: Fix two issues identified by ASan\n\n1. If the TLSPlain and X509Plain security types were both disabled, then\n   rfbOptPamAuth() would overflow the name field in the secTypes\n   structure when testing the \"none\" security type, since the name of\n   that security type has less than five characters.  This issue was\n   innocuous, since the overflow was fully contained within the secTypes\n   structure, but the ASan error caused Xvnc to abort, which made it\n   difficult to detect other errors.\n\n2. If an ill-behaved RFB client sent the TurboVNC Server a fence\n   message with more than 64 bytes, then the TurboVNC Server would\n   try to read that message and subsequently overflow the stack before\n   it detected that the payload was too large.  This could never have\n   occurred with any of the VNC viewers that currently support the RFB\n   flow control extensions (TigerVNC and TurboVNC, namely.)  This issue\n   was also innocuous, since the stack overflow affected two variables\n   (newScreens and errMsg) that were never accessed before the function\n   returned.",
    "before_after_code_files": [
      "unix/Xvnc/programs/Xserver/hw/vnc/auth.c||unix/Xvnc/programs/Xserver/hw/vnc/auth.c",
      "unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c||unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c"
    ]
  },
  "patch_diff": {
    "unix/Xvnc/programs/Xserver/hw/vnc/auth.c||unix/Xvnc/programs/Xserver/hw/vnc/auth.c": [
      "File: unix/Xvnc/programs/Xserver/hw/vnc/auth.c -> unix/Xvnc/programs/Xserver/hw/vnc/auth.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "394:   for (s = secTypes; s->name != NULL; s++) {",
      "395:     if ((!strcmp(s->name, \"unixlogin\") ||",
      "397:       return TRUE;",
      "398:   }",
      "",
      "[Removed Lines]",
      "396:          !strcmp(&s->name[strlen(s->name) - 5], \"plain\")) && s->enabled)",
      "",
      "[Added Lines]",
      "396:          strstr(s->name, \"plain\")) && s->enabled)",
      "",
      "---------------"
    ],
    "unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c||unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c": [
      "File: unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c -> unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1315:       flags = Swap32IfLE(msg.f.flags);",
      "1320:         rfbLog(\"Ignoring fence.  Payload of %d bytes is too large.\\n\",",
      "1321:                msg.f.length);",
      "1323:         HandleFence(cl, flags, msg.f.length, data);",
      "1324:       return;",
      "1325:     }",
      "",
      "[Removed Lines]",
      "1317:       READ(data, msg.f.length)",
      "1319:       if (msg.f.length > sizeof(data))",
      "1322:       else",
      "",
      "[Added Lines]",
      "1317:       if (msg.f.length > sizeof(data)) {",
      "1320:         SKIP(msg.f.length)",
      "1321:       } else {",
      "1322:         READ(data, msg.f.length)",
      "1324:       }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5d5c7140058ff648a71d27d7a690f53aa1c7963f",
      "candidate_info": {
        "commit_hash": "5d5c7140058ff648a71d27d7a690f53aa1c7963f",
        "repo": "TurboVNC/turbovnc",
        "commit_url": "https://github.com/TurboVNC/turbovnc/commit/5d5c7140058ff648a71d27d7a690f53aa1c7963f",
        "files": [
          "ChangeLog.md",
          "doc/auth.txt",
          "doc/compatibility.txt",
          "doc/config.txt",
          "doc/index.html",
          "doc/newconn-java.png",
          "doc/newconn-win.png",
          "doc/overview.txt",
          "doc/performance.txt",
          "doc/prefix.txt",
          "doc/sysreq.txt",
          "doc/unixauth-win.png",
          "doc/usage.txt",
          "doc/vgltransportservernetwork.odg",
          "doc/vgltransportservernetwork.png",
          "doc/vglusage.txt",
          "doc/vncauth-win.png",
          "doc/x11transport.odg",
          "doc/x11transport.png",
          "java/com/turbovnc/vncviewer/VncViewer.java",
          "java/com/turbovnc/vncviewer/VncViewer.jnlp.in",
          "release/ReadMe.txt",
          "unix/Xvnc/README",
          "unix/Xvnc/programs/Xserver/Xvnc.man",
          "unix/Xvnc/programs/Xserver/hw/vnc/README",
          "unix/Xvnc/programs/Xserver/hw/vnc/auth.c",
          "unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c",
          "unix/turbovncserver-security.conf",
          "unix/turbovncserver.conf",
          "unix/vncconnect/vncconnect.c",
          "unix/vncconnect/vncconnect.man",
          "unix/vncpasswd/vncpasswd.man",
          "unix/vncserver.in",
          "unix/vncserver.man",
          "unix/vncviewer/vncviewer.man",
          "win/vncviewer/res/vncviewer.rc"
        ],
        "message": "Doc: Use more consistent/standard terminology\n\n- \"server machine\" = \"VNC host\", \"TurboVNC host\", or \"host\", depending\n  on the context\n- \"machine\" = \"host\", when referring to the machine on which the VNC\n  server runs\n- \"server\" = \"host\", when referring to the machine rather than the\n  software\n- \"server\" = \"session\", when referring to a specific instance of Xvnc\n- \"TurboVNC Server session\" = \"TurboVNC session\" (\"TurboVNC Server\n  session\" is redundant)\n- \"server session\" = \"VNC session\", when used generically, or \"TurboVNC\n  session\", when it applies only to TurboVNC\n- \"client\" = \"viewer\", when referring to the software rather than the\n  machine\n- Use specific references to the TurboVNC Server and Viewer (as opposed\n  to generic references, such as \"a TurboVNC server\" or \"TurboVNC\n  viewers\") when referring to performance, since we can't guarantee the\n  same performance with anyone else's software, but leave the generic\n  references when referring to compatibility (mainly because\n  LibVNCServer/LibVNCCLient is arguably \"a TurboVNC server/viewer\",\n  since it uses our codec and all of our extensions.)\n\nChangeLog.md:\n- Fix a factual error in the description of 1.2[6] (not that it matters,\n  given that the applet feature no longer exists)\n\nunix/Xvnc/README:\n- Eliminate vestigial reference to Xorg 7.7\n\nunix/Xvnc/programs/Xserver/Xvnc.man:\n- \"XFree86\" = \"X.org\"\n\nunix/Xvnc/programs/Xserver/hw/vnc/auth.c:\n- Change vestigial \"authentication method\" references to \"security\n  type\", both in identifier names and user-visible messages\n\n+ A few minor formatting tweaks",
        "before_after_code_files": [
          "java/com/turbovnc/vncviewer/VncViewer.java||java/com/turbovnc/vncviewer/VncViewer.java",
          "java/com/turbovnc/vncviewer/VncViewer.jnlp.in||java/com/turbovnc/vncviewer/VncViewer.jnlp.in",
          "unix/Xvnc/programs/Xserver/Xvnc.man||unix/Xvnc/programs/Xserver/Xvnc.man",
          "unix/Xvnc/programs/Xserver/hw/vnc/auth.c||unix/Xvnc/programs/Xserver/hw/vnc/auth.c",
          "unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c||unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c",
          "unix/turbovncserver-security.conf||unix/turbovncserver-security.conf",
          "unix/turbovncserver.conf||unix/turbovncserver.conf",
          "unix/vncconnect/vncconnect.c||unix/vncconnect/vncconnect.c",
          "unix/vncconnect/vncconnect.man||unix/vncconnect/vncconnect.man",
          "unix/vncpasswd/vncpasswd.man||unix/vncpasswd/vncpasswd.man",
          "unix/vncserver.in||unix/vncserver.in",
          "unix/vncserver.man||unix/vncserver.man",
          "unix/vncviewer/vncviewer.man||unix/vncviewer/vncviewer.man",
          "win/vncviewer/res/vncviewer.rc||win/vncviewer/res/vncviewer.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "unix/Xvnc/programs/Xserver/hw/vnc/auth.c||unix/Xvnc/programs/Xserver/hw/vnc/auth.c",
            "unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c||unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c"
          ],
          "candidate": [
            "unix/Xvnc/programs/Xserver/hw/vnc/auth.c||unix/Xvnc/programs/Xserver/hw/vnc/auth.c",
            "unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c||unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c"
          ]
        }
      },
      "candidate_diff": {
        "java/com/turbovnc/vncviewer/VncViewer.java||java/com/turbovnc/vncviewer/VncViewer.java": [
          "File: java/com/turbovnc/vncviewer/VncViewer.java -> java/com/turbovnc/vncviewer/VncViewer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1043:   \"Start the viewer in \\\"listen mode.\\\"  The viewer will listen on port \" +",
          "1044:   \"5500 (or on the port specified by the Port parameter) for reverse \" +",
          "1045:   \"connections from a VNC server.  To connect to a listening viewer from \" +",
          "1048:   static IntParameter maxClipboard =",
          "1049:   new IntParameter(\"MaxClipboard\",",
          "",
          "[Removed Lines]",
          "1046:   \"the Unix/Linux TurboVNC Server, use the vncconnect program.\", false);",
          "",
          "[Added Lines]",
          "1046:   \"the TurboVNC Server, use the vncconnect program.\", false);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1067:   static IntParameter vncServerPort =",
          "1068:   new IntParameter(\"Port\",",
          "1073:   \"If listen mode is enabled, this parameter specifies the TCP port on \" +",
          "1074:   \"which the viewer will listen for connections from a VNC server.  \" +",
          "1075:   \"(default = 5500)\", -1);",
          "",
          "[Removed Lines]",
          "1069:   \"The TCP port number on which the VNC server session is listening.  For \" +",
          "1070:   \"Unix VNC servers, this is typically 5900 + the X display number of the \" +",
          "1071:   \"VNC session (example: 5901 if connecting to display :1.)  For Windows \" +",
          "1072:   \"and Mac VNC servers, this is typically 5900.  (default = 5900)\\n \" +",
          "",
          "[Added Lines]",
          "1069:   \"The TCP port number on which the VNC server is listening.  For Unix VNC \" +",
          "1070:   \"servers, this is typically 5900 + the X display number of the VNC \" +",
          "1071:   \"session (example: 5901 if connecting to display :1.)  For Windows and \" +",
          "1072:   \"Mac VNC servers, this is typically 5900.  (default = 5900)\\n \" +",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1100:   static StringParameter vncServerName =",
          "1101:   new StringParameter(\"Server\",",
          "1102:   \"The VNC server to which to connect.  This can be specified in the \" +",
          "1104:   \"host name or IP address of the machine on which the VNC server is \" +",
          "1108:   static BoolParameter shared =",
          "1109:   new BoolParameter(\"Shared\",",
          "1110:   \"When connecting, request a shared session.  When the session is shared, \" +",
          "1111:   \"other users can connect to the session (assuming they have the correct \" +",
          "1112:   \"authentication credentials) and collaborate with the user who started \" +",
          "1114:   \"using default settings, then you will only be able to connect to the \" +",
          "",
          "[Removed Lines]",
          "1103:   \"format <host>[:<display number>] or <host>::<port>, where <host> is the \" +",
          "1105:   \"running, <display number> is an optional X display number (default: 0), \" +",
          "1106:   \"and <port> is a TCP port.\", null);",
          "1113:   \"the session.  If this option is disabled and the TurboVNC Server is \" +",
          "1115:   \"server if no one else is already connected.\", true);",
          "",
          "[Added Lines]",
          "1103:   \"format {host}[:{display_number}] or {host}::{port}, where {host} is the \" +",
          "1105:   \"running (the \\\"VNC host\\\"), {display_number} is an optional X display \" +",
          "1106:   \"number (default: 0), and {port} is a TCP port.\", null);",
          "1113:   \"the session.  If this option is disabled and the TurboVNC session is \" +",
          "1115:   \"session if no one else is already connected.\", true);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1177:   static BoolParameter acceptBell =",
          "1178:   new BoolParameter(\"AcceptBell\",",
          "1182:   static IntParameter colors =",
          "1183:   new IntParameter(\"Colors\",",
          "",
          "[Removed Lines]",
          "1179:   \"Produce a system beep when a \\\"bell\\\" event is received from the server.\",",
          "1180:   true);",
          "",
          "[Added Lines]",
          "1179:   \"Produce a system beep when a \\\"bell\\\" event is received from the VNC \" +",
          "1180:   \"server.\", true);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1219:   \"mouse responsiveness.  Disabling this option causes the server to \" +",
          "1220:   \"instead draw the mouse cursor and send it to the viewer as an image \" +",
          "1221:   \"every time the cursor moves.  Thus, using a remote cursor can increase \" +",
          "1223:   \"cause performance problems on slow networks.  However, using a remote \" +",
          "1224:   \"cursor can be advantageous with shared sessions, since it will allow you \" +",
          "1225:   \"to see the cursor movements of other connected users.\", true);",
          "",
          "[Removed Lines]",
          "1222:   \"network \\\"chatter\\\" between server and client significantly, which may \" +",
          "",
          "[Added Lines]",
          "1222:   \"network \\\"chatter\\\" between host and client significantly, which may \" +",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1396:   \"Encrypted password to use when authenticating with the VNC server.  The \" +",
          "1397:   \"encrypted password should be in the same ASCII hex format used by \" +",
          "1398:   \"TurboVNC connection info (.vnc) files.  For instance, you can generate \" +",
          "1400:   \"'cat {VNC_password_file} | xxd -c 256 -ps' or\\n \" +",
          "1401:   \"'echo {unencrypted_password} | /opt/TurboVNC/bin/vncpasswd -f | xxd -c 256 -ps'\\n \" +",
          "1402:   \"This parameter is provided mainly so that web portals can embed a \" +",
          "",
          "[Removed Lines]",
          "1399:   \"an ASCII hex VNC password on the TurboVNC server machine by executing\\n \" +",
          "",
          "[Added Lines]",
          "1399:   \"an ASCII hex VNC password on the TurboVNC host by executing\\n \" +",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1432:   \"VeNCrypt-compatible servers.  Setting this parameter has the effect of \" +",
          "1433:   \"removing \\\"Plain\\\" (and its encrypted derivatives) and \\\"UnixLogin\\\" \" +",
          "1434:   \"from the SecurityTypes parameter.  This is useful if the server is \" +",
          "1438:   false);",
          "1440:   static StringParameter password =",
          "",
          "[Removed Lines]",
          "1435:   \"configured to prefer an authentication method that supports \" +",
          "1436:   \"Unix Login/Plain authentication and you want to override that preference \" +",
          "1437:   \"for a particular connection (for instance, to use a one-time password.)\",",
          "",
          "[Added Lines]",
          "1435:   \"configured to prefer a security type that supports Unix Login/Plain \" +",
          "1436:   \"authentication and you want to override that preference for a particular \" +",
          "1437:   \"connection (for instance, to use a one-time password.)\",",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1447:   new StringParameter(\"PasswordFile\",",
          "1448:   \"Password file from which to read the password for Standard VNC \" +",
          "1449:   \"authentication.  This is useful if your home directory is shared between \" +",
          "1452:   static AliasParameter passwd =",
          "1453:   new AliasParameter(\"passwd\",",
          "",
          "[Removed Lines]",
          "1450:   \"the client and server machines.\", null);",
          "",
          "[Added Lines]",
          "1450:   \"the client machine and VNC host.\", null);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1498:   static BoolParameter tunnel =",
          "1499:   new BoolParameter(\"Tunnel\",",
          "1500:   \"This is the same as using Via with an SSH gateway, except that the \" +",
          "1502:   \"need to specify it separately.  The VNC server must be specified on the \" +",
          "1503:   \"command line or in the Server parameter when using the Tunnel parameter. \" +",
          "1508:   static StringParameter user =",
          "1509:   new StringParameter(\"User\",",
          "",
          "[Removed Lines]",
          "1501:   \"gateway is assumed to be the same as the VNC server host, so you do not \" +",
          "1504:   \"When using the Tunnel parameter, the VNC server host can be prefixed by \" +",
          "1505:   \"<user>@ to indicate that user name <user> (default = local user name) \" +",
          "1506:   \"should be used when authenticating with the SSH server.\", false);",
          "",
          "[Added Lines]",
          "1501:   \"gateway host is assumed to be the same as the VNC host, so you do not \" +",
          "1504:   \"When using the Tunnel parameter, the VNC host can be prefixed by {user}@ \" +",
          "1505:   \"to indicate that user name {user} (default = local user name) should be \" +",
          "1506:   \"used when authenticating with the SSH server.\", false);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1518:   new StringParameter(\"Via\",",
          "1519:   \"This parameter specifies an SSH server or UltraVNC repeater \" +",
          "1520:   \"(\\\"gateway\\\") through which the VNC connection should be tunneled.  Note \" +",
          "",
          "[Removed Lines]",
          "1521:   \"that when using the Via parameter, the VNC server host should be \" +",
          "1522:   \"specified from the point of view of the gateway.  For example, \" +",
          "1523:   \"specifying Via=gateway_machine Server=localhost:1 will connect to \" +",
          "1524:   \"display :1 on gateway_machine using the SSH server running on that same \" +",
          "1525:   \"machine.  Similarly, specifying Via=gateway_machine:0 Server=localhost:1 \" +",
          "1526:   \"will connect to display :1 on gateway_machine using the UltraVNC \" +",
          "1527:   \"repeater running on that same machine and listening on port 5900 (VNC \" +",
          "1528:   \"display :0.)  The VNC server must be specified on the command line or in \" +",
          "1529:   \"the Server parameter when using the Via parameter.  If using the \" +",
          "1530:   \"UltraVNC Repeater in \\\"Mode II\\\", then specify ID:xxxx as the VNC server \" +",
          "1531:   \"name, where xxxx is the ID number of the VNC server to which you want to \" +",
          "1532:   \"connect.  If using an SSH server, then the Via parameter can be prefixed \" +",
          "1533:   \"by <user>@ to indicate that user name <user> (default = local user name) \" +",
          "1534:   \"should be used when authenticating with the SSH server.\", null);",
          "",
          "[Added Lines]",
          "1521:   \"that when using the Via parameter, the VNC host should be specified from \" +",
          "1522:   \"the point of view of the gateway.  For example, specifying \" +",
          "1523:   \"Via={gateway_host} Server=localhost:1 will connect to display :1 on \" +",
          "1524:   \"{gateway_host} using the SSH server running on that same host.  \" +",
          "1525:   \"Similarly, specifying Via={gateway_host}:0 Server=localhost:1 will \" +",
          "1526:   \"connect to display :1 on {gateway_host} using the UltraVNC repeater \" +",
          "1527:   \"running on that same host and listening on port 5900 (VNC display :0.)  \" +",
          "1528:   \"The VNC server must be specified on the command line or in the Server \" +",
          "1529:   \"parameter when using the Via parameter.  If using the UltraVNC Repeater \" +",
          "1530:   \"in \\\"Mode II\\\", then specify ID:xxxx as the VNC server name, where xxxx \" +",
          "1531:   \"is the ID number of the VNC server to which you want to connect.  If \" +",
          "1532:   \"using an SSH server, then the Via parameter can be prefixed by {user}@ \" +",
          "1533:   \"to indicate that user name {user} (default = local user name) should be \" +",
          "1534:   \"used when authenticating with the SSH server.\", null);",
          "",
          "---------------"
        ],
        "java/com/turbovnc/vncviewer/VncViewer.jnlp.in||java/com/turbovnc/vncviewer/VncViewer.jnlp.in": [
          "File: java/com/turbovnc/vncviewer/VncViewer.jnlp.in -> java/com/turbovnc/vncviewer/VncViewer.jnlp.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:      embedded in Xvnc will substitute the following variables when preceded by",
          "6:      a dollar sign:",
          "9:      DESKTOP - the VNC session name",
          "11:      PORT - TCP port on which the VNC server is listening (e.g. 5901)",
          "13:      Use two dollar signs ($$) to get a dollar sign in the generated JNLP file.",
          "",
          "[Removed Lines]",
          "8:      USER - the user account under which the VNC server session is running",
          "10:      DISPLAY - hostname:display_number of the VNC server session",
          "",
          "[Added Lines]",
          "8:      USER - the user account under which the VNC session is running",
          "10:      DISPLAY - hostname:display_number of the VNC session",
          "",
          "---------------"
        ],
        "unix/Xvnc/programs/Xserver/Xvnc.man||unix/Xvnc/programs/Xserver/Xvnc.man": [
          "File: unix/Xvnc/programs/Xserver/Xvnc.man -> unix/Xvnc/programs/Xserver/Xvnc.man",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: .\\\" License as specified in the file LICENCE.TXT that comes with the",
          "14: .\\\" TightVNC distribution.",
          "15: .\\\"",
          "17: .SH NAME",
          "19: .SH SYNOPSIS",
          "20: .TP",
          "21: .nh",
          "",
          "[Removed Lines]",
          "16: .TH Xvnc 1 \"May 2018\" \"\" \"TurboVNC\"",
          "18: Xvnc \\- an X server providing VNC connectivity",
          "",
          "[Added Lines]",
          "16: .TH Xvnc 1 \"October 2018\" \"\" \"TurboVNC\"",
          "18: Xvnc \\- the TurboVNC X server",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47: systems.  It acts like a normal X server, except that it sends its output",
          "48: to a virtual rather than a physical display.  Remote machines can connect",
          "49: to the VNC server and see/control the output of this virtual display",
          "53: Normally, you don't need to start Xvnc manually-- use the",
          "54: \\fBvncserver\\fR(1) wrapper script instead.  This script sets reasonable",
          "57: Please read the SECURITY CONCERNS section if you plan to use VNC on an",
          "58: untrusted network.",
          "",
          "[Removed Lines]",
          "50: [see \\fBvncviewer\\fR(1).]  Xvnc is built using the XFree86 source code and",
          "51: shares many options with it.",
          "55: defaults for the Xvnc session, checks many error conditions, etc.",
          "",
          "[Added Lines]",
          "50: [see \\fBvncviewer\\fR(1).]  Xvnc is built using the X.org source code and shares",
          "51: many options with it.",
          "55: defaults for the TurboVNC session, checks many error conditions, etc.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "104: .TP",
          "105: \\fB-securitytypes\\fR \\fItype-list\\fR",
          "106: \\fItype-list\\fR is a comma-separated list of security types that should be",
          "110: \\fItype-list\\fR contains no permitted security types, then Xvnc will exit with",
          "111: an error.  If this argument is not specified, then Xvnc uses a default value of",
          "112: \"TLSVnc, TLSOtp, TLSPlain, X509Vnc, X509Otp, X509Plain, VNC, OTP, UnixLogin,",
          "",
          "[Removed Lines]",
          "107: enabled for this Xvnc session.  Refer to the SECURITY OVERVIEW section below",
          "108: for a description of available security types.  Only security types that are",
          "109: permitted in the security configuration file will actually be enabled.  If",
          "",
          "[Added Lines]",
          "107: enabled for this TurboVNC session.  Refer to the SECURITY OVERVIEW section",
          "108: below for a description of available security types.  Only security types that",
          "109: are permitted in the security configuration file will actually be enabled.  If",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "136: the SECURITY CONFIGURATION FILE section for more details.",
          "137: .TP",
          "138: \\fB\\-noreverse\\fR",
          "140: This option can be set for all TurboVNC sessions on this system by using the",
          "141: \\fIno-reverse-connections\\fR directive in the security configuration",
          "142: file.  See the SECURITY CONFIGURATION FILE section for more details.",
          "",
          "[Removed Lines]",
          "139: Do not allow reverse VNC connections to be made from this Xvnc session.",
          "",
          "[Added Lines]",
          "139: Do not allow reverse VNC connections to be made from this TurboVNC session.",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "161: Set the maximum clipboard transfer size to \\fIbytes\\fR.",
          "162: .TP",
          "163: \\fB\\-idletimeout\\fR \\fItime\\fR",
          "165: connections) before it automatically exits (default: no timeout.)  This",
          "166: argument has no effect if the \\fImax-idle-timeout\\fR directive is specified in",
          "167: the security configuration file and if that value is lower than",
          "",
          "[Removed Lines]",
          "164: Time, in seconds, which the TurboVNC Server can sit idle (with no VNC viewer",
          "",
          "[Added Lines]",
          "164: Time, in seconds, which the TurboVNC session can sit idle (with no VNC viewer",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "172: .TP",
          "173: \\fB\\-httpport\\fR \\fIport\\fR",
          "174: TCP port that the server should use when listening for connections from",
          "176: .TP",
          "177: \\fB\\-deferupdate\\fR \\fItime\\fR",
          "178: Time, in milliseconds, for which to defer screen updates (default: 40).",
          "",
          "[Removed Lines]",
          "175: Java-enabled web browsers.",
          "",
          "[Added Lines]",
          "175: web browsers.",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "193: 100% full.",
          "194: .TP",
          "195: \\fB\\-alr\\fR \\fItime\\fR",
          "204: The default behavior is to only allow regions drawn using X[Shm]PutImage() or",
          "205: CopyRect to be eligible for ALR.  The intent of this behavior is to restrict",
          "",
          "[Removed Lines]",
          "196: Enable the automatic lossless refresh (ALR) feature for this Xvnc session and",
          "197: set the timeout to \\fItime\\fR seconds.  If ALR is enabled and no framebuffer",
          "198: updates have been sent to a given viewer in the past \\fItime\\fR seconds, and if",
          "199: \"eligible\" areas of the screen have been transmitted to that viewer using JPEG",
          "200: since the last lossless refresh, then those areas of the screen are",
          "201: re-transmitted using mathematically lossless image compression (specifically,",
          "202: the Lossless Tight + Zlib encoding method.)",
          "",
          "[Added Lines]",
          "196: Enable the automatic lossless refresh (ALR) feature for this TurboVNC session",
          "197: and set the timeout to \\fItime\\fR seconds.  If ALR is enabled and no",
          "198: framebuffer updates have been sent to a given viewer in the past \\fItime\\fR",
          "199: seconds, and if \"eligible\" areas of the screen have been transmitted to that",
          "200: viewer using JPEG since the last lossless refresh, then those areas of the",
          "201: screen are re-transmitted using mathematically lossless image compression",
          "202: (specifically, the Lossless Tight + Zlib encoding method.)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "245: \\fBRemote\\ X\\ Input\\ Mode\\fR (default)",
          "260: \\fBVirtual\\ Tablet\\ Mode\\fR (enabled with this command-line option)",
          "",
          "[Removed Lines]",
          "247: X Input devices are created in the TurboVNC X server only when a viewer",
          "248: requests their creation.  For instance, the TurboVNC Un*x/Linux Viewer sends",
          "249: information about client-side X Input extended pointer devices to the server,",
          "250: and the server makes copies of those devices.  The viewer then sends extended",
          "251: input events from the client-side devices to the server, where they are mapped",
          "252: to the respective copies of the client-side devices.  If another viewer",
          "253: attempts to create a remote X Input device with the same name, then the",
          "254: existing server-side device is shared with the new viewer.  The server-side",
          "255: devices are deleted automatically when all viewers that use them have",
          "256: disconnected.  This is the most flexible way of handling extended input",
          "257: devices, because it allows any generic X Input pointer device (spaceballs,",
          "258: tablets, etc.) on the client machine to be used by the server.",
          "",
          "[Added Lines]",
          "247: X Input devices are created in the TurboVNC session only when a viewer requests",
          "248: their creation.  For instance, the TurboVNC Un*x/Linux Viewer sends information",
          "249: about client-side X Input extended pointer devices to the server, and the",
          "250: server makes copies of those devices.  The viewer then sends extended input",
          "251: events from the client-side devices to the server, where they are mapped to the",
          "252: respective copies of the client-side devices.  If another viewer attempts to",
          "253: create a remote X Input device with the same name, then the existing",
          "254: server-side device is shared with the new viewer.  The server-side devices are",
          "255: deleted automatically when all viewers that use them have disconnected.  This",
          "256: is the most flexible way of handling extended input devices, because it allows",
          "257: any generic X Input pointer device (spaceballs, tablets, etc.) on the client",
          "258: machine to be used by the server.",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "263: touch, and pad devices designed to emulate a Wacom tablet, and it maps all",
          "264: extended input events from all viewers to these devices (events from",
          "265: client-side stylus, eraser, touch, and pad devices are mapped to the",
          "274: .TP",
          "275: \\fB\\-economictranslate\\fR",
          "276: Use less memory-hungry pixel format translation.",
          "",
          "[Removed Lines]",
          "266: corresponding virtual device on the server, and other events are ignored.) This",
          "267: mode is less generic than Remote X Input Mode, and it probably will not work",
          "268: with devices other than tablets (perhaps not even with non-Wacom tablets.)",
          "269: Virtual Tablet mode is useful when running specific applications from",
          "270: xstartup.turbovnc, rather than a window manager.  Because applications usually",
          "271: check for the presence of X Input devices at startup, by the time the first",
          "272: viewer connects and requests that the client-side devices be cloned, it is too",
          "273: late.",
          "",
          "[Added Lines]",
          "266: corresponding virtual device in the TurboVNC session, and other events are",
          "267: ignored.)  This mode is less generic than Remote X Input Mode, and it probably",
          "268: will not work with devices other than tablets (perhaps not even with non-Wacom",
          "269: tablets.)  Virtual Tablet mode is useful when running specific applications",
          "270: from xstartup.turbovnc, rather than a window manager.  Because applications",
          "271: usually check for the presence of X Input devices at startup, by the time the",
          "272: first viewer connects and requests that the client-side devices be cloned, it",
          "273: is too late.",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "280: .TP",
          "281: \\fB\\-alwaysshared\\fR",
          "282: Always treat new connections as shared.  Never disconnect existing users",
          "285: .TP",
          "286: \\fB\\-nevershared\\fR",
          "287: Never treat new connections as shared.  Do not allow simultaneous user",
          "289: .TP",
          "290: \\fB\\-disconnect\\fR",
          "291: Disconnect existing users when a new non-shared connection is established,",
          "",
          "[Removed Lines]",
          "283: or deny new connections when a new user tries to connect to a VNC session that",
          "284: is already occupied.",
          "288: connections to the same VNC session.",
          "",
          "[Added Lines]",
          "283: or deny new connections when a new user tries to connect to a TurboVNC session",
          "284: that is already occupied.",
          "288: connections to the same TurboVNC session.",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "362: access can be created using the \\fBvncpasswd\\fR(1) utility.  OTPs are discarded",
          "363: by Xvnc immediately after they are used, so an additional OTP must be generated",
          "364: before another user is allowed to connect using this method.  OTP",
          "370: .IP \\fBPAM\\ User/Password\\fR",
          "371: Authenticate using Pluggable Authentication Modules (PAM).  This authentication",
          "",
          "[Removed Lines]",
          "365: authentication is handy for sharing a VNC session with another person with whom",
          "366: you do not wish to share your VNC password.  This authentication method uses",
          "367: the Standard VNC authentication scheme to receive authentication credentials",
          "368: from a VNC viewer.",
          "",
          "[Added Lines]",
          "365: authentication is handy for sharing a TurboVNC session with another person with",
          "366: whom you do not wish to share your VNC password.  This authentication method",
          "367: uses the Standard VNC authentication scheme to receive authentication",
          "368: credentials from a VNC viewer.",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "494: order in which authentication schemes are advertised to VNC viewers.  For",
          "495: instance, if \"UnixLogin\" is listed first, then the TurboVNC Viewer will",
          "496: default to using Unix Login authentication when connecting to any TurboVNC",
          "500: If the security configuration file does not exist or",
          "501: \\fIpermitted-security-types\\fR is not specified, then Xvnc behaves as if",
          "",
          "[Removed Lines]",
          "497: sessions on this server.  Similarly, if \"VNC\" or \"OTP\" is listed first, then",
          "498: the TurboVNC Viewer will default to using Standard VNC authentication.",
          "",
          "[Added Lines]",
          "497: sessions on this host.  Similarly, if \"VNC\" or \"OTP\" is listed first, then the",
          "498: TurboVNC Viewer will default to using Standard VNC authentication.",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "529: \\fB/etc/turbovncserver-security.conf\\fR.  For security reasons, this pathname",
          "530: is hard-coded into the Xvnc executable and cannot be changed without rebuilding",
          "531: Xvnc.  If present, the security configuration file must be owned by",
          "535: Comment lines start with a hash (#) character.  Spaces and tabs are",
          "536: ignored on lines containing configuration directives.  The configuration",
          "",
          "[Removed Lines]",
          "532: either root or by the user who started the Xvnc server, and the file may not be",
          "533: writable by others.",
          "",
          "[Added Lines]",
          "532: either root or by the user who started the TurboVNC session, and the file may",
          "533: not be writable by others.",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "539: .IP \\fIenable-user-acl\\fR",
          "540: If the \"PAM User/Password\" authentication method is used, then this directive",
          "547: .IP \\fImax-idle-timeout\\fR=\\fItime\\fR",
          "548: This specifies the maximum idle timeout (in seconds) for all TurboVNC sessions",
          "555: .IP \\fImax-desktop-size\\fR=\\fIwidth\\fRx\\fIheight\\fR",
          "556: This specifies the maximum desktop size for all TurboVNC sessions started on",
          "562: .IP \\fIno-clipboard-send\\fR",
          "566: .IP \\fIno-clipboard-recv\\fR",
          "570: .IP \\fIno-reverse-connections\\fR",
          "575: .IP \\fIno-remote-connections\\fR",
          "578: effectively forces the use of SSH tunneling to make inbound remote connections.",
          "580: .IP \\fIno-httpd\\fR",
          "584: .IP \\fIno-x11-tcp-connections\\fR",
          "588: .IP \\fIno-pam-sessions\\fR",
          "592: .IP \\fIpam-service-name\\fR=\\fIsvcname\\fR",
          "593: Sets the service name to be used when Xvnc performs PAM authentication.  The",
          "",
          "[Removed Lines]",
          "541: enables the Xvnc server's internal user access control list (ACL) to further",
          "542: limit which users will be permitted to attempt PAM authentication.  Users can",
          "543: be added to or removed from this list using the \\fBvncpasswd\\fR(1) utility.",
          "544: The user who started the Xvnc server will automatically be added to the access",
          "545: control list.",
          "549: started on this machine.  The idle timeout is the amount of time that a",
          "550: TurboVNC session can remain idle (with no VNC viewer connections) before",
          "551: Xvnc automatically exits.  If this value is set to a number greater than 0,",
          "552: then all TurboVNC sessions on this machine will use this idle timeout value by",
          "553: default, and the user will only be allowed to override it with a lower value.",
          "557: this machine.  If a user attempts to start a session with a larger geometry",
          "558: than this or to use remote desktop resizing to increase the desktop size to a",
          "559: size larger than this, the desktop size will be clamped to",
          "560: \\fIwidth\\fRx\\fIheight\\fR.",
          "563: This prevents any TurboVNC server sessions started on this machine from",
          "564: sending clipboard changes to their connected viewers.",
          "567: This prevents any TurboVNC server sessions started on this machine from",
          "568: receiving clipboard changes from their connected viewers.",
          "571: Do not allow reverse connections to be made from any TurboVNC server started on",
          "572: this machine.  This causes Xvnc to ignore requests from the",
          "573: \\fBvncconnect\\fR(1) utility.",
          "576: Do not allow inbound remote connections to be made to any TurboVNC server",
          "577: started on this machine.  Only connections from localhost can be made, which",
          "581: Disable the built-in HTTP server in all TurboVNC servers started on this",
          "582: machine.",
          "585: Do not allow X11 TCP connections to any TurboVNC server started on this",
          "586: machine.",
          "589: Do not allow PAM sessions to be created for any TurboVNC servers started on",
          "590: this machine.",
          "",
          "[Added Lines]",
          "541: enables an internal user access control list (ACL) in all TurboVNC sessions",
          "542: started on this host, to further limit which users will be permitted to attempt",
          "543: PAM authentication.  Users can be added to or removed from this list using the",
          "544: \\fBvncpasswd\\fR(1) utility.  The user who started the TurboVNC session will",
          "545: automatically be added to the session's access control list.",
          "549: started on this host.  The idle timeout is the amount of time that a TurboVNC",
          "550: session can remain idle (with no VNC viewer connections) before Xvnc",
          "551: automatically exits.  If this value is set to a number greater than 0, then all",
          "552: TurboVNC sessions on this host will use this idle timeout value by default, and",
          "553: the user will only be allowed to override it with a lower value.",
          "557: this host.  If a user attempts to start a session with a larger geometry than",
          "558: this or to use remote desktop resizing to increase the desktop size to a size",
          "559: larger than this, the desktop size will be clamped to \\fIwidth\\fRx\\fIheight\\fR.",
          "562: This prevents any TurboVNC sessions started on this host from sending clipboard",
          "563: changes to their connected viewers.",
          "566: This prevents any TurboVNC sessions started on this host from receiving",
          "567: clipboard changes from their connected viewers.",
          "570: Do not allow reverse connections to be made from any TurboVNC session started",
          "571: on this host.  This causes Xvnc to ignore requests from the \\fBvncconnect\\fR(1)",
          "572: utility.",
          "575: Do not allow inbound remote connections to be made to any TurboVNC session",
          "576: started on this host.  Only connections from localhost can be made, which",
          "580: Disable the built-in HTTP server in all TurboVNC sessions started on this host.",
          "583: Do not allow X11 TCP connections to any TurboVNC session started on this host.",
          "586: Do not allow PAM sessions to be created for any TurboVNC sessions started on",
          "587: this host.",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "612: .P",
          "613: Even when used with encryption, there are other security problems inherent in",
          "614: the design of VNC.  Thus, it is recommended that you restrict network access to",
          "617: (using the \\fB\\-localhost\\fR option or the \\fIno-remote-connections\\fR security",
          "618: configuration file directive) and to use SSH tunneling for remote access",
          "621: .P",
          "622: It is incumbent upon the system administrator to ensure that a security type",
          "623: meets the security requirements for a particular site before it is permitted to",
          "",
          "[Removed Lines]",
          "615: Xvnc servers from untrusted network addresses.  Probably the best way to secure",
          "616: an Xvnc server is to allow only loopback connections from the server machine",
          "619: to the Xvnc server.  For details on using TurboVNC with SSH tunneling, see the",
          "620: TurboVNC User's Guide.",
          "",
          "[Added Lines]",
          "612: TurboVNC sessions from untrusted network addresses.  Probably the best way to",
          "613: secure a TurboVNC session is to allow only loopback connections from the host",
          "616: to the TurboVNC session.  For details on using TurboVNC with SSH tunneling, see",
          "617: the TurboVNC User's Guide.",
          "",
          "---------------"
        ],
        "unix/Xvnc/programs/Xserver/hw/vnc/auth.c||unix/Xvnc/programs/Xserver/hw/vnc/auth.c": [
          "File: unix/Xvnc/programs/Xserver/hw/vnc/auth.c -> unix/Xvnc/programs/Xserver/hw/vnc/auth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: Bool rfbAuthDisableHTTP = FALSE;",
          "68: Bool rfbAuthDisableX11TCP = FALSE;",
          "71: static int preferenceLimit = 1;  /* Force one iteration of the loop in",
          "",
          "[Removed Lines]",
          "70: static int nAuthMethodsEnabled = 0;",
          "",
          "[Added Lines]",
          "70: static int nSecTypesEnabled = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "249:   int protocolMinorVer;",
          "250:   Bool advertise;",
          "251:   CARD8 securityType;",
          "258:   { \"vencrypt\", 7, TRUE, rfbSecTypeVeNCrypt };",
          "261:   &secTypeNone, &secTypeVncAuth, &secTypeVeNCrypt, &secTypeTight, NULL",
          "262: };",
          "",
          "[Removed Lines]",
          "252: } SecTypeData;",
          "254: static SecTypeData secTypeNone    = { \"none\",    3, TRUE, rfbSecTypeNone };",
          "255: static SecTypeData secTypeVncAuth = { \"vncauth\", 3, TRUE, rfbSecTypeVncAuth };",
          "256: static SecTypeData secTypeTight   = { \"tight\",   7, TRUE, rfbSecTypeTight };",
          "257: static SecTypeData secTypeVeNCrypt =",
          "260: static SecTypeData *secTypes[] = {",
          "",
          "[Added Lines]",
          "252: } RFBSecTypeData;",
          "254: static RFBSecTypeData secTypeNone =",
          "255:   { \"none\",    3, TRUE, rfbSecTypeNone };",
          "256: static RFBSecTypeData secTypeVncAuth =",
          "257:   { \"vncauth\", 3, TRUE, rfbSecTypeVncAuth };",
          "258: static RFBSecTypeData secTypeTight =",
          "259:   { \"tight\",   7, TRUE, rfbSecTypeTight };",
          "260: static RFBSecTypeData secTypeVeNCrypt =",
          "263: static RFBSecTypeData *rfbSecTypes[] = {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "303:   Bool permitted;",
          "304:   int preference;",
          "305:   Bool requiredData;",
          "307:   AuthCapData *authCap;",
          "308:   int subType;",
          "321: #if USETLS",
          "323:   { \"tlsnone\",   FALSE,   TRUE,      -1,         FALSE,",
          "",
          "[Removed Lines]",
          "306:   SecTypeData *secType;",
          "309: } AuthMethodData;",
          "320: static AuthMethodData authMethods[] = {",
          "",
          "[Added Lines]",
          "309:   RFBSecTypeData *rfbSecType;",
          "312: } SecTypeData;",
          "324: static SecTypeData secTypes[] = {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "374: Bool rfbOptOtpAuth(void)",
          "375: {",
          "380:       return TRUE;",
          "381:   }",
          "",
          "[Removed Lines]",
          "376:   AuthMethodData *a;",
          "378:   for (a = authMethods; a->name != NULL; a++) {",
          "379:     if (!strcmp(&a->name[strlen(a->name) - 3], \"otp\") && a->enabled)",
          "",
          "[Added Lines]",
          "380:   SecTypeData *s;",
          "382:   for (s = secTypes; s->name != NULL; s++) {",
          "383:     if (!strcmp(&s->name[strlen(s->name) - 3], \"otp\") && s->enabled)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "387: Bool rfbOptPamAuth(void)",
          "388: {",
          "394:       return TRUE;",
          "395:   }",
          "",
          "[Removed Lines]",
          "389:   AuthMethodData *a;",
          "391:   for (a = authMethods; a->name != NULL; a++) {",
          "392:     if ((!strcmp(a->name, \"unixlogin\") ||",
          "393:          !strcmp(&a->name[strlen(a->name) - 5], \"plain\")) && a->enabled)",
          "",
          "[Added Lines]",
          "393:   SecTypeData *s;",
          "395:   for (s = secTypes; s->name != NULL; s++) {",
          "396:     if ((!strcmp(s->name, \"unixlogin\") ||",
          "397:          !strcmp(&s->name[strlen(s->name) - 5], \"plain\")) && s->enabled)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "401: Bool rfbOptRfbAuth(void)",
          "402: {",
          "407:       return TRUE;",
          "408:   }",
          "",
          "[Removed Lines]",
          "403:   AuthMethodData *a;",
          "405:   for (a = authMethods; a->name != NULL; a++) {",
          "406:     if (!strcmp(&a->name[strlen(a->name) - 3], \"vnc\") && a->enabled)",
          "",
          "[Added Lines]",
          "407:   SecTypeData *s;",
          "409:   for (s = secTypes; s->name != NULL; s++) {",
          "410:     if (!strcmp(&s->name[strlen(s->name) - 3], \"vnc\") && s->enabled)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "414: void rfbAuthParseCommandLine(char *securityTypes)",
          "415: {",
          "416:   char *p1 = securityTypes, *p2 = securityTypes;",
          "422:   do {",
          "",
          "[Removed Lines]",
          "417:   AuthMethodData *a;",
          "419:   for (a = authMethods; a->name != NULL; a++)",
          "420:     a->enabled = FALSE;",
          "",
          "[Added Lines]",
          "421:   SecTypeData *s;",
          "423:   for (s = secTypes; s->name != NULL; s++)",
          "424:     s->enabled = FALSE;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "431:     if (p1 == NULL)",
          "432:       break;",
          "437:         break;",
          "438:       }",
          "439:     }",
          "442:       FatalError(\"ERROR: Unknown security type '%s'\", p1);",
          "443:   }",
          "444: }",
          "448: {",
          "449:   char *saveptr = NULL;",
          "450:   char *p;",
          "453:   preferenceLimit = 0;",
          "458:   }",
          "460:   while (TRUE) {",
          "",
          "[Removed Lines]",
          "434:     for (a = authMethods; a->name != NULL; a++) {",
          "435:       if (!strcasecmp(a->name, p1)) {",
          "436:         a->enabled = TRUE;",
          "441:     if (a->name == NULL)",
          "447: static void setMethods(char *buf, Bool backwardCompatible)",
          "451:   AuthMethodData *a;",
          "454:   for (a = authMethods; a->name != NULL; a++) {",
          "455:     a->permitted = FALSE;",
          "456:     a->preference = -1;",
          "457:     a->secType->advertise = FALSE;",
          "",
          "[Added Lines]",
          "438:     for (s = secTypes; s->name != NULL; s++) {",
          "439:       if (!strcasecmp(s->name, p1)) {",
          "440:         s->enabled = TRUE;",
          "445:     if (s->name == NULL)",
          "451: static void setSecTypes(char *buf, Bool backwardCompatible)",
          "455:   SecTypeData *s;",
          "458:   for (s = secTypes; s->name != NULL; s++) {",
          "459:     s->permitted = FALSE;",
          "460:     s->preference = -1;",
          "461:     s->rfbSecType->advertise = FALSE;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "463:     if (p == NULL)",
          "464:       break;",
          "468:         continue;",
          "471:            !strcasecmp(p, \"pam-userpwd\")))",
          "472:         break;",
          "473:     }",
          "480:   }",
          "481: }",
          "484: void rfbAuthListAvailableSecurityTypes(void)",
          "485: {",
          "487:   int chars = 23;",
          "489:   ErrorF(\"                       Available security types (case-insensitive):\\n\");",
          "490:   ErrorF(\"                       \");",
          "494:       ErrorF(\", \");  chars += 2;",
          "496:         ErrorF(\"\\n                       \");",
          "497:         chars = 23;",
          "498:       }",
          "",
          "[Removed Lines]",
          "466:     for (a = authMethods; a->name != NULL; a++) {",
          "467:       if (backwardCompatible && a->secType == &secTypeVeNCrypt)",
          "469:       if (!strcasecmp(a->name, p) ||",
          "470:           (backwardCompatible && !strcasecmp(a->name, \"unixlogin\") &&",
          "475:     if (a->name == NULL)",
          "476:       FatalError(\"ERROR: Unknown auth method name '%s'\", p);",
          "478:     a->permitted = TRUE;",
          "479:     a->preference = preferenceLimit++;",
          "486:   AuthMethodData *a;",
          "491:   for (a = authMethods; a->name != NULL; a++) {",
          "492:     ErrorF(\"%s\", a->name);  chars += strlen(a->name);",
          "493:     if ((a + 1)->name != NULL) {",
          "495:       if (chars + strlen((a + 1)->name) > 77) {",
          "",
          "[Added Lines]",
          "470:     for (s = secTypes; s->name != NULL; s++) {",
          "471:       if (backwardCompatible && s->rfbSecType == &secTypeVeNCrypt)",
          "473:       if (!strcasecmp(s->name, p) ||",
          "474:           (backwardCompatible && !strcasecmp(s->name, \"unixlogin\") &&",
          "479:     if (s->name == NULL)",
          "480:       FatalError(\"ERROR: Unknown security type name '%s'\", p);",
          "482:     s->permitted = TRUE;",
          "483:     s->preference = preferenceLimit++;",
          "490:   SecTypeData *s;",
          "495:   for (s = secTypes; s->name != NULL; s++) {",
          "496:     ErrorF(\"%s\", s->name);  chars += strlen(s->name);",
          "497:     if ((s + 1)->name != NULL) {",
          "499:       if (chars + strlen((s + 1)->name) > 77) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "525:     FatalError(\"ERROR: %s cannot have group or global write permissions\",",
          "526:                rfbAuthConfigFile);",
          "529:   for (line = 0; fgets(buf, sizeof(buf), fp) != NULL; line++) {",
          "530:     len = strlen(buf) - 1;",
          "531:     if (buf[len] != '\\n' && strlen(buf) == 256)",
          "",
          "[Removed Lines]",
          "528:   rfbLog(\"Using auth configuration file %s\\n\", rfbAuthConfigFile);",
          "",
          "[Added Lines]",
          "532:   rfbLog(\"Using security configuration file %s\\n\", rfbAuthConfigFile);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "611:         FatalError(\"ERROR in %s: permitted-auth-methods is empty!\",",
          "612:                    rfbAuthConfigFile);",
          "615:       continue;",
          "616:     }",
          "",
          "[Removed Lines]",
          "614:       setMethods(&buf2[n], TRUE);",
          "",
          "[Added Lines]",
          "618:       setSecTypes(&buf2[n], TRUE);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "622:         FatalError(\"ERROR in %s: permitted-security-types is empty!\",",
          "623:                    rfbAuthConfigFile);",
          "626:       continue;",
          "627:     }",
          "",
          "[Removed Lines]",
          "625:       setMethods(&buf2[n], FALSE);",
          "",
          "[Added Lines]",
          "629:       setSecTypes(&buf2[n], FALSE);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "662:     }",
          "664:     if (buf2[0] != '#')",
          "666:   }",
          "668:   fclose(fp);",
          "",
          "[Removed Lines]",
          "665:       rfbLog(\"WARNING: unrecognized auth config line '%s'\\n\", buf);",
          "",
          "[Added Lines]",
          "669:       rfbLog(\"WARNING: unrecognized security config line '%s'\\n\", buf);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "672: void rfbAuthInit()",
          "673: {",
          "675:   int nSelected = 0;",
          "677:   ReadConfigFile();",
          "681:       nSelected++;",
          "685:         continue;",
          "686:       }",
          "687:     }",
          "694:         rfbLog(\"Advertising security type '%s' to viewers\\n\",",
          "696:       }",
          "697:     }",
          "698:   }",
          "700:   if (nSelected == 0) {",
          "710:           rfbLog(\"Advertising security type '%s' to viewers\\n\",",
          "712:         }",
          "713:       } else {",
          "715:       }",
          "716:     }",
          "717:   }",
          "",
          "[Removed Lines]",
          "674:   AuthMethodData *a;",
          "679:   for (a = authMethods; a->name != NULL; a++) {",
          "680:     if (a->enabled) {",
          "682:       if (!a->permitted) {",
          "683:         rfbLog(\"WARNING: security type '%s' is not permitted\\n\", a->name);",
          "684:         a->enabled = FALSE;",
          "689:     if (a->enabled) {",
          "690:       nAuthMethodsEnabled++;",
          "691:       rfbLog(\"Enabled authentication method '%s'\\n\", a->name);",
          "692:       if (!a->secType->advertise) {",
          "693:         a->secType->advertise = TRUE;",
          "695:                a->secType->name);",
          "703:     for (a = authMethods; a->name != NULL; a++) {",
          "704:       if (!a->requiredData) {",
          "705:         if (a->permitted) {",
          "706:           nAuthMethodsEnabled++;",
          "707:           a->enabled = TRUE;",
          "708:           a->secType->advertise = TRUE;",
          "709:           rfbLog(\"Enabled authentication method '%s'\\n\", a->name);",
          "711:                  a->secType->name);",
          "714:         a->secType->advertise = FALSE;",
          "",
          "[Added Lines]",
          "678:   SecTypeData *s;",
          "683:   for (s = secTypes; s->name != NULL; s++) {",
          "684:     if (s->enabled) {",
          "686:       if (!s->permitted) {",
          "687:         rfbLog(\"WARNING: security type '%s' is not permitted\\n\", s->name);",
          "688:         s->enabled = FALSE;",
          "693:     if (s->enabled) {",
          "694:       nSecTypesEnabled++;",
          "695:       rfbLog(\"Enabled security type '%s'\\n\", s->name);",
          "696:       if (!s->rfbSecType->advertise) {",
          "697:         s->rfbSecType->advertise = TRUE;",
          "699:                s->rfbSecType->name);",
          "707:     for (s = secTypes; s->name != NULL; s++) {",
          "708:       if (!s->requiredData) {",
          "709:         if (s->permitted) {",
          "710:           nSecTypesEnabled++;",
          "711:           s->enabled = TRUE;",
          "712:           s->rfbSecType->advertise = TRUE;",
          "713:           rfbLog(\"Enabled security type '%s'\\n\", s->name);",
          "715:                  s->rfbSecType->name);",
          "718:         s->rfbSecType->advertise = FALSE;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "721:     rfbLog(\"WARNING: PAM support is not compiled in.\\n\");",
          "722: #endif",
          "728:     }",
          "731:   } else {",
          "735:         secTypeNone.advertise = FALSE;",
          "736:     }",
          "737:   }",
          "",
          "[Removed Lines]",
          "724:   if (nAuthMethodsEnabled == 0) {",
          "725:     for (a = authMethods; a->name != NULL; a++) {",
          "726:       if (a->permitted)",
          "727:         rfbLog(\"NOTICE: %s is a permitted auth method\\n\", a->name);",
          "730:     FatalError(\"ERROR: no authentication methods enabled!\");",
          "733:     for (a = authMethods; a->name != NULL; a++) {",
          "734:       if (a->enabled && strcmp(a->name, \"none\"))",
          "",
          "[Added Lines]",
          "728:   if (nSecTypesEnabled == 0) {",
          "729:     for (s = secTypes; s->name != NULL; s++) {",
          "730:       if (s->permitted)",
          "731:         rfbLog(\"NOTICE: %s is a permitted security type\\n\", s->name);",
          "734:     FatalError(\"ERROR: no security types enabled!\");",
          "737:     for (s = secTypes; s->name != NULL; s++) {",
          "738:       if (s->enabled && strcmp(s->name, \"none\"))",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "783: void rfbAuthNewClient(rfbClientPtr cl)",
          "784: {",
          "788:   if (rfbAuthIsBlocked()) {",
          "789:     rfbLog(\"Too many authentication failures - client rejected\\n\");",
          "",
          "[Removed Lines]",
          "785:   SecTypeData **p;",
          "786:   SecTypeData *s;",
          "",
          "[Added Lines]",
          "789:   RFBSecTypeData **p;",
          "790:   RFBSecTypeData *r;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "797:   }",
          "803:       break;",
          "804:   }",
          "806:   if (*p == NULL) {",
          "807:     rfbLog(\"VNC authentication disabled - RFB 3.3 client rejected\\n\");",
          "809:     return;",
          "810:   }",
          "814: }",
          "",
          "[Removed Lines]",
          "800:   for (p = secTypes; *p != NULL; p++) {",
          "801:     s = *p;",
          "802:     if (s->advertise && (s->protocolMinorVer < 7))",
          "808:     rfbClientConnFailed(cl, \"Your viewer cannot handle required authentication methods\");",
          "812:   cl->selectedAuthType = s->securityType;",
          "813:   rfbSendSecurityType(cl, s->securityType);",
          "",
          "[Added Lines]",
          "804:   for (p = rfbSecTypes; *p != NULL; p++) {",
          "805:     r = *p;",
          "806:     if (r->advertise && (r->protocolMinorVer < 7))",
          "812:     rfbClientConnFailed(cl, \"Your viewer cannot handle required security types\");",
          "816:   cl->selectedAuthType = r->securityType;",
          "817:   rfbSendSecurityType(cl, r->securityType);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "852: static void rfbSendSecurityTypeList(rfbClientPtr cl)",
          "853: {",
          "854:   int i, j, n;",
          "856:   SecTypeData *s;",
          "857:   Bool tightAdvertised = FALSE;",
          "865:   n = 0;",
          "866:   for (i = 0; i < preferenceLimit; i++) {",
          "869:         continue;",
          "873:       if (n > MAX_SECURITY_TYPES)",
          "874:         FatalError(\"rfbSendSecurityTypeList: # enabled security types > MAX_SECURITY_TYPES\");",
          "",
          "[Removed Lines]",
          "855:   AuthMethodData *a;",
          "867:     for (a = authMethods; a->name != NULL; a++) {",
          "868:       if (((a->preference != -1) && (i != a->preference)) || !a->enabled)",
          "871:       s = a->secType;",
          "",
          "[Added Lines]",
          "860:   RFBSecTypeData *r;",
          "871:     for (s = secTypes; s->name != NULL; s++) {",
          "872:       if (((s->preference != -1) && (i != s->preference)) || !s->enabled)",
          "875:       r = s->rfbSecType;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "879:       for (j = 0; j < n; j++) {",
          "881:           break;",
          "882:       }",
          "884:       if (j < n)",
          "885:         continue;",
          "890:           tightAdvertised = TRUE;",
          "891:       }",
          "892:     }",
          "",
          "[Removed Lines]",
          "880:         if (cl->securityTypes[j + 1] == s->securityType)",
          "887:       if (s->advertise && (cl->protocol_minor_ver >= s->protocolMinorVer)) {",
          "888:         cl->securityTypes[++n] = s->securityType;",
          "889:         if (s->securityType == rfbSecTypeTight)",
          "",
          "[Added Lines]",
          "884:         if (cl->securityTypes[j + 1] == r->securityType)",
          "891:       if (r->advertise && (cl->protocol_minor_ver >= r->protocolMinorVer)) {",
          "892:         cl->securityTypes[++n] = r->securityType;",
          "893:         if (r->securityType == rfbSecTypeTight)",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "991:   } serverVersion = { 0, 2 }, clientVersion = { 0, 0 };",
          "992:   CARD8 reply, count = 0;",
          "993:   int i, j;",
          "995:   CARD32 subTypes[MAX_VENCRYPT_SUBTYPES], chosenType = 0;",
          "996: #if USETLS",
          "997:   rfbSslCtx *ctx;",
          "",
          "[Removed Lines]",
          "994:   AuthMethodData *a;",
          "",
          "[Added Lines]",
          "998:   SecTypeData *s;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1017:   memset(subTypes, 0, sizeof(CARD32) * MAX_VENCRYPT_SUBTYPES);",
          "1018:   for (i = 0; i < preferenceLimit; i++) {",
          "1022:         continue;",
          "1024:       if (count > MAX_VENCRYPT_SUBTYPES)",
          "",
          "[Removed Lines]",
          "1019:     for (a = authMethods; a->name != NULL; a++) {",
          "1020:       if (((a->preference != -1) && (i != a->preference)) || !a->enabled ||",
          "1021:           a->subType == -1)",
          "",
          "[Added Lines]",
          "1023:     for (s = secTypes; s->name != NULL; s++) {",
          "1024:       if (((s->preference != -1) && (i != s->preference)) || !s->enabled ||",
          "1025:           s->subType == -1)",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1028:       for (j = 0; j < count; j++) {",
          "1030:           break;",
          "1031:       }",
          "1032:       if (j < count)",
          "1033:         continue;",
          "1036:     }",
          "1037:   }",
          "",
          "[Removed Lines]",
          "1029:         if (subTypes[j] == a->subType)",
          "1035:       subTypes[count++] = a->subType;",
          "",
          "[Added Lines]",
          "1033:         if (subTypes[j] == s->subType)",
          "1039:       subTypes[count++] = s->subType;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1228:   rfbCapabilityInfo caplist[MAX_AUTH_CAPS];",
          "1229:   int count = 0;",
          "1230:   int j;",
          "1232:   AuthCapData *c;",
          "1233:   rfbCapabilityInfo *pcap;",
          "1234:   char tempstr[9];",
          "",
          "[Removed Lines]",
          "1231:   AuthMethodData *a;",
          "",
          "[Added Lines]",
          "1235:   SecTypeData *s;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1245:     for (i = 0; i < preferenceLimit; i++) {",
          "1248:           continue;",
          "1252:         if (count > MAX_AUTH_CAPS)",
          "1253:           FatalError(\"rfbSendAuthCaps: # enabled security types > MAX_AUTH_CAPS\");",
          "",
          "[Removed Lines]",
          "1246:       for (a = authMethods; a->name != NULL; a++) {",
          "1247:         if (((a->preference != -1) && (i != a->preference)) || !a->enabled)",
          "1250:         c = a->authCap;",
          "",
          "[Added Lines]",
          "1250:       for (s = secTypes; s->name != NULL; s++) {",
          "1251:         if (((s->preference != -1) && (i != s->preference)) || !s->enabled)",
          "1254:         c = s->authCap;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1279:     }",
          "1281:     if (count == 0)",
          "1283:   }",
          "1285:   cl->nAuthCaps = count;",
          "",
          "[Removed Lines]",
          "1282:       FatalError(\"rfbSendAuthCaps: authentication required but no auth methods enabled! This should not have happened!\");",
          "",
          "[Added Lines]",
          "1286:       FatalError(\"rfbSendAuthCaps: authentication required but no security types enabled! This should not have happened!\");",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1430:   ok = FALSE;",
          "1431:   if (rfbOptOtpAuth()) {",
          "1432:     if (rfbAuthOTPValue == NULL) {",
          "1434:         rfbClientAuthFailed(cl, \"The one-time password has not been set on the server\");",
          "1435:         return;",
          "1436:       }",
          "",
          "[Removed Lines]",
          "1433:       if (nAuthMethodsEnabled == 1) {",
          "",
          "[Added Lines]",
          "1437:       if (nSecTypesEnabled == 1) {",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1467:       rfbLog(\"rfbVncAuthProcessResponse: could not get password from %s\\n\",",
          "1468:              rfbAuthPasswdFile);",
          "1471:         rfbClientAuthFailed(cl, \"The server could not read the VNC password file\");",
          "1472:         return;",
          "1473:       }",
          "",
          "[Removed Lines]",
          "1470:       if (nAuthMethodsEnabled == 1) {",
          "",
          "[Added Lines]",
          "1474:       if (nSecTypesEnabled == 1) {",
          "",
          "---------------"
        ],
        "unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c||unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c": [
          "File: unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c -> unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "114: void IdleTimerCheck(void)",
          "115: {",
          "116:   if (idleTimeout >= 0.0 && gettime() >= idleTimeout)",
          "118:                (unsigned int)rfbIdleTimeout);",
          "119: }",
          "",
          "[Removed Lines]",
          "117:     FatalError(\"TurboVNC server has been idle for %u seconds.  Exiting.\",",
          "",
          "[Added Lines]",
          "117:     FatalError(\"TurboVNC session has been idle for %u seconds.  Exiting.\",",
          "",
          "---------------"
        ],
        "unix/turbovncserver-security.conf||unix/turbovncserver-security.conf": [
          "File: unix/turbovncserver-security.conf -> unix/turbovncserver-security.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: #enable-user-acl",
          "9: # This specifies the maximum idle timeout (in seconds) for all TurboVNC",
          "17: #max-idle-timeout = 86400",
          "19: # This specifies the maximum desktop size for all TurboVNC sessions started on",
          "24: #max-desktop-size = 3200x1800",
          "",
          "[Removed Lines]",
          "10: # sessions started on this machine.  The idle timeout is the amount of time",
          "11: # that a TurboVNC session can remain idle (with no VNC viewer connections)",
          "12: # before it will automatically exit.  If this value is set to a number greater",
          "13: # than 0, then all TurboVNC sessions on this machine will use this idle timeout",
          "14: # value by default, and the user will only be allowed to override it with a",
          "15: # lower value.",
          "20: # this machine.  If a user attempts to start a session with a larger geometry",
          "21: # than this or to use remote desktop resizing to increase the desktop size to a",
          "22: # size larger than this, the desktop size will be clamped to this width/height.",
          "",
          "[Added Lines]",
          "10: # sessions started on this host.  The idle timeout is the amount of time that",
          "11: # a TurboVNC session can remain idle (with no VNC viewer connections) before it",
          "12: # will automatically exit.  If this value is set to a number greater than 0,",
          "13: # then all TurboVNC sessions on this host will use this idle timeout value by",
          "14: # default, and the user will only be allowed to override it with a lower value.",
          "19: # this host.  If a user attempts to start a session with a larger geometry than",
          "20: # this or to use remote desktop resizing to increase the desktop size to a size",
          "21: # larger than this, the desktop size will be clamped to this width/height.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29: #no-remote-resize",
          "31: # Uncomment the following to globally disable the automatic sending of",
          "33: # (Default: clipboard sending is allowed)",
          "35: #no-clipboard-send",
          "37: # Uncomment the following to globally disable the automatic sending of",
          "39: # (Default: clipboard receiving is allowed)",
          "41: #no-clipboard-recv",
          "",
          "[Removed Lines]",
          "32: # clipboard changes from TurboVNC server sessions to their connected viewers.",
          "38: # clipboard changes to TurboVNC server sessions from their connected viewers.",
          "",
          "[Added Lines]",
          "31: # clipboard changes from TurboVNC sessions to their connected viewers.",
          "37: # clipboard changes to TurboVNC sessions from their connected viewers.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "47: #no-reverse-connections",
          "49: # Uncomment the following to globally disable inbound remote connections to all",
          "51: # tunneling to be used for all inbound TurboVNC connections.",
          "52: # (Default: inbound remote connections are allowed)",
          "54: #no-remote-connections",
          "56: # Uncomment the following to globally disable the built-in HTTP server in all",
          "59: #no-httpd",
          "61: # Uncomment the following to globally disable X11 TCP connections to all",
          "64: #no-x11-tcp-connections",
          "66: # Uncomment the following to globally disable creating/opening PAM sessions in",
          "69: #no-pam-sessions",
          "",
          "[Removed Lines]",
          "50: # TurboVNC servers started on this machine.  This effectively forces SSH",
          "57: # TurboVNC servers started on this machine.",
          "62: # TurboVNC servers started on this machine.",
          "67: # all TurboVNC servers started on this machine.",
          "",
          "[Added Lines]",
          "49: # TurboVNC sessions started on this host.  This effectively forces SSH",
          "56: # TurboVNC sessions started on this host.",
          "61: # TurboVNC sessions started on this host.",
          "66: # all TurboVNC sessions started on this host.",
          "",
          "---------------"
        ],
        "unix/turbovncserver.conf||unix/turbovncserver.conf": [
          "File: unix/turbovncserver.conf -> unix/turbovncserver.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: ##                          or 0 to disable)",
          "24: ##  $enableHTTP  -- 1 to enable the embedded web server (which serves up the",
          "25: ##                  Java TurboVNC Viewer) or 0 to disable",
          "28: ##  $pamSession  -- 1 to create a new PAM session for each viewer that",
          "29: ##                  authenticates using the username/password of the user who",
          "30: ##                  owns the TurboVNC session, and leave the PAM session open",
          "",
          "[Removed Lines]",
          "26: ##  $autokill    -- 1 to automatically kill the server when the startup script",
          "27: ##                  finishes or 0 to leave it running",
          "",
          "[Added Lines]",
          "26: ##  $autokill    -- 1 to automatically kill the TurboVNC session when the",
          "27: ##                  startup script finishes or 0 to leave it running",
          "",
          "---------------"
        ],
        "unix/vncconnect/vncconnect.c||unix/vncconnect/vncconnect.c": [
          "File: unix/vncconnect/vncconnect.c -> unix/vncconnect/vncconnect.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: static void usage()",
          "32: {",
          "34:           programName);",
          "36:                   \"               connect to a listening viewer (for instance, :1).  If this is\\n\"",
          "37:                   \"               not specified, then the value of the DISPLAY environment\\n\"",
          "38:                   \"               variable is used.\\n\");",
          "40:                   \"           instance of the UltraVNC Repeater in Mode II.\\n\");",
          "42:                   \"              session.\\n\\n\");",
          "43:   exit(1);",
          "44: }",
          "",
          "[Removed Lines]",
          "33:   fprintf(stderr, \"\\nUSAGE: %s [-display <d>] [-disconnect] host[:port]\\n\\n\",",
          "35:   fprintf(stderr, \"-display <d> = specify the X display of the VNC server session that you wish to\\n\"",
          "39:   fprintf(stderr, \"-id <id> = specify the ID number of the VNC server session, if connecting to an\\n\"",
          "41:   fprintf(stderr, \"-disconnect = disconnect all listening viewers from the specified VNC server\\n\"",
          "",
          "[Added Lines]",
          "33:   fprintf(stderr, \"\\nUSAGE: %s [-display <d>] [-disconnect] client[:port]\\n\\n\",",
          "35:   fprintf(stderr, \"-display <d> = specify the X display of the TurboVNC session that you wish to\\n\"",
          "39:   fprintf(stderr, \"-id <id> = specify the ID number of the TurboVNC session, if connecting to an\\n\"",
          "41:   fprintf(stderr, \"-disconnect = disconnect all listening viewers from the specified TurboVNC\\n\"",
          "",
          "---------------"
        ],
        "unix/vncconnect/vncconnect.man||unix/vncconnect/vncconnect.man": [
          "File: unix/vncconnect/vncconnect.man -> unix/vncconnect/vncconnect.man",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: .\\\" Copyright (C) 2000, 2001 Red Hat, Inc.",
          "6: .\\\" Copyright (C) 2001-2003 Constantin Kaplinsky",
          "7: .\\\" Copyright (C) 2005-2008 Sun Microsystems, Inc.",
          "9: .\\\"",
          "10: .\\\" You may distribute under the terms of the GNU General Public",
          "11: .\\\" License as specified in the file LICENCE.TXT that comes with the",
          "12: .\\\" TightVNC distribution.",
          "13: .\\\"",
          "15: .SH NAME",
          "17: .SH SYNOPSIS",
          "18: .nf",
          "20: .fi",
          "21: .SH DESCRIPTION",
          "22: \\fBvncconnect\\fR can be used to initiate a \"reverse connection\" between a",
          "27: .SH OPTIONS",
          "28: .TP",
          "29: \\fB\\-display\\fR \\fIVNC-display\\fR",
          "31: viewer (default: read from the \\fBDISPLAY\\fR environment variable)",
          "32: .TP",
          "33: \\fB\\-disconnect\\fR",
          "35: .SH EXIT CODES",
          "36: When used to initiate a reverse connection, \\fBvncconnect\\fR will exit with",
          "37: status 0 if the connection was successful.  It will exit with status 1 if the",
          "38: connection failed (which would be the case if there was no listening viewer",
          "40: connection, or if reverse connections had been disallowed in the TurboVNC",
          "43: When used to disconnect reverse connections, \\fBvncconnect\\fR will exit with",
          "44: status 0 if one or more listening viewers were successfully disconnected.",
          "",
          "[Removed Lines]",
          "8: .\\\" Copyright (C) 2010, 2013 D. R. Commander.",
          "14: .TH vncconnect 1 \"October 2013\" \"\" \"TurboVNC\"",
          "16: vncconnect \\- connect a VNC server to a listening VNC viewer",
          "19: \\fBvncconnect\\fR [\\-display \\fIVNC-display\\fR] [\\-disconnect] \\fIhost\\fR[:\\fIport\\fR]",
          "23: VNC server session and a VNC viewer that has been started in \"listen mode.\"",
          "24: The viewer should be running on the machine specified by \\fIhost\\fR and",
          "25: listening on the port specified by \\fIport\\fR (if \\fIport\\fR is not specified,",
          "26: then the default of 5500 is used.)",
          "30: The X display of the VNC server session that you wish to connect to a listening",
          "34: Disconnect all listening viewers from a particular VNC server session",
          "39: running on the specified host and port, if a firewall prevented the",
          "41: Server's authentication configuration file.)",
          "",
          "[Added Lines]",
          "8: .\\\" Copyright (C) 2010, 2013, 2018 D. R. Commander.",
          "14: .TH vncconnect 1 \"October 2018\" \"\" \"TurboVNC\"",
          "16: vncconnect \\- connect a TurboVNC session to a listening VNC viewer",
          "19: \\fBvncconnect\\fR [\\-display \\fIVNC-display\\fR] [\\-disconnect] \\fIclient\\fR[:\\fIport\\fR]",
          "23: TurboVNC session and a VNC viewer that has been started in \"listen mode.\"  The",
          "24: viewer should be running on the machine specified by \\fIclient\\fR and listening",
          "25: on the port specified by \\fIport\\fR (if \\fIport\\fR is not specified, then the",
          "26: default of 5500 is used.)",
          "30: The X display of the TurboVNC session that you wish to connect to a listening",
          "34: Disconnect all listening viewers from a particular TurboVNC session",
          "39: running on the specified client and port, if a firewall prevented the",
          "41: Server's security configuration file.)",
          "",
          "---------------"
        ],
        "unix/vncpasswd/vncpasswd.man||unix/vncpasswd/vncpasswd.man": [
          "File: unix/vncpasswd/vncpasswd.man -> unix/vncpasswd/vncpasswd.man",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: .\\\" Copyright (C) 2001-2003 Constantin Kaplinsky",
          "8: .\\\" Copyright (C) 2005-2008 Sun Microsystems, Inc.",
          "9: .\\\" Copyright (C) 2010 University Corporation for Atmospheric Research",
          "11: .\\\"",
          "12: .\\\" You may distribute under the terms of the GNU General Public",
          "13: .\\\" License as specified in the file LICENCE.TXT that comes with the",
          "14: .\\\" TightVNC distribution.",
          "15: .\\\"",
          "17: .SH NAME",
          "19: .SH SYNOPSIS",
          "20: \\fBvncpasswd\\fR [\\-v] [\\fIfile\\fR]",
          "21: .br",
          "",
          "[Removed Lines]",
          "10: .\\\" Copyright (C) 2010, 2015 D. R. Commander",
          "16: .TH vncpasswd 1 \"August 2015\" \"\" \"TurboVNC\"",
          "18: vncpasswd \\- set passwords for VNC server",
          "",
          "[Added Lines]",
          "10: .\\\" Copyright (C) 2010, 2015, 2018 D. R. Commander",
          "16: .TH vncpasswd 1 \"October 2018\" \"\" \"TurboVNC\"",
          "18: vncpasswd \\- set passwords for TurboVNC sessions",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40: \\fBvncpasswd\\fR allows one to enter a primary VNC password and an",
          "41: optional view-only password.  \\fBXvnc\\fR will ignore mouse and keyboard",
          "44: The password filename defaults to \\fB$HOME/.vnc/passwd\\fR, unless the",
          "45: \\fB\\-t\\fR command line option was used (see the OPTIONS section",
          "",
          "[Removed Lines]",
          "42: input from clients who authenticate with the view-only password.",
          "",
          "[Added Lines]",
          "42: input from viewers that authenticate with the view-only password.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57: password file into some hazardous place.",
          "58: .br",
          "59: .SH ONE-TIME PASSWORD (OTP) SUPPORT",
          "61: \\fBvncpasswd\\fR can be used to generate new one-time passwords for both full",
          "62: control and, optionally, view-only access.  A one-time password is valid for",
          "65: \\fBvncpasswd\\fR can also be used to clear any one-time passwords that are",
          "67: .br",
          "68: .SH USER ACCESS CONTROL LIST SUPPORT",
          "74: .br",
          "75: .SH OPTIONS",
          "76: .TP",
          "",
          "[Removed Lines]",
          "60: If the VNC server is configured to support one-time passwords, then",
          "63: one successful connection from a VNC viewer to the VNC server session.  For",
          "64: each subsequent connection, a new one-time password must be generated.",
          "66: currently enabled for a VNC server session.",
          "69: If the VNC server is configured to support a user access control list (ACL) for",
          "70: the PAM User/Password authentication method, then \\fBvncpasswd\\fR",
          "71: can be used to add users to or remove users from the ACL.  Be careful not to",
          "72: remove yourself from the list, or you will not be able to connect again until",
          "73: you re-add yourself.",
          "",
          "[Added Lines]",
          "60: If the TurboVNC session is configured to support one-time passwords, then",
          "63: one successful connection from a VNC viewer to the TurboVNC session.  For each",
          "64: subsequent connection, a new one-time password must be generated.",
          "66: currently enabled for a TurboVNC session.",
          "69: If the TurboVNC Server is configured to support user access control lists",
          "70: (ACLs) for the PAM User/Password authentication method, then \\fBvncpasswd\\fR",
          "71: can be used to add users to or remove users from a session's ACL.  Be careful",
          "72: not to remove yourself from the list, or you will not be able to connect again",
          "73: until you re-add yourself.",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "95: user should be granted view-only access instead of full control.",
          "96: .TP",
          "97: \\fB\\-display\\fR \\fIVNC-display\\fR",
          "99: setting/clearing one-time passwords or adding users to/removing users from the",
          "100: ACL.  If \\fIVNC-display\\fR is not specified, then it defaults to the value of",
          "101: the \\fBDISPLAY\\fR environment variable.",
          "",
          "[Removed Lines]",
          "98: This option specifies the X display of the VNC server session to use when",
          "",
          "[Added Lines]",
          "98: This option specifies the X display of the TurboVNC session to use when",
          "",
          "---------------"
        ],
        "unix/vncserver.in||unix/vncserver.in": [
          "File: unix/vncserver.in -> unix/vncserver.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #",
          "27: #",
          "29: #",
          "31: # First make sure we're operating in a sane environment.",
          "",
          "[Removed Lines]",
          "28: # vncserver - wrapper script to start an X VNC server.",
          "",
          "[Added Lines]",
          "28: # vncserver - wrapper script to start the TurboVNC X server.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:       # This is necessary to make Unity work on Ubuntu 16, and on Ubuntu 14, it",
          "134:       # ensures that the proper compiz profile is set up.  Otherwise, if you",
          "139:       if [ -f /usr/share/gnome-session/sessions/ubuntu.session -a \"$TVNC_WM\" = \"\" ]; then",
          "140:         DESKTOP_SESSION=ubuntu;  export DESKTOP_SESSION",
          "141:         grep -qE \"DesktopName\\s*=\\s*Unity\" /usr/share/gnome-session/sessions/ubuntu.session && {",
          "",
          "[Removed Lines]",
          "135:       # accidentally launch Unity in a TurboVNC Server session that lacks",
          "136:       # OpenGL support, compiz will automatically disable its OpenGL plugin,",
          "137:       # requiring you to reset the compiz plugin state before Unity will work",
          "138:       # again.",
          "",
          "[Added Lines]",
          "135:       # accidentally launch Unity in a TurboVNC session that lacks OpenGL",
          "136:       # support, compiz will automatically disable its OpenGL plugin, requiring",
          "137:       # you to reset the compiz plugin state before Unity will work again.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "547:   system(\"$xauth merge $xauthorityFile\");",
          "548: }",
          "552: $cmd = $exedir.\"Xvnc :$displayNumber\";",
          "553: $cmd .= \" -dpi $dpi\" if ($dpi);",
          "",
          "[Removed Lines]",
          "550: # Now start the X VNC Server",
          "",
          "[Added Lines]",
          "549: # Now start the TurboVNC X server",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "766: #",
          "767: # GetXDisplayDefaults uses xdpyinfo to find out the geometry, depth and pixel",
          "768: # format of the current X display being used.  If successful, it sets the",
          "770: # (minus an allowance for window manager decorations on the geometry).  Using",
          "771: # the same depth and pixel format means that the VNC server won't have to",
          "772: # translate pixels when the desktop is being viewed on this X display (for",
          "",
          "[Removed Lines]",
          "769: # options as appropriate so that the X VNC server will use the same settings",
          "",
          "[Added Lines]",
          "768: # options as appropriate so that the TurboVNC X server will use the same settings",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "912:   opendir(dir, $vncUserDir);",
          "913:   my @filelist = readdir(dir);",
          "914:   closedir(dir);",
          "916:   print \"X DISPLAY #\\tPROCESS ID\\n\";",
          "917:   foreach my $file (@filelist) {",
          "918:     if ($file =~ /$host:(\\d+)$\\.pid/ && !&CheckDisplayNumber($1)) {",
          "",
          "[Removed Lines]",
          "915:   print \"\\nTurboVNC server sessions:\\n\\n\";",
          "",
          "[Added Lines]",
          "914:   print \"\\nTurboVNC sessions:\\n\\n\";",
          "",
          "---------------"
        ],
        "unix/vncserver.man||unix/vncserver.man": [
          "File: unix/vncserver.man -> unix/vncserver.man",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: .\\\" Copyright (C) 2000, 2001 Red Hat, Inc.",
          "8: .\\\" Copyright (C) 2001, 2002 Constantin Kaplinsky",
          "9: .\\\" Copyright (C) 2005-2006 Sun Microsystems, Inc.",
          "11: .\\\"",
          "12: .\\\" You may distribute under the terms of the GNU General Public",
          "13: .\\\" License as specified in the file LICENCE.TXT that comes with the",
          "14: .\\\" TightVNC distribution.",
          "15: .\\\"",
          "17: .SH NAME",
          "19: .SH SYNOPSIS",
          "20: .nh",
          "21: .ad l",
          "",
          "[Removed Lines]",
          "10: .\\\" Copyright (C) 2010-2013, 2015-2017 D. R. Commander",
          "16: .TH vncserver 1 \"August 2017\" \"\" \"TurboVNC\"",
          "18: vncserver \\- a wrapper to launch an X server for VNC.",
          "",
          "[Added Lines]",
          "10: .\\\" Copyright (C) 2010-2013, 2015-2018 D. R. Commander",
          "16: .TH vncserver 1 \"November 2018\" \"\" \"TurboVNC\"",
          "18: vncserver \\- a wrapper to launch the TurboVNC Server",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119: $vncUserDir/x509_private.pem to Xvnc.",
          "120: .TP",
          "121: \\fB\\-fg\\fR",
          "126: .TP",
          "127: \\fB\\-autokill\\fR",
          "131: .TP",
          "132: \\fB\\-noxstartup\\fR",
          "136: .TP",
          "137: \\fB\\-xstartup\\fR \\fIscript\\fR",
          "138: Run a custom startup script, instead of xstartup.turbovnc, after launching",
          "",
          "[Removed Lines]",
          "122: Runs Xvnc as a foreground process.  This has two effects: (1) The VNC server",
          "123: can be aborted with CTRL-C, and (2) the VNC server will exit as soon as the",
          "124: user logs out of the window manager in the VNC session.  This may be necessary",
          "125: when launching TurboVNC from within certain grid computing environments.",
          "128: Automatically kill the VNC server when the startup script exits (which, in most",
          "129: cases, means that the VNC server will be killed automatically whenever the user",
          "130: logs out of the window manager running in the VNC session.)",
          "133: Do not run the $vncUserDir/.vnc/xstartup.turbovnc script after launching Xvnc.  This",
          "134: option allows you to manually start a window manager in your TurboVNC session",
          "135: or to run a full-screen application without a window manager.",
          "",
          "[Added Lines]",
          "122: Runs Xvnc as a foreground process.  This has two effects: (1) The TurboVNC",
          "123: session can be aborted with CTRL-C, and (2) the TurboVNC session will exit as",
          "124: soon as the user logs out of the window manager in the session.  This may be",
          "125: necessary when launching TurboVNC from within certain grid computing",
          "126: environments.",
          "129: Automatically kill the TurboVNC session when the startup script exits (which,",
          "130: in most cases, means that the session will be killed automatically whenever the",
          "131: user logs out of the window manager running in the session.)",
          "134: Do not run the $vncUserDir/.vnc/xstartup.turbovnc script after launching Xvnc.",
          "135: This option allows you to manually start a window manager in your TurboVNC",
          "136: session or to run a full-screen application without a window manager.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157: $vncUserDir/.vnc/{hostname}{display}.log.",
          "158: .TP",
          "159: \\fB\\-kill\\fR \\fB:\\fR\\fIdisplay\\fR",
          "161: .TP",
          "162: \\fB\\-list\\fR",
          "165: .TP",
          "166: \\fB\\-help\\fR",
          "167: Prints a brief list of command line options",
          "",
          "[Removed Lines]",
          "160: Stops the VNC server that is currently running on the specified display.",
          "163: Lists the display numbers and process ID's of all VNC servers that are",
          "164: currently running under your account on this machine.",
          "",
          "[Added Lines]",
          "161: Stops the VNC session that is currently running on the specified display.",
          "164: Lists the display numbers and process ID's of all VNC sessions that are",
          "165: currently running under your account on this host.",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "178: Starts \\fBXvnc\\fR on display :1 with desktop size of 1024x768 pixels.",
          "179: .TP",
          "180: \\fBvncserver\\fR -kill \\fI:1\\fR",
          "182: .SH FILES",
          "183: .TP",
          "184: /etc/turbovncserver.conf",
          "",
          "[Removed Lines]",
          "181: Shuts down the \\fBXvnc\\fR server running on display :1.",
          "",
          "[Added Lines]",
          "182: Shuts down the VNC session running on display :1.",
          "",
          "---------------"
        ],
        "unix/vncviewer/vncviewer.man||unix/vncviewer/vncviewer.man": [
          "File: unix/vncviewer/vncviewer.man -> unix/vncviewer/vncviewer.man",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: .\\\" Copyright (C) 2001-2003 Constantin Kaplinsky",
          "8: .\\\" Copyright (C) 2005-2008 Sun Microsystems, Inc.",
          "9: .\\\" Copyright (C) 2010 University Corporation for Atmospheric Research",
          "11: .\\\"",
          "12: .\\\" You may distribute under the terms of the GNU General Public",
          "13: .\\\" License as specified in the file LICENCE.TXT that comes with the",
          "14: .\\\" TurboVNC distribution.",
          "15: .\\\"",
          "17: .SH NAME",
          "18: vncviewer \\- a Java viewer/client for TurboVNC",
          "19: .SH SYNOPSIS",
          "",
          "[Removed Lines]",
          "10: .\\\" Copyright (C) 2010-2013 D. R. Commander",
          "16: .TH vncviewer 1 \"September 2013\" \"\" \"TurboVNC\"",
          "",
          "[Added Lines]",
          "10: .\\\" Copyright (C) 2010-2013, 2018 D. R. Commander",
          "16: .TH vncviewer 1 \"October 2018\" \"\" \"TurboVNC\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28: .SH DESCRIPTION",
          "29: .B vncviewer",
          "30: is a script that launches the Java TurboVNC Viewer, a client application for",
          "32: VNC server, allowing you to control the desktop environment of a different",
          "33: machine.",
          "",
          "[Removed Lines]",
          "31: the VNC (Virtual Network Computing) system.  This VNC client can connect to any",
          "",
          "[Added Lines]",
          "31: the VNC (Virtual Network Computing) system.  This VNC viewer can connect to any",
          "",
          "---------------"
        ],
        "win/vncviewer/res/vncviewer.rc||win/vncviewer/res/vncviewer.rc": [
          "File: win/vncviewer/res/vncviewer.rc -> win/vncviewer/res/vncviewer.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: CAPTION \"TurboVNC Authentication\"",
          "45: FONT 8, \"MS Shell Dlg\"",
          "46: BEGIN",
          "48:                     NOT WS_GROUP",
          "50:                     NOT WS_TABSTOP",
          "51:     CONTROL         108,IDC_STATIC_LOGO,\"Static\",SS_BITMAP,7,23,32,30",
          "52:     RTEXT           \"User name:\",IDC_STATIC_LOGIN,41,25,39,10,SS_CENTERIMAGE",
          "",
          "[Removed Lines]",
          "47:     LTEXT           \"VNC Host:\",IDC_STATIC_HOST,7,8,36,10,SS_CENTERIMAGE |",
          "49:     EDITTEXT        IDC_VNCHOST,46,7,95,12,ES_AUTOHSCROLL | ES_READONLY |",
          "",
          "[Added Lines]",
          "47:     LTEXT           \"VNC server:\",IDC_STATIC_HOST,7,8,40,10,SS_CENTERIMAGE |",
          "49:     EDITTEXT        IDC_VNCHOST,50,7,91,12,ES_AUTOHSCROLL | ES_READONLY |",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "597:     ID_SHOWWINDOW           \"Display a connection window\"",
          "598:     ID_NEWCONN              \"Make a manual connection\"",
          "599:     IDS_HELP",
          "601: \\r\\n\\",
          "602: Options:\\r\\n\\",
          "603: (For options with GUI equivalents, please refer to the interactive help feature\\r\\n\\",
          "",
          "[Removed Lines]",
          "600: \"vncviewer [options] [<server>[:<display>]]\\r\\n\\",
          "",
          "[Added Lines]",
          "600: \"vncviewer [options] [<host>[:<display>]]\\r\\n\\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "743:     IDS_HELP18",
          "744: \"/ipv6\\r\\n\\",
          "745: When used with /listen, this causes vncviewer to accept connections from\\r\\n\\",
          "749: \\r\\n\\",
          "750: When used without /listen, this causes vncviewer to favor the IPv6 loopback\\r\\n\\",
          "751: address when connecting to localhost.\\r\\n",
          "",
          "[Removed Lines]",
          "746: IPv6-enabled servers.  If your system supports IPv4-mapped IPv6 addresses,\\r\\n\\",
          "747: then connections from IPv4 servers can also be accepted when this option is\\r\\n\\",
          "748: enabled.\\r\\n\\",
          "",
          "[Added Lines]",
          "746: IPv6-enabled hosts.  If your system supports IPv4-mapped IPv6 addresses, then\\r\\n\\",
          "747: connections from IPv4 hosts can also be accepted when this option is enabled.\\r\\n\\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "777:     IDS_HELP23",
          "778: \"/nounixlogin\\r\\n\\",
          "779: When connecting to TightVNC/TurboVNC servers, this disables the use of Unix\\r\\n\\",
          "784: \\r\\n\"",
          "785:     IDS_HELP24",
          "786: \"/password <clear text password>\\r\\n\\",
          "",
          "[Removed Lines]",
          "780: login authentication.  This is useful if the server is configured to prefer an\\r\\n\\",
          "781: authentication method that supports Unix login authentication and you want to\\r\\n\\",
          "782: override this preference for a particular connection (for instance, to use a\\r\\n\\",
          "783: one-time password.)\\r\\n\\",
          "",
          "[Added Lines]",
          "779: login authentication.  This is useful if the server is configured to prefer a\\r\\n\\",
          "780: security type that supports Unix login authentication and you want to override\\r\\n\\",
          "781: this preference for a particular connection (for instance, to use a one-time\\r\\n\\",
          "782: password.)\\r\\n\\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "864: STRINGTABLE DISCARDABLE",
          "865: BEGIN",
          "866:     IDC_OK                  \"Connect to the specified VNC server.\"",
          "868:     IDC_CHECK_MESSAGE       \"If this option is set, the viewer will show a warning before switching to full-screen mode. The warning reminds you how to exit that mode.\"",
          "869:     IDC_CHECK_TOOLBAR       \"If this option is set, then new viewer windows will have a toolbar by default. You can always show/hide the toolbar using the system menu, but this option sets the default behavior.\"",
          "870:     IDC_EDIT_AMOUNT_LIST    \"The viewer automatically saves host names and settings for past connections. This option specifies how many connections to remember.\"",
          "",
          "[Removed Lines]",
          "867:     IDC_LIST_MODE           \"Switch to listen mode and close the dialog box. The listening viewer will wait for incoming connections from VNC servers. To connect to a listening viewer from the Unix/Linux TurboVNC Server, use the vncconnect program.\"",
          "",
          "[Added Lines]",
          "866:     IDC_LIST_MODE           \"Switch to listen mode and close the dialog box. The listening viewer will wait for incoming connections from VNC servers. To connect to a listening viewer from the TurboVNC Server, use the vncconnect program.\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "876: STRINGTABLE DISCARDABLE",
          "877: BEGIN",
          "879:     IDC_BELLDEICONIFY       \"If this option is checked, a minimized viewer window will be restored upon receiving a remote \"\"Bell\"\" event.\"",
          "880:     IDC_VIEWONLY            \"If this option is checked, you will be able to see but not control the remote desktop.\"",
          "881: END",
          "",
          "[Removed Lines]",
          "878:     IDC_HOSTNAME_EDIT       \"The IP address or host name of the VNC server to which you want to connect. Append :<display number> or ::<port number> to the host name (for example, \"\"myhost:1\"\" or \"\"myhost::5901\"\") to connect to a specific display number or TCP port.\"",
          "",
          "[Added Lines]",
          "877:     IDC_HOSTNAME_EDIT       \"The IP address or host name of the VNC server to which you want to connect. Append :<display number> or ::<port number> to the host name (for example, \"\"my_host:1\"\" or \"\"my_host::5901\"\") to connect to a specific display number or TCP port.\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "889: STRINGTABLE DISCARDABLE",
          "890: BEGIN",
          "891:     IDC_EDIT_LOG_LEVEL      \"Specifies the level of detail to include in the log file. Level 0 causes the viewer to log only the most important events, whereas Level 12 generates a lot of debugging output.\"",
          "893:     IDC_ENCODING            \"Choose one of these encoding methods based on the type of network you are using and your desired image quality and performance.\"",
          "894:     IDC_SCALE_EDIT          \"Reduce or enlarge the image of the remote desktop by the specified percentage.  \"\"Fixed Aspect Ratio\"\" automatically scales the remote desktop image to the size of the viewer window, preserving the aspect ratio of the remote desktop.\"",
          "895:     IDC_DESKTOPSIZE_EDIT    \"Resize the remote desktop to the specified size/screen layout (example: 1920x1200 or 1920x1200+0+0,1920x1200+1920+0).  \"\"Auto\"\" resizes the desktop as needed to fit in the viewer window without using scrollbars.  \"\"Server\"\" disables remote desktop resizing.\"",
          "",
          "[Removed Lines]",
          "892:     IDC_SHARED              \"Enable multiple simultaneous viewer connections to the same server desktop. If the session is not shared, then only one viewer can connect to the same session at the same time. Unlike some VNC flavors, TurboVNC uses shared sessions by default.\"",
          "",
          "[Added Lines]",
          "891:     IDC_SHARED              \"Enable multiple simultaneous viewer connections to the same VNC session. If the session is not shared, then only one viewer can connect to the same session at the same time. Unlike some VNC flavors, TurboVNC uses shared sessions by default.\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "905:     IDC_STATIC_SPAN         \"This option specifies whether the viewer window should span all monitors, only the primary monitor, or whether it should span all monitors only if it cannot fit on the primary monitor (automatic.)\"",
          "906:     IDC_DISABLECLIPBOARD    \"If this option is checked, the viewer will not send local clipboard changes to the server.\"",
          "907:     IDC_CSHAPE_DISABLE_RADIO",
          "909:     IDC_QUALITYLEVEL        \"Higher JPEG quality levels result in less compression but better image quality.\"",
          "910:     IDC_SUBSAMPLEVEL        \"Each pixel in a JPEG image is represented as a brightness (luminance) value and a color (chrominance) value. Chrominance subsampling discards some or all chrominance values to reduce the image size, but it can create visible artifacts.\"",
          "912:     IDC_CSHAPE_ENABLE_RADIO \"In this mode, the server sends only changes to the remote cursor's shape and position. This results in the best mouse responsiveness.\"",
          "913:     IDC_CSHAPE_IGNORE_RADIO \"In this mode, the remote mouse cursor will not be shown at all. Cursor shape updates and new coordinates received from the server will be ignored.\"",
          "914: END",
          "",
          "[Removed Lines]",
          "908:                             \"In this mode, the server draws the mouse cursor and continuously sends it to the client as an image. This can create performance problems on slow networks, but it allows you to see mouse movements from other users in a shared session.\"",
          "911:     IDC_COMPRESSLEVEL       \"Enabling zlib compression will greatly reduce the bandwidth usage of the Lossless Tight encoding method, but zlib requires a lot of server CPU time (more than JPEG, even.)  Thus, zlib is only really useful on slow networks.\"",
          "",
          "[Added Lines]",
          "907:                             \"In this mode, the server draws the mouse cursor and continuously sends it to the viewer as an image. This can create performance problems on slow networks, but it allows you to see mouse movements from other users in a shared session.\"",
          "910:     IDC_COMPRESSLEVEL       \"Enabling zlib compression will greatly reduce the bandwidth usage of the Lossless Tight encoding method, but zlib requires a lot of host CPU time (more than JPEG, even.)  Thus, zlib is only really useful on slow networks.\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}