{
  "cve_id": "CVE-2014-3568",
  "cve_desc": "OpenSSL before 0.9.8zc, 1.0.0 before 1.0.0o, and 1.0.1 before 1.0.1j does not properly enforce the no-ssl3 build option, which allows remote attackers to bypass intended access restrictions via an SSL 3.0 handshake, related to s23_clnt.c and s23_srvr.c.",
  "repo": "openssl/openssl",
  "patch_hash": "62f45cc27d07187b59551e4fad3db4e52ea73f2c",
  "patch_info": {
    "commit_hash": "62f45cc27d07187b59551e4fad3db4e52ea73f2c",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/62f45cc27d07187b59551e4fad3db4e52ea73f2c",
    "files": [
      "ssl/s23_clnt.c",
      "ssl/s23_srvr.c"
    ],
    "message": "Fix no-ssl3 configuration option\n\nCVE-2014-3568\n\nReviewed-by: Emilia Kasper <emilia@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/s23_clnt.c||ssl/s23_clnt.c",
      "ssl/s23_srvr.c||ssl/s23_srvr.c"
    ]
  },
  "patch_diff": {
    "ssl/s23_clnt.c||ssl/s23_clnt.c": [
      "File: ssl/s23_clnt.c -> ssl/s23_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "125:  if (ver == SSL2_VERSION)",
      "126:   return(SSLv2_client_method());",
      "127: #endif",
      "128:  if (ver == SSL3_VERSION)",
      "129:   return(SSLv3_client_method());",
      "131:   return(TLSv1_client_method());",
      "132:  else if (ver == TLS1_1_VERSION)",
      "133:   return(TLSv1_1_client_method());",
      "",
      "[Removed Lines]",
      "130:  else if (ver == TLS1_VERSION)",
      "",
      "[Added Lines]",
      "128: #ifndef OPENSSL_NO_SSL3",
      "131: #endif",
      "132:  if (ver == TLS1_VERSION)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "714:   {",
      "717:   if ((p[2] == SSL3_VERSION_MINOR) &&",
      "718:    !(s->options & SSL_OP_NO_SSLv3))",
      "719:    {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "719: #ifndef OPENSSL_NO_SSL3",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "728:    s->version=SSL3_VERSION;",
      "729:    s->method=SSLv3_client_method();",
      "730:    }",
      "732:    !(s->options & SSL_OP_NO_TLSv1))",
      "733:    {",
      "734:    s->version=TLS1_VERSION;",
      "",
      "[Removed Lines]",
      "731:   else if ((p[2] == TLS1_VERSION_MINOR) &&",
      "",
      "[Added Lines]",
      "734:   else",
      "735: #endif",
      "736:   if ((p[2] == TLS1_VERSION_MINOR) &&",
      "",
      "---------------"
    ],
    "ssl/s23_srvr.c||ssl/s23_srvr.c": [
      "File: ssl/s23_srvr.c -> ssl/s23_srvr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "127:  if (ver == SSL2_VERSION)",
      "128:   return(SSLv2_server_method());",
      "129: #endif",
      "130:  if (ver == SSL3_VERSION)",
      "131:   return(SSLv3_server_method());",
      "133:   return(TLSv1_server_method());",
      "134:  else if (ver == TLS1_1_VERSION)",
      "135:   return(TLSv1_1_server_method());",
      "",
      "[Removed Lines]",
      "132:  else if (ver == TLS1_VERSION)",
      "",
      "[Added Lines]",
      "130: #ifndef OPENSSL_NO_SSL3",
      "133: #endif",
      "134:  if (ver == TLS1_VERSION)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "613:  if ((type == 2) || (type == 3))",
      "614:   {",
      "617:   if (!ssl_init_wbio_buffer(s,1)) goto err;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "618:                 s->method = ssl23_get_server_method(s->version);",
      "619:   if (s->method == NULL)",
      "620:    {",
      "621:    SSLerr(SSL_F_SSL23_GET_CLIENT_HELLO,SSL_R_UNSUPPORTED_PROTOCOL);",
      "622:    goto err;",
      "623:    }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "640:    s->s3->rbuf.left=0;",
      "641:    s->s3->rbuf.offset=0;",
      "642:    }",
      "652:   s->client_version=(v[0]<<8)|v[1];",
      "653: #endif",
      "",
      "[Removed Lines]",
      "643:   if (s->version == TLS1_2_VERSION)",
      "644:    s->method = TLSv1_2_server_method();",
      "645:   else if (s->version == TLS1_1_VERSION)",
      "646:    s->method = TLSv1_1_server_method();",
      "647:   else if (s->version == TLS1_VERSION)",
      "648:    s->method = TLSv1_server_method();",
      "649:   else",
      "650:    s->method = SSLv3_server_method();",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cd332a07503bd9771595de87e768179f81715704",
      "candidate_info": {
        "commit_hash": "cd332a07503bd9771595de87e768179f81715704",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/cd332a07503bd9771595de87e768179f81715704",
        "files": [
          "ssl/s23_clnt.c",
          "ssl/s23_srvr.c"
        ],
        "message": "Fix no-ssl3 configuration option\n\nCVE-2014-3568\n\nReviewed-by: Emilia Kasper <emilia@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "ssl/s23_clnt.c||ssl/s23_clnt.c",
          "ssl/s23_srvr.c||ssl/s23_srvr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/s23_clnt.c||ssl/s23_clnt.c",
            "ssl/s23_srvr.c||ssl/s23_srvr.c"
          ],
          "candidate": [
            "ssl/s23_clnt.c||ssl/s23_clnt.c",
            "ssl/s23_srvr.c||ssl/s23_srvr.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/s23_clnt.c||ssl/s23_clnt.c": [
          "File: ssl/s23_clnt.c -> ssl/s23_clnt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:  if (ver == SSL2_VERSION)",
          "73:   return(SSLv2_client_method());",
          "74: #endif",
          "75:  if (ver == SSL3_VERSION)",
          "76:   return(SSLv3_client_method());",
          "78:   return(TLSv1_client_method());",
          "79:  else",
          "80:   return(NULL);",
          "",
          "[Removed Lines]",
          "77:  else if (ver == TLS1_VERSION)",
          "",
          "[Added Lines]",
          "75: #ifndef OPENSSL_NO_SSL3",
          "78: #endif",
          "79:  if (ver == TLS1_VERSION)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "533:   {",
          "536:   if ((p[2] == SSL3_VERSION_MINOR) &&",
          "537:    !(s->options & SSL_OP_NO_SSLv3))",
          "538:    {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "538: #ifndef OPENSSL_NO_SSL3",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "547:    s->version=SSL3_VERSION;",
          "548:    s->method=SSLv3_client_method();",
          "549:    }",
          "551:    !(s->options & SSL_OP_NO_TLSv1))",
          "552:    {",
          "553:    s->version=TLS1_VERSION;",
          "",
          "[Removed Lines]",
          "550:   else if ((p[2] == TLS1_VERSION_MINOR) &&",
          "",
          "[Added Lines]",
          "553:   else",
          "554: #endif",
          "555:   if ((p[2] == TLS1_VERSION_MINOR) &&",
          "",
          "---------------"
        ],
        "ssl/s23_srvr.c||ssl/s23_srvr.c": [
          "File: ssl/s23_srvr.c -> ssl/s23_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:  if (ver == SSL2_VERSION)",
          "125:   return(SSLv2_server_method());",
          "126: #endif",
          "127:  if (ver == SSL3_VERSION)",
          "128:   return(SSLv3_server_method());",
          "130:   return(TLSv1_server_method());",
          "131:  else",
          "132:   return(NULL);",
          "",
          "[Removed Lines]",
          "129:  else if (ver == TLS1_VERSION)",
          "",
          "[Added Lines]",
          "127: #ifndef OPENSSL_NO_SSL3",
          "130: #endif",
          "131:  if (ver == TLS1_VERSION)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "557:  if ((type == 2) || (type == 3))",
          "558:   {",
          "561:   if (!ssl_init_wbio_buffer(s,1)) goto err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "562:                 s->method = ssl23_get_server_method(s->version);",
          "563:   if (s->method == NULL)",
          "564:    {",
          "565:    SSLerr(SSL_F_SSL23_GET_CLIENT_HELLO,SSL_R_UNSUPPORTED_PROTOCOL);",
          "566:    goto err;",
          "567:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "580:    s->s3->rbuf.left=0;",
          "581:    s->s3->rbuf.offset=0;",
          "582:    }",
          "589:   s->client_version=(v[0]<<8)|v[1];",
          "590: #endif",
          "",
          "[Removed Lines]",
          "584:   if (s->version == TLS1_VERSION)",
          "585:    s->method = TLSv1_server_method();",
          "586:   else",
          "587:    s->method = SSLv3_server_method();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "26a59d9b46574e457870197dffa802871b4c8fc7",
      "candidate_info": {
        "commit_hash": "26a59d9b46574e457870197dffa802871b4c8fc7",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/26a59d9b46574e457870197dffa802871b4c8fc7",
        "files": [
          "ssl/s23_clnt.c",
          "ssl/s23_srvr.c"
        ],
        "message": "Fix no-ssl3 configuration option\n\nCVE-2014-3568\n\nReviewed-by: Emilia Kasper <emilia@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "ssl/s23_clnt.c||ssl/s23_clnt.c",
          "ssl/s23_srvr.c||ssl/s23_srvr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/s23_clnt.c||ssl/s23_clnt.c",
            "ssl/s23_srvr.c||ssl/s23_srvr.c"
          ],
          "candidate": [
            "ssl/s23_clnt.c||ssl/s23_clnt.c",
            "ssl/s23_srvr.c||ssl/s23_srvr.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/s23_clnt.c||ssl/s23_clnt.c": [
          "File: ssl/s23_clnt.c -> ssl/s23_clnt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:  if (ver == SSL2_VERSION)",
          "126:   return(SSLv2_client_method());",
          "127: #endif",
          "128:  if (ver == SSL3_VERSION)",
          "129:   return(SSLv3_client_method());",
          "131:   return(TLSv1_client_method());",
          "132:  else if (ver == TLS1_1_VERSION)",
          "133:   return(TLSv1_1_client_method());",
          "",
          "[Removed Lines]",
          "130:  else if (ver == TLS1_VERSION)",
          "",
          "[Added Lines]",
          "128: #ifndef OPENSSL_NO_SSL3",
          "131: #endif",
          "132:  if (ver == TLS1_VERSION)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "698:   {",
          "701:   if ((p[2] == SSL3_VERSION_MINOR) &&",
          "702:    !(s->options & SSL_OP_NO_SSLv3))",
          "703:    {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "703: #ifndef OPENSSL_NO_SSL3",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "712:    s->version=SSL3_VERSION;",
          "713:    s->method=SSLv3_client_method();",
          "714:    }",
          "716:    !(s->options & SSL_OP_NO_TLSv1))",
          "717:    {",
          "718:    s->version=TLS1_VERSION;",
          "",
          "[Removed Lines]",
          "715:   else if ((p[2] == TLS1_VERSION_MINOR) &&",
          "",
          "[Added Lines]",
          "718:   else",
          "719: #endif",
          "720:   if ((p[2] == TLS1_VERSION_MINOR) &&",
          "",
          "---------------"
        ],
        "ssl/s23_srvr.c||ssl/s23_srvr.c": [
          "File: ssl/s23_srvr.c -> ssl/s23_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:  if (ver == SSL2_VERSION)",
          "128:   return(SSLv2_server_method());",
          "129: #endif",
          "130:  if (ver == SSL3_VERSION)",
          "131:   return(SSLv3_server_method());",
          "133:   return(TLSv1_server_method());",
          "134:  else if (ver == TLS1_1_VERSION)",
          "135:   return(TLSv1_1_server_method());",
          "",
          "[Removed Lines]",
          "132:  else if (ver == TLS1_VERSION)",
          "",
          "[Added Lines]",
          "130: #ifndef OPENSSL_NO_SSL3",
          "133: #endif",
          "134:  if (ver == TLS1_VERSION)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "600:  if ((type == 2) || (type == 3))",
          "601:   {",
          "604:   if (!ssl_init_wbio_buffer(s,1)) goto err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "605:                 s->method = ssl23_get_server_method(s->version);",
          "606:   if (s->method == NULL)",
          "607:    {",
          "608:    SSLerr(SSL_F_SSL23_GET_CLIENT_HELLO,SSL_R_UNSUPPORTED_PROTOCOL);",
          "609:    goto err;",
          "610:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "627:    s->s3->rbuf.left=0;",
          "628:    s->s3->rbuf.offset=0;",
          "629:    }",
          "639:   s->client_version=(v[0]<<8)|v[1];",
          "640: #endif",
          "",
          "[Removed Lines]",
          "630:   if (s->version == TLS1_2_VERSION)",
          "631:    s->method = TLSv1_2_server_method();",
          "632:   else if (s->version == TLS1_1_VERSION)",
          "633:    s->method = TLSv1_1_server_method();",
          "634:   else if (s->version == TLS1_VERSION)",
          "635:    s->method = TLSv1_server_method();",
          "636:   else",
          "637:    s->method = SSLv3_server_method();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}