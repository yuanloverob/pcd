{
  "cve_id": "CVE-2022-1444",
  "cve_desc": "heap-use-after-free in GitHub repository radareorg/radare2 prior to 5.7.0. This vulnerability is capable of inducing denial of service.",
  "repo": "radareorg/radare2",
  "patch_hash": "14189710859c27981adb4c2c2aed2863c1859ec5",
  "patch_info": {
    "commit_hash": "14189710859c27981adb4c2c2aed2863c1859ec5",
    "repo": "radareorg/radare2",
    "commit_url": "https://github.com/radareorg/radare2/commit/14189710859c27981adb4c2c2aed2863c1859ec5",
    "files": [
      "libr/util/new_rbtree.c"
    ],
    "message": "Redo minor cleanup in new_rbtree",
    "before_after_code_files": [
      "libr/util/new_rbtree.c||libr/util/new_rbtree.c"
    ]
  },
  "patch_diff": {
    "libr/util/new_rbtree.c||libr/util/new_rbtree.c": [
      "File: libr/util/new_rbtree.c -> libr/util/new_rbtree.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "138:  r_return_val_if_fail (tree && data && cmp, false);",
      "139:  bool inserted = false;",
      "142:   tree->root = _node_new (data, NULL);",
      "144:    return false;",
      "145:   }",
      "146:   inserted = true;",
      "",
      "[Removed Lines]",
      "141:  if (tree->root == NULL) {",
      "143:   if (tree->root == NULL) {",
      "",
      "[Added Lines]",
      "141:  if (!tree->root) {",
      "143:   if (!tree->root) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "dfeb6b04036db241db8971e0bc5b68f444ace082",
      "candidate_info": {
        "commit_hash": "dfeb6b04036db241db8971e0bc5b68f444ace082",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/dfeb6b04036db241db8971e0bc5b68f444ace082",
        "files": [
          "libr/io/io_bank.c"
        ],
        "message": "Revert \"Fix use-after-free in iobank rbtree usage ##io\"\n\nThis reverts commit 37897226a1a31f982bfefdc4aeefc2e50355c73c.",
        "before_after_code_files": [
          "libr/io/io_bank.c||libr/io/io_bank.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/19991"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libr/io/io_bank.c||libr/io/io_bank.c": [
          "File: libr/io/io_bank.c -> libr/io/io_bank.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "237:   RRBNode *next = r_rbnode_next (entry);",
          "243:   entry = next;",
          "244:  }",
          "245:  if (entry && r_io_submap_from (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {",
          "",
          "[Removed Lines]",
          "239:   bool a = r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);",
          "240:   if (!a) {",
          "241:    break;",
          "242:   }",
          "",
          "[Added Lines]",
          "239:   r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "00c58e0ac9a76947c3b8f878e23f791900c9755a",
      "candidate_info": {
        "commit_hash": "00c58e0ac9a76947c3b8f878e23f791900c9755a",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/00c58e0ac9a76947c3b8f878e23f791900c9755a",
        "files": [
          "libr/io/io_map.c"
        ],
        "message": "Fix map boundary adjustment in r_io_map_add and r_io_map_add_bottom ##io",
        "before_after_code_files": [
          "libr/io/io_map.c||libr/io/io_map.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/19991"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libr/io/io_map.c||libr/io/io_map.c": [
          "File: libr/io/io_map.c -> libr/io/io_map.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:   perm &= desc->perm | R_PERM_X;",
          "135:   RIOMap *map[2] = {NULL, NULL};",
          "136:   if ((UT64_MAX - size + 1) < addr) {",
          "138:    map[0] = io_map_new (io, fd, perm, delta + new_size, 0LL, size - new_size);",
          "139:    if (!map[0]) {",
          "140:     return NULL;",
          "",
          "[Removed Lines]",
          "137:    const ut64 new_size = size - (UT64_MAX - addr + 1);",
          "",
          "[Added Lines]",
          "137:    const ut64 new_size = UT64_MAX - addr + 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "181:   perm &= desc->perm | R_PERM_X;",
          "182:   RIOMap *map[2] = {NULL, NULL};",
          "183:   if ((UT64_MAX - size + 1) < addr) {",
          "185:    map[0] = io_map_new (io, fd, perm, delta + new_size, 0LL, size - new_size);",
          "186:    if (!map[0]) {",
          "187:     return NULL;",
          "",
          "[Removed Lines]",
          "184:    const ut64 new_size = size - (UT64_MAX - addr + 1);",
          "",
          "[Added Lines]",
          "184:    const ut64 new_size = UT64_MAX - addr + 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2df5543b6d30c4b7b99a04510da7662f027fbe7e",
      "candidate_info": {
        "commit_hash": "2df5543b6d30c4b7b99a04510da7662f027fbe7e",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/2df5543b6d30c4b7b99a04510da7662f027fbe7e",
        "files": [
          "libr/io/io_bank.c"
        ],
        "message": "Revert \"Properly fix the UAF in r_io_bank_map_add_top ##crash\"\n\nThis reverts commit 3345147916b9bb3da225248d571cdbac690c0c4d.",
        "before_after_code_files": [
          "libr/io/io_bank.c||libr/io/io_bank.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/19991"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libr/io/io_bank.c||libr/io/io_bank.c": [
          "File: libr/io/io_bank.c -> libr/io/io_bank.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "233:   entry = r_rbnode_next (entry);",
          "234:  }",
          "235:  ut64 smto = r_io_submap_to (sm);",
          "249:   }",
          "250:  }",
          "251:  if (entry && r_io_submap_from (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {",
          "252:   bd = (RIOSubMap *)entry->data;",
          "",
          "[Removed Lines]",
          "236:  if (entry) {",
          "237:   ut64 ento = r_io_submap_to (((RIOSubMap*)entry->data));",
          "238:   while (entry && ento <= smto) {",
          "240:    RRBNode *next = r_rbnode_next (entry);",
          "243:    ento = r_io_submap_to (((RIOSubMap*)entry->data));",
          "244:    bool a = r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);",
          "245:    if (!a) {",
          "246:     next = NULL;",
          "247:    }",
          "248:    entry = next;",
          "",
          "[Added Lines]",
          "236:  while (entry && r_io_submap_to (((RIOSubMap *)entry->data)) <= smto) {",
          "238:   RRBNode *next = r_rbnode_next (entry);",
          "241:   void *smfree = bank->submaps->free;",
          "242:   bank->submaps->free = NULL;",
          "243:   bool a = r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);",
          "244:   bank->submaps->free = smfree;",
          "245:   if (!a) {",
          "246:    entry = NULL;",
          "247:    break;",
          "249:   entry = next;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "daee7dd79ecc673ed4f160e0320d32756611eee0",
      "candidate_info": {
        "commit_hash": "daee7dd79ecc673ed4f160e0320d32756611eee0",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/daee7dd79ecc673ed4f160e0320d32756611eee0",
        "files": [
          "libr/util/new_rbtree.c"
        ],
        "message": "Fix bug and optimize deletion in new rbtree api ##util",
        "before_after_code_files": [
          "libr/util/new_rbtree.c||libr/util/new_rbtree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/19991"
        ],
        "olp_code_files": {
          "patch": [
            "libr/util/new_rbtree.c||libr/util/new_rbtree.c"
          ],
          "candidate": [
            "libr/util/new_rbtree.c||libr/util/new_rbtree.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/util/new_rbtree.c||libr/util/new_rbtree.c": [
          "File: libr/util/new_rbtree.c -> libr/util/new_rbtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: Copyright (c) 2018, lynnl",
          "8: All rights reserved.",
          "",
          "[Removed Lines]",
          "6: Cleaned up and refactored for r2 in 2021: condret",
          "",
          "[Added Lines]",
          "6: Cleaned up and refactored for r2 in 2021 - 2022: condret",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "250:    node_b->link[0]->parent = node_b;",
          "251:   }",
          "252:   if (node_b->link[1]) {",
          "254:   }",
          "255:   return;",
          "256:  }",
          "",
          "[Removed Lines]",
          "253:    node_b->link[0]->parent = node_b;",
          "",
          "[Added Lines]",
          "253:    node_b->link[1]->parent = node_b;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "307:   q = q->link[dir];",
          "309:   dir = cmp (data, q->data, user);",
          "311:    found = q;",
          "312:   }",
          "",
          "[Removed Lines]",
          "310:   if (dir == 0) {",
          "",
          "[Added Lines]",
          "310:   if (dir == 0 && !found) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ead0cee8265df7d019065b82d36284addbf05a75",
      "candidate_info": {
        "commit_hash": "ead0cee8265df7d019065b82d36284addbf05a75",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/ead0cee8265df7d019065b82d36284addbf05a75",
        "files": [
          "libr/io/io_bank.c",
          "libr/util/new_rbtree.c"
        ],
        "message": "Revert \"Prefer memleak over usaf in io.bank's rbtree bug ##crash\"\n\nThis reverts commit b5cb90b28ec71fda3504da04e3cc94a362807f5e.",
        "before_after_code_files": [
          "libr/io/io_bank.c||libr/io/io_bank.c",
          "libr/util/new_rbtree.c||libr/util/new_rbtree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libr/util/new_rbtree.c||libr/util/new_rbtree.c"
          ],
          "candidate": [
            "libr/util/new_rbtree.c||libr/util/new_rbtree.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/io/io_bank.c||libr/io/io_bank.c": [
          "File: libr/io/io_bank.c -> libr/io/io_bank.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:   r_io_submap_set_to (bd, r_io_submap_from (sm) - 1);",
          "233:   entry = r_rbnode_next (entry);",
          "234:  }",
          "238:   RRBNode *next = r_rbnode_next (entry);",
          "243:   bool a = r_crbtree_delete (bank->submaps, entry->data, _find_sm_by_from_vaddr_cb, NULL);",
          "245:   if (!a) {",
          "247:    break;",
          "248:   }",
          "249:   entry = next;",
          "",
          "[Removed Lines]",
          "235:  ut64 smto = r_io_submap_to (sm);",
          "236:  while (entry && r_io_submap_to (((RIOSubMap *)entry->data)) <= smto) {",
          "241:   void *smfree = bank->submaps->free;",
          "242:   bank->submaps->free = NULL;",
          "244:   bank->submaps->free = smfree;",
          "246:    entry = NULL;",
          "",
          "[Added Lines]",
          "235:  while (entry && r_io_submap_to (((RIOSubMap *)entry->data)) <= r_io_submap_to (sm)) {",
          "",
          "---------------"
        ],
        "libr/util/new_rbtree.c||libr/util/new_rbtree.c": [
          "File: libr/util/new_rbtree.c -> libr/util/new_rbtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:  r_return_val_if_fail (tree && data && cmp, false);",
          "139:  bool inserted = false;",
          "142:   tree->root = _node_new (data, NULL);",
          "144:    return false;",
          "145:   }",
          "146:   inserted = true;",
          "",
          "[Removed Lines]",
          "141:  if (!tree->root) {",
          "143:   if (!tree->root) {",
          "",
          "[Added Lines]",
          "141:  if (tree->root == NULL) {",
          "143:   if (tree->root == NULL) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}