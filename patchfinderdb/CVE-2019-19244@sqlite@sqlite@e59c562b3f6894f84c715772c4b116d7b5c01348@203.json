{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e46201e264082d02490e20f778b3f0fc00ba136f",
      "candidate_info": {
        "commit_hash": "e46201e264082d02490e20f778b3f0fc00ba136f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e46201e264082d02490e20f778b3f0fc00ba136f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/fkey.c",
          "test/fkey8.test"
        ],
        "message": "Fix a bug in the code that detects self-referencing rows as part of foreign key processing. Fix for [50d2a6c2].\n\nFossilOrigin-Name: 16fff05347f42fe9fa0f3150290b98b59a9bb921e49dc07ca397aa1de7a7e17d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/fkey.c||src/fkey.c",
          "test/fkey8.test||test/fkey8.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ddf06db702761d663119d508afe21d7dfebe963d576bb42fc2f2024205ab86f8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/fkey.c||src/fkey.c": [
          "File: src/fkey.c -> src/fkey.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "615:       pNe = sqlite3PExpr(pParse, TK_NE, pLeft, pRight);",
          "616:     }else{",
          "617:       Expr *pEq, *pAll = 0;",
          "619:       assert( pIdx!=0 );",
          "621:         i16 iCol = pIdx->aiColumn[i];",
          "622:         assert( iCol>=0 );",
          "623:         pLeft = exprTableRegister(pParse, pTab, regData, iCol);",
          "626:         pAll = sqlite3ExprAnd(db, pAll, pEq);",
          "627:       }",
          "628:       pNe = sqlite3PExpr(pParse, TK_NOT, pAll, 0);",
          "",
          "[Removed Lines]",
          "618:       Index *pPk = sqlite3PrimaryKeyIndex(pTab);",
          "620:       for(i=0; i<pPk->nKeyCol; i++){",
          "624:         pRight = exprTableColumn(db, pTab, pSrc->a[0].iCursor, iCol);",
          "625:         pEq = sqlite3PExpr(pParse, TK_EQ, pLeft, pRight);",
          "",
          "[Added Lines]",
          "622:       for(i=0; i<pIdx->nKeyCol; i++){",
          "626:         pRight = sqlite3Expr(db, TK_ID, pTab->aCol[iCol].zName);",
          "627:         pEq = sqlite3PExpr(pParse, TK_IS, pLeft, pRight);",
          "",
          "---------------"
        ],
        "test/fkey8.test||test/fkey8.test": [
          "File: test/fkey8.test -> test/fkey8.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "164:   DELETE FROM p3 WHERE a=1",
          "165: } {1 {FOREIGN KEY constraint failed}}",
          "167: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168: do_execsql_test 3.0 {",
          "169:   PRAGMA foreign_keys=ON;",
          "170:   CREATE TABLE t2(",
          "171:     a PRIMARY KEY, b, c, d, e,",
          "172:       FOREIGN KEY(b, c) REFERENCES t2(d, e)",
          "173:   ) WITHOUT ROWID;",
          "174:   CREATE UNIQUE INDEX idx ON t2(d, e);",
          "176:   INSERT INTO t2 VALUES(1, 'one', 'one', 'one', 'one'); -- row is parent of self",
          "177:   INSERT INTO t2 VALUES(2, 'one', 'one', 'one', NULL);  -- parent is row 1",
          "178: }",
          "180: do_catchsql_test 3.1 {",
          "181:   DELETE FROM t2 WHERE a=1;",
          "182: } {1 {FOREIGN KEY constraint failed}}",
          "184: do_execsql_test 4.0 {",
          "185:   CREATE TABLE t1 (",
          "186:       c1 PRIMARY KEY,",
          "187:       c2 NUMERIC,",
          "188:       FOREIGN KEY(c1) REFERENCES t1(c2)",
          "189:       ) WITHOUT ROWID ;",
          "190:   CREATE INDEX t1c1 ON t1(c1);",
          "191:   CREATE UNIQUE INDEX t1c1unique ON t1(c2);",
          "192: }",
          "193: do_catchsql_test 4.1 {",
          "194:   INSERT OR REPLACE INTO t1 VALUES(10000, 20000);",
          "195: } {1 {FOREIGN KEY constraint failed}}",
          "196: do_execsql_test 4.2 {",
          "197:   INSERT OR REPLACE INTO t1 VALUES(20000, 20000);",
          "198: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a31dc201e905816f97fd20001cb5f154276f91d",
      "candidate_info": {
        "commit_hash": "0a31dc201e905816f97fd20001cb5f154276f91d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0a31dc201e905816f97fd20001cb5f154276f91d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "If the initial byte of a record is a large value, then always used the generalized record comparison routine sqlite3VdbeRecordCompare() rather than one of the specialized versions that are optimized for shorter records.\n\nFossilOrigin-Name: c1ac00706bae45fe9735061ada025880606cdfb8ecfdaa36b4e2d04275820861",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 906d1fd8650874236e0bf5734d5347dcc45ec036164a56570fec37da4ffeaf8f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5552:             sqlite3_free(pCellKey);",
          "5553:             goto moveto_finish;",
          "5554:           }",
          "5556:           sqlite3_free(pCellKey);",
          "5557:         }",
          "5558:         assert(",
          "",
          "[Removed Lines]",
          "5555:           c = xRecordCompare(nCell, pCellKey, pIdxKey);",
          "",
          "[Added Lines]",
          "5555:           c = sqlite3VdbeRecordCompare(nCell, pCellKey, pIdxKey);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21a3b3191eb0869448601b07123639eae1789f05",
      "candidate_info": {
        "commit_hash": "21a3b3191eb0869448601b07123639eae1789f05",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/21a3b3191eb0869448601b07123639eae1789f05",
        "files": [
          "Makefile.msc",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Support Tcl libraries with a suffix.\n\nFossilOrigin-Name: 8d0153996a3685a9b109a01fea0cba76e4296b010e96fc0db43fa6fde54d1965",
        "before_after_code_files": [
          "Makefile.msc||Makefile.msc",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.msc||Makefile.msc": [
          "File: Makefile.msc -> Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "864: TCLVERSION = 86",
          "865: !ENDIF",
          "867: !IFNDEF TCLDIR",
          "868: TCLDIR = $(TOP)\\compat\\tcl",
          "869: !ENDIF",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "867: !IFNDEF TCLSUFFIX",
          "868: TCLSUFFIX =",
          "869: !ENDIF",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "877: !ENDIF",
          "879: !IFNDEF LIBTCL",
          "881: !ENDIF",
          "883: !IFNDEF LIBTCLSTUB",
          "885: !ENDIF",
          "887: !IFNDEF LIBTCLPATH",
          "",
          "[Removed Lines]",
          "880: LIBTCL = tcl$(TCLVERSION).lib",
          "884: LIBTCLSTUB = tclstub$(TCLVERSION).lib",
          "",
          "[Added Lines]",
          "884: LIBTCL = tcl$(TCLVERSION)$(TCLSUFFIX).lib",
          "888: LIBTCLSTUB = tclstub$(TCLVERSION)$(TCLSUFFIX).lib",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c9f1972e10b0cdb5e351a776a64c60acf404dcfbe2a8a28c0a273bbe851e677f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f55a571fcd028d57fcde0d25150aa3a933b2d8d",
      "candidate_info": {
        "commit_hash": "0f55a571fcd028d57fcde0d25150aa3a933b2d8d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0f55a571fcd028d57fcde0d25150aa3a933b2d8d",
        "files": [
          "ext/fts5/fts5_index.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Avoid an \"unitialized value read\" problem in fts5 that can occur with a corrupt database.\n\nFossilOrigin-Name: 6cae81cd1ffb0180e0260d5ba921502c7dee2f54637bff3558a4d1cb5dfd3f32",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "690:         pRet = 0;",
          "691:       }else{",
          "694:         pRet->p[nByte] = 0x00;",
          "695:       }",
          "696:     }",
          "697:     p->rc = rc;",
          "",
          "[Removed Lines]",
          "693:         pRet->szLeaf = fts5GetU16(&pRet->p[2]);",
          "",
          "[Added Lines]",
          "694:         pRet->szLeaf = fts5GetU16(&pRet->p[2]);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9bad745d373f4686a2726c3f77a2ccad60e7181645d7ed483a2e43075a4ef30c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1116b1785c018911c33c4148aee1987810b5670b",
      "candidate_info": {
        "commit_hash": "1116b1785c018911c33c4148aee1987810b5670b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1116b1785c018911c33c4148aee1987810b5670b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/os_unix.c"
        ],
        "message": "In the unix VFS layer, do not attempt to chown() the journal to be the same as the database if running in 8+3 filename mode.  Also, update the comments on the chown() attempt to be more precise.\n\nFossilOrigin-Name: ab853724a7e01ca32167d294c3c80d6632e805bdf39b6d56db82226a00ad72dc",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/os_unix.c||src/os_unix.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 489a1eb3aa2f1225b97b50a5f8688cf1a4ab0371973da1badc29616d70386c03",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/os_unix.c||src/os_unix.c": [
          "File: src/os_unix.c -> src/os_unix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6059:       goto open_finished;",
          "6060:     }",
          "6067:       robustFchown(fd, uid, gid);",
          "6068:     }",
          "6069:   }",
          "",
          "[Removed Lines]",
          "6066:     if( flags & (SQLITE_OPEN_WAL|SQLITE_OPEN_MAIN_JOURNAL) ){",
          "",
          "[Added Lines]",
          "6074:     if( openFlags && (flags & (SQLITE_OPEN_WAL|SQLITE_OPEN_MAIN_JOURNAL))!=0 ){",
          "",
          "---------------"
        ]
      }
    }
  ]
}