{
  "cve_id": "CVE-2018-1000118",
  "cve_desc": "Github Electron version Electron 1.8.2-beta.4 and earlier contains a Command Injection vulnerability in Protocol Handler that can result in command execute. This attack appear to be exploitable via the victim opening an electron protocol handler in their browser. This vulnerability appears to have been fixed in Electron 1.8.2-beta.5. This issue is due to an incomplete fix for CVE-2018-1000006, specifically the black list used was not case insensitive allowing an attacker to potentially bypass it.",
  "repo": "electron/electron",
  "patch_hash": "ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
  "patch_info": {
    "commit_hash": "ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
    "repo": "electron/electron",
    "commit_url": "https://github.com/electron/electron/commit/ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
    "files": [
      "atom/app/command_line_args.cc"
    ],
    "message": "Use case-insensitive switch comparisons",
    "before_after_code_files": [
      "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
    ]
  },
  "patch_diff": {
    "atom/app/command_line_args.cc||atom/app/command_line_args.cc": [
      "File: atom/app/command_line_args.cc -> atom/app/command_line_args.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "1391:   if (prefix_length > 0) {",
      "1392:     a += prefix_length;",
      "1394:     auto* iter = std::lower_bound(std::begin(kBlacklist), std::end(kBlacklist),",
      "1395:                                   switch_name);",
      "1396:     if (iter != std::end(kBlacklist) && switch_name == *iter) {",
      "",
      "[Removed Lines]",
      "1393:     std::string switch_name(a, strcspn(a, \"=\"));",
      "",
      "[Added Lines]",
      "1393:     std::string switch_name =",
      "1394:         base::ToLowerASCII(base::StringPiece(a, strcspn(a, \"=\")));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e51c78f10c472156ed47cea227658838fba646a4",
      "candidate_info": {
        "commit_hash": "e51c78f10c472156ed47cea227658838fba646a4",
        "repo": "electron/electron",
        "commit_url": "https://github.com/electron/electron/commit/e51c78f10c472156ed47cea227658838fba646a4",
        "files": [
          "atom/app/command_line_args.cc"
        ],
        "message": "fix oops\n\nbecause compiling before pushing is for wusses",
        "before_after_code_files": [
          "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/electron/electron/pull/11796"
        ],
        "olp_code_files": {
          "patch": [
            "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
          ],
          "candidate": [
            "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
          ]
        }
      },
      "candidate_diff": {
        "atom/app/command_line_args.cc||atom/app/command_line_args.cc": [
          "File: atom/app/command_line_args.cc -> atom/app/command_line_args.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1405:                           return base::StringPiece(a) < base::StringPiece(b);",
          "1406:                         }))",
          "1407:       << \"The kBlacklist must be in sorted order\";",
          "1412:   const base::CommandLine::StringType dashdash(2, '-');",
          "1413:   bool block_blacklisted_args = false;",
          "",
          "[Removed Lines]",
          "1408:   DCHECK_NE(std::binary_search(std::begin(kBlacklist), std::end(kBlacklist),",
          "1409:                       base::StringPiece(\"inspect\"));",
          "1410:       << \"Do not forget to add Node command line flags to kBlacklist\";",
          "",
          "[Added Lines]",
          "1408:   DCHECK(std::binary_search(std::begin(kBlacklist), std::end(kBlacklist),",
          "1409:                             base::StringPiece(\"inspect\")))",
          "1410:       << \"Remember to add Node command line flags to kBlacklist\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1106cde687bee3f9098a4476d2933cfacea166c7",
      "candidate_info": {
        "commit_hash": "1106cde687bee3f9098a4476d2933cfacea166c7",
        "repo": "electron/electron",
        "commit_url": "https://github.com/electron/electron/commit/1106cde687bee3f9098a4476d2933cfacea166c7",
        "files": [
          "atom/app/command_line_args.cc"
        ],
        "message": "fix oops",
        "before_after_code_files": [
          "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/electron/electron/pull/11796"
        ],
        "olp_code_files": {
          "patch": [
            "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
          ],
          "candidate": [
            "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
          ]
        }
      },
      "candidate_diff": {
        "atom/app/command_line_args.cc||atom/app/command_line_args.cc": [
          "File: atom/app/command_line_args.cc -> atom/app/command_line_args.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1388:     a += prefix_length;",
          "1389:     std::string switch_name =",
          "1390:         base::ToLowerASCII(base::StringPiece(a, strcspn(a, \"=\")));",
          "1393:   }",
          "1395:   return false;",
          "",
          "[Removed Lines]",
          "1391:     return std::lower_bound(std::begin(kBlacklist), std::end(kBlacklist),",
          "1392:                             switch_name);",
          "",
          "[Added Lines]",
          "1391:     return std::binary_search(std::begin(kBlacklist), std::end(kBlacklist),",
          "1392:                               switch_name);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "09a2c804439f73adb32c81631ad9b354a72ba3e0",
      "candidate_info": {
        "commit_hash": "09a2c804439f73adb32c81631ad9b354a72ba3e0",
        "repo": "electron/electron",
        "commit_url": "https://github.com/electron/electron/commit/09a2c804439f73adb32c81631ad9b354a72ba3e0",
        "files": [
          "atom/app/command_line_args.cc"
        ],
        "message": "use std::binary_search to search switch blacklist",
        "before_after_code_files": [
          "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/electron/electron/pull/11796"
        ],
        "olp_code_files": {
          "patch": [
            "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
          ],
          "candidate": [
            "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
          ]
        }
      },
      "candidate_diff": {
        "atom/app/command_line_args.cc||atom/app/command_line_args.cc": [
          "File: atom/app/command_line_args.cc -> atom/app/command_line_args.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1388:     a += prefix_length;",
          "1389:     std::string switch_name =",
          "1390:         base::ToLowerASCII(base::StringPiece(a, strcspn(a, \"=\")));",
          "1396:   }",
          "1398:   return false;",
          "",
          "[Removed Lines]",
          "1391:     auto* iter = std::lower_bound(std::begin(kBlacklist), std::end(kBlacklist),",
          "1392:                                   switch_name);",
          "1393:     if (iter != std::end(kBlacklist) && switch_name == *iter) {",
          "1394:       return true;",
          "1395:     }",
          "",
          "[Added Lines]",
          "1391:     return std::lower_bound(std::begin(kBlacklist), std::end(kBlacklist),",
          "1392:                             switch_name);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1408:                           return base::StringPiece(a) < base::StringPiece(b);",
          "1409:                         }))",
          "1410:       << \"The kBlacklist must be in sorted order\";",
          "1414:       << \"Do not forget to add Node command line flags to kBlacklist\";",
          "1416:   const base::CommandLine::StringType dashdash(2, '-');",
          "",
          "[Removed Lines]",
          "1411:   DCHECK_NE(std::find(std::begin(kBlacklist), std::end(kBlacklist),",
          "1412:                       base::StringPiece(\"inspect\")),",
          "1413:             std::end(kBlacklist))",
          "",
          "[Added Lines]",
          "1408:   DCHECK_NE(std::binary_search(std::begin(kBlacklist), std::end(kBlacklist),",
          "1409:                       base::StringPiece(\"inspect\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8405fe763e25d2cd0be22b87ddb41248671cbc68",
      "candidate_info": {
        "commit_hash": "8405fe763e25d2cd0be22b87ddb41248671cbc68",
        "repo": "electron/electron",
        "commit_url": "https://github.com/electron/electron/commit/8405fe763e25d2cd0be22b87ddb41248671cbc68",
        "files": [
          "atom/app/command_line_args.cc"
        ],
        "message": "Make a copy-paste recipe for rebuilding the blacklist",
        "before_after_code_files": [
          "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/electron/electron/pull/11796"
        ],
        "olp_code_files": {
          "patch": [
            "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
          ],
          "candidate": [
            "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
          ]
        }
      },
      "candidate_diff": {
        "atom/app/command_line_args.cc||atom/app/command_line_args.cc": [
          "File: atom/app/command_line_args.cc -> atom/app/command_line_args.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:   return false;",
          "39: }",
          "59: const char* kBlacklist[] = {",
          "60:   \"/prefetch:1\",",
          "61:   \"/prefetch:2\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:    (find ./ -name \"*switches.cc\" | \\",
          "47:       xargs grep -P --no-filename \"\\\"\\S+\\\";\" | \\",
          "48:       perl -pe 's|^.*?\"(\\S+)\";|  \"$1\",|'; \\",
          "49:       echo '  \"inspect\",'; \\",
          "50:       echo '  \"inspect-brk\",') | \\",
          "51:     LANG=C sort | \\",
          "52:     uniq > blacklist-switches.txt",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c49cb29ddf3368daf279bd60c007f9c015bc834c",
      "candidate_info": {
        "commit_hash": "c49cb29ddf3368daf279bd60c007f9c015bc834c",
        "repo": "electron/electron",
        "commit_url": "https://github.com/electron/electron/commit/c49cb29ddf3368daf279bd60c007f9c015bc834c",
        "files": [
          "atom/app/atom_library_main.h",
          "atom/app/atom_library_main.mm",
          "atom/app/atom_main.cc",
          "atom/app/command_line_args.cc",
          "atom/app/command_line_args.h",
          "atom/browser/api/atom_api_app.cc",
          "atom/browser/atom_browser_client.cc",
          "atom/browser/relauncher.cc",
          "atom/common/atom_command_line.cc",
          "atom/common/atom_command_line.h",
          "atom/common/node_bindings.cc",
          "docs/api/client-request.md",
          "docs/api/web-contents.md",
          "docs/api/webview-tag.md",
          "docs/development/testing.md",
          "filenames.gypi",
          "spec/api-app-spec.js"
        ],
        "message": "Disallow launching unknown apps via browser client.\n\nCVE-2018-1000006",
        "before_after_code_files": [
          "atom/app/atom_library_main.h||atom/app/atom_library_main.h",
          "atom/app/atom_library_main.mm||atom/app/atom_library_main.mm",
          "atom/app/atom_main.cc||atom/app/atom_main.cc",
          "atom/app/command_line_args.cc||atom/app/command_line_args.cc",
          "atom/app/command_line_args.h||atom/app/command_line_args.h",
          "atom/browser/api/atom_api_app.cc||atom/browser/api/atom_api_app.cc",
          "atom/browser/atom_browser_client.cc||atom/browser/atom_browser_client.cc",
          "atom/browser/relauncher.cc||atom/browser/relauncher.cc",
          "atom/common/atom_command_line.cc||atom/common/atom_command_line.cc",
          "atom/common/atom_command_line.h||atom/common/atom_command_line.h",
          "atom/common/node_bindings.cc||atom/common/node_bindings.cc",
          "filenames.gypi||filenames.gypi",
          "spec/api-app-spec.js||spec/api-app-spec.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
          ],
          "candidate": [
            "atom/app/command_line_args.cc||atom/app/command_line_args.cc"
          ]
        }
      },
      "candidate_diff": {
        "atom/app/atom_library_main.h||atom/app/atom_library_main.h": [
          "File: atom/app/atom_library_main.h -> atom/app/atom_library_main.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #if defined(OS_MACOSX)",
          "11: extern \"C\" {",
          "12: __attribute__((visibility(\"default\")))",
          "15: __attribute__((visibility(\"default\")))",
          "16: int AtomInitializeICUandStartNode(int argc, char *argv[]);",
          "",
          "[Removed Lines]",
          "13: int AtomMain(int argc, const char* argv[]);",
          "",
          "[Added Lines]",
          "13: int AtomMain(int argc, char* argv[]);",
          "",
          "---------------"
        ],
        "atom/app/atom_library_main.mm||atom/app/atom_library_main.mm": [
          "File: atom/app/atom_library_main.mm -> atom/app/atom_library_main.mm",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: #include \"content/public/app/content_main.h\"",
          "17: #if defined(OS_MACOSX)",
          "19:   atom::AtomMainDelegate delegate;",
          "20:   content::ContentMainParams params(&delegate);",
          "21:   params.argc = argc;",
          "23:   atom::AtomCommandLine::Init(argc, argv);",
          "24:   return content::ContentMain(params);",
          "25: }",
          "",
          "[Removed Lines]",
          "18: int AtomMain(int argc, const char* argv[]) {",
          "22:   params.argv = argv;",
          "",
          "[Added Lines]",
          "18: int AtomMain(int argc, char* argv[]) {",
          "22:   params.argv = const_cast<const char**>(argv);",
          "",
          "---------------"
        ],
        "atom/app/atom_main.cc||atom/app/atom_main.cc": [
          "File: atom/app/atom_main.cc -> atom/app/atom_main.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #include \"atom/app/atom_main.h\"",
          "9: #if defined(OS_WIN)",
          "10: #include <windows.h>  // windows.h must be included first",
          "",
          "[Removed Lines]",
          "7: #include <stdlib.h>",
          "",
          "[Added Lines]",
          "7: #include <cstdlib>",
          "8: #include <vector>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: #include <tchar.h>",
          "17: #include \"atom/app/atom_main_delegate.h\"",
          "18: #include \"atom/common/crash_reporter/win/crash_service_main.h\"",
          "19: #include \"base/environment.h\"",
          "20: #include \"base/process/launch.h\"",
          "21: #include \"base/win/windows_version.h\"",
          "22: #include \"content/public/app/sandbox_helper_win.h\"",
          "23: #include \"sandbox/win/src/sandbox_types.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #include \"atom/app/command_line_args.h\"",
          "23: #include \"base/strings/utf_string_conversions.h\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53: #if defined(OS_WIN)",
          "54: int APIENTRY wWinMain(HINSTANCE instance, HINSTANCE, wchar_t* cmd, int) {",
          "60: #ifdef _DEBUG",
          "62:   static const auto kCI = \"ELECTRON_CI\";",
          "63:   bool is_ci = IsEnvSet(kCI);",
          "64:   if (!is_ci) {",
          "67:         is_ci = true;",
          "68:         _putenv_s(kCI, \"1\");  // set flag for child processes",
          "69:         break;",
          "",
          "[Removed Lines]",
          "55:   int argc = 0;",
          "56:   wchar_t** wargv = ::CommandLineToArgvW(::GetCommandLineW(), &argc);",
          "58:   bool run_as_node = IsEnvSet(kRunAsNode);",
          "65:     for (int i = 0; i < argc; ++i) {",
          "66:       if (!_wcsicmp(wargv[i], L\"--ci\")) {",
          "",
          "[Added Lines]",
          "58:   struct Arguments {",
          "59:     int argc = 0;",
          "60:     wchar_t** argv = ::CommandLineToArgvW(::GetCommandLineW(), &argc);",
          "62:     ~Arguments() { LocalFree(argv); }",
          "63:   } arguments;",
          "65:   if (!arguments.argv)",
          "66:     return -1;",
          "73:     for (int i = 0; i < arguments.argc; ++i) {",
          "74:       if (!_wcsicmp(arguments.argv[i], L\"--ci\")) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "81:   }",
          "82: #endif",
          "85:   if (run_as_node || !IsEnvSet(\"ELECTRON_NO_ATTACH_CONSOLE\"))",
          "86:     base::RouteStdioToConsole(false);",
          "122: #ifndef DEBUG",
          "",
          "[Removed Lines]",
          "89:   char** argv = new char*[argc];",
          "90:   for (int i = 0; i < argc; i++) {",
          "92:     DWORD size = WideCharToMultiByte(CP_UTF8,",
          "93:                                      0,",
          "94:                                      wargv[i],",
          "95:                                      -1,",
          "96:                                      NULL,",
          "97:                                      0,",
          "98:                                      NULL,",
          "99:                                      NULL);",
          "100:     if (size == 0) {",
          "102:       fprintf(stderr, \"Could not convert arguments to utf8.\");",
          "103:       exit(1);",
          "104:     }",
          "106:     argv[i] = new char[size];",
          "107:     DWORD result = WideCharToMultiByte(CP_UTF8,",
          "108:                                        0,",
          "109:                                        wargv[i],",
          "110:                                        -1,",
          "111:                                        argv[i],",
          "112:                                        size,",
          "113:                                        NULL,",
          "114:                                        NULL);",
          "115:     if (result == 0) {",
          "117:       fprintf(stderr, \"Could not convert arguments to utf8.\");",
          "118:       exit(1);",
          "119:     }",
          "120:   }",
          "",
          "[Added Lines]",
          "92:   bool run_as_node = IsEnvSet(kRunAsNode);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "139: #endif",
          "141:   if (run_as_node) {",
          "143:     base::AtExitManager atexit_manager;",
          "144:     base::i18n::InitializeICU();",
          "146:   } else if (IsEnvSet(\"ELECTRON_INTERNAL_CRASH_SERVICE\")) {",
          "147:     return crash_service::Main(cmd);",
          "148:   }",
          "150:   sandbox::SandboxInterfaceInfo sandbox_info = {0};",
          "151:   content::InitializeSandboxInfo(&sandbox_info);",
          "152:   atom::AtomMainDelegate delegate;",
          "",
          "[Removed Lines]",
          "145:     return atom::NodeMain(argc, argv);",
          "",
          "[Added Lines]",
          "118:     std::vector<char*> argv(arguments.argc);",
          "119:     std::transform(",
          "120:         arguments.argv, arguments.argv + arguments.argc, argv.begin(),",
          "121:         [](auto& a) { return _strdup(base::WideToUTF8(a).c_str()); });",
          "125:     auto ret = atom::NodeMain(argv.size(), argv.data());",
          "126:     std::for_each(argv.begin(), argv.end(), free);",
          "127:     return ret;",
          "132:   if (!atom::CheckCommandLineArguments(arguments.argc, arguments.argv))",
          "133:     return -1;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "154:   content::ContentMainParams params(&delegate);",
          "155:   params.instance = instance;",
          "156:   params.sandbox_info = &sandbox_info;",
          "159:   return content::ContentMain(params);",
          "160: }",
          "162: #elif defined(OS_LINUX)  // defined(OS_WIN)",
          "165:   if (IsEnvSet(kRunAsNode)) {",
          "166:     base::i18n::InitializeICU();",
          "167:     base::AtExitManager atexit_manager;",
          "169:   }",
          "171:   atom::AtomMainDelegate delegate;",
          "172:   content::ContentMainParams params(&delegate);",
          "173:   params.argc = argc;",
          "175:   atom::AtomCommandLine::Init(argc, argv);",
          "176:   return content::ContentMain(params);",
          "177: }",
          "179: #else  // defined(OS_LINUX)",
          "182:   if (IsEnvSet(kRunAsNode)) {",
          "184:   }",
          "186:   return AtomMain(argc, argv);",
          "",
          "[Removed Lines]",
          "157:   atom::AtomCommandLine::Init(argc, argv);",
          "158:   atom::AtomCommandLine::InitW(argc, wargv);",
          "164: int main(int argc, const char* argv[]) {",
          "168:     return atom::NodeMain(argc, const_cast<char**>(argv));",
          "174:   params.argv = argv;",
          "181: int main(int argc, const char* argv[]) {",
          "183:     return AtomInitializeICUandStartNode(argc, const_cast<char**>(argv));",
          "",
          "[Added Lines]",
          "142:   atom::AtomCommandLine::Init(arguments.argc, arguments.argv);",
          "148: int main(int argc, char* argv[]) {",
          "152:     return atom::NodeMain(argc, argv);",
          "158:   params.argv = const_cast<const char**>(argv);",
          "165: int main(int argc, char* argv[]) {",
          "167:     return AtomInitializeICUandStartNode(argc, argv);",
          "",
          "---------------"
        ],
        "atom/app/command_line_args.cc||atom/app/command_line_args.cc": [
          "File: atom/app/command_line_args.cc -> atom/app/command_line_args.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: #include <string>",
          "7: #include \"atom/app/command_line_args.h\"",
          "9: #include \"base/strings/string_util.h\"",
          "10: #include \"base/strings/utf_string_conversions.h\"",
          "11: #include \"content/public/common/content_switches.h\"",
          "13: namespace {",
          "15: bool IsUrlArg(const base::CommandLine::CharType* arg) {",
          "17:   auto c = *arg;",
          "18:   if (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')) {",
          "19:     for (auto p = arg + 1; *p; ++p) {",
          "20:       c = *p;",
          "23:       if (c == ':') {",
          "25:         if (p == arg + 1)",
          "26:           break;",
          "28:         return true;",
          "29:       }",
          "32:       if (c == ' ' || (0x9 <= c && c <= 0xD))",
          "33:         break;",
          "34:     }",
          "35:   }",
          "37:   return false;",
          "38: }",
          "40: const char* blacklist[] = {",
          "42:   \"inspect\",",
          "43:   \"inspect-brk\",",
          "50:   \"?\",",
          "51:   \"0\",",
          "52:   \"accept-resource-provider\",",
          "53:   \"account-consistency\",",
          "54:   \"adaboost\",",
          "55:   \"aec-refined-adaptive-filter\",",
          "56:   \"agc-startup-min-volume\",",
          "57:   \"aggressive\",",
          "58:   \"aggressive-cache-discard\",",
          "59:   \"aggressive-tab-discard\",",
          "60:   \"all\",",
          "61:   \"allarticles\",",
          "62:   \"allow-cross-origin-auth-prompt\",",
          "63:   \"allow-external-pages\",",
          "64:   \"allow-failed-policy-fetch-for-test\",",
          "65:   \"allow-file-access-from-files\",",
          "66:   \"allow-hidden-media-playback\",",
          "67:   \"allow-http-background-page\",",
          "68:   \"allow-http-screen-capture\",",
          "69:   \"allow-insecure-localhost\",",
          "70:   \"allow-legacy-extension-manifests\",",
          "71:   \"allow-loopback-in-peer-connection\",",
          "72:   \"allow-nacl-crxfs-api\",",
          "73:   \"allow-nacl-file-handle-api\",",
          "74:   \"allow-nacl-socket-api\",",
          "75:   \"allow-no-sandbox-job\",",
          "76:   \"allow-outdated-plugins\",",
          "77:   \"allow-ra-in-dev-mode\",",
          "78:   \"allow-running-insecure-content\",",
          "79:   \"allow-sandbox-debugging\",",
          "80:   \"allow-silent-push\",",
          "81:   \"all-toolchains\",",
          "82:   \"alsa-check-close-timeout\",",
          "83:   \"alsa-enable-upsampling\",",
          "84:   \"alsa-fixed-output-sample-rate\",",
          "85:   \"alsa-input-device\",",
          "86:   \"alsa-mute-device-name\",",
          "87:   \"alsa-mute-element-name\",",
          "88:   \"alsa-output-avail-min\",",
          "89:   \"alsa-output-buffer-size\",",
          "90:   \"alsa-output-device\",",
          "91:   \"alsa-output-period-size\",",
          "92:   \"alsa-output-start-threshold\",",
          "93:   \"alsa-volume-device-name\",",
          "94:   \"alsa-volume-element-name\",",
          "95:   \"also-emit-success-logs\",",
          "96:   \"alternative\",",
          "97:   \"always-authorize-plugins\",",
          "98:   \"always-on\",",
          "99:   \"alwaystrue\",",
          "100:   \"always-use-complex-text\",",
          "101:   \"amd-switchable\",",
          "102:   \"android-fonts-path\",",
          "103:   \"android-stderr-port\",",
          "104:   \"android-stdin-port\",",
          "105:   \"android-stdout-port\",",
          "106:   \"angle\",",
          "107:   \"app\",",
          "108:   \"app-auto-launched\",",
          "109:   \"app-id\",",
          "110:   \"apple\",",
          "111:   \"app-mode-auth-code\",",
          "112:   \"app-mode-oauth-token\",",
          "113:   \"app-mode-oem-manifest\",",
          "114:   \"apps-gallery-download-url\",",
          "115:   \"apps-gallery-update-url\",",
          "116:   \"apps-gallery-url\",",
          "117:   \"app-shell-allow-roaming\",",
          "118:   \"app-shell-host-window-size\",",
          "119:   \"app-shell-preferred-network\",",
          "120:   \"app-shell-refresh-token\",",
          "121:   \"app-shell-user\",",
          "122:   \"apps-keep-chrome-alive-in-tests\",",
          "123:   \"arc-availability\",",
          "124:   \"arc-available\",",
          "125:   \"arc-start-mode\",",
          "126:   \"arc-transition-migration-required\",",
          "127:   \"args\",",
          "128:   \"artifacts-dir\",",
          "129:   \"ash-constrain-pointer-to-root\",",
          "130:   \"ash-debug-shortcuts\",",
          "131:   \"ash-dev-shortcuts\",",
          "132:   \"ash-disable-smooth-screen-rotation\",",
          "133:   \"ash-disable-tablet-autohide-titlebars\",",
          "134:   \"ash-disable-touch-exploration-mode\",",
          "135:   \"ash-enable-magnifier-key-scroller\",",
          "136:   \"ash-enable-mirrored-screen\",",
          "137:   \"ash-enable-night-light\",",
          "138:   \"ash-enable-palette-on-all-displays\",",
          "139:   \"ash-enable-scale-settings-tray\",",
          "140:   \"ash-enable-software-mirroring\",",
          "141:   \"ash-enable-unified-desktop\",",
          "142:   \"ash-estimated-presentation-delay\",",
          "143:   \"ash-hide-notifications-for-factory\",",
          "144:   \"ash-host-window-bounds\",",
          "145:   \"ash-shelf-color\",",
          "146:   \"ash-shelf-color-scheme\",",
          "147:   \"ash-touch-hud\",",
          "148:   \"ash-webui-init\",",
          "149:   \"attestation-server\",",
          "150:   \"audio-buffer-size\",",
          "151:   \"audio-output-channels\",",
          "152:   \"aura-legacy-power-button\",",
          "153:   \"auth-ext-path\",",
          "154:   \"auth-server-whitelist\",",
          "155:   \"auth-spnego-account-type\",",
          "156:   \"auto\",",
          "157:   \"auto-open-devtools-for-tabs\",",
          "158:   \"autoplay-policy\",",
          "159:   \"auto-select-desktop-capture-source\",",
          "160:   \"blink-settings\",",
          "161:   \"bootstrap\",",
          "162:   \"browser\",",
          "163:   \"browser-startup-dialog\",",
          "164:   \"browser-subprocess-path\",",
          "165:   \"browser-test\",",
          "166:   \"bwsi\",",
          "167:   \"bypass-app-banner-engagement-checks\",",
          "168:   \"canvas-msaa-sample-count\",",
          "169:   \"cast-initial-screen-height\",",
          "170:   \"cast-initial-screen-width\",",
          "171:   \"cc-layer-tree-test-long-timeout\",",
          "172:   \"cc-layer-tree-test-no-timeout\",",
          "173:   \"cc-rebaseline-pixeltests\",",
          "174:   \"cellular-first\",",
          "175:   \"cellular-only\",",
          "176:   \"check-for-update-interval\",",
          "177:   \"check-layout-test-sys-deps\",",
          "178:   \"child-wallpaper-large\",",
          "179:   \"child-wallpaper-small\",",
          "180:   \"chrome-home-swipe-logic\",",
          "181:   \"ChromeOSMemoryPressureHandling\",",
          "182:   \"cipher-suite-blacklist\",",
          "183:   \"clamshell\",",
          "184:   \"class\",",
          "185:   \"clear-token-service\",",
          "186:   \"cloud-print-file\",",
          "187:   \"cloud-print-file-type\",",
          "188:   \"cloud-print-job-title\",",
          "189:   \"cloud-print-print-ticket\",",
          "190:   \"cloud-print-setup-proxy\",",
          "191:   \"cloud-print-url\",",
          "192:   \"cloud-print-xmpp-endpoint\",",
          "193:   \"color\",",
          "194:   \"compensate-for-unstable-pinch-zoom\",",
          "195:   \"compile-shader-always-succeeds\",",
          "196:   \"component-updater\",",
          "197:   \"connectivity-check-url\",",
          "198:   \"conservative\",",
          "199:   \"content-image-texture-target\",",
          "200:   \"content-shell-host-window-size\",",
          "201:   \"controller\",",
          "202:   \"crash-dumps-dir\",",
          "203:   \"crash-on-failure\",",
          "204:   \"crash-on-hang-threads\",",
          "205:   \"crashpad-handler\",",
          "206:   \"crash-server-url\",",
          "207:   \"crash-test\",",
          "208:   \"create-browser-on-startup-for-tests\",",
          "209:   \"cros-gaia-api-v1\",",
          "210:   \"crosh-command\",",
          "211:   \"cros-region\",",
          "212:   \"cros-regions-mode\",",
          "213:   \"cryptauth-http-host\",",
          "214:   \"custom-devtools-frontend\",",
          "215:   \"custom-launcher-page\",",
          "216:   \"custom_summary\",",
          "217:   \"d3d11\",",
          "218:   \"d3d9\",",
          "219:   \"d3d-support\",",
          "220:   \"daemon\",",
          "221:   \"dark_muted\",",
          "222:   \"dark_vibrant\",",
          "223:   \"data-path\",",
          "224:   \"data-reduction-proxy-config-url\",",
          "225:   \"data-reduction-proxy-experiment\",",
          "226:   \"data-reduction-proxy-http-proxies\",",
          "227:   \"data-reduction-proxy-lo-fi\",",
          "228:   \"data-reduction-proxy-pingback-url\",",
          "229:   \"data-reduction-proxy-secure-proxy-check-url\",",
          "230:   \"data-reduction-proxy-server-experiments-disabled\",",
          "231:   \"dbus-stub\",",
          "232:   \"debug-devtools\",",
          "233:   \"debug-enable-frame-toggle\",",
          "234:   \"debug-packed-apps\",",
          "235:   \"debug-print\",",
          "236:   \"default\",",
          "237:   \"default-background-color\",",
          "238:   \"default-tile-height\",",
          "239:   \"default-tile-width\",",
          "240:   \"default-wallpaper-is-oem\",",
          "241:   \"default-wallpaper-large\",",
          "242:   \"default-wallpaper-small\",",
          "243:   \"demo\",",
          "244:   \"derelict-detection-timeout\",",
          "245:   \"derelict-idle-timeout\",",
          "246:   \"desktop\",",
          "247:   \"desktop-window-1080p\",",
          "248:   \"deterministic-fetch\",",
          "249:   \"device-management-url\",",
          "250:   \"device-scale-factor\",",
          "251:   \"devtools-flags\",",
          "252:   \"diagnostics\",",
          "253:   \"diagnostics-format\",",
          "254:   \"diagnostics-recovery\",",
          "255:   \"dice\",",
          "256:   \"dice_fix_auth_errors\",",
          "257:   \"disable\",",
          "258:   \"disable-2d-canvas-clip-aa\",",
          "259:   \"disable-2d-canvas-image-chromium\",",
          "260:   \"disable-3d-apis\",",
          "261:   \"disable-accelerated-2d-canvas\",",
          "262:   \"disable-accelerated-jpeg-decoding\",",
          "263:   \"disable-accelerated-mjpeg-decode\",",
          "264:   \"disable-accelerated-video-decode\",",
          "265:   \"disable-appcontainer\",",
          "266:   \"disable-app-info-dialog-mac\",",
          "267:   \"disable-app-list-dismiss-on-blur\",",
          "268:   \"disable-app-window-cycling\",",
          "269:   \"disable-arc-data-wipe\",",
          "270:   \"disable-arc-opt-in-verification\",",
          "271:   \"disable-audio-support-for-desktop-share\",",
          "272:   \"disable-avfoundation-overlays\",",
          "273:   \"disable-backgrounding-occluded-windows\",",
          "274:   \"disable-background-networking\",",
          "275:   \"disable-background-timer-throttling\",",
          "276:   \"disable-backing-store-limit\",",
          "277:   \"disable-blink-features\",",
          "278:   \"disable-boot-animation\",",
          "279:   \"disable-breakpad\",",
          "280:   \"disable-browser-task-scheduler\",",
          "281:   \"disable-bundled-ppapi-flash\",",
          "282:   \"disable-canvas-aa\",",
          "283:   \"disable-captive-portal-bypass-proxy\",",
          "284:   \"disable-cast-streaming-hw-encoding\",",
          "285:   \"disable-checker-imaging\",",
          "286:   \"disable-clear-browsing-data-counters\",",
          "287:   \"disable-client-side-phishing-detection\",",
          "288:   \"disable-cloud-import\",",
          "289:   \"disable-component-cloud-policy\",",
          "290:   \"disable-component-extensions-with-background-pages\",",
          "291:   \"disable-component-update\",",
          "292:   \"disable-composited-antialiasing\",",
          "293:   \"disable-contextual-search\",",
          "294:   \"disabled\",",
          "295:   \"disable-d3d11\",",
          "296:   \"disable-databases\",",
          "297:   \"disable-datasaver-prompt\",",
          "298:   \"disable-default-apps\",",
          "299:   \"disable-demo-mode\",",
          "300:   \"disable-device-disabling\",",
          "301:   \"disable-device-discovery-notifications\",",
          "302:   \"disable-dinosaur-easter-egg\",",
          "303:   \"disable-direct-composition\",",
          "304:   \"disable-direct-composition-layers\",",
          "305:   \"disable-directwrite-for-ui\",",
          "306:   \"disable-display-list-2d-canvas\",",
          "307:   \"disable-distance-field-text\",",
          "308:   \"disabled-new-style-notification\",",
          "309:   \"disable-domain-blocking-for-3d-apis\",",
          "310:   \"disable-domain-reliability\",",
          "311:   \"disable-drive-search-in-app-launcher\",",
          "312:   \"disable-dwm-composition\",",
          "313:   \"disable-encryption-migration\",",
          "314:   \"disable-eol-notification\",",
          "315:   \"disable-es3-apis\",",
          "316:   \"disable-es3-gl-context\",",
          "317:   \"disable-extensions\",",
          "318:   \"disable-extensions-except\",",
          "319:   \"disable-extensions-file-access-check\",",
          "320:   \"disable-extensions-http-throttling\",",
          "321:   \"disable-features\",",
          "322:   \"disable-field-trial-config\",",
          "323:   \"disable-file-manager-touch-mode\",",
          "324:   \"disable-file-system\",",
          "325:   \"disable-flash-3d\",",
          "326:   \"disable-flash-stage3d\",",
          "327:   \"disable-fullscreen-low-power-mode\",",
          "328:   \"disable-fullscreen-tab-detaching\",",
          "329:   \"disable-gaia-services\",",
          "330:   \"disable-gesture-editing\",",
          "331:   \"disable-gesture-requirement-for-presentation\",",
          "332:   \"disable-gesture-typing\",",
          "333:   \"disable-gl-drawing-for-tests\",",
          "334:   \"disable-gl-error-limit\",",
          "335:   \"disable-gl-extensions\",",
          "336:   \"disable-glsl-translator\",",
          "337:   \"disable-gpu\",",
          "338:   \"disable-gpu-compositing\",",
          "339:   \"disable-gpu-driver-bug-workarounds\",",
          "340:   \"disable-gpu-early-init\",",
          "341:   \"disable-gpu-memory-buffer-compositor-resources\",",
          "342:   \"disable-gpu-memory-buffer-video-frames\",",
          "343:   \"disable-gpu-process-crash-limit\",",
          "344:   \"disable-gpu-program-cache\",",
          "345:   \"disable-gpu-rasterization\",",
          "346:   \"disable-gpu-sandbox\",",
          "347:   \"disable-gpu-shader-disk-cache\",",
          "348:   \"disable-gpu-vsync\",",
          "349:   \"disable-gpu-watchdog\",",
          "350:   \"disable-hang-monitor\",",
          "351:   \"disable-hid-detection-on-oobe\",",
          "352:   \"disable-histogram-customizer\",",
          "353:   \"disable-hosted-app-shim-creation\",",
          "354:   \"disable-hosted-apps-in-windows\",",
          "355:   \"disable-infobars\",",
          "356:   \"disable-in-process-stack-traces\",",
          "357:   \"disable-input-ime-api\",",
          "358:   \"disable-input-view\",",
          "359:   \"disable-ios-password-suggestions\",",
          "360:   \"disable-javascript-harmony-shipping\",",
          "361:   \"disable-kill-after-bad-ipc\",",
          "362:   \"disable-lcd-text\",",
          "363:   \"disable-legacy-window\",",
          "364:   \"disable-local-storage\",",
          "365:   \"disable-lock-screen-apps\",",
          "366:   \"disable-logging\",",
          "367:   \"disable-logging-redirect\",",
          "368:   \"disable-login-animations\",",
          "369:   \"disable-login-screen-apps\",",
          "370:   \"disable-low-end-device-mode\",",
          "371:   \"disable-low-latency-dxva\",",
          "372:   \"disable-low-res-tiling\",",
          "373:   \"disable-machine-cert-request\",",
          "374:   \"disable-mac-overlays\",",
          "375:   \"disable-mac-views-native-app-windows\",",
          "376:   \"disable-main-frame-before-activation\",",
          "377:   \"disable-md-error-screen\",",
          "378:   \"disable-md-oobe\",",
          "379:   \"disable-media-session-api\",",
          "380:   \"disable-media-suspend\",",
          "381:   \"disable-merge-key-char-events\",",
          "382:   \"disable-mojo-local-storage\",",
          "383:   \"disable-mojo-renderer\",",
          "384:   \"disable-mtp-write-support\",",
          "385:   \"disable-multi-display-layout\",",
          "386:   \"disable-namespace-sandbox\",",
          "387:   \"disable-native-gpu-memory-buffers\",",
          "388:   \"disable-network-portal-notification\",",
          "389:   \"disable-new-korean-ime\",",
          "390:   \"disable-new-virtual-keyboard-behavior\",",
          "391:   \"disable-new-zip-unpacker\",",
          "392:   \"disable-notifications\",",
          "393:   \"disable-ntp-most-likely-favicons-from-server\",",
          "394:   \"disable-ntp-popular-sites\",",
          "395:   \"disable-nv12-dxgi-video\",",
          "396:   \"disable-offer-store-unmasked-wallet-cards\",",
          "397:   \"disable-offer-upload-credit-cards\",",
          "398:   \"disable-office-editing-component-extension\",",
          "399:   \"disable-offline-auto-reload\",",
          "400:   \"disable-offline-auto-reload-visible-only\",",
          "401:   \"disable-origin-trial-controlled-blink-features\",",
          "402:   \"disable-overscroll-edge-effect\",",
          "403:   \"disable-panel-fitting\",",
          "404:   \"disable-partial-raster\",",
          "405:   \"disable-password-generation\",",
          "406:   \"disable-pepper-3d\",",
          "407:   \"disable-pepper-3d-image-chromium\",",
          "408:   \"disable-permission-action-reporting\",",
          "409:   \"disable-permissions-api\",",
          "410:   \"disable-per-user-timezone\",",
          "411:   \"disable-physical-keyboard-autocorrect\",",
          "412:   \"disable-pinch\",",
          "413:   \"disable-pnacl-crash-throttling\",",
          "414:   \"disable-popup-blocking\",",
          "415:   \"disable-prefer-compositing-to-lcd-text\",",
          "416:   \"disable-presentation-api\",",
          "417:   \"disable-print-preview\",",
          "418:   \"disable-prompt-on-repost\",",
          "419:   \"disable-proximity-auth-bluetooth-low-energy-discovery\",",
          "420:   \"disable-pull-to-refresh-effect\",",
          "421:   \"disable-push-api-background-mode\",",
          "422:   \"disable-reading-from-canvas\",",
          "423:   \"disable-remote-core-animation\",",
          "424:   \"disable-remote-fonts\",",
          "425:   \"disable-remote-playback-api\",",
          "426:   \"disable-renderer-accessibility\",",
          "427:   \"disable-renderer-backgrounding\",",
          "428:   \"disable-resize-lock\",",
          "429:   \"disable-rgba-4444-textures\",",
          "430:   \"disable-rollback-option\",",
          "431:   \"disable-rtc-smoothness-algorithm\",",
          "432:   \"disable-screen-orientation-lock\",",
          "433:   \"disable-search-geolocation-disclosure\",",
          "434:   \"disable-seccomp-filter-sandbox\",",
          "435:   \"disable-setuid-sandbox\",",
          "436:   \"disable-shader-name-hashing\",",
          "437:   \"disable-shared-workers\",",
          "438:   \"disable-signin-promo\",",
          "439:   \"disable-signin-scoped-device-id\",",
          "440:   \"disable-single-click-autofill\",",
          "441:   \"disable-skia-runtime-opts\",",
          "442:   \"disable-slimming-paint-invalidation\",",
          "443:   \"disable-slim-navigation-manager\",",
          "444:   \"disable-smooth-scrolling\",",
          "445:   \"disable-software-rasterizer\",",
          "446:   \"disable-speech-api\",",
          "447:   \"disable-suggestions-ui\",",
          "448:   \"disable-surface-references\",",
          "449:   \"disable-sync\",",
          "450:   \"disable-sync-app-list\",",
          "451:   \"disable-sync-types\",",
          "452:   \"disable-system-timezone-automatic-detection\",",
          "453:   \"disable-tab-for-desktop-share\",",
          "454:   \"disable-third-party-keyboard-workaround\",",
          "455:   \"disable-threaded-animation\",",
          "456:   \"disable-threaded-compositing\",",
          "457:   \"disable-threaded-scrolling\",",
          "458:   \"disable-timeouts-for-profiling\",",
          "459:   \"disable-touch-adjustment\",",
          "460:   \"disable-touch-drag-drop\",",
          "461:   \"disable-translate-new-ux\",",
          "462:   \"disable-usb-keyboard-detect\",",
          "463:   \"disable-v8-idle-tasks\",",
          "464:   \"disable-vaapi-accelerated-video-encode\",",
          "465:   \"disable-virtual-keyboard-overscroll\",",
          "466:   \"disable-voice-input\",",
          "467:   \"disable-volume-adjust-sound\",",
          "468:   \"disable-wake-on-wifi\",",
          "469:   \"disable-webgl\",",
          "470:   \"disable-webgl-image-chromium\",",
          "471:   \"disable-web-notification-custom-layouts\",",
          "472:   \"disable-webrtc-encryption\",",
          "473:   \"disable-webrtc-hw-decoding\",",
          "474:   \"disable-webrtc-hw-encoding\",",
          "475:   \"disable-web-security\",",
          "476:   \"disable-win32k-lockdown\",",
          "477:   \"disable-xss-auditor\",",
          "478:   \"disable-zero-browsers-open-for-tests\",",
          "479:   \"disable-zero-copy\",",
          "480:   \"disable-zero-copy-dxgi-video\",",
          "481:   \"disallow-non-exact-resource-reuse\",",
          "482:   \"disk-cache-dir\",",
          "483:   \"disk-cache-size\",",
          "484:   \"display\",",
          "485:   \"dmg-device\",",
          "486:   \"dns-log-details\",",
          "487:   \"document-user-activation-required\",",
          "488:   \"dom-automation\",",
          "489:   \"dotfile\",",
          "490:   \"draft\",",
          "491:   \"draw-view-bounds-rects\",",
          "492:   \"duck-flash\",",
          "493:   \"dump-blink-runtime-call-stats\",",
          "494:   \"dump-browser-histograms\",",
          "495:   \"dump-dom\",",
          "496:   \"eafe-path\",",
          "497:   \"eafe-url\",",
          "498:   \"easy-unlock-app-path\",",
          "499:   \"edge-touch-filtering\",",
          "500:   \"egl\",",
          "501:   \"elevate\",",
          "502:   \"embedded-extension-options\",",
          "503:   \"emphasize-titles-in-omnibox-dropdown\",",
          "504:   \"emulate-shader-precision\",",
          "505:   \"enable-accelerated-2d-canvas\",",
          "506:   \"enable-accelerated-vpx-decode\",",
          "507:   \"enable-accessibility-tab-switcher\",",
          "508:   \"enable-adaptive-selection-handle-orientation\",",
          "509:   \"enable-aggressive-domstorage-flushing\",",
          "510:   \"enable-android-wallpapers-app\",",
          "511:   \"enable-appcontainer\",",
          "512:   \"enable-app-info-dialog-mac\",",
          "513:   \"enable-app-list\",",
          "514:   \"enable-app-window-cycling\",",
          "515:   \"enable-arc\",",
          "516:   \"enable-arc-oobe-optin\",",
          "517:   \"enable-async-event-targeting\",",
          "518:   \"enable-audio-debug-recordings-from-extension\",",
          "519:   \"enable-audio-focus\",",
          "520:   \"enable-automation\",",
          "521:   \"enable-background-fetch-persistence\",",
          "522:   \"enable-benchmarking\",",
          "523:   \"enable-ble-advertising-in-apps\",",
          "524:   \"enable-blink-features\",",
          "525:   \"enable-bookmark-undo\",",
          "526:   \"enable-browser-side-navigation\",",
          "527:   \"enable-browser-task-scheduler\",",
          "528:   \"enable-cast-receiver\",",
          "529:   \"enable-checker-imaging\",",
          "530:   \"enable-chromevox-arc-support\",",
          "531:   \"enable-clear-browsing-data-counters\",",
          "532:   \"enable-cloud-print-proxy\",",
          "533:   \"enable-cloud-print-xps\",",
          "534:   \"enable-consumer-kiosk\",",
          "535:   \"enable-contextual-search\",",
          "536:   \"enable-crash-reporter\",",
          "537:   \"enable-crash-reporter-for-testing\",",
          "538:   \"enable-crx-hash-check\",",
          "539:   \"enabled\",",
          "540:   \"enabled-2g\",",
          "541:   \"enabled-3g\",",
          "542:   \"enable-data-reduction-proxy-bypass-warning\",",
          "543:   \"enable-data-reduction-proxy-force-pingback\",",
          "544:   \"enable-data-reduction-proxy-lite-page\",",
          "545:   \"enable-data-reduction-proxy-savings-promo\",",
          "546:   \"enable-datasaver-prompt\",",
          "547:   \"enable-device-discovery-notifications\",",
          "548:   \"enable-devtools-experiments\",",
          "549:   \"enable-direct-composition-layers\",",
          "550:   \"enable-display-list-2d-canvas\",",
          "551:   \"enable-distance-field-text\",",
          "552:   \"enable-distillability-service\",",
          "553:   \"enabled-new-style-notification\",",
          "554:   \"enable-domain-reliability\",",
          "555:   \"enable-dom-distiller\",",
          "556:   \"enable-drive-search-in-app-launcher\",",
          "557:   \"enable-drm-atomic\",",
          "558:   \"enabled-slow2g\",",
          "559:   \"enable-embedded-extension-options\",",
          "560:   \"enable-encryption-migration\",",
          "561:   \"enable-encryption-selection\",",
          "562:   \"enable-es3-apis\",",
          "563:   \"enable-exclusive-audio\",",
          "564:   \"enable-experimental-accessibility-features\",",
          "565:   \"enable-experimental-canvas-features\",",
          "566:   \"enable-experimental-extension-apis\",",
          "567:   \"enable-experimental-fullscreen-exit-ui\",",
          "568:   \"enable-experimental-input-view-features\",",
          "569:   \"enable-experimental-web-platform-features\",",
          "570:   \"enable-extension-activity-logging\",",
          "571:   \"enable-extension-activity-log-testing\",",
          "572:   \"enable-extension-assets-sharing\",",
          "573:   \"enable-external-drive-rename\",",
          "574:   \"enable-fast-unload\",",
          "575:   \"enable-features\",",
          "576:   \"enable-file-manager-touch-mode\",",
          "577:   \"enable-first-run-ui-transitions\",",
          "578:   \"enable-floating-virtual-keyboard\",",
          "579:   \"enable-font-antialiasing\",",
          "580:   \"enable-fullscreen-tab-detaching\",",
          "581:   \"enable-fullscreen-toolbar-reveal\",",
          "582:   \"enable-google-branded-context-menu\",",
          "583:   \"enable-gpu-async-worker-context\",",
          "584:   \"enable-gpu-benchmarking\",",
          "585:   \"enable-gpu-client-logging\",",
          "586:   \"enable-gpu-client-tracing\",",
          "587:   \"enable-gpu-command-logging\",",
          "588:   \"enable-gpu-debugging\",",
          "589:   \"enable-gpu-driver-debug-logging\",",
          "590:   \"enable-gpu-memory-buffer-compositor-resources\",",
          "591:   \"enable-gpu-memory-buffer-video-frames\",",
          "592:   \"enable-gpu-rasterization\",",
          "593:   \"enable-gpu-service-logging\",",
          "594:   \"enable-gpu-service-tracing\",",
          "595:   \"enable-hardware-overlays\",",
          "596:   \"enable-harfbuzz-rendertext\",",
          "597:   \"enable-heap-profiling\",",
          "598:   \"enable-hosted-app-quit-notification\",",
          "599:   \"enable-hosted-apps-in-windows\",",
          "600:   \"enable-hotword-hardware\",",
          "601:   \"enable-hung-renderer-infobar\",",
          "602:   \"enable-inband-text-tracks\",",
          "603:   \"enable-input-ime-api\",",
          "604:   \"enable-instant-tethering\",",
          "605:   \"enable-internal-media-session\",",
          "606:   \"enable-ios-handoff-to-other-devices\",",
          "607:   \"enable-layer-lists\",",
          "608:   \"enable-lcd-text\",",
          "609:   \"enable-leak-detection\",",
          "610:   \"enable-local-file-accesses\",",
          "611:   \"enable-local-sync-backend\",",
          "612:   \"enable-logging\",",
          "613:   \"enable-longpress-drag-selection\",",
          "614:   \"enable-low-end-device-mode\",",
          "615:   \"enable-low-res-tiling\",",
          "616:   \"enable-mac-views-native-app-windows\",",
          "617:   \"enable-main-frame-before-activation\",",
          "618:   \"enable-md-feedback\",",
          "619:   \"enable-media-suspend\",",
          "620:   \"enable-merge-key-char-events\",",
          "621:   \"enable-message-center-always-scroll-up-upon-notification-removal\",",
          "622:   \"enable-nacl\",",
          "623:   \"enable-nacl-debug\",",
          "624:   \"enable-nacl-nonsfi-mode\",",
          "625:   \"enable-native-gpu-memory-buffers\",",
          "626:   \"enable-natural-scroll-default\",",
          "627:   \"enable-navigation-tracing\",",
          "628:   \"enable-net-benchmarking\",",
          "629:   \"enable-network-information-downlink-max\",",
          "630:   \"enable-network-portal-notification\",",
          "631:   \"enable-new-app-menu-icon\",",
          "632:   \"enable-ntp-most-likely-favicons-from-server\",",
          "633:   \"enable-ntp-popular-sites\",",
          "634:   \"enable-ntp-search-engine-country-detection\",",
          "635:   \"enable-offer-store-unmasked-wallet-cards\",",
          "636:   \"enable-offer-upload-credit-cards\",",
          "637:   \"enable-offline-auto-reload\",",
          "638:   \"enable-offline-auto-reload-visible-only\",",
          "639:   \"enable-oop-rasterization\",",
          "640:   \"enable-osk-overscroll\",",
          "641:   \"enable-override-bookmarks-ui\",",
          "642:   \"enable-partial-raster\",",
          "643:   \"enable-password-generation\",",
          "644:   \"enable-pepper-testing\",",
          "645:   \"enable-permission-action-reporting\",",
          "646:   \"enable-physical-keyboard-autocorrect\",",
          "647:   \"enable-picture-in-picture\",",
          "648:   \"enable-pinch\",",
          "649:   \"enable-pixel-canvas-recording\",",
          "650:   \"enable-pixel-output-in-tests\",",
          "651:   \"enable-plugin-placeholder-testing\",",
          "652:   \"enable-potentially-annoying-security-features\",",
          "653:   \"enable-power-overlay\",",
          "654:   \"enable-precise-memory-info\",",
          "655:   \"enable-prefer-compositing-to-lcd-text\",",
          "656:   \"enable-print-browser\",",
          "657:   \"enable-print-preview-register-promos\",",
          "658:   \"enable-profile-shortcut-manager\",",
          "659:   \"enable-profiling\",",
          "660:   \"enable-push-api-background-mode\",",
          "661:   \"enable-refresh-token-annotation-request\",",
          "662:   \"enable-request-tablet-site\",",
          "663:   \"enable-rgba-4444-textures\",",
          "664:   \"enable-sandbox\",",
          "665:   \"enable-sandbox-logging\",",
          "666:   \"enable-screenshot-testing-with-mode\",",
          "667:   \"enable-scripts-require-action\",",
          "668:   \"enable-scroll-prediction\",",
          "669:   \"enable-service-manager-tracing\",",
          "670:   \"enable-sgi-video-sync\",",
          "671:   \"enable-signin-promo\",",
          "672:   \"enable-single-click-autofill\",",
          "673:   \"enable-site-settings\",",
          "674:   \"enable-skia-benchmarking\",",
          "675:   \"enable-slimming-paint-invalidation\",",
          "676:   \"enable-slimming-paint-v2\",",
          "677:   \"enable-slim-navigation-manager\",",
          "678:   \"enable-smooth-scrolling\",",
          "679:   \"enable-spatial-navigation\",",
          "680:   \"enable-spdy-proxy-auth\",",
          "681:   \"enable-speech-dispatcher\",",
          "682:   \"enable-spelling-feedback-field-trial\",",
          "683:   \"enable-spotlight-actions\",",
          "684:   \"enable-stats-collection-bindings\",",
          "685:   \"enable-stats-table\",",
          "686:   \"enable-strict-mixed-content-checking\",",
          "687:   \"enable-strict-powerful-feature-restrictions\",",
          "688:   \"enable-suggestions-ui\",",
          "689:   \"enable-suggestions-with-substring-match\",",
          "690:   \"enable-supervised-user-managed-bookmarks-folder\",",
          "691:   \"enable-surface-synchronization\",",
          "692:   \"enable-swap-buffers-with-bounds\",",
          "693:   \"enable-sync-app-list\",",
          "694:   \"enable-sync-articles\",",
          "695:   \"enable-tab-audio-muting\",",
          "696:   \"enable-tablet-splitview\",",
          "697:   \"enable-tcp-fastopen\",",
          "698:   \"enable-third-party-keyboard-workaround\",",
          "699:   \"enable-threaded-compositing\",",
          "700:   \"enable-threaded-texture-mailboxes\",",
          "701:   \"enable-tile-compression\",",
          "702:   \"enable-touch-calibration-setting\",",
          "703:   \"enable-touch-drag-drop\",",
          "704:   \"enable-touchpad-three-finger-click\",",
          "705:   \"enable-touchview\",",
          "706:   \"enable-trace-app-source\",",
          "707:   \"enable-tracing\",",
          "708:   \"enable-tracing-output\",",
          "709:   \"enable-translate-new-ux\",",
          "710:   \"enable-ui-devtools\",",
          "711:   \"enable-usermedia-screen-capturing\",",
          "712:   \"enable-user-metrics\",",
          "713:   \"enable-use-zoom-for-dsf\",",
          "714:   \"enable-video-player-chromecast-support\",",
          "715:   \"enable-viewport\",",
          "716:   \"enable-virtual-keyboard\",",
          "717:   \"enable-voice-interaction\",",
          "718:   \"enable-vtune-support\",",
          "719:   \"enable-vulkan\",",
          "720:   \"enable-wayland-server\",",
          "721:   \"enable-webfonts-intervention-trigger\",",
          "722:   \"enable-webfonts-intervention-v2\",",
          "723:   \"enable-webgl-draft-extensions\",",
          "724:   \"enable-webgl-image-chromium\",",
          "725:   \"enable-web-notification-custom-layouts\",",
          "726:   \"enable-webrtc-event-logging-from-extension\",",
          "727:   \"enable-webrtc-srtp-aes-gcm\",",
          "728:   \"enable-webrtc-srtp-encrypted-headers\",",
          "729:   \"enable-webrtc-stun-origin\",",
          "730:   \"enable-webview-variations\",",
          "731:   \"enable-webvr\",",
          "732:   \"enable-wifi-credential-sync\",",
          "733:   \"enable-win7-webrtc-hw-h264-decoding\",",
          "734:   \"enable-zero-copy\",",
          "735:   \"enable-zip-archiver-on-file-manager\",",
          "736:   \"encode-binary\",",
          "737:   \"enforce\",",
          "738:   \"enforce-gl-minimums\",",
          "739:   \"enforce_strict\",",
          "740:   \"enforce-webrtc-ip-permission-check\",",
          "741:   \"enterprise-disable-arc\",",
          "742:   \"enterprise-enable-forced-re-enrollment\",",
          "743:   \"enterprise-enable-license-type-selection\",",
          "744:   \"enterprise-enable-zero-touch-enrollment\",",
          "745:   \"enterprise-enrollment-initial-modulus\",",
          "746:   \"enterprise-enrollment-modulus-limit\",",
          "747:   \"error-console\",",
          "748:   \"evaluate_capability\",",
          "749:   \"evaluate-type\",",
          "750:   \"experiment\",",
          "751:   \"explicitly-allowed-ports\",",
          "752:   \"expose-internals-for-testing\",",
          "753:   \"extension-content-verification\",",
          "754:   \"extension-process\",",
          "755:   \"extensions-install-verification\",",
          "756:   \"extensions-multi-account\",",
          "757:   \"extensions-not-webstore\",",
          "758:   \"extensions-on-chrome-urls\",",
          "759:   \"extensions-update-frequency\",",
          "760:   \"extra-search-query-params\",",
          "761:   \"fail-on-unused-args\",",
          "762:   \"fake-variations-channel\",",
          "763:   \"false\",",
          "764:   \"fast\",",
          "765:   \"fast-start\",",
          "766:   \"feedback-server\",",
          "767:   \"field-trial-handle\",",
          "768:   \"first-exec-after-boot\",",
          "769:   \"flag-switches-begin\",",
          "770:   \"flag-switches-end\",",
          "771:   \"font-cache-shared-handle\",",
          "772:   \"force-android-app-mode\",",
          "773:   \"force-app-mode\",",
          "774:   \"force-clamshell-power-button\",",
          "775:   \"force-color-profile\",",
          "776:   \"force-desktop-ios-promotion\",",
          "777:   \"force-device-scale-factor\",",
          "778:   \"force-dev-mode-highlighting\",",
          "779:   \"force-display-list-2d-canvas\",",
          "780:   \"force-effective-connection-type\",",
          "781:   \"force-enable-metrics-reporting\",",
          "782:   \"force-enable-stylus-tools\",",
          "783:   \"force-fieldtrial-params\",",
          "784:   \"force-fieldtrials\",",
          "785:   \"force-first-run\",",
          "786:   \"force-first-run-ui\",",
          "787:   \"force-gpu-mem-available-mb\",",
          "788:   \"force-gpu-rasterization\",",
          "789:   \"force-happiness-tracking-system\",",
          "790:   \"force-load-easy-unlock-app-in-tests\",",
          "791:   \"force-local-ntp\",",
          "792:   \"force-login-manager-in-tests\",",
          "793:   \"force-mediafoundation\",",
          "794:   \"force-overlay-fullscreen-video\",",
          "795:   \"force-password-reauth\",",
          "796:   \"force-pnacl-subzero\",",
          "797:   \"force-presentation-receiver-for-testing\",",
          "798:   \"force-renderer-accessibility\",",
          "799:   \"force-show-update-menu-badge\",",
          "800:   \"force-show-update-menu-item\",",
          "801:   \"force-system-compositor-mode\",",
          "802:   \"force-tablet-mode\",",
          "803:   \"force-text-direction\",",
          "804:   \"force-ui-direction\",",
          "805:   \"force-variation-ids\",",
          "806:   \"force-video-overlays\",",
          "807:   \"force-wave-audio\",",
          "808:   \"force-webrtc-ip-handling-policy\",",
          "809:   \"full-memory-crash-report\",",
          "810:   \"gaia-url\",",
          "811:   \"gcm-checkin-url\",",
          "812:   \"gcm-mcs-endpoint\",",
          "813:   \"gcm-registration-url\",",
          "814:   \"generate-accessibility-test-expectations\",",
          "815:   \"gl\",",
          "816:   \"gl-composited-overlay-candidate-quad-border\",",
          "817:   \"gles\",",
          "818:   \"gl-shader-interm-output\",",
          "819:   \"golden-screenshots-dir\",",
          "820:   \"google-apis-url\",",
          "821:   \"google-base-url\",",
          "822:   \"google-doodle-url\",",
          "823:   \"google-url\",",
          "824:   \"gpu-active-device-id\",",
          "825:   \"gpu-active-vendor-id\",",
          "826:   \"gpu-device-id\",",
          "827:   \"gpu-driver-date\",",
          "828:   \"gpu-driver-vendor\",",
          "829:   \"gpu-driver-version\",",
          "830:   \"gpu-launcher\",",
          "831:   \"gpu-no-complete-info-collection\",",
          "832:   \"gpu-no-context-lost\",",
          "833:   \"gpu-process\",",
          "834:   \"gpu-program-cache-size-kb\",",
          "835:   \"gpu-rasterization-msaa-sample-count\",",
          "836:   \"gpu-sandbox-allow-sysv-shm\",",
          "837:   \"gpu-sandbox-failures-fatal\",",
          "838:   \"gpu-sandbox-start-early\",",
          "839:   \"gpu-secondary-device-ids\",",
          "840:   \"gpu-secondary-vendor-ids\",",
          "841:   \"gpu-startup-dialog\",",
          "842:   \"gpu-testing-device-id\",",
          "843:   \"gpu-testing-driver-date\",",
          "844:   \"gpu-testing-gl-renderer\",",
          "845:   \"gpu-testing-gl-vendor\",",
          "846:   \"gpu-testing-gl-version\",",
          "847:   \"gpu-testing-os-version\",",
          "848:   \"gpu-testing-secondary-device-ids\",",
          "849:   \"gpu-testing-secondary-vendor-ids\",",
          "850:   \"gpu-testing-vendor-id\",",
          "851:   \"gpu-vendor-id\",",
          "852:   \"graphics-buffer-count\",",
          "853:   \"guest-wallpaper-large\",",
          "854:   \"guest-wallpaper-small\",",
          "855:   \"h\",",
          "856:   \"has-chromeos-diamond-key\",",
          "857:   \"has-chromeos-keyboard\",",
          "858:   \"has-internal-stylus\",",
          "859:   \"headless\",",
          "860:   \"help\",",
          "861:   \"hide\",",
          "862:   \"hide-icons\",",
          "863:   \"hide-scrollbars\",",
          "864:   \"history-entry-requires-user-gesture\",",
          "865:   \"homedir\",",
          "866:   \"homepage\",",
          "867:   \"host\",",
          "868:   \"host-pairing-oobe\",",
          "869:   \"host-resolver-rules\",",
          "870:   \"icu-data-dir\",",
          "871:   \"ignore-autocomplete-off-autofill\",",
          "872:   \"ignore-autoplay-restrictions\",",
          "873:   \"ignore-certificate-errors\",",
          "874:   \"ignore-certificate-errors-spki-list\",",
          "875:   \"ignore-gpu-blacklist\",",
          "876:   \"ignore-urlfetcher-cert-requests\",",
          "877:   \"ignore-user-profile-mapping-for-tests\",",
          "878:   \"incognito\",",
          "879:   \"in-process-gpu\",",
          "880:   \"input\",",
          "881:   \"install-chrome-app\",",
          "882:   \"install-supervised-user-whitelists\",",
          "883:   \"instant-process\",",
          "884:   \"invalidation-use-gcm-channel\",",
          "885:   \"ipc-connection-timeout\",",
          "886:   \"ipc-dump-directory\",",
          "887:   \"ipc-fuzzer-testcase\",",
          "888:   \"isolate-origins\",",
          "889:   \"isolate-sites-for-testing\",",
          "890:   \"is-running-in-mash\",",
          "891:   \"javascript-harmony\",",
          "892:   \"js-flags\",",
          "893:   \"keep-alive-for-test\",",
          "894:   \"kiosk\",",
          "895:   \"kiosk-printing\",",
          "896:   \"lang\",",
          "897:   \"last-launched-app\",",
          "898:   \"layer\",",
          "899:   \"light_muted\",",
          "900:   \"light_vibrant\",",
          "901:   \"limit-fps\",",
          "902:   \"load-and-launch-app\",",
          "903:   \"load-apps\",",
          "904:   \"load-extension\",",
          "905:   \"load-media-router-component-extension\",",
          "906:   \"local-heuristics-only-for-password-generation\",",
          "907:   \"local-ntp-reload\",",
          "908:   \"local-sync-backend-dir\",",
          "909:   \"log-gpu-control-list-decisions\",",
          "910:   \"login-manager\",",
          "911:   \"login-profile\",",
          "912:   \"login-user\",",
          "913:   \"log-level\",",
          "914:   \"log-net-log\",",
          "915:   \"loopback-i2s-bits\",",
          "916:   \"loopback-i2s-bus-name\",",
          "917:   \"loopback-i2s-channels\",",
          "918:   \"loopback-i2s-rate-hz\",",
          "919:   \"lso-url\",",
          "920:   \"ltr\",",
          "921:   \"main-frame-resizes-are-orientation-changes\",",
          "922:   \"make-chrome-default\",",
          "923:   \"make-default-browser\",",
          "924:   \"managed-user-id\",",
          "925:   \"managed-user-sync-token\",",
          "926:   \"markdown\",",
          "927:   \"market-url-for-testing\",",
          "928:   \"mark-non-secure-as\",",
          "929:   \"mash\",",
          "930:   \"material\",",
          "931:   \"material-design-ink-drop-animation-speed\",",
          "932:   \"material-hybrid\",",
          "933:   \"max-gum-fps\",",
          "934:   \"max-output-volume-dba1m\",",
          "935:   \"max-untiled-layer-height\",",
          "936:   \"max-untiled-layer-width\",",
          "937:   \"media-cache-size\",",
          "938:   \"memlog\",",
          "939:   \"memory-pressure-off\",",
          "940:   \"memory-pressure-thresholds\",",
          "941:   \"memory-pressure-thresholds-mb\",",
          "942:   \"mem-pressure-system-reserved-kb\",",
          "943:   \"message-center-changes-while-open\",",
          "944:   \"method\",",
          "945:   \"metrics-client-id\",",
          "946:   \"metrics-recording-only\",",
          "947:   \"mhtml-generator-option\",",
          "948:   \"mirror\",",
          "949:   \"mock\",",
          "950:   \"mojo-local-storage\",",
          "951:   \"mojo-pipe-token\",",
          "952:   \"monitoring-destination-id\",",
          "953:   \"mse-audio-buffer-size-limit\",",
          "954:   \"mse-video-buffer-size-limit\",",
          "955:   \"mus\",",
          "956:   \"mus-config\",",
          "957:   \"mute-audio\",",
          "958:   \"nacl-broker\",",
          "959:   \"nacl-dangerous-no-sandbox-nonsfi\",",
          "960:   \"nacl-debug-mask\",",
          "961:   \"nacl-gdb\",",
          "962:   \"nacl-gdb-script\",",
          "963:   \"nacl-loader\",",
          "964:   \"nacl-loader-nonsfi\",",
          "965:   \"native\",",
          "966:   \"native-crx-bindings\",",
          "967:   \"need-arc-migration-policy-check\",",
          "968:   \"netifs-to-ignore\",",
          "969:   \"net-log-capture-mode\",",
          "970:   \"network-country-iso\",",
          "971:   \"network-settings-config\",",
          "972:   \"new-window\",",
          "973:   \"nocolor\",",
          "974:   \"no-default-browser-check\",",
          "975:   \"noerrdialogs\",",
          "976:   \"no-experiments\",",
          "977:   \"no-first-run\",",
          "978:   \"no-managed-user-acknowledgment-check\",",
          "979:   \"none\",",
          "980:   \"no-network-profile-warning\",",
          "981:   \"non-material\",",
          "982:   \"non-secure\",",
          "983:   \"non-secure-after-editing\",",
          "984:   \"non-secure-while-incognito\",",
          "985:   \"non-secure-while-incognito-or-editing\",",
          "986:   \"no-pings\",",
          "987:   \"no-proxy-server\",",
          "988:   \"no-referrers\",",
          "989:   \"normal_muted\",",
          "990:   \"normal_vibrant\",",
          "991:   \"no-sandbox\",",
          "992:   \"no-service-autorun\",",
          "993:   \"no-session-id\",",
          "994:   \"no-startup-window\",",
          "995:   \"note-taking-app-ids\",",
          "996:   \"no-user-gesture-required\",",
          "997:   \"no-wifi\",",
          "998:   \"no-zygote\",",
          "999:   \"ntp-snippets-add-incomplete\",",
          "1000:   \"null\",",
          "1001:   \"num-raster-threads\",",
          "1002:   \"oauth2-client-id\",",
          "1003:   \"oauth2-client-secret\",",
          "1004:   \"off\",",
          "1005:   \"on\",",
          "1006:   \"oobe-bootstrapping-master\",",
          "1007:   \"oobe-force-show-screen\",",
          "1008:   \"oobe-guest-session\",",
          "1009:   \"oobe-skip-postlogin\",",
          "1010:   \"oobe-timer-interval\",",
          "1011:   \"open-ash\",",
          "1012:   \"opengraph\",",
          "1013:   \"original-process-start-time\",",
          "1014:   \"origin-trial-disabled-features\",",
          "1015:   \"origin-trial-disabled-tokens\",",
          "1016:   \"origin-trial-public-key\",",
          "1017:   \"osmesa\",",
          "1018:   \"output\",",
          "1019:   \"override\",",
          "1020:   \"override-metrics-upload-url\",",
          "1021:   \"override-plugin-power-saver-for-testing\",",
          "1022:   \"override-use-software-gl-for-tests\",",
          "1023:   \"overscroll-history-navigation\",",
          "1024:   \"overscroll-start-threshold\",",
          "1025:   \"ozone-dump-file\",",
          "1026:   \"ozone-platform\",",
          "1027:   \"pack-extension\",",
          "1028:   \"pack-extension-key\",",
          "1029:   \"parent-profile\",",
          "1030:   \"parent-window\",",
          "1031:   \"passive-listeners-default\",",
          "1032:   \"password-store\",",
          "1033:   \"permission-request-api-scope\",",
          "1034:   \"permission-request-api-url\",",
          "1035:   \"ppapi\",",
          "1036:   \"ppapi-antialiased-text-enabled\",",
          "1037:   \"ppapi-broker\",",
          "1038:   \"ppapi-flash-args\",",
          "1039:   \"ppapi-flash-path\",",
          "1040:   \"ppapi-flash-version\",",
          "1041:   \"ppapi-in-process\",",
          "1042:   \"ppapi-plugin-launcher\",",
          "1043:   \"ppapi-startup-dialog\",",
          "1044:   \"ppapi-subpixel-rendering-setting\",",
          "1045:   \"/prefetch:1\",",
          "1046:   \"/prefetch:2\",",
          "1047:   \"/prefetch:3\",",
          "1048:   \"/prefetch:4\",",
          "1049:   \"/prefetch:5\",",
          "1050:   \"/prefetch:6\",",
          "1051:   \"/prefetch:8\",",
          "1052:   \"previous-app\",",
          "1053:   \"primary\",",
          "1054:   \"print-to-pdf\",",
          "1055:   \"privet-ipv6-only\",",
          "1056:   \"process-per-site\",",
          "1057:   \"process-per-tab\",",
          "1058:   \"product-version\",",
          "1059:   \"profile-directory\",",
          "1060:   \"profiler-timing\",",
          "1061:   \"profiling-at-start\",",
          "1062:   \"profiling-file\",",
          "1063:   \"profiling-flush\",",
          "1064:   \"progress-bar-animation\",",
          "1065:   \"progress-bar-completion\",",
          "1066:   \"prompt-for-external-extensions\",",
          "1067:   \"proxy-auto-detect\",",
          "1068:   \"proxy-bypass-list\",",
          "1069:   \"proxy-pac-url\",",
          "1070:   \"proxy-server\",",
          "1071:   \"pull-to-refresh\",",
          "1072:   \"q\",",
          "1073:   \"rdp_desktop_session\",",
          "1074:   \"reader-mode-feedback\",",
          "1075:   \"reader-mode-heuristics\",",
          "1076:   \"rebaseline-pixel-tests\",",
          "1077:   \"record-type\",",
          "1078:   \"reduced-referrer-granularity\",",
          "1079:   \"reduce-security-for-testing\",",
          "1080:   \"register-font-files\",",
          "1081:   \"register-pepper-plugins\",",
          "1082:   \"relauncher\",",
          "1083:   \"remote-debugging-address\",",
          "1084:   \"remote-debugging-port\",",
          "1085:   \"remote-debugging-socket-fd\",",
          "1086:   \"remote-debugging-socket-name\",",
          "1087:   \"remote-debugging-targets\",",
          "1088:   \"renderer\",",
          "1089:   \"renderer-client-id\",",
          "1090:   \"renderer-cmd-prefix\",",
          "1091:   \"renderer-process-limit\",",
          "1092:   \"renderer-startup-dialog\",",
          "1093:   \"renderer-wait-for-java-debugger\",",
          "1094:   \"renderpass\",",
          "1095:   \"repl\",",
          "1096:   \"report-vp9-as-an-unsupported-mime-type\",",
          "1097:   \"require-audio-hardware-for-testing\",",
          "1098:   \"reset-app-list-install-state\",",
          "1099:   \"reset-variation-state\",",
          "1100:   \"restore-last-session\",",
          "1101:   \"root\",",
          "1102:   \"root-layer-scrolls\",",
          "1103:   \"rtl\",",
          "1104:   \"run-all-compositor-stages-before-draw\",",
          "1105:   \"run-layout-test\",",
          "1106:   \"runtime-deps-list-file\",",
          "1107:   \"safebrowsing-disable-auto-update\",",
          "1108:   \"safebrowsing-disable-download-protection\",",
          "1109:   \"safebrowsing-disable-extension-blacklist\",",
          "1110:   \"safebrowsing-manual-download-blacklist\",",
          "1111:   \"SafeSites\",",
          "1112:   \"sandbox-ipc\",",
          "1113:   \"save-page-as-mhtml\",",
          "1114:   \"screen-config\",",
          "1115:   \"screenshot\",",
          "1116:   \"script-executable\",",
          "1117:   \"scripts-require-action\",",
          "1118:   \"search-provider-logo-url\",",
          "1119:   \"secondary\",",
          "1120:   \"secondary-display-layout\",",
          "1121:   \"secondary-ui-md\",",
          "1122:   \"service\",",
          "1123:   \"service-manager\",",
          "1124:   \"service-name\",",
          "1125:   \"service-pipe-token\",",
          "1126:   \"service-request-channel-token\",",
          "1127:   \"service-runner\",",
          "1128:   \"shared-files\",",
          "1129:   \"shill-stub\",",
          "1130:   \"show-app-list\",",
          "1131:   \"show-autofill-signatures\",",
          "1132:   \"show-autofill-type-predictions\",",
          "1133:   \"show-cert-link\",",
          "1134:   \"show-component-extension-options\",",
          "1135:   \"show-composited-layer-borders\",",
          "1136:   \"show-fps-counter\",",
          "1137:   \"show-icons\",",
          "1138:   \"show-layer-animation-bounds\",",
          "1139:   \"show-login-dev-overlay\",",
          "1140:   \"show-mac-overlay-borders\",",
          "1141:   \"show-md-login\",",
          "1142:   \"show-non-md-login\",",
          "1143:   \"show-overdraw-feedback\",",
          "1144:   \"show-paint-rects\",",
          "1145:   \"show-property-changed-rects\",",
          "1146:   \"show-saved-copy\",",
          "1147:   \"show-screenspace-rects\",",
          "1148:   \"show-surface-damage-rects\",",
          "1149:   \"silent-debugger-extension-api\",",
          "1150:   \"silent-launch\",",
          "1151:   \"simulate-critical-update\",",
          "1152:   \"simulate-elevated-recovery\",",
          "1153:   \"simulate-outdated\",",
          "1154:   \"simulate-outdated-no-au\",",
          "1155:   \"simulate-upgrade\",",
          "1156:   \"single-process\",",
          "1157:   \"site-per-process\",",
          "1158:   \"skip-gpu-data-loading\",",
          "1159:   \"skip-nostore-all\",",
          "1160:   \"skip-nostore-main\",",
          "1161:   \"skip-reencoding-on-skp-capture\",",
          "1162:   \"slow\",",
          "1163:   \"slow-connections-only\",",
          "1164:   \"slow-down-compositing-scale-factor\",",
          "1165:   \"slow-down-raster-scale-factor\",",
          "1166:   \"sms-test-messages\",",
          "1167:   \"spdy-proxy-auth-fallback\",",
          "1168:   \"spdy-proxy-auth-origin\",",
          "1169:   \"spdy-proxy-auth-value\",",
          "1170:   \"spelling-service-feedback-interval-seconds\",",
          "1171:   \"spelling-service-feedback-url\",",
          "1172:   \"spurious-power-button-accel-count\",",
          "1173:   \"spurious-power-button-keyboard-accel\",",
          "1174:   \"spurious-power-button-lid-angle-change\",",
          "1175:   \"spurious-power-button-screen-accel\",",
          "1176:   \"spurious-power-button-window\",",
          "1177:   \"ssl-key-log-file\",",
          "1178:   \"ssl-version-max\",",
          "1179:   \"ssl-version-min\",",
          "1180:   \"stable-release-mode\",",
          "1181:   \"started\",",
          "1182:   \"start-fullscreen\",",
          "1183:   \"start-maximized\",",
          "1184:   \"start-stack-profiler\",",
          "1185:   \"stub\",",
          "1186:   \"stub-cros-settings\",",
          "1187:   \"surface\",",
          "1188:   \"swiftshader\",",
          "1189:   \"swiftshader-webgl\",",
          "1190:   \"sync-allow-insecure-xmpp-connection\",",
          "1191:   \"sync-deferred-startup-timeout-seconds\",",
          "1192:   \"sync-disable-deferred-startup\",",
          "1193:   \"sync-enable-get-update-avoidance\",",
          "1194:   \"sync-notification-host-port\",",
          "1195:   \"sync-on-draw-hardware\",",
          "1196:   \"sync-short-initial-retry-override\",",
          "1197:   \"sync-short-nudge-delay-for-test\",",
          "1198:   \"sync-url\",",
          "1199:   \"system-developer-mode\",",
          "1200:   \"system-log-upload-frequency\",",
          "1201:   \"tab-management-experiment-type-disabled\",",
          "1202:   \"tab-management-experiment-type-elderberry\",",
          "1203:   \"task-manager-show-extra-renderers\",",
          "1204:   \"task-profiler\",",
          "1205:   \"team-drives\",",
          "1206:   \"test-auto-update-ui\",",
          "1207:   \"test-child-process\",",
          "1208:   \"test-cros-gaia-id-migration\",",
          "1209:   \"test-do-not-initialize-icu\",",
          "1210:   \"test-encryption-migration-ui\",",
          "1211:   \"test-gl-lib\",",
          "1212:   \"testing-fixed-http-port\",",
          "1213:   \"testing-fixed-https-port\",",
          "1214:   \"test-launcher-batch-limit\",",
          "1215:   \"test-launcher-bot-mode\",",
          "1216:   \"test-launcher-debug-launcher\",",
          "1217:   \"test-launcher-filter-file\",",
          "1218:   \"test-launcher-force-run-broken-tests\",",
          "1219:   \"test-launcher-jobs\",",
          "1220:   \"test-launcher-list-tests\",",
          "1221:   \"test-launcher-output\",",
          "1222:   \"test-launcher-print-test-stdio\",",
          "1223:   \"test-launcher-print-writable-path\",",
          "1224:   \"test-launcher-retry-limit\",",
          "1225:   \"test-launcher-shard-index\",",
          "1226:   \"test-launcher-summary-output\",",
          "1227:   \"test-launcher-test-part-results-limit\",",
          "1228:   \"test-launcher-timeout\",",
          "1229:   \"test-launcher-total-shards\",",
          "1230:   \"test-launcher-trace\",",
          "1231:   \"test-name\",",
          "1232:   \"test-tiny-timeout\",",
          "1233:   \"test-type\",",
          "1234:   \"tether-stub\",",
          "1235:   \"third-party-doodle-url\",",
          "1236:   \"threads\",",
          "1237:   \"time\",",
          "1238:   \"timeout\",",
          "1239:   \"tls1\",",
          "1240:   \"tls1.1\",",
          "1241:   \"tls1.2\",",
          "1242:   \"tls1.3\",",
          "1243:   \"tls13-variant\",",
          "1244:   \"top-chrome-md\",",
          "1245:   \"top-controls-hide-threshold\",",
          "1246:   \"top-controls-show-threshold\",",
          "1247:   \"touch-calibration\",",
          "1248:   \"touch-devices\",",
          "1249:   \"touch-events\",",
          "1250:   \"touch-noise-filtering\",",
          "1251:   \"touch-selection-strategy\",",
          "1252:   \"touch_view\",",
          "1253:   \"trace-config-file\",",
          "1254:   \"trace-export-events-to-etw\",",
          "1255:   \"tracelog\",",
          "1256:   \"trace-shutdown\",",
          "1257:   \"trace-shutdown-file\",",
          "1258:   \"trace-startup\",",
          "1259:   \"trace-startup-duration\",",
          "1260:   \"trace-startup-file\",",
          "1261:   \"trace-to-console\",",
          "1262:   \"trace-to-file\",",
          "1263:   \"trace-to-file-name\",",
          "1264:   \"trace-upload-url\",",
          "1265:   \"translate-ranker-model-url\",",
          "1266:   \"translate-script-url\",",
          "1267:   \"translate-security-origin\",",
          "1268:   \"true\",",
          "1269:   \"trusted-download-sources\",",
          "1270:   \"try-chrome-again\",",
          "1271:   \"try-supported-channel-layouts\",",
          "1272:   \"type\",",
          "1273:   \"ui-disable-partial-swap\",",
          "1274:   \"ui-enable-layer-lists\",",
          "1275:   \"ui-enable-rgba-4444-textures\",",
          "1276:   \"ui-enable-zero-copy\",",
          "1277:   \"ui-prioritize-in-gpu-process\",",
          "1278:   \"ui-show-composited-layer-borders\",",
          "1279:   \"ui-show-fps-counter\",",
          "1280:   \"ui-show-layer-animation-bounds\",",
          "1281:   \"ui-show-paint-rects\",",
          "1282:   \"ui-show-property-changed-rects\",",
          "1283:   \"ui-show-screenspace-rects\",",
          "1284:   \"ui-show-surface-damage-rects\",",
          "1285:   \"ui-slow-animations\",",
          "1286:   \"ui-test-action-max-timeout\",",
          "1287:   \"ui-test-action-timeout\",",
          "1288:   \"uninstall\",",
          "1289:   \"unlimited-storage\",",
          "1290:   \"unsafely-allow-protected-media-identifier-for-domain\",",
          "1291:   \"unsafely-treat-insecure-origin-as-secure\",",
          "1292:   \"unsafe-pac-url\",",
          "1293:   \"use-angle\",",
          "1294:   \"use-cras\",",
          "1295:   \"use-fake-device-for-media-stream\",",
          "1296:   \"use-fake-jpeg-decode-accelerator\",",
          "1297:   \"use-fake-ui-for-media-stream\",",
          "1298:   \"use-file-for-fake-audio-capture\",",
          "1299:   \"use-file-for-fake-video-capture\",",
          "1300:   \"use-first-display-as-internal\",",
          "1301:   \"use-gl\",",
          "1302:   \"use-gpu-in-tests\",",
          "1303:   \"use-ime-service\",",
          "1304:   \"use-mobile-user-agent\",",
          "1305:   \"use-mock-keychain\",",
          "1306:   \"use-passthrough-cmd-decoder\",",
          "1307:   \"user-agent\",",
          "1308:   \"user-always-affiliated\",",
          "1309:   \"user-data-dir\",",
          "1310:   \"user-gesture-required\",",
          "1311:   \"user-gesture-required-for-cross-origin\",",
          "1312:   \"use-skia-renderer\",",
          "1313:   \"use-system-default-printer\",",
          "1314:   \"use-test-config\",",
          "1315:   \"use-viz-hit-test\",",
          "1316:   \"utility\",",
          "1317:   \"utility-allowed-dir\",",
          "1318:   \"utility-cmd-prefix\",",
          "1319:   \"utility-run-elevated\",",
          "1320:   \"utility-sandbox-type\",",
          "1321:   \"utility-startup-dialog\",",
          "1322:   \"v\",",
          "1323:   \"v2-sandbox\",",
          "1324:   \"v2-sandbox-enabled\",",
          "1325:   \"v8-cache-options\",",
          "1326:   \"v8-cache-strategies-for-cache-storage\",",
          "1327:   \"validate-crx\",",
          "1328:   \"validate-input-event-stream\",",
          "1329:   \"variations-override-country\",",
          "1330:   \"variations-server-url\",",
          "1331:   \"version\",",
          "1332:   \"video-image-texture-target\",",
          "1333:   \"video-threads\",",
          "1334:   \"video-underflow-threshold-ms\",",
          "1335:   \"virtual-time-budget\",",
          "1336:   \"vmodule\",",
          "1337:   \"voice-interaction-supported-locales\",",
          "1338:   \"wait-for-debugger\",",
          "1339:   \"wait-for-debugger-children\",",
          "1340:   \"wake-on-wifi-packet\",",
          "1341:   \"wallet-service-use-sandbox\",",
          "1342:   \"watcher\",",
          "1343:   \"waveout-buffers\",",
          "1344:   \"webapk-server-url\",",
          "1345:   \"webrtc-stun-probe-trial\",",
          "1346:   \"webview-enable-safebrowsing-support\",",
          "1347:   \"webview-sandboxed-renderer\",",
          "1348:   \"whitelisted-extension-id\",",
          "1349:   \"window-position\",",
          "1350:   \"windows10-custom-titlebar\",",
          "1351:   \"window-size\",",
          "1352:   \"window-workspace\",",
          "1353:   \"winhttp-proxy-resolver\",",
          "1354:   \"win-jumplist-action\",",
          "1355:   \"wm-window-animations-disabled\",",
          "1356:   \"yield-between-content-script-runs\",",
          "1357:   \"zygote\",",
          "1358:   \"zygote-cmd-prefix\"",
          "1359: };",
          "1361: bool IsBlacklistedArg(const base::CommandLine::CharType* arg) {",
          "1362: #if defined(OS_WIN)",
          "1363:   const auto converted = base::WideToUTF8(arg);",
          "1364:   const char* a = converted.c_str();",
          "1365: #else",
          "1366:   const char* a = arg;",
          "1367: #endif",
          "1369:   static const char* prefixes[] = {\"--\", \"-\", \"/\"};",
          "1371:   int prefix_length = 0;",
          "1372:   for (auto& prefix : prefixes) {",
          "1373:     if (base::StartsWith(a, prefix, base::CompareCase::SENSITIVE)) {",
          "1374:       prefix_length = strlen(prefix);",
          "1375:       break;",
          "1376:     }",
          "1377:   }",
          "1379:   if (prefix_length > 0) {",
          "1380:     a += prefix_length;",
          "1381:     std::string switch_name(a, strcspn(a, \"=\"));",
          "1382:     for (auto& item : blacklist) {",
          "1383:       if (switch_name == item)",
          "1384:         return true;",
          "1385:     }",
          "1386:   }",
          "1388:   return false;",
          "1389: }",
          "1391: }  // namespace",
          "1393: namespace atom {",
          "1395: bool CheckCommandLineArguments(int argc, base::CommandLine::CharType** argv) {",
          "1396:   const base::CommandLine::StringType dashdash(2, '-');",
          "1397:   bool block_blacklisted_args = false;",
          "1398:   for (int i = 0; i < argc; ++i) {",
          "1399:     if (argv[i] == dashdash)",
          "1400:       break;",
          "1401:     if (block_blacklisted_args) {",
          "1402:       if (IsBlacklistedArg(argv[i]))",
          "1403:         return false;",
          "1404:     } else if (IsUrlArg(argv[i])) {",
          "1405:       block_blacklisted_args = true;",
          "1406:     }",
          "1407:   }",
          "1408:   return true;",
          "1409: }",
          "1411: }  // namespace atom",
          "",
          "---------------"
        ],
        "atom/app/command_line_args.h||atom/app/command_line_args.h": [
          "File: atom/app/command_line_args.h -> atom/app/command_line_args.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: #ifndef ATOM_APP_COMMAND_LINE_ARGS_H_",
          "6: #define ATOM_APP_COMMAND_LINE_ARGS_H_",
          "8: #include \"base/command_line.h\"",
          "10: namespace atom {",
          "12: bool CheckCommandLineArguments(int argc, base::CommandLine::CharType** argv);",
          "14: }  // namespace atom",
          "16: #endif  // ATOM_APP_COMMAND_LINE_ARGS_H_",
          "",
          "---------------"
        ],
        "atom/browser/api/atom_api_app.cc||atom/browser/api/atom_api_app.cc": [
          "File: atom/browser/api/atom_api_app.cc -> atom/browser/api/atom_api_app.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "897:   }",
          "899:   if (!override_argv) {",
          "903:     const relauncher::StringVector& argv = atom::AtomCommandLine::argv();",
          "905:     return relauncher::RelaunchApp(argv);",
          "906:   }",
          "",
          "[Removed Lines]",
          "900: #if defined(OS_WIN)",
          "901:     const relauncher::StringVector& argv = atom::AtomCommandLine::wargv();",
          "902: #else",
          "904: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "atom/browser/atom_browser_client.cc||atom/browser/atom_browser_client.cc": [
          "File: atom/browser/atom_browser_client.cc -> atom/browser/atom_browser_client.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: #include \"content/public/browser/resource_dispatcher_host.h\"",
          "39: #include \"content/public/browser/site_instance.h\"",
          "40: #include \"content/public/browser/web_contents.h\"",
          "41: #include \"content/public/common/content_switches.h\"",
          "42: #include \"content/public/common/resource_request_body.h\"",
          "43: #include \"content/public/common/url_constants.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: #include \"content/public/common/content_paths.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "237: void AtomBrowserClient::AppendExtraCommandLineSwitches(",
          "238:     base::CommandLine* command_line,",
          "239:     int process_id) {",
          "240:   std::string process_type =",
          "241:       command_line->GetSwitchValueASCII(::switches::kProcessType);",
          "242:   if (process_type != ::switches::kRendererProcess)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242:   base::FilePath child_path;",
          "243:   PathService::Get(content::CHILD_PROCESS_EXE, &child_path);",
          "244:   CHECK(base::MakeAbsoluteFilePath(command_line->GetProgram()) == child_path);",
          "",
          "---------------"
        ],
        "atom/browser/relauncher.cc||atom/browser/relauncher.cc": [
          "File: atom/browser/relauncher.cc -> atom/browser/relauncher.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "140: }",
          "142: int RelauncherMain(const content::MainFunctionParams& main_parameters) {",
          "146:   const StringVector& argv = atom::AtomCommandLine::argv();",
          "149:   if (argv.size() < 4 || argv[1] != internal::kRelauncherTypeArg) {",
          "150:     LOG(ERROR) << \"relauncher process invoked with unexpected arguments\";",
          "",
          "[Removed Lines]",
          "143: #if defined(OS_WIN)",
          "144:   const StringVector& argv = atom::AtomCommandLine::wargv();",
          "145: #else",
          "147: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "atom/common/atom_command_line.cc||atom/common/atom_command_line.cc": [
          "File: atom/common/atom_command_line.cc -> atom/common/atom_command_line.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: namespace atom {",
          "35: }",
          "38: #if defined(OS_LINUX)",
          "",
          "[Removed Lines]",
          "13: std::vector<std::string> AtomCommandLine::argv_;",
          "15: #if defined(OS_WIN)",
          "17: std::vector<std::wstring> AtomCommandLine::wargv_;",
          "18: #endif",
          "21: void AtomCommandLine::Init(int argc, const char* const* argv) {",
          "23:   char** new_argv = uv_setup_args(argc, const_cast<char**>(argv));",
          "24:   for (int i = 0; i < argc; ++i) {",
          "25:     argv_.push_back(new_argv[i]);",
          "26:   }",
          "27: }",
          "29: #if defined(OS_WIN)",
          "31: void AtomCommandLine::InitW(int argc, const wchar_t* const* argv) {",
          "32:   for (int i = 0; i < argc; ++i) {",
          "33:     wargv_.push_back(argv[i]);",
          "34:   }",
          "36: #endif",
          "",
          "[Added Lines]",
          "13: base::CommandLine::StringVector AtomCommandLine::argv_;",
          "16: void AtomCommandLine::Init(int argc, base::CommandLine::CharType** argv) {",
          "17:   DCHECK(argv_.empty());",
          "21: #if !defined(OS_WIN)",
          "23:   argv = uv_setup_args(argc, argv);",
          "24: #endif",
          "26:   argv_.assign(argv, argv + argc);",
          "",
          "---------------"
        ],
        "atom/common/atom_command_line.h||atom/common/atom_command_line.h": [
          "File: atom/common/atom_command_line.h -> atom/common/atom_command_line.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #include <string>",
          "9: #include <vector>",
          "11: #include \"base/macros.h\"",
          "12: #include \"build/build_config.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #include \"base/command_line.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17: class AtomCommandLine {",
          "18:  public:",
          "27: #if defined(OS_LINUX)",
          "",
          "[Removed Lines]",
          "19:   static void Init(int argc, const char* const* argv);",
          "20:   static std::vector<std::string> argv() { return argv_; }",
          "22: #if defined(OS_WIN)",
          "23:   static void InitW(int argc, const wchar_t* const* argv);",
          "24:   static std::vector<std::wstring> wargv() { return wargv_; }",
          "25: #endif",
          "",
          "[Added Lines]",
          "20:   static const base::CommandLine::StringVector& argv() { return argv_; }",
          "22:   static void Init(int argc, base::CommandLine::CharType** argv);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "31: #endif",
          "33:  private:",
          "40:   DISALLOW_IMPLICIT_CONSTRUCTORS(AtomCommandLine);",
          "41: };",
          "",
          "[Removed Lines]",
          "34:   static std::vector<std::string> argv_;",
          "36: #if defined(OS_WIN)",
          "37:   static std::vector<std::wstring> wargv_;",
          "38: #endif",
          "",
          "[Added Lines]",
          "31:   static base::CommandLine::StringVector argv_;",
          "",
          "---------------"
        ],
        "atom/common/node_bindings.cc||atom/common/node_bindings.cc": [
          "File: atom/common/node_bindings.cc -> atom/common/node_bindings.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #include \"atom/common/node_bindings.h\"",
          "7: #include <string>",
          "8: #include <vector>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: #include <algorithm>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17: #include \"base/files/file_path.h\"",
          "18: #include \"base/path_service.h\"",
          "19: #include \"base/run_loop.h\"",
          "20: #include \"base/threading/thread_task_runner_handle.h\"",
          "21: #include \"base/trace_event/trace_event.h\"",
          "22: #include \"content/public/browser/browser_thread.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: #include \"base/strings/utf_string_conversions.h\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "180: node::Environment* NodeBindings::CreateEnvironment(",
          "181:     v8::Handle<v8::Context> context) {",
          "182:   auto args = AtomCommandLine::argv();",
          "185:   base::FilePath::StringType process_type;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "184: #if defined(OS_WIN)",
          "185:   auto& atom_args = AtomCommandLine::argv();",
          "186:   std::vector<std::string> args(atom_args.size());",
          "187:   std::transform(atom_args.cbegin(), atom_args.cend(), args.begin(),",
          "188:                  [](auto& a) { return base::WideToUTF8(a); });",
          "189: #else",
          "191: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "199:       resources_path.Append(FILE_PATH_LITERAL(\"electron.asar\"))",
          "200:                     .Append(process_type)",
          "201:                     .Append(FILE_PATH_LITERAL(\"init.js\"));",
          "205:   std::unique_ptr<const char*[]> c_argv = StringVectorToArgArray(args);",
          "206:   node::Environment* env = node::CreateEnvironment(",
          "",
          "[Removed Lines]",
          "202:   std::string script_path_str = script_path.AsUTF8Unsafe();",
          "203:   args.insert(args.begin() + 1, script_path_str.c_str());",
          "",
          "[Added Lines]",
          "211:   args.insert(args.begin() + 1, script_path.AsUTF8Unsafe());",
          "",
          "---------------"
        ],
        "filenames.gypi||filenames.gypi": [
          "File: filenames.gypi -> filenames.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:       'atom/app/atom_main_delegate.cc',",
          "100:       'atom/app/atom_main_delegate.h',",
          "101:       'atom/app/atom_main_delegate_mac.mm',",
          "102:       'atom/app/node_main.cc',",
          "103:       'atom/app/node_main.h',",
          "104:       'atom/app/uv_task_runner.cc',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:       'atom/app/command_line_args.cc',",
          "103:       'atom/app/command_line_args.h',",
          "",
          "---------------"
        ],
        "spec/api-app-spec.js||spec/api-app-spec.js": [
          "File: spec/api-app-spec.js -> spec/api-app-spec.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "634:     })",
          "635:   })",
          "637:   describe('getFileIcon() API', () => {",
          "638:     const iconPath = path.join(__dirname, 'fixtures/assets/icon.ico')",
          "639:     const sizes = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "637:   describe('app launch through uri', () => {",
          "638:     before(function () {",
          "639:       if (process.platform !== 'win32') {",
          "640:         this.skip()",
          "641:       }",
          "642:     })",
          "644:     it('does not launch for blacklisted argument', function (done) {",
          "645:       const appPath = path.join(__dirname, 'fixtures', 'api', 'quit-app')",
          "647:       const first = ChildProcess.spawn(remote.process.execPath, [appPath, 'electron-test://?', '--no-sandbox', '--gpu-launcher=cmd.exe /c start calc'])",
          "648:       first.once('exit', (code) => {",
          "649:         assert.notEqual(code, 123)",
          "650:         done()",
          "651:       })",
          "652:     })",
          "654:     it('launches successfully for multiple uris in cmd args', function (done) {",
          "655:       const appPath = path.join(__dirname, 'fixtures', 'api', 'quit-app')",
          "657:       const first = ChildProcess.spawn(remote.process.execPath, [appPath, 'http://electronjs.org', 'electron-test://testdata'])",
          "658:       first.once('exit', (code) => {",
          "659:         assert.equal(code, 123)",
          "660:         done()",
          "661:       })",
          "662:     })",
          "664:     it('does not launch for encoded space', function (done) {",
          "665:       const appPath = path.join(__dirname, 'fixtures', 'api', 'quit-app')",
          "667:       const first = ChildProcess.spawn(remote.process.execPath, [appPath, 'electron-test://?', '--no-sandbox', '--gpu-launcher%20\"cmd.exe /c start calc'])",
          "668:       first.once('exit', (code) => {",
          "669:         assert.notEqual(code, 123)",
          "670:         done()",
          "671:       })",
          "672:     })",
          "674:     it('launches successfully for argnames similar to blacklisted ones', function (done) {",
          "675:       const appPath = path.join(__dirname, 'fixtures', 'api', 'quit-app')",
          "677:       const first = ChildProcess.spawn(remote.process.execPath, [appPath, 'electron-test://?', '--inspector'])",
          "678:       first.once('exit', (code) => {",
          "679:         assert.equal(code, 123)",
          "680:         done()",
          "681:       })",
          "682:     })",
          "683:   })",
          "",
          "---------------"
        ]
      }
    }
  ]
}