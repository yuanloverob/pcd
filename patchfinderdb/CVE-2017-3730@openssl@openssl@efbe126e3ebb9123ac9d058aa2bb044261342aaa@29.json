{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
      "candidate_info": {
        "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
        "files": [
          "crypto/evp/e_aes.c",
          "crypto/evp/e_chacha20_poly1305.c"
        ],
        "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
          "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
          "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
          "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
          "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
          "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
          "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
          "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
          "1397:         }",
          "",
          "[Removed Lines]",
          "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
          "",
          "[Added Lines]",
          "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
          "1392:                 return 0;",
          "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
          "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
          "1397:                     return 0;",
          "1399:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
          "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
          "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
          "1952:                 len -= cctx->M;",
          "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
          "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
          "1955:         }",
          "",
          "[Removed Lines]",
          "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
          "",
          "[Added Lines]",
          "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
          "1955:                 return 0;",
          "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
          "1959:                 if (len < cctx->M)",
          "1960:                     return 0;",
          "1962:             }",
          "",
          "---------------"
        ],
        "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
          "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
          "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
          "400:             if (!ctx->encrypt) {",
          "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
          "403:                 aad = temp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "401:                 if (len < POLY1305_BLOCK_SIZE)",
          "402:                     return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c3376ec2747ebd69b3da68d2d18b155fac5c03f",
      "candidate_info": {
        "commit_hash": "4c3376ec2747ebd69b3da68d2d18b155fac5c03f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4c3376ec2747ebd69b3da68d2d18b155fac5c03f",
        "files": [
          "Configure",
          "crypto/o_str.c",
          "crypto/x509/x509_att.c",
          "crypto/x509/x509_ext.c",
          "crypto/x509/x509_v3.c",
          "crypto/x509/x509name.c",
          "crypto/x509/x_all.c",
          "test/testutil.h"
        ],
        "message": "Add -Wundef to strict-warnings\n\nAvoid a -Wundef warning in o_str.c\nAvoid a -Wundef warning in testutil.h\nInclude internal/cryptlib.h before openssl/stack.h\nto avoid use of undefined symbol OPENSSL_API_COMPAT.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2709)",
        "before_after_code_files": [
          "crypto/o_str.c||crypto/o_str.c",
          "crypto/x509/x509_att.c||crypto/x509/x509_att.c",
          "crypto/x509/x509_ext.c||crypto/x509/x509_ext.c",
          "crypto/x509/x509_v3.c||crypto/x509/x509_v3.c",
          "crypto/x509/x509name.c||crypto/x509/x509name.c",
          "crypto/x509/x_all.c||crypto/x509/x_all.c",
          "test/testutil.h||test/testutil.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/o_str.c||crypto/o_str.c": [
          "File: crypto/o_str.c -> crypto/o_str.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "227:     return !strerror_s(buf, buflen, errnum);",
          "228: #elif defined(_GNU_SOURCE)",
          "229:     return strerror_r(errnum, buf, buflen) != NULL;",
          "",
          "[Removed Lines]",
          "230: #elif (_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600)",
          "",
          "[Added Lines]",
          "230: #elif (defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE >= 200112L) || \\",
          "231:       (defined(_XOPEN_SOURCE) && _XOPEN_SOURCE >= 600)",
          "",
          "---------------"
        ],
        "crypto/x509/x509_att.c||crypto/x509/x509_att.c": [
          "File: crypto/x509/x509_att.c -> crypto/x509/x509_att.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x509_ext.c||crypto/x509/x509_ext.c": [
          "File: crypto/x509/x509_ext.c -> crypto/x509/x509_ext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x509_v3.c||crypto/x509/x509_v3.c": [
          "File: crypto/x509/x509_v3.c -> crypto/x509/x509_v3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x509name.c||crypto/x509/x509name.c": [
          "File: crypto/x509/x509name.c -> crypto/x509/x509name.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/asn1.h>",
          "14: #include <openssl/objects.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "crypto/x509/x_all.c||crypto/x509/x_all.c": [
          "File: crypto/x509/x_all.c -> crypto/x509/x_all.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "12: #include \"internal/cryptlib.h\"",
          "13: #include <openssl/buffer.h>",
          "14: #include <openssl/asn1.h>",
          "15: #include <openssl/evp.h>",
          "",
          "[Removed Lines]",
          "11: #include <openssl/stack.h>",
          "",
          "[Added Lines]",
          "12: #include <openssl/stack.h>",
          "",
          "---------------"
        ],
        "test/testutil.h||test/testutil.h": [
          "File: test/testutil.h -> test/testutil.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: #  if defined(_MSC_VER)",
          "61: #   define TEST_CASE_NAME __FUNCTION__",
          "62: #  else",
          "",
          "[Removed Lines]",
          "59: # if __STDC_VERSION__ < 199901L",
          "",
          "[Added Lines]",
          "59: # if !defined(__STDC_VERSION__) || __STDC_VERSION__ < 199901L",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6915f39e68f02ad08a635516d46e72bbf0379914",
      "candidate_info": {
        "commit_hash": "6915f39e68f02ad08a635516d46e72bbf0379914",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6915f39e68f02ad08a635516d46e72bbf0379914",
        "files": [
          "include/openssl/ssl.h",
          "ssl/record/rec_layer_d1.c",
          "ssl/record/rec_layer_s3.c",
          "ssl/record/record.h",
          "ssl/record/record_locl.h",
          "ssl/ssl_err.c"
        ],
        "message": "Don't allow too many consecutive warning alerts\n\nCertain warning alerts are ignored if they are received. This can mean that\nno progress will be made if one peer continually sends those warning alerts.\nImplement a count so that we abort the connection if we receive too many.\n\nIssue reported by Shi Lei.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit af58be768ebb690f78530f796e92b8ae5c9a4401)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h",
          "ssl/record/rec_layer_d1.c||ssl/record/rec_layer_d1.c",
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
          "ssl/record/record.h||ssl/record/record.h",
          "ssl/record/record_locl.h||ssl/record/record_locl.h",
          "ssl/ssl_err.c||ssl/ssl_err.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2482: # define SSL_R_TLS_HEARTBEAT_PENDING                      366",
          "2483: # define SSL_R_TLS_ILLEGAL_EXPORTER_LABEL                 367",
          "2484: # define SSL_R_TLS_INVALID_ECPOINTFORMAT_LIST             157",
          "2485: # define SSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS             314",
          "2486: # define SSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS       239",
          "2487: # define SSL_R_UNABLE_TO_LOAD_SSL3_MD5_ROUTINES           242",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2485: # define SSL_R_TOO_MANY_WARN_ALERTS                       409",
          "",
          "---------------"
        ],
        "ssl/record/rec_layer_d1.c||ssl/record/rec_layer_d1.c": [
          "File: ssl/record/rec_layer_d1.c -> ssl/record/rec_layer_d1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "443:         }",
          "444:     }",
          "448:     if (s->s3->change_cipher_spec /* set when we receive ChangeCipherSpec,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "450:     if (SSL3_RECORD_get_type(rr) != SSL3_RT_ALERT",
          "451:             && SSL3_RECORD_get_length(rr) != 0)",
          "452:         s->rlayer.alert_count = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "723:         if (alert_level == SSL3_AL_WARNING) {",
          "724:             s->s3->warn_alert = alert_descr;",
          "725:             if (alert_descr == SSL_AD_CLOSE_NOTIFY) {",
          "726: #ifndef OPENSSL_NO_SCTP",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "734:             s->rlayer.alert_count++;",
          "735:             if (s->rlayer.alert_count == MAX_WARN_ALERT_COUNT) {",
          "736:                 al = SSL_AD_UNEXPECTED_MESSAGE;",
          "737:                 SSLerr(SSL_F_DTLS1_READ_BYTES, SSL_R_TOO_MANY_WARN_ALERTS);",
          "738:                 goto f_err;",
          "739:             }",
          "",
          "---------------"
        ],
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1063:     } while (num_recs == 0);",
          "1064:     rr = &rr[curr_rec];",
          "1068:     if (s->s3->change_cipher_spec /* set when we receive ChangeCipherSpec,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1070:     if (SSL3_RECORD_get_type(rr) != SSL3_RT_ALERT",
          "1071:             && SSL3_RECORD_get_length(rr) != 0)",
          "1072:         s->rlayer.alert_count = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1333:         if (alert_level == SSL3_AL_WARNING) {",
          "1334:             s->s3->warn_alert = alert_descr;",
          "1335:             SSL3_RECORD_set_read(rr);",
          "1336:             if (alert_descr == SSL_AD_CLOSE_NOTIFY) {",
          "1337:                 s->shutdown |= SSL_RECEIVED_SHUTDOWN;",
          "1338:                 return (0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1345:             s->rlayer.alert_count++;",
          "1346:             if (s->rlayer.alert_count == MAX_WARN_ALERT_COUNT) {",
          "1347:                 al = SSL_AD_UNEXPECTED_MESSAGE;",
          "1348:                 SSLerr(SSL_F_SSL3_READ_BYTES, SSL_R_TOO_MANY_WARN_ALERTS);",
          "1349:                 goto f_err;",
          "1350:             }",
          "",
          "---------------"
        ],
        "ssl/record/record.h||ssl/record/record.h": [
          "File: ssl/record/record.h -> ssl/record/record.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:     unsigned char write_sequence[SEQ_NUM_SIZE];",
          "180:     unsigned int is_first_record;",
          "181:     DTLS_RECORD_LAYER *d;",
          "182: } RECORD_LAYER;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:     unsigned int alert_count;",
          "",
          "---------------"
        ],
        "ssl/record/record_locl.h||ssl/record/record_locl.h": [
          "File: ssl/record/record_locl.h -> ssl/record/record_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #define RECORD_LAYER_get_rbuf(rl)               (&(rl)->rbuf)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: #define MAX_WARN_ALERT_COUNT    5",
          "",
          "---------------"
        ],
        "ssl/ssl_err.c||ssl/ssl_err.c": [
          "File: ssl/ssl_err.c -> ssl/ssl_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "614:      \"tls illegal exporter label\"},",
          "615:     {ERR_REASON(SSL_R_TLS_INVALID_ECPOINTFORMAT_LIST),",
          "616:      \"tls invalid ecpointformat list\"},",
          "617:     {ERR_REASON(SSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS),",
          "618:      \"unable to find ecdh parameters\"},",
          "619:     {ERR_REASON(SSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "617:     {ERR_REASON(SSL_R_TOO_MANY_WARN_ALERTS), \"too many warn alerts\"},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8accb70ee9aa79c322c589e01ed4a388bfdc5a95",
      "candidate_info": {
        "commit_hash": "8accb70ee9aa79c322c589e01ed4a388bfdc5a95",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8accb70ee9aa79c322c589e01ed4a388bfdc5a95",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "If client doesn't send curves list, don't assume all.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1597)\n(cherry picked from commit 3e37351834c203421b7f492dd83d5e5872e17778)",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "177: };",
          "216: static const unsigned char suiteb_curves[] = {",
          "217:     0, TLSEXT_curve_P_256,",
          "218:     0, TLSEXT_curve_P_384",
          "",
          "[Removed Lines]",
          "179: static const unsigned char eccurves_all[] = {",
          "214: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "291:         SSLerr(SSL_F_TLS1_GET_CURVELIST, ERR_R_INTERNAL_ERROR);",
          "293:         return 0;",
          "297:     }",
          "298: }",
          "",
          "[Removed Lines]",
          "294:     } else {",
          "296:         return 1;",
          "",
          "[Added Lines]",
          "260:     return 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "387:         return nmatch == -1 ? 0 : NID_undef;",
          "390:         return nmatch == -1 ? 0 : NID_undef;",
          "407:         const unsigned char *tsupp = supp;",
          "408:         for (j = 0; j < num_supp; j++, tsupp += 2) {",
          "409:             if (pref[0] == tsupp[0] && pref[1] == tsupp[1]) {",
          "410:                 if (!tls_curve_allowed(s, pref, SSL_SECOP_CURVE_SHARED))",
          "411:                     continue;",
          "412:                 if (nmatch == k) {",
          "413:                     int id = (pref[0] << 8) | pref[1];",
          "414:                     return tls1_ec_curve_id2nid(id, NULL);",
          "415:                 }",
          "416:                 k++;",
          "",
          "[Removed Lines]",
          "383:     if (!tls1_get_curvelist",
          "384:         (s, (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) != 0, &supp,",
          "385:          &num_supp))",
          "388:     if (!tls1_get_curvelist",
          "389:         (s, !(s->options & SSL_OP_CIPHER_SERVER_PREFERENCE), &pref, &num_pref))",
          "396:     if (num_supp == 0 && (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) != 0) {",
          "397:         supp = eccurves_all;",
          "398:         num_supp = sizeof(eccurves_all) / 2;",
          "399:     } else if (num_pref == 0 &&",
          "400:                (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) == 0) {",
          "401:         pref = eccurves_all;",
          "402:         num_pref = sizeof(eccurves_all) / 2;",
          "403:     }",
          "405:     k = 0;",
          "406:     for (i = 0; i < num_pref; i++, pref += 2) {",
          "",
          "[Added Lines]",
          "348:     if (!tls1_get_curvelist(s,",
          "349:             (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) != 0,",
          "350:             &supp, &num_supp))",
          "353:     if (!tls1_get_curvelist(s,",
          "354:             (s->options & SSL_OP_CIPHER_SERVER_PREFERENCE) == 0,",
          "355:             &pref, &num_pref))",
          "358:     for (k = 0, i = 0; i < num_pref; i++, pref += 2) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "122580ef71e4e5f355a1a104c9bfb36feee43759",
      "candidate_info": {
        "commit_hash": "122580ef71e4e5f355a1a104c9bfb36feee43759",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/122580ef71e4e5f355a1a104c9bfb36feee43759",
        "files": [
          "ssl/record/rec_layer_s3.c"
        ],
        "message": "A zero return from BIO_read()/BIO_write() could be retryable\n\nA zero return from BIO_read()/BIO_write() could mean that an IO operation\nis retryable. A zero return from SSL_read()/SSL_write() means that the\nconnection has been closed down (either cleanly or not). Therefore we\nshould not propagate a zero return value from BIO_read()/BIO_write() back\nup the stack to SSL_read()/SSL_write(). This could result in a retryable\nfailure being treated as fatal.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit 4880672a9b41a09a0984b55e219f02a2de7ab75e)",
        "before_after_code_files": [
          "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
          "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "306:             if (s->mode & SSL_MODE_RELEASE_BUFFERS && !SSL_IS_DTLS(s))",
          "307:                 if (len + left == 0)",
          "308:                     ssl3_release_read_buffer(s);",
          "310:         }",
          "311:         left += i;",
          "",
          "[Removed Lines]",
          "309:             return (i);",
          "",
          "[Added Lines]",
          "315:             return -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "925:                 SSL3_BUFFER_set_left(&wb[currbuf], 0);",
          "926:             }",
          "928:         }",
          "929:         SSL3_BUFFER_add_offset(&wb[currbuf], i);",
          "930:         SSL3_BUFFER_add_left(&wb[currbuf], -i);",
          "",
          "[Removed Lines]",
          "927:             return (i);",
          "",
          "[Added Lines]",
          "939:             return -1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}