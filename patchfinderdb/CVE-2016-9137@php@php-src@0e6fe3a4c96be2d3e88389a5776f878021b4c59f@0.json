{
  "cve_id": "CVE-2016-9137",
  "cve_desc": "Use-after-free vulnerability in the CURLFile implementation in ext/curl/curl_file.c in PHP before 5.6.27 and 7.x before 7.0.12 allows remote attackers to cause a denial of service or possibly have unspecified other impact via crafted serialized data that is mishandled during __wakeup processing.",
  "repo": "php/php-src",
  "patch_hash": "0e6fe3a4c96be2d3e88389a5776f878021b4c59f",
  "patch_info": {
    "commit_hash": "0e6fe3a4c96be2d3e88389a5776f878021b4c59f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/0e6fe3a4c96be2d3e88389a5776f878021b4c59f",
    "files": [
      "Zend/zend_API.c",
      "Zend/zend_API.h",
      "ext/curl/curl_file.c",
      "ext/curl/tests/bug73147.phpt"
    ],
    "message": "Fix bug #73147: Use After Free in PHP7 unserialize()",
    "before_after_code_files": [
      "Zend/zend_API.c||Zend/zend_API.c",
      "Zend/zend_API.h||Zend/zend_API.h",
      "ext/curl/curl_file.c||ext/curl/curl_file.c",
      "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
    ]
  },
  "patch_diff": {
    "Zend/zend_API.c||Zend/zend_API.c": [
      "File: Zend/zend_API.c -> Zend/zend_API.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3776: }",
      "3780: {",
      "3781:  zval *tmp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3780: {",
      "3781:  zval *property;",
      "3782:  zend_class_entry *old_scope = EG(scope);",
      "3784:  EG(scope) = scope;",
      "3786:  if (!Z_OBJ_HT_P(object)->unset_property) {",
      "3787:   const char *class_name;",
      "3788:   zend_uint class_name_len;",
      "3790:   zend_get_object_classname(object, &class_name, &class_name_len TSRMLS_CC);",
      "3792:   zend_error(E_CORE_ERROR, \"Property %s of class %s cannot be unset\", name, class_name);",
      "3793:  }",
      "3794:  MAKE_STD_ZVAL(property);",
      "3795:  ZVAL_STRINGL(property, name, name_length, 1);",
      "3796:  Z_OBJ_HT_P(object)->unset_property(object, property, 0 TSRMLS_CC);",
      "3797:  zval_ptr_dtor(&property);",
      "3799:  EG(scope) = old_scope;",
      "3800: }",
      "",
      "---------------"
    ],
    "Zend/zend_API.h||Zend/zend_API.h": [
      "File: Zend/zend_API.h -> Zend/zend_API.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "330: ZEND_API void zend_update_property_double(zend_class_entry *scope, zval *object, const char *name, int name_length, double value TSRMLS_DC);",
      "331: ZEND_API void zend_update_property_string(zend_class_entry *scope, zval *object, const char *name, int name_length, const char *value TSRMLS_DC);",
      "332: ZEND_API void zend_update_property_stringl(zend_class_entry *scope, zval *object, const char *name, int name_length, const char *value, int value_length TSRMLS_DC);",
      "334: ZEND_API int zend_update_static_property(zend_class_entry *scope, const char *name, int name_length, zval *value TSRMLS_DC);",
      "335: ZEND_API int zend_update_static_property_null(zend_class_entry *scope, const char *name, int name_length TSRMLS_DC);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333: ZEND_API void zend_unset_property(zend_class_entry *scope, zval *object, const char *name, int name_length TSRMLS_DC);",
      "",
      "---------------"
    ],
    "ext/curl/curl_file.c||ext/curl/curl_file.c": [
      "File: ext/curl/curl_file.c -> ext/curl/curl_file.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "138: ZEND_METHOD(CURLFile, __wakeup)",
      "139: {",
      "141:  zend_throw_exception(NULL, \"Unserialization of CURLFile instances is not allowed\", 0 TSRMLS_CC);",
      "142: }",
      "",
      "[Removed Lines]",
      "140:  zend_update_property_string(curl_CURLFile_class, getThis(), \"name\", sizeof(\"name\")-1, \"\" TSRMLS_CC);",
      "",
      "[Added Lines]",
      "140:  zval *_this = getThis();",
      "142:  zend_unset_property(curl_CURLFile_class, _this, \"name\", sizeof(\"name\")-1 TSRMLS_CC);",
      "143:  zend_update_property_string(curl_CURLFile_class, _this, \"name\", sizeof(\"name\")-1, \"\" TSRMLS_CC);",
      "",
      "---------------"
    ],
    "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt": [
      "File: ext/curl/tests/bug73147.phpt -> ext/curl/tests/bug73147.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #73147: Use After Free in PHP7 unserialize()",
      "3: --SKIPIF--",
      "4: <?php",
      "5: if (!extension_loaded(\"curl\")) {",
      "6:         exit(\"skip curl extension not loaded\");",
      "7: }",
      "8: ?>",
      "9: --FILE--",
      "10: <?php",
      "12: $poc = 'a:1:{i:0;O:8:\"CURLFile\":1:{s:4:\"name\";R:1;}}';",
      "13: try {",
      "14: var_dump(unserialize($poc));",
      "15: } catch(Exception $e) {",
      "16:  echo $e->getMessage();",
      "17: }",
      "18: ?>",
      "19: --EXPECT--",
      "20: Unserialization of CURLFile instances is not allowed",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f42cbd749cde1f91274c1d03df9024baba141a8f",
      "candidate_info": {
        "commit_hash": "f42cbd749cde1f91274c1d03df9024baba141a8f",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/f42cbd749cde1f91274c1d03df9024baba141a8f",
        "files": [
          "Zend/zend_API.c",
          "Zend/zend_API.h",
          "ext/curl/curl_file.c",
          "ext/curl/tests/bug73147.phpt"
        ],
        "message": "Fix bug #73147: Use After Free in PHP7 unserialize()\n\n(cherry picked from commit 0e6fe3a4c96be2d3e88389a5776f878021b4c59f)",
        "before_after_code_files": [
          "Zend/zend_API.c||Zend/zend_API.c",
          "Zend/zend_API.h||Zend/zend_API.h",
          "ext/curl/curl_file.c||ext/curl/curl_file.c",
          "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_API.c||Zend/zend_API.c",
            "Zend/zend_API.h||Zend/zend_API.h",
            "ext/curl/curl_file.c||ext/curl/curl_file.c",
            "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
          ],
          "candidate": [
            "Zend/zend_API.c||Zend/zend_API.c",
            "Zend/zend_API.h||Zend/zend_API.h",
            "ext/curl/curl_file.c||ext/curl/curl_file.c",
            "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_API.c||Zend/zend_API.c": [
          "File: Zend/zend_API.c -> Zend/zend_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3847: }",
          "3851: {",
          "3852:  zval tmp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3851: {",
          "3852:  zval property;",
          "3853:  zend_class_entry *old_scope = EG(scope);",
          "3855:  EG(scope) = scope;",
          "3857:  if (!Z_OBJ_HT_P(object)->unset_property) {",
          "3858:   zend_error_noreturn(E_CORE_ERROR, \"Property %s of class %s cannot be unset\", name, ZSTR_VAL(Z_OBJCE_P(object)->name));",
          "3859:  }",
          "3860:  ZVAL_STRINGL(&property, name, name_length);",
          "3861:  Z_OBJ_HT_P(object)->unset_property(object, &property, 0);",
          "3862:  zval_ptr_dtor(&property);",
          "3864:  EG(scope) = old_scope;",
          "3865: }",
          "",
          "---------------"
        ],
        "Zend/zend_API.h||Zend/zend_API.h": [
          "File: Zend/zend_API.h -> Zend/zend_API.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "343: ZEND_API void zend_update_property_str(zend_class_entry *scope, zval *object, const char *name, size_t name_length, zend_string *value);",
          "344: ZEND_API void zend_update_property_string(zend_class_entry *scope, zval *object, const char *name, size_t name_length, const char *value);",
          "345: ZEND_API void zend_update_property_stringl(zend_class_entry *scope, zval *object, const char *name, size_t name_length, const char *value, size_t value_length);",
          "347: ZEND_API int zend_update_static_property(zend_class_entry *scope, const char *name, size_t name_length, zval *value);",
          "348: ZEND_API int zend_update_static_property_null(zend_class_entry *scope, const char *name, size_t name_length);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346: ZEND_API void zend_unset_property(zend_class_entry *scope, zval *object, const char *name, size_t name_length);",
          "",
          "---------------"
        ],
        "ext/curl/curl_file.c||ext/curl/curl_file.c": [
          "File: ext/curl/curl_file.c -> ext/curl/curl_file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138: ZEND_METHOD(CURLFile, __wakeup)",
          "139: {",
          "140:  zend_update_property_string(curl_CURLFile_class, getThis(), \"name\", sizeof(\"name\")-1, \"\");",
          "141:  zend_throw_exception(NULL, \"Unserialization of CURLFile instances is not allowed\", 0);",
          "142: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:  zend_unset_property(curl_CURLFile_class, getThis(), \"name\", sizeof(\"name\")-1);",
          "",
          "---------------"
        ],
        "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt": [
          "File: ext/curl/tests/bug73147.phpt -> ext/curl/tests/bug73147.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73147: Use After Free in PHP7 unserialize()",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded(\"curl\")) {",
          "6:         exit(\"skip curl extension not loaded\");",
          "7: }",
          "8: ?>",
          "9: --FILE--",
          "10: <?php",
          "12: $poc = 'a:1:{i:0;O:8:\"CURLFile\":1:{s:4:\"name\";R:1;}}';",
          "13: try {",
          "14: var_dump(unserialize($poc));",
          "15: } catch(Exception $e) {",
          "16:  echo $e->getMessage();",
          "17: }",
          "18: ?>",
          "19: --EXPECT--",
          "20: Unserialization of CURLFile instances is not allowed",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "54003ab6631b489af54631a548597e8bd599b266",
      "candidate_info": {
        "commit_hash": "54003ab6631b489af54631a548597e8bd599b266",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/54003ab6631b489af54631a548597e8bd599b266",
        "files": [
          "Zend/zend_API.c",
          "Zend/zend_API.h",
          "ext/curl/curl_file.c",
          "ext/curl/tests/bug73147.phpt"
        ],
        "message": "Fix bug #73147: Use After Free in PHP7 unserialize()\n\n(cherry picked from commit 0e6fe3a4c96be2d3e88389a5776f878021b4c59f)\n(cherry picked from commit f42cbd749cde1f91274c1d03df9024baba141a8f)",
        "before_after_code_files": [
          "Zend/zend_API.c||Zend/zend_API.c",
          "Zend/zend_API.h||Zend/zend_API.h",
          "ext/curl/curl_file.c||ext/curl/curl_file.c",
          "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_API.c||Zend/zend_API.c",
            "Zend/zend_API.h||Zend/zend_API.h",
            "ext/curl/curl_file.c||ext/curl/curl_file.c",
            "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
          ],
          "candidate": [
            "Zend/zend_API.c||Zend/zend_API.c",
            "Zend/zend_API.h||Zend/zend_API.h",
            "ext/curl/curl_file.c||ext/curl/curl_file.c",
            "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_API.c||Zend/zend_API.c": [
          "File: Zend/zend_API.c -> Zend/zend_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3886: }",
          "3890: {",
          "3891:  zval tmp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3890: {",
          "3891:  zval property;",
          "3892:  zend_class_entry *old_scope = EG(scope);",
          "3894:  EG(scope) = scope;",
          "3896:  if (!Z_OBJ_HT_P(object)->unset_property) {",
          "3897:   zend_error_noreturn(E_CORE_ERROR, \"Property %s of class %s cannot be unset\", name, ZSTR_VAL(Z_OBJCE_P(object)->name));",
          "3898:  }",
          "3899:  ZVAL_STRINGL(&property, name, name_length);",
          "3900:  Z_OBJ_HT_P(object)->unset_property(object, &property, 0);",
          "3901:  zval_ptr_dtor(&property);",
          "3903:  EG(scope) = old_scope;",
          "3904: }",
          "",
          "---------------"
        ],
        "Zend/zend_API.h||Zend/zend_API.h": [
          "File: Zend/zend_API.h -> Zend/zend_API.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "346: ZEND_API void zend_update_property_str(zend_class_entry *scope, zval *object, const char *name, size_t name_length, zend_string *value);",
          "347: ZEND_API void zend_update_property_string(zend_class_entry *scope, zval *object, const char *name, size_t name_length, const char *value);",
          "348: ZEND_API void zend_update_property_stringl(zend_class_entry *scope, zval *object, const char *name, size_t name_length, const char *value, size_t value_length);",
          "350: ZEND_API int zend_update_static_property(zend_class_entry *scope, const char *name, size_t name_length, zval *value);",
          "351: ZEND_API int zend_update_static_property_null(zend_class_entry *scope, const char *name, size_t name_length);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "349: ZEND_API void zend_unset_property(zend_class_entry *scope, zval *object, const char *name, size_t name_length);",
          "",
          "---------------"
        ],
        "ext/curl/curl_file.c||ext/curl/curl_file.c": [
          "File: ext/curl/curl_file.c -> ext/curl/curl_file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138: ZEND_METHOD(CURLFile, __wakeup)",
          "139: {",
          "140:  zend_update_property_string(curl_CURLFile_class, getThis(), \"name\", sizeof(\"name\")-1, \"\");",
          "141:  zend_throw_exception(NULL, \"Unserialization of CURLFile instances is not allowed\", 0);",
          "142: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:  zend_unset_property(curl_CURLFile_class, getThis(), \"name\", sizeof(\"name\")-1);",
          "",
          "---------------"
        ],
        "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt": [
          "File: ext/curl/tests/bug73147.phpt -> ext/curl/tests/bug73147.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73147: Use After Free in PHP7 unserialize()",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded(\"curl\")) {",
          "6:         exit(\"skip curl extension not loaded\");",
          "7: }",
          "8: ?>",
          "9: --FILE--",
          "10: <?php",
          "12: $poc = 'a:1:{i:0;O:8:\"CURLFile\":1:{s:4:\"name\";R:1;}}';",
          "13: try {",
          "14: var_dump(unserialize($poc));",
          "15: } catch(Exception $e) {",
          "16:  echo $e->getMessage();",
          "17: }",
          "18: ?>",
          "19: --EXPECT--",
          "20: Unserialization of CURLFile instances is not allowed",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d13507d2e6d7c280888cc9c3cab125b347662e90",
      "candidate_info": {
        "commit_hash": "d13507d2e6d7c280888cc9c3cab125b347662e90",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/d13507d2e6d7c280888cc9c3cab125b347662e90",
        "files": [
          "Zend/zend_API.c",
          "Zend/zend_API.h",
          "ext/curl/curl_file.c",
          "ext/curl/tests/bug73147.phpt"
        ],
        "message": "Fix bug #73147: Use After Free in PHP7 unserialize()\n\n(cherry picked from commit 0e6fe3a4c96be2d3e88389a5776f878021b4c59f)\n(cherry picked from commit f42cbd749cde1f91274c1d03df9024baba141a8f)",
        "before_after_code_files": [
          "Zend/zend_API.c||Zend/zend_API.c",
          "Zend/zend_API.h||Zend/zend_API.h",
          "ext/curl/curl_file.c||ext/curl/curl_file.c",
          "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_API.c||Zend/zend_API.c",
            "Zend/zend_API.h||Zend/zend_API.h",
            "ext/curl/curl_file.c||ext/curl/curl_file.c",
            "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
          ],
          "candidate": [
            "Zend/zend_API.c||Zend/zend_API.c",
            "Zend/zend_API.h||Zend/zend_API.h",
            "ext/curl/curl_file.c||ext/curl/curl_file.c",
            "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_API.c||Zend/zend_API.c": [
          "File: Zend/zend_API.c -> Zend/zend_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3847: }",
          "3851: {",
          "3852:  zval tmp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3851: {",
          "3852:  zval property;",
          "3853:  zend_class_entry *old_scope = EG(scope);",
          "3855:  EG(scope) = scope;",
          "3857:  if (!Z_OBJ_HT_P(object)->unset_property) {",
          "3858:   zend_error_noreturn(E_CORE_ERROR, \"Property %s of class %s cannot be unset\", name, ZSTR_VAL(Z_OBJCE_P(object)->name));",
          "3859:  }",
          "3860:  ZVAL_STRINGL(&property, name, name_length);",
          "3861:  Z_OBJ_HT_P(object)->unset_property(object, &property, 0);",
          "3862:  zval_ptr_dtor(&property);",
          "3864:  EG(scope) = old_scope;",
          "3865: }",
          "",
          "---------------"
        ],
        "Zend/zend_API.h||Zend/zend_API.h": [
          "File: Zend/zend_API.h -> Zend/zend_API.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "343: ZEND_API void zend_update_property_str(zend_class_entry *scope, zval *object, const char *name, size_t name_length, zend_string *value);",
          "344: ZEND_API void zend_update_property_string(zend_class_entry *scope, zval *object, const char *name, size_t name_length, const char *value);",
          "345: ZEND_API void zend_update_property_stringl(zend_class_entry *scope, zval *object, const char *name, size_t name_length, const char *value, size_t value_length);",
          "347: ZEND_API int zend_update_static_property(zend_class_entry *scope, const char *name, size_t name_length, zval *value);",
          "348: ZEND_API int zend_update_static_property_null(zend_class_entry *scope, const char *name, size_t name_length);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346: ZEND_API void zend_unset_property(zend_class_entry *scope, zval *object, const char *name, size_t name_length);",
          "",
          "---------------"
        ],
        "ext/curl/curl_file.c||ext/curl/curl_file.c": [
          "File: ext/curl/curl_file.c -> ext/curl/curl_file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138: ZEND_METHOD(CURLFile, __wakeup)",
          "139: {",
          "140:  zend_update_property_string(curl_CURLFile_class, getThis(), \"name\", sizeof(\"name\")-1, \"\");",
          "141:  zend_throw_exception(NULL, \"Unserialization of CURLFile instances is not allowed\", 0);",
          "142: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:  zend_unset_property(curl_CURLFile_class, getThis(), \"name\", sizeof(\"name\")-1);",
          "",
          "---------------"
        ],
        "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt": [
          "File: ext/curl/tests/bug73147.phpt -> ext/curl/tests/bug73147.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73147: Use After Free in PHP7 unserialize()",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded(\"curl\")) {",
          "6:         exit(\"skip curl extension not loaded\");",
          "7: }",
          "8: ?>",
          "9: --FILE--",
          "10: <?php",
          "12: $poc = 'a:1:{i:0;O:8:\"CURLFile\":1:{s:4:\"name\";R:1;}}';",
          "13: try {",
          "14: var_dump(unserialize($poc));",
          "15: } catch(Exception $e) {",
          "16:  echo $e->getMessage();",
          "17: }",
          "18: ?>",
          "19: --EXPECT--",
          "20: Unserialization of CURLFile instances is not allowed",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03df764d1c1a4d910d437e40ee4631bac3bdf573",
      "candidate_info": {
        "commit_hash": "03df764d1c1a4d910d437e40ee4631bac3bdf573",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/03df764d1c1a4d910d437e40ee4631bac3bdf573",
        "files": [
          "Zend/zend_API.c",
          "Zend/zend_API.h",
          "Zend/zend_exceptions.c",
          "ext/bcmath/libbcmath/src/init.c",
          "ext/bcmath/libbcmath/src/outofmem.c",
          "ext/curl/curl_file.c",
          "ext/curl/tests/bug73147.phpt",
          "ext/dom/document.c",
          "ext/ereg/ereg.c",
          "ext/imap/php_imap.c",
          "ext/intl/locale/locale_methods.c",
          "ext/intl/resourcebundle/resourcebundle_class.c",
          "ext/intl/tests/bug72241.phpt",
          "ext/mbstring/mbstring.c",
          "ext/openssl/openssl.c",
          "ext/pcre/php_pcre.c",
          "ext/simplexml/simplexml.c",
          "ext/spl/spl_iterators.c",
          "ext/spl/tests/bug73073.phpt",
          "ext/spl/tests/spl_cachingiterator___toString_basic.phpt",
          "ext/standard/math.c",
          "ext/standard/tests/serialize/bug69793.phpt",
          "main/fopen_wrappers.c"
        ],
        "message": "Merge branch 'PHP-5.6.27' into PHP-5.6\n\n* PHP-5.6.27:\n  Fix tests\n  fix tsrm\n  Fix bug #73284 - heap overflow in php_ereg_replace function\n  Fix bug #73276 - crash in openssl_random_pseudo_bytes function\n  Fix bug #73293 - NULL pointer dereference in SimpleXMLElement::asXML()\n  fix bug #73275 - crash in openssl_encrypt function\n  Fix for #73240 - Write out of bounds at number_format\n  Bug #73218: add mitigation for ICU int overflow\n  Add more locale length checks, due to ICU bugs.\n  Fix bug #73208 - another missing length check\n  Fix bug #73190: memcpy negative parameter _bc_new_num_ex\n  Fix bug #73189 - Memcpy negative size parameter php_resolve_path\n  Fixed bug #73174 - heap overflow in php_pcre_replace_impl\n  Fix bug #73150: missing NULL check in dom_document_save_html\n  Fix bug #73147: Use After Free in PHP7 unserialize()\n  Fix bug #73082\n  Fix bug #73073 - CachingIterator null dereference when convert to string",
        "before_after_code_files": [
          "Zend/zend_API.c||Zend/zend_API.c",
          "Zend/zend_API.h||Zend/zend_API.h",
          "Zend/zend_exceptions.c||Zend/zend_exceptions.c",
          "ext/bcmath/libbcmath/src/init.c||ext/bcmath/libbcmath/src/init.c",
          "ext/bcmath/libbcmath/src/outofmem.c||ext/bcmath/libbcmath/src/outofmem.c",
          "ext/curl/curl_file.c||ext/curl/curl_file.c",
          "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt",
          "ext/dom/document.c||ext/dom/document.c",
          "ext/ereg/ereg.c||ext/ereg/ereg.c",
          "ext/imap/php_imap.c||ext/imap/php_imap.c",
          "ext/intl/locale/locale_methods.c||ext/intl/locale/locale_methods.c",
          "ext/intl/resourcebundle/resourcebundle_class.c||ext/intl/resourcebundle/resourcebundle_class.c",
          "ext/intl/tests/bug72241.phpt||ext/intl/tests/bug72241.phpt",
          "ext/mbstring/mbstring.c||ext/mbstring/mbstring.c",
          "ext/openssl/openssl.c||ext/openssl/openssl.c",
          "ext/pcre/php_pcre.c||ext/pcre/php_pcre.c",
          "ext/simplexml/simplexml.c||ext/simplexml/simplexml.c",
          "ext/spl/spl_iterators.c||ext/spl/spl_iterators.c",
          "ext/spl/tests/bug73073.phpt||ext/spl/tests/bug73073.phpt",
          "ext/spl/tests/spl_cachingiterator___toString_basic.phpt||ext/spl/tests/spl_cachingiterator___toString_basic.phpt",
          "ext/standard/math.c||ext/standard/math.c",
          "ext/standard/tests/serialize/bug69793.phpt||ext/standard/tests/serialize/bug69793.phpt",
          "main/fopen_wrappers.c||main/fopen_wrappers.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_API.c||Zend/zend_API.c",
            "Zend/zend_API.h||Zend/zend_API.h",
            "ext/curl/curl_file.c||ext/curl/curl_file.c",
            "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
          ],
          "candidate": [
            "Zend/zend_API.c||Zend/zend_API.c",
            "Zend/zend_API.h||Zend/zend_API.h",
            "ext/curl/curl_file.c||ext/curl/curl_file.c",
            "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_API.c||Zend/zend_API.c": [
          "File: Zend/zend_API.c -> Zend/zend_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3776: }",
          "3780: {",
          "3781:  zval *tmp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3780: {",
          "3781:  zval *property;",
          "3782:  zend_class_entry *old_scope = EG(scope);",
          "3784:  EG(scope) = scope;",
          "3786:  if (!Z_OBJ_HT_P(object)->unset_property) {",
          "3787:   const char *class_name;",
          "3788:   zend_uint class_name_len;",
          "3790:   zend_get_object_classname(object, &class_name, &class_name_len TSRMLS_CC);",
          "3792:   zend_error(E_CORE_ERROR, \"Property %s of class %s cannot be unset\", name, class_name);",
          "3793:  }",
          "3794:  MAKE_STD_ZVAL(property);",
          "3795:  ZVAL_STRINGL(property, name, name_length, 1);",
          "3796:  Z_OBJ_HT_P(object)->unset_property(object, property, 0 TSRMLS_CC);",
          "3797:  zval_ptr_dtor(&property);",
          "3799:  EG(scope) = old_scope;",
          "3800: }",
          "",
          "---------------"
        ],
        "Zend/zend_API.h||Zend/zend_API.h": [
          "File: Zend/zend_API.h -> Zend/zend_API.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "330: ZEND_API void zend_update_property_double(zend_class_entry *scope, zval *object, const char *name, int name_length, double value TSRMLS_DC);",
          "331: ZEND_API void zend_update_property_string(zend_class_entry *scope, zval *object, const char *name, int name_length, const char *value TSRMLS_DC);",
          "332: ZEND_API void zend_update_property_stringl(zend_class_entry *scope, zval *object, const char *name, int name_length, const char *value, int value_length TSRMLS_DC);",
          "334: ZEND_API int zend_update_static_property(zend_class_entry *scope, const char *name, int name_length, zval *value TSRMLS_DC);",
          "335: ZEND_API int zend_update_static_property_null(zend_class_entry *scope, const char *name, int name_length TSRMLS_DC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "333: ZEND_API void zend_unset_property(zend_class_entry *scope, zval *object, const char *name, int name_length TSRMLS_DC);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "664:   }         \\",
          "665:   RETURN_FALSE;      \\",
          "666:  }          \\",
          "668: } while (0)",
          "",
          "[Removed Lines]",
          "667:  RETVAL_STRINGL((s), __len, (dup)); \\",
          "",
          "[Added Lines]",
          "668:  RETVAL_STRINGL((s), (int)__len, (dup)); \\",
          "",
          "---------------"
        ],
        "Zend/zend_exceptions.c||Zend/zend_exceptions.c": [
          "File: Zend/zend_exceptions.c -> Zend/zend_exceptions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231: #define CHECK_EXC_TYPE(name, type) \\",
          "233:  if (value && Z_TYPE_P(value) != IS_NULL && Z_TYPE_P(value) != type) { \\",
          "239:  }",
          "241: ZEND_METHOD(exception, __wakeup)",
          "",
          "[Removed Lines]",
          "232:  value = zend_read_property(default_exception_ce, object, name, sizeof(name)-1, 0 TSRMLS_CC); \\",
          "234:   zval *tmp; \\",
          "235:   MAKE_STD_ZVAL(tmp); \\",
          "236:   ZVAL_STRINGL(tmp, name, sizeof(name)-1, 1); \\",
          "237:   Z_OBJ_HANDLER_P(object, unset_property)(object, tmp, 0 TSRMLS_CC); \\",
          "238:   zval_ptr_dtor(&tmp); \\",
          "",
          "[Added Lines]",
          "232:  value = zend_read_property(default_exception_ce, object, name, sizeof(name)-1, 1 TSRMLS_CC); \\",
          "234:   zend_unset_property(default_exception_ce, object, name, sizeof(name)-1 TSRMLS_CC); \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248:  CHECK_EXC_TYPE(\"file\", IS_STRING);",
          "249:  CHECK_EXC_TYPE(\"line\", IS_LONG);",
          "250:  CHECK_EXC_TYPE(\"trace\", IS_ARRAY);",
          "252: }",
          "",
          "[Removed Lines]",
          "251:  CHECK_EXC_TYPE(\"previous\", IS_OBJECT);",
          "",
          "[Added Lines]",
          "247:  value = zend_read_property(default_exception_ce, object, \"previous\", sizeof(\"previous\")-1, 1 TSRMLS_CC);",
          "248:  if (value && Z_TYPE_P(value) != IS_NULL && (Z_TYPE_P(value) != IS_OBJECT ||",
          "249:    !instanceof_function(Z_OBJCE_P(value), default_exception_ce TSRMLS_CC) ||",
          "250:    value == object)) {",
          "251:   zend_unset_property(default_exception_ce, object, \"previous\", sizeof(\"previous\")-1 TSRMLS_CC);",
          "252:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "727:   zval_dtor(&file);",
          "728:   zval_dtor(&line);",
          "732:   if (trace) {",
          "733:    zval_ptr_dtor(&trace);",
          "",
          "[Removed Lines]",
          "730:   exception = zend_read_property(default_exception_ce, exception, \"previous\", sizeof(\"previous\")-1, 0 TSRMLS_CC);",
          "",
          "[Added Lines]",
          "731:   Z_OBJPROP_P(exception)->nApplyCount++;",
          "732:   exception = zend_read_property(default_exception_ce, exception, \"previous\", sizeof(\"previous\")-1, 1 TSRMLS_CC);",
          "733:   if (exception && Z_TYPE_P(exception) == IS_OBJECT && Z_OBJPROP_P(exception)->nApplyCount > 0) {",
          "734:    exception = NULL;",
          "735:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "736:  }",
          "737:  zval_dtor(&fname);",
          "741:  zend_update_property_string(default_exception_ce, getThis(), \"string\", sizeof(\"string\")-1, str TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "745:  exception = getThis();",
          "746:  while (exception && Z_TYPE_P(exception) == IS_OBJECT && instanceof_function(Z_OBJCE_P(exception), default_exception_ce TSRMLS_CC)) {",
          "747:   if(Z_OBJPROP_P(exception)->nApplyCount) {",
          "748:    Z_OBJPROP_P(exception)->nApplyCount--;",
          "749:   } else {",
          "750:    break;",
          "751:   }",
          "752:   exception = zend_read_property(default_exception_ce, exception, \"previous\", sizeof(\"previous\")-1, 1 TSRMLS_CC);",
          "753:  }",
          "",
          "---------------"
        ],
        "ext/bcmath/libbcmath/src/init.c||ext/bcmath/libbcmath/src/init.c": [
          "File: ext/bcmath/libbcmath/src/init.c -> ext/bcmath/libbcmath/src/init.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:      int length, scale, persistent;",
          "50: {",
          "51:   bc_num temp;",
          "54:   temp = (bc_num) safe_pemalloc (1, sizeof(bc_struct)+length, scale, persistent);",
          "55: #if 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:   if ((size_t)length+(size_t)scale > INT_MAX) {",
          "54:    zend_error(E_ERROR, \"Result too long, max is %d\", INT_MAX);",
          "55:   }",
          "",
          "---------------"
        ],
        "ext/bcmath/libbcmath/src/outofmem.c||ext/bcmath/libbcmath/src/outofmem.c": [
          "File: ext/bcmath/libbcmath/src/outofmem.c -> ext/bcmath/libbcmath/src/outofmem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: void bc_out_of_memory (void)",
          "43: {",
          "46: }",
          "",
          "[Removed Lines]",
          "44:   (void) fprintf (stderr, \"bcmath: out of memory!\\n\");",
          "45:   exit (1);",
          "",
          "[Added Lines]",
          "44:   zend_error_noreturn(E_ERROR, \"bcmath: out of memory!\");",
          "",
          "---------------"
        ],
        "ext/curl/curl_file.c||ext/curl/curl_file.c": [
          "File: ext/curl/curl_file.c -> ext/curl/curl_file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138: ZEND_METHOD(CURLFile, __wakeup)",
          "139: {",
          "141:  zend_throw_exception(NULL, \"Unserialization of CURLFile instances is not allowed\", 0 TSRMLS_CC);",
          "142: }",
          "",
          "[Removed Lines]",
          "140:  zend_update_property_string(curl_CURLFile_class, getThis(), \"name\", sizeof(\"name\")-1, \"\" TSRMLS_CC);",
          "",
          "[Added Lines]",
          "140:  zval *_this = getThis();",
          "142:  zend_unset_property(curl_CURLFile_class, _this, \"name\", sizeof(\"name\")-1 TSRMLS_CC);",
          "143:  zend_update_property_string(curl_CURLFile_class, _this, \"name\", sizeof(\"name\")-1, \"\" TSRMLS_CC);",
          "",
          "---------------"
        ],
        "ext/curl/tests/bug73147.phpt||ext/curl/tests/bug73147.phpt": [
          "File: ext/curl/tests/bug73147.phpt -> ext/curl/tests/bug73147.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73147: Use After Free in PHP7 unserialize()",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded(\"curl\")) {",
          "6:         exit(\"skip curl extension not loaded\");",
          "7: }",
          "8: ?>",
          "9: --FILE--",
          "10: <?php",
          "12: $poc = 'a:1:{i:0;O:8:\"CURLFile\":1:{s:4:\"name\";R:1;}}';",
          "13: try {",
          "14: var_dump(unserialize($poc));",
          "15: } catch(Exception $e) {",
          "16:  echo $e->getMessage();",
          "17: }",
          "18: ?>",
          "19: --EXPECT--",
          "20: Unserialization of CURLFile instances is not allowed",
          "",
          "---------------"
        ],
        "ext/dom/document.c||ext/dom/document.c": [
          "File: ext/dom/document.c -> ext/dom/document.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1792:   if (options & LIBXML_SAVE_NOEMPTYTAG) {",
          "1793:    xmlSaveNoEmptyTags = saveempty;",
          "1794:   }",
          "1796:    RETURN_FALSE;",
          "1797:   }",
          "1798:   RETVAL_STRINGL(mem, size, 1);",
          "",
          "[Removed Lines]",
          "1795:   if (!size) {",
          "",
          "[Added Lines]",
          "1795:   if (!size || !mem) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2327: #else",
          "2328:   htmlDocDumpMemory(docp, &mem, &size);",
          "2329: #endif",
          "2331:    RETVAL_FALSE;",
          "2332:   } else {",
          "2333:    RETVAL_STRINGL((const char*) mem, size, 1);",
          "",
          "[Removed Lines]",
          "2330:   if (!size) {",
          "",
          "[Added Lines]",
          "2330:   if (!size || !mem) {",
          "",
          "---------------"
        ],
        "ext/ereg/ereg.c||ext/ereg/ereg.c": [
          "File: ext/ereg/ereg.c -> ext/ereg/ereg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:    +----------------------------------------------------------------------+",
          "15:    | Authors: Rasmus Lerdorf <rasmus@php.net>                             |",
          "16:    |          Jim Winstead <jimw@php.net>                                 |",
          "18:    +----------------------------------------------------------------------+",
          "",
          "[Removed Lines]",
          "17:    |          Jaakko Hyv\ufffdtti <jaakko@hyvatti.iki.fi>                      |",
          "",
          "[Added Lines]",
          "17:    |          Jaakko Hyv\ufffdtti <jaakko@hyvatti.iki.fi>                      |",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: ZEND_BEGIN_ARG_INFO_EX(arginfo_ereg, 0, 0, 2)",
          "31:  ZEND_ARG_INFO(0, pattern)",
          "34: ZEND_END_ARG_INFO()",
          "",
          "[Removed Lines]",
          "32:  ZEND_ARG_INFO(0, string)",
          "",
          "[Added Lines]",
          "32:  ZEND_ARG_INFO(0, string)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "42: ZEND_BEGIN_ARG_INFO_EX(arginfo_split, 0, 0, 2)",
          "43:  ZEND_ARG_INFO(0, pattern)",
          "46: ZEND_END_ARG_INFO()",
          "48: ZEND_BEGIN_ARG_INFO(arginfo_sql_regcase, 0)",
          "",
          "[Removed Lines]",
          "44:  ZEND_ARG_INFO(0, string)",
          "45:  ZEND_ARG_INFO(0, limit)",
          "",
          "[Added Lines]",
          "44:  ZEND_ARG_INFO(0, string)",
          "45:  ZEND_ARG_INFO(0, limit)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "204: }",
          "208: {",
          "209:  regfree(&rc->preg);",
          "210: }",
          "",
          "[Removed Lines]",
          "207: static void _free_ereg_cache(reg_cache *rc)",
          "",
          "[Added Lines]",
          "207: static void _free_ereg_cache(reg_cache *rc)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "414:  int err, copts = 0;",
          "416:  string_len = strlen(string);",
          "",
          "[Removed Lines]",
          "412:  int buf_len;",
          "413:  int pos, tmp, string_len, new_l;",
          "",
          "[Added Lines]",
          "412:  size_t buf_len, new_l;",
          "413:  int pos, tmp, string_len;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "437:  buf_len = 2 * string_len + 1;",
          "440:  err = pos = 0;",
          "441:  buf[0] = '\\0';",
          "",
          "[Removed Lines]",
          "438:  buf = safe_emalloc(buf_len, sizeof(char), 0);",
          "",
          "[Added Lines]",
          "437:  buf = safe_emalloc(string_len, 2, 1);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "472:     }",
          "473:    }",
          "474:    if (new_l + 1 > buf_len) {",
          "475:     buf_len = 1 + buf_len + 2 * new_l;",
          "477:     strncpy(nbuf, buf, buf_len - 1);",
          "478:     nbuf[buf_len - 1] = '\\0';",
          "479:     efree(buf);",
          "",
          "[Removed Lines]",
          "476:     nbuf = emalloc(buf_len);",
          "",
          "[Added Lines]",
          "475:     nbuf = safe_emalloc(new_l + 1, 2, buf_len);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "510:     }",
          "511:     new_l = strlen (buf) + 1;",
          "512:     if (new_l + 1 > buf_len) {",
          "513:      buf_len = 1 + buf_len + 2 * new_l;",
          "515:      strncpy(nbuf, buf, buf_len-1);",
          "516:      efree(buf);",
          "517:      buf = nbuf;",
          "",
          "[Removed Lines]",
          "514:      nbuf = safe_emalloc(buf_len, sizeof(char), 0);",
          "",
          "[Added Lines]",
          "513:      nbuf = safe_emalloc(new_l + 1, 2, buf_len);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "526:    new_l = strlen(buf) + strlen(&string[pos]);",
          "527:    if (new_l + 1 > buf_len) {",
          "530:     strncpy(nbuf, buf, buf_len-1);",
          "531:     efree(buf);",
          "532:     buf = nbuf;",
          "",
          "[Removed Lines]",
          "529:     nbuf = safe_emalloc(buf_len, sizeof(char), 0);",
          "",
          "[Added Lines]",
          "529:     nbuf = safe_emalloc(new_l, 1, 1);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "598:  if (ret == (char *) -1) {",
          "599:   RETVAL_FALSE;",
          "600:  } else {",
          "602:   STR_FREE(ret);",
          "603:  }",
          "",
          "[Removed Lines]",
          "601:   RETVAL_STRING(ret, 1);",
          "",
          "[Added Lines]",
          "601:   RETVAL_STRINGL_CHECK(ret, strlen(ret), 1);",
          "",
          "---------------"
        ],
        "ext/imap/php_imap.c||ext/imap/php_imap.c": [
          "File: ext/imap/php_imap.c -> ext/imap/php_imap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2523:   RETURN_FALSE;",
          "2524:  }",
          "2527:  fs_give((void**) &decode);",
          "2528: }",
          "",
          "[Removed Lines]",
          "2526:  RETVAL_STRINGL(decode, newlength, 1);",
          "",
          "[Added Lines]",
          "2526:  RETVAL_STRINGL_CHECK(decode, newlength, 1);",
          "",
          "---------------"
        ],
        "ext/intl/locale/locale_methods.c||ext/intl/locale/locale_methods.c": [
          "File: ext/intl/locale/locale_methods.c -> ext/intl/locale/locale_methods.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "395:  if(loc_name_len == 0) {",
          "396:   loc_name = intl_locale_get_default(TSRMLS_C);",
          "397:  }",
          "400:  tag_value = get_icu_value_internal( loc_name , tag_name , &result ,0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "399:  INTL_CHECK_LOCALE_LEN(strlen(loc_name));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1159:   loc_name = intl_locale_get_default(TSRMLS_C);",
          "1160:  }",
          "1163:  array_init( return_value );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1164:  INTL_CHECK_LOCALE_LEN(strlen(loc_name));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1267:   RETURN_TRUE;",
          "1268:  }",
          "1270:  if( boolCanonical ){",
          "1272:   can_loc_range=get_icu_value_internal( loc_range , LOC_CANONICALIZE_TAG , &result , 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1273:  INTL_CHECK_LOCALE_LEN(strlen(loc_range));",
          "1274:  INTL_CHECK_LOCALE_LEN(strlen(lang_tag));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1549:   loc_range = intl_locale_get_default(TSRMLS_C);",
          "1550:  }",
          "1552:  hash_arr = HASH_OF(arr);",
          "1554:  if( !hash_arr || zend_hash_num_elements( hash_arr ) == 0 ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1558:  INTL_CHECK_LOCALE_LEN(strlen(loc_range));",
          "",
          "---------------"
        ],
        "ext/intl/resourcebundle/resourcebundle_class.c||ext/intl/resourcebundle/resourcebundle_class.c": [
          "File: ext/intl/resourcebundle/resourcebundle_class.c -> ext/intl/resourcebundle/resourcebundle_class.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81: {",
          "82:  const char *bundlename;",
          "83:  int   bundlename_len = 0;",
          "",
          "[Removed Lines]",
          "80: static void resourcebundle_ctor(INTERNAL_FUNCTION_PARAMETERS)",
          "",
          "[Added Lines]",
          "80: static void resourcebundle_ctor(INTERNAL_FUNCTION_PARAMETERS)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:  intl_error_reset( NULL TSRMLS_CC );",
          "94:   &locale, &locale_len, &bundlename, &bundlename_len, &fallback ) == FAILURE )",
          "95:  {",
          "96:   intl_error_set( NULL, U_ILLEGAL_ARGUMENT_ERROR,",
          "",
          "[Removed Lines]",
          "93:  if( zend_parse_parameters( ZEND_NUM_ARGS() TSRMLS_CC, \"s!s!|b\",",
          "",
          "[Added Lines]",
          "93:  if( zend_parse_parameters( ZEND_NUM_ARGS() TSRMLS_CC, \"s!s!|b\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100:  }",
          "102:  INTL_CHECK_LOCALE_LEN_OBJ(locale_len, return_value);",
          "104:  if (locale == NULL) {",
          "105:   locale = intl_locale_get_default(TSRMLS_C);",
          "106:  }",
          "108:  if (fallback) {",
          "109:   rb->me = ures_open(bundlename, locale, &INTL_DATA_ERROR_CODE(rb));",
          "110:  } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "108:  if (bundlename_len >= MAXPATHLEN) {",
          "109:   intl_error_set( NULL, U_ILLEGAL_ARGUMENT_ERROR, \"Bundle name too long\", 0 TSRMLS_CC );",
          "110:   zval_dtor(return_value);",
          "111:   ZVAL_NULL(return_value);",
          "112:   RETURN_NULL();",
          "113:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "152: proto ResourceBundle resourcebundle_create( string $locale [, string $bundlename [, bool $fallback = true ]] )",
          "155: {",
          "156:  object_init_ex( return_value, ResourceBundle_ce_ptr );",
          "157:  resourcebundle_ctor(INTERNAL_FUNCTION_PARAM_PASSTHRU);",
          "",
          "[Removed Lines]",
          "154: PHP_FUNCTION( resourcebundle_create )",
          "",
          "[Added Lines]",
          "161: PHP_FUNCTION( resourcebundle_create )",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "163: {",
          "164:  int32_t     meindex = 0;",
          "165:  char *      mekey = NULL;",
          "",
          "[Removed Lines]",
          "162: static void resourcebundle_array_fetch(zval *object, zval *offset, zval *return_value, int fallback TSRMLS_DC)",
          "",
          "[Added Lines]",
          "169: static void resourcebundle_array_fetch(zval *object, zval *offset, zval *return_value, int fallback TSRMLS_DC)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "167:  char         *pbuf;",
          "168:  ResourceBundle_object *rb;",
          "171:  RESOURCEBUNDLE_METHOD_FETCH_OBJECT;",
          "173:  if(Z_TYPE_P(offset) == IS_LONG) {",
          "",
          "[Removed Lines]",
          "170:  intl_error_reset( NULL TSRMLS_CC );",
          "",
          "[Added Lines]",
          "177:  intl_error_reset( NULL TSRMLS_CC );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "178:   mekey = Z_STRVAL_P(offset);",
          "179:   rb->child = ures_getByKey(rb->me, mekey, rb->child, &INTL_DATA_ERROR_CODE(rb) );",
          "180:  } else {",
          "182:    \"resourcebundle_get: index should be integer or string\", 0 TSRMLS_CC);",
          "183:   RETURN_NULL();",
          "184:  }",
          "187:  if (U_FAILURE(INTL_DATA_ERROR_CODE(rb))) {",
          "188:   if (is_numeric) {",
          "189:    spprintf( &pbuf, 0, \"Cannot load resource element %d\", meindex );",
          "",
          "[Removed Lines]",
          "181:   intl_errors_set(INTL_DATA_ERROR_P(rb), U_ILLEGAL_ARGUMENT_ERROR,",
          "186:  intl_error_set_code( NULL, INTL_DATA_ERROR_CODE(rb) TSRMLS_CC );",
          "",
          "[Added Lines]",
          "188:   intl_errors_set(INTL_DATA_ERROR_P(rb), U_ILLEGAL_ARGUMENT_ERROR,",
          "193:  intl_error_set_code( NULL, INTL_DATA_ERROR_CODE(rb) TSRMLS_CC );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "217: {",
          "218:  zval *retval;",
          "",
          "[Removed Lines]",
          "216: zval *resourcebundle_array_get(zval *object, zval *offset, int type TSRMLS_DC)",
          "",
          "[Added Lines]",
          "223: zval *resourcebundle_array_get(zval *object, zval *offset, int type TSRMLS_DC)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "246:  zval *      object;",
          "248:  if (zend_parse_method_parameters(ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"Oz|b\", &object, ResourceBundle_ce_ptr, &offset, &fallback ) == FAILURE) {",
          "250:    \"resourcebundle_get: unable to parse input params\", 0 TSRMLS_CC);",
          "251:   RETURN_FALSE;",
          "252:  }",
          "",
          "[Removed Lines]",
          "249:   intl_error_set(NULL, U_ILLEGAL_ARGUMENT_ERROR,",
          "",
          "[Added Lines]",
          "256:   intl_error_set(NULL, U_ILLEGAL_ARGUMENT_ERROR,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "260: {",
          "261:  ResourceBundle_object *rb;",
          "262:  RESOURCEBUNDLE_METHOD_FETCH_OBJECT_NO_CHECK;",
          "",
          "[Removed Lines]",
          "259: int resourcebundle_array_count(zval *object, long *count TSRMLS_DC)",
          "",
          "[Added Lines]",
          "266: int resourcebundle_array_count(zval *object, long *count TSRMLS_DC)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "288:  RESOURCEBUNDLE_METHOD_INIT_VARS;",
          "290:  if( zend_parse_method_parameters( ZEND_NUM_ARGS() TSRMLS_CC, getThis(), \"O\", &object, ResourceBundle_ce_ptr ) == FAILURE ) {",
          "292:    \"resourcebundle_count: unable to parse input params\", 0 TSRMLS_CC);",
          "293:   RETURN_FALSE;",
          "294:  }",
          "",
          "[Removed Lines]",
          "291:   intl_error_set(NULL, U_ILLEGAL_ARGUMENT_ERROR,",
          "",
          "[Added Lines]",
          "298:   intl_error_set(NULL, U_ILLEGAL_ARGUMENT_ERROR,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "323:  if( zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &bundlename, &bundlename_len ) == FAILURE )",
          "324:  {",
          "326:    \"resourcebundle_locales: unable to parse input params\", 0 TSRMLS_CC);",
          "327:   RETURN_FALSE;",
          "328:  }",
          "330:  if(bundlename_len == 0) {",
          "332:   bundlename = NULL;",
          "333:  }",
          "335:  icuenum = ures_openAvailableLocales( bundlename, &icuerror );",
          "338:  uenum_reset( icuenum, &icuerror );",
          "341:  array_init( return_value );",
          "342:  while ((entry = uenum_next( icuenum, &entry_len, &icuerror ))) {",
          "",
          "[Removed Lines]",
          "325:   intl_error_set(NULL, U_ILLEGAL_ARGUMENT_ERROR,",
          "336:  INTL_CHECK_STATUS(icuerror, \"Cannot fetch locales list\");",
          "339:  INTL_CHECK_STATUS(icuerror, \"Cannot iterate locales list\");",
          "",
          "[Added Lines]",
          "332:   intl_error_set(NULL, U_ILLEGAL_ARGUMENT_ERROR,",
          "337:  if (bundlename_len >= MAXPATHLEN) {",
          "338:   intl_error_set( NULL, U_ILLEGAL_ARGUMENT_ERROR, \"resourcebundle_locales: bundle name too long\", 0 TSRMLS_CC );",
          "339:   RETURN_FALSE;",
          "340:  }",
          "348:  INTL_CHECK_STATUS(icuerror, \"Cannot fetch locales list\");",
          "351:  INTL_CHECK_STATUS(icuerror, \"Cannot iterate locales list\");",
          "",
          "---------------"
        ],
        "ext/intl/tests/bug72241.phpt||ext/intl/tests/bug72241.phpt": [
          "File: ext/intl/tests/bug72241.phpt -> ext/intl/tests/bug72241.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: echo strlen($out) . PHP_EOL;",
          "10: echo unpack('H*', $out)[1] . PHP_EOL;",
          "11: --EXPECT--",
          "",
          "[Removed Lines]",
          "12: 1000",

          "",
          "[Added Lines]",
          "12: 0",
          "",
          "---------------"
        ],
        "ext/mbstring/mbstring.c||ext/mbstring/mbstring.c": [
          "File: ext/mbstring/mbstring.c -> ext/mbstring/mbstring.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:  {MB_OVERLOAD_REGEX, \"split\", \"mb_split\", \"mb_orig_split\"},",
          "214: #endif",
          "215:  {0, NULL, NULL, NULL}",
          "",
          "[Removed Lines]",
          "216: };",
          "",
          "[Added Lines]",
          "216: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "648: static void _php_mb_allocators_free(void *ptr)",
          "649: {",
          "650:  efree(ptr);",
          "653: static void *_php_mb_allocators_pmalloc(unsigned int sz)",
          "654: {",
          "",
          "[Removed Lines]",
          "651: }",
          "",
          "[Added Lines]",
          "651: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "663: static void _php_mb_allocators_pfree(void *ptr)",
          "664: {",
          "665:  pefree(ptr, 1);",
          "668: static mbfl_allocators _php_mb_allocators = {",
          "669:  _php_mb_allocators_malloc,",
          "",
          "[Removed Lines]",
          "666: }",
          "",
          "[Added Lines]",
          "666: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "960:  if (!mbfl_buffer_converter_result(convd, &result)) {",
          "961:   mbfl_buffer_converter_delete(convd);",
          "962:   return (size_t)-1;",
          "",
          "[Removed Lines]",
          "963:  }",
          "",
          "[Added Lines]",
          "963:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1476:  PHP_INI_ENTRY(\"mbstring.http_output\", NULL, PHP_INI_ALL, OnUpdate_mbstring_http_output)",
          "1477:  STD_PHP_INI_ENTRY(\"mbstring.internal_encoding\", NULL, PHP_INI_ALL, OnUpdate_mbstring_internal_encoding, internal_encoding_name, zend_mbstring_globals, mbstring_globals)",
          "1478:  PHP_INI_ENTRY(\"mbstring.substitute_character\", NULL, PHP_INI_ALL, OnUpdate_mbstring_substitute_character)",
          "1480:  PHP_INI_SYSTEM, OnUpdateLong, func_overload, zend_mbstring_globals, mbstring_globals)",
          "1482:  STD_PHP_INI_BOOLEAN(\"mbstring.encoding_translation\", \"0\",",
          "1483:   PHP_INI_SYSTEM | PHP_INI_PERDIR,",
          "1486:  PHP_INI_ENTRY(\"mbstring.http_output_conv_mimetypes\",",
          "1487:   \"^(text/|application/xhtml\\\\+xml)\",",
          "1488:   PHP_INI_ALL,",
          "",
          "[Removed Lines]",
          "1479:  STD_PHP_INI_ENTRY(\"mbstring.func_overload\", \"0\",",
          "1484:   OnUpdate_mbstring_encoding_translation,",
          "1485:   encoding_translation, zend_mbstring_globals, mbstring_globals)",
          "",
          "[Added Lines]",
          "1479:  STD_PHP_INI_ENTRY(\"mbstring.func_overload\", \"0\",",
          "1484:   OnUpdate_mbstring_encoding_translation,",
          "1485:   encoding_translation, zend_mbstring_globals, mbstring_globals)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1625:  if (MBSTRG(func_overload)){",
          "1626:   p = &(mb_ovld[0]);",
          "1628:   while (p->type > 0) {",
          "1630:     zend_hash_find(EG(function_table), p->save_func,",
          "1631:      strlen(p->save_func)+1, (void **)&orig) != SUCCESS) {",
          "1633:     zend_hash_find(EG(function_table), p->ovld_func, strlen(p->ovld_func)+1 , (void **)&func);",
          "1635:     if (zend_hash_find(EG(function_table), p->orig_func, strlen(p->orig_func)+1, (void **)&orig) != SUCCESS) {",
          "1636:      php_error_docref(\"ref.mbstring\" TSRMLS_CC, E_WARNING, \"mbstring couldn't find function %s.\", p->orig_func);",
          "1637:      return FAILURE;",
          "1638:     } else {",
          "1639:      zend_hash_add(EG(function_table), p->save_func, strlen(p->save_func)+1, orig, sizeof(zend_function), NULL);",
          "1642:       NULL) == FAILURE) {",
          "1643:       php_error_docref(\"ref.mbstring\" TSRMLS_CC, E_WARNING, \"mbstring couldn't replace function %s.\", p->orig_func);",
          "1644:       return FAILURE;",
          "",
          "[Removed Lines]",
          "1629:    if ((MBSTRG(func_overload) & p->type) == p->type &&",
          "1641:      if (zend_hash_update(EG(function_table), p->orig_func, strlen(p->orig_func)+1, func, sizeof(zend_function),",
          "",
          "[Added Lines]",
          "1629:    if ((MBSTRG(func_overload) & p->type) == p->type &&",
          "1641:      if (zend_hash_update(EG(function_table), p->orig_func, strlen(p->orig_func)+1, func, sizeof(zend_function),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1685:  if (MBSTRG(func_overload)){",
          "1686:   p = &(mb_ovld[0]);",
          "1687:   while (p->type > 0) {",
          "1689:     zend_hash_find(EG(function_table), p->save_func,",
          "1690:           strlen(p->save_func)+1, (void **)&orig) == SUCCESS) {",
          "1692:     zend_hash_update(EG(function_table), p->orig_func, strlen(p->orig_func)+1, orig, sizeof(zend_function), NULL);",
          "1693:     zend_hash_del(EG(function_table), p->save_func, strlen(p->save_func)+1);",
          "1694:    }",
          "",
          "[Removed Lines]",
          "1688:    if ((MBSTRG(func_overload) & p->type) == p->type &&",
          "",
          "[Added Lines]",
          "1688:    if ((MBSTRG(func_overload) & p->type) == p->type &&",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1710:  php_info_print_table_start();",
          "1711:  php_info_print_table_row(2, \"Multibyte Support\", \"enabled\");",
          "1712:  php_info_print_table_row(2, \"Multibyte string engine\", \"libmbfl\");",
          "1714:  {",
          "1715:   char tmp[256];",
          "1716:   snprintf(tmp, sizeof(tmp), \"%d.%d.%d\", MBFL_VERSION_MAJOR, MBFL_VERSION_MINOR, MBFL_VERSION_TEENY);",
          "",
          "[Removed Lines]",
          "1713:  php_info_print_table_row(2, \"HTTP input encoding translation\", MBSTRG(encoding_translation) ? \"enabled\": \"disabled\");",
          "",
          "[Added Lines]",
          "1713:  php_info_print_table_row(2, \"HTTP input encoding translation\", MBSTRG(encoding_translation) ? \"enabled\": \"disabled\");",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1846:       temp = list;",
          "1847:       spprintf(&list, 0, \"%s,%s\", temp, (*entry)->name);",
          "1848:       efree(temp);",
          "1850:        break;",
          "1851:       }",
          "1852:      } else {",
          "",
          "[Removed Lines]",
          "1849:       if (!list) {",
          "",
          "[Added Lines]",
          "1849:       if (!list) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2078:  encstr = estrndup(encstr, encstr_len);",
          "2080:  info.data_type              = PARSE_STRING;",
          "2082:  info.report_errors          = 1;",
          "2083:  info.to_encoding            = MBSTRG(current_internal_encoding);",
          "2084:  info.to_language            = MBSTRG(language);",
          "2085:  info.from_encodings         = MBSTRG(http_input_list);",
          "2087:  info.from_language          = MBSTRG(language);",
          "2089:  if (track_vars_array != NULL) {",
          "",
          "[Removed Lines]",
          "2081:  info.separator              = PG(arg_separator).input;",
          "2086:  info.num_from_encodings     = MBSTRG(http_input_list_size);",
          "",
          "[Added Lines]",
          "2081:  info.separator              = PG(arg_separator).input;",
          "2086:  info.num_from_encodings     = MBSTRG(http_input_list_size);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2093:   if (!EG(active_symbol_table)) {",
          "2094:    zend_rebuild_symbol_table(TSRMLS_C);",
          "2095:   }",
          "2098:  }",
          "2100:  MBSTRG(http_input_identify) = detected;",
          "",
          "[Removed Lines]",
          "2096:   Z_ARRVAL(tmp) = EG(active_symbol_table);",
          "2097:   detected = _php_mb_encoding_handler_ex(&info, &tmp, encstr TSRMLS_CC);",
          "",
          "[Added Lines]",
          "2096:   Z_ARRVAL(tmp) = EG(active_symbol_table);",
          "2097:   detected = _php_mb_encoding_handler_ex(&info, &tmp, encstr TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2158:    if (SG(sapi_headers).send_default_content_type || send_text_mimetype) {",
          "2159:    charset = encoding->mime_name;",
          "2160:    if (charset) {",
          "2162:     if (sapi_add_header(p, len, 0) != FAILURE) {",
          "2163:      SG(sapi_headers).send_default_content_type = 0;",
          "2164:     }",
          "",
          "[Removed Lines]",
          "2161:     len = spprintf( &p, 0, \"Content-Type: %s; charset=%s\",  mimetype, charset );",
          "",
          "[Added Lines]",
          "2161:     len = spprintf( &p, 0, \"Content-Type: %s; charset=%s\",  mimetype, charset );",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2193:   mbfl_buffer_converter_feed(MBSTRG(outconv), &string);",
          "2194:   if (last_feed) {",
          "2195:    mbfl_buffer_converter_flush(MBSTRG(outconv));",
          "2198:   mbfl_buffer_converter_result(MBSTRG(outconv), &result);",
          "2202:   if (last_feed) {",
          "2203:   MBSTRG(illegalchars) += mbfl_buffer_illegalchars(MBSTRG(outconv));",
          "",
          "[Removed Lines]",
          "2196:  }",
          "",
          "[Added Lines]",
          "2196:  }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3157:  if (newstr) {",
          "3158:   RETVAL_STRINGL(newstr, ret_len, 0);",
          "3160: }",
          "",
          "[Removed Lines]",
          "3159:  }",
          "",
          "[Added Lines]",
          "3159:  }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "3842:  ret = mbfl_html_numeric_entity(&string, &result, convmap, mapsize, type);",
          "3843:  if (ret != NULL) {",
          "3845:  } else {",
          "3846:   RETVAL_FALSE;",
          "3847:  }",
          "",
          "[Removed Lines]",
          "3844:   RETVAL_STRINGL((char *)ret->val, ret->len, 0);",
          "",
          "[Added Lines]",
          "3844:   RETVAL_STRINGL_CHECK((char *)ret->val, ret->len, 0);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4177:     if ((param_name = php_strtok_r(p, \"= \", &tmp)) != NULL) {",
          "4178:      if (strcasecmp(param_name, \"charset\") == 0) {",
          "4179:       enum mbfl_no_encoding _tran_cs = tran_cs;",
          "4181:       charset = php_strtok_r(NULL, \"= \\\"\", &tmp);",
          "4182:       if (charset != NULL) {",
          "4183:        _tran_cs = mbfl_name2no_encoding(charset);",
          "4184:       }",
          "4186:       if (_tran_cs == mbfl_no_encoding_invalid) {",
          "4188:        _tran_cs = mbfl_no_encoding_ascii;",
          "4189:       }",
          "4190:       tran_cs = _tran_cs;",
          "",
          "[Removed Lines]",
          "4187:        php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unsupported charset \\\"%s\\\" - will be regarded as ascii\", charset);",
          "",
          "[Added Lines]",
          "4187:        php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unsupported charset \\\"%s\\\" - will be regarded as ascii\", charset);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4209:     break;",
          "4211:    default:",
          "4213:     body_enc = mbfl_no_encoding_8bit;",
          "4214:     break;",
          "4215:   }",
          "",
          "[Removed Lines]",
          "4212:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unsupported transfer encoding \\\"%s\\\" - will be regarded as 8bit\", s->c);",
          "",
          "[Added Lines]",
          "4212:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unsupported transfer encoding \\\"%s\\\" - will be regarded as 8bit\", s->c);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4342:   extra_cmd = php_escape_shell_cmd(force_extra_parameters);",
          "4343:  } else if (extra_cmd) {",
          "4344:   extra_cmd = php_escape_shell_cmd(extra_cmd);",
          "4347:  if (!err && php_mail(to_r, subject, message, headers, extra_cmd TSRMLS_CC)) {",
          "4348:   RETVAL_TRUE;",
          "",
          "[Removed Lines]",
          "4345:  }",
          "",
          "[Added Lines]",
          "4345:  }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4441:   }",
          "4442:   if ((name = (char *)mbfl_no_language2name(MBSTRG(language))) != NULL) {",
          "4443:    add_assoc_string(return_value, \"language\", name, 1);",
          "4445:   n = MBSTRG(current_detect_order_list_size);",
          "4446:   entry = MBSTRG(current_detect_order_list);",
          "4447:   if (n > 0) {",
          "",
          "[Removed Lines]",
          "4444:   }",
          "",
          "[Added Lines]",
          "4444:   }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "4471:  } else if (!strcasecmp(\"internal_encoding\", typ)) {",
          "4472:   if (MBSTRG(current_internal_encoding)) {",
          "4473:    RETVAL_STRING((char *)MBSTRG(current_internal_encoding)->name, 1);",
          "4475:  } else if (!strcasecmp(\"http_input\", typ)) {",
          "4476:   if (MBSTRG(http_input_identify)) {",
          "4477:    RETVAL_STRING((char *)MBSTRG(http_input_identify)->name, 1);",
          "4479:  } else if (!strcasecmp(\"http_output\", typ)) {",
          "4480:   if (MBSTRG(current_http_output_encoding)) {",
          "4481:    RETVAL_STRING((char *)MBSTRG(current_http_output_encoding)->name, 1);",
          "4483:  } else if (!strcasecmp(\"http_output_conv_mimetypes\", typ)) {",
          "4484:   if ((name = (char *)zend_ini_string(\"mbstring.http_output_conv_mimetypes\", sizeof(\"mbstring.http_output_conv_mimetypes\"), 0)) != NULL) {",
          "4485:    RETVAL_STRING(name, 1);",
          "",
          "[Removed Lines]",
          "4474:   }",
          "4478:   }",
          "4482:   }",
          "",
          "[Added Lines]",
          "4474:   }",
          "4478:   }",
          "4482:   }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "4522:  } else if (!strcasecmp(\"language\", typ)) {",
          "4523:   if ((name = (char *)mbfl_no_language2name(MBSTRG(language))) != NULL) {",
          "4524:    RETVAL_STRING(name, 1);",
          "4526:  } else if (!strcasecmp(\"detect_order\", typ)) {",
          "4527:   n = MBSTRG(current_detect_order_list_size);",
          "4528:   entry = MBSTRG(current_detect_order_list);",
          "",
          "[Removed Lines]",
          "4525:   }",
          "",
          "[Added Lines]",
          "4525:   }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "4589:  if (convd == NULL) {",
          "4590:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unable to create converter\");",
          "4591:   RETURN_FALSE;",
          "4593:  mbfl_buffer_converter_illegal_mode(convd, MBFL_OUTPUTFILTER_ILLEGAL_MODE_NONE);",
          "4597:  mbfl_string_init_set(&string, mbfl_no_language_neutral, encoding->no_encoding);",
          "",
          "[Removed Lines]",
          "4592:  }",
          "4594:  mbfl_buffer_converter_illegal_substchar(convd, 0);",
          "",
          "[Added Lines]",
          "4592:  }",
          "4594:  mbfl_buffer_converter_illegal_substchar(convd, 0);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "4642: }",
          "4646: {",
          "4647:  return MBSTRG(encoding_translation);",
          "4648: }",
          "",
          "[Removed Lines]",
          "4645: static int php_mb_encoding_translation(TSRMLS_D)",
          "",
          "[Added Lines]",
          "4645: static int php_mb_encoding_translation(TSRMLS_D)",
          "",
          "---------------"
        ],
        "ext/openssl/openssl.c||ext/openssl/openssl.c": [
          "File: ext/openssl/openssl.c -> ext/openssl/openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5260:  free_iv = php_openssl_validate_iv(&iv, &iv_len, max_iv_len TSRMLS_CC);",
          "5262:  outlen = data_len + EVP_CIPHER_block_size(cipher_type);",
          "5265:  EVP_EncryptInit(&cipher_ctx, cipher_type, NULL, NULL);",
          "5266:  if (password_len > keylen) {",
          "",
          "[Removed Lines]",
          "5263:  outbuf = emalloc(outlen + 1);",
          "",
          "[Added Lines]",
          "5263:  outbuf = safe_emalloc(outlen, 1, 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5278:   outlen += i;",
          "5279:   if (options & OPENSSL_RAW_DATA) {",
          "5280:    outbuf[outlen] = '\\0';",
          "5282:   } else {",
          "5283:    int base64_str_len;",
          "5284:    char *base64_str;",
          "5286:    base64_str = (char*)php_base64_encode(outbuf, outlen, &base64_str_len);",
          "5287:    efree(outbuf);",
          "5289:   }",
          "5290:  } else {",
          "5291:   efree(outbuf);",
          "",
          "[Removed Lines]",
          "5281:    RETVAL_STRINGL((char *)outbuf, outlen, 0);",
          "5288:    RETVAL_STRINGL(base64_str, base64_str_len, 0);",
          "",
          "[Added Lines]",
          "5281:    RETVAL_STRINGL_CHECK((char *)outbuf, outlen, 0);",
          "5288:    if (!base64_str) {",
          "5289:     RETVAL_FALSE;",
          "5290:    } else {",
          "5291:     RETVAL_STRINGL(base64_str, base64_str_len, 0);",
          "5292:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5462:   return;",
          "5463:  }",
          "5469:  if (zstrong_result_returned) {",
          "5470:   zval_dtor(zstrong_result_returned);",
          "5471:   ZVAL_BOOL(zstrong_result_returned, 0);",
          "5472:  }",
          "5476: #ifdef PHP_WIN32",
          "",
          "[Removed Lines]",
          "5465:  if (buffer_length <= 0) {",
          "5466:   RETURN_FALSE;",
          "5467:  }",
          "5474:  buffer = emalloc(buffer_length + 1);",
          "",
          "[Added Lines]",
          "5474:  if (buffer_length <= 0 || buffer_length > INT_MAX) {",
          "5475:   RETURN_FALSE;",
          "5476:  }",
          "5478:  buffer = safe_emalloc(buffer_length, 1, 1);",
          "",
          "---------------"
        ],
        "ext/pcre/php_pcre.c||ext/pcre/php_pcre.c": [
          "File: ext/pcre/php_pcre.c -> ext/pcre/php_pcre.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1147:  offsets = (int *)safe_emalloc(size_offsets, sizeof(int), 0);",
          "1153:  match = NULL;",
          "",
          "[Removed Lines]",
          "1149:  alloc_len = 2 * subject_len + 1;",
          "1150:  result = safe_emalloc(alloc_len, sizeof(char), 0);",
          "",
          "[Added Lines]",
          "1149:  result = safe_emalloc(subject_len, 2*sizeof(char), 1);",
          "1150:  alloc_len = 2 * (size_t)subject_len + 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1212:    }",
          "1214:    if (new_len + 1 > alloc_len) {",
          "1217:     memcpy(new_buf, result, *result_len);",
          "1218:     efree(result);",
          "1219:     result = new_buf;",
          "",
          "[Removed Lines]",
          "1215:     alloc_len = 1 + alloc_len + 2 * new_len;",
          "1216:     new_buf = emalloc(alloc_len);",
          "",
          "[Added Lines]",
          "1215:     new_buf = safe_emalloc(2, new_len + 1, alloc_len);",
          "1216:     alloc_len = 1 + alloc_len + 2 * (size_t)new_len;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1276:    } else {",
          "1277:     new_len = *result_len + subject_len - start_offset;",
          "1278:     if (new_len + 1 > alloc_len) {",
          "1281:      memcpy(new_buf, result, *result_len);",
          "1282:      efree(result);",
          "1283:      result = new_buf;",
          "",
          "[Removed Lines]",
          "1280:      new_buf = safe_emalloc(alloc_len, sizeof(char), 0);",
          "",
          "[Added Lines]",
          "1279:      new_buf = safe_emalloc(new_len, sizeof(char), 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1308:  efree(offsets);",
          "1309:  efree(subpat_names);",
          "1311:  return result;",
          "1312: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1311:  if(result && (size_t)(*result_len) > INT_MAX) {",
          "1312:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Result is too big, max is %d\", INT_MAX);",
          "1313:   efree(result);",
          "1314:   result = NULL;",
          "1315:  }",
          "",
          "---------------"
        ],
        "ext/simplexml/simplexml.c||ext/simplexml/simplexml.c": [
          "File: ext/simplexml/simplexml.c -> ext/simplexml/simplexml.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1412:  if (node) {",
          "1413:   if (node->parent && (XML_DOCUMENT_NODE == node->parent->type)) {",
          "1414:    xmlDocDumpMemoryEnc((xmlDocPtr) sxe->document->ptr, &strval, &strval_len, ((xmlDocPtr) sxe->document->ptr)->encoding);",
          "1416:    xmlFree(strval);",
          "1417:   } else {",
          "1419:    outbuf = xmlAllocOutputBuffer(NULL);",
          "",
          "[Removed Lines]",
          "1415:    RETVAL_STRINGL((char *)strval, strval_len, 1);",
          "",
          "[Added Lines]",
          "1415:    if (!strval) {",
          "1416:     RETVAL_FALSE;",
          "1417:    } else {",
          "1418:     RETVAL_STRINGL((char *)strval, strval_len, 1);",
          "1419:    }",
          "1422:    char *return_content;",
          "1423:    size_t return_len;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1425:    xmlNodeDumpOutput(outbuf, (xmlDocPtr) sxe->document->ptr, node, 0, 0, ((xmlDocPtr) sxe->document->ptr)->encoding);",
          "1426:    xmlOutputBufferFlush(outbuf);",
          "1427: #ifdef LIBXML2_NEW_BUFFER",
          "1429: #else",
          "1431: #endif",
          "1432:    xmlOutputBufferClose(outbuf);",
          "1433:   }",
          "1434:  } else {",
          "",
          "[Removed Lines]",
          "1428:    RETVAL_STRINGL((char *)xmlOutputBufferGetContent(outbuf), xmlOutputBufferGetSize(outbuf), 1);",
          "1430:    RETVAL_STRINGL((char *)outbuf->buffer->content, outbuf->buffer->use, 1);",
          "",
          "[Added Lines]",
          "1434:    return_content = (char *)xmlOutputBufferGetContent(outbuf);",
          "1435:    return_len = xmlOutputBufferGetSize(outbuf);",
          "1437:    return_content = (char *)outbuf->buffer->content;",
          "1438:    return_len = outbuf->buffer->use;",
          "1440:    if (!return_content) {",
          "1441:     RETVAL_FALSE;",
          "1442:    } else {",
          "1443:     RETVAL_STRINGL_CHECK(return_content, return_len, 1);",
          "1444:    }",
          "",
          "---------------"
        ],
        "ext/spl/spl_iterators.c||ext/spl/spl_iterators.c": [
          "File: ext/spl/spl_iterators.c -> ext/spl/spl_iterators.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "248:     if (iterator->funcs->valid(iterator TSRMLS_CC) == FAILURE) {",
          "249:      break;",
          "250:     }",
          "253:    case RS_TEST:",
          "254:     ce = object->iterators[object->level].ce;",
          "",
          "[Removed Lines]",
          "251:     object->iterators[object->level].state = RS_TEST;",
          "",
          "[Added Lines]",
          "251:     object->iterators[object->level].state = RS_TEST;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "982: }",
          "986:  ZEND_ARG_OBJ_INFO(0, iterator, Traversable, 0)",
          "987:  ZEND_ARG_INFO(0, mode)",
          "988:  ZEND_ARG_INFO(0, flags)",
          "",
          "[Removed Lines]",
          "985: ZEND_BEGIN_ARG_INFO_EX(arginfo_recursive_it___construct, 0, 0, 1)",
          "",
          "[Added Lines]",
          "985: ZEND_BEGIN_ARG_INFO_EX(arginfo_recursive_it___construct, 0, 0, 1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1121:   zend_throw_exception_ex(spl_ce_LogicException, 0 TSRMLS_CC,",
          "1122:    \"The object is in an invalid state as the parent constructor was not called\");",
          "1123:   return;",
          "1126:  spl_recursive_tree_iterator_get_prefix(object, return_value TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "1124:  }",
          "",
          "[Added Lines]",
          "1124:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1197:   zend_throw_exception_ex(spl_ce_LogicException, 0 TSRMLS_CC,",
          "1198:    \"The object is in an invalid state as the parent constructor was not called\");",
          "1199:   return;",
          "1202:  if (object->flags & RTIT_BYPASS_CURRENT) {",
          "1203:   zend_object_iterator      *iterator;",
          "",
          "[Removed Lines]",
          "1200:  }",
          "",
          "[Added Lines]",
          "1200:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1301:  RETVAL_STRINGL(str, str_len, 0);",
          "1305:  ZEND_ARG_OBJ_INFO(0, iterator, Traversable, 0)",
          "1306:  ZEND_ARG_INFO(0, flags)",
          "1307:  ZEND_ARG_INFO(0, caching_it_flags)",
          "",
          "[Removed Lines]",
          "1304: ZEND_BEGIN_ARG_INFO_EX(arginfo_recursive_tree_it___construct, 0, 0, 1)",
          "",
          "[Added Lines]",
          "1304: ZEND_BEGIN_ARG_INFO_EX(arginfo_recursive_tree_it___construct, 0, 0, 1)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1406:  if (call_user_function_ex(EG(function_table), NULL, &func, &retval_ptr, arg_count, func_params, 0, NULL TSRMLS_CC) == SUCCESS && retval_ptr) {",
          "1407:   RETURN_ZVAL(retval_ptr, 0, 1);",
          "1409:   success = SUCCESS;",
          "1410:  } else {",
          "1411:   php_error_docref(NULL TSRMLS_CC, E_ERROR, \"Unable to call %s::%s()\", intern->inner.ce->name, method);",
          "1412:   success = FAILURE;",
          "1413:  }",
          "1416:  return success;",
          "1417: }",
          "1418: #endif",
          "",
          "[Removed Lines]",
          "1415:  efree(func_params);",
          "",
          "[Added Lines]",
          "1415:  efree(func_params);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1507:    ce = Z_OBJCE_P(zobject);",
          "1508:    if (!instanceof_function(ce, zend_ce_iterator TSRMLS_CC)) {",
          "1509:     if (ZEND_NUM_ARGS() > 1) {",
          "1511:      || !instanceof_function(ce, *pce_cast TSRMLS_CC)",
          "1512:      || !(*pce_cast)->get_iterator",
          "1513:      ) {",
          "",
          "[Removed Lines]",
          "1510:      if (zend_lookup_class(class_name, class_name_len, &pce_cast TSRMLS_CC) == FAILURE",
          "",
          "[Added Lines]",
          "1510:      if (zend_lookup_class(class_name, class_name_len, &pce_cast TSRMLS_CC) == FAILURE",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2089:   }",
          "2090:   zval_ptr_dtor(&intern->current.data);",
          "2091:   ALLOC_INIT_ZVAL(intern->current.data);",
          "2093:    intern->current.data, intern->u.regex.mode == REGIT_MODE_ALL_MATCHES, intern->u.regex.use_flags, intern->u.regex.preg_flags, 0 TSRMLS_CC);",
          "2094:   RETVAL_BOOL(Z_LVAL(zcount) > 0);",
          "2095:   break;",
          "",
          "[Removed Lines]",
          "2092:   php_pcre_match_impl(intern->u.regex.pce, subject, subject_len, &zcount,",
          "",
          "[Added Lines]",
          "2092:   php_pcre_match_impl(intern->u.regex.pce, subject, subject_len, &zcount,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2424: }",
          "2428:  ZEND_ARG_OBJ_INFO(0, iterator, Iterator, 0)",
          "2429: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "2427: ZEND_BEGIN_ARG_INFO(arginfo_filter_it___construct, 0)",
          "",
          "[Added Lines]",
          "2427: ZEND_BEGIN_ARG_INFO(arginfo_filter_it___construct, 0)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2440:  PHP_FE_END",
          "2441: };",
          "2444:  ZEND_ARG_OBJ_INFO(0, iterator, Iterator, 0)",
          "2445:  ZEND_ARG_INFO(0, callback)",
          "2446: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "2443: ZEND_BEGIN_ARG_INFO(arginfo_callback_filter_it___construct, 0)",
          "",
          "[Added Lines]",
          "2443: ZEND_BEGIN_ARG_INFO(arginfo_callback_filter_it___construct, 0)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2451:  PHP_FE_END",
          "2452: };",
          "2455:  ZEND_ARG_OBJ_INFO(0, iterator, RecursiveIterator, 0)",
          "2456:  ZEND_ARG_INFO(0, callback)",
          "2457: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "2454: ZEND_BEGIN_ARG_INFO(arginfo_recursive_callback_filter_it___construct, 0)",
          "",
          "[Added Lines]",
          "2454: ZEND_BEGIN_ARG_INFO(arginfo_recursive_callback_filter_it___construct, 0)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2463:  PHP_FE_END",
          "2464: };",
          "2467:  ZEND_ARG_OBJ_INFO(0, iterator, RecursiveIterator, 0)",
          "2468: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "2466: ZEND_BEGIN_ARG_INFO(arginfo_parent_it___construct, 0)",
          "",
          "[Added Lines]",
          "2466: ZEND_BEGIN_ARG_INFO(arginfo_parent_it___construct, 0)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2481: };",
          "2483: #if HAVE_PCRE || HAVE_BUNDLED_PCRE",
          "2485:  ZEND_ARG_OBJ_INFO(0, iterator, Iterator, 0)",
          "2486:  ZEND_ARG_INFO(0, regex)",
          "2487:  ZEND_ARG_INFO(0, mode)",
          "",
          "[Removed Lines]",
          "2484: ZEND_BEGIN_ARG_INFO_EX(arginfo_regex_it___construct, 0, 0, 2)",
          "",
          "[Added Lines]",
          "2484: ZEND_BEGIN_ARG_INFO_EX(arginfo_regex_it___construct, 0, 0, 2)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2489:  ZEND_ARG_INFO(0, preg_flags)",
          "2490: ZEND_END_ARG_INFO();",
          "2493:  ZEND_ARG_INFO(0, mode)",
          "2494: ZEND_END_ARG_INFO();",
          "2497:  ZEND_ARG_INFO(0, flags)",
          "2498: ZEND_END_ARG_INFO();",
          "2501:  ZEND_ARG_INFO(0, preg_flags)",
          "2502: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "2492: ZEND_BEGIN_ARG_INFO_EX(arginfo_regex_it_set_mode, 0, 0, 1)",
          "2496: ZEND_BEGIN_ARG_INFO_EX(arginfo_regex_it_set_flags, 0, 0, 1)",
          "2500: ZEND_BEGIN_ARG_INFO_EX(arginfo_regex_it_set_preg_flags, 0, 0, 1)",
          "",
          "[Added Lines]",
          "2492: ZEND_BEGIN_ARG_INFO_EX(arginfo_regex_it_set_mode, 0, 0, 1)",
          "2496: ZEND_BEGIN_ARG_INFO_EX(arginfo_regex_it_set_flags, 0, 0, 1)",
          "2500: ZEND_BEGIN_ARG_INFO_EX(arginfo_regex_it_set_preg_flags, 0, 0, 1)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2514:  PHP_FE_END",
          "2515: };",
          "2518:  ZEND_ARG_OBJ_INFO(0, iterator, RecursiveIterator, 0)",
          "2519:  ZEND_ARG_INFO(0, regex)",
          "2520:  ZEND_ARG_INFO(0, mode)",
          "",
          "[Removed Lines]",
          "2517: ZEND_BEGIN_ARG_INFO_EX(arginfo_rec_regex_it___construct, 0, 0, 2)",
          "",
          "[Added Lines]",
          "2517: ZEND_BEGIN_ARG_INFO_EX(arginfo_rec_regex_it___construct, 0, 0, 2)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2650:  RETURN_LONG(intern->current.pos);",
          "2654:  ZEND_ARG_INFO(0, position)",
          "2655: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "2653: ZEND_BEGIN_ARG_INFO(arginfo_seekable_it_seek, 0)",
          "",
          "[Added Lines]",
          "2653: ZEND_BEGIN_ARG_INFO(arginfo_seekable_it_seek, 0)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2659:  PHP_FE_END",
          "2660: };",
          "2663:  ZEND_ARG_OBJ_INFO(0, iterator, Iterator, 0)",
          "2664:  ZEND_ARG_INFO(0, offset)",
          "2665:  ZEND_ARG_INFO(0, count)",
          "2666: ZEND_END_ARG_INFO();",
          "2669:  ZEND_ARG_INFO(0, position)",
          "2670: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "2662: ZEND_BEGIN_ARG_INFO_EX(arginfo_limit_it___construct, 0, 0, 1)",
          "2668: ZEND_BEGIN_ARG_INFO(arginfo_limit_it_seek, 0)",
          "",
          "[Added Lines]",
          "2662: ZEND_BEGIN_ARG_INFO_EX(arginfo_limit_it___construct, 0, 0, 1)",
          "2668: ZEND_BEGIN_ARG_INFO(arginfo_limit_it_seek, 0)",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2771:     zval_copy_ctor(intern->u.caching.zstr);",
          "2772:    }",
          "2773:   }",
          "2775:  } else {",
          "2776:   intern->u.caching.flags &= ~CIT_VALID;",
          "2777:  }",
          "",
          "[Removed Lines]",
          "2774:   spl_dual_it_next(intern, 0 TSRMLS_CC);",
          "",
          "[Added Lines]",
          "2774:   spl_dual_it_next(intern, 0 TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2864:   return;",
          "2865:  }",
          "2866:  if (intern->u.caching.flags & CIT_TOSTRING_USE_KEY) {",
          "2867:   MAKE_COPY_ZVAL(&intern->current.key, return_value);",
          "2868:   convert_to_string(return_value);",
          "2869:   return;",
          "2870:  } else if (intern->u.caching.flags & CIT_TOSTRING_USE_CURRENT) {",
          "2871:   MAKE_COPY_ZVAL(&intern->current.data, return_value);",
          "2872:   convert_to_string(return_value);",
          "2873:   return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2867:   if (!intern->current.key) {",
          "2868:    RETURN_EMPTY_STRING();",
          "2869:   }",
          "2874:   if (!intern->current.data) {",
          "2875:    RETURN_EMPTY_STRING();",
          "2876:   }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2875:  if (intern->u.caching.zstr) {",
          "2876:   RETURN_STRINGL(Z_STRVAL_P(intern->u.caching.zstr), Z_STRLEN_P(intern->u.caching.zstr), 1);",
          "2877:  } else {",
          "2879:  }",
          "",
          "[Removed Lines]",
          "2878:   RETURN_NULL();",
          "",
          "[Added Lines]",
          "2884:   RETURN_EMPTY_STRING();",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "3070: }",
          "3074:  ZEND_ARG_OBJ_INFO(0, iterator, Iterator, 0)",
          "3075:  ZEND_ARG_INFO(0, flags)",
          "3076: ZEND_END_ARG_INFO();",
          "3079:  ZEND_ARG_INFO(0, flags)",
          "3080: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "3073: ZEND_BEGIN_ARG_INFO_EX(arginfo_caching_it___construct, 0, 0, 1)",
          "3078: ZEND_BEGIN_ARG_INFO(arginfo_caching_it_setFlags, 0)",
          "",
          "[Added Lines]",
          "3079: ZEND_BEGIN_ARG_INFO_EX(arginfo_caching_it___construct, 0, 0, 1)",
          "3084: ZEND_BEGIN_ARG_INFO(arginfo_caching_it_setFlags, 0)",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3150:  }",
          "3154:  ZEND_ARG_OBJ_INFO(0, iterator, Iterator, 0)",
          "3155:  ZEND_ARG_INFO(0, flags)",
          "3156: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "3153: ZEND_BEGIN_ARG_INFO_EX(arginfo_caching_rec_it___construct, 0, ZEND_RETURN_VALUE, 1)",
          "",
          "[Added Lines]",
          "3159: ZEND_BEGIN_ARG_INFO_EX(arginfo_caching_rec_it___construct, 0, ZEND_RETURN_VALUE, 1)",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3169:  spl_dual_it_construct(INTERNAL_FUNCTION_PARAM_PASSTHRU, spl_ce_IteratorIterator, zend_ce_traversable, DIT_IteratorIterator);",
          "3173:  ZEND_ARG_OBJ_INFO(0, iterator, Traversable, 0)",
          "3174: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "3172: ZEND_BEGIN_ARG_INFO(arginfo_iterator_it___construct, 0)",
          "",
          "[Added Lines]",
          "3178: ZEND_BEGIN_ARG_INFO(arginfo_iterator_it___construct, 0)",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3266:  intern->inner.iterator->funcs->move_forward(intern->inner.iterator TSRMLS_CC);",
          "3270:  ZEND_ARG_OBJ_INFO(0, iterator, Iterator, 0)",
          "3271: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "3269: ZEND_BEGIN_ARG_INFO(arginfo_norewind_it___construct, 0)",
          "",
          "[Added Lines]",
          "3275: ZEND_BEGIN_ARG_INFO(arginfo_norewind_it___construct, 0)",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3534:  RETURN_ZVAL(intern->u.append.zarrayit, 1, 0);",
          "3538:  ZEND_ARG_OBJ_INFO(0, iterator, Iterator, 0)",
          "3539: ZEND_END_ARG_INFO();",
          "",
          "[Removed Lines]",
          "3537: ZEND_BEGIN_ARG_INFO(arginfo_append_it_append, 0)",
          "",
          "[Added Lines]",
          "3543: ZEND_BEGIN_ARG_INFO(arginfo_append_it_append, 0)",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "3796:  REGISTER_SPL_IMPLEMENTS(CachingIterator, ArrayAccess);",
          "3797:  REGISTER_SPL_IMPLEMENTS(CachingIterator, Countable);",
          "3801:  REGISTER_SPL_CLASS_CONST_LONG(CachingIterator, \"TOSTRING_USE_KEY\",     CIT_TOSTRING_USE_KEY);",
          "3802:  REGISTER_SPL_CLASS_CONST_LONG(CachingIterator, \"TOSTRING_USE_CURRENT\", CIT_TOSTRING_USE_CURRENT);",
          "3803:  REGISTER_SPL_CLASS_CONST_LONG(CachingIterator, \"TOSTRING_USE_INNER\",   CIT_TOSTRING_USE_INNER);",
          "3806:  REGISTER_SPL_SUB_CLASS_EX(RecursiveCachingIterator, CachingIterator, spl_dual_it_new, spl_funcs_RecursiveCachingIterator);",
          "3807:  REGISTER_SPL_IMPLEMENTS(RecursiveCachingIterator, RecursiveIterator);",
          "3809:  REGISTER_SPL_SUB_CLASS_EX(NoRewindIterator, IteratorIterator, spl_dual_it_new, spl_funcs_NoRewindIterator);",
          "3811:  REGISTER_SPL_SUB_CLASS_EX(AppendIterator, IteratorIterator, spl_dual_it_new, spl_funcs_AppendIterator);",
          "",
          "[Removed Lines]",
          "3799:  REGISTER_SPL_CLASS_CONST_LONG(CachingIterator, \"CALL_TOSTRING\",        CIT_CALL_TOSTRING);",
          "3800:  REGISTER_SPL_CLASS_CONST_LONG(CachingIterator, \"CATCH_GET_CHILD\",      CIT_CATCH_GET_CHILD);",
          "3804:  REGISTER_SPL_CLASS_CONST_LONG(CachingIterator, \"FULL_CACHE\",           CIT_FULL_CACHE);",
          "",
          "[Added Lines]",
          "3805:  REGISTER_SPL_CLASS_CONST_LONG(CachingIterator, \"CALL_TOSTRING\",        CIT_CALL_TOSTRING);",
          "3806:  REGISTER_SPL_CLASS_CONST_LONG(CachingIterator, \"CATCH_GET_CHILD\",      CIT_CATCH_GET_CHILD);",
          "3810:  REGISTER_SPL_CLASS_CONST_LONG(CachingIterator, \"FULL_CACHE\",           CIT_FULL_CACHE);",
          "",
          "---------------"
        ],
        "ext/spl/tests/bug73073.phpt||ext/spl/tests/bug73073.phpt": [
          "File: ext/spl/tests/bug73073.phpt -> ext/spl/tests/bug73073.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73073: CachingIterator null dereference when convert to string",
          "3: --FILE--",
          "4: <?php",
          "5: $it = new CachingIterator(new ArrayIterator(array()), CachingIterator::TOSTRING_USE_KEY);",
          "6: var_dump((string)$it);",
          "7: ?>",
          "8: --EXPECT--",
          "9: string(0) \"\"",
          "",
          "---------------"
        ],
        "ext/spl/tests/spl_cachingiterator___toString_basic.phpt||ext/spl/tests/spl_cachingiterator___toString_basic.phpt": [
          "File: ext/spl/tests/spl_cachingiterator___toString_basic.phpt -> ext/spl/tests/spl_cachingiterator___toString_basic.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: );",
          "14: ?>",
          "15: --EXPECTF--",
          "",
          "[Removed Lines]",
          "16: NULL",
          "",
          "[Added Lines]",
          "16: string(0) \"\"",
          "",
          "---------------"
        ],
        "ext/standard/math.c||ext/standard/math.c": [
          "File: ext/standard/math.c -> ext/standard/math.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "284: {",
          "285:  zval **value;",
          "287:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"Z\", &value) == FAILURE) {",
          "288:   return;",
          "289:  }",
          "290:  convert_scalar_to_number_ex(value);",
          "292:  if (Z_TYPE_PP(value) == IS_DOUBLE) {",
          "293:   RETURN_DOUBLE(fabs(Z_DVAL_PP(value)));",
          "294:  } else if (Z_TYPE_PP(value) == IS_LONG) {",
          "",
          "[Removed Lines]",
          "283: PHP_FUNCTION(abs)",
          "",
          "[Added Lines]",
          "283: PHP_FUNCTION(abs)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "300:  }",
          "301:  RETURN_FALSE;",
          "302: }",
          "308: {",
          "309:  zval **value;",
          "311:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"Z\", &value) == FAILURE) {",
          "312:   return;",
          "313:  }",
          "",
          "[Removed Lines]",
          "307: PHP_FUNCTION(ceil)",
          "",
          "[Added Lines]",
          "307: PHP_FUNCTION(ceil)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "643:    disappear in the next version of PHP!",
          "645: PHP_FUNCTION(expm1)",
          "",
          "[Removed Lines]",
          "642:    WARNING: this function is expermental: it could change its name or",
          "",
          "[Added Lines]",
          "642:    WARNING: this function is expermental: it could change its name or",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "660:    disappear in the next version of PHP!",
          "662: PHP_FUNCTION(log1p)",
          "",
          "[Removed Lines]",
          "659:    WARNING: this function is expermental: it could change its name or",
          "",
          "[Added Lines]",
          "659:    WARNING: this function is expermental: it could change its name or",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "683:   RETURN_DOUBLE(log(num));",
          "684:  }",
          "685:  if (base <= 0.0) {",
          "687:   RETURN_FALSE;",
          "688:  }",
          "689:  if (base == 1) {",
          "",
          "[Removed Lines]",
          "686:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"base must be greater than 0\");",
          "",
          "[Added Lines]",
          "686:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"base must be greater than 0\");",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "833:  cutoff = LONG_MAX / base;",
          "834:  cutlim = LONG_MAX % base;",
          "836:  for (i = Z_STRLEN_P(arg); i > 0; i--) {",
          "837:   c = *s++;",
          "841:    c -= '0';",
          "843:    c -= 'A' - 10;",
          "845:    c -= 'a' - 10;",
          "846:   else",
          "847:    continue;",
          "849:   if (c >= base)",
          "850:    continue;",
          "852:   switch (mode) {",
          "854:    if (num < cutoff || (num == cutoff && c <= cutlim)) {",
          "",
          "[Removed Lines]",
          "840:   if (c >= '0' && c <= '9')",
          "842:   else if (c >= 'A' && c <= 'Z')",
          "844:   else if (c >= 'a' && c <= 'z')",
          "",
          "[Added Lines]",
          "840:   if (c >= '0' && c <= '9')",
          "842:   else if (c >= 'A' && c <= 'Z')",
          "844:   else if (c >= 'a' && c <= 'z')",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "863:    fnum = fnum * base + c;",
          "865:  }",
          "867:  if (mode == 1) {",
          "",
          "[Removed Lines]",
          "864:   }",
          "",
          "[Added Lines]",
          "864:   }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "938:   return estrndup(ptr, end - ptr);",
          "939:  }",
          "941:  return _php_math_longtobase(arg, base);",
          "",
          "[Removed Lines]",
          "942: }",
          "",
          "[Added Lines]",
          "942: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1065:  }",
          "1066:  result = _php_math_zvaltobase(&temp, tobase TSRMLS_CC);",
          "1067:  RETVAL_STRING(result, 0);",
          "1073: PHPAPI char *_php_math_number_format(double d, int dec, char dec_point, char thousand_sep)",
          "1074: {",
          "",
          "[Removed Lines]",
          "1068: }",
          "",
          "[Added Lines]",
          "1068: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1078: static char *_php_math_number_format_ex_len(double d, int dec, char *dec_point,",
          "1079:   size_t dec_point_len, char *thousand_sep, size_t thousand_sep_len,",
          "1081: {",
          "1082:  char *tmpbuf = NULL, *resbuf;",
          "1084:  char *dp;",
          "1087:  int count=0;",
          "1088:  int is_negative=0;",
          "",
          "[Removed Lines]",
          "1080:   int *result_len)",
          "1085:  int integral;",
          "1086:  int tmplen, reslen=0;",
          "",
          "[Added Lines]",
          "1080:   size_t *result_len)",
          "1085:  size_t integral;",
          "1086:  size_t tmplen, reslen=0;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1124:  if (thousand_sep) {",
          "1125:   integral += thousand_sep_len * ((integral-1) / 3);",
          "1126:  }",
          "1128:  reslen = integral;",
          "1130:  if (dec) {",
          "1131:   reslen += dec;",
          "1133:   if (dec_point) {",
          "1134:    reslen += dec_point_len;",
          "1135:   }",
          "1136:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1125:   if (integral + thousand_sep_len * ((integral-1) / 3) < integral) {",
          "1127:    zend_error(E_ERROR, \"String overflow\");",
          "1128:   }",
          "1138:    if (reslen + dec_point < dec_point) {",
          "1140:     zend_error(E_ERROR, \"String overflow\");",
          "1141:    }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1213:  char *thousand_sep = NULL, *dec_point = NULL;",
          "1214:  char thousand_sep_chr = ',', dec_point_chr = '.';",
          "1215:  int thousand_sep_len = 0, dec_point_len = 0;",
          "1217:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"d|ls!s!\", &num, &dec, &dec_point, &dec_point_len, &thousand_sep, &thousand_sep_len) == FAILURE) {",
          "1218:   return;",
          "1219:  }",
          "1221:  switch(ZEND_NUM_ARGS()) {",
          "1222:  case 1:",
          "1224:   break;",
          "1225:  case 2:",
          "1227:   break;",
          "1228:  case 4:",
          "1229:   if (dec_point == NULL) {",
          "",
          "[Removed Lines]",
          "1223:   RETURN_STRING(_php_math_number_format(num, 0, dec_point_chr, thousand_sep_chr), 0);",
          "1226:   RETURN_STRING(_php_math_number_format(num, dec, dec_point_chr, thousand_sep_chr), 0);",
          "",
          "[Added Lines]",
          "1224:  char *formatted;",
          "1225:  size_t formatted_len;",
          "1233:   formatted = _php_math_number_format(num, 0, dec_point_chr, thousand_sep_chr);",
          "1234:   formatted_len = strlen(formatted);",
          "1237:   formatted = _php_math_number_format(num, dec, dec_point_chr, thousand_sep_chr);",
          "1238:   formatted_len = strlen(formatted);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1236:    thousand_sep_len = 1;",
          "1237:   }",
          "1241:     dec_point, dec_point_len, thousand_sep, thousand_sep_len,",
          "1243:   break;",
          "1244:  default:",
          "1245:   WRONG_PARAM_COUNT;",
          "1247:  }",
          "1248: }",
          "",
          "[Removed Lines]",
          "1239:   Z_TYPE_P(return_value) = IS_STRING;",
          "1240:   Z_STRVAL_P(return_value) = _php_math_number_format_ex_len(num, dec,",
          "1242:     &Z_STRLEN_P(return_value));",
          "1246:   break;",
          "",
          "[Added Lines]",
          "1251:   formatted = _php_math_number_format_ex_len(num, dec,",
          "1253:     &formatted_len);",
          "1257:   return;",
          "1259:  RETVAL_STRINGL_CHECK(formatted, formatted_len, 0);",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug69793.phpt||ext/standard/tests/serialize/bug69793.phpt": [
          "File: ext/standard/tests/serialize/bug69793.phpt -> ext/standard/tests/serialize/bug69793.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: ?>",
          "9: --EXPECTF--",
          "10: Notice: Undefined property: Exception::$file in %s%ebug69793.php on line %d",
          "13: string(53) \"exception 'Exception' in :1337",
          "14: Stack trace:",
          "15: #0 {main}\"",
          "",
          "[Removed Lines]",
          "12: Notice: Undefined property: Exception::$previous in %s%ebug69793.php on line %d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "main/fopen_wrappers.c||main/fopen_wrappers.c": [
          "File: main/fopen_wrappers.c -> main/fopen_wrappers.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:    if (path_len > 1 && path_tmp[path_len - 2] == ':') {",
          "212:     if (path_len != 3) {",
          "213:      return -1;",
          "216:     path_tmp[path_len] = '\\0';",
          "217:    } else {",
          "",
          "[Removed Lines]",
          "214:     }",
          "",
          "[Added Lines]",
          "214:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "402:    } else {",
          "403:     filename = SG(request_info).path_translated;",
          "405: #if defined(ZTS) && defined(HAVE_GETPWNAM_R) && defined(_SC_GETPW_R_SIZE_MAX)",
          "406:    efree(pwbuf);",
          "407: #endif",
          "",
          "[Removed Lines]",
          "404:    }",
          "",
          "[Added Lines]",
          "404:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "494:   return NULL;",
          "495:  }",
          "499:        ((filename[1] == '.') && IS_SLASH(filename[2])))) ||",
          "500:      IS_ABSOLUTE_PATH(filename, filename_length) ||",
          "501:      !path ||",
          "",
          "[Removed Lines]",
          "497:  if ((*filename == '.' &&",
          "498:       (IS_SLASH(filename[1]) ||",
          "",
          "[Added Lines]",
          "497:  if ((*filename == '.' &&",
          "498:       (IS_SLASH(filename[1]) ||",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "522:   }",
          "523:   end = strchr(p, DEFAULT_DIR_SEPARATOR);",
          "524:   if (end) {",
          "526:     ptr = end + 1;",
          "527:     continue;",
          "528:    }",
          "",
          "[Removed Lines]",
          "525:    if ((end-ptr) + 1 + filename_length + 1 >= MAXPATHLEN) {",
          "",
          "[Added Lines]",
          "525:    if (filename_length > (MAXPATHLEN - 2) || (end-ptr) > MAXPATHLEN || (end-ptr) + 1 + (size_t)filename_length + 1 >= MAXPATHLEN) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "531:    memcpy(trypath+(end-ptr)+1, filename, filename_length+1);",
          "532:    ptr = end+1;",
          "533:   } else {",
          "537:     break;",
          "538:    }",
          "539:    memcpy(trypath, ptr, len);",
          "",
          "[Removed Lines]",
          "534:    int len = strlen(ptr);",
          "536:    if (len + 1 + filename_length + 1 >= MAXPATHLEN) {",
          "",
          "[Added Lines]",
          "534:    size_t len = strlen(ptr);",
          "536:    if (filename_length > (MAXPATHLEN - 2) || len > MAXPATHLEN || (size_t)len + 1 + (size_t)filename_length + 1 >= MAXPATHLEN) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "571:   while ((--exec_fname_length >= 0) && !IS_SLASH(exec_fname[exec_fname_length]));",
          "572:   if (exec_fname && exec_fname[0] != '[' &&",
          "573:       exec_fname_length > 0 &&",
          "574:       exec_fname_length + 1 + filename_length + 1 < MAXPATHLEN) {",
          "575:    memcpy(trypath, exec_fname, exec_fname_length + 1);",
          "576:    memcpy(trypath+exec_fname_length + 1, filename, filename_length+1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "574:    filename_length < (MAXPATHLEN - 2) &&",
          "",
          "---------------"
        ]
      }
    }
  ]
}