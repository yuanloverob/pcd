{
  "cve_id": "CVE-2017-2647",
  "cve_desc": "The KEYS subsystem in the Linux kernel before 3.18 allows local users to gain privileges or cause a denial of service (NULL pointer dereference and system crash) via vectors involving a NULL value for a certain match field, related to the keyring_search_iterator function in keyring.c.",
  "repo": "torvalds/linux",
  "patch_hash": "c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81",
  "patch_info": {
    "commit_hash": "c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81",
    "files": [
      "crypto/asymmetric_keys/asymmetric_type.c",
      "crypto/asymmetric_keys/pkcs7_key_type.c",
      "fs/cifs/cifs_spnego.c",
      "fs/cifs/cifsacl.c",
      "fs/nfs/idmap.c",
      "include/keys/user-type.h",
      "include/linux/key-type.h",
      "net/ceph/crypto.c",
      "net/dns_resolver/dns_key.c",
      "net/rxrpc/ar-key.c",
      "security/keys/big_key.c",
      "security/keys/encrypted-keys/encrypted.c",
      "security/keys/internal.h",
      "security/keys/key.c",
      "security/keys/keyring.c",
      "security/keys/request_key.c",
      "security/keys/request_key_auth.c",
      "security/keys/trusted.c",
      "security/keys/user_defined.c"
    ],
    "message": "KEYS: Remove key_type::match in favour of overriding default by match_preparse\n\nA previous patch added a ->match_preparse() method to the key type.  This is\nallowed to override the function called by the iteration algorithm.\nTherefore, we can just set a default that simply checks for an exact match of\nthe key description with the original criterion data and allow match_preparse\nto override it as needed.\n\nThe key_type::match op is then redundant and can be removed, as can the\nuser_match() function.\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nAcked-by: Vivek Goyal <vgoyal@redhat.com>",
    "before_after_code_files": [
      "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c",
      "crypto/asymmetric_keys/pkcs7_key_type.c||crypto/asymmetric_keys/pkcs7_key_type.c",
      "fs/cifs/cifs_spnego.c||fs/cifs/cifs_spnego.c",
      "fs/cifs/cifsacl.c||fs/cifs/cifsacl.c",
      "fs/nfs/idmap.c||fs/nfs/idmap.c",
      "include/keys/user-type.h||include/keys/user-type.h",
      "include/linux/key-type.h||include/linux/key-type.h",
      "net/ceph/crypto.c||net/ceph/crypto.c",
      "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c",
      "net/rxrpc/ar-key.c||net/rxrpc/ar-key.c",
      "security/keys/big_key.c||security/keys/big_key.c",
      "security/keys/encrypted-keys/encrypted.c||security/keys/encrypted-keys/encrypted.c",
      "security/keys/internal.h||security/keys/internal.h",
      "security/keys/key.c||security/keys/key.c",
      "security/keys/keyring.c||security/keys/keyring.c",
      "security/keys/request_key.c||security/keys/request_key.c",
      "security/keys/request_key_auth.c||security/keys/request_key_auth.c",
      "security/keys/trusted.c||security/keys/trusted.c",
      "security/keys/user_defined.c||security/keys/user_defined.c"
    ]
  },
  "patch_diff": {
    "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c": [
      "File: crypto/asymmetric_keys/asymmetric_type.c -> crypto/asymmetric_keys/asymmetric_type.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "64: {",
      "65:  const struct asymmetric_key_subtype *subtype = asymmetric_key_subtype(key);",
      "66:  const char *description = match_data->raw_data;",
      "",
      "[Removed Lines]",
      "62: static int asymmetric_key_match(const struct key *key,",
      "63:     const struct key_match_data *match_data)",
      "",
      "[Added Lines]",
      "62: static int asymmetric_key_cmp(const struct key *key,",
      "63:          const struct key_match_data *match_data)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "110: static int asymmetric_key_match_preparse(struct key_match_data *match_data)",
      "111: {",
      "112:  match_data->lookup_type = KEYRING_SEARCH_LOOKUP_ITERATE;",
      "113:  return 0;",
      "114: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "113:  match_data->cmp = asymmetric_key_cmp;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "224:  .free_preparse = asymmetric_key_free_preparse,",
      "225:  .instantiate = generic_key_instantiate,",
      "226:  .match_preparse = asymmetric_key_match_preparse,",
      "228:  .match_free = asymmetric_key_match_free,",
      "229:  .destroy = asymmetric_key_destroy,",
      "230:  .describe = asymmetric_key_describe,",
      "",
      "[Removed Lines]",
      "227:  .match  = asymmetric_key_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "crypto/asymmetric_keys/pkcs7_key_type.c||crypto/asymmetric_keys/pkcs7_key_type.c": [
      "File: crypto/asymmetric_keys/pkcs7_key_type.c -> crypto/asymmetric_keys/pkcs7_key_type.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "75:  .preparse  = pkcs7_preparse,",
      "76:  .free_preparse  = user_free_preparse,",
      "77:  .instantiate  = generic_key_instantiate,",
      "79:  .revoke   = user_revoke,",
      "80:  .destroy  = user_destroy,",
      "81:  .describe  = user_describe,",
      "",
      "[Removed Lines]",
      "78:  .match   = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "fs/cifs/cifs_spnego.c||fs/cifs/cifs_spnego.c": [
      "File: fs/cifs/cifs_spnego.c -> fs/cifs/cifs_spnego.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "62: struct key_type cifs_spnego_key_type = {",
      "63:  .name  = \"cifs.spnego\",",
      "64:  .instantiate = cifs_spnego_key_instantiate,",
      "66:  .destroy = cifs_spnego_key_destroy,",
      "67:  .describe = user_describe,",
      "68: };",
      "",
      "[Removed Lines]",
      "65:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "fs/cifs/cifsacl.c||fs/cifs/cifsacl.c": [
      "File: fs/cifs/cifsacl.c -> fs/cifs/cifsacl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "84:  .instantiate = cifs_idmap_key_instantiate,",
      "85:  .destroy     = cifs_idmap_key_destroy,",
      "86:  .describe    = user_describe,",
      "88: };",
      "90: static char *",
      "",
      "[Removed Lines]",
      "87:  .match       = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "fs/nfs/idmap.c||fs/nfs/idmap.c": [
      "File: fs/nfs/idmap.c -> fs/nfs/idmap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "177:  .preparse = user_preparse,",
      "178:  .free_preparse = user_free_preparse,",
      "179:  .instantiate = generic_key_instantiate,",
      "181:  .revoke  = user_revoke,",
      "182:  .destroy = user_destroy,",
      "183:  .describe = user_describe,",
      "",
      "[Removed Lines]",
      "180:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "401:  .preparse = user_preparse,",
      "402:  .free_preparse = user_free_preparse,",
      "403:  .instantiate = generic_key_instantiate,",
      "405:  .revoke  = user_revoke,",
      "406:  .destroy = user_destroy,",
      "407:  .describe = user_describe,",
      "",
      "[Removed Lines]",
      "404:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "include/keys/user-type.h||include/keys/user-type.h": [
      "File: include/keys/user-type.h -> include/keys/user-type.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "36: extern struct key_type key_type_logon;",
      "38: struct key_preparsed_payload;",
      "41: extern int user_preparse(struct key_preparsed_payload *prep);",
      "42: extern void user_free_preparse(struct key_preparsed_payload *prep);",
      "43: extern int user_update(struct key *key, struct key_preparsed_payload *prep);",
      "46: extern void user_revoke(struct key *key);",
      "47: extern void user_destroy(struct key *key);",
      "48: extern void user_describe(const struct key *user, struct seq_file *m);",
      "",
      "[Removed Lines]",
      "39: struct key_match_data;",
      "44: extern int user_match(const struct key *key,",
      "45:         const struct key_match_data *match_data);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "include/linux/key-type.h||include/linux/key-type.h": [
      "File: include/linux/key-type.h -> include/linux/key-type.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "114:  int (*match_preparse)(struct key_match_data *match_data);",
      "122:  void (*match_free)(struct key_match_data *match_data);",
      "",
      "[Removed Lines]",
      "117:  int (*match)(const struct key *key,",
      "118:        const struct key_match_data *match_data);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "net/ceph/crypto.c||net/ceph/crypto.c": [
      "File: net/ceph/crypto.c -> net/ceph/crypto.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "476:  .preparse = ceph_key_preparse,",
      "477:  .free_preparse = ceph_key_free_preparse,",
      "478:  .instantiate = generic_key_instantiate,",
      "480:  .destroy = ceph_key_destroy,",
      "481: };",
      "",
      "[Removed Lines]",
      "479:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c": [
      "File: net/dns_resolver/dns_key.c -> net/dns_resolver/dns_key.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "182: {",
      "183:  int slen, dlen, ret = 0;",
      "184:  const char *src = key->description, *dsp = match_data->raw_data;",
      "",
      "[Removed Lines]",
      "179: static int",
      "180: dns_resolver_match(const struct key *key,",
      "181:      const struct key_match_data *match_data)",
      "",
      "[Added Lines]",
      "179: static int dns_resolver_cmp(const struct key *key,",
      "180:        const struct key_match_data *match_data)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "209:  return ret;",
      "210: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "214: static int dns_resolver_match_preparse(struct key_match_data *match_data)",
      "215: {",
      "216:  match_data->lookup_type = KEYRING_SEARCH_LOOKUP_ITERATE;",
      "217:  match_data->cmp = dns_resolver_cmp;",
      "218:  return 0;",
      "219: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "243:  .preparse = dns_resolver_preparse,",
      "244:  .free_preparse = dns_resolver_free_preparse,",
      "245:  .instantiate = generic_key_instantiate,",
      "247:  .revoke  = user_revoke,",
      "248:  .destroy = user_destroy,",
      "249:  .describe = dns_resolver_describe,",
      "",
      "[Removed Lines]",
      "246:  .match  = dns_resolver_match,",
      "",
      "[Added Lines]",
      "255:  .match_preparse = dns_resolver_match_preparse,",
      "",
      "---------------"
    ],
    "net/rxrpc/ar-key.c||net/rxrpc/ar-key.c": [
      "File: net/rxrpc/ar-key.c -> net/rxrpc/ar-key.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:  .preparse = rxrpc_preparse,",
      "45:  .free_preparse = rxrpc_free_preparse,",
      "46:  .instantiate = generic_key_instantiate,",
      "48:  .destroy = rxrpc_destroy,",
      "49:  .describe = rxrpc_describe,",
      "50:  .read  = rxrpc_read,",
      "",
      "[Removed Lines]",
      "47:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "61:  .preparse = rxrpc_preparse_s,",
      "62:  .free_preparse = rxrpc_free_preparse_s,",
      "63:  .instantiate = generic_key_instantiate,",
      "65:  .destroy = rxrpc_destroy_s,",
      "66:  .describe = rxrpc_describe,",
      "67: };",
      "",
      "[Removed Lines]",
      "64:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "security/keys/big_key.c||security/keys/big_key.c": [
      "File: security/keys/big_key.c -> security/keys/big_key.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "36:  .preparse  = big_key_preparse,",
      "37:  .free_preparse  = big_key_free_preparse,",
      "38:  .instantiate  = generic_key_instantiate,",
      "40:  .revoke   = big_key_revoke,",
      "41:  .destroy  = big_key_destroy,",
      "42:  .describe  = big_key_describe,",
      "",
      "[Removed Lines]",
      "39:  .match   = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "security/keys/encrypted-keys/encrypted.c||security/keys/encrypted-keys/encrypted.c": [
      "File: security/keys/encrypted-keys/encrypted.c -> security/keys/encrypted-keys/encrypted.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "970:  .name = \"encrypted\",",
      "971:  .instantiate = encrypted_instantiate,",
      "972:  .update = encrypted_update,",
      "974:  .destroy = encrypted_destroy,",
      "975:  .describe = user_describe,",
      "976:  .read = encrypted_read,",
      "",
      "[Removed Lines]",
      "973:  .match = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "security/keys/internal.h||security/keys/internal.h": [
      "File: security/keys/internal.h -> security/keys/internal.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "127:  struct timespec  now;",
      "128: };",
      "130: extern key_ref_t keyring_search_aux(key_ref_t keyring_ref,",
      "131:         struct keyring_search_context *ctx);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "130: extern int key_default_cmp(const struct key *key,",
      "131:       const struct key_match_data *match_data);",
      "",
      "---------------"
    ],
    "security/keys/key.c||security/keys/key.c": [
      "File: security/keys/key.c -> security/keys/key.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "799:  }",
      "801:  key_ref = ERR_PTR(-EINVAL);",
      "803:      (!index_key.description && !index_key.type->preparse))",
      "804:   goto error_put_type;",
      "",
      "[Removed Lines]",
      "802:  if (!index_key.type->match || !index_key.type->instantiate ||",
      "",
      "[Added Lines]",
      "802:  if (!index_key.type->instantiate ||",
      "",
      "---------------"
    ],
    "security/keys/keyring.c||security/keys/keyring.c": [
      "File: security/keys/keyring.c -> security/keys/keyring.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "89:  .preparse = keyring_preparse,",
      "90:  .free_preparse = keyring_free_preparse,",
      "91:  .instantiate = keyring_instantiate,",
      "93:  .revoke  = keyring_revoke,",
      "94:  .destroy = keyring_destroy,",
      "95:  .describe = keyring_describe,",
      "",
      "[Removed Lines]",
      "92:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "511: }",
      "512: EXPORT_SYMBOL(keyring_alloc);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "516: int key_default_cmp(const struct key *key,",
      "517:       const struct key_match_data *match_data)",
      "518: {",
      "519:  return strcmp(key->description, match_data->raw_data) == 0;",
      "520: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "884:   .index_key.type  = type,",
      "885:   .index_key.description = description,",
      "886:   .cred   = current_cred(),",
      "888:   .match_data.raw_data = description,",
      "889:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
      "890:   .flags   = KEYRING_SEARCH_DO_STATE_CHECK,",
      "",
      "[Removed Lines]",
      "887:   .match_data.cmp  = type->match,",
      "",
      "[Added Lines]",
      "895:   .match_data.cmp  = key_default_cmp,",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "892:  key_ref_t key;",
      "893:  int ret;",
      "898:  if (type->match_preparse) {",
      "899:   ret = type->match_preparse(&ctx.match_data);",
      "900:   if (ret < 0)",
      "",
      "[Removed Lines]",
      "895:  if (!ctx.match_data.cmp)",
      "896:   return ERR_PTR(-ENOKEY);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "security/keys/request_key.c||security/keys/request_key.c": [
      "File: security/keys/request_key.c -> security/keys/request_key.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   .index_key.type  = type,",
      "532:   .index_key.description = description,",
      "533:   .cred   = current_cred(),",
      "535:   .match_data.raw_data = description,",
      "536:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
      "537:  };",
      "",
      "[Removed Lines]",
      "534:   .match_data.cmp  = type->match,",
      "",
      "[Added Lines]",
      "534:   .match_data.cmp  = key_default_cmp,",
      "",
      "---------------"
    ],
    "security/keys/request_key_auth.c||security/keys/request_key_auth.c": [
      "File: security/keys/request_key_auth.c -> security/keys/request_key_auth.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "246:   .index_key.type  = &key_type_request_key_auth,",
      "247:   .index_key.description = description,",
      "248:   .cred   = current_cred(),",
      "250:   .match_data.raw_data = description,",
      "251:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
      "252:  };",
      "",
      "[Removed Lines]",
      "249:   .match_data.cmp  = user_match,",
      "",
      "[Added Lines]",
      "249:   .match_data.cmp  = key_default_cmp,",
      "",
      "---------------"
    ],
    "security/keys/trusted.c||security/keys/trusted.c": [
      "File: security/keys/trusted.c -> security/keys/trusted.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1096:  .name = \"trusted\",",
      "1097:  .instantiate = trusted_instantiate,",
      "1098:  .update = trusted_update,",
      "1100:  .destroy = trusted_destroy,",
      "1101:  .describe = user_describe,",
      "1102:  .read = trusted_read,",
      "",
      "[Removed Lines]",
      "1099:  .match = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "security/keys/user_defined.c||security/keys/user_defined.c": [
      "File: security/keys/user_defined.c -> security/keys/user_defined.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "30:  .free_preparse  = user_free_preparse,",
      "31:  .instantiate  = generic_key_instantiate,",
      "32:  .update   = user_update,",
      "34:  .revoke   = user_revoke,",
      "35:  .destroy  = user_destroy,",
      "36:  .describe  = user_describe,",
      "",
      "[Removed Lines]",
      "33:  .match   = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "51:  .free_preparse  = user_free_preparse,",
      "52:  .instantiate  = generic_key_instantiate,",
      "53:  .update   = user_update,",
      "55:  .revoke   = user_revoke,",
      "56:  .destroy  = user_destroy,",
      "57:  .describe  = user_describe,",
      "",
      "[Removed Lines]",
      "54:  .match   = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "137: EXPORT_SYMBOL_GPL(user_update);",
      "",
      "[Removed Lines]",
      "142: int user_match(const struct key *key, const struct key_match_data *match_data)",
      "143: {",
      "144:  return strcmp(key->description, match_data->raw_data) == 0;",
      "145: }",
      "147: EXPORT_SYMBOL_GPL(user_match);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "22d01afb210ff77fc480a1fc531cd59a4f32157a",
      "candidate_info": {
        "commit_hash": "22d01afb210ff77fc480a1fc531cd59a4f32157a",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/22d01afb210ff77fc480a1fc531cd59a4f32157a",
        "files": [
          "crypto/asymmetric_keys/Kconfig",
          "crypto/asymmetric_keys/Makefile",
          "crypto/asymmetric_keys/pkcs7_key_type.c"
        ],
        "message": "PKCS#7: Provide a key type for testing PKCS#7\n\nProvide a key type for testing the PKCS#7 parser.  It is given a non-detached\nPKCS#7 message as payload:\n\n\tkeyctl padd pkcs7_test a @s <stuff.pkcs7\n\nThe PKCS#7 wrapper is validated against the trusted certificates available and\nthen stripped off.  If successful, the key can be read, which will give the\ndata content of the PKCS#7 message.\n\nA suitable message can be created by running make on the attached Makefile.\nThis will produce a file called stuff.pkcs7 for test loading.  The key3.x509\nfile should be put into the kernel source tree before it is built and\nconverted to DER form:\n\n\topenssl x509 -in .../pkcs7/key3.x509 -outform DER -out key3.x509\n\n###############################################################################\n#\n# Create a pkcs7 message and sign it twice\n#\n#\topenssl x509 -text -inform PEM -noout -in key2.x509\n#\n###############################################################################\nstuff.pkcs7: stuff.txt key2.priv key2.x509 key4.priv key4.x509 certs\n\t$(RM) $@\n\topenssl smime -sign \\\n\t\t-signer key2.x509 \\\n\t\t-inkey key2.priv \\\n\t\t-signer key4.x509 \\\n\t\t-inkey key4.priv \\\n\t\t-in stuff.txt \\\n\t\t-certfile certs \\\n\t\t-out $@ -binary -outform DER -nodetach\n\topenssl pkcs7 -inform DER -in stuff.pkcs7  -print_certs -noout\n\topenssl asn1parse -inform DER -in stuff.pkcs7  -i >out\n\nstuff.txt:\n\techo \"The quick red fox jumped over the lazy brown dog\" >stuff.txt\n\ncerts: key1.x509 key2.x509 key3.x509 key4.x509\n\tcat key{1,3}.x509 >$@\n\n###############################################################################\n#\n# Generate a signed key\n#\n#\topenssl x509 -text -inform PEM -noout -in key2.x509\n#\n###############################################################################\nkey2.x509: key2.x509_unsigned key1.priv key1.x509\n\topenssl x509 \\\n\t\t-req -in key2.x509_unsigned \\\n\t\t-out key2.x509 \\\n\t\t-extfile key2.genkey -extensions myexts \\\n\t\t-CA key1.x509 \\\n\t\t-CAkey key1.priv \\\n\t\t-CAcreateserial\n\nkey2.priv key2.x509_unsigned: key2.genkey\n\topenssl req -new -nodes -utf8 -sha1 -days 36500 \\\n\t\t-batch -outform PEM \\\n\t\t-config key2.genkey \\\n\t\t-keyout key2.priv \\\n\t\t-out key2.x509_unsigned\n\nkey2.genkey:\n\t@echo Generating X.509 key generation config\n\t@echo  >$@ \"[ req ]\"\n\t@echo >>$@ \"default_bits = 4096\"\n\t@echo >>$@ \"distinguished_name = req_distinguished_name\"\n\t@echo >>$@ \"prompt = no\"\n\t@echo >>$@ \"string_mask = utf8only\"\n\t@echo >>$@ \"x509_extensions = myexts\"\n\t@echo >>$@\n\t@echo >>$@ \"[ req_distinguished_name ]\"\n\t@echo >>$@ \"O = Magrathea\"\n\t@echo >>$@ \"CN = PKCS7 key 2\"\n\t@echo >>$@ \"emailAddress = slartibartfast@magrathea.h2g2\"\n\t@echo >>$@\n\t@echo >>$@ \"[ myexts ]\"\n\t@echo >>$@ \"basicConstraints=critical,CA:FALSE\"\n\t@echo >>$@ \"keyUsage=digitalSignature\"\n\t@echo >>$@ \"subjectKeyIdentifier=hash\"\n\t@echo >>$@ \"authorityKeyIdentifier=keyid\"\n\n###############################################################################\n#\n# Generate a couple of signing keys\n#\n#\topenssl x509 -text -inform PEM -noout -in key1.x509\n#\n###############################################################################\nkey1.x509: key1.x509_unsigned key4.priv key4.x509\n\topenssl x509 \\\n\t\t-req -in key1.x509_unsigned \\\n\t\t-out key1.x509 \\\n\t\t-extfile key1.genkey -extensions myexts \\\n\t\t-CA key4.x509 \\\n\t\t-CAkey key4.priv \\\n\t\t-CAcreateserial\n\nkey1.priv key1.x509_unsigned: key1.genkey\n\topenssl req -new -nodes -utf8 -sha1 -days 36500 \\\n\t\t-batch -outform PEM \\\n\t\t-config key1.genkey \\\n\t\t-keyout key1.priv \\\n\t\t-out key1.x509_unsigned\n\nkey1.genkey:\n\t@echo Generating X.509 key generation config\n\t@echo  >$@ \"[ req ]\"\n\t@echo >>$@ \"default_bits = 4096\"\n\t@echo >>$@ \"distinguished_name = req_distinguished_name\"\n\t@echo >>$@ \"prompt = no\"\n\t@echo >>$@ \"string_mask = utf8only\"\n\t@echo >>$@ \"x509_extensions = myexts\"\n\t@echo >>$@\n\t@echo >>$@ \"[ req_distinguished_name ]\"\n\t@echo >>$@ \"O = Magrathea\"\n\t@echo >>$@ \"CN = PKCS7 key 1\"\n\t@echo >>$@ \"emailAddress = slartibartfast@magrathea.h2g2\"\n\t@echo >>$@\n\t@echo >>$@ \"[ myexts ]\"\n\t@echo >>$@ \"basicConstraints=critical,CA:TRUE\"\n\t@echo >>$@ \"keyUsage=digitalSignature,keyCertSign\"\n\t@echo >>$@ \"subjectKeyIdentifier=hash\"\n\t@echo >>$@ \"authorityKeyIdentifier=keyid\"\n\n###############################################################################\n#\n# Generate a signed key\n#\n#\topenssl x509 -text -inform PEM -noout -in key4.x509\n#\n###############################################################################\nkey4.x509: key4.x509_unsigned key3.priv key3.x509\n\topenssl x509 \\\n\t\t-req -in key4.x509_unsigned \\\n\t\t-out key4.x509 \\\n\t\t-extfile key4.genkey -extensions myexts \\\n\t\t-CA key3.x509 \\\n\t\t-CAkey key3.priv \\\n\t\t-CAcreateserial\n\nkey4.priv key4.x509_unsigned: key4.genkey\n\topenssl req -new -nodes -utf8 -sha1 -days 36500 \\\n\t\t-batch -outform PEM \\\n\t\t-config key4.genkey \\\n\t\t-keyout key4.priv \\\n\t\t-out key4.x509_unsigned\n\nkey4.genkey:\n\t@echo Generating X.509 key generation config\n\t@echo  >$@ \"[ req ]\"\n\t@echo >>$@ \"default_bits = 4096\"\n\t@echo >>$@ \"distinguished_name = req_distinguished_name\"\n\t@echo >>$@ \"prompt = no\"\n\t@echo >>$@ \"string_mask = utf8only\"\n\t@echo >>$@ \"x509_extensions = myexts\"\n\t@echo >>$@\n\t@echo >>$@ \"[ req_distinguished_name ]\"\n\t@echo >>$@ \"O = Magrathea\"\n\t@echo >>$@ \"CN = PKCS7 key 4\"\n\t@echo >>$@ \"emailAddress = slartibartfast@magrathea.h2g2\"\n\t@echo >>$@\n\t@echo >>$@ \"[ myexts ]\"\n\t@echo >>$@ \"basicConstraints=critical,CA:TRUE\"\n\t@echo >>$@ \"keyUsage=digitalSignature,keyCertSign\"\n\t@echo >>$@ \"subjectKeyIdentifier=hash\"\n\t@echo >>$@ \"authorityKeyIdentifier=keyid\"\n\n###############################################################################\n#\n# Generate a couple of signing keys\n#\n#\topenssl x509 -text -inform PEM -noout -in key3.x509\n#\n###############################################################################\nkey3.priv key3.x509: key3.genkey\n\topenssl req -new -nodes -utf8 -sha1 -days 36500 \\\n\t\t-batch -x509 -outform PEM \\\n\t\t-config key3.genkey \\\n\t\t-keyout key3.priv \\\n\t\t-out key3.x509\n\nkey3.genkey:\n\t@echo Generating X.509 key generation config\n\t@echo  >$@ \"[ req ]\"\n\t@echo >>$@ \"default_bits = 4096\"\n\t@echo >>$@ \"distinguished_name = req_distinguished_name\"\n\t@echo >>$@ \"prompt = no\"\n\t@echo >>$@ \"string_mask = utf8only\"\n\t@echo >>$@ \"x509_extensions = myexts\"\n\t@echo >>$@\n\t@echo >>$@ \"[ req_distinguished_name ]\"\n\t@echo >>$@ \"O = Magrathea\"\n\t@echo >>$@ \"CN = PKCS7 key 3\"\n\t@echo >>$@ \"emailAddress = slartibartfast@magrathea.h2g2\"\n\t@echo >>$@\n\t@echo >>$@ \"[ myexts ]\"\n\t@echo >>$@ \"basicConstraints=critical,CA:TRUE\"\n\t@echo >>$@ \"keyUsage=digitalSignature,keyCertSign\"\n\t@echo >>$@ \"subjectKeyIdentifier=hash\"\n\t@echo >>$@ \"authorityKeyIdentifier=keyid\"\n\nclean:\n\t$(RM) *~\n\t$(RM) key1.* key2.* key3.* key4.* stuff.* out certs\n\nSigned-off-by: David Howells <dhowells@redhat.com>",
        "before_after_code_files": [
          "crypto/asymmetric_keys/pkcs7_key_type.c||crypto/asymmetric_keys/pkcs7_key_type.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asymmetric_keys/pkcs7_key_type.c||crypto/asymmetric_keys/pkcs7_key_type.c"
          ],
          "candidate": [
            "crypto/asymmetric_keys/pkcs7_key_type.c||crypto/asymmetric_keys/pkcs7_key_type.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asymmetric_keys/pkcs7_key_type.c||crypto/asymmetric_keys/pkcs7_key_type.c": [
          "File: crypto/asymmetric_keys/pkcs7_key_type.c -> crypto/asymmetric_keys/pkcs7_key_type.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: #define pr_fmt(fmt) \"PKCS7key: \"fmt",
          "13: #include <linux/key.h>",
          "14: #include <linux/key-type.h>",
          "15: #include <crypto/pkcs7.h>",
          "16: #include <keys/user-type.h>",
          "17: #include <keys/system_keyring.h>",
          "18: #include \"pkcs7_parser.h\"",
          "23: int pkcs7_instantiate(struct key *key, struct key_preparsed_payload *prep)",
          "24: {",
          "25:  struct pkcs7_message *pkcs7;",
          "26:  const void *data, *saved_prep_data;",
          "27:  size_t datalen, saved_prep_datalen;",
          "28:  bool trusted;",
          "29:  int ret;",
          "31:  kenter(\"\");",
          "33:  saved_prep_data = prep->data;",
          "34:  saved_prep_datalen = prep->datalen;",
          "35:  pkcs7 = pkcs7_parse_message(saved_prep_data, saved_prep_datalen);",
          "36:  if (IS_ERR(pkcs7)) {",
          "37:   ret = PTR_ERR(pkcs7);",
          "38:   goto error;",
          "39:  }",
          "41:  ret = pkcs7_verify(pkcs7);",
          "42:  if (ret < 0)",
          "43:   goto error_free;",
          "45:  ret = pkcs7_validate_trust(pkcs7, system_trusted_keyring, &trusted);",
          "46:  if (ret < 0)",
          "47:   goto error_free;",
          "48:  if (!trusted)",
          "49:   pr_warn(\"PKCS#7 message doesn't chain back to a trusted key\\n\");",
          "51:  ret = pkcs7_get_content_data(pkcs7, &data, &datalen, false);",
          "52:  if (ret < 0)",
          "53:   goto error_free;",
          "55:  prep->data = data;",
          "56:  prep->datalen = datalen;",
          "57:  ret = user_instantiate(key, prep);",
          "58:  prep->data = saved_prep_data;",
          "59:  prep->datalen = saved_prep_datalen;",
          "61: error_free:",
          "62:  pkcs7_free_message(pkcs7);",
          "63: error:",
          "64:  kleave(\" = %d\", ret);",
          "65:  return ret;",
          "66: }",
          "72: struct key_type key_type_pkcs7 = {",
          "73:  .name   = \"pkcs7_test\",",
          "74:  .def_lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "75:  .instantiate  = pkcs7_instantiate,",
          "76:  .match   = user_match,",
          "77:  .revoke   = user_revoke,",
          "78:  .destroy  = user_destroy,",
          "79:  .describe  = user_describe,",
          "80:  .read   = user_read,",
          "81: };",
          "86: static int __init pkcs7_key_init(void)",
          "87: {",
          "88:  return register_key_type(&key_type_pkcs7);",
          "89: }",
          "91: static void __exit pkcs7_key_cleanup(void)",
          "92: {",
          "93:  unregister_key_type(&key_type_pkcs7);",
          "94: }",
          "96: module_init(pkcs7_key_init);",
          "97: module_exit(pkcs7_key_cleanup);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "16feef4340172b7dbb9cba60850e78fa6388adf1",
      "candidate_info": {
        "commit_hash": "16feef4340172b7dbb9cba60850e78fa6388adf1",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/16feef4340172b7dbb9cba60850e78fa6388adf1",
        "files": [
          "include/linux/key.h",
          "security/keys/internal.h",
          "security/keys/key.c",
          "security/keys/keyring.c",
          "security/keys/request_key.c"
        ],
        "message": "KEYS: Consolidate the concept of an 'index key' for key access\n\nConsolidate the concept of an 'index key' for accessing keys.  The index key\nis the search term needed to find a key directly - basically the key type and\nthe key description.  We can add to that the description length.\n\nThis will be useful when turning a keyring into an associative array rather\nthan just a pointer block.\n\nSigned-off-by: David Howells <dhowells@redhat.com>",
        "before_after_code_files": [
          "include/linux/key.h||include/linux/key.h",
          "security/keys/internal.h||security/keys/internal.h",
          "security/keys/key.c||security/keys/key.c",
          "security/keys/keyring.c||security/keys/keyring.c",
          "security/keys/request_key.c||security/keys/request_key.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "security/keys/internal.h||security/keys/internal.h",
            "security/keys/key.c||security/keys/key.c",
            "security/keys/keyring.c||security/keys/keyring.c",
            "security/keys/request_key.c||security/keys/request_key.c"
          ],
          "candidate": [
            "security/keys/internal.h||security/keys/internal.h",
            "security/keys/key.c||security/keys/key.c",
            "security/keys/keyring.c||security/keys/keyring.c",
            "security/keys/request_key.c||security/keys/request_key.c"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/key.h||include/linux/key.h": [
          "File: include/linux/key.h -> include/linux/key.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "82: struct keyring_list;",
          "83: struct keyring_name;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85: struct keyring_index_key {",
          "86:  struct key_type  *type;",
          "87:  const char  *description;",
          "88:  size_t   desc_len;",
          "89: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "171:  char   *description;",
          "",
          "[Added Lines]",
          "176:  union {",
          "177:   struct keyring_index_key index_key;",
          "178:   struct {",
          "180:    char  *description;",
          "181:   };",
          "182:  };",
          "",
          "---------------"
        ],
        "security/keys/internal.h||security/keys/internal.h": [
          "File: security/keys/internal.h -> security/keys/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: extern void key_type_put(struct key_type *ktype);",
          "91: extern int __key_link_begin(struct key *keyring,",
          "94:        unsigned long *_prealloc);",
          "95: extern int __key_link_check_live_key(struct key *keyring, struct key *key);",
          "96: extern void __key_link(struct key *keyring, struct key *key,",
          "97:          unsigned long *_prealloc);",
          "98: extern void __key_link_end(struct key *keyring,",
          "100:       unsigned long prealloc);",
          "102: extern key_ref_t __keyring_search_one(key_ref_t keyring_ref,",
          "105:           key_perm_t perm);",
          "107: extern struct key *keyring_search_instkey(struct key *keyring,",
          "",
          "[Removed Lines]",
          "92:        const struct key_type *type,",
          "93:        const char *description,",
          "99:       struct key_type *type,",
          "103:           const struct key_type *type,",
          "104:           const char *description,",
          "",
          "[Added Lines]",
          "92:        const struct keyring_index_key *index_key,",
          "98:       const struct keyring_index_key *index_key,",
          "102:           const struct keyring_index_key *index_key,",
          "",
          "---------------"
        ],
        "security/keys/key.c||security/keys/key.c": [
          "File: security/keys/key.c -> security/keys/key.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:   }",
          "243:  }",
          "249:  user = key_user_lookup(uid);",
          "",
          "[Removed Lines]",
          "245:  desclen = strlen(desc) + 1;",
          "246:  quotalen = desclen + type->def_datalen;",
          "",
          "[Added Lines]",
          "245:  desclen = strlen(desc);",
          "246:  quotalen = desclen + 1 + type->def_datalen;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "277:   goto no_memory_2;",
          "279:  if (desc) {",
          "281:   if (!key->description)",
          "282:    goto no_memory_3;",
          "283:  }",
          "",
          "[Removed Lines]",
          "280:   key->description = kmemdup(desc, desclen, GFP_KERNEL);",
          "",
          "[Added Lines]",
          "280:   key->index_key.desc_len = desclen;",
          "281:   key->index_key.description = kmemdup(desc, desclen + 1, GFP_KERNEL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "285:  atomic_set(&key->usage, 1);",
          "286:  init_rwsem(&key->sem);",
          "287:  lockdep_set_class(&key->sem, &type->lock_class);",
          "289:  key->user = user;",
          "290:  key->quotalen = quotalen;",
          "291:  key->datalen = type->def_datalen;",
          "",
          "[Removed Lines]",
          "288:  key->type = type;",
          "",
          "[Added Lines]",
          "289:  key->index_key.type = type;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "489:  }",
          "491:  if (keyring) {",
          "494:   if (ret < 0)",
          "495:    goto error_free_preparse;",
          "496:  }",
          "",
          "[Removed Lines]",
          "492:   ret = __key_link_begin(keyring, key->type, key->description,",
          "493:            &prealloc);",
          "",
          "[Added Lines]",
          "493:   ret = __key_link_begin(keyring, &key->index_key, &prealloc);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "499:       &prealloc);",
          "501:  if (keyring)",
          "504: error_free_preparse:",
          "505:  if (key->type->preparse)",
          "",
          "[Removed Lines]",
          "502:   __key_link_end(keyring, key->type, prealloc);",
          "",
          "[Added Lines]",
          "502:   __key_link_end(keyring, &key->index_key, prealloc);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "548:  ret = -EBUSY;",
          "550:  if (keyring)",
          "554:  mutex_lock(&key_construction_mutex);",
          "",
          "[Removed Lines]",
          "551:   link_ret = __key_link_begin(keyring, key->type,",
          "552:          key->description, &prealloc);",
          "",
          "[Added Lines]",
          "551:   link_ret = __key_link_begin(keyring, &key->index_key, &prealloc);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "581:  mutex_unlock(&key_construction_mutex);",
          "583:  if (keyring)",
          "587:  if (awaken)",
          "",
          "[Removed Lines]",
          "584:   __key_link_end(keyring, key->type, prealloc);",
          "",
          "[Added Lines]",
          "583:   __key_link_end(keyring, &key->index_key, prealloc);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "780:           key_perm_t perm,",
          "781:           unsigned long flags)",
          "782: {",
          "784:  struct key_preparsed_payload prep;",
          "785:  const struct cred *cred = current_cred();",
          "787:  struct key *keyring, *key = NULL;",
          "788:  key_ref_t key_ref;",
          "789:  int ret;",
          "795:   key_ref = ERR_PTR(-ENODEV);",
          "796:   goto error;",
          "797:  }",
          "799:  key_ref = ERR_PTR(-EINVAL);",
          "802:   goto error_put_type;",
          "804:  keyring = key_ref_to_ptr(keyring_ref);",
          "",
          "[Removed Lines]",
          "783:  unsigned long prealloc;",
          "786:  struct key_type *ktype;",
          "793:  ktype = key_type_lookup(type);",
          "794:  if (IS_ERR(ktype)) {",
          "800:  if (!ktype->match || !ktype->instantiate ||",
          "801:      (!description && !ktype->preparse))",
          "",
          "[Added Lines]",
          "782:  struct keyring_index_key index_key = {",
          "783:   .description = description,",
          "784:  };",
          "787:  unsigned long prealloc;",
          "794:  index_key.type = key_type_lookup(type);",
          "795:  if (IS_ERR(index_key.type)) {",
          "801:  if (!index_key.type->match || !index_key.type->instantiate ||",
          "802:      (!index_key.description && !index_key.type->preparse))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "812:  memset(&prep, 0, sizeof(prep));",
          "813:  prep.data = payload;",
          "814:  prep.datalen = plen;",
          "818:   if (ret < 0) {",
          "819:    key_ref = ERR_PTR(ret);",
          "820:    goto error_put_type;",
          "821:   }",
          "824:   key_ref = ERR_PTR(-EINVAL);",
          "826:    goto error_free_prep;",
          "827:  }",
          "830:  if (ret < 0) {",
          "831:   key_ref = ERR_PTR(ret);",
          "832:   goto error_free_prep;",
          "",
          "[Removed Lines]",
          "815:  prep.quotalen = ktype->def_datalen;",
          "816:  if (ktype->preparse) {",
          "817:   ret = ktype->preparse(&prep);",
          "822:   if (!description)",
          "823:    description = prep.description;",
          "825:   if (!description)",
          "829:  ret = __key_link_begin(keyring, ktype, description, &prealloc);",
          "",
          "[Added Lines]",
          "816:  prep.quotalen = index_key.type->def_datalen;",
          "817:  if (index_key.type->preparse) {",
          "818:   ret = index_key.type->preparse(&prep);",
          "823:   if (!index_key.description)",
          "824:    index_key.description = prep.description;",
          "826:   if (!index_key.description)",
          "829:  index_key.desc_len = strlen(index_key.description);",
          "831:  ret = __key_link_begin(keyring, &index_key, &prealloc);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "850:   if (!IS_ERR(key_ref))",
          "851:    goto found_matching_key;",
          "852:  }",
          "",
          "[Removed Lines]",
          "847:  if (ktype->update) {",
          "848:   key_ref = __keyring_search_one(keyring_ref, ktype, description,",
          "849:             0);",
          "",
          "[Added Lines]",
          "849:  if (index_key.type->update) {",
          "850:   key_ref = __keyring_search_one(keyring_ref, &index_key, 0);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "856:   perm = KEY_POS_VIEW | KEY_POS_SEARCH | KEY_POS_LINK | KEY_POS_SETATTR;",
          "857:   perm |= KEY_USR_VIEW;",
          "860:    perm |= KEY_POS_READ;",
          "863:    perm |= KEY_POS_WRITE;",
          "864:  }",
          "869:  if (IS_ERR(key)) {",
          "870:   key_ref = ERR_CAST(key);",
          "871:   goto error_link_end;",
          "",
          "[Removed Lines]",
          "859:   if (ktype->read)",
          "862:   if (ktype == &key_type_keyring || ktype->update)",
          "867:  key = key_alloc(ktype, description, cred->fsuid, cred->fsgid, cred,",
          "868:    perm, flags);",
          "",
          "[Added Lines]",
          "860:   if (index_key.type->read)",
          "863:   if (index_key.type == &key_type_keyring ||",
          "864:       index_key.type->update)",
          "869:  key = key_alloc(index_key.type, index_key.description,",
          "870:    cred->fsuid, cred->fsgid, cred, perm, flags);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "882:  key_ref = make_key_ref(key, is_key_possessed(keyring_ref));",
          "884: error_link_end:",
          "886: error_free_prep:",
          "889: error_put_type:",
          "891: error:",
          "892:  return key_ref;",
          "",
          "[Removed Lines]",
          "885:  __key_link_end(keyring, ktype, prealloc);",
          "887:  if (ktype->preparse)",
          "888:   ktype->free_preparse(&prep);",
          "890:  key_type_put(ktype);",
          "",
          "[Added Lines]",
          "887:  __key_link_end(keyring, &index_key, prealloc);",
          "889:  if (index_key.type->preparse)",
          "890:   index_key.type->free_preparse(&prep);",
          "892:  key_type_put(index_key.type);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "900:  key_ref = __key_update(key_ref, &prep);",
          "901:  goto error_free_prep;",
          "",
          "[Removed Lines]",
          "898:  __key_link_end(keyring, ktype, prealloc);",
          "",
          "[Added Lines]",
          "900:  __key_link_end(keyring, &index_key, prealloc);",
          "",
          "---------------"
        ],
        "security/keys/keyring.c||security/keys/keyring.c": [
          "File: security/keys/keyring.c -> security/keys/keyring.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "540: key_ref_t __keyring_search_one(key_ref_t keyring_ref,",
          "543:           key_perm_t perm)",
          "544: {",
          "545:  struct keyring_list *klist;",
          "",
          "[Removed Lines]",
          "541:           const struct key_type *ktype,",
          "542:           const char *description,",
          "",
          "[Added Lines]",
          "541:           const struct keyring_index_key *index_key,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "558:   smp_rmb();",
          "559:   for (loop = 0; loop < nkeys ; loop++) {",
          "560:    key = rcu_dereference(klist->keys[loop]);",
          "562:        (!key->type->match ||",
          "564:        key_permission(make_key_ref(key, possessed),",
          "565:         perm) == 0 &&",
          "566:        !(key->flags & ((1 << KEY_FLAG_INVALIDATED) |",
          "",
          "[Removed Lines]",
          "561:    if (key->type == ktype &&",
          "563:         key->type->match(key, description)) &&",
          "",
          "[Added Lines]",
          "560:    if (key->type == index_key->type &&",
          "562:         key->type->match(key, index_key->description)) &&",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "752:  __acquires(&keyring->sem)",
          "753:  __acquires(&keyring_serialise_link_sem)",
          "754: {",
          "",
          "[Removed Lines]",
          "750: int __key_link_begin(struct key *keyring, const struct key_type *type,",
          "751:        const char *description, unsigned long *_prealloc)",
          "",
          "[Added Lines]",
          "749: int __key_link_begin(struct key *keyring, const struct keyring_index_key *index_key,",
          "750:        unsigned long *_prealloc)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "759:  size_t size;",
          "760:  int loop, lru, ret;",
          "764:  if (keyring->type != &key_type_keyring)",
          "765:   return -ENOTDIR;",
          "",
          "[Removed Lines]",
          "762:  kenter(\"%d,%s,%s,\", key_serial(keyring), type->name, description);",
          "",
          "[Added Lines]",
          "761:  kenter(\"%d,%s,%s,\",",
          "762:         key_serial(keyring), index_key->type->name, index_key->description);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "776:   down_write(&keyring_serialise_link_sem);",
          "778:  klist = rcu_dereference_locked_keyring(keyring);",
          "",
          "[Removed Lines]",
          "775:  if (type == &key_type_keyring)",
          "",
          "[Added Lines]",
          "775:  if (index_key->type == &key_type_keyring)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "784:   for (loop = klist->nkeys - 1; loop >= 0; loop--) {",
          "785:    struct key *key = rcu_deref_link_locked(klist, loop,",
          "786:         keyring);",
          "",
          "[Removed Lines]",
          "787:    if (key->type == type &&",
          "788:        strcmp(key->description, description) == 0) {",
          "",
          "[Added Lines]",
          "787:    if (key->type == index_key->type &&",
          "788:        strcmp(key->description, index_key->description) == 0) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "865:  key_payload_reserve(keyring,",
          "866:        keyring->datalen - KEYQUOTA_LINK_BYTES);",
          "867: error_sem:",
          "869:   up_write(&keyring_serialise_link_sem);",
          "870: error_krsem:",
          "871:  up_write(&keyring->sem);",
          "",
          "[Removed Lines]",
          "868:  if (type == &key_type_keyring)",
          "",
          "[Added Lines]",
          "868:  if (index_key->type == &key_type_keyring)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "961:       unsigned long prealloc)",
          "962:  __releases(&keyring->sem)",
          "963:  __releases(&keyring_serialise_link_sem)",
          "964: {",
          "970:   up_write(&keyring_serialise_link_sem);",
          "972:  if (prealloc) {",
          "",
          "[Removed Lines]",
          "960: void __key_link_end(struct key *keyring, struct key_type *type,",
          "965:  BUG_ON(type == NULL);",
          "966:  BUG_ON(type->name == NULL);",
          "967:  kenter(\"%d,%s,%lx\", keyring->serial, type->name, prealloc);",
          "969:  if (type == &key_type_keyring)",
          "",
          "[Added Lines]",
          "960: void __key_link_end(struct key *keyring,",
          "961:       const struct keyring_index_key *index_key,",
          "966:  BUG_ON(index_key->type == NULL);",
          "967:  BUG_ON(index_key->type->name == NULL);",
          "968:  kenter(\"%d,%s,%lx\", keyring->serial, index_key->type->name, prealloc);",
          "970:  if (index_key->type == &key_type_keyring)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1007:  key_check(keyring);",
          "1008:  key_check(key);",
          "1011:  if (ret == 0) {",
          "1012:   ret = __key_link_check_live_key(keyring, key);",
          "1013:   if (ret == 0)",
          "1014:    __key_link(keyring, key, &prealloc);",
          "1016:  }",
          "1018:  return ret;",
          "",
          "[Removed Lines]",
          "1010:  ret = __key_link_begin(keyring, key->type, key->description, &prealloc);",
          "1015:   __key_link_end(keyring, key->type, prealloc);",
          "",
          "[Added Lines]",
          "1011:  ret = __key_link_begin(keyring, &key->index_key, &prealloc);",
          "1016:   __key_link_end(keyring, &key->index_key, prealloc);",
          "",
          "---------------"
        ],
        "security/keys/request_key.c||security/keys/request_key.c": [
          "File: security/keys/request_key.c -> security/keys/request_key.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "352:           struct key_user *user,",
          "353:           struct key **_key)",
          "354: {",
          "355:  const struct cred *cred = current_cred();",
          "356:  unsigned long prealloc;",
          "357:  struct key *key;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "355:  const struct keyring_index_key index_key = {",
          "356:   .type  = type,",
          "357:   .description = description,",
          "358:   .desc_len = strlen(description),",
          "359:  };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "379:  set_bit(KEY_FLAG_USER_CONSTRUCT, &key->flags);",
          "381:  if (dest_keyring) {",
          "384:   if (ret < 0)",
          "385:    goto link_prealloc_failed;",
          "386:  }",
          "",
          "[Removed Lines]",
          "382:   ret = __key_link_begin(dest_keyring, type, description,",
          "383:            &prealloc);",
          "",
          "[Added Lines]",
          "387:   ret = __key_link_begin(dest_keyring, &index_key, &prealloc);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "401:  mutex_unlock(&key_construction_mutex);",
          "402:  if (dest_keyring)",
          "404:  mutex_unlock(&user->cons_lock);",
          "406:  kleave(\" = 0 [%d]\", key_serial(key));",
          "",
          "[Removed Lines]",
          "403:   __key_link_end(dest_keyring, type, prealloc);",
          "",
          "[Added Lines]",
          "407:   __key_link_end(dest_keyring, &index_key, prealloc);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "416:   ret = __key_link_check_live_key(dest_keyring, key);",
          "417:   if (ret == 0)",
          "418:    __key_link(dest_keyring, key, &prealloc);",
          "420:   if (ret < 0)",
          "421:    goto link_check_failed;",
          "422:  }",
          "",
          "[Removed Lines]",
          "419:   __key_link_end(dest_keyring, type, prealloc);",
          "",
          "[Added Lines]",
          "423:   __key_link_end(dest_keyring, &index_key, prealloc);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0c903ab64feb0fe83eac9f67a06e2f5b9508de16",
      "candidate_info": {
        "commit_hash": "0c903ab64feb0fe83eac9f67a06e2f5b9508de16",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0c903ab64feb0fe83eac9f67a06e2f5b9508de16",
        "files": [
          "crypto/asymmetric_keys/asymmetric_type.c",
          "include/linux/key-type.h",
          "net/dns_resolver/dns_key.c",
          "security/keys/internal.h",
          "security/keys/keyring.c",
          "security/keys/process_keys.c"
        ],
        "message": "KEYS: Make the key matching functions return bool\n\nMake the key matching functions pointed to by key_match_data::cmp return bool\nrather than int.\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nAcked-by: Vivek Goyal <vgoyal@redhat.com>",
        "before_after_code_files": [
          "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c",
          "include/linux/key-type.h||include/linux/key-type.h",
          "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c",
          "security/keys/internal.h||security/keys/internal.h",
          "security/keys/keyring.c||security/keys/keyring.c",
          "security/keys/process_keys.c||security/keys/process_keys.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c",
            "include/linux/key-type.h||include/linux/key-type.h",
            "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c",
            "security/keys/internal.h||security/keys/internal.h",
            "security/keys/keyring.c||security/keys/keyring.c"
          ],
          "candidate": [
            "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c",
            "include/linux/key-type.h||include/linux/key-type.h",
            "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c",
            "security/keys/internal.h||security/keys/internal.h",
            "security/keys/keyring.c||security/keys/keyring.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c": [
          "File: crypto/asymmetric_keys/asymmetric_type.c -> crypto/asymmetric_keys/asymmetric_type.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: {",
          "65:  const struct asymmetric_key_subtype *subtype = asymmetric_key_subtype(key);",
          "66:  const char *description = match_data->raw_data;",
          "",
          "[Removed Lines]",
          "62: static int asymmetric_key_cmp(const struct key *key,",
          "63:          const struct key_match_data *match_data)",
          "",
          "[Added Lines]",
          "62: static bool asymmetric_key_cmp(const struct key *key,",
          "63:           const struct key_match_data *match_data)",
          "",
          "---------------"
        ],
        "include/linux/key-type.h||include/linux/key-type.h": [
          "File: include/linux/key-type.h -> include/linux/key-type.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: struct key_match_data {",
          "",
          "[Removed Lines]",
          "61:  int (*cmp)(const struct key *key,",
          "62:      const struct key_match_data *match_data);",
          "",
          "[Added Lines]",
          "63:  bool (*cmp)(const struct key *key,",
          "64:       const struct key_match_data *match_data);",
          "",
          "---------------"
        ],
        "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c": [
          "File: net/dns_resolver/dns_key.c -> net/dns_resolver/dns_key.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: {",
          "182:  int slen, dlen, ret = 0;",
          "183:  const char *src = key->description, *dsp = match_data->raw_data;",
          "",
          "[Removed Lines]",
          "179: static int dns_resolver_cmp(const struct key *key,",
          "180:        const struct key_match_data *match_data)",
          "",
          "[Added Lines]",
          "179: static bool dns_resolver_cmp(const struct key *key,",
          "180:         const struct key_match_data *match_data)",
          "",
          "---------------"
        ],
        "security/keys/internal.h||security/keys/internal.h": [
          "File: security/keys/internal.h -> security/keys/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:  struct timespec  now;",
          "128: };",
          "132: extern key_ref_t keyring_search_aux(key_ref_t keyring_ref,",
          "133:         struct keyring_search_context *ctx);",
          "",
          "[Removed Lines]",
          "130: extern int key_default_cmp(const struct key *key,",
          "131:       const struct key_match_data *match_data);",
          "",
          "[Added Lines]",
          "130: extern bool key_default_cmp(const struct key *key,",
          "131:        const struct key_match_data *match_data);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "150:      struct key *dest_keyring,",
          "151:      unsigned long flags);",
          "155: extern key_ref_t lookup_user_key(key_serial_t id, unsigned long flags,",
          "156:      key_perm_t perm);",
          "157: #define KEY_LOOKUP_CREATE 0x01",
          "",
          "[Removed Lines]",
          "153: extern int lookup_user_key_possessed(const struct key *key,",
          "154:          const struct key_match_data *match_data);",
          "",
          "[Added Lines]",
          "153: extern bool lookup_user_key_possessed(const struct key *key,",
          "154:           const struct key_match_data *match_data);",
          "",
          "---------------"
        ],
        "security/keys/keyring.c||security/keys/keyring.c": [
          "File: security/keys/keyring.c -> security/keys/keyring.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "518: {",
          "519:  return strcmp(key->description, match_data->raw_data) == 0;",
          "520: }",
          "",
          "[Removed Lines]",
          "516: int key_default_cmp(const struct key *key,",
          "517:       const struct key_match_data *match_data)",
          "",
          "[Added Lines]",
          "516: bool key_default_cmp(const struct key *key,",
          "517:        const struct key_match_data *match_data)",
          "",
          "---------------"
        ],
        "security/keys/process_keys.c||security/keys/process_keys.c": [
          "File: security/keys/process_keys.c -> security/keys/process_keys.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "494: {",
          "495:  return key == match_data->raw_data;",
          "496: }",
          "",
          "[Removed Lines]",
          "492: int lookup_user_key_possessed(const struct key *key,",
          "493:          const struct key_match_data *match_data)",
          "",
          "[Added Lines]",
          "492: bool lookup_user_key_possessed(const struct key *key,",
          "493:           const struct key_match_data *match_data)",
          "",
          "---------------"
        ]
      }
    }
  ]
}