{
  "cve_id": "CVE-2022-23586",
  "cve_desc": "Tensorflow is an Open Source Machine Learning Framework. A malicious user can cause a denial of service by altering a `SavedModel` such that assertions in `function.cc` would be falsified and crash the Python interpreter. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2",
  "patch_info": {
    "commit_hash": "dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2",
    "files": [
      "tensorflow/core/framework/function.cc"
    ],
    "message": "Eliminate debug `CHECK`-fail from `function.cc`\n\nPiperOrigin-RevId: 409416119\nChange-Id: I8376ee464d434e9b970ff0ad49edfdaa2a273cfe",
    "before_after_code_files": [
      "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc": [
      "File: tensorflow/core/framework/function.cc -> tensorflow/core/framework/function.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:     for (size_t i = 0; i < dtypes.size(); ++i) {",
      "192:       TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),",
      "193:                                  {true, arg_index, 0, false, {dtypes[i]}}));",
      "195:       string name = arg_def.name();",
      "196:       if (dtypes.size() > 1) {",
      "197:         strings::StrAppend(&name, \"_\", i);",
      "",
      "[Removed Lines]",
      "194:       DCHECK_EQ(arg_index, result_.nodes.size());",
      "",
      "[Added Lines]",
      "194:       if (arg_index != result_.nodes.size()) {",
      "195:         return errors::Internal(",
      "196:             \"Expected arg_index to be equal to the number of nodes in result.\",",
      "197:             \" Got \", arg_index, \" and \", result_.nodes.size());",
      "198:       }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b0915abc089044a63904800af1330bc1a2dfff29",
      "candidate_info": {
        "commit_hash": "b0915abc089044a63904800af1330bc1a2dfff29",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/b0915abc089044a63904800af1330bc1a2dfff29",
        "files": [
          "tensorflow/core/framework/function.cc"
        ],
        "message": "Eliminate debug `CHECK`-fail from `function.cc`\n\nPiperOrigin-RevId: 409416119\nChange-Id: I8376ee464d434e9b970ff0ad49edfdaa2a273cfe",
        "before_after_code_files": [
          "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc": [
          "File: tensorflow/core/framework/function.cc -> tensorflow/core/framework/function.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "185:     for (size_t i = 0; i < dtypes.size(); ++i) {",
          "186:       TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),",
          "187:                                  {true, arg_index, 0, false, {dtypes[i]}}));",
          "189:       string name = arg_def.name();",
          "190:       if (dtypes.size() > 1) {",
          "191:         strings::StrAppend(&name, \"_\", i);",
          "",
          "[Removed Lines]",
          "188:       DCHECK_EQ(arg_index, result_.nodes.size());",
          "",
          "[Added Lines]",
          "188:       if (arg_index != result_.nodes.size()) {",
          "189:         return errors::Internal(",
          "190:             \"Expected arg_index to be equal to the number of nodes in result.\",",
          "191:             \" Got \", arg_index, \" and \", result_.nodes.size());",
          "192:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fbba1c6300fc58d14c9c7253e0ff6a71bf03a1fd",
      "candidate_info": {
        "commit_hash": "fbba1c6300fc58d14c9c7253e0ff6a71bf03a1fd",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/fbba1c6300fc58d14c9c7253e0ff6a71bf03a1fd",
        "files": [
          "tensorflow/core/framework/function.cc"
        ],
        "message": "Eliminate debug `CHECK`-fail from `function.cc`\n\nPiperOrigin-RevId: 409416119\nChange-Id: I8376ee464d434e9b970ff0ad49edfdaa2a273cfe",
        "before_after_code_files": [
          "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc": [
          "File: tensorflow/core/framework/function.cc -> tensorflow/core/framework/function.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "189:     for (size_t i = 0; i < dtypes.size(); ++i) {",
          "190:       TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),",
          "191:                                  {true, arg_index, 0, false, {dtypes[i]}}));",
          "193:       string name = arg_def.name();",
          "194:       if (dtypes.size() > 1) {",
          "195:         strings::StrAppend(&name, \"_\", i);",
          "",
          "[Removed Lines]",
          "192:       DCHECK_EQ(arg_index, result_.nodes.size());",
          "",
          "[Added Lines]",
          "192:       if (arg_index != result_.nodes.size()) {",
          "193:         return errors::Internal(",
          "194:             \"Expected arg_index to be equal to the number of nodes in result.\",",
          "195:             \" Got \", arg_index, \" and \", result_.nodes.size());",
          "196:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db7785b517c2a27cff1a7bfde110069eec159b72",
      "candidate_info": {
        "commit_hash": "db7785b517c2a27cff1a7bfde110069eec159b72",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/db7785b517c2a27cff1a7bfde110069eec159b72",
        "files": [
          "tensorflow/core/framework/function.cc"
        ],
        "message": "Eliminate debug `CHECK`-fail from `function.cc`\n\nPiperOrigin-RevId: 409416119\nChange-Id: I8376ee464d434e9b970ff0ad49edfdaa2a273cfe",
        "before_after_code_files": [
          "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/function.cc||tensorflow/core/framework/function.cc": [
          "File: tensorflow/core/framework/function.cc -> tensorflow/core/framework/function.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "185:     for (size_t i = 0; i < dtypes.size(); ++i) {",
          "186:       TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),",
          "187:                                  {true, arg_index, 0, false, {dtypes[i]}}));",
          "189:       string name = arg_def.name();",
          "190:       if (dtypes.size() > 1) {",
          "191:         strings::StrAppend(&name, \"_\", i);",
          "",
          "[Removed Lines]",
          "188:       DCHECK_EQ(arg_index, result_.nodes.size());",
          "",
          "[Added Lines]",
          "188:       if (arg_index != result_.nodes.size()) {",
          "189:         return errors::Internal(",
          "190:             \"Expected arg_index to be equal to the number of nodes in result.\",",
          "191:             \" Got \", arg_index, \" and \", result_.nodes.size());",
          "192:       }",
          "",
          "---------------"
        ]
      }
    }
  ]
}