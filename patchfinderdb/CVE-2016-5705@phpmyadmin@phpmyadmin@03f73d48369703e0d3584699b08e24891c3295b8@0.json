{
  "cve_id": "CVE-2016-5705",
  "cve_desc": "Multiple cross-site scripting (XSS) vulnerabilities in phpMyAdmin 4.4.x before 4.4.15.7 and 4.6.x before 4.6.3 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) server-privileges certificate data fields on the user privileges page, (2) an \"invalid JSON\" error message in the error console, (3) a database name in the central columns implementation, (4) a group name, or (5) a search name in the bookmarks implementation.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "03f73d48369703e0d3584699b08e24891c3295b8",
  "patch_info": {
    "commit_hash": "03f73d48369703e0d3584699b08e24891c3295b8",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/03f73d48369703e0d3584699b08e24891c3295b8",
    "files": [
      "libraries/server_privileges.lib.php"
    ],
    "message": "Fix XSS on server privileges\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
    "before_after_code_files": [
      "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php"
    ]
  },
  "patch_diff": {
    "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php": [
      "File: libraries/server_privileges.lib.php -> libraries/server_privileges.lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "806:         . 'REQUIRE CIPHER'",
      "807:         . '</dfn></code></label>';",
      "808:     $html_output .= '<input type=\"text\" name=\"ssl_cipher\" id=\"text_ssl_cipher\" '",
      "810:         . 'size=80\" title=\"'",
      "811:         . __(",
      "812:             'Requires that a specific cipher method be used for a connection.'",
      "",
      "[Removed Lines]",
      "809:         . 'value=\"' . (isset($row['ssl_cipher']) ? $row['ssl_cipher'] : '') . '\" '",
      "",
      "[Added Lines]",
      "809:         . 'value=\"' . (isset($row['ssl_cipher']) ? htmlspecialchars($row['ssl_cipher']) : '') . '\" '",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "826:         . 'REQUIRE ISSUER'",
      "827:         . '</dfn></code></label>';",
      "828:     $html_output .= '<input type=\"text\" name=\"x509_issuer\" id=\"text_x509_issuer\" '",
      "830:         . 'size=80\" title=\"'",
      "831:         . __(",
      "832:             'Requires that a valid X509 certificate issued by this CA be presented.'",
      "",
      "[Removed Lines]",
      "829:         . 'value=\"' . (isset($row['x509_issuer']) ? $row['x509_issuer'] : '') . '\" '",
      "",
      "[Added Lines]",
      "829:         . 'value=\"' . (isset($row['x509_issuer']) ? htmlspecialchars($row['x509_issuer']) : '') . '\" '",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "846:         . 'REQUIRE SUBJECT'",
      "847:         . '</dfn></code></label>';",
      "848:     $html_output .= '<input type=\"text\" name=\"x509_subject\" id=\"text_x509_subject\" '",
      "850:         . '\" size=80\" title=\"'",
      "851:         . __(",
      "852:             'Requires that a valid X509 certificate with this subject be presented.'",
      "",
      "[Removed Lines]",
      "849:         . 'value=\"' . (isset($row['x509_subject']) ? $row['x509_subject'] : '')",
      "",
      "[Added Lines]",
      "849:         . 'value=\"' . (isset($row['x509_subject']) ? htmlspecialchars($row['x509_subject']) : '')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1768fb5da3e0630890900a988b691cdc93e33b8b",
      "candidate_info": {
        "commit_hash": "1768fb5da3e0630890900a988b691cdc93e33b8b",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/1768fb5da3e0630890900a988b691cdc93e33b8b",
        "files": [
          "libraries/server_privileges.lib.php"
        ],
        "message": "Fix wrong text in label\n\nSigned-off-by: Deven Bansod <devenbansod.bits@gmail.com>",
        "before_after_code_files": [
          "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php"
          ],
          "candidate": [
            "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php": [
          "File: libraries/server_privileges.lib.php -> libraries/server_privileges.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "737:             'description' => __(",
          "738:                 'Requires a valid X509 certificate.'",
          "739:             ),",
          "741:             'checked'     => (isset($row['ssl_type']) && ($row['ssl_type'] == 'X509')",
          "742:                 ? 'checked=\"checked\"'",
          "743:                 : ''",
          "",
          "[Removed Lines]",
          "740:             'label'       => 'REQUIRE SSL',",
          "",
          "[Added Lines]",
          "740:             'label'       => 'REQUIRE X509',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "56c07e6f35059d7314685fbbb6b006ea278c0a64",
      "candidate_info": {
        "commit_hash": "56c07e6f35059d7314685fbbb6b006ea278c0a64",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/56c07e6f35059d7314685fbbb6b006ea278c0a64",
        "files": [
          "libraries/relation.lib.php",
          "libraries/replication_gui.lib.php",
          "libraries/server_privileges.lib.php",
          "libraries/server_status_processes.lib.php",
          "libraries/server_variables.lib.php",
          "libraries/sql.lib.php",
          "libraries/sql_query_form.lib.php",
          "libraries/structure.lib.php",
          "libraries/tbl_columns_definition_form.inc.php",
          "libraries/tracking.lib.php"
        ],
        "message": "Make PHPCS happy.\n\nSigned-off-by: Hugues Peccatte <hugues.peccatte@gmail.com>",
        "before_after_code_files": [
          "libraries/relation.lib.php||libraries/relation.lib.php",
          "libraries/replication_gui.lib.php||libraries/replication_gui.lib.php",
          "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php",
          "libraries/server_status_processes.lib.php||libraries/server_status_processes.lib.php",
          "libraries/server_variables.lib.php||libraries/server_variables.lib.php",
          "libraries/sql.lib.php||libraries/sql.lib.php",
          "libraries/sql_query_form.lib.php||libraries/sql_query_form.lib.php",
          "libraries/structure.lib.php||libraries/structure.lib.php",
          "libraries/tbl_columns_definition_form.inc.php||libraries/tbl_columns_definition_form.inc.php",
          "libraries/tracking.lib.php||libraries/tracking.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php"
          ],
          "candidate": [
            "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/relation.lib.php||libraries/relation.lib.php": [
          "File: libraries/relation.lib.php -> libraries/relation.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "749:             $stmt = $parser->statements[0];",
          "751:         }",
          "752:     }",
          "",
          "[Removed Lines]",
          "750:             $foreign['foreign_keys_data'] = SqlParser\\Utils\\Table::getForeignKeys($stmt);",
          "",
          "[Added Lines]",
          "750:             $foreign['foreign_keys_data'] = SqlParser\\Utils\\Table::getForeignKeys(",
          "751:                 $stmt",
          "752:             );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1334:         if ($override_total == true",
          "1335:             || $the_total < $GLOBALS['cfg']['ForeignKeyMaxLimit']",
          "",
          "[Removed Lines]",
          "1332:         $the_total   = $GLOBALS['dbi']->getTable($foreign_db, $foreign_table)->countRecords(true);",
          "",
          "[Added Lines]",
          "1334:         $the_total = $GLOBALS['dbi']->getTable($foreign_db, $foreign_table)",
          "1335:             ->countRecords(true);",
          "",
          "---------------"
        ],
        "libraries/replication_gui.lib.php||libraries/replication_gui.lib.php": [
          "File: libraries/replication_gui.lib.php -> libraries/replication_gui.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:         $html .= ' <select name=\"master_connection\">';",
          "153:         $html .= '<option value=\"\">' . __('Default') . '</option>';",
          "154:         foreach ($server_slave_multi_replication as $server) {",
          "157:                 . '</option>';",
          "158:         }",
          "159:         $html .= '</select>';",
          "",
          "[Removed Lines]",
          "155:             $html .= '<option' . (isset($_REQUEST['master_connection']) && $_REQUEST['master_connection'] == $server['Connection_name'] ?",
          "156:                 ' selected=\"selected\"' : '') . '>' . $server['Connection_name']",
          "",
          "[Added Lines]",
          "155:             $html .= '<option' . (isset($_REQUEST['master_connection'])",
          "156:                 && $_REQUEST['master_connection'] == $server['Connection_name'] ?",
          "157:                     ' selected=\"selected\"' : '') . '>' . $server['Connection_name']",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "228:         $reconfiguremaster_link = 'server_replication.php'",
          "229:             . PMA_URL_getCommon($_url_params);",
          "232:         $html .= '<br />';",
          "233:         $html .= '<ul>';",
          "234:         $html .= ' <li><a href=\"#\" id=\"slave_status_href\">';",
          "",
          "[Removed Lines]",
          "231:         $html .= __('Server is configured as slave in a replication process. Would you like to:');",
          "",
          "[Added Lines]",
          "232:         $html .= __(",
          "233:             'Server is configured as slave in a replication process. Would you ' .",
          "234:             'like to:'",
          "235:         );",
          "",
          "---------------"
        ],
        "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php": [
          "File: libraries/server_privileges.lib.php -> libraries/server_privileges.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "800:         . 'REQUIRE SUBJECT'",
          "801:         . '</dfn></code></label>';",
          "802:     $html_output .= '<input type=\"text\" name=\"x509_subject\" id=\"text_x509_subject\" '",
          "805:         . __(",
          "806:             'Requires that a valid X509 certificate with this subject be presented.'",
          "807:         )",
          "",
          "[Removed Lines]",
          "803:         . 'value=\"' . (isset($row['x509_subject']) ? $row['x509_subject'] : '') . '\" '",
          "804:         . 'size=80\" title=\"'",
          "",
          "[Added Lines]",
          "803:         . 'value=\"' . (isset($row['x509_subject']) ? $row['x509_subject'] : '')",
          "804:         . '\" size=80\" title=\"'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "837:             'Requires SSL-encrypted connections.'",
          "838:         )",
          "839:         . '\"'",
          "841:             ? ' checked=\"checked\"'",
          "842:             : ''",
          "843:         )",
          "",
          "[Removed Lines]",
          "840:         . ((isset($row['ssl_type']) && ($row['ssl_type'] == 'ANY' || $row['ssl_type'] == ''))",
          "",
          "[Added Lines]",
          "840:         . ((isset($row['ssl_type'])",
          "841:             && ($row['ssl_type'] == 'ANY'",
          "842:                 || $row['ssl_type'] == ''))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1609:         . htmlspecialchars(isset($GLOBALS['hostname']) ? $GLOBALS['hostname'] : '%')",
          "1610:         . '\" title=\"' . __('Host name')",
          "1612:         . ((isset($GLOBALS['pred_hostname'])",
          "1613:                 && $GLOBALS['pred_hostname'] == 'userdefined'",
          "1614:             )",
          "",
          "[Removed Lines]",
          "1611:         . '\" onchange=\"pred_hostname.value = \\'userdefined\\'; this.required = true;\" '",
          "",
          "[Added Lines]",
          "1613:         . '\" onchange=\"pred_hostname.value = \\'userdefined\\'; '",
          "1614:         . 'this.required = true;\" '",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1658:         . '</span>' . \"\\n\"",
          "1659:         . '<input type=\"password\" id=\"text_pma_pw\" name=\"pma_pw\" '",
          "1660:         . 'title=\"' . __('Password') . '\" '",
          "1662:         . (isset($GLOBALS['username']) ? '' : 'required=\"required\"')",
          "1663:         . '/>' . \"\\n\"",
          "1664:         . '</div>' . \"\\n\";",
          "",
          "[Removed Lines]",
          "1661:         . 'onchange=\"pred_password.value = \\'userdefined\\'; this.required = true; pma_pw2.required = true;\" '",
          "",
          "[Added Lines]",
          "1664:         . 'onchange=\"pred_password.value = \\'userdefined\\'; this.required = true; '",
          "1665:         . 'pma_pw2.required = true;\" '",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1671:         . '<span class=\"options\">&nbsp;</span>' . \"\\n\"",
          "1672:         . '<input type=\"password\" name=\"pma_pw2\" id=\"text_pma_pw2\" '",
          "1673:         . 'title=\"' . __('Re-type') . '\" '",
          "1675:         . (isset($GLOBALS['username']) ? '' : 'required=\"required\"')",
          "1676:         . '/>' . \"\\n\"",
          "1677:         . '</div>' . \"\\n\"",
          "",
          "[Removed Lines]",
          "1674:         . 'onchange=\"pred_password.value = \\'userdefined\\'; this.required = true; pma_pw.required = true;\" '",
          "",
          "[Added Lines]",
          "1678:         . 'onchange=\"pred_password.value = \\'userdefined\\'; this.required = true; '",
          "1679:         . 'pma_pw.required = true;\" '",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2295:                 $html_output .= ' rowspan=\"' . $nbPrivileges . '\"';",
          "2296:             }",
          "2297:             $html_output .= '>';",
          "2299:                 . 'id=\"checkbox_sel_users_' . ($index_checkbox++) . '\" '",
          "2300:                 . 'value=\"' . $value . '\" /></td>' . \"\\n\";",
          "",
          "[Removed Lines]",
          "2298:             $html_output .= '<input type=\"checkbox\" class=\"checkall\" name=\"selected_usr[]\" '",
          "",
          "[Added Lines]",
          "2303:             $html_output .= '<input type=\"checkbox\" class=\"checkall\" '",
          "2304:                 . 'name=\"selected_usr[]\" '",
          "",
          "---------------"
        ],
        "libraries/server_status_processes.lib.php||libraries/server_status_processes.lib.php": [
          "File: libraries/server_status_processes.lib.php -> libraries/server_status_processes.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:         if (! empty($_REQUEST['showExecuting'])) {",
          "142:             $sql_query .= ' WHERE state = \"executing\" ';",
          "143:         }",
          "145:             $sql_query .= ' ORDER BY '",
          "146:                 . PMA_Util::backquote($_REQUEST['order_by_field'])",
          "147:                 . ' ' . $_REQUEST['sort_order'];",
          "",
          "[Removed Lines]",
          "144:         if (! empty($_REQUEST['order_by_field']) && ! empty($_REQUEST['sort_order'])) {",
          "",
          "[Added Lines]",
          "144:         if (!empty($_REQUEST['order_by_field']) && !empty($_REQUEST['sort_order'])) {",
          "",
          "---------------"
        ],
        "libraries/server_variables.lib.php||libraries/server_variables.lib.php": [
          "File: libraries/server_variables.lib.php -> libraries/server_variables.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1581:         'performance_schema_digests_size',",
          "1582:         'performance-schema-system-variables',",
          "1583:         'sysvar');",
          "1588:     $variable_doc_links['performance_schema_events_stages_history_size'] = array(",
          "1589:         'performance_schema_events_stages_history_size',",
          "1590:         'performance-schema-system-variables',",
          "1591:         'sysvar');",
          "1596:     $variable_doc_links['performance_schema_events_statements_history_size'] = array(",
          "1597:         'performance_schema_events_statements_history_size',",
          "1598:         'performance-schema-system-variables',",
          "",
          "[Removed Lines]",
          "1584:     $variable_doc_links['performance_schema_events_stages_history_long_size'] = array(",
          "1585:         'performance_schema_events_stages_history_long_size',",
          "1586:         'performance-schema-system-variables',",
          "1587:         'sysvar');",
          "1592:     $variable_doc_links['performance_schema_events_statements_history_long_size'] = array(",
          "1593:         'performance_schema_events_statements_history_long_size',",
          "1594:         'performance-schema-system-variables',",
          "1595:         'sysvar');",
          "",
          "[Added Lines]",
          "1584:     $variable_doc_links['performance_schema_events_stages_history_long_size']",
          "1585:         = array(",
          "1586:             'performance_schema_events_stages_history_long_size',",
          "1587:             'performance-schema-system-variables',",
          "1588:             'sysvar',",
          "1589:         );",
          "1594:     $variable_doc_links['performance_schema_events_statements_history_long_size']",
          "1595:         = array(",
          "1596:             'performance_schema_events_statements_history_long_size',",
          "1597:             'performance-schema-system-variables',",
          "1598:             'sysvar',",
          "1599:         );",
          "",
          "---------------"
        ],
        "libraries/sql.lib.php||libraries/sql.lib.php": [
          "File: libraries/sql.lib.php -> libraries/sql.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1170:             }",
          "1172:         } else {",
          "",
          "[Removed Lines]",
          "1169:                 $unlim_num_rows = $GLOBALS['dbi']->getTable($db, $table)->countRecords(true);",
          "",
          "[Added Lines]",
          "1169:                 $unlim_num_rows = $GLOBALS['dbi']->getTable($db, $table)",
          "1170:                     ->countRecords(true);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2106:         );",
          "2110:         $html_output = PMA_getQueryResponseForNoResultsReturned(",
          "2111:             $analyzed_sql_results, $db, $table,",
          "2112:             isset($message_to_show) ? $message_to_show : null,",
          "",
          "[Removed Lines]",
          "2109:     if ((0 == $num_rows && 0 == $unlim_num_rows) || $analyzed_sql_results['is_affected']) {",
          "",
          "[Added Lines]",
          "2110:     if ((0 == $num_rows && 0 == $unlim_num_rows)",
          "2111:         || $analyzed_sql_results['is_affected']",
          "2112:     ) {",
          "",
          "---------------"
        ],
        "libraries/sql_query_form.lib.php||libraries/sql_query_form.lib.php": [
          "File: libraries/sql_query_form.lib.php -> libraries/sql_query_form.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "252:         $html .= '<input type=\"button\" value=\"' . __('Format') . '\" id=\"format\"'",
          "253:             . ' class=\"button sqlbutton\" />';",
          "254:     }",
          "259:     $html .= '<div>';",
          "",
          "[Removed Lines]",
          "255:     $html .= '<input type=\"button\" value=\"' . __('Get auto-saved query') . '\" id=\"saved\"'",
          "256:         . ' class=\"button sqlbutton\" />';",
          "",
          "[Added Lines]",
          "255:     $html .= '<input type=\"button\" value=\"' . __('Get auto-saved query')",
          "256:         . '\" id=\"saved\" class=\"button sqlbutton\" />';",
          "",
          "---------------"
        ],
        "libraries/structure.lib.php||libraries/structure.lib.php": [
          "File: libraries/structure.lib.php -> libraries/structure.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "686:             $show_superscript = PMA_Util::showHint(",
          "687:                 PMA_sanitize(",
          "688:                     sprintf(",
          "690:                         '[doc@cfg_MaxExactCountViews]',",
          "691:                         '[/doc]'",
          "692:                     )",
          "",
          "[Removed Lines]",
          "689:                         __('This view has at least this number of rows. Please refer to %sdocumentation%s.'),",
          "",
          "[Added Lines]",
          "689:                         __(",
          "690:                             'This view has at least this number of rows. Please ' .",
          "691:                             'refer to %sdocumentation%s.'",
          "692:                         ),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "861:             . '        ' . __('Replication') . \"\\n\"",
          "862:             . '</th>';",
          "863:     }",
          "865:         . '        ' . __('Action') . \"\\n\"",
          "866:         . '</th>'",
          "",
          "[Removed Lines]",
          "864:     $html_output .= '<th colspan=\"' . $action_colspan . '\" class=\"print_ignore\">' . \"\\n\"",
          "",
          "[Added Lines]",
          "867:     $html_output .= '<th colspan=\"' . $action_colspan . '\" class=\"print_ignore\">'",
          "868:         . \"\\n\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2136:     $primary, $field_name, $url_query, $titles, $row, $rownum,",
          "2137:     $columns_with_unique_index, $isInCentralColumns",
          "2138: ) {",
          "2140:     $html_output .= PMA_getHtmlForActionRowInStructureTable(",
          "2141:         $type, $tbl_storage_engine,",
          "2142:         'primary nowrap',",
          "",
          "[Removed Lines]",
          "2139:     $html_output = '<td class=\"print_ignore\"><ul class=\"table-structure-actions resizable-menu\">';",
          "",
          "[Added Lines]",
          "2143:     $html_output = '<td class=\"print_ignore\">'",
          "2144:         . '<ul class=\"table-structure-actions resizable-menu\">';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2595:                 && ! empty($_REQUEST['field_adjust_privileges'][$i])",
          "2596:                 && $_REQUEST['field_orig'][$i] != $_REQUEST['field_name'][$i]",
          "2597:             ) {",
          "2599:             }",
          "2600:         }",
          "2601:     } // end for",
          "",
          "[Removed Lines]",
          "2598:                     $adjust_privileges[$_REQUEST['field_orig'][$i]] = $_REQUEST['field_name'][$i];",
          "",
          "[Added Lines]",
          "2603:                 $adjust_privileges[$_REQUEST['field_orig'][$i]]",
          "2604:                     = $_REQUEST['field_name'][$i];",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2656:         $result = $GLOBALS['dbi']->tryQuery($sql_query);",
          "2658:         if ($result !== false) {",
          "2661:             if ($changed_privileges) {",
          "2662:                 $message = PMA_Message::success(",
          "2664:                 );",
          "2665:             } else {",
          "2666:                 $message = PMA_Message::success(",
          "",
          "[Removed Lines]",
          "2659:             $changed_privileges = PMA_adjustColumnPrivileges($db, $table, $adjust_privileges);",
          "2663:                     __('Table %1$s has been altered successfully. Privileges have been adjusted.')",
          "",
          "[Added Lines]",
          "2665:             $changed_privileges = PMA_adjustColumnPrivileges(",
          "2666:                 $db, $table, $adjust_privileges",
          "2667:             );",
          "2671:                     __(",
          "2672:                         'Table %1$s has been altered successfully. Privileges ' .",
          "2673:                         'have been adjusted.'",
          "2674:                     )",
          "",
          "---------------"
        ],
        "libraries/tbl_columns_definition_form.inc.php||libraries/tbl_columns_definition_form.inc.php": [
          "File: libraries/tbl_columns_definition_form.inc.php -> libraries/tbl_columns_definition_form.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:         $columnMeta = array_merge(",
          "146:             $columnMeta,",
          "147:             array(",
          "157:             )",
          "158:         );",
          "160:         $columnMeta['Key'] = '';",
          "162:         if (count($parts) == 2 && $parts[1] == $columnNumber) {",
          "163:             $columnMeta['Key'] = Util\\get(",
          "164:                 array(",
          "",
          "[Removed Lines]",
          "148:                 'Field' => Util\\get($_REQUEST, \"field_name.${columnNumber}\", false),",
          "149:                 'Type' => Util\\get($_REQUEST, \"field_type.${columnNumber}\", false),",
          "150:                 'Collation' => Util\\get($_REQUEST, \"field_collation.${columnNumber}\", ''),",
          "151:                 'Null' => Util\\get($_REQUEST, \"field_null.${columnNumber}\", ''),",
          "152:                 'DefaultType' => Util\\get($_REQUEST, \"field_default_type.${columnNumber}\", 'NONE'),",
          "153:                 'DefaultValue' => Util\\get($_REQUEST, \"field_default_value.${columnNumber}\", ''),",
          "154:                 'Extra' => Util\\get($_REQUEST, \"field_extra.${columnNumber}\", false),",
          "155:                 'Virtuality' => Util\\get($_REQUEST, \"field_virtuality.${columnNumber}\", ''),",
          "156:                 'Expression' => Util\\get($_REQUEST, \"field_expression.${columnNumber}\", ''),",
          "161:         $parts = explode('_', Util\\get($_REQUEST, \"field_key.${columnNumber}\", ''), 2);",
          "",
          "[Added Lines]",
          "148:                 'Field'        => Util\\get(",
          "149:                     $_REQUEST, \"field_name.${columnNumber}\", false",
          "150:                 ),",
          "151:                 'Type'         => Util\\get(",
          "152:                     $_REQUEST, \"field_type.${columnNumber}\", false",
          "153:                 ),",
          "154:                 'Collation'    => Util\\get(",
          "155:                     $_REQUEST, \"field_collation.${columnNumber}\", ''",
          "156:                 ),",
          "157:                 'Null'         => Util\\get(",
          "158:                     $_REQUEST, \"field_null.${columnNumber}\", ''",
          "159:                 ),",
          "160:                 'DefaultType'  => Util\\get(",
          "161:                     $_REQUEST, \"field_default_type.${columnNumber}\", 'NONE'",
          "162:                 ),",
          "163:                 'DefaultValue' => Util\\get(",
          "164:                     $_REQUEST, \"field_default_value.${columnNumber}\", ''",
          "165:                 ),",
          "166:                 'Extra'        => Util\\get(",
          "167:                     $_REQUEST, \"field_extra.${columnNumber}\", false",
          "168:                 ),",
          "169:                 'Virtuality'   => Util\\get(",
          "170:                     $_REQUEST, \"field_virtuality.${columnNumber}\", ''",
          "171:                 ),",
          "172:                 'Expression'   => Util\\get(",
          "173:                     $_REQUEST, \"field_expression.${columnNumber}\", ''",
          "174:                 ),",
          "179:         $parts = explode(",
          "180:             '_', Util\\get($_REQUEST, \"field_key.${columnNumber}\", ''), 2",
          "181:         );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "191:         }",
          "193:         $length = Util\\get($_REQUEST, \"field_length.${columnNumber}\", $length);",
          "197:         $mime_map[$columnMeta['Field']] = array_merge(",
          "198:             $mime_map[$columnMeta['Field']],",
          "199:             array(",
          "200:                 'mimetype' => Util\\get($_REQUEST, \"field_mimetype.${$columnNumber}\"),",
          "203:             )",
          "204:         );",
          "",
          "[Removed Lines]",
          "194:         $submit_attribute = Util\\get($_REQUEST, \"field_attribute.${columnNumber}\", false);",
          "195:         $comments_map[$columnMeta['Field']] = Util\\get($_REQUEST, \"field_comments.${columnNumber}\");",
          "201:                 'transformation' => Util\\get($_REQUEST, \"field_transformation.${$columnNumber}\"),",
          "202:                 'transformation_options' => Util\\get($_REQUEST, \"field_transformation_options.${$columnNumber}\")",
          "",
          "[Added Lines]",
          "214:         $submit_attribute = Util\\get(",
          "215:             $_REQUEST, \"field_attribute.${columnNumber}\", false",
          "216:         );",
          "217:         $comments_map[$columnMeta['Field']] = Util\\get(",
          "218:             $_REQUEST, \"field_comments.${columnNumber}\"",
          "219:         );",
          "225:                 'transformation' => Util\\get(",
          "226:                     $_REQUEST, \"field_transformation.${$columnNumber}\"",
          "227:                 ),",
          "228:                 'transformation_options' => Util\\get(",
          "229:                     $_REQUEST, \"field_transformation_options.${$columnNumber}\"",
          "230:                 ),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "210:         );",
          "211:         if (in_array($columnMeta['Extra'], $virtual)) {",
          "212:             $table = new PMA_Table($GLOBALS['table'], $GLOBALS['db']);",
          "214:             $columnMeta['Expression'] = $expressions[$columnMeta['Field']];",
          "215:         }",
          "216:         switch ($columnMeta['Default']) {",
          "",
          "[Removed Lines]",
          "213:             $expressions = $table->getColumnGenerationExpression($columnMeta['Field']);",
          "",
          "[Added Lines]",
          "241:             $expressions = $table->getColumnGenerationExpression(",
          "242:                 $columnMeta['Field']",
          "243:             );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "320:         $form_params = array_merge(",
          "321:             $form_params,",
          "322:             array(",
          "332:             )",
          "333:         );",
          "334:     }",
          "",
          "[Removed Lines]",
          "323:                 \"field_default_value_orig[${columnNumber}]\" => Util\\get($columnMeta, 'Default', ''),",
          "324:                 \"field_default_type_orig[${columnNumber}]\" => Util\\get($columnMeta, 'DefaultType', ''),",
          "325:                 \"field_collation_orig[${columnNumber}]\" => Util\\get($columnMeta, 'Collation', ''),",
          "326:                 \"field_attribute_orig[${columnNumber}]\" => trim(Util\\get($extracted_columnspec, 'attribute', '')),",
          "327:                 \"field_null_orig[${columnNumber}]\" => Util\\get($columnMeta, 'Null', ''),",
          "328:                 \"field_extra_orig[${columnNumber}]\" => Util\\get($columnMeta, 'Extra', ''),",
          "329:                 \"field_comments_orig[${columnNumber}]\" => Util\\get($columnMeta, 'Comment', ''),",
          "330:                 \"field_virtuality_orig[${columnNumber}]\" => Util\\get($columnMeta, 'Virtuality', ''),",
          "331:                 \"field_expression_orig[${columnNumber}]\" => Util\\get($columnMeta, 'Expression', ''),",
          "",
          "[Added Lines]",
          "353:                 \"field_default_value_orig[${columnNumber}]\" => Util\\get(",
          "354:                     $columnMeta, 'Default', ''",
          "355:                 ),",
          "356:                 \"field_default_type_orig[${columnNumber}]\"  => Util\\get(",
          "357:                     $columnMeta, 'DefaultType', ''",
          "358:                 ),",
          "359:                 \"field_collation_orig[${columnNumber}]\"     => Util\\get(",
          "360:                     $columnMeta, 'Collation', ''",
          "361:                 ),",
          "362:                 \"field_attribute_orig[${columnNumber}]\"     => trim(",
          "363:                     Util\\get($extracted_columnspec, 'attribute', '')",
          "364:                 ),",
          "365:                 \"field_null_orig[${columnNumber}]\"          => Util\\get(",
          "366:                     $columnMeta, 'Null', ''",
          "367:                 ),",
          "368:                 \"field_extra_orig[${columnNumber}]\"         => Util\\get(",
          "369:                     $columnMeta, 'Extra', ''",
          "370:                 ),",
          "371:                 \"field_comments_orig[${columnNumber}]\"      => Util\\get(",
          "372:                     $columnMeta, 'Comment', ''",
          "373:                 ),",
          "374:                 \"field_virtuality_orig[${columnNumber}]\"    => Util\\get(",
          "375:                     $columnMeta, 'Virtuality', ''",
          "376:                 ),",
          "377:                 \"field_expression_orig[${columnNumber}]\"    => Util\\get(",
          "378:                     $columnMeta, 'Expression', ''",
          "379:                 ),",
          "",
          "---------------"
        ],
        "libraries/tracking.lib.php||libraries/tracking.lib.php": [
          "File: libraries/tracking.lib.php -> libraries/tracking.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:     );",
          "221:     $html .= '</legend>';",
          "222:     $html .= '<input type=\"hidden\" name=\"version\" value=\"' . $last_version . '\" />';",
          "224:     $html .= '<input type=\"submit\" value=\"' . $button . '\" />';",
          "225:     $html .= '</fieldset>';",
          "226:     $html .= '</form>';",
          "",
          "[Removed Lines]",
          "223:     $html .= '<input type=\"hidden\" name=\"toggle_activation\" value=\"' . $value . '\" />';",
          "",
          "[Added Lines]",
          "223:     $html .= '<input type=\"hidden\" name=\"toggle_activation\" value=\"' . $value",
          "224:         . '\" />';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9ee9d1ddfac13fa883cdeeb0bc11ab78cb2ca1d",
      "candidate_info": {
        "commit_hash": "f9ee9d1ddfac13fa883cdeeb0bc11ab78cb2ca1d",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/f9ee9d1ddfac13fa883cdeeb0bc11ab78cb2ca1d",
        "files": [
          "js/server_privileges.js",
          "libraries/server_privileges.lib.php",
          "templates/privileges/require_options.phtml",
          "templates/privileges/require_options_item.phtml"
        ],
        "message": "Refactor SSL requires div to use template\n\nSigned-off-by: Deven Bansod <devenbansod.bits@gmail.com>",
        "before_after_code_files": [
          "js/server_privileges.js||js/server_privileges.js",
          "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php",
          "templates/privileges/require_options.phtml||templates/privileges/require_options.phtml",
          "templates/privileges/require_options_item.phtml||templates/privileges/require_options_item.phtml"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php"
          ],
          "candidate": [
            "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "js/server_privileges.js||js/server_privileges.js": [
          "File: js/server_privileges.js -> js/server_privileges.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "393:     $(document).on('change', 'input[name=\"ssl_type\"]', function (e) {",
          "394:         var $div = $('#specified_div');",
          "396:             $div.find('input').prop('disabled', false);",
          "397:         } else {",
          "398:             $div.find('input').prop('disabled', true);",
          "",
          "[Removed Lines]",
          "395:         if ($('#ssl_type_specified').is(':checked')) {",
          "",
          "[Added Lines]",
          "395:         if ($('#ssl_type_SPECIFIED').is(':checked')) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "403:         var $div = $('#require_ssl_div');",
          "404:         if ($(this).is(':checked')) {",
          "405:             $div.find('input').prop('disabled', false);",
          "407:         } else {",
          "408:             $div.find('input').prop('disabled', true);",
          "409:         }",
          "",
          "[Removed Lines]",
          "406:             $('#ssl_type_specified').trigger('change');",
          "",
          "[Added Lines]",
          "406:             $('#ssl_type_SPECIFIED').trigger('change');",
          "",
          "---------------"
        ],
        "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php": [
          "File: libraries/server_privileges.lib.php -> libraries/server_privileges.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "700: function PMA_getHtmlForRequires($row)",
          "701: {",
          "768:     $specified = (isset($row['ssl_type']) && $row['ssl_type'] == 'SPECIFIED');",
          "845:     return $html_output;",
          "846: }",
          "",
          "[Removed Lines]",
          "702:     $html_output  = '<fieldset>';",
          "703:     $html_output .= '<legend>SSL</legend>';",
          "705:     $html_output .= '<div id=\"require_ssl_div\">';",
          "708:     $html_output .= '<div class=\"item\">';",
          "709:     $html_output .= '<input type=\"radio\" name=\"ssl_type\" id=\"ssl_type_NONE\"'",
          "710:         . ' value=\"NONE\" title=\"'",
          "711:         . __(",
          "712:             'Does not require SSL-encrypted connections.'",
          "713:         )",
          "714:         . '\"'",
          "715:         . ((isset($row['ssl_type'])",
          "716:             && ($row['ssl_type'] == 'NONE'",
          "717:                 || $row['ssl_type'] == ''))",
          "718:             ? ' checked=\"checked\"'",
          "719:             : ''",
          "720:         )",
          "721:         . '/>';",
          "723:     $html_output .= '<label for=\"ssl_type_NONE\"><code>'",
          "724:         . 'REQUIRE NONE'",
          "725:         . '</code></label>';",
          "726:     $html_output .= '</div>';",
          "729:     $html_output .= '<div class=\"item\">';",
          "730:     $html_output .= '<input type=\"radio\" name=\"ssl_type\" id=\"ssl_type_ANY\"'",
          "731:         . ' value=\"ANY\" title=\"'",
          "732:         . __(",
          "733:             'Requires SSL-encrypted connections.'",
          "734:         )",
          "735:         . '\"'",
          "736:         . ((isset($row['ssl_type'])",
          "737:             && $row['ssl_type'] == 'ANY')",
          "738:             ? ' checked=\"checked\"'",
          "739:             : ''",
          "740:         )",
          "741:         . '/>';",
          "743:     $html_output .= '<label for=\"ssl_type_ANY\"><code>'",
          "744:         . 'REQUIRE SSL'",
          "745:         . '</code></label>';",
          "746:     $html_output .= '</div>';",
          "749:     $html_output .= '<div class=\"item\">';",
          "750:     $html_output .= '<input type=\"radio\" name=\"ssl_type\" id=\"ssl_type_X509\"'",
          "751:         . ' value=\"X509\" title=\"'",
          "752:         . __(",
          "753:             'Requires a valid X509 certificate.'",
          "754:         )",
          "755:         . '\"'",
          "756:         . ((isset($row['ssl_type']) && $row['ssl_type'] == 'X509')",
          "757:             ? ' checked=\"checked\"'",
          "758:             : ''",
          "759:         )",
          "760:         . '/>';",
          "762:     $html_output .= '<label for=\"ssl_type_X509\"><code>'",
          "763:         . 'REQUIRE X509'",
          "764:         . '</code></label>';",
          "765:     $html_output .= '</div>';",
          "769:     $html_output .= '<div class=\"item\">';",
          "770:     $html_output .= '<input type=\"radio\" name=\"ssl_type\" id=\"ssl_type_specified\"'",
          "771:         . ' value=\"SPECIFIED\"' . ($specified ? ' checked=\"checked\"' : '') . '/>';",
          "773:     $html_output .= '<label for=\"ssl_type_specified\"><code>'",
          "774:         . 'SPECIFIED'",
          "775:         . '</code></label>';",
          "776:     $html_output .= '</div>';",
          "778:     $html_output .= '<div id=\"specified_div\" style=\"padding-left:20px;\">';",
          "781:     $html_output .= '<div class=\"item\">';",
          "782:     $html_output .= '<label for=\"text_ssl_cipher\">'",
          "783:         . '<code><dfn title=\"'",
          "784:         . __(",
          "785:             'Requires that a specific cipher method be used for a connection.'",
          "786:         )",
          "787:         . '\">'",
          "788:         . 'REQUIRE CIPHER'",
          "789:         . '</dfn></code></label>';",
          "790:     $html_output .= '<input type=\"text\" name=\"ssl_cipher\" id=\"text_ssl_cipher\" '",
          "791:         . 'value=\"' . (isset($row['ssl_cipher']) ? htmlspecialchars($row['ssl_cipher']) : '') . '\" '",
          "792:         . 'size=80\" title=\"'",
          "793:         . __(",
          "794:             'Requires that a specific cipher method be used for a connection.'",
          "795:         ) . '\"'",
          "796:         . (! $specified ? ' disabled' : '')",
          "797:         . ' />';",
          "798:     $html_output .= '</div>';",
          "801:     $html_output .= '<div class=\"item\">';",
          "802:     $html_output .= '<label for=\"text_x509_issuer\">'",
          "803:         . '<code><dfn title=\"'",
          "804:         . __(",
          "805:             'Requires that a valid X509 certificate issued by this CA be presented.'",
          "806:         )",
          "807:         . '\">'",
          "808:         . 'REQUIRE ISSUER'",
          "809:         . '</dfn></code></label>';",
          "810:     $html_output .= '<input type=\"text\" name=\"x509_issuer\" id=\"text_x509_issuer\" '",
          "811:         . 'value=\"' . (isset($row['x509_issuer']) ? htmlspecialchars($row['x509_issuer']) : '') . '\" '",
          "812:         . 'size=80\" title=\"'",
          "813:         . __(",
          "814:             'Requires that a valid X509 certificate issued by this CA be presented.'",
          "815:         ) . '\"'",
          "816:         . (! $specified ? ' disabled' : '')",
          "817:         . ' />';",
          "818:     $html_output .= '</div>';",
          "821:     $html_output .= '<div class=\"item\">';",
          "822:     $html_output .= '<label for=\"text_x509_subject\">'",
          "823:         . '<code><dfn title=\"'",
          "824:         . __(",
          "825:             'Requires that a valid X509 certificate with this subject be presented.'",
          "826:         )",
          "827:         . '\">'",
          "828:         . 'REQUIRE SUBJECT'",
          "829:         . '</dfn></code></label>';",
          "830:     $html_output .= '<input type=\"text\" name=\"x509_subject\" id=\"text_x509_subject\" '",
          "831:         . 'value=\"' . (isset($row['x509_subject']) ? htmlspecialchars($row['x509_subject']) : '')",
          "832:         . '\" size=80\" title=\"'",
          "833:         . __(",
          "834:             'Requires that a valid X509 certificate with this subject be presented.'",
          "835:         ) . '\"'",
          "836:         . (! $specified ? ' disabled' : '')",
          "837:         . ' />';",
          "838:     $html_output .= '</div>';",
          "840:     $html_output .= '</div>';",
          "842:     $html_output .= '</div>';",
          "843:     $html_output .= '</fieldset>';",
          "",
          "[Added Lines]",
          "703:     $require_options = array(",
          "704:         array(",
          "705:             'name'        => 'ssl_type',",
          "706:             'value'       => 'NONE',",
          "707:             'description' => __(",
          "708:                 'Does not require SSL-encrypted connections.'",
          "709:             ),",
          "710:             'label'       => 'REQUIRE NONE',",
          "711:             'checked'     => ((isset($row['ssl_type'])",
          "712:                 && ($row['ssl_type'] == 'NONE'",
          "713:                     || $row['ssl_type'] == ''))",
          "714:                 ? 'checked=\"checked\"'",
          "715:                 : ''",
          "716:             ),",
          "717:             'disabled'    => false,",
          "718:             'radio'       => true",
          "719:         ),",
          "720:         array(",
          "721:             'name'        => 'ssl_type',",
          "722:             'value'       => 'ANY',",
          "723:             'description' => __(",
          "724:                 'Requires SSL-encrypted connections.'",
          "725:             ),",
          "726:             'label'       => 'REQUIRE SSL',",
          "727:             'checked'     => (isset($row['ssl_type']) && ($row['ssl_type'] == 'ANY')",
          "728:                 ? 'checked=\"checked\"'",
          "729:                 : ''",
          "730:             ),",
          "731:             'disabled'    => false,",
          "732:             'radio'       => true",
          "733:         ),",
          "734:         array(",
          "735:             'name'        => 'ssl_type',",
          "736:             'value'       => 'X509',",
          "737:             'description' => __(",
          "738:                 'Requires a valid X509 certificate.'",
          "739:             ),",
          "740:             'label'       => 'REQUIRE SSL',",
          "741:             'checked'     => (isset($row['ssl_type']) && ($row['ssl_type'] == 'X509')",
          "742:                 ? 'checked=\"checked\"'",
          "743:                 : ''",
          "744:             ),",
          "745:             'disabled'    => false,",
          "746:             'radio'       => true",
          "747:         ),",
          "748:         array(",
          "749:             'name'        => 'ssl_type',",
          "750:             'value'       => 'SPECIFIED',",
          "751:             'description' => '',",
          "752:             'label'       => 'SPECIFIED',",
          "753:             'checked'     => ($specified ? 'checked=\"checked\"' : ''),",
          "754:             'disabled'    => false,",
          "755:             'radio'       => true",
          "756:         ),",
          "757:         array(",
          "758:             'name'        => 'ssl_cipher',",
          "759:             'value'       => (isset($row['ssl_cipher'])",
          "760:                 ? htmlspecialchars($row['ssl_cipher']) : ''",
          "761:             ),",
          "762:             'description' => __(",
          "763:                 'Requires that a specific cipher method be used for a connection.'",
          "764:             ),",
          "765:             'label'       => 'REQUIRE CIPHER',",
          "766:             'checked'     => '',",
          "767:             'disabled'    => ! $specified,",
          "768:             'radio'       => false",
          "769:         ),",
          "770:         array(",
          "771:             'name'        => 'x509_issuer',",
          "772:             'value'       => (isset($row['x509_issuer'])",
          "773:                 ? htmlspecialchars($row['x509_issuer']) : ''",
          "774:             ),",
          "775:             'description' => __(",
          "776:                 'Requires that a valid X509 certificate issued by this CA be presented.'",
          "777:             ),",
          "778:             'label'       => 'REQUIRE ISSUER',",
          "779:             'checked'     => '',",
          "780:             'disabled'    => ! $specified,",
          "781:             'radio'       => false",
          "782:         ),",
          "783:         array(",
          "784:             'name'        => 'x509_subject',",
          "785:             'value'       => (isset($row['x509_subject'])",
          "786:                 ? htmlspecialchars($row['x509_subject']) : ''",
          "787:             ),",
          "788:             'description' => __(",
          "789:                 'Requires that a valid X509 certificate with this subject be presented.'",
          "790:             ),",
          "791:             'label'       => 'REQUIRE SUBJECT',",
          "792:             'checked'     => '',",
          "793:             'disabled'    => ! $specified,",
          "794:             'radio'       => false",
          "795:         ),",
          "796:     );",
          "798:     $html_output = Template::get('privileges/require_options')",
          "799:         ->render(array('require_options' => $require_options));",
          "",
          "---------------"
        ],
        "templates/privileges/require_options.phtml||templates/privileges/require_options.phtml": [
          "File: templates/privileges/require_options.phtml -> templates/privileges/require_options.phtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <fieldset>",
          "2:     <legend>SSL</legend>",
          "3:     <div id=\"require_ssl_div\">",
          "4:         <?php foreach ($require_options as $require_option) : ?>",
          "5:             <?php if ($require_option['name'] === 'ssl_cipher') : ?>",
          "6:                 <div id=\"specified_div\" style=\"padding-left:20px;\">",
          "7:             <?php endif; ?>",
          "8:             <?=",
          "9:                 PMA\\libraries\\Template::get('privileges/require_options_item')->render(",
          "10:                     array('require_option' => $require_option)",
          "11:                 );",
          "12:             ?>",
          "13:         <?php endforeach; ?>",
          "14:         </div> <!-- END specified_div -->",
          "15:     </div> <!-- END require_ssl_div -->",
          "16: </fieldset>",
          "",
          "---------------"
        ],
        "templates/privileges/require_options_item.phtml||templates/privileges/require_options_item.phtml": [
          "File: templates/privileges/require_options_item.phtml -> templates/privileges/require_options_item.phtml",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <div class=\"item\">",
          "2:     <?php if ($require_option['radio']) : ?>",
          "3:         <input type=\"radio\" name=\"ssl_type\"",
          "4:             id=\"<?= $require_option['name'] . '_' . $require_option['value'] ?>\"",
          "5:             title=\"<?= $require_option['description'] ?>\"",
          "6:             value=\"<?= $require_option['value'] ?>\" <?= $require_option['checked']?>",
          "7:         />",
          "8:         <label for=\"<?= $require_option['name'] . '_' . $require_option['value'] ?>\">",
          "9:             <code><?= $require_option['label'] ?></code>",
          "10:         </label>",
          "11:     <?php else : ?>",
          "12:         <label for=\"text_<?= $require_option['name'] ?>\">",
          "13:             <code><?= $require_option['label'] ?></code>",
          "14:         </label>",
          "15:         <input type=\"text\" name=\"<?= $require_option['name'] ?>\"",
          "16:             id=\"text_<?= $require_option['name'] ?>\" value=\"<?= $require_option['value'] ?>\"",
          "17:             size=\"80\" title=\"<?= $require_option['description'] ?>\"",
          "18:             <?php if ($require_option['disabled']) : ?>",
          "19:                 disabled",
          "20:             <?php endif; ?>",
          "21:         />",
          "22:     <?php endif; ?>",
          "23: </div>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "945ec9e9b8b299176278d4630b460971d54093bd",
      "candidate_info": {
        "commit_hash": "945ec9e9b8b299176278d4630b460971d54093bd",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/945ec9e9b8b299176278d4630b460971d54093bd",
        "files": [
          "libraries/server_privileges.lib.php"
        ],
        "message": "Fix XSS on server privileges\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php"
          ],
          "candidate": [
            "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/server_privileges.lib.php||libraries/server_privileges.lib.php": [
          "File: libraries/server_privileges.lib.php -> libraries/server_privileges.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "762:         . 'REQUIRE CIPHER'",
          "763:         . '</dfn></code></label>';",
          "764:     $html_output .= '<input type=\"text\" name=\"ssl_cipher\" id=\"text_ssl_cipher\" '",
          "766:         . 'size=80\" title=\"'",
          "767:         . __(",
          "768:             'Requires that a specific cipher method be used for a connection.'",
          "",
          "[Removed Lines]",
          "765:         . 'value=\"' . (isset($row['ssl_cipher']) ? $row['ssl_cipher'] : '') . '\" '",
          "",
          "[Added Lines]",
          "765:         . 'value=\"' . (isset($row['ssl_cipher']) ? htmlspecialchars($row['ssl_cipher']) : '') . '\" '",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "781:         . 'REQUIRE ISSUER'",
          "782:         . '</dfn></code></label>';",
          "783:     $html_output .= '<input type=\"text\" name=\"x509_issuer\" id=\"text_x509_issuer\" '",
          "785:         . 'size=80\" title=\"'",
          "786:         . __(",
          "787:             'Requires that a valid X509 certificate issued by this CA be presented.'",
          "",
          "[Removed Lines]",
          "784:         . 'value=\"' . (isset($row['x509_issuer']) ? $row['x509_issuer'] : '') . '\" '",
          "",
          "[Added Lines]",
          "784:         . 'value=\"' . (isset($row['x509_issuer']) ? htmlspecialchars($row['x509_issuer']) : '') . '\" '",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "800:         . 'REQUIRE SUBJECT'",
          "801:         . '</dfn></code></label>';",
          "802:     $html_output .= '<input type=\"text\" name=\"x509_subject\" id=\"text_x509_subject\" '",
          "804:         . 'size=80\" title=\"'",
          "805:         . __(",
          "806:             'Requires that a valid X509 certificate with this subject be presented.'",
          "",
          "[Removed Lines]",
          "803:         . 'value=\"' . (isset($row['x509_subject']) ? $row['x509_subject'] : '') . '\" '",
          "",
          "[Added Lines]",
          "803:         . 'value=\"' . (isset($row['x509_subject']) ? htmlspecialchars($row['x509_subject']) : '') . '\" '",
          "",
          "---------------"
        ]
      }
    }
  ]
}