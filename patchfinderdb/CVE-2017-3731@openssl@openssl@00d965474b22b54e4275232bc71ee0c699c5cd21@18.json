{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "87f7c47fdb56fd78823d50ee85095e6e0c17b117",
      "candidate_info": {
        "commit_hash": "87f7c47fdb56fd78823d50ee85095e6e0c17b117",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/87f7c47fdb56fd78823d50ee85095e6e0c17b117",
        "files": [
          "apps/openssl.c"
        ],
        "message": "Fix list -disabled for blake2 alg\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2241)\n(cherry picked from commit 487d3a726a1970e84853434561d88cb4ac212d15)",
        "before_after_code_files": [
          "apps/openssl.c||apps/openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/openssl.c||apps/openssl.c": [
          "File: apps/openssl.c -> apps/openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "548: #ifdef OPENSSL_NO_BF",
          "549:     BIO_puts(bio_out, \"BF\\n\");",
          "550: #endif",
          "552:     BIO_puts(bio_out, \"BLAKE2\\n\");",
          "553: #endif",
          "554: #ifdef OPENSSL_NO_CAMELLIA",
          "",
          "[Removed Lines]",
          "551: #ifndef OPENSSL_NO_BLAKE2",
          "",
          "[Added Lines]",
          "551: #ifdef OPENSSL_NO_BLAKE2",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc76164c7693f57a6ded33a1344f2e8c1d6a0ee6",
      "candidate_info": {
        "commit_hash": "dc76164c7693f57a6ded33a1344f2e8c1d6a0ee6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dc76164c7693f57a6ded33a1344f2e8c1d6a0ee6",
        "files": [
          "crypto/err/err.c",
          "crypto/ui/ui_err.c",
          "crypto/ui/ui_openssl.c",
          "include/openssl/ui.h"
        ],
        "message": "In UI_OpenSSL's open(), generate an error on unknown errno\n\nTTY_get() sometimes surprises us with new errno values to determine if\nwe have a controling terminal or not.  This generated error is a\nhelpful tool to figure out that this was what happened and what the\nunknown value is.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2043)\n(cherry picked from commit 4984448648f69ed4425df68900b1fd6f17c6c271)",
        "before_after_code_files": [
          "crypto/err/err.c||crypto/err/err.c",
          "crypto/ui/ui_err.c||crypto/ui/ui_err.c",
          "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c",
          "include/openssl/ui.h||include/openssl/ui.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/err/err.c||crypto/err/err.c": [
          "File: crypto/err/err.c -> crypto/err/err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     {ERR_PACK(ERR_LIB_TS, 0, 0), \"time stamp routines\"},",
          "53:     {ERR_PACK(ERR_LIB_ENGINE, 0, 0), \"engine routines\"},",
          "54:     {ERR_PACK(ERR_LIB_OCSP, 0, 0), \"OCSP routines\"},",
          "55:     {ERR_PACK(ERR_LIB_FIPS, 0, 0), \"FIPS routines\"},",
          "56:     {ERR_PACK(ERR_LIB_CMS, 0, 0), \"CMS routines\"},",
          "57:     {ERR_PACK(ERR_LIB_HMAC, 0, 0), \"HMAC routines\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:     {ERR_PACK(ERR_LIB_UI, 0, 0), \"UI routines\"},",
          "",
          "---------------"
        ],
        "crypto/ui/ui_err.c||crypto/ui/ui_err.c": [
          "File: crypto/ui/ui_err.c -> crypto/ui/ui_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: static ERR_STRING_DATA UI_str_functs[] = {",
          "22:     {ERR_FUNC(UI_F_GENERAL_ALLOCATE_BOOLEAN), \"general_allocate_boolean\"},",
          "23:     {ERR_FUNC(UI_F_GENERAL_ALLOCATE_PROMPT), \"general_allocate_prompt\"},",
          "24:     {ERR_FUNC(UI_F_UI_CREATE_METHOD), \"UI_create_method\"},",
          "25:     {ERR_FUNC(UI_F_UI_CTRL), \"UI_ctrl\"},",
          "26:     {ERR_FUNC(UI_F_UI_DUP_ERROR_STRING), \"UI_dup_error_string\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:     {ERR_FUNC(UI_F_OPEN_CONSOLE), \"open_console\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:     {ERR_REASON(UI_R_RESULT_TOO_LARGE), \"result too large\"},",
          "46:     {ERR_REASON(UI_R_RESULT_TOO_SMALL), \"result too small\"},",
          "47:     {ERR_REASON(UI_R_UNKNOWN_CONTROL_COMMAND), \"unknown control command\"},",
          "48:     {0, NULL}",
          "49: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:     {ERR_REASON(UI_R_UNKNOWN_TTYGET_ERRNO_VALUE),",
          "50:      \"unknown ttyget errno value\"},",
          "",
          "---------------"
        ],
        "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c": [
          "File: crypto/ui/ui_openssl.c -> crypto/ui/ui_openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <openssl/e_os2.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #include <openssl/err.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "423:             is_a_tty = 0;",
          "424:         else",
          "425: # endif",
          "427:     }",
          "428: #endif",
          "429: #ifdef OPENSSL_SYS_VMS",
          "",
          "[Removed Lines]",
          "426:             return 0;",
          "",
          "[Added Lines]",
          "427:             {",
          "428:                 char tmp_num[10];",
          "429:                 BIO_snprintf(tmp_num, sizeof(tmp_num) - 1, \"%d\", errno);",
          "430:                 UIerr(UI_F_OPEN_CONSOLE, UI_R_UNKNOWN_TTYGET_ERRNO_VALUE);",
          "431:                 ERR_add_error_data(2, \"errno=\", tmp_num);",
          "433:                 return 0;",
          "434:             }",
          "",
          "---------------"
        ],
        "include/openssl/ui.h||include/openssl/ui.h": [
          "File: include/openssl/ui.h -> include/openssl/ui.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "342: # define UI_F_GENERAL_ALLOCATE_BOOLEAN                    108",
          "343: # define UI_F_GENERAL_ALLOCATE_PROMPT                     109",
          "344: # define UI_F_UI_CREATE_METHOD                            112",
          "345: # define UI_F_UI_CTRL                                     111",
          "346: # define UI_F_UI_DUP_ERROR_STRING                         101",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "344: # define UI_F_OPEN_CONSOLE                                114",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "362: # define UI_R_RESULT_TOO_LARGE                            100",
          "363: # define UI_R_RESULT_TOO_SMALL                            101",
          "364: # define UI_R_UNKNOWN_CONTROL_COMMAND                     106",
          "366: #  ifdef  __cplusplus",
          "367: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "366: # define UI_R_UNKNOWN_TTYGET_ERRNO_VALUE                  108",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae45175406f8dbda8cb77abcc9da5374c35a25ba",
      "candidate_info": {
        "commit_hash": "ae45175406f8dbda8cb77abcc9da5374c35a25ba",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ae45175406f8dbda8cb77abcc9da5374c35a25ba",
        "files": [
          "crypto/ct/ct_oct.c"
        ],
        "message": "Fix faulty free\n\nOn error, i2o_SCT_signature() and i2o_SCT() free a pointer that may\nhave wandered off from the start of the allocated block (not currently\ntrue for i2o_SCT_signature(), but has that potential as the code may\nchange.  To avoid this, save away the start of the allocated block and\nfree that instead.\n\nThanks to Guido Vranken for reporting this issue.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2323)\n(cherry picked from commit d85d3c993e322d3e4c3f00be2910faa8c55b40e3)",
        "before_after_code_files": [
          "crypto/ct/ct_oct.c||crypto/ct/ct_oct.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_oct.c||crypto/ct/ct_oct.c": [
          "File: crypto/ct/ct_oct.c -> crypto/ct/ct_oct.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153: int i2o_SCT_signature(const SCT *sct, unsigned char **out)",
          "154: {",
          "155:     size_t len;",
          "158:     if (!SCT_signature_is_complete(sct)) {",
          "159:         CTerr(CT_F_I2O_SCT_SIGNATURE, CT_R_SCT_INVALID_SIGNATURE);",
          "",
          "[Removed Lines]",
          "156:     unsigned char *p = NULL;",
          "",
          "[Added Lines]",
          "156:     unsigned char *p = NULL, *pstart = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "177:             p = *out;",
          "179:         } else {",
          "181:             if (p == NULL) {",
          "182:                 CTerr(CT_F_I2O_SCT_SIGNATURE, ERR_R_MALLOC_FAILURE);",
          "183:                 goto err;",
          "",
          "[Removed Lines]",
          "180:             p = OPENSSL_malloc(len);",
          "",
          "[Added Lines]",
          "180:             pstart = p = OPENSSL_malloc(len);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "194:     return len;",
          "195: err:",
          "197:     return -1;",
          "198: }",
          "200: int i2o_SCT(const SCT *sct, unsigned char **out)",
          "201: {",
          "202:     size_t len;",
          "205:     if (!SCT_is_complete(sct)) {",
          "206:         CTerr(CT_F_I2O_SCT, CT_R_SCT_NOT_SET);",
          "",
          "[Removed Lines]",
          "196:     OPENSSL_free(p);",
          "203:     unsigned char *p = NULL;",
          "",
          "[Added Lines]",
          "196:     OPENSSL_free(pstart);",
          "203:     unsigned char *p = NULL, *pstart = NULL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "224:         p = *out;",
          "226:     } else {",
          "228:         if (p == NULL) {",
          "229:             CTerr(CT_F_I2O_SCT, ERR_R_MALLOC_FAILURE);",
          "230:             goto err;",
          "",
          "[Removed Lines]",
          "227:         p = OPENSSL_malloc(len);",
          "",
          "[Added Lines]",
          "227:         pstart = p = OPENSSL_malloc(len);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "251:     return len;",
          "252: err:",
          "254:     return -1;",
          "255: }",
          "",
          "[Removed Lines]",
          "253:     OPENSSL_free(p);",
          "",
          "[Added Lines]",
          "253:     OPENSSL_free(pstart);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d3020caefb93653b6cbbe0533f77c46e625f269",
      "candidate_info": {
        "commit_hash": "0d3020caefb93653b6cbbe0533f77c46e625f269",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0d3020caefb93653b6cbbe0533f77c46e625f269",
        "files": [
          "doc/crypto/BIO_ctrl.pod",
          "doc/crypto/BIO_set_callback.pod",
          "doc/crypto/EVP_PKEY_keygen.pod",
          "doc/crypto/X509_STORE_CTX_new.pod",
          "doc/crypto/X509_STORE_CTX_set_verify_cb.pod",
          "doc/crypto/X509_STORE_set_verify_cb_func.pod",
          "doc/ssl/SSL_CTX_set_generate_session_id.pod",
          "doc/ssl/SSL_CTX_set_verify.pod",
          "doc/ssl/SSL_extension_supported.pod",
          "include/openssl/ssl.h",
          "util/find-doc-nits.pl"
        ],
        "message": "Doc nits: callback function typedefs\n\nEnhance find-doc-nits to be better about finding typedefs for\ncallback functions.  Fix all nits it now finds.  Added some new\ntypedef names to ssl.h some of which were documented but did not\nexist\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2151)\n(cherry picked from commit 121677b4875b08df99a48d20ab5c26f54782f21d)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h",
          "util/find-doc-nits.pl||util/find-doc-nits.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "262:                                     const unsigned char *in,",
          "263:                                     size_t inlen, int *al, void *parse_arg);",
          "266: # define SSL_OP_LEGACY_SERVER_CONNECT                    0x00000004U",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "266: typedef int (*verify_cb)(int preverify_ok, X509_STORE_CTX *x509_ctx);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1342: void SSL_set_read_ahead(SSL *s, int yes);",
          "1343: __owur int SSL_get_verify_mode(const SSL *s);",
          "1344: __owur int SSL_get_verify_depth(const SSL *s);",
          "1348: void SSL_set_verify_depth(SSL *s, int depth);",
          "1349: void SSL_set_cert_cb(SSL *s, int (*cb) (SSL *ssl, void *arg), void *arg);",
          "1350: # ifndef OPENSSL_NO_RSA",
          "",
          "[Removed Lines]",
          "1345: __owur int (*SSL_get_verify_callback(const SSL *s)) (int, X509_STORE_CTX *);",
          "1346: void SSL_set_verify(SSL *s, int mode,",
          "1347:                     int (*callback) (int ok, X509_STORE_CTX *ctx));",
          "",
          "[Added Lines]",
          "1348: __owur verify_cb SSL_get_verify_callback(const SSL *s);",
          "1349: void SSL_set_verify(SSL *s, int mode, verify_cb callback);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1444: __owur int SSL_CTX_get_verify_mode(const SSL_CTX *ctx);",
          "1445: __owur int SSL_CTX_get_verify_depth(const SSL_CTX *ctx);",
          "1450: void SSL_CTX_set_verify_depth(SSL_CTX *ctx, int depth);",
          "1451: void SSL_CTX_set_cert_verify_callback(SSL_CTX *ctx,",
          "1452:                                       int (*cb) (X509_STORE_CTX *, void *),",
          "",
          "[Removed Lines]",
          "1446: __owur int (*SSL_CTX_get_verify_callback(const SSL_CTX *ctx)) (int,",
          "1447:                                                         X509_STORE_CTX *);",
          "1448: void SSL_CTX_set_verify(SSL_CTX *ctx, int mode,",
          "1449:                         int (*callback) (int, X509_STORE_CTX *));",
          "",
          "[Added Lines]",
          "1448: __owur verify_cb SSL_CTX_get_verify_callback(const SSL_CTX *ctx);",
          "1449: void SSL_CTX_set_verify(SSL_CTX *ctx, int mode, verify_cb callback);",
          "",
          "---------------"
        ],
        "util/find-doc-nits.pl||util/find-doc-nits.pl": [
          "File: util/find-doc-nits.pl -> util/find-doc-nits.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:         my $sym;",
          "71:         $line =~ s/STACK_OF\\([^)]+\\)/int/g;",
          "72:         $line =~ s/__declspec\\([^)]+\\)//;",
          "74:             $sym = $1;",
          "75:         } elsif ( $line =~ /#define ([A-Za-z0-9_]+)/ ) {",
          "76:             $sym = $1;",
          "",
          "[Removed Lines]",
          "73:         if ( $line =~ /typedef.* (\\S+);/ ) {",
          "",
          "[Added Lines]",
          "73:         if ( $line =~ /env (\\S*)=/ ) {",
          "74:             # environment variable env NAME=...",
          "75:             $sym = $1;",
          "76:         } elsif ( $line =~ /typedef.*\\(\\*(\\S+)\\)\\(.*/ ) {",
          "77:             # a callback function: typedef ... (*NAME)(...",
          "78:             $sym = $1;",
          "79:         } elsif ( $line =~ /typedef.* (\\S+);/ ) {",
          "80:             # a simple typedef: typedef ... NAME;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f7452e45a3c3ca4194edb0723f53465e0d788a1",
      "candidate_info": {
        "commit_hash": "3f7452e45a3c3ca4194edb0723f53465e0d788a1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3f7452e45a3c3ca4194edb0723f53465e0d788a1",
        "files": [
          "test/evp_test.c"
        ],
        "message": "Fix the evp_test Ctrl keyword processing\n\nSkip the test if the value after \":\" is a disabled algorithm, rather\nthan failing it\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(cherry picked from commit dfbdf4abb7c62156f36925db95728142c4223225)",
        "before_after_code_files": [
          "test/evp_test.c||test/evp_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/evp_test.c||test/evp_test.c": [
          "File: test/evp_test.c -> test/evp_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1246:     EVP_PKEY_CTX_free(kdata->ctx);",
          "1247: }",
          "1250: {",
          "1251:     int rv;",
          "1252:     char *p, *tmpval;",
          "",
          "[Removed Lines]",
          "1249: static int pkey_test_ctrl(EVP_PKEY_CTX *pctx, const char *value)",
          "",
          "[Added Lines]",
          "1249: static int pkey_test_ctrl(struct evp_test *t, EVP_PKEY_CTX *pctx,",
          "1250:                           const char *value)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1258:     if (p != NULL)",
          "1260:     rv = EVP_PKEY_CTX_ctrl_str(pctx, tmpval, p);",
          "1261:     OPENSSL_free(tmpval);",
          "1262:     return rv > 0;",
          "1263: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1262:     if (p != NULL && rv <= 0 && rv != -2) {",
          "1264:         if (OBJ_sn2nid(p) != NID_undef || OBJ_ln2nid(p) != NID_undef) {",
          "1265:             t->skip = 1;",
          "1266:             rv = 1;",
          "1267:         }",
          "1268:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1271:     if (strcmp(keyword, \"Output\") == 0)",
          "1272:         return test_bin(value, &kdata->output, &kdata->output_len);",
          "1273:     if (strcmp(keyword, \"Ctrl\") == 0)",
          "1275:     return 0;",
          "1276: }",
          "",
          "[Removed Lines]",
          "1274:         return pkey_test_ctrl(kdata->ctx, value);",
          "",
          "[Added Lines]",
          "1282:         return pkey_test_ctrl(t, kdata->ctx, value);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1391:     if (strcmp(keyword, \"SharedSecret\") == 0)",
          "1392:         return test_bin(value, &kdata->output, &kdata->output_len);",
          "1393:     if (strcmp(keyword, \"Ctrl\") == 0)",
          "1395:     return 0;",
          "1396: }",
          "",
          "[Removed Lines]",
          "1394:         return pkey_test_ctrl(kdata->ctx, value);",
          "",
          "[Added Lines]",
          "1402:         return pkey_test_ctrl(t, kdata->ctx, value);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1812:     if (strcmp(keyword, \"Output\") == 0)",
          "1813:         return test_bin(value, &kdata->output, &kdata->output_len);",
          "1814:     if (strncmp(keyword, \"Ctrl\", 4) == 0)",
          "1816:     return 0;",
          "1817: }",
          "",
          "[Removed Lines]",
          "1815:         return pkey_test_ctrl(kdata->ctx, value);",
          "",
          "[Added Lines]",
          "1823:         return pkey_test_ctrl(t, kdata->ctx, value);",
          "",
          "---------------"
        ]
      }
    }
  ]
}