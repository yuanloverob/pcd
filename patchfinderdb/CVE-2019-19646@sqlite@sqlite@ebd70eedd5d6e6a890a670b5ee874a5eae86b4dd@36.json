{
  "cve_id": "CVE-2019-19646",
  "cve_desc": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
  "repo": "sqlite/sqlite",
  "patch_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
  "patch_info": {
    "commit_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/pragma.c",
      "test/gencol1.test"
    ],
    "message": "Fix the NOT NULL verification logic in PRAGMA integrity_check so that it works for generated columns whose value is the result of a comparison operator. Ticket [bd8c280671ba44a7]\n\nFossilOrigin-Name: f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/pragma.c||src/pragma.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/pragma.c||src/pragma.c": [
      "File: src/pragma.c -> src/pragma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1596:           if( j==pTab->iPKey ) continue;",
      "1597:           if( pTab->aCol[j].notNull==0 ) continue;",
      "1598:           sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);",
      "1600:           jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);",
      "1601:           zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,",
      "1602:                               pTab->aCol[j].zName);",
      "",
      "[Removed Lines]",
      "1599:           sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "",
      "[Added Lines]",
      "1599:           if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){",
      "1600:             sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "1601:           }",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
      "329: } {1 {FOREIGN KEY constraint failed}}",
      "331: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331: # 2019-12-09 ticket bd8c280671ba44a7",
      "332: # With generated columns, the sqlite3ExprGetColumnOfTable() routine might",
      "333: # generate a code sequence that does not end with OP_Column.  So check to",
      "334: # make sure that the last instruction generated is an OP_column prior to",
      "335: # applying the OPFLAG_TYPEOFARG optimization to NOT NULL checks in the",
      "336: # PRAGMA integrity_check code.",
      "337: #",
      "338: sqlite3 db :memory:",
      "339: do_execsql_test gencol1-12.10 {",
      "340:   CREATE TABLE t0 (c0, c1 NOT NULL AS (c0==0));",
      "341:   INSERT INTO t0(c0) VALUES (0);",
      "342:   PRAGMA integrity_check;",
      "343: } {ok}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b17ea9123063ef103e177f0578394f951b3524d8",
      "candidate_info": {
        "commit_hash": "b17ea9123063ef103e177f0578394f951b3524d8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b17ea9123063ef103e177f0578394f951b3524d8",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "For the \".archive --update\" command in the CLI, only update files if their mtime or mode has changed.  To force an update, use the new --insert instead.\n\nFossilOrigin-Name: 191a023ae708490eca61b3a42a3df41bb6709079f3905881abb82ebd46182607",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7a0a26ed380dd0bdda50b0204b30b53bbbbc70f278eba02f91541ac6c691aef2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3452:   \".archive ...             Manage SQL archives\",",
          "3453:   \"   Each command must have exactly one of the following options:\",",
          "3454:   \"     -c, --create               Create a new archive\",",
          "3456:   \"     -t, --list                 List contents of archive\",",
          "3457:   \"     -x, --extract              Extract files from archive\",",
          "3458:   \"   Optional arguments:\",",
          "",
          "[Removed Lines]",
          "3455:   \"     -u, --update               Update or add files to an existing archive\",",
          "",
          "[Added Lines]",
          "3455:   \"     -u, --update               Add files or update files with newer mtime\",",
          "3456:   \"     -i, --insert               Like -u but always add even if mtime unchanged\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5389: #define AR_CMD_CREATE       1",
          "5404: static int arProcessSwitch(ArCommand *pAr, int eSwitch, const char *zArg){",
          "5405:   switch( eSwitch ){",
          "",
          "[Removed Lines]",
          "5390: #define AR_CMD_EXTRACT      2",
          "5391: #define AR_CMD_LIST         3",
          "5392: #define AR_CMD_UPDATE       4",
          "5393: #define AR_CMD_HELP         5",
          "5398: #define AR_SWITCH_VERBOSE     6",
          "5399: #define AR_SWITCH_FILE        7",
          "5400: #define AR_SWITCH_DIRECTORY   8",
          "5401: #define AR_SWITCH_APPEND      9",
          "5402: #define AR_SWITCH_DRYRUN     10",
          "",
          "[Added Lines]",
          "5391: #define AR_CMD_UPDATE       2",
          "5392: #define AR_CMD_INSERT       3",
          "5393: #define AR_CMD_EXTRACT      4",
          "5394: #define AR_CMD_LIST         5",
          "5395: #define AR_CMD_HELP         6",
          "5400: #define AR_SWITCH_VERBOSE     7",
          "5401: #define AR_SWITCH_FILE        8",
          "5402: #define AR_SWITCH_DIRECTORY   9",
          "5403: #define AR_SWITCH_APPEND     10",
          "5404: #define AR_SWITCH_DRYRUN     11",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5407:     case AR_CMD_EXTRACT:",
          "5408:     case AR_CMD_LIST:",
          "5409:     case AR_CMD_UPDATE:",
          "5410:     case AR_CMD_HELP:",
          "5411:       if( pAr->eCmd ){",
          "5412:         return arErrorMsg(pAr, \"multiple command options\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5412:     case AR_CMD_INSERT:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5453:   } aSwitch[] = {",
          "5454:     { \"create\",    'c', AR_CMD_CREATE,       0 },",
          "5455:     { \"extract\",   'x', AR_CMD_EXTRACT,      0 },",
          "5456:     { \"list\",      't', AR_CMD_LIST,         0 },",
          "5457:     { \"update\",    'u', AR_CMD_UPDATE,       0 },",
          "5458:     { \"help\",      'h', AR_CMD_HELP,         0 },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5459:     { \"insert\",    'i', AR_CMD_INSERT,       0 },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5822:      \"      WHEN 'd' THEN 0\\n\"",
          "5823:      \"      ELSE -1 END,\\n\"",
          "5824:      \"    sqlar_compress(data)\\n\"",
          "5827:      \"REPLACE INTO %s(name,mode,mtime,data)\\n\"",
          "5828:      \"  SELECT\\n\"",
          "5829:      \"    %s,\\n\"",
          "5830:      \"    mode,\\n\"",
          "5831:      \"    mtime,\\n\"",
          "5832:      \"    data\\n\"",
          "5835:   };",
          "5839:   char *zSql;",
          "5840:   char zTemp[50];",
          "5842:   arExecSql(pAr, \"PRAGMA page_size=512\");",
          "5843:   rc = arExecSql(pAr, \"SAVEPOINT ar;\");",
          "",
          "[Removed Lines]",
          "5825:      \"  FROM fsdir(%Q,%Q)\\n\"",
          "5826:      \"  WHERE lsmode(mode) NOT LIKE '?%%';\",",
          "5833:      \"  FROM fsdir(%Q,%Q)\\n\"",
          "5834:      \"  WHERE lsmode(mode) NOT LIKE '?%%';\"",
          "",
          "[Added Lines]",
          "5837:      \"  FROM fsdir(%Q,%Q) AS disk\\n\"",
          "5838:      \"  WHERE lsmode(mode) NOT LIKE '?%%'%s;\"",
          "5839:      ,",
          "5846:      \"  FROM fsdir(%Q,%Q) AS disk\\n\"",
          "5847:      \"  WHERE lsmode(mode) NOT LIKE '?%%'%s;\"",
          "5854:   char *zExists = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "5868:     }",
          "5869:     rc = arExecSql(pAr, zCreate);",
          "5870:   }",
          "5871:   for(i=0; i<pAr->nArg && rc==SQLITE_OK; i++){",
          "5872:     char *zSql2 = sqlite3_mprintf(zInsertFmt[pAr->bZip], zTab,",
          "5873:         pAr->bVerbose ? \"shell_putsnl(name)\" : \"name\",",
          "5875:     rc = arExecSql(pAr, zSql2);",
          "5876:     sqlite3_free(zSql2);",
          "5877:   }",
          "",
          "[Removed Lines]",
          "5874:         pAr->azArg[i], pAr->zDir);",
          "",
          "[Added Lines]",
          "5885:   if( bOnlyIfChanged ){",
          "5886:     zExists = sqlite3_mprintf(",
          "5887:       \" AND NOT EXISTS(\"",
          "5888:           \"SELECT 1 FROM %s AS mem\"",
          "5889:           \" WHERE mem.name=disk.name\"",
          "5890:           \" AND mem.mtime=disk.mtime\"",
          "5891:           \" AND mem.mode=disk.mode)\", zTab);",
          "5892:   }else{",
          "5893:     zExists = sqlite3_mprintf(\"\");",
          "5894:   }",
          "5895:   if( zExists==0 ) rc = SQLITE_NOMEM;",
          "5899:         pAr->azArg[i], pAr->zDir, zExists);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "5886:       sqlite3_free(zSql);",
          "5887:     }",
          "5888:   }",
          "5889:   return rc;",
          "5890: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5914:   sqlite3_free(zExists);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "5924:     }else if( cmd.zFile ){",
          "5925:       int flags;",
          "5926:       if( cmd.bAppend ) eDbType = SHELL_OPEN_APPENDVFS;",
          "5928:         flags = SQLITE_OPEN_READWRITE|SQLITE_OPEN_CREATE;",
          "5929:       }else{",
          "5930:         flags = SQLITE_OPEN_READONLY;",
          "",
          "[Removed Lines]",
          "5927:       if( cmd.eCmd==AR_CMD_CREATE || cmd.eCmd==AR_CMD_UPDATE ){",
          "",
          "[Added Lines]",
          "5953:       if( cmd.eCmd==AR_CMD_CREATE || cmd.eCmd==AR_CMD_INSERT",
          "5954:            || cmd.eCmd==AR_CMD_UPDATE ){",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5962:     switch( cmd.eCmd ){",
          "5963:       case AR_CMD_CREATE:",
          "5965:         break;",
          "5967:       case AR_CMD_EXTRACT:",
          "",
          "[Removed Lines]",
          "5964:         rc = arCreateOrUpdateCommand(&cmd, 0);",
          "",
          "[Added Lines]",
          "5991:         rc = arCreateOrUpdateCommand(&cmd, 0, 0);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "5976:         arUsage(pState->out);",
          "5977:         break;",
          "5979:       default:",
          "5980:         assert( cmd.eCmd==AR_CMD_UPDATE );",
          "5982:         break;",
          "5983:     }",
          "5984:   }",
          "",
          "[Removed Lines]",
          "5981:         rc = arCreateOrUpdateCommand(&cmd, 1);",
          "",
          "[Added Lines]",
          "6006:       case AR_CMD_INSERT:",
          "6007:         rc = arCreateOrUpdateCommand(&cmd, 1, 0);",
          "6008:         break;",
          "6012:         rc = arCreateOrUpdateCommand(&cmd, 1, 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "656d535ae6cdb6a4857dcb0cd7e8a71c2ddb7ab8",
      "candidate_info": {
        "commit_hash": "656d535ae6cdb6a4857dcb0cd7e8a71c2ddb7ab8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/656d535ae6cdb6a4857dcb0cd7e8a71c2ddb7ab8",
        "files": [
          "VERSION",
          "configure",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Increase the version number to 3.31.0 for the next release cycle.\n\nFossilOrigin-Name: ffd4c30620abe6ba38d82f3db934d18cc8468aaac4cd50a4e01be8910854d3f0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bf875dc59909f9c22f7c1fc843bc4d9e5d97af5cb4ef43c4fa1d566ddfdeaacb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0814acd98177fab44df29ebd24595a93c63eb68d",
      "candidate_info": {
        "commit_hash": "0814acd98177fab44df29ebd24595a93c63eb68d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0814acd98177fab44df29ebd24595a93c63eb68d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "test/zeroblob.test"
        ],
        "message": "Do not accidently truncate zeroblob values when doing an arithmetic operation.  Fix for ticket [bb4bdb9f7f654b0bb9f34cfba].\n\nFossilOrigin-Name: 13f6942eb0da2d92a0830f18640ce64208bd0cd6ff6d0c97e4a4c57ac3d65ba6",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "test/zeroblob.test||test/zeroblob.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 98b3b97573ccb3d986d1552f97f96e15088a598945923adcac77010c1e8b7fe4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "385: static u16 SQLITE_NOINLINE computeNumericType(Mem *pMem){",
          "386:   assert( (pMem->flags & (MEM_Int|MEM_Real))==0 );",
          "387:   assert( (pMem->flags & (MEM_Str|MEM_Blob))!=0 );",
          "388:   if( sqlite3AtoF(pMem->z, &pMem->u.r, pMem->n, pMem->enc)==0 ){",
          "389:     return 0;",
          "390:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388:   ExpandBlob(pMem);",
          "",
          "---------------"
        ],
        "test/zeroblob.test||test/zeroblob.test": [
          "File: test/zeroblob.test -> test/zeroblob.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "317: sqlite3_finalize $stmt",
          "319: test_restore_config_pagecache",
          "320: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "319: # 2019-01-25 https://sqlite.org/src/tktview/bb4bdb9f7f654b0bb9f34cfbac",
          "320: # Zeroblob truncated by an index on expression",
          "321: #",
          "322: do_execsql_test 13.100 {",
          "323:   DROP TABLE IF EXISTS t1;",
          "324:   CREATE TABLE t1(a,b,c);",
          "325:   CREATE INDEX t1bbc ON t1(b, b+c);",
          "326:   INSERT INTO t1(a,b,c) VALUES(1,zeroblob(8),3);",
          "327:   SELECT a, quote(b), length(b), c FROM t1;",
          "328: } {1 X'0000000000000000' 8 3}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "01996dae49cbf5928d44bf0b9c68965e17656f98",
      "candidate_info": {
        "commit_hash": "01996dae49cbf5928d44bf0b9c68965e17656f98",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/01996dae49cbf5928d44bf0b9c68965e17656f98",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pragma.h",
          "tool/mkpragmatab.tcl"
        ],
        "message": "Back out check-in [008112bcef561a8], reenabling deprecated PRAGMAs when the SQLITE_OMIT_DEPRECATED compile-time option is used, because way too many TH3 tests depend on those deprecated PRAGMAs.\n\nFossilOrigin-Name: 9dbf512d1c4627a28d60f4e7238cb100d7a4e11f976139b07ad1c59e9b584c7d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pragma.h||src/pragma.h",
          "tool/mkpragmatab.tcl||tool/mkpragmatab.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4d0a949fd92e19fbf243a2e3a1a7c2cdb111f9a6943949d2420dd846bc7d9285",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pragma.h||src/pragma.h": [
          "File: src/pragma.h -> src/pragma.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "211: #endif",
          "212: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "214:  {/* zName:     */ \"count_changes\",",
          "219: #endif",
          "221: #if !defined(SQLITE_OMIT_PAGER_PRAGMAS) && SQLITE_OS_WIN",
          "222:  {/* zName:     */ \"data_store_directory\",",
          "",
          "[Removed Lines]",
          "213: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "220: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "241: #endif",
          "244:  {/* zName:     */ \"default_cache_size\",",
          "249: #endif",
          "251: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "252: #if !defined(SQLITE_OMIT_FOREIGN_KEY) && !defined(SQLITE_OMIT_TRIGGER)",
          "253:  {/* zName:     */ \"defer_foreign_keys\",",
          "",
          "[Removed Lines]",
          "242: #if !defined(SQLITE_OMIT_PAGER_PRAGMAS)",
          "243: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "250: #endif",
          "",
          "[Added Lines]",
          "240: #if !defined(SQLITE_OMIT_PAGER_PRAGMAS) && !defined(SQLITE_OMIT_DEPRECATED)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "258: #endif",
          "259: #endif",
          "260: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "262:  {/* zName:     */ \"empty_result_callbacks\",",
          "267: #endif",
          "269: #if !defined(SQLITE_OMIT_UTF16)",
          "270:  {/* zName:     */ \"encoding\",",
          "",
          "[Removed Lines]",
          "261: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "268: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "305: #endif",
          "306: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "308:  {/* zName:     */ \"full_column_names\",",
          "316:  {/* zName:     */ \"fullfsync\",",
          "",
          "[Removed Lines]",
          "307: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "313: #endif",
          "314: #endif",
          "315: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "542: #endif",
          "543: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "545:  {/* zName:     */ \"short_column_names\",",
          "551: #endif",
          "552:  {/* zName:     */ \"shrink_memory\",",
          "",
          "[Removed Lines]",
          "544: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "550: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/mkpragmatab.tcl||tool/mkpragmatab.tcl": [
          "File: tool/mkpragmatab.tcl -> tool/mkpragmatab.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   TYPE: FLAG",
          "26:   ARG:  SQLITE_FullColNames",
          "27:   IF:   !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "30:   NAME: short_column_names",
          "31:   TYPE: FLAG",
          "32:   ARG:  SQLITE_ShortColNames",
          "33:   IF:   !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "36:   NAME: count_changes",
          "37:   TYPE: FLAG",
          "38:   ARG:  SQLITE_CountRows",
          "39:   IF:   !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "42:   NAME: empty_result_callbacks",
          "43:   TYPE: FLAG",
          "44:   ARG:  SQLITE_NullCallback",
          "45:   IF:   !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "48:   NAME: legacy_file_format",
          "49:   TYPE: FLAG",
          "",
          "[Removed Lines]",
          "28:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "34:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "40:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "46:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156:   NAME: default_cache_size",
          "157:   FLAG: NeedSchema Result0 SchemaReq NoColumns1",
          "158:   COLS: cache_size",
          "163:   NAME: page_size",
          "164:   FLAG: Result0 SchemaReq NoColumns1",
          "",
          "[Removed Lines]",
          "159:   IF:   !defined(SQLITE_OMIT_PAGER_PRAGMAS)",
          "160:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "",
          "[Added Lines]",
          "155:   IF:   !defined(SQLITE_OMIT_PAGER_PRAGMAS) && !defined(SQLITE_OMIT_DEPRECATED)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "80ac9cb3c034c130957f6f279e8239f6e7bf4ae7",
      "candidate_info": {
        "commit_hash": "80ac9cb3c034c130957f6f279e8239f6e7bf4ae7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/80ac9cb3c034c130957f6f279e8239f6e7bf4ae7",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/loadext.c"
        ],
        "message": "Correctly initialize the loadable extension thunk.\n\nFossilOrigin-Name: 4fca46ded7873d4939d7c6bff363ded41667f2255a4ab624a1a24bebbae733eb",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/loadext.c||src/loadext.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9cac5ac145d62117c918539baaa8a3c124230e031842e35fa1ba59f658c99518",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/loadext.c||src/loadext.c": [
          "File: src/loadext.c -> src/loadext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "455:   sqlite3_create_window_function,",
          "457: #ifdef SQLITE_ENABLE_NORMALIZE",
          "459: #else",
          "461: #endif",
          "462: };",
          "",
          "[Removed Lines]",
          "458:   sqlite3_normalized_sql",
          "460:   0",
          "",
          "[Added Lines]",
          "458:   sqlite3_normalized_sql,",
          "460:   0,",
          "463:   sqlite3_stmt_isexplain,",
          "464:   sqlite3_value_frombind",
          "",
          "---------------"
        ]
      }
    }
  ]
}