{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "649dbbbd833bd29d69d76afa74f5afd453003640",
      "candidate_info": {
        "commit_hash": "649dbbbd833bd29d69d76afa74f5afd453003640",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/649dbbbd833bd29d69d76afa74f5afd453003640",
        "files": [
          "src/node.cc"
        ],
        "message": "Add process.features.isolates",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1986:   obj->Set(String::NewSymbol(\"tls\"),",
          "1987:       Boolean::New(get_builtin_module(\"crypto\") != NULL));",
          "1989:   return scope.Close(obj);",
          "1990: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1990:   obj->Set(String::NewSymbol(\"isolates\"),",
          "1991: #if HAVE_ISOLATES",
          "1992:     True()",
          "1993: #else",
          "1994:     False()",
          "1995: #endif",
          "1996:   );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cccce60b3e9ef2c0cafcc5c5248423900d424a66",
      "candidate_info": {
        "commit_hash": "cccce60b3e9ef2c0cafcc5c5248423900d424a66",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/cccce60b3e9ef2c0cafcc5c5248423900d424a66",
        "files": [
          "tools/installer.js"
        ],
        "message": "installer: don't assume bash is installed\n\nUse `/bin/sh` instead of `bash` when running the relocate.sh script.",
        "before_after_code_files": [
          "tools/installer.js||tools/installer.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/installer.js||tools/installer.js": [
          "File: tools/installer.js -> tools/installer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: function shebang(line, npmDir) {",
          "54:   var script = JSON.stringify(path.join(npmDir, 'scripts/relocate.sh'));",
          "55:   var bin = JSON.stringify(path.join(npmDir, 'bin/npm-cli.js'));",
          "57: }",
          "",
          "[Removed Lines]",
          "56:   queue.push('bash ' + script + ' ' + line);",
          "",
          "[Added Lines]",
          "56:   queue.push('/bin/sh ' + script + ' ' + line);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53f3b128f5efd5fdca2dcab9ff3e5d3e2b9debf1",
      "candidate_info": {
        "commit_hash": "53f3b128f5efd5fdca2dcab9ff3e5d3e2b9debf1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/53f3b128f5efd5fdca2dcab9ff3e5d3e2b9debf1",
        "files": [
          "src/node.h"
        ],
        "message": "node: tag Encode and friends NODE_EXTERN\n\nMakes the symbols visible on Windows. They were already visible on Unices.\n\nFixes #3811.",
        "before_after_code_files": [
          "src/node.h||src/node.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.h||src/node.h": [
          "File: src/node.h -> src/node.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "133: NODE_EXTERN void FatalException(v8::TryCatch &try_catch);",
          "134: void DisplayExceptionLine(v8::TryCatch &try_catch); // hack",
          "149: v8::Local<v8::Object> BuildStatsObject(const uv_statbuf_t* s);",
          "",
          "[Removed Lines]",
          "136: v8::Local<v8::Value> Encode(const void *buf, size_t len,",
          "137:                             enum encoding encoding = BINARY);",
          "140: ssize_t DecodeBytes(v8::Handle<v8::Value>,",
          "141:                     enum encoding encoding = BINARY);",
          "144: ssize_t DecodeWrite(char *buf,",
          "145:                     size_t buflen,",
          "146:                     v8::Handle<v8::Value>,",
          "147:                     enum encoding encoding = BINARY);",
          "",
          "[Added Lines]",
          "136: NODE_EXTERN v8::Local<v8::Value> Encode(const void *buf, size_t len,",
          "137:                                         enum encoding encoding = BINARY);",
          "140: NODE_EXTERN ssize_t DecodeBytes(v8::Handle<v8::Value>,",
          "141:                                 enum encoding encoding = BINARY);",
          "144: NODE_EXTERN ssize_t DecodeWrite(char *buf,",
          "145:                                 size_t buflen,",
          "146:                                 v8::Handle<v8::Value>,",
          "147:                                 enum encoding encoding = BINARY);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "edd3de8feaed468be7be2dfcbeb60aa3c94d65f7",
      "candidate_info": {
        "commit_hash": "edd3de8feaed468be7be2dfcbeb60aa3c94d65f7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/edd3de8feaed468be7be2dfcbeb60aa3c94d65f7",
        "files": [
          "test/simple/test-dgram-broadcast-multi-process.js",
          "test/simple/test-dgram-listen-after-bind.js",
          "test/simple/test-dgram-multicast-multi-process.js",
          "test/simple/test-dgram-multicast-setTTL.js"
        ],
        "message": "test: update dgram tests after API change",
        "before_after_code_files": [
          "test/simple/test-dgram-broadcast-multi-process.js||test/simple/test-dgram-broadcast-multi-process.js",
          "test/simple/test-dgram-listen-after-bind.js||test/simple/test-dgram-listen-after-bind.js",
          "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js",
          "test/simple/test-dgram-multicast-setTTL.js||test/simple/test-dgram-multicast-setTTL.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-dgram-broadcast-multi-process.js||test/simple/test-dgram-broadcast-multi-process.js": [
          "File: test/simple/test-dgram-broadcast-multi-process.js -> test/simple/test-dgram-broadcast-multi-process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "164:   sendSocket.bind(common.PORT, bindAddress);",
          "167:   sendSocket.on('close', function() {",
          "168:     console.error('[PARENT] sendSocket closed');",
          "",
          "[Removed Lines]",
          "165:   sendSocket.setBroadcast(true);",
          "",
          "[Added Lines]",
          "165:   sendSocket.on('listening', function () {",
          "166:     sendSocket.setBroadcast(true);",
          "167:   });",
          "",
          "---------------"
        ],
        "test/simple/test-dgram-listen-after-bind.js||test/simple/test-dgram-listen-after-bind.js": [
          "File: test/simple/test-dgram-listen-after-bind.js -> test/simple/test-dgram-listen-after-bind.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var dgram = require('dgram');",
          "26: var socket = dgram.createSocket('udp4');",
          "28: socket.bind();",
          "30: var fired = false;",
          "31: var timer = setTimeout(function () {",
          "32:   socket.close();",
          "33: }, 100);",
          "35: socket.on('listening', function () {",
          "36:   clearTimeout(timer);",
          "37:   fired = true;",
          "38:   socket.close();",
          "39: });",
          "41: socket.on('close', function () {",
          "42:   assert(fired, 'listening should fire after bind');",
          "43: });",
          "",
          "---------------"
        ],
        "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js": [
          "File: test/simple/test-dgram-multicast-multi-process.js -> test/simple/test-dgram-multicast-multi-process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:   sendSocket.bind();",
          "157:   sendSocket.on('close', function() {",
          "158:     console.error('[PARENT] sendSocket closed');",
          "",
          "[Removed Lines]",
          "152:   sendSocket.setTTL(1);",
          "153:   sendSocket.setBroadcast(true);",
          "154:   sendSocket.setMulticastTTL(1);",
          "155:   sendSocket.setMulticastLoopback(true);",
          "",
          "[Added Lines]",
          "153:   sendSocket.on('listening', function () {",
          "154:     sendSocket.setTTL(1);",
          "155:     sendSocket.setBroadcast(true);",
          "156:     sendSocket.setMulticastTTL(1);",
          "157:     sendSocket.setMulticastLoopback(true);",
          "158:   });",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "222:   listenSocket.bind(common.PORT);",
          "225: }",
          "",
          "[Removed Lines]",
          "224:   listenSocket.addMembership(LOCAL_BROADCAST_HOST);",
          "",
          "[Added Lines]",
          "227:   listenSocket.on('listening', function () {",
          "228:     listenSocket.addMembership(LOCAL_BROADCAST_HOST);",
          "229:   });",
          "",
          "---------------"
        ],
        "test/simple/test-dgram-multicast-setTTL.js||test/simple/test-dgram-multicast-setTTL.js": [
          "File: test/simple/test-dgram-multicast-setTTL.js -> test/simple/test-dgram-multicast-setTTL.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     socket = dgram.createSocket('udp4');",
          "28: socket.bind(common.PORT);",
          "",
          "[Removed Lines]",
          "29: socket.setMulticastTTL(16);",
          "32: try {",
          "33:   socket.setMulticastTTL(1000);",
          "34: } catch (e) {",
          "35:   thrown = true;",
          "36: }",
          "38: assert(thrown, 'Setting an invalid multicast TTL should throw some error');",
          "41: socket.close();",
          "",
          "[Added Lines]",
          "29: socket.on('listening', function () {",
          "30:   socket.setMulticastTTL(16);",
          "33:   try {",
          "34:     socket.setMulticastTTL(1000);",
          "35:   } catch (e) {",
          "36:     thrown = true;",
          "37:   }",
          "39:   assert(thrown, 'Setting an invalid multicast TTL should throw some error');",
          "42:   socket.close();",
          "43: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0660740d9e3cc7487aab46866b7a87f35128b73",
      "candidate_info": {
        "commit_hash": "e0660740d9e3cc7487aab46866b7a87f35128b73",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e0660740d9e3cc7487aab46866b7a87f35128b73",
        "files": [
          "Makefile",
          "doc/changelog-foot.html",
          "doc/changelog-head.html",
          "tools/build-changelog.sh"
        ],
        "message": "Fix #3089 Build changelog.html for website",
        "before_after_code_files": [
          "tools/build-changelog.sh||tools/build-changelog.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/build-changelog.sh||tools/build-changelog.sh": [
          "File: tools/build-changelog.sh -> tools/build-changelog.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/bin/bash",
          "2: cat ChangeLog \\",
          "3:   | sed -E 's|([^/ ]+/[^#]+)#([0-9]+)|[\\1#\\2](https://github.com/\\1/issues/\\2)|g' \\",
          "4:   | sed -E 's| #([0-9]+)| [#\\1](https://github.com/joyent/node/issues/\\1)|g' \\",
          "5:   | sed -E 's|([0-9]+\\.[0-9]+\\.[0-9]+),? Version ([0-9]+\\.[0-9]+\\.[0-9]+)|<a id=\"v\\2\"></a>\\",
          "6: # \\1 Version \\2|g' \\",
          "7:   | sed -E 's|(,? ?)([0-9a-g]{6})[0-9a-g]{34}|\\1[\\2](https://github.com/joyent/node/commit/\\2)|g' \\",
          "8:   | ./node tools/doc/node_modules/.bin/marked > out/doc/changelog-body.html",
          "10: cat doc/changelog-head.html \\",
          "11:     out/doc/changelog-body.html \\",
          "12:     doc/changelog-foot.html \\",
          "13:   | sed -E 's|__VERSION__|v'$(python tools/getnodeversion.py)'|g' \\",
          "14:   > out/doc/changelog.html",
          "16: rm out/doc/changelog-body.html",
          "",
          "---------------"
        ]
      }
    }
  ]
}