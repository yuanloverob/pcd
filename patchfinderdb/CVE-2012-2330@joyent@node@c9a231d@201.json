{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e4a8d2617b49727c4de09ad9ca9bc8fa270adf1e",
      "candidate_info": {
        "commit_hash": "e4a8d2617b49727c4de09ad9ca9bc8fa270adf1e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e4a8d2617b49727c4de09ad9ca9bc8fa270adf1e",
        "files": [
          "src/node.cc",
          "src/node.h",
          "test/addons/at-exit/binding.cc",
          "test/addons/at-exit/binding.gyp",
          "test/addons/at-exit/test.js"
        ],
        "message": "addon: add AtExit() function\n\nLets native addons register exit hooks that run after the event loop has quit\nbut before the VM is killed.\n\nFixes #3147.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "src/node.h||src/node.h",
          "test/addons/at-exit/binding.cc||test/addons/at-exit/binding.cc",
          "test/addons/at-exit/binding.gyp||test/addons/at-exit/binding.gyp",
          "test/addons/at-exit/test.js||test/addons/at-exit/test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2770: }",
          "2773: void EmitExit(v8::Handle<v8::Object> process_l) {",
          "2775:   process_l->Set(String::NewSymbol(\"_exiting\"), True());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2773: struct AtExitCallback {",
          "2774:   AtExitCallback* next_;",
          "2775:   void (*cb_)(void* arg);",
          "2776:   void* arg_;",
          "2777: };",
          "2779: static AtExitCallback* at_exit_functions_;",
          "2782: void RunAtExit() {",
          "2783:   AtExitCallback* p = at_exit_functions_;",
          "2784:   at_exit_functions_ = NULL;",
          "2786:   while (p) {",
          "2787:     AtExitCallback* q = p->next_;",
          "2788:     p->cb_(p->arg_);",
          "2789:     delete p;",
          "2790:     p = q;",
          "2791:   }",
          "2792: }",
          "2795: void AtExit(void (*cb)(void* arg), void* arg) {",
          "2796:   AtExitCallback* p = new AtExitCallback;",
          "2797:   p->cb_ = cb;",
          "2798:   p->arg_ = arg;",
          "2799:   p->next_ = at_exit_functions_;",
          "2800:   at_exit_functions_ = p;",
          "2801: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2850:   uv_run(uv_default_loop());",
          "2852:   EmitExit(process_l);",
          "2854: #ifndef NDEBUG",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2884:   RunAtExit();",
          "",
          "---------------"
        ],
        "src/node.h||src/node.h": [
          "File: src/node.h -> src/node.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "250: #define NODE_MODULE_DECL(modname) \\",
          "251:   extern \"C\" node::node_module_struct modname ## _module;",
          "253: NODE_EXTERN void SetErrno(uv_err_t err);",
          "254: NODE_EXTERN v8::Handle<v8::Value>",
          "255: MakeCallback(const v8::Handle<v8::Object> object,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "256: NODE_EXTERN void AtExit(void (*cb)(void* arg), void* arg = 0);",
          "",
          "---------------"
        ],
        "test/addons/at-exit/binding.cc||test/addons/at-exit/binding.cc": [
          "File: test/addons/at-exit/binding.cc -> test/addons/at-exit/binding.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #undef NDEBUG",
          "2: #include <assert.h>",
          "3: #include <stdlib.h>",
          "4: #include <node.h>",
          "5: #include <v8.h>",
          "7: using node::AtExit;",
          "8: using v8::Handle;",
          "9: using v8::HandleScope;",
          "10: using v8::Local;",
          "11: using v8::Object;",
          "13: static char cookie[] = \"yum yum\";",
          "14: static int at_exit_cb1_called = 0;",
          "15: static int at_exit_cb2_called = 0;",
          "17: static void at_exit_cb1(void* arg) {",
          "18:   HandleScope scope;",
          "19:   assert(arg == 0);",
          "20:   Local<Object> obj = Object::New();",
          "21:   assert(!obj.IsEmpty()); // assert VM is still alive",
          "22:   assert(obj->IsObject());",
          "23:   at_exit_cb1_called++;",
          "24: }",
          "26: static void at_exit_cb2(void* arg) {",
          "27:   assert(arg == static_cast<void*>(cookie));",
          "28:   at_exit_cb2_called++;",
          "29: }",
          "31: static void sanity_check(void) {",
          "32:   assert(at_exit_cb1_called == 1);",
          "33:   assert(at_exit_cb2_called == 2);",
          "34: }",
          "36: void init(Handle<Object> target) {",
          "37:   AtExit(at_exit_cb1);",
          "38:   AtExit(at_exit_cb2, cookie);",
          "39:   AtExit(at_exit_cb2, cookie);",
          "40:   atexit(sanity_check);",
          "41: }",
          "43: NODE_MODULE(binding, init);",
          "",
          "---------------"
        ],
        "test/addons/at-exit/binding.gyp||test/addons/at-exit/binding.gyp": [
          "File: test/addons/at-exit/binding.gyp -> test/addons/at-exit/binding.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: {",
          "2:   'targets': [",
          "3:     {",
          "4:       'target_name': 'binding',",
          "5:       'sources': [ 'binding.cc' ]",
          "6:     }",
          "7:   ]",
          "8: }",
          "",
          "---------------"
        ],
        "test/addons/at-exit/test.js||test/addons/at-exit/test.js": [
          "File: test/addons/at-exit/test.js -> test/addons/at-exit/test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: var binding = require('./build/Release/binding');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3063ba080082ed5f32655b3b61b9ca06842dec31",
      "candidate_info": {
        "commit_hash": "3063ba080082ed5f32655b3b61b9ca06842dec31",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3063ba080082ed5f32655b3b61b9ca06842dec31",
        "files": [
          "src/node_isolate.cc",
          "src/node_isolate.h"
        ],
        "message": "isolates: have node::Isolate manage the v8::Context",
        "before_after_code_files": [
          "src/node_isolate.cc||src/node_isolate.cc",
          "src/node_isolate.h||src/node_isolate.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_isolate.cc||src/node_isolate.cc": [
          "File: src/node_isolate.cc -> src/node_isolate.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   assert(v8_isolate_->GetData() == NULL);",
          "48:   v8_isolate_->SetData(this);",
          "50:   globals_init(&globals_);",
          "51: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:   v8_context_ = v8::Context::New();",
          "51:   v8_context_->Enter();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:     it->callback_(it->arg_);",
          "78:     delete it;",
          "79:   }",
          "80: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:   assert(v8_context_->InContext());",
          "85:   v8_context_->Exit();",
          "86:   v8_context_.Clear();",
          "87:   v8_context_.Dispose();",
          "89:   v8_isolate_->Exit();",
          "90:   v8_isolate_->Dispose();",
          "91:   v8_isolate_ = NULL;",
          "",
          "---------------"
        ],
        "src/node_isolate.h||src/node_isolate.h": [
          "File: src/node_isolate.h -> src/node_isolate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     return v8_isolate_;",
          "63:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:   v8::Handle<v8::Context> GetV8Context() {",
          "66:     NODE_ISOLATE_CHECK(this);",
          "67:     return v8_context_;",
          "68:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:   };",
          "84:   SLIST_HEAD(AtExitCallbacks, AtExitCallbackInfo) at_exit_callbacks_;",
          "85:   v8::Isolate* v8_isolate_;",
          "86:   uv_loop_t* loop_;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:   v8::Persistent<v8::Context> v8_context_;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b673d0670f942d8401fc7f91347b8fdacac05759",
      "candidate_info": {
        "commit_hash": "b673d0670f942d8401fc7f91347b8fdacac05759",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b673d0670f942d8401fc7f91347b8fdacac05759",
        "files": [
          "src/pipe_wrap.cc",
          "src/tcp_wrap.cc",
          "src/tty_wrap.cc"
        ],
        "message": "Net.js: fix UCS2 write crash due to inconsistent naming",
        "before_after_code_files": [
          "src/pipe_wrap.cc||src/pipe_wrap.cc",
          "src/tcp_wrap.cc||src/tcp_wrap.cc",
          "src/tty_wrap.cc||src/tty_wrap.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/pipe_wrap.cc||src/pipe_wrap.cc": [
          "File: src/pipe_wrap.cc -> src/pipe_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:   NODE_SET_PROTOTYPE_METHOD(t, \"writeBuffer\", StreamWrap::WriteBuffer);",
          "106:   NODE_SET_PROTOTYPE_METHOD(t, \"writeAsciiString\", StreamWrap::WriteAsciiString);",
          "107:   NODE_SET_PROTOTYPE_METHOD(t, \"writeUtf8String\", StreamWrap::WriteUtf8String);",
          "110:   NODE_SET_PROTOTYPE_METHOD(t, \"bind\", Bind);",
          "111:   NODE_SET_PROTOTYPE_METHOD(t, \"listen\", Listen);",
          "",
          "[Removed Lines]",
          "108:   NODE_SET_PROTOTYPE_METHOD(t, \"writeUtf16String\", StreamWrap::WriteUcs2String);",
          "",
          "[Added Lines]",
          "108:   NODE_SET_PROTOTYPE_METHOD(t, \"writeUcs2String\", StreamWrap::WriteUcs2String);",
          "",
          "---------------"
        ],
        "src/tcp_wrap.cc||src/tcp_wrap.cc": [
          "File: src/tcp_wrap.cc -> src/tcp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:   NODE_SET_PROTOTYPE_METHOD(t, \"writeBuffer\", StreamWrap::WriteBuffer);",
          "116:   NODE_SET_PROTOTYPE_METHOD(t, \"writeAsciiString\", StreamWrap::WriteAsciiString);",
          "117:   NODE_SET_PROTOTYPE_METHOD(t, \"writeUtf8String\", StreamWrap::WriteUtf8String);",
          "120:   NODE_SET_PROTOTYPE_METHOD(t, \"bind\", Bind);",
          "121:   NODE_SET_PROTOTYPE_METHOD(t, \"listen\", Listen);",
          "",
          "[Removed Lines]",
          "118:   NODE_SET_PROTOTYPE_METHOD(t, \"writeUtf16String\", StreamWrap::WriteUcs2String);",
          "",
          "[Added Lines]",
          "118:   NODE_SET_PROTOTYPE_METHOD(t, \"writeUcs2String\", StreamWrap::WriteUcs2String);",
          "",
          "---------------"
        ],
        "src/tty_wrap.cc||src/tty_wrap.cc": [
          "File: src/tty_wrap.cc -> src/tty_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     NODE_SET_PROTOTYPE_METHOD(t, \"writeBuffer\", StreamWrap::WriteBuffer);",
          "78:     NODE_SET_PROTOTYPE_METHOD(t, \"writeAsciiString\", StreamWrap::WriteAsciiString);",
          "79:     NODE_SET_PROTOTYPE_METHOD(t, \"writeUtf8String\", StreamWrap::WriteUtf8String);",
          "82:     NODE_SET_PROTOTYPE_METHOD(t, \"getWindowSize\", TTYWrap::GetWindowSize);",
          "83:     NODE_SET_PROTOTYPE_METHOD(t, \"setRawMode\", SetRawMode);",
          "",
          "[Removed Lines]",
          "80:     NODE_SET_PROTOTYPE_METHOD(t, \"writeUtf16String\", StreamWrap::WriteUcs2String);",
          "",
          "[Added Lines]",
          "80:     NODE_SET_PROTOTYPE_METHOD(t, \"writeUcs2String\", StreamWrap::WriteUcs2String);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af90faf198ff92a0b42e6f7bac033f0cb7f47aac",
      "candidate_info": {
        "commit_hash": "af90faf198ff92a0b42e6f7bac033f0cb7f47aac",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/af90faf198ff92a0b42e6f7bac033f0cb7f47aac",
        "files": [
          "deps/v8/build/common.gypi"
        ],
        "message": "Patches floating on V8",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:             'cflags': [ '-I/usr/pkg/include' ],",
          "315:           }],",
          "316:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "318:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "319:           }],",
          "320:         ],",
          "",
          "[Removed Lines]",
          "317:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "317:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:           }],  # OS==\"mac\"",
          "362:           ['OS==\"win\"', {",
          "363:             'msvs_configuration_attributes': {",
          "365:               'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "366:               'CharacterSet': '1',",
          "367:             },",
          "",
          "[Removed Lines]",
          "364:               'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b4d05979118b028f6d198ee1782c1b48a0ea8fc",
      "candidate_info": {
        "commit_hash": "4b4d05979118b028f6d198ee1782c1b48a0ea8fc",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4b4d05979118b028f6d198ee1782c1b48a0ea8fc",
        "files": [
          "lib/tls.js"
        ],
        "message": "tls: make `tls.connect` accept port and host in `options`\n\nPrevious API used form:\n\n    tls.connect(443, \"google.com\", options, ...)\n\nnow it's replaced with:\n\n    tls.connect({port: 443, host: \"google.com\", ...}, ...)\n\nIt simplifies argument parsing in `tls.connect` and makes the API\nconsistent with other parts.\n\nFixes #1983.",
        "before_after_code_files": [
          "lib/tls.js||litls.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1031:     }",
          "1032:   }",
          "1034:   var socket = new net.Stream();",
          "",
          "[Removed Lines]",
          "1015: exports.connect = function(port /* host, options, cb */) {",
          "1017:   var host, options = {}, cb;",
          "1018:   for (var i = 1; i < arguments.length; i++) {",
          "1019:     switch (typeof arguments[i]) {",
          "1020:       case 'string':",
          "1021:         host = arguments[i];",
          "1022:         break;",
          "1024:       case 'object':",
          "1025:         options = arguments[i];",
          "1026:         break;",
          "1028:       case 'function':",
          "1029:         cb = arguments[i];",
          "1030:         break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1040:                             options.rejectUnauthorized === true ? true : false,",
          "1041:                             {",
          "1042:                               NPNProtocols: this.NPNProtocols,",
          "1044:                             });",
          "1046:   if (options.session) {",
          "",
          "[Removed Lines]",
          "1043:                               servername: options.servername || host",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1052:     cleartext.on('secureConnect', cb);",
          "1053:   }",
          "1057:   pair.on('secure', function() {",
          "1058:     var verifyError = pair.ssl.verifyError();",
          "",
          "[Removed Lines]",
          "1055:   socket.connect(port, host);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}