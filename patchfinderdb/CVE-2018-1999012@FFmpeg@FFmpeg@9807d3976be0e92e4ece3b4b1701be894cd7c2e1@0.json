{
  "cve_id": "CVE-2018-1999012",
  "cve_desc": "FFmpeg before commit 9807d3976be0e92e4ece3b4b1701be894cd7c2e1 contains a CWE-835: Infinite loop vulnerability in pva format demuxer that can result in a Vulnerability that allows attackers to consume excessive amount of resources like CPU and RAM. This attack appear to be exploitable via specially crafted PVA file has to be provided as input. This vulnerability appears to have been fixed in 9807d3976be0e92e4ece3b4b1701be894cd7c2e1 and later.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "9807d3976be0e92e4ece3b4b1701be894cd7c2e1",
  "patch_info": {
    "commit_hash": "9807d3976be0e92e4ece3b4b1701be894cd7c2e1",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/9807d3976be0e92e4ece3b4b1701be894cd7c2e1",
    "files": [
      "libavformat/pva.c"
    ],
    "message": "avformat/pva: Check for EOF before retrying in read_part_of_packet()\n\nFixes: Infinite loop\nFixes: pva-4b1835dbc2027bf3c567005dcc78e85199240d06\n\nFound-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavformat/pva.c||libavformat/pva.c"
    ]
  },
  "patch_diff": {
    "libavformat/pva.c||libavformat/pva.c": [
      "File: libavformat/pva.c -> libavformat/pva.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "134:             pes_flags              = avio_rb16(pb);",
      "135:             pes_header_data_length = avio_r8(pb);",
      "137:             if (pes_signal != 1 || pes_header_data_length == 0) {",
      "138:                 pva_log(s, AV_LOG_WARNING, \"expected non empty signaled PES packet, \"",
      "139:                                           \"trying to recover\\n\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "137:             if (avio_feof(pb)) {",
      "138:                 return AVERROR_EOF;",
      "139:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e82a06d2bef568124860090e2ec0b0de887c40a1",
      "candidate_info": {
        "commit_hash": "e82a06d2bef568124860090e2ec0b0de887c40a1",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/e82a06d2bef568124860090e2ec0b0de887c40a1",
        "files": [
          "libavformat/pva.c"
        ],
        "message": "avformat/pva: Check for EOF before retrying in read_part_of_packet()\n\nFixes: Infinite loop\nFixes: pva-4b1835dbc2027bf3c567005dcc78e85199240d06\n\nFound-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 9807d3976be0e92e4ece3b4b1701be894cd7c2e1)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/pva.c||libavformat/pva.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/pva.c||libavformat/pva.c"
          ],
          "candidate": [
            "libavformat/pva.c||libavformat/pva.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/pva.c||libavformat/pva.c": [
          "File: libavformat/pva.c -> libavformat/pva.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:             pes_flags              = avio_rb16(pb);",
          "135:             pes_header_data_length = avio_r8(pb);",
          "137:             if (pes_signal != 1 || pes_header_data_length == 0) {",
          "138:                 pva_log(s, AV_LOG_WARNING, \"expected non empty signaled PES packet, \"",
          "139:                                           \"trying to recover\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137:             if (avio_feof(pb)) {",
          "138:                 return AVERROR_EOF;",
          "139:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6cadf46dff14139ff2e5cf3276eb3ad58fb080e1",
      "candidate_info": {
        "commit_hash": "6cadf46dff14139ff2e5cf3276eb3ad58fb080e1",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6cadf46dff14139ff2e5cf3276eb3ad58fb080e1",
        "files": [
          "libavformat/pva.c"
        ],
        "message": "avformat/pva: Check for EOF before retrying in read_part_of_packet()\n\nFixes: Infinite loop\nFixes: pva-4b1835dbc2027bf3c567005dcc78e85199240d06\n\nFound-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 9807d3976be0e92e4ece3b4b1701be894cd7c2e1)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/pva.c||libavformat/pva.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/pva.c||libavformat/pva.c"
          ],
          "candidate": [
            "libavformat/pva.c||libavformat/pva.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/pva.c||libavformat/pva.c": [
          "File: libavformat/pva.c -> libavformat/pva.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:             pes_flags              = avio_rb16(pb);",
          "135:             pes_header_data_length = avio_r8(pb);",
          "137:             if (pes_signal != 1 || pes_header_data_length == 0) {",
          "138:                 pva_log(s, AV_LOG_WARNING, \"expected non empty signaled PES packet, \"",
          "139:                                           \"trying to recover\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137:             if (avio_feof(pb)) {",
          "138:                 return AVERROR_EOF;",
          "139:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "717ece29fd497500ef0315d1841fa7bd0640f53c",
      "candidate_info": {
        "commit_hash": "717ece29fd497500ef0315d1841fa7bd0640f53c",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/717ece29fd497500ef0315d1841fa7bd0640f53c",
        "files": [
          "libavformat/pva.c"
        ],
        "message": "avformat/pva: Check for EOF before retrying in read_part_of_packet()\n\nFixes: Infinite loop\nFixes: pva-4b1835dbc2027bf3c567005dcc78e85199240d06\n\nFound-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 9807d3976be0e92e4ece3b4b1701be894cd7c2e1)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/pva.c||libavformat/pva.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/pva.c||libavformat/pva.c"
          ],
          "candidate": [
            "libavformat/pva.c||libavformat/pva.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/pva.c||libavformat/pva.c": [
          "File: libavformat/pva.c -> libavformat/pva.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:             pes_flags              = avio_rb16(pb);",
          "135:             pes_header_data_length = avio_r8(pb);",
          "137:             if (pes_signal != 1 || pes_header_data_length == 0) {",
          "138:                 pva_log(s, AV_LOG_WARNING, \"expected non empty signaled PES packet, \"",
          "139:                                           \"trying to recover\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137:             if (avio_feof(pb)) {",
          "138:                 return AVERROR_EOF;",
          "139:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f4b82cc3a879f5d3f9a4738bfd7d93757221958",
      "candidate_info": {
        "commit_hash": "6f4b82cc3a879f5d3f9a4738bfd7d93757221958",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/6f4b82cc3a879f5d3f9a4738bfd7d93757221958",
        "files": [
          "libavformat/pva.c"
        ],
        "message": "avformat/pva: Check for EOF before retrying in read_part_of_packet()\n\nFixes: Infinite loop\nFixes: pva-4b1835dbc2027bf3c567005dcc78e85199240d06\n\nFound-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 9807d3976be0e92e4ece3b4b1701be894cd7c2e1)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/pva.c||libavformat/pva.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/pva.c||libavformat/pva.c"
          ],
          "candidate": [
            "libavformat/pva.c||libavformat/pva.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/pva.c||libavformat/pva.c": [
          "File: libavformat/pva.c -> libavformat/pva.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:             pes_flags              = avio_rb16(pb);",
          "135:             pes_header_data_length = avio_r8(pb);",
          "137:             if (pes_signal != 1 || pes_header_data_length == 0) {",
          "138:                 pva_log(s, AV_LOG_WARNING, \"expected non empty signaled PES packet, \"",
          "139:                                           \"trying to recover\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137:             if (avio_feof(pb)) {",
          "138:                 return AVERROR_EOF;",
          "139:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c75b8c9733efce84304a2dcec1bbfe806ab2e90f",
      "candidate_info": {
        "commit_hash": "c75b8c9733efce84304a2dcec1bbfe806ab2e90f",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/c75b8c9733efce84304a2dcec1bbfe806ab2e90f",
        "files": [
          "libavformat/pva.c"
        ],
        "message": "avformat/pva: Check for EOF before retrying in read_part_of_packet()\n\nFixes: Infinite loop\nFixes: pva-4b1835dbc2027bf3c567005dcc78e85199240d06\n\nFound-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 9807d3976be0e92e4ece3b4b1701be894cd7c2e1)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/pva.c||libavformat/pva.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/pva.c||libavformat/pva.c"
          ],
          "candidate": [
            "libavformat/pva.c||libavformat/pva.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/pva.c||libavformat/pva.c": [
          "File: libavformat/pva.c -> libavformat/pva.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:             pes_flags              = avio_rb16(pb);",
          "135:             pes_header_data_length = avio_r8(pb);",
          "137:             if (pes_signal != 1 || pes_header_data_length == 0) {",
          "138:                 pva_log(s, AV_LOG_WARNING, \"expected non empty signaled PES packet, \"",
          "139:                                           \"trying to recover\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137:             if (avio_feof(pb)) {",
          "138:                 return AVERROR_EOF;",
          "139:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}