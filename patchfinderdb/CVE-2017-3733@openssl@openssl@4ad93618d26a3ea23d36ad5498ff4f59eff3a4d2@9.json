{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c1f138c194d7d7dddb74c3a41215e8de638d7a26",
      "candidate_info": {
        "commit_hash": "c1f138c194d7d7dddb74c3a41215e8de638d7a26",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c1f138c194d7d7dddb74c3a41215e8de638d7a26",
        "files": [
          "ssl/statem/statem_clnt.c"
        ],
        "message": "Only call memcpy when the length is larger than 0.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nGH: #2050\n(cherry picked from commit a19fc66a6b5f99ad00305e152bdb41460d728640)",
        "before_after_code_files": [
          "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
          "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1022:         s->session->ssl_version = s->version;",
          "1023:         s->session->session_id_length = session_id_len;",
          "1027:     }",
          "",
          "[Removed Lines]",
          "1025:         memcpy(s->session->session_id, PACKET_data(&session_id),",
          "1026:                session_id_len);",
          "",
          "[Added Lines]",
          "1025:         if (session_id_len > 0)",
          "1026:             memcpy(s->session->session_id, PACKET_data(&session_id),",
          "1027:                    session_id_len);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6db2b1490e5da1255f4158dc8c2d4a2dd87cbe7b",
      "candidate_info": {
        "commit_hash": "6db2b1490e5da1255f4158dc8c2d4a2dd87cbe7b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6db2b1490e5da1255f4158dc8c2d4a2dd87cbe7b",
        "files": [
          "apps/rehash.c"
        ],
        "message": "Check for the presence of _WIN32 rather than its value.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2727)\n(cherry picked from commit 46958a043d51633ed36bcfb13ff048a3381366a6)",
        "before_after_code_files": [
          "apps/rehash.c||apps/rehash.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/rehash.c||apps/rehash.c": [
          "File: apps/rehash.c -> apps/rehash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "287: {",
          "288:     if (*path != '\\0')",
          "289:         path += strlen(path) - 1;",
          "291:     if (*path == ']' || *path == '>' || *path == ':')",
          "292:         return 1;",
          "294:     if (*path == '\\\\')",
          "295:         return 1;",
          "296: # endif",
          "",
          "[Removed Lines]",
          "290: # ifdef __VMS",
          "293: # elif _WIN32",
          "",
          "[Added Lines]",
          "290: # if defined __VMS",
          "293: # elif defined _WIN32",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f251d20a5c40cb9b6d30dfec005bb4ead3d5b0f",
      "candidate_info": {
        "commit_hash": "0f251d20a5c40cb9b6d30dfec005bb4ead3d5b0f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0f251d20a5c40cb9b6d30dfec005bb4ead3d5b0f",
        "files": [
          "crypto/chacha/asm/chacha-x86.pl"
        ],
        "message": "chacha/asm/chacha-x86.pl: improve [backward] portability.\n\nIn order to minimize dependency on assembler version a number of\npost-SSE2 instructions are encoded manually. But in order to simplify\nthe procedure only register operands are considered. Non-register\noperands are passed down to assembler. Module in question uses pshufb\nwith memory operands, and old [GNU] assembler can't handle it.\nFortunately in this case it's possible skip just the problematic\nsegment without skipping SSSE3 support altogether.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit d89773d659129368a341df746476da445d47ad31)",
        "before_after_code_files": [
          "crypto/chachasm/chacha-x86.pl||crypto/chacha/asm/chacha-x86.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/chachasm/chacha-x86.pl||crypto/chacha/asm/chacha-x86.pl": [
          "File: crypto/chachasm/chacha-x86.pl -> crypto/chacha/asm/chacha-x86.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:   ($gasver=$1)>=2.19); # first version supporting AVX",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "468: if (defined($gasver) && $gasver>=2.17) {  # even though we encode",
          "469:        # pshufb manually, we",
          "470:        # handle only register",
          "471:        # operands, while this",
          "472:        # segment uses memory",
          "473:        # operand...",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "655: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cbc8a839959418d8a2c2e3ec6bdf394852c9501e",
      "candidate_info": {
        "commit_hash": "cbc8a839959418d8a2c2e3ec6bdf394852c9501e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/cbc8a839959418d8a2c2e3ec6bdf394852c9501e",
        "files": [
          "crypto/evp/m_md5_sha1.c",
          "crypto/evp/m_sha1.c"
        ],
        "message": "Fix ctrl operation for SHA1/MD5SHA1.\n\nThis makes S/MIME and CMS signing in MIME format for SHA1 work again.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit a5abd438f85737ffa56320b67c5ef5525fc495c3)",
        "before_after_code_files": [
          "crypto/evp/m_md5_sha1.c||crypto/evp/m_md5_sha1.c",
          "crypto/evp/m_sha1.c||crypto/evp/m_sha1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/m_md5_sha1.c||crypto/evp/m_md5_sha1.c": [
          "File: crypto/evp/m_md5_sha1.c -> crypto/evp/m_md5_sha1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     unsigned char padtmp[48];",
          "53:     unsigned char md5tmp[MD5_DIGEST_LENGTH];",
          "54:     unsigned char sha1tmp[SHA_DIGEST_LENGTH];",
          "57:     if (cmd != EVP_CTRL_SSL3_MASTER_SECRET)",
          "58:         return 0;",
          "61:     if (mslen != 48)",
          "62:         return 0;",
          "",
          "[Removed Lines]",
          "55:     struct md5_sha1_ctx *mctx = EVP_MD_CTX_md_data(ctx);",
          "",
          "[Added Lines]",
          "55:     struct md5_sha1_ctx *mctx;",
          "58:         return -2;",
          "60:     if (ctx == NULL)",
          "63:     mctx = EVP_MD_CTX_md_data(ctx);",
          "",
          "---------------"
        ],
        "crypto/evp/m_sha1.c||crypto/evp/m_sha1.c": [
          "File: crypto/evp/m_sha1.c -> crypto/evp/m_sha1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:     unsigned char padtmp[40];",
          "37:     unsigned char sha1tmp[SHA_DIGEST_LENGTH];",
          "41:     if (cmd != EVP_CTRL_SSL3_MASTER_SECRET)",
          "42:         return 0;",
          "45:     if (mslen != 48)",
          "46:         return 0;",
          "",
          "[Removed Lines]",
          "39:     SHA_CTX *sha1 = EVP_MD_CTX_md_data(ctx);",
          "",
          "[Added Lines]",
          "39:     SHA_CTX *sha1;",
          "42:         return -2;",
          "44:     if (ctx == NULL)",
          "47:     sha1 = EVP_MD_CTX_md_data(ctx);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "83b90e40d312ef9f189990293e253b3c1e7e92a1",
      "candidate_info": {
        "commit_hash": "83b90e40d312ef9f189990293e253b3c1e7e92a1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/83b90e40d312ef9f189990293e253b3c1e7e92a1",
        "files": [
          "crypto/dsa/dsa_err.c",
          "crypto/dsa/dsa_gen.c",
          "include/openssl/dsa.h"
        ],
        "message": "dsa/dsa_gen: add error message for seed_len < 0\n\nprio openssl 1.1.0 seed_len < q was accepted and the seed argument was\nthen ignored. Now DSA_generate_parameters_ex() returns an error in such\na case but no error string.\n\nSigned-off-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1657)\n(cherry picked from commit af5474126546b558b0e6f8be4bec4b70977e24b7)",
        "before_after_code_files": [
          "crypto/dsdsa_err.c||crypto/dsa/dsa_err.c",
          "crypto/dsdsa_gen.c||crypto/dsa/dsa_gen.c",
          "include/openssl/dsa.h||include/openssl/dsa.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dsdsa_err.c||crypto/dsa/dsa_err.c": [
          "File: crypto/dsdsa_err.c -> crypto/dsa/dsa_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:     {ERR_FUNC(DSA_F_DSA_BUILTIN_PARAMGEN), \"dsa_builtin_paramgen\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:     {ERR_REASON(DSA_R_SEED_LEN_SMALL),",
          "60:      \"seed_len is less than the length of q\"},",
          "",
          "---------------"
        ],
        "crypto/dsdsa_gen.c||crypto/dsa/dsa_gen.c": [
          "File: crypto/dsdsa_gen.c -> crypto/dsa/dsa_gen.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:         if (seed_len < (size_t)qsize) {",
          "78:             DSAerr(DSA_F_DSA_BUILTIN_PARAMGEN, DSA_R_SEED_LEN_SMALL);",
          "80:         }",
          "",
          "---------------"
        ],
        "include/openssl/dsa.h||include/openssl/dsa.h": [
          "File: include/openssl/dsa.h -> include/openssl/dsa.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "274: # define DSA_R_NO_PARAMETERS_SET                          107",
          "275: # define DSA_R_PARAMETER_ENCODING_ERROR                   105",
          "276: # define DSA_R_Q_NOT_PRIME                                113",
          "278: #  ifdef  __cplusplus",
          "279: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "277: # define DSA_R_SEED_LEN_SMALL                             110",
          "",
          "---------------"
        ]
      }
    }
  ]
}