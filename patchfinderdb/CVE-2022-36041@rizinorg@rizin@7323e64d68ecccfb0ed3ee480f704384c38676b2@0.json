{
  "cve_id": "CVE-2022-36041",
  "cve_desc": "Rizin is a UNIX-like reverse engineering framework and command-line toolset. Versions 0.4.0 and prior are vulnerable to an out-of-bounds write when parsing Mach-O files. A user opening a malicious Mach-O file could be affected by this vulnerability, allowing an attacker to execute code on the user's machine. Commit number 7323e64d68ecccfb0ed3ee480f704384c38676b2 contains a patch.",
  "repo": "rizinorg/rizin",
  "patch_hash": "7323e64d68ecccfb0ed3ee480f704384c38676b2",
  "patch_info": {
    "commit_hash": "7323e64d68ecccfb0ed3ee480f704384c38676b2",
    "repo": "rizinorg/rizin",
    "commit_url": "https://github.com/rizinorg/rizin/commit/7323e64d68ecccfb0ed3ee480f704384c38676b2",
    "files": [
      "librz/bin/format/mach0/mach0.c"
    ],
    "message": "fix #2956 - oob write in mach0.c",
    "before_after_code_files": [
      "librz/bin/format/mach0/mach0.c||librz/bin/format/mach0/mach0.c"
    ]
  },
  "patch_diff": {
    "librz/bin/format/mach0/mach0.c||librz/bin/format/mach0/mach0.c": [
      "File: librz/bin/format/mach0/mach0.c -> librz/bin/format/mach0/mach0.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1597:       cur_seg->page_size = ps;",
      "1598:       cur_seg->page_count = ((bin->segs[seg_idx].vmsize + (ps - 1)) & ~(ps - 1)) / ps;",
      "1599:       if (cur_seg->page_count > 0) {",
      "1601:        if (!cur_seg->page_start) {",
      "1602:         break;",
      "1603:        }",
      "",
      "[Removed Lines]",
      "1600:        cur_seg->page_start = malloc(sizeof(ut16) * cur_seg->page_count);",
      "",
      "[Added Lines]",
      "1600:        cur_seg->page_start = RZ_NEWS0(ut16, cur_seg->page_count);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1607:     }",
      "1608:     if (cur_seg) {",
      "1609:      ut32 page_index = (ut32)(seg_off / ps);",
      "1612:       cur_seg->page_start[page_index] = seg_off & 0xfff;",
      "1613:      }",
      "1614:     }",
      "",
      "[Removed Lines]",
      "1610:      size_t maxsize = cur_seg->page_count * sizeof(ut16);",
      "1611:      if (page_index < maxsize) {",
      "",
      "[Added Lines]",
      "1610:      if (page_index < cur_seg->page_count) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "eeaf7c6a6fc64516fee82a4f0b8fbc1141e03d50",
      "candidate_info": {
        "commit_hash": "eeaf7c6a6fc64516fee82a4f0b8fbc1141e03d50",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/eeaf7c6a6fc64516fee82a4f0b8fbc1141e03d50",
        "files": [
          "librz/bin/format/mach0/mach0.c"
        ],
        "message": "fix #2956 - oob write in mach0.c",
        "before_after_code_files": [
          "librz/bin/format/mach0/mach0.c||librz/bin/format/mach0/mach0.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "librz/bin/format/mach0/mach0.c||librz/bin/format/mach0/mach0.c"
          ],
          "candidate": [
            "librz/bin/format/mach0/mach0.c||librz/bin/format/mach0/mach0.c"
          ]
        }
      },
      "candidate_diff": {
        "librz/bin/format/mach0/mach0.c||librz/bin/format/mach0/mach0.c": [
          "File: librz/bin/format/mach0/mach0.c -> librz/bin/format/mach0/mach0.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1597:       cur_seg->page_size = ps;",
          "1598:       cur_seg->page_count = ((bin->segs[seg_idx].vmsize + (ps - 1)) & ~(ps - 1)) / ps;",
          "1599:       if (cur_seg->page_count > 0) {",
          "1601:        if (!cur_seg->page_start) {",
          "1602:         break;",
          "1603:        }",
          "",
          "[Removed Lines]",
          "1600:        cur_seg->page_start = malloc(sizeof(ut16) * cur_seg->page_count);",
          "",
          "[Added Lines]",
          "1600:        cur_seg->page_start = RZ_NEWS0(ut16, cur_seg->page_count);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1607:     }",
          "1608:     if (cur_seg) {",
          "1609:      ut32 page_index = (ut32)(seg_off / ps);",
          "1612:       cur_seg->page_start[page_index] = seg_off & 0xfff;",
          "1613:      }",
          "1614:     }",
          "",
          "[Removed Lines]",
          "1610:      size_t maxsize = cur_seg->page_count * sizeof(ut16);",
          "1611:      if (page_index < maxsize) {",
          "",
          "[Added Lines]",
          "1610:      if (page_index < cur_seg->page_count) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "348b1447d1452f978b69631d6de5b08dd3bdf79d",
      "candidate_info": {
        "commit_hash": "348b1447d1452f978b69631d6de5b08dd3bdf79d",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/348b1447d1452f978b69631d6de5b08dd3bdf79d",
        "files": [
          "librz/bin/format/mach0/mach0.c"
        ],
        "message": "fix #2956 - oob write in mach0.c",
        "before_after_code_files": [
          "librz/bin/format/mach0/mach0.c||librz/bin/format/mach0/mach0.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "librz/bin/format/mach0/mach0.c||librz/bin/format/mach0/mach0.c"
          ],
          "candidate": [
            "librz/bin/format/mach0/mach0.c||librz/bin/format/mach0/mach0.c"
          ]
        }
      },
      "candidate_diff": {
        "librz/bin/format/mach0/mach0.c||librz/bin/format/mach0/mach0.c": [
          "File: librz/bin/format/mach0/mach0.c -> librz/bin/format/mach0/mach0.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1597:       cur_seg->page_size = ps;",
          "1598:       cur_seg->page_count = ((bin->segs[seg_idx].vmsize + (ps - 1)) & ~(ps - 1)) / ps;",
          "1599:       if (cur_seg->page_count > 0) {",
          "1601:        if (!cur_seg->page_start) {",
          "1602:         break;",
          "1603:        }",
          "",
          "[Removed Lines]",
          "1600:        cur_seg->page_start = malloc(sizeof(ut16) * cur_seg->page_count);",
          "",
          "[Added Lines]",
          "1600:        cur_seg->page_start = RZ_NEWS0(ut16, cur_seg->page_count);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1607:     }",
          "1608:     if (cur_seg) {",
          "1609:      ut32 page_index = (ut32)(seg_off / ps);",
          "1612:       cur_seg->page_start[page_index] = seg_off & 0xfff;",
          "1613:      }",
          "1614:     }",
          "",
          "[Removed Lines]",
          "1610:      size_t maxsize = cur_seg->page_count * sizeof(ut16);",
          "1611:      if (page_index < maxsize) {",
          "",
          "[Added Lines]",
          "1610:      if (page_index < cur_seg->page_count) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}