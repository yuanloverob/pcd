{
  "cve_id": "CVE-2016-2858",
  "cve_desc": "QEMU, when built with the Pseudo Random Number Generator (PRNG) back-end support, allows local guest OS users to cause a denial of service (process crash) via an entropy request, which triggers arbitrary stack based allocation and memory corruption.",
  "repo": "qemu/qemu",
  "patch_hash": "60253ed1e6ec6d8e5ef2efe7bf755f475dce9956",
  "patch_info": {
    "commit_hash": "60253ed1e6ec6d8e5ef2efe7bf755f475dce9956",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/60253ed1e6ec6d8e5ef2efe7bf755f475dce9956",
    "files": [
      "backends/rng-egd.c",
      "backends/rng-random.c",
      "backends/rng.c",
      "include/sysemu/rng.h"
    ],
    "message": "rng: add request queue support to rng-random\n\nRequests are now created in the RngBackend parent class and the\ncode path is shared by both rng-egd and rng-random.\n\nThis commit fixes the rng-random implementation which processed\nonly one request at a time and simply discarded all but the most\nrecent one. In the guest this manifested as delayed completion\nof reads from virtio-rng, i.e. a read was completed only after\nanother read was issued.\n\nBy switching rng-random to use the same request queue as rng-egd,\nthe unsafe stack-based allocation of the entropy buffer is\neliminated and replaced with g_malloc.\n\nSigned-off-by: Ladi Prosek <lprosek@redhat.com>\nReviewed-by: Amit Shah <amit.shah@redhat.com>\nMessage-Id: <1456994238-9585-5-git-send-email-lprosek@redhat.com>\nSigned-off-by: Amit Shah <amit.shah@redhat.com>",
    "before_after_code_files": [
      "backends/rng-egd.c||backends/rng-egd.c",
      "backends/rng-random.c||backends/rng-random.c",
      "backends/rng.c||backends/rng.c",
      "include/sysemu/rng.h||include/sysemu/rng.h"
    ]
  },
  "patch_diff": {
    "backends/rng-egd.c||backends/rng-egd.c": [
      "File: backends/rng-egd.c -> backends/rng-egd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27:     char *chr_name;",
      "28: } RngEgd;",
      "33: {",
      "34:     RngEgd *s = RNG_EGD(b);",
      "45:     while (size > 0) {",
      "46:         uint8_t header[2];",
      "",
      "[Removed Lines]",
      "30: static void rng_egd_request_entropy(RngBackend *b, size_t size,",
      "31:                                     EntropyReceiveFunc *receive_entropy,",
      "32:                                     void *opaque)",
      "35:     RngRequest *req;",
      "37:     req = g_malloc(sizeof(*req));",
      "39:     req->offset = 0;",
      "40:     req->size = size;",
      "41:     req->receive_entropy = receive_entropy;",
      "42:     req->opaque = opaque;",
      "43:     req->data = g_malloc(req->size);",
      "",
      "[Added Lines]",
      "30: static void rng_egd_request_entropy(RngBackend *b, RngRequest *req)",
      "33:     size_t size = req->size;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "55:         size -= len;",
      "56:     }",
      "59: }",
      "61: static int rng_egd_chr_can_read(void *opaque)",
      "",
      "[Removed Lines]",
      "58:     s->parent.requests = g_slist_append(s->parent.requests, req);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "backends/rng-random.c||backends/rng-random.c": [
      "File: backends/rng-random.c -> backends/rng-random.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:     int fd;",
      "24:     char *filename;",
      "29: };",
      "",
      "[Removed Lines]",
      "26:     EntropyReceiveFunc *receive_func;",
      "27:     void *opaque;",
      "28:     size_t size;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "38: static void entropy_available(void *opaque)",
      "39: {",
      "40:     RndRandom *s = RNG_RANDOM(opaque);",
      "53:     qemu_set_fd_handler(s->fd, NULL, NULL, NULL);",
      "54: }",
      "59: {",
      "60:     RndRandom *s = RNG_RANDOM(b);",
      "64:     }",
      "71: }",
      "73: static void rng_random_opened(RngBackend *b, Error **errp)",
      "",
      "[Removed Lines]",
      "41:     uint8_t buffer[s->size];",
      "42:     ssize_t len;",
      "44:     len = read(s->fd, buffer, s->size);",
      "45:     if (len < 0 && errno == EAGAIN) {",
      "46:         return;",
      "47:     }",
      "48:     g_assert(len != -1);",
      "50:     s->receive_func(s->opaque, buffer, len);",
      "51:     s->receive_func = NULL;",
      "56: static void rng_random_request_entropy(RngBackend *b, size_t size,",
      "57:                                         EntropyReceiveFunc *receive_entropy,",
      "58:                                         void *opaque)",
      "62:     if (s->receive_func) {",
      "63:         s->receive_func(s->opaque, NULL, 0);",
      "66:     s->receive_func = receive_entropy;",
      "67:     s->opaque = opaque;",
      "68:     s->size = size;",
      "70:     qemu_set_fd_handler(s->fd, entropy_available, NULL, s);",
      "",
      "[Added Lines]",
      "38:     while (s->parent.requests != NULL) {",
      "39:         RngRequest *req = s->parent.requests->data;",
      "40:         ssize_t len;",
      "42:         len = read(s->fd, req->data, req->size);",
      "43:         if (len < 0 && errno == EAGAIN) {",
      "44:             return;",
      "45:         }",
      "46:         g_assert(len != -1);",
      "48:         req->receive_entropy(req->opaque, req->data, len);",
      "50:         rng_backend_finalize_request(&s->parent, req);",
      "51:     }",
      "57: static void rng_random_request_entropy(RngBackend *b, RngRequest *req)",
      "61:     if (s->parent.requests == NULL) {",
      "64:         qemu_set_fd_handler(s->fd, entropy_available, NULL, s);",
      "",
      "---------------"
    ],
    "backends/rng.c||backends/rng.c": [
      "File: backends/rng.c -> backends/rng.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "20:                                  void *opaque)",
      "21: {",
      "22:     RngBackendClass *k = RNG_BACKEND_GET_CLASS(s);",
      "24:     if (k->request_entropy) {",
      "26:     }",
      "27: }",
      "",
      "[Removed Lines]",
      "25:         k->request_entropy(s, size, receive_entropy, opaque);",
      "",
      "[Added Lines]",
      "23:     RngRequest *req;",
      "26:         req = g_malloc(sizeof(*req));",
      "28:         req->offset = 0;",
      "29:         req->size = size;",
      "30:         req->receive_entropy = receive_entropy;",
      "31:         req->opaque = opaque;",
      "32:         req->data = g_malloc(req->size);",
      "34:         k->request_entropy(s, req);",
      "36:         s->requests = g_slist_append(s->requests, req);",
      "",
      "---------------"
    ],
    "include/sysemu/rng.h||include/sysemu/rng.h": [
      "File: include/sysemu/rng.h -> include/sysemu/rng.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "45: {",
      "46:     ObjectClass parent_class;",
      "51:     void (*opened)(RngBackend *s, Error **errp);",
      "52: };",
      "",
      "[Removed Lines]",
      "48:     void (*request_entropy)(RngBackend *s, size_t size,",
      "49:                             EntropyReceiveFunc *receive_entropy, void *opaque);",
      "",
      "[Added Lines]",
      "48:     void (*request_entropy)(RngBackend *s, RngRequest *req);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3c52ddcdc548e7fbe65112d8a7bdc9cd105b4750",
      "candidate_info": {
        "commit_hash": "3c52ddcdc548e7fbe65112d8a7bdc9cd105b4750",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/3c52ddcdc548e7fbe65112d8a7bdc9cd105b4750",
        "files": [
          "backends/rng-egd.c",
          "backends/rng.c",
          "include/sysemu/rng.h"
        ],
        "message": "rng: remove the unused request cancellation code\n\nrng_backend_cancel_requests had no callers and none of the code\ndeleted in this commit ever ran.\n\nSigned-off-by: Ladi Prosek <lprosek@redhat.com>\nReviewed-by: Amit Shah <amit.shah@redhat.com>\nMessage-Id: <1456994238-9585-2-git-send-email-lprosek@redhat.com>\nSigned-off-by: Amit Shah <amit.shah@redhat.com>",
        "before_after_code_files": [
          "backends/rng-egd.c||backends/rng-egd.c",
          "backends/rng.c||backends/rng.c",
          "include/sysemu/rng.h||include/sysemu/rng.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "backends/rng-egd.c||backends/rng-egd.c",
            "backends/rng.c||backends/rng.c",
            "include/sysemu/rng.h||include/sysemu/rng.h"
          ],
          "candidate": [
            "backends/rng-egd.c||backends/rng-egd.c",
            "backends/rng.c||backends/rng.c",
            "include/sysemu/rng.h||include/sysemu/rng.h"
          ]
        }
      },
      "candidate_diff": {
        "backends/rng-egd.c||backends/rng-egd.c": [
          "File: backends/rng-egd.c -> backends/rng-egd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:     s->requests = NULL;",
          "126: }",
          "139: static void rng_egd_opened(RngBackend *b, Error **errp)",
          "140: {",
          "141:     RngEgd *s = RNG_EGD(b);",
          "",
          "[Removed Lines]",
          "128: static void rng_egd_cancel_requests(RngBackend *b)",
          "129: {",
          "130:     RngEgd *s = RNG_EGD(b);",
          "136:     rng_egd_free_requests(s);",
          "137: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "213:     RngBackendClass *rbc = RNG_BACKEND_CLASS(klass);",
          "215:     rbc->request_entropy = rng_egd_request_entropy;",
          "217:     rbc->opened = rng_egd_opened;",
          "218: }",
          "",
          "[Removed Lines]",
          "216:     rbc->cancel_requests = rng_egd_cancel_requests;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "backends/rng.c||backends/rng.c": [
          "File: backends/rng.c -> backends/rng.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     }",
          "27: }",
          "38: static bool rng_backend_prop_get_opened(Object *obj, Error **errp)",
          "39: {",
          "40:     RngBackend *s = RNG_BACKEND(obj);",
          "",
          "[Removed Lines]",
          "29: void rng_backend_cancel_requests(RngBackend *s)",
          "30: {",
          "31:     RngBackendClass *k = RNG_BACKEND_GET_CLASS(s);",
          "33:     if (k->cancel_requests) {",
          "34:         k->cancel_requests(s);",
          "35:     }",
          "36: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/sysemu/rng.h||include/sysemu/rng.h": [
          "File: include/sysemu/rng.h -> include/sysemu/rng.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     void (*request_entropy)(RngBackend *s, size_t size,",
          "39:                             EntropyReceiveFunc *receive_entropy, void *opaque);",
          "42:     void (*opened)(RngBackend *s, Error **errp);",
          "43: };",
          "",
          "[Removed Lines]",
          "40:     void (*cancel_requests)(RngBackend *s);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68: void rng_backend_request_entropy(RngBackend *s, size_t size,",
          "69:                                  EntropyReceiveFunc *receive_entropy,",
          "70:                                  void *opaque);",
          "81: #endif",
          "",
          "[Removed Lines]",
          "80: void rng_backend_cancel_requests(RngBackend *s);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "443590c2044968a97f5e7cddd35100c6075856a4",
      "candidate_info": {
        "commit_hash": "443590c2044968a97f5e7cddd35100c6075856a4",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/443590c2044968a97f5e7cddd35100c6075856a4",
        "files": [
          "backends/rng-egd.c",
          "backends/rng-random.c",
          "backends/rng.c",
          "include/sysemu/rng.h"
        ],
        "message": "rng: switch request queue to QSIMPLEQ\n\nQSIMPLEQ supports appending to tail in O(1) and is intrusive so\nit doesn't require extra memory allocations for the bookkeeping\ndata.\n\nSuggested-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Ladi Prosek <lprosek@redhat.com>\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>\nReviewed-by: Amit Shah <amit.shah@redhat.com>\nMessage-Id: <1457010971-24771-1-git-send-email-lprosek@redhat.com>\nSigned-off-by: Amit Shah <amit.shah@redhat.com>",
        "before_after_code_files": [
          "backends/rng-egd.c||backends/rng-egd.c",
          "backends/rng-random.c||backends/rng-random.c",
          "backends/rng.c||backends/rng.c",
          "include/sysemu/rng.h||include/sysemu/rng.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "backends/rng-egd.c||backends/rng-egd.c",
            "backends/rng-random.c||backends/rng-random.c",
            "backends/rng.c||backends/rng.c",
            "include/sysemu/rng.h||include/sysemu/rng.h"
          ],
          "candidate": [
            "backends/rng-egd.c||backends/rng-egd.c",
            "backends/rng-random.c||backends/rng-random.c",
            "backends/rng.c||backends/rng.c",
            "include/sysemu/rng.h||include/sysemu/rng.h"
          ]
        }
      },
      "candidate_diff": {
        "backends/rng-egd.c||backends/rng-egd.c": [
          "File: backends/rng-egd.c -> backends/rng-egd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: static int rng_egd_chr_can_read(void *opaque)",
          "50: {",
          "51:     RngEgd *s = RNG_EGD(opaque);",
          "53:     int size = 0;",
          "57:         size += req->size - req->offset;",
          "58:     }",
          "",
          "[Removed Lines]",
          "52:     GSList *i;",
          "55:     for (i = s->parent.requests; i; i = i->next) {",
          "56:         RngRequest *req = i->data;",
          "",
          "[Added Lines]",
          "52:     RngRequest *req;",
          "55:     QSIMPLEQ_FOREACH(req, &s->parent.requests, next) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:     RngEgd *s = RNG_EGD(opaque);",
          "66:     size_t buf_offset = 0;",
          "70:         int len = MIN(size, req->size - req->offset);",
          "72:         memcpy(req->data + req->offset, buf + buf_offset, len);",
          "",
          "[Removed Lines]",
          "68:     while (size > 0 && s->parent.requests) {",
          "69:         RngRequest *req = s->parent.requests->data;",
          "",
          "[Added Lines]",
          "67:     while (size > 0 && !QSIMPLEQ_EMPTY(&s->parent.requests)) {",
          "68:         RngRequest *req = QSIMPLEQ_FIRST(&s->parent.requests);",
          "",
          "---------------"
        ],
        "backends/rng-random.c||backends/rng-random.c": [
          "File: backends/rng-random.c -> backends/rng-random.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: {",
          "36:     RndRandom *s = RNG_RANDOM(opaque);",
          "40:         ssize_t len;",
          "42:         len = read(s->fd, req->data, req->size);",
          "",
          "[Removed Lines]",
          "38:     while (s->parent.requests != NULL) {",
          "39:         RngRequest *req = s->parent.requests->data;",
          "",
          "[Added Lines]",
          "38:     while (!QSIMPLEQ_EMPTY(&s->parent.requests)) {",
          "39:         RngRequest *req = QSIMPLEQ_FIRST(&s->parent.requests);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58: {",
          "59:     RndRandom *s = RNG_RANDOM(b);",
          "64:         qemu_set_fd_handler(s->fd, entropy_available, NULL, s);",
          "",
          "[Removed Lines]",
          "61:     if (s->parent.requests == NULL) {",
          "",
          "[Added Lines]",
          "61:     if (QSIMPLEQ_EMPTY(&s->parent.requests)) {",
          "",
          "---------------"
        ],
        "backends/rng.c||backends/rng.c": [
          "File: backends/rng.c -> backends/rng.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:         k->request_entropy(s, req);",
          "37:     }",
          "38: }",
          "",
          "[Removed Lines]",
          "36:         s->requests = g_slist_append(s->requests, req);",
          "",
          "[Added Lines]",
          "36:         QSIMPLEQ_INSERT_TAIL(&s->requests, req, next);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84: static void rng_backend_free_requests(RngBackend *s)",
          "85: {",
          "90:     }",
          "94: }",
          "96: void rng_backend_finalize_request(RngBackend *s, RngRequest *req)",
          "97: {",
          "99:     rng_backend_free_request(req);",
          "100: }",
          "102: static void rng_backend_init(Object *obj)",
          "103: {",
          "104:     object_property_add_bool(obj, \"opened\",",
          "105:                              rng_backend_prop_get_opened,",
          "106:                              rng_backend_prop_set_opened,",
          "",
          "[Removed Lines]",
          "86:     GSList *i;",
          "88:     for (i = s->requests; i; i = i->next) {",
          "89:         rng_backend_free_request(i->data);",
          "92:     g_slist_free(s->requests);",
          "93:     s->requests = NULL;",
          "98:     s->requests = g_slist_remove(s->requests, req);",
          "",
          "[Added Lines]",
          "86:     RngRequest *req, *next;",
          "88:     QSIMPLEQ_FOREACH_SAFE(req, &s->requests, next, next) {",
          "89:         rng_backend_free_request(req);",
          "92:     QSIMPLEQ_INIT(&s->requests);",
          "97:     QSIMPLEQ_REMOVE(&s->requests, req, RngRequest, next);",
          "103:     RngBackend *s = RNG_BACKEND(obj);",
          "105:     QSIMPLEQ_INIT(&s->requests);",
          "",
          "---------------"
        ],
        "include/sysemu/rng.h||include/sysemu/rng.h": [
          "File: include/sysemu/rng.h -> include/sysemu/rng.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:     void *opaque;",
          "40:     size_t offset;",
          "41:     size_t size;",
          "42: };",
          "44: struct RngBackendClass",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:     QSIMPLEQ_ENTRY(RngRequest) next;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:     bool opened;",
          "60: };",
          "",
          "[Removed Lines]",
          "59:     GSList *requests;",
          "",
          "[Added Lines]",
          "60:     QSIMPLEQ_HEAD(requests, RngRequest) requests;",
          "",
          "---------------"
        ]
      }
    }
  ]
}