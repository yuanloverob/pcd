{
  "cve_id": "CVE-2016-10010",
  "cve_desc": "sshd in OpenSSH before 7.4, when privilege separation is not used, creates forwarded Unix-domain sockets as root, which might allow local users to gain privileges via unspecified vectors, related to serverloop.c.",
  "repo": "openbsd/src",
  "patch_hash": "c76fac666ea038753294f2ac94d310f8adece9ce",
  "patch_info": {
    "commit_hash": "c76fac666ea038753294f2ac94d310f8adece9ce",
    "repo": "openbsd/src",
    "commit_url": "https://github.com/openbsd/src/commit/c76fac666ea038753294f2ac94d310f8adece9ce",
    "files": [
      "usr.bin/ssh/serverloop.c"
    ],
    "message": "disable Unix-domain socket forwarding when privsep is disabled",
    "before_after_code_files": [
      "usr.bin/ssh/serverloop.c||usr.bin/ssh/serverloop.c"
    ]
  },
  "patch_diff": {
    "usr.bin/ssh/serverloop.c||usr.bin/ssh/serverloop.c": [
      "File: usr.bin/ssh/serverloop.c -> usr.bin/ssh/serverloop.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "474:  if ((options.allow_streamlocal_forwarding & FORWARD_LOCAL) != 0 &&",
      "476:   c = channel_connect_to_path(target,",
      "477:       \"direct-streamlocal@openssh.com\", \"direct-streamlocal\");",
      "478:  } else {",
      "",
      "[Removed Lines]",
      "475:      !no_port_forwarding_flag && !options.disable_forwarding) {",
      "",
      "[Added Lines]",
      "475:      !no_port_forwarding_flag && !options.disable_forwarding &&",
      "476:      use_privsep) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "750:   if ((options.allow_streamlocal_forwarding & FORWARD_REMOTE) == 0",
      "752:    success = 0;",
      "753:    packet_send_debug(\"Server has disabled port forwarding.\");",
      "754:   } else {",
      "",
      "[Removed Lines]",
      "751:       || no_port_forwarding_flag || options.disable_forwarding) {",
      "",
      "[Added Lines]",
      "752:       || no_port_forwarding_flag || options.disable_forwarding ||",
      "753:       !use_privsep) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ec623de64c9c000eb65cea91e20b19d7c2f0f247",
      "candidate_info": {
        "commit_hash": "ec623de64c9c000eb65cea91e20b19d7c2f0f247",
        "repo": "openbsd/src",
        "commit_url": "https://github.com/openbsd/src/commit/ec623de64c9c000eb65cea91e20b19d7c2f0f247",
        "files": [
          "usr.bin/ssh/serverloop.c"
        ],
        "message": "unbreak Unix domain socket forwarding for root; ok markus@",
        "before_after_code_files": [
          "usr.bin/ssh/serverloop.c||usr.bin/ssh/serverloop.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "usr.bin/ssh/serverloop.c||usr.bin/ssh/serverloop.c"
          ],
          "candidate": [
            "usr.bin/ssh/serverloop.c||usr.bin/ssh/serverloop.c"
          ]
        }
      },
      "candidate_diff": {
        "usr.bin/ssh/serverloop.c||usr.bin/ssh/serverloop.c": [
          "File: usr.bin/ssh/serverloop.c -> usr.bin/ssh/serverloop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "461:  Channel *c = NULL;",
          "462:  char *target, *originator;",
          "463:  u_short originator_port;",
          "465:  target = packet_get_string(NULL);",
          "466:  originator = packet_get_string(NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "464:  struct passwd *pw = the_authctxt->pw;",
          "466:  if (pw == NULL || !the_authctxt->valid)",
          "467:   fatal(\"server_input_global_request: no/invalid user\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "474:  if ((options.allow_streamlocal_forwarding & FORWARD_LOCAL) != 0 &&",
          "475:      !no_port_forwarding_flag && !options.disable_forwarding &&",
          "477:   c = channel_connect_to_path(target,",
          "478:       \"direct-streamlocal@openssh.com\", \"direct-streamlocal\");",
          "479:  } else {",
          "",
          "[Removed Lines]",
          "476:      use_privsep) {",
          "",
          "[Added Lines]",
          "480:      (pw->pw_uid == 0 || use_privsep)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "690:  int want_reply;",
          "691:  int r, success = 0, allocated_listen_port = 0;",
          "692:  struct sshbuf *resp = NULL;",
          "694:  rtype = packet_get_string(NULL);",
          "695:  want_reply = packet_get_char();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "697:  struct passwd *pw = the_authctxt->pw;",
          "699:  if (pw == NULL || !the_authctxt->valid)",
          "700:   fatal(\"server_input_global_request: no/invalid user\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "699:  if (strcmp(rtype, \"tcpip-forward\") == 0) {",
          "701:   struct Forward fwd;",
          "706:   memset(&fwd, 0, sizeof(fwd));",
          "707:   fwd.listen_host = packet_get_string(NULL);",
          "708:   fwd.listen_port = (u_short)packet_get_int();",
          "",
          "[Removed Lines]",
          "700:   struct passwd *pw;",
          "703:   pw = the_authctxt->pw;",
          "704:   if (pw == NULL || !the_authctxt->valid)",
          "705:    fatal(\"server_input_global_request: no/invalid user\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "751:   if ((options.allow_streamlocal_forwarding & FORWARD_REMOTE) == 0",
          "752:       || no_port_forwarding_flag || options.disable_forwarding ||",
          "754:    success = 0;",
          "756:   } else {",
          "758:    success = channel_setup_remote_fwd_listener(",
          "",
          "[Removed Lines]",
          "753:       !use_privsep) {",
          "755:    packet_send_debug(\"Server has disabled port forwarding.\");",
          "",
          "[Added Lines]",
          "757:       (pw->pw_uid != 0 && !use_privsep)) {",
          "759:    packet_send_debug(\"Server has disabled \"",
          "760:        \"streamlocal forwarding.\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bba1ec4c1e326f67b2ff84f542d993f520876a57",
      "candidate_info": {
        "commit_hash": "bba1ec4c1e326f67b2ff84f542d993f520876a57",
        "repo": "openbsd/src",
        "commit_url": "https://github.com/openbsd/src/commit/bba1ec4c1e326f67b2ff84f542d993f520876a57",
        "files": [
          "usr.bin/ssh/servconf.c",
          "usr.bin/ssh/servconf.h",
          "usr.bin/ssh/serverloop.c",
          "usr.bin/ssh/session.c",
          "usr.bin/ssh/sshd_config.5"
        ],
        "message": "Add a sshd_config DisableForwaring option that disables X11, agent, TCP, tunnel and Unix domain socket forwarding, as well as anything else we might implement in the future.\n\nThis, like the 'restrict' authorized_keys flag, is intended to be a\nsimple and future-proof way of restricting an account. Suggested as\na complement to 'restrict' by Jann Horn; ok markus@",
        "before_after_code_files": [
          "usr.bin/ssh/servconf.c||usr.bin/ssh/servconf.c",
          "usr.bin/ssh/servconf.h||usr.bin/ssh/servconf.h",
          "usr.bin/ssh/serverloop.c||usr.bin/ssh/serverloop.c",
          "usr.bin/ssh/session.c||usr.bin/ssh/session.c",
          "usr.bin/ssh/sshd_config.5||usr.bin/ssh/sshd_config.5"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "usr.bin/ssh/serverloop.c||usr.bin/ssh/serverloop.c"
          ],
          "candidate": [
            "usr.bin/ssh/serverloop.c||usr.bin/ssh/serverloop.c"
          ]
        }
      },
      "candidate_diff": {
        "usr.bin/ssh/servconf.c||usr.bin/ssh/servconf.c": [
          "File: usr.bin/ssh/servconf.c -> usr.bin/ssh/servconf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:  options->ip_qos_bulk = -1;",
          "154:  options->version_addendum = NULL;",
          "155:  options->fingerprint_hash = -1;",
          "156: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156:  options->disable_forwarding = -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "313:   options->fwd_opts.streamlocal_bind_unlink = 0;",
          "314:  if (options->fingerprint_hash == -1)",
          "315:   options->fingerprint_hash = SSH_FP_HASH_DEFAULT;",
          "317:  assemble_algorithms(options);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "317:  if (options->disable_forwarding == -1)",
          "318:   options->disable_forwarding = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:  sAuthorizedKeysCommand, sAuthorizedKeysCommandUser,",
          "385:  sAuthenticationMethods, sHostKeyAgent, sPermitUserRC,",
          "386:  sStreamLocalBindMask, sStreamLocalBindUnlink,",
          "388:  sDeprecated, sIgnore, sUnsupported",
          "389: } ServerOpCodes;",
          "",
          "[Removed Lines]",
          "387:  sAllowStreamLocalForwarding, sFingerprintHash,",
          "",
          "[Added Lines]",
          "390:  sAllowStreamLocalForwarding, sFingerprintHash, sDisableForwarding,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "511:  { \"streamlocalbindunlink\", sStreamLocalBindUnlink, SSHCFG_ALL },",
          "512:  { \"allowstreamlocalforwarding\", sAllowStreamLocalForwarding, SSHCFG_ALL },",
          "513:  { \"fingerprinthash\", sFingerprintHash, SSHCFG_GLOBAL },",
          "514:  { NULL, sBadOption, 0 }",
          "515: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "517:  { \"disableforwarding\", sDisableForwarding, SSHCFG_ALL },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1304:   intptr = &options->allow_agent_forwarding;",
          "1305:   goto parse_flag;",
          "1307:  case sUsePrivilegeSeparation:",
          "1308:   intptr = &use_privsep;",
          "1309:   multistate_ptr = multistate_privsep;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1311:  case sDisableForwarding:",
          "1312:   intptr = &options->disable_forwarding;",
          "1313:   goto parse_flag;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1913:  M_CP_INTOPT(allow_tcp_forwarding);",
          "1914:  M_CP_INTOPT(allow_streamlocal_forwarding);",
          "1915:  M_CP_INTOPT(allow_agent_forwarding);",
          "1916:  M_CP_INTOPT(permit_tun);",
          "1917:  M_CP_INTOPT(fwd_opts.gateway_ports);",
          "1918:  M_CP_INTOPT(fwd_opts.streamlocal_bind_unlink);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1924:  M_CP_INTOPT(disable_forwarding);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2204:  dump_cfg_fmtint(sUseDNS, o->use_dns);",
          "2205:  dump_cfg_fmtint(sAllowTcpForwarding, o->allow_tcp_forwarding);",
          "2206:  dump_cfg_fmtint(sAllowAgentForwarding, o->allow_agent_forwarding);",
          "2207:  dump_cfg_fmtint(sAllowStreamLocalForwarding, o->allow_streamlocal_forwarding);",
          "2208:  dump_cfg_fmtint(sStreamLocalBindUnlink, o->fwd_opts.streamlocal_bind_unlink);",
          "2209:  dump_cfg_fmtint(sUsePrivilegeSeparation, use_privsep);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2216:  dump_cfg_fmtint(sDisableForwarding, o->disable_forwarding);",
          "",
          "---------------"
        ],
        "usr.bin/ssh/servconf.h||usr.bin/ssh/servconf.h": [
          "File: usr.bin/ssh/servconf.h -> usr.bin/ssh/servconf.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:  int allow_agent_forwarding;",
          "128:  u_int num_allow_users;",
          "129:  char   *allow_users[MAX_ALLOW_USERS];",
          "130:  u_int num_deny_users;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:  int disable_forwarding;",
          "",
          "---------------"
        ],
        "usr.bin/ssh/serverloop.c||usr.bin/ssh/serverloop.c": [
          "File: usr.bin/ssh/serverloop.c -> usr.bin/ssh/serverloop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "442:  if ((options.allow_tcp_forwarding & FORWARD_LOCAL) != 0 &&",
          "444:   c = channel_connect_to_port(target, target_port,",
          "445:       \"direct-tcpip\", \"direct-tcpip\");",
          "446:  } else {",
          "",
          "[Removed Lines]",
          "443:      !no_port_forwarding_flag) {",
          "",
          "[Added Lines]",
          "443:      !no_port_forwarding_flag && !options.disable_forwarding) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "474:  if ((options.allow_streamlocal_forwarding & FORWARD_LOCAL) != 0 &&",
          "476:   c = channel_connect_to_path(target,",
          "477:       \"direct-streamlocal@openssh.com\", \"direct-streamlocal\");",
          "478:  } else {",
          "",
          "[Removed Lines]",
          "475:      !no_port_forwarding_flag) {",
          "",
          "[Added Lines]",
          "475:      !no_port_forwarding_flag && !options.disable_forwarding) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "712:   if ((options.allow_tcp_forwarding & FORWARD_REMOTE) == 0 ||",
          "714:       (!want_reply && fwd.listen_port == 0) ||",
          "715:       (fwd.listen_port != 0 &&",
          "716:        !bind_permitted(fwd.listen_port, pw->pw_uid))) {",
          "",
          "[Removed Lines]",
          "713:       no_port_forwarding_flag ||",
          "",
          "[Added Lines]",
          "713:       no_port_forwarding_flag || options.disable_forwarding ||",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "750:   if ((options.allow_streamlocal_forwarding & FORWARD_REMOTE) == 0",
          "752:    success = 0;",
          "753:    packet_send_debug(\"Server has disabled port forwarding.\");",
          "754:   } else {",
          "",
          "[Removed Lines]",
          "751:       || no_port_forwarding_flag) {",
          "",
          "[Added Lines]",
          "751:       || no_port_forwarding_flag || options.disable_forwarding) {",
          "",
          "---------------"
        ],
        "usr.bin/ssh/session.c||usr.bin/ssh/session.c": [
          "File: usr.bin/ssh/session.c -> usr.bin/ssh/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "243:      (options.allow_tcp_forwarding & FORWARD_LOCAL) == 0)",
          "244:   channel_disable_adm_local_opens();",
          "245:  else",
          "",
          "[Removed Lines]",
          "242:  if (no_port_forwarding_flag ||",
          "",
          "[Added Lines]",
          "242:  if (no_port_forwarding_flag || options.disable_forwarding ||",
          "",
          "---------------"
        ],
        "usr.bin/ssh/sshd_config.5||usr.bin/ssh/sshd_config.5": [
          "File: usr.bin/ssh/sshd_config.5 -> usr.bin/ssh/sshd_config.5",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: .\\\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF",
          "34: .\\\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
          "35: .\\\"",
          "38: .Dt SSHD_CONFIG 5",
          "39: .Os",
          "40: .Sh NAME",
          "",
          "[Removed Lines]",
          "36: .\\\" $OpenBSD: sshd_config.5,v 1.238 2016/11/23 23:14:15 markus Exp $",
          "37: .Dd $Mdocdate: November 23 2016 $",
          "",
          "[Added Lines]",
          "36: .\\\" $OpenBSD: sshd_config.5,v 1.239 2016/11/30 03:00:05 djm Exp $",
          "37: .Dd $Mdocdate: November 30 2016 $",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "565: See PATTERNS in",
          "566: .Xr ssh_config 5",
          "567: for more information on patterns.",
          "568: .It Cm FingerprintHash",
          "569: Specifies the hash algorithm used when logging key fingerprints.",
          "570: Valid options are:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "568: .It Cm DisableForwarding",
          "569: Disables all forwarding features, including X11,",
          "570: .Xr ssh-agent 1 ,",
          "571: TCP and StreamLocal.",
          "572: This option overrides all other forwarding-related options and may",
          "573: simplify restricted configurations.",
          "",
          "---------------"
        ]
      }
    }
  ]
}