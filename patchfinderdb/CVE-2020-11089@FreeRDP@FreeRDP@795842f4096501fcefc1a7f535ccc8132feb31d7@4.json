{
  "cve_id": "CVE-2020-11089",
  "cve_desc": "In FreeRDP before 2.1.0, there is an out-of-bound read in irp functions (parallel_process_irp_create, serial_process_irp_create, drive_process_irp_write, printer_process_irp_write, rdpei_recv_pdu, serial_process_irp_write). This has been fixed in 2.1.0.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "795842f4096501fcefc1a7f535ccc8132feb31d7",
  "patch_info": {
    "commit_hash": "795842f4096501fcefc1a7f535ccc8132feb31d7",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/795842f4096501fcefc1a7f535ccc8132feb31d7",
    "files": [
      "channels/parallel/client/parallel_main.c"
    ],
    "message": "Fixed oob read in parallel_process_irp_create",
    "before_after_code_files": [
      "channels/parallel/client/parallel_main.c||channels/parallel/client/parallel_main.c"
    ]
  },
  "patch_diff": {
    "channels/parallel/client/parallel_main.c||channels/parallel/client/parallel_main.c": [
      "File: channels/parallel/client/parallel_main.c -> channels/parallel/client/parallel_main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "83: {",
      "84:  char* path = NULL;",
      "85:  int status;",
      "86:  UINT32 PathLength;",
      "90:  Stream_Read_UINT32(irp->input, PathLength);",
      "94:  if (status < 1)",
      "95:   if (!(path = (char*)calloc(1, 1)))",
      "",
      "[Removed Lines]",
      "87:  Stream_Seek(irp->input, 28);",
      "91:  status = ConvertFromUnicode(CP_UTF8, 0, (WCHAR*)Stream_Pointer(irp->input), PathLength / 2,",
      "92:                              &path, 0, NULL, NULL);",
      "",
      "[Added Lines]",
      "86:  WCHAR* ptr;",
      "88:  if (!Stream_SafeSeek(irp->input, 28))",
      "89:   return ERROR_INVALID_DATA;",
      "92:  if (Stream_GetRemainingLength(irp->input) < 4)",
      "93:   return ERROR_INVALID_DATA;",
      "95:  ptr = (WCHAR*)Stream_Pointer(irp->input);",
      "96:  if (!Stream_SafeSeek(irp->input, PathLength))",
      "97:   return ERROR_INVALID_DATA;",
      "98:  status = ConvertFromUnicode(CP_UTF8, 0, ptr, PathLength / 2, &path, 0, NULL, NULL);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "873ed92a8461b363ccf7e1e1d1e9cc4c75f3a63d",
      "candidate_info": {
        "commit_hash": "873ed92a8461b363ccf7e1e1d1e9cc4c75f3a63d",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/873ed92a8461b363ccf7e1e1d1e9cc4c75f3a63d",
        "files": [
          "libfreerdp/core/server.c"
        ],
        "message": "Remove unnecessary cast.",
        "before_after_code_files": [
          "libfreerdp/core/server.c||libfreerdp/core/server.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6151"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/server.c||libfreerdp/core/server.c": [
          "File: libfreerdp/core/server.c -> libfreerdp/core/server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "196:  Stream_SetPosition(channel->receiveData, 0);",
          "199:   return FALSE;",
          "201:  Stream_Write(channel->receiveData, Stream_Pointer(s), length);",
          "",
          "[Removed Lines]",
          "198:  if (!Stream_EnsureRemainingCapacity(channel->receiveData, (int)channel->dvc_total_length))",
          "",
          "[Added Lines]",
          "198:  if (!Stream_EnsureRemainingCapacity(channel->receiveData, channel->dvc_total_length))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e9b0a625bbeb55c0e00c96f2e9bf9a2677a374c",
      "candidate_info": {
        "commit_hash": "8e9b0a625bbeb55c0e00c96f2e9bf9a2677a374c",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/8e9b0a625bbeb55c0e00c96f2e9bf9a2677a374c",
        "files": [
          "channels/printer/client/printer_main.c"
        ],
        "message": "Fixed int overflow in printer_write_setting\n\nThanks to hac425",
        "before_after_code_files": [
          "channels/printer/client/printer_main.c||channels/printer/client/printer_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6151"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/printer/client/printer_main.c||channels/printer/client/printer_main.c": [
          "File: channels/printer/client/printer_main.c -> channels/printer/client/printer_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:  const char* name = filemap[type];",
          "108:  char* abs = GetCombinedPath(path, name);",
          "111:   return FALSE;",
          "113:  file = CreateFileA(abs, GENERIC_WRITE, 0, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);",
          "",
          "[Removed Lines]",
          "110:  if (!abs)",
          "",
          "[Added Lines]",
          "110:  if (!abs || (length > INT32_MAX))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cbee45aace1bb4fd485633224db5433443a201fe",
      "candidate_info": {
        "commit_hash": "cbee45aace1bb4fd485633224db5433443a201fe",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/cbee45aace1bb4fd485633224db5433443a201fe",
        "files": [
          "channels/cliprdr/client/cliprdr_format.c",
          "client/Android/android_cliprdr.c",
          "client/Mac/Clipboard.m",
          "client/Wayland/wlf_cliprdr.c",
          "client/Windows/wf_cliprdr.c",
          "client/X11/xf_cliprdr.c",
          "server/proxy/pf_cliprdr.c"
        ],
        "message": "Fixed clipboard 'called with invalid type' warning",
        "before_after_code_files": [
          "channels/cliprdr/client/cliprdr_format.c||channels/cliprdr/client/cliprdr_format.c",
          "client/Android/android_cliprdr.c||client/Android/android_cliprdr.c",
          "client/Mac/Clipboard.m||client/Mac/Clipboard.m",
          "client/Wayland/wlf_cliprdr.c||client/Wayland/wlf_cliprdr.c",
          "client/Windows/wf_cliprdr.c||client/Windows/wf_cliprdr.c",
          "client/X11/xf_cliprdr.c||client/X11/xf_cliprdr.c",
          "server/proxy/pf_cliprdr.c||server/proxy/pf_cliprdr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6151"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/cliprdr/client/cliprdr_format.c||channels/cliprdr/client/cliprdr_format.c": [
          "File: channels/cliprdr/client/cliprdr_format.c -> channels/cliprdr/client/cliprdr_format.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: UINT cliprdr_process_format_list(cliprdrPlugin* cliprdr, wStream* s, UINT32 dataLen,",
          "44:                                  UINT16 msgFlags)",
          "45: {",
          "47:  CliprdrClientContext* context = cliprdr_get_client_interface(cliprdr);",
          "48:  UINT error = CHANNEL_RC_OK;",
          "",
          "[Removed Lines]",
          "46:  CLIPRDR_FORMAT_LIST formatList;",
          "",
          "[Added Lines]",
          "46:  CLIPRDR_FORMAT_LIST formatList = { 0 };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82: UINT cliprdr_process_format_list_response(cliprdrPlugin* cliprdr, wStream* s, UINT32 dataLen,",
          "83:                                           UINT16 msgFlags)",
          "84: {",
          "86:  CliprdrClientContext* context = cliprdr_get_client_interface(cliprdr);",
          "87:  UINT error = CHANNEL_RC_OK;",
          "",
          "[Removed Lines]",
          "85:  CLIPRDR_FORMAT_LIST_RESPONSE formatListResponse;",
          "",
          "[Added Lines]",
          "85:  CLIPRDR_FORMAT_LIST_RESPONSE formatListResponse = { 0 };",
          "",
          "---------------"
        ],
        "client/Android/android_cliprdr.c||client/Android/android_cliprdr.c": [
          "File: client/Android/android_cliprdr.c -> client/Android/android_cliprdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:  formatList.msgFlags = CB_RESPONSE_OK;",
          "82:  formatList.numFormats = numFormats;",
          "83:  formatList.formats = formats;",
          "85:  if (!afc->cliprdr->ClientFormatList)",
          "86:   goto fail;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:  formatList.msgType = CB_FORMAT_LIST;",
          "",
          "---------------"
        ],
        "client/Mac/Clipboard.m||client/Mac/Clipboard.m": [
          "File: client/Mac/Clipboard.m -> client/Mac/Clipboard.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:  UINT32 *pFormatIds;",
          "29:  const char *formatName;",
          "30:  CLIPRDR_FORMAT *formats;",
          "32:  mfContext *mfc = (mfContext *)cliprdr->custom;",
          "34:  ZeroMemory(&formatList, sizeof(CLIPRDR_FORMAT_LIST));",
          "",
          "[Removed Lines]",
          "31:  CLIPRDR_FORMAT_LIST formatList;",
          "",
          "[Added Lines]",
          "31:  CLIPRDR_FORMAT_LIST formatList = { 0 };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:  formatList.msgFlags = CB_RESPONSE_OK;",
          "57:  formatList.numFormats = numFormats;",
          "58:  formatList.formats = formats;",
          "60:  mfc->cliprdr->ClientFormatList(mfc->cliprdr, &formatList);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:  formatList.msgType = CB_FORMAT_LIST;",
          "",
          "---------------"
        ],
        "client/Wayland/wlf_cliprdr.c||client/Wayland/wlf_cliprdr.c": [
          "File: client/Wayland/wlf_cliprdr.c -> client/Wayland/wlf_cliprdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "174:  formatList.msgFlags = CB_RESPONSE_OK;",
          "175:  formatList.numFormats = (UINT32)clipboard->numClientFormats;",
          "176:  formatList.formats = clipboard->clientFormats;",
          "177:  return clipboard->context->ClientFormatList(clipboard->context, &formatList);",
          "178: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:  formatList.msgType = CB_FORMAT_LIST;",
          "",
          "---------------"
        ],
        "client/Windows/wf_cliprdr.c||client/Windows/wf_cliprdr.c": [
          "File: client/Windows/wf_cliprdr.c -> client/Windows/wf_cliprdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1235:  UINT32 formatId = 0;",
          "1236:  char formatName[1024];",
          "1237:  CLIPRDR_FORMAT* formats = NULL;",
          "1240:  if (!clipboard)",
          "1241:   return ERROR_INTERNAL_ERROR;",
          "",
          "[Removed Lines]",
          "1238:  CLIPRDR_FORMAT_LIST formatList;",
          "",
          "[Added Lines]",
          "1238:  CLIPRDR_FORMAT_LIST formatList = { 0 };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1288:  formatList.numFormats = numFormats;",
          "1289:  formatList.formats = formats;",
          "1290:  rc = clipboard->context->ClientFormatList(clipboard->context, &formatList);",
          "1292:  for (index = 0; index < numFormats; index++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1290:  formatList.msgType = CB_FORMAT_LIST;",
          "",
          "---------------"
        ],
        "client/X11/xf_cliprdr.c||client/X11/xf_cliprdr.c": [
          "File: client/X11/xf_cliprdr.c -> client/X11/xf_cliprdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "533:  formatList.msgFlags = CB_RESPONSE_OK;",
          "534:  formatList.numFormats = numFormats;",
          "535:  formatList.formats = formats;",
          "536:  clipboard->context->ClientFormatList(clipboard->context, &formatList);",
          "537:  xf_cliprdr_free_formats(formats, numFormats);",
          "538: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "536:  formatList.msgType = CB_FORMAT_LIST;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1100:  formatList.msgFlags = CB_RESPONSE_OK;",
          "1101:  formatList.numFormats = numFormats;",
          "1102:  formatList.formats = formats;",
          "1103:  ret = clipboard->context->ClientFormatList(clipboard->context, &formatList);",
          "1104:  free(formats);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1104:  formatList.msgType = CB_FORMAT_LIST;",
          "",
          "---------------"
        ],
        "server/proxy/pf_cliprdr.c||server/proxy/pf_cliprdr.c": [
          "File: server/proxy/pf_cliprdr.c -> server/proxy/pf_cliprdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "295:  if (pdata->config->TextOnly)",
          "296:  {",
          "298:   pf_cliprdr_create_text_only_format_list(&list);",
          "299:   return server->ServerFormatList(server, &list);",
          "300:  }",
          "",
          "[Removed Lines]",
          "297:   CLIPRDR_FORMAT_LIST list;",
          "",
          "[Added Lines]",
          "297:   CLIPRDR_FORMAT_LIST list = { 0 };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37344f443e06113a2f83ad04b4499da2371b5c58",
      "candidate_info": {
        "commit_hash": "37344f443e06113a2f83ad04b4499da2371b5c58",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/37344f443e06113a2f83ad04b4499da2371b5c58",
        "files": [
          "client/Android/Studio/aFreeRDP/build.gradle",
          "client/Android/Studio/build.gradle",
          "client/Android/Studio/freeRDPCore/build.gradle"
        ],
        "message": "Increased android client build number to 100\n\nWe need to be able to release a few 2.0 builds before this master\nbuild will be ready.",
        "before_after_code_files": [
          "client/Android/Studio/aFreeRDP/build.gradle||client/Android/Studio/aFreeRDP/build.gradle",
          "client/Android/Studio/build.gradle||client/Android/Studio/build.gradle",
          "client/Android/Studio/freeRDPCore/build.gradle||client/Android/Studio/freeRDPCore/build.gradle"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6151"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "client/Android/Studio/aFreeRDP/build.gradle||client/Android/Studio/aFreeRDP/build.gradle": [
          "File: client/Android/Studio/aFreeRDP/build.gradle -> client/Android/Studio/aFreeRDP/build.gradle",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:         minSdkVersion 21",
          "10:         targetSdkVersion 28",
          "11:         vectorDrawables.useSupportLibrary = true",
          "13:         versionName = rootProject.ext.versionName",
          "14:     }",
          "",
          "[Removed Lines]",
          "12:         versionCode = 15",
          "",
          "[Added Lines]",
          "12:         versionCode = rootProject.ext.versionCode",
          "",
          "---------------"
        ],
        "client/Android/Studio/build.gradle||client/Android/Studio/build.gradle": [
          "File: client/Android/Studio/build.gradle -> client/Android/Studio/build.gradle",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: ext {",
          "31:     versionName = properties.get('VERSION_NAME', getVersionName())",
          "33:     println '----------------- Project configuration -------------------'",
          "34:     println 'VERSION_NAME:       ' + versionName",
          "35:     println 'RELEASE_STORE_FILE: '+ RELEASE_STORE_FILE",
          "36:     println 'RELEASE_KEY_ALIAS:  '+ RELEASE_KEY_ALIAS",
          "37:     println '-----------------------------------------------------------'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:     versionCode = properties.get('VERSION_CODE', 100)",
          "36:     println 'VERSION_CODE:       ' + versionCode",
          "",
          "---------------"
        ],
        "client/Android/Studio/freeRDPCore/build.gradle||client/Android/Studio/freeRDPCore/build.gradle": [
          "File: client/Android/Studio/freeRDPCore/build.gradle -> client/Android/Studio/freeRDPCore/build.gradle",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:         minSdkVersion 21",
          "9:         targetSdkVersion 28",
          "10:         vectorDrawables.useSupportLibrary = true",
          "12:         versionName = rootProject.ext.versionName",
          "13:     }",
          "",
          "[Removed Lines]",
          "11:         versionCode = 15",
          "",
          "[Added Lines]",
          "11:         versionCode = rootProject.ext.versionCode",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "feb7d4f362b4c65af783cf09cd0d578d5485f245",
      "candidate_info": {
        "commit_hash": "feb7d4f362b4c65af783cf09cd0d578d5485f245",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/feb7d4f362b4c65af783cf09cd0d578d5485f245",
        "files": [
          "channels/smartcard/client/smartcard_operations.c"
        ],
        "message": "Changed smartcard no reader log message level to info",
        "before_after_code_files": [
          "channels/smartcard/client/smartcard_operations.c||channels/smartcard/client/smartcard_operations.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6151"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/smartcard/client/smartcard_operations.c||channels/smartcard/client/smartcard_operations.c": [
          "File: channels/smartcard/client/smartcard_operations.c -> channels/smartcard/client/smartcard_operations.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:    case SCARD_E_TIMEOUT:",
          "50:     level = WLOG_DEBUG;",
          "51:     break;",
          "52:    default:",
          "53:     break;",
          "54:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:    case SCARD_E_NO_READERS_AVAILABLE:",
          "53:     level = WLOG_INFO;",
          "54:     break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}