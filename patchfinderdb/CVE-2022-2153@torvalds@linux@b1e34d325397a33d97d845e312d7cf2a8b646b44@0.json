{
  "cve_id": "CVE-2022-2153",
  "cve_desc": "A flaw was found in the Linux kernel\u2019s KVM when attempting to set a SynIC IRQ. This issue makes it possible for a misbehaving VMM to write to SYNIC/STIMER MSRs, causing a NULL pointer dereference. This flaw allows an unprivileged local attacker on the host to issue specific ioctl calls, causing a kernel oops condition that results in a denial of service.",
  "repo": "torvalds/linux",
  "patch_hash": "b1e34d325397a33d97d845e312d7cf2a8b646b44",
  "patch_info": {
    "commit_hash": "b1e34d325397a33d97d845e312d7cf2a8b646b44",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/b1e34d325397a33d97d845e312d7cf2a8b646b44",
    "files": [
      "arch/x86/kvm/hyperv.c"
    ],
    "message": "KVM: x86: Forbid VMM to set SYNIC/STIMER MSRs when SynIC wasn't activated\n\nSetting non-zero values to SYNIC/STIMER MSRs activates certain features,\nthis should not happen when KVM_CAP_HYPERV_SYNIC{,2} was not activated.\n\nNote, it would've been better to forbid writing anything to SYNIC/STIMER\nMSRs, including zeroes, however, at least QEMU tries clearing\nHV_X64_MSR_STIMER0_CONFIG without SynIC. HV_X64_MSR_EOM MSR is somewhat\n'special' as writing zero there triggers an action, this also should not\nhappen when SynIC wasn't activated.\n\nSigned-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>\nMessage-Id: <20220325132140.25650-4-vkuznets@redhat.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "before_after_code_files": [
      "arch/x86/kvm/hyperv.c||arch/x86/kvm/hyperv.c"
    ]
  },
  "patch_diff": {
    "arch/x86/kvm/hyperv.c||arch/x86/kvm/hyperv.c": [
      "File: arch/x86/kvm/hyperv.c -> arch/x86/kvm/hyperv.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "239:  struct kvm_vcpu *vcpu = hv_synic_to_vcpu(synic);",
      "240:  int ret;",
      "243:   return 1;",
      "245:  trace_kvm_hv_synic_set_msr(vcpu->vcpu_id, msr, data, host);",
      "",
      "[Removed Lines]",
      "242:  if (!synic->active && !host)",
      "",
      "[Added Lines]",
      "242:  if (!synic->active && (!host || data))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "285:  case HV_X64_MSR_EOM: {",
      "286:   int i;",
      "288:   for (i = 0; i < ARRAY_SIZE(synic->sint); i++)",
      "289:    kvm_hv_notify_acked_sint(vcpu, i);",
      "290:   break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "288:   if (!synic->active)",
      "289:    break;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "664:  struct kvm_vcpu_hv *hv_vcpu = to_hv_vcpu(vcpu);",
      "665:  struct kvm_vcpu_hv_synic *synic = to_hv_synic(vcpu);",
      "668:   return 1;",
      "670:  if (unlikely(!host && hv_vcpu->enforce_cpuid && new_config.direct_mode &&",
      "",
      "[Removed Lines]",
      "667:  if (!synic->active && !host)",
      "",
      "[Added Lines]",
      "670:  if (!synic->active && (!host || config))",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "693:  struct kvm_vcpu *vcpu = hv_stimer_to_vcpu(stimer);",
      "694:  struct kvm_vcpu_hv_synic *synic = to_hv_synic(vcpu);",
      "697:   return 1;",
      "699:  trace_kvm_hv_stimer_set_count(hv_stimer_to_vcpu(stimer)->vcpu_id,",
      "",
      "[Removed Lines]",
      "696:  if (!synic->active && !host)",
      "",
      "[Added Lines]",
      "699:  if (!synic->active && (!host || count))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1aa8a4184dbde5f50b70b2c706bcfb6b57da9ea7",
      "candidate_info": {
        "commit_hash": "1aa8a4184dbde5f50b70b2c706bcfb6b57da9ea7",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1aa8a4184dbde5f50b70b2c706bcfb6b57da9ea7",
        "files": [
          "arch/x86/kvm/hyperv.c"
        ],
        "message": "KVM: x86: hyper-v: Honor HV_STIMER_DIRECT_MODE_AVAILABLE privilege bit\n\nSynthetic timers can only be configured in 'direct' mode when\nHV_STIMER_DIRECT_MODE_AVAILABLE bit was exposed.\n\nSigned-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>\nMessage-Id: <20210521095204.2161214-20-vkuznets@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
        "before_after_code_files": [
          "arch/x86/kvm/hyperv.c||arch/x86/kvm/hyperv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "arch/x86/kvm/hyperv.c||arch/x86/kvm/hyperv.c"
          ],
          "candidate": [
            "arch/x86/kvm/hyperv.c||arch/x86/kvm/hyperv.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/x86/kvm/hyperv.c||arch/x86/kvm/hyperv.c": [
          "File: arch/x86/kvm/hyperv.c -> arch/x86/kvm/hyperv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "631:  union hv_stimer_config new_config = {.as_uint64 = config},",
          "632:   old_config = {.as_uint64 = stimer->config.as_uint64};",
          "633:  struct kvm_vcpu *vcpu = hv_stimer_to_vcpu(stimer);",
          "634:  struct kvm_vcpu_hv_synic *synic = to_hv_synic(vcpu);",
          "636:  if (!synic->active && !host)",
          "637:   return 1;",
          "639:  trace_kvm_hv_stimer_set_config(hv_stimer_to_vcpu(stimer)->vcpu_id,",
          "640:            stimer->index, config, host);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "634:  struct kvm_vcpu_hv *hv_vcpu = to_hv_vcpu(vcpu);",
          "640:  if (unlikely(!host && hv_vcpu->enforce_cpuid && new_config.direct_mode &&",
          "641:        !(hv_vcpu->cpuid_cache.features_edx &",
          "642:          HV_STIMER_DIRECT_MODE_AVAILABLE)))",
          "643:   return 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}