{
  "cve_id": "CVE-2018-11359",
  "cve_desc": "In Wireshark 2.6.0, 2.4.0 to 2.4.6, and 2.2.0 to 2.2.14, the RRC dissector and other dissectors could crash. This was addressed in epan/proto.c by avoiding a NULL pointer dereference.",
  "repo": "wireshark/wireshark",
  "patch_hash": "40dbc0ccf26152a058484368526b7bd70c8928c1",
  "patch_info": {
    "commit_hash": "40dbc0ccf26152a058484368526b7bd70c8928c1",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/40dbc0ccf26152a058484368526b7bd70c8928c1",
    "files": [
      "epan/proto.c"
    ],
    "message": "proto.c: do not dereference a NULL pointer in proto_item_get_len() on first pass\n\nLike the proto_item_set_XXX functions, check proto_item pointer validity\nbefore using it. It can be NULL on first pass for example.\n\nBug: 14703\nChange-Id: I94957e0738d66f99793682dc0ea1c7c0a65ceecd\nReviewed-on: https://code.wireshark.org/review/27629\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/proto.c||epan/proto.c"
    ]
  },
  "patch_diff": {
    "epan/proto.c||epan/proto.c": [
      "File: epan/proto.c -> epan/proto.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6215: int",
      "6216: proto_item_get_len(const proto_item *pi)",
      "6217: {",
      "6219:  return fi ? fi->length : -1;",
      "6220: }",
      "",
      "[Removed Lines]",
      "6218:  field_info *fi = PITEM_FINFO(pi);",
      "",
      "[Added Lines]",
      "6218:  field_info *fi;",
      "6220:  if (!pi)",
      "6221:   return -1;",
      "6222:  fi = PITEM_FINFO(pi);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "beaebe91b14564fb9f86f0726bab09927872721b",
      "candidate_info": {
        "commit_hash": "beaebe91b14564fb9f86f0726bab09927872721b",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/beaebe91b14564fb9f86f0726bab09927872721b",
        "files": [
          "epan/proto.c"
        ],
        "message": "proto.c: do not dereference a NULL pointer in proto_item_get_len() on first pass\n\nLike the proto_item_set_XXX functions, check proto_item pointer validity\nbefore using it. It can be NULL on first pass for example.\n\nBug: 14703\nChange-Id: I94957e0738d66f99793682dc0ea1c7c0a65ceecd\nReviewed-on: https://code.wireshark.org/review/27629\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 40dbc0ccf26152a058484368526b7bd70c8928c1)\nReviewed-on: https://code.wireshark.org/review/27636",
        "before_after_code_files": [
          "epan/proto.c||epan/proto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/proto.c||epan/proto.c"
          ],
          "candidate": [
            "epan/proto.c||epan/proto.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/proto.c||epan/proto.c": [
          "File: epan/proto.c -> epan/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5443: int",
          "5444: proto_item_get_len(const proto_item *pi)",
          "5445: {",
          "5447:  return fi ? fi->length : -1;",
          "5448: }",
          "",
          "[Removed Lines]",
          "5446:  field_info *fi = PITEM_FINFO(pi);",
          "",
          "[Added Lines]",
          "5446:  field_info *fi;",
          "5448:  if (!pi)",
          "5449:   return -1;",
          "5450:  fi = PITEM_FINFO(pi);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb9e31f0aad30645d42aba886da9e0d8b84c835f",
      "candidate_info": {
        "commit_hash": "fb9e31f0aad30645d42aba886da9e0d8b84c835f",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/fb9e31f0aad30645d42aba886da9e0d8b84c835f",
        "files": [
          "epan/proto.c"
        ],
        "message": "proto.c: do not dereference a NULL pointer in proto_item_get_len() on first pass\n\nLike the proto_item_set_XXX functions, check proto_item pointer validity\nbefore using it. It can be NULL on first pass for example.\n\nBug: 14703\nChange-Id: I94957e0738d66f99793682dc0ea1c7c0a65ceecd\nReviewed-on: https://code.wireshark.org/review/27629\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 40dbc0ccf26152a058484368526b7bd70c8928c1)\nReviewed-on: https://code.wireshark.org/review/27635",
        "before_after_code_files": [
          "epan/proto.c||epan/proto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/proto.c||epan/proto.c"
          ],
          "candidate": [
            "epan/proto.c||epan/proto.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/proto.c||epan/proto.c": [
          "File: epan/proto.c -> epan/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5864: int",
          "5865: proto_item_get_len(const proto_item *pi)",
          "5866: {",
          "5868:  return fi ? fi->length : -1;",
          "5869: }",
          "",
          "[Removed Lines]",
          "5867:  field_info *fi = PITEM_FINFO(pi);",
          "",
          "[Added Lines]",
          "5867:  field_info *fi;",
          "5869:  if (!pi)",
          "5870:   return -1;",
          "5871:  fi = PITEM_FINFO(pi);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e50f7ced8339fc6aa416788beeb2842eedea9a6d",
      "candidate_info": {
        "commit_hash": "e50f7ced8339fc6aa416788beeb2842eedea9a6d",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/e50f7ced8339fc6aa416788beeb2842eedea9a6d",
        "files": [
          "epan/proto.c"
        ],
        "message": "proto.c: do not dereference a NULL pointer in proto_item_get_len() on first pass\n\nLike the proto_item_set_XXX functions, check proto_item pointer validity\nbefore using it. It can be NULL on first pass for example.\n\nBug: 14703\nChange-Id: I94957e0738d66f99793682dc0ea1c7c0a65ceecd\nReviewed-on: https://code.wireshark.org/review/27629\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 40dbc0ccf26152a058484368526b7bd70c8928c1)\nReviewed-on: https://code.wireshark.org/review/27634",
        "before_after_code_files": [
          "epan/proto.c||epan/proto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/proto.c||epan/proto.c"
          ],
          "candidate": [
            "epan/proto.c||epan/proto.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/proto.c||epan/proto.c": [
          "File: epan/proto.c -> epan/proto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6216: int",
          "6217: proto_item_get_len(const proto_item *pi)",
          "6218: {",
          "6220:  return fi ? fi->length : -1;",
          "6221: }",
          "",
          "[Removed Lines]",
          "6219:  field_info *fi = PITEM_FINFO(pi);",
          "",
          "[Added Lines]",
          "6219:  field_info *fi;",
          "6221:  if (!pi)",
          "6222:   return -1;",
          "6223:  fi = PITEM_FINFO(pi);",
          "",
          "---------------"
        ]
      }
    }
  ]
}