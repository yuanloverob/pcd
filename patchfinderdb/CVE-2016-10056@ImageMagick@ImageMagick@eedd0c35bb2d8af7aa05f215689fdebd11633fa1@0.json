{
  "cve_id": "CVE-2016-10056",
  "cve_desc": "Buffer overflow in the sixel_decode function in coders/sixel.c in ImageMagick before 6.9.5-8 allows remote attackers to cause a denial of service (application crash) or have other unspecified impact via a crafted file.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "eedd0c35bb2d8af7aa05f215689fdebd11633fa1",
  "patch_info": {
    "commit_hash": "eedd0c35bb2d8af7aa05f215689fdebd11633fa1",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/eedd0c35bb2d8af7aa05f215689fdebd11633fa1",
    "files": [
      "ChangeLog",
      "coders/map.c",
      "coders/pdb.c",
      "coders/sixel.c",
      "coders/tiff.c"
    ],
    "message": "Prevent buffer overflow in SIXEL, PDB, MAP, and CALS coders (bug report from Donghai Zhu)",
    "before_after_code_files": [
      "coders/map.c||coders/map.c",
      "coders/pdb.c||coders/pdb.c",
      "coders/sixel.c||coders/sixel.c",
      "coders/tiff.c||coders/tiff.c"
    ]
  },
  "patch_diff": {
    "coders/map.c||coders/map.c": [
      "File: coders/map.c -> coders/map.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "396:   colormap=(unsigned char *) AcquireQuantumMemory(image->colors,packet_size*",
      "397:     sizeof(*colormap));",
      "398:   if ((pixels == (unsigned char *) NULL) ||",
      "400:     ThrowWriterException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "402:     Write colormap to file.",
      "404:   q=colormap;",
      "405:   if (image->depth <= 8)",
      "406:     for (i=0; i < (ssize_t) image->colors; i++)",
      "407:     {",
      "411:     }",
      "412:   else",
      "413:     for (i=0; i < (ssize_t) image->colors; i++)",
      "414:     {",
      "",
      "[Removed Lines]",
      "399:       (colormap == (unsigned char *) NULL))",
      "",
      "[Added Lines]",
      "399:       (colormap == (unsigned char *) NULL))",
      "400:     ThrowWriterException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "",
      "---------------"
    ],
    "coders/pdb.c||coders/pdb.c": [
      "File: coders/pdb.c -> coders/pdb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "826:   if (image->columns % 16)",
      "827:     pdb_image.width=(short) (16*(image->columns/16+1));",
      "828:   pdb_image.height=(short) image->rows;",
      "830:   runlength=(unsigned char *) AcquireQuantumMemory(9UL*packets,",
      "831:     image->rows*sizeof(*runlength));",
      "832:   if (runlength == (unsigned char *) NULL)",
      "",
      "[Removed Lines]",
      "829:   packets=((bits_per_pixel*image->columns+7)/8);",
      "",
      "[Added Lines]",
      "829:   packets=((bits_per_pixel*image->columns+7)/8);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "839:     sizeof(*scanline));",
      "840:   if (scanline == (unsigned char *) NULL)",
      "841:     ThrowWriterException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "842:   if (IssRGBCompatibleColorspace(image->colorspace) == MagickFalse)",
      "843:     (void) TransformImageColorspace(image,sRGBColorspace,exception);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "842:   if (IssRGBCompatibleColorspace(image->colorspace) == MagickFalse)",
      "",
      "---------------"
    ],
    "coders/sixel.c||coders/sixel.c": [
      "File: coders/sixel.c -> coders/sixel.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "257:     color_index = 0;",
      "258:     background_color_index = 0;",
      "261:     imsy = 2048;",
      "262:     imbuf = (unsigned char *) AcquireQuantumMemory(imsx * imsy,1);",
      "",
      "[Removed Lines]",
      "260:     imsx = 2048;",
      "",
      "[Added Lines]",
      "260:     imsx = 2048;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "285:     for (; n < SIXEL_PALETTE_MAX; n++) {",
      "286:         sixel_palet[n] = SIXEL_RGB(255, 255, 255);",
      "289:     (void) ResetMagickMemory(imbuf, background_color_index, imsx * imsy);",
      "",
      "[Removed Lines]",
      "287:     }",
      "",
      "[Added Lines]",
      "287:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "358:             if (attributed_pad <= 0) attributed_pad = 1;",
      "360:             if (imsx < attributed_ph || imsy < attributed_pv) {",
      "362:                 dmsy = imsy > attributed_pv ? imsy : attributed_pv;",
      "363:                 dmbuf = (unsigned char *) AcquireQuantumMemory(dmsx * dmsy,1);",
      "364:                 if (dmbuf == (unsigned char *) NULL) {",
      "365:                     imbuf = (unsigned char *) RelinquishMagickMemory(imbuf);",
      "367:                 }",
      "368:                 (void) ResetMagickMemory(dmbuf, background_color_index, dmsx * dmsy);",
      "369:                 for (y = 0; y < imsy; ++y) {",
      "",
      "[Removed Lines]",
      "361:                 dmsx = imsx > attributed_ph ? imsx : attributed_ph;",
      "366:                     return (MagickFalse);",
      "",
      "[Added Lines]",
      "361:                 dmsx = imsx > attributed_ph ? imsx : attributed_ph;",
      "366:                     return (MagickFalse);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "432:                     ny *= 2;",
      "433:                 }",
      "436:                 dmsy = ny;",
      "437:                 dmbuf = (unsigned char *) AcquireQuantumMemory(dmsx * dmsy,1);",
      "438:                 if (dmbuf == (unsigned char *) NULL) {",
      "439:                     imbuf = (unsigned char *) RelinquishMagickMemory(imbuf);",
      "441:                 }",
      "442:                 (void) ResetMagickMemory(dmbuf, background_color_index, dmsx * dmsy);",
      "443:                 for (y = 0; y < imsy; ++y) {",
      "",
      "[Removed Lines]",
      "435:                 dmsx = nx;",
      "440:                     return (MagickFalse);",
      "",
      "[Added Lines]",
      "435:                 dmsx = nx;",
      "440:                     return (MagickFalse);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "482:                                     break;",
      "483:                                 }",
      "484:                                 c <<= 1;",
      "486:                             for (y = posision_y + i; y < posision_y + i + n; ++y) {",
      "487:                                 (void) ResetMagickMemory(imbuf + imsx * y + posision_x, color_index, repeat_count);",
      "488:                             }",
      "",
      "[Removed Lines]",
      "485:                             }",
      "",
      "[Added Lines]",
      "485:                             }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "515:     }",
      "517:     if (imsx > max_x || imsy > max_y) {",
      "519:         dmsy = max_y;",
      "520:         if ((dmbuf = (unsigned char *) AcquireQuantumMemory(dmsx * dmsy,1)) == NULL) {",
      "521:             imbuf = (unsigned char *) RelinquishMagickMemory(imbuf);",
      "",
      "[Removed Lines]",
      "518:         dmsx = max_x;",
      "",
      "[Added Lines]",
      "518:         dmsx = max_x;",
      "",
      "---------------"
    ],
    "coders/tiff.c||coders/tiff.c": [
      "File: coders/tiff.c -> coders/tiff.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2493:     file=fdopen(unique_file,\"wb\");",
      "2494:   if ((unique_file == -1) || (file == (FILE *) NULL))",
      "2495:     {",
      "2497:         filename);",
      "2498:       return(MagickFalse);",
      "2499:     }",
      "2500:   (void) FormatLocaleString(huffman_image->filename,MagickPathExtent,\"tiff:%s\",",
      "",
      "[Removed Lines]",
      "2496:       ThrowFileException(exception,FileOpenError,\"UnableToCreateTemporaryFile\",",
      "",
      "[Added Lines]",
      "2497:         filename);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "745b3bccba44a6c029d144f8a0fa270e838f8e22",
      "candidate_info": {
        "commit_hash": "745b3bccba44a6c029d144f8a0fa270e838f8e22",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/745b3bccba44a6c029d144f8a0fa270e838f8e22",
        "files": [
          "coders/tiff.c"
        ],
        "message": "Group4Compression requires a bilevel image",
        "before_after_code_files": [
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2486:     file=fdopen(unique_file,\"wb\");",
          "2487:   if ((unique_file == -1) || (file == (FILE *) NULL))",
          "2488:     {",
          "2489:       ThrowFileException(exception,FileOpenError,\"UnableToCreateTemporaryFile\",",
          "2490:         filename);",
          "2491:       return(MagickFalse);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2489:       ThrowFileException(exception,FileOpenError,\"UnableToCreateTemporaryFile\",",
          "2490:         filename);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1dc0ac5016f1c4d50b100a086526d6a2453a5444",
      "candidate_info": {
        "commit_hash": "1dc0ac5016f1c4d50b100a086526d6a2453a5444",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/1dc0ac5016f1c4d50b100a086526d6a2453a5444",
        "files": [
          "coders/map.c"
        ],
        "message": "https://github.com/ImageMagick/ImageMagick/issues/573",
        "before_after_code_files": [
          "coders/map.c||coders/map.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/map.c||coders/map.c"
          ],
          "candidate": [
            "coders/map.c||coders/map.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/map.c||coders/map.c": [
          "File: coders/map.c -> coders/map.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "391:   depth=GetImageQuantumDepth(image,MagickTrue);",
          "392:   packet_size=(size_t) (depth/8);",
          "393:   pixels=(unsigned char *) AcquireQuantumMemory(image->columns,packet_size*",
          "395:   packet_size=(size_t) (image->colors > 256 ? 6UL : 3UL);",
          "396:   colormap=(unsigned char *) AcquireQuantumMemory(image->colors,packet_size*",
          "397:     sizeof(*colormap));",
          "398:   if ((pixels == (unsigned char *) NULL) ||",
          "400:     ThrowWriterException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "402:     Write colormap to file.",
          "",
          "[Removed Lines]",
          "394:     sizeof(*pixels));",
          "399:       (colormap == (unsigned char *) NULL))",
          "",
          "[Added Lines]",
          "394:     sizeof(*pixels));",
          "395:   packet_size=(size_t) (image->colors > 256 ? 6UL : 3UL);",
          "396:   colormap=(unsigned char *) AcquireQuantumMemory(image->colors,packet_size*",
          "397:     sizeof(*colormap));",
          "398:   if ((pixels == (unsigned char *) NULL) ||",
          "399:       (colormap == (unsigned char *) NULL))",
          "400:     {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "412:     }",
          "413:   else",
          "414:     for (i=0; i < (ssize_t) image->colors; i++)",
          "415:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "419:     for (i=0; i < (ssize_t) image->colors; i++)",
          "",
          "---------------"
        ]
      }
    }
  ]
}