{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0581afe531e5fa39d29c59ac5b3dcb323208375d",
      "candidate_info": {
        "commit_hash": "0581afe531e5fa39d29c59ac5b3dcb323208375d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0581afe531e5fa39d29c59ac5b3dcb323208375d",
        "files": [
          "src/node.cc",
          "test/simple/test-process-env.js"
        ],
        "message": "Revert \"Fix #3521 Use an object as the process.env proto\"\n\nThe reverted commit caused a v8 assertion to trigger in debug mode.\nThis reverts commit e3074689f501eea413c29b99defac29659a2b615.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "test/simple/test-process-env.js||test/simple/test-process-env.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1959:     return scope.Close(String::New(reinterpret_cast<uint16_t*>(buffer), result));",
          "1960:   }",
          "1961: #endif",
          "1964: }",
          "",
          "[Removed Lines]",
          "1963:   return info.Data().As<Object>()->Get(property);",
          "",
          "[Added Lines]",
          "1963:   return Undefined();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2210:                                        EnvQuery,",
          "2211:                                        EnvDeleter,",
          "2212:                                        EnvEnumerator,",
          "2214:   Local<Object> env = envTemplate->NewInstance();",
          "2215:   process->Set(String::NewSymbol(\"env\"), env);",
          "",
          "[Removed Lines]",
          "2213:                                        Object::New());",
          "",
          "[Added Lines]",
          "2213:                                        Undefined());",
          "",
          "---------------"
        ],
        "test/simple/test-process-env.js||test/simple/test-process-env.js": [
          "File: test/simple/test-process-env.js -> test/simple/test-process-env.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:   assert.equal(false, 'NODE_PROCESS_ENV_DELETED' in process.env);",
          "49:   assert.equal(42, process.env.NODE_PROCESS_ENV);",
          "54:   process.exit(0);",
          "55: } else {",
          "62:   process.env.NODE_PROCESS_ENV = 42;",
          "63:   assert.equal(42, process.env.NODE_PROCESS_ENV);",
          "",
          "[Removed Lines]",
          "50:   assert.equal('asdf', process.env.hasOwnProperty);",
          "51:   var hasOwnProperty = Object.prototype.hasOwnProperty;",
          "52:   var has = hasOwnProperty.call(process.env, 'hasOwnProperty');",
          "53:   assert.equal(true, has);",
          "56:   assert.equal(Object.prototype.hasOwnProperty, process.env.hasOwnProperty);",
          "57:   var has = process.env.hasOwnProperty('hasOwnProperty');",
          "58:   assert.equal(false, has);",
          "60:   process.env.hasOwnProperty = 'asdf';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1a2255ab44d4c81e6f62a69dca5710f4f31b8a00",
      "candidate_info": {
        "commit_hash": "1a2255ab44d4c81e6f62a69dca5710f4f31b8a00",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1a2255ab44d4c81e6f62a69dca5710f4f31b8a00",
        "files": [
          "lib/fs.js",
          "test/simple/test-fs-sync-fd-leak.js"
        ],
        "message": "Faster fs.readFile and fs.readFileSync",
        "before_after_code_files": [
          "lib/fs.js||lifs.js",
          "test/simple/test-fs-sync-fd-leak.js||test/simple/test-fs-sync-fd-leak.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:   var encoding = typeof(encoding_) === 'string' ? encoding_ : null;",
          "104:   var callback = arguments[arguments.length - 1];",
          "105:   if (typeof(callback) !== 'function') callback = noop;",
          "122:   });",
          "148:         return callback(er);",
          "150:     }",
          "153: };",
          "155: fs.readFileSync = function(path, encoding) {",
          "156:   var fd = fs.openSync(path, constants.O_RDONLY, 438 /*=0666*/);",
          "162:   try {",
          "172:   } finally {",
          "173:     fs.closeSync(fd);",
          "174:   }",
          "191:   }",
          "193:   if (encoding) buffer = buffer.toString(encoding);",
          "194:   return buffer;",
          "195: };",
          "",
          "[Removed Lines]",
          "106:   var readStream = fs.createReadStream(path);",
          "107:   var buffers = [];",
          "108:   var nread = 0;",
          "109:   var error;",
          "111:   readStream.on('data', function(chunk) {",
          "112:     buffers.push(chunk);",
          "113:     nread += chunk.length;",
          "114:   });",
          "116:   readStream.on('error', function(er) {",
          "117:     error = er;",
          "118:     readStream.destroy();",
          "119:     if (!readStream.fd) {",
          "120:       readStream.emit('close');",
          "121:     }",
          "124:   readStream.on('close', function() {",
          "125:     if (error) {",
          "126:       return callback(error);",
          "127:     }",
          "130:     var buffer;",
          "131:     switch (buffers.length) {",
          "132:       case 0: buffer = new Buffer(0); break;",
          "133:       case 1: buffer = buffers[0]; break;",
          "134:       default: // concat together",
          "135:         buffer = new Buffer(nread);",
          "136:         var n = 0;",
          "137:         buffers.forEach(function(b) {",
          "138:           var l = b.length;",
          "139:           b.copy(buffer, n, 0, l);",
          "140:           n += l;",
          "141:         });",
          "142:         break;",
          "143:     }",
          "144:     if (encoding) {",
          "145:       try {",
          "146:         buffer = buffer.toString(encoding);",
          "147:       } catch (er) {",
          "149:       }",
          "151:     callback(null, buffer);",
          "152:   });",
          "157:   var buffer = new Buffer(4048);",
          "158:   var buffers = [];",
          "159:   var nread = 0;",
          "160:   var lastRead = 0;",
          "163:     do {",
          "164:       if (lastRead) {",
          "165:         buffer._bytesRead = lastRead;",
          "166:         nread += lastRead;",
          "167:         buffers.push(buffer);",
          "168:       }",
          "169:       var buffer = new Buffer(4048);",
          "170:       lastRead = fs.readSync(fd, buffer, 0, buffer.length, null);",
          "171:     } while (lastRead > 0);",
          "176:   if (buffers.length > 1) {",
          "177:     var offset = 0;",
          "178:     var i;",
          "179:     buffer = new Buffer(nread);",
          "180:     buffers.forEach(function(i) {",
          "181:       if (!i._bytesRead) return;",
          "182:       i.copy(buffer, offset, 0, i._bytesRead);",
          "183:       offset += i._bytesRead;",
          "184:     });",
          "185:   } else if (buffers.length) {",
          "188:     buffer = buffers[0].slice(0, buffers[0]._bytesRead);",
          "189:   } else {",
          "190:     buffer = new Buffer(0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-fs-sync-fd-leak.js||test/simple/test-fs-sync-fd-leak.js": [
          "File: test/simple/test-fs-sync-fd-leak.js -> test/simple/test-fs-sync-fd-leak.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:   throw new Error('BAM');",
          "39: };",
          "41: ensureThrows(function() {",
          "42:   fs.readFileSync('dummy');",
          "43: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: fs.fstatSync = function() {",
          "42:   throw new Error('BAM');",
          "43: };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c5828b65be98fd5cb75fa266bd24e435ce0b71d",
      "candidate_info": {
        "commit_hash": "2c5828b65be98fd5cb75fa266bd24e435ce0b71d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2c5828b65be98fd5cb75fa266bd24e435ce0b71d",
        "files": [
          "node.gyp",
          "src/node.cc",
          "src/node_io_watcher.cc",
          "src/node_io_watcher.h"
        ],
        "message": "Remove node_io_watcher",
        "before_after_code_files": [
          "node.gyp||node.gyp",
          "src/node.cc||src/node.cc",
          "src/node_io_watcher.cc||src/node_io_watcher.cc",
          "src/node_io_watcher.h||src/node_io_watcher.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:           'libraries': [ '-lpsapi.lib' ]",
          "206:         }, { # POSIX",
          "207:           'defines': [ '__POSIX__' ],",
          "211:         }],",
          "212:         [ 'OS==\"mac\"', {",
          "213:           'libraries': [ '-framework Carbon' ],",
          "",
          "[Removed Lines]",
          "208:           'sources': [",
          "209:             'src/node_io_watcher.cc',",
          "210:           ],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "63: #endif",
          "65: #include \"node_buffer.h\"",
          "69: #include \"node_file.h\"",
          "70: #include \"node_http_parser.h\"",
          "71: #include \"node_constants.h\"",
          "",
          "[Removed Lines]",
          "66: #ifdef __POSIX__",
          "67: # include \"node_io_watcher.h\"",
          "68: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1862:     DefineConstants(exports);",
          "1863:     binding_cache->Set(module, exports);",
          "1872:   } else if (!strcmp(*module_v, \"natives\")) {",
          "1873:     exports = Object::New();",
          "1874:     DefineJavaScript(exports);",
          "",
          "[Removed Lines]",
          "1865: #ifdef __POSIX__",
          "1866:   } else if (!strcmp(*module_v, \"io_watcher\")) {",
          "1867:     exports = Object::New();",
          "1868:     IOWatcher::Initialize(exports);",
          "1869:     binding_cache->Set(module, exports);",
          "1870: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/node_io_watcher.cc||src/node_io_watcher.cc": [
          "File: src/node_io_watcher.cc -> src/node_io_watcher.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/node_io_watcher.h||src/node_io_watcher.h": [
          "File: src/node_io_watcher.h -> src/node_io_watcher.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f105f2f2fd105a28e56f112bf759ae7f18743c4c",
      "candidate_info": {
        "commit_hash": "f105f2f2fd105a28e56f112bf759ae7f18743c4c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f105f2f2fd105a28e56f112bf759ae7f18743c4c",
        "files": [
          "doc/api/cluster.markdown",
          "lib/querystring.js"
        ],
        "message": "trivial: Doc typo and lint fix",
        "before_after_code_files": [
          "lib/querystring.js||lib/querystring.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/querystring.js||lib/querystring.js": [
          "File: lib/querystring.js -> lib/querystring.js"
        ]
      }
    },
    {
      "candidate_hash": "25aea2a072ab75ac766c00aa9ddf3c022aa95d40",
      "candidate_info": {
        "commit_hash": "25aea2a072ab75ac766c00aa9ddf3c022aa95d40",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/25aea2a072ab75ac766c00aa9ddf3c022aa95d40",
        "files": [
          "lib/fs.js"
        ],
        "message": "fs: hook up handle wrap to owning object",
        "before_after_code_files": [
          "lib/fs.js||lifs.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "737:   var self = this;",
          "738:   var FSEvent = process.binding('fs_event_wrap').FSEvent;",
          "739:   this._handle = new FSEvent();",
          "741:   this._handle.onchange = function(status, event, filename) {",
          "742:     if (status) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}