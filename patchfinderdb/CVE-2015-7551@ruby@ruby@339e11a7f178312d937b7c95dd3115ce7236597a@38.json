{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6968f3a0fd1e06a057376948e3747dc7307e6a1a",
      "candidate_info": {
        "commit_hash": "6968f3a0fd1e06a057376948e3747dc7307e6a1a",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/6968f3a0fd1e06a057376948e3747dc7307e6a1a",
        "files": [
          "ChangeLog",
          "lib/rubygems/test_case.rb",
          "version.h"
        ],
        "message": "Revert previous commit because it was a mistake.\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54690 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/rubygems/test_case.rb||lib/rubygems/test_case.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/rubygems/test_case.rb||lib/rubygems/test_case.rb": [
          "File: lib/rubygems/test_case.rb -> lib/rubygems/test_case.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "247:       @tempdir.untaint",
          "248:     end",
          "261:     @gemhome  = File.join @tempdir, 'gemhome'",
          "262:     @userhome = File.join @tempdir, 'userhome'",
          "263:     ENV[\"GEM_SPEC_CACHE\"] = File.join @tempdir, 'spec_cache'",
          "",
          "[Removed Lines]",
          "250:     # This makes the tempdir consistent on Windows.",
          "251:     # Dir.tmpdir may return short path name, but Dir[Dir.tmpdir] returns long",
          "252:     # path name. https://bugs.ruby-lang.org/issues/10819",
          "253:     # File.expand_path or File.realpath doesn't convert path name to long path",
          "254:     # name. Only Dir[] (= Dir.glob) works.",
          "255:     # Short and long path name is specific to Windows filesystem.",
          "256:     if win_platform?",
          "257:       @tempdir = Dir[@tempdir][0]",
          "258:       @tempdir.untaint",
          "259:     end",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.10\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 4",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2016-04-22\"",
          "3: #define RUBY_PATCHLEVEL 493",
          "7: #define RUBY_RELEASE_DAY 22",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2016-04-01\"",
          "3: #define RUBY_PATCHLEVEL 492",
          "7: #define RUBY_RELEASE_DAY 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf8a18ac9a19b78a968e0ecd217f0c64d7c2d24e",
      "candidate_info": {
        "commit_hash": "bf8a18ac9a19b78a968e0ecd217f0c64d7c2d24e",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/bf8a18ac9a19b78a968e0ecd217f0c64d7c2d24e",
        "files": [
          "ChangeLog",
          "gc.c",
          "version.h"
        ],
        "message": "merge revision(s) 49792: [Backport #10918]\n\n\t* gc.c (id2ref): prohibit from accessing internal objects.\n\t  [ruby-core:68348] [Bug #10918]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50571 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "gc.c||gc.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "gc.c||gc.c": [
          "File: gc.c -> gc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2332:     if (!is_live_object(objspace, ptr)) {",
          "2333:  rb_raise(rb_eRangeError, \"%p is recycled object\", p0);",
          "2334:     }",
          "2335:     return (VALUE)ptr;",
          "2336: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2335:     if (RBASIC(ptr)->klass == 0) {",
          "2336:  rb_raise(rb_eRangeError, \"%p is internal object\", p0);",
          "2337:     }",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-05-21\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 5",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 346",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 347",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51954bd21f990be9a4b8aaabbedfca3f61b13f44",
      "candidate_info": {
        "commit_hash": "51954bd21f990be9a4b8aaabbedfca3f61b13f44",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/51954bd21f990be9a4b8aaabbedfca3f61b13f44",
        "files": [
          "ChangeLog",
          "string.c",
          "test/ruby/test_m17n.rb",
          "version.h"
        ],
        "message": "merge revision(s) 51344: [Backport #11387]\n\n\t* string.c (rb_str_reverse): reversed string is not a substring,\n\t  and should not set coderange of the original string.\n\t  [ruby-dev:49189] [Bug #11387]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51600 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "string.c||string.c",
          "test/ruby/test_m17n.rb||test/ruby/test_m17n.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "string.c||string.c": [
          "File: string.c -> string.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4544:     rb_encoding *enc;",
          "4545:     VALUE rev;",
          "4546:     char *s, *e, *p;",
          "4549:     if (RSTRING_LEN(str) <= 1) return rb_str_dup(str);",
          "4550:     enc = STR_ENC_GET(str);",
          "4551:     rev = rb_str_new5(str, 0, RSTRING_LEN(str));",
          "4552:     s = RSTRING_PTR(str); e = RSTRING_END(str);",
          "4553:     p = RSTRING_END(rev);",
          "4555:     if (RSTRING_LEN(str) > 1) {",
          "4556:  if (single_byte_optimizable(str)) {",
          "",
          "[Removed Lines]",
          "4547:     int single = 1;",
          "",
          "[Added Lines]",
          "4547:     int cr;",
          "4554:     cr = ENC_CODERANGE(str);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4559:      }",
          "4560:  }",
          "4562:      while (s < e) {",
          "4563:   int clen = rb_enc_fast_mbclen(s, e, enc);",
          "4566:   p -= clen;",
          "4567:   memcpy(p, s, clen);",
          "4568:   s += clen;",
          "4569:      }",
          "4570:  }",
          "4571:  else {",
          "4572:      while (s < e) {",
          "4573:   int clen = rb_enc_mbclen(s, e, enc);",
          "4576:   p -= clen;",
          "4577:   memcpy(p, s, clen);",
          "4578:   s += clen;",
          "",
          "[Removed Lines]",
          "4561:  else if (ENC_CODERANGE(str) == ENC_CODERANGE_VALID) {",
          "4565:   if (clen > 1 || (*s & 0x80)) single = 0;",
          "4575:   if (clen > 1 || (*s & 0x80)) single = 0;",
          "",
          "[Added Lines]",
          "4562:  else if (cr == ENC_CODERANGE_VALID) {",
          "4572:      cr = rb_enc_asciicompat(enc) ?",
          "4573:   ENC_CODERANGE_7BIT : ENC_CODERANGE_VALID;",
          "4577:   if (clen > 1 || (*s & 0x80)) cr = ENC_CODERANGE_UNKNOWN;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4581:     }",
          "4582:     STR_SET_LEN(rev, RSTRING_LEN(str));",
          "4583:     OBJ_INFECT(rev, str);",
          "4594:     return rev;",
          "4595: }",
          "",
          "[Removed Lines]",
          "4584:     if (ENC_CODERANGE(str) == ENC_CODERANGE_UNKNOWN) {",
          "4585:  if (single) {",
          "4586:      ENC_CODERANGE_SET(str, ENC_CODERANGE_7BIT);",
          "4587:  }",
          "4588:  else {",
          "4589:      ENC_CODERANGE_SET(str, ENC_CODERANGE_VALID);",
          "4590:  }",
          "4591:     }",
          "4592:     rb_enc_cr_str_copy_for_substr(rev, str);",
          "",
          "[Added Lines]",
          "4586:     str_enc_copy(rev, str);",
          "4587:     ENC_CODERANGE_SET(rev, cr);",
          "",
          "---------------"
        ],
        "test/ruby/test_m17n.rb||test/ruby/test_m17n.rb": [
          "File: test/ruby/test_m17n.rb -> test/ruby/test_m17n.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1132:   end",
          "1134:   def test_reverse",
          "1136:   end",
          "1138:   def test_reverse_bang",
          "",
          "[Removed Lines]",
          "1135:     assert_equal(u(\"\\xf0jihgfedcba\"), u(\"abcdefghij\\xf0\").reverse)",
          "",
          "[Added Lines]",
          "1135:     bug11387 = '[ruby-dev:49189] [Bug #11387]'",
          "1136:     s1 = u(\"abcdefghij\\xf0\")",
          "1137:     s2 = s1.reverse",
          "1138:     assert_not_predicate(s1, :valid_encoding?, bug11387)",
          "1139:     assert_equal(u(\"\\xf0jihgfedcba\"), s2)",
          "1140:     assert_not_predicate(s2, :valid_encoding?, bug11387)",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-08-17\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 8",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 383",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 384",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ce1bf8f3da8a37cea7112b3cb5859da80343b0b",
      "candidate_info": {
        "commit_hash": "9ce1bf8f3da8a37cea7112b3cb5859da80343b0b",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/9ce1bf8f3da8a37cea7112b3cb5859da80343b0b",
        "files": [
          "ChangeLog",
          "lib/rubygems.rb",
          "lib/rubygems/remote_fetcher.rb",
          "test/rubygems/test_gem_remote_fetcher.rb",
          "version.h"
        ],
        "message": "merge revision(s) 50829: [Backport #11248]\n\n* lib/rubygems.rb: bump version to 2.4.5.1. this version fixed\n  CVE-2015-3900.\n\n* lib/rubygems/remote_fetcher.rb: ditto.\n\n* test/rubygems/test_gem_remote_fetcher.rb: added testcase for CVE-2015-3900\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51627 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/rubygems.rb||lib/rubygems.rb",
          "lib/rubygems/remote_fetcher.rb||lib/rubygems/remote_fetcher.rb",
          "test/rubygems/test_gem_remote_fetcher.rb||test/rubygems/test_gem_remote_fetcher.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/rubygems.rb||lib/rubygems.rb": [
          "File: lib/rubygems.rb -> lib/rubygems.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: require 'rbconfig'",
          "10: module Gem",
          "12: end",
          "14: # Must be first since it unloads the prelude from 1.9.2",
          "",
          "[Removed Lines]",
          "11:   VERSION = '2.2.3'",
          "",
          "[Added Lines]",
          "11:   VERSION = '2.2.5'",
          "",
          "---------------"
        ],
        "lib/rubygems/remote_fetcher.rb||lib/rubygems/remote_fetcher.rb": [
          "File: lib/rubygems/remote_fetcher.rb -> lib/rubygems/remote_fetcher.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:     rescue Resolv::ResolvError",
          "91:       uri",
          "92:     else",
          "94:     end",
          "95:   end",
          "",
          "[Removed Lines]",
          "93:       URI.parse \"#{uri.scheme}://#{res.target}#{uri.path}\"",
          "",
          "[Added Lines]",
          "93:       target = res.target.to_s.strip",
          "95:       if /\\.#{Regexp.quote(host)}\\z/ =~ target",
          "96:         return URI.parse \"#{uri.scheme}://#{target}#{uri.path}\"",
          "97:       end",
          "99:       uri",
          "",
          "---------------"
        ],
        "test/rubygems/test_gem_remote_fetcher.rb||test/rubygems/test_gem_remote_fetcher.rb": [
          "File: test/rubygems/test_gem_remote_fetcher.rb -> test/rubygems/test_gem_remote_fetcher.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:   end",
          "165:   def test_api_endpoint",
          "166:     uri = URI.parse \"http://gems.example.com/foo\"",
          "167:     target = MiniTest::Mock.new",
          "168:     target.expect :target, \"blah.com\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:     uri = URI.parse \"http://example.com/foo\"",
          "167:     target = MiniTest::Mock.new",
          "168:     target.expect :target, \"gems.example.com\"",
          "170:     dns = MiniTest::Mock.new",
          "171:     dns.expect :getresource, target, [String, Object]",
          "173:     fetch = Gem::RemoteFetcher.new nil, dns",
          "174:     assert_equal URI.parse(\"http://gems.example.com/foo\"), fetch.api_endpoint(uri)",
          "176:     target.verify",
          "177:     dns.verify",
          "178:   end",
          "180:   def test_api_endpoint_ignores_trans_domain_values",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:     dns.expect :getresource, target, [String, Object]",
          "173:     fetch = Gem::RemoteFetcher.new nil, dns",
          "176:     target.verify",
          "177:     dns.verify",
          "",
          "[Removed Lines]",
          "174:     assert_equal URI.parse(\"http://blah.com/foo\"), fetch.api_endpoint(uri)",
          "",
          "[Added Lines]",
          "189:     assert_equal URI.parse(\"http://gems.example.com/foo\"), fetch.api_endpoint(uri)",
          "191:     target.verify",
          "192:     dns.verify",
          "193:   end",
          "195:   def test_api_endpoint_ignores_trans_domain_values_that_starts_with_original",
          "196:     uri = URI.parse \"http://example.com/foo\"",
          "197:     target = MiniTest::Mock.new",
          "198:     target.expect :target, \"example.combadguy.com\"",
          "200:     dns = MiniTest::Mock.new",
          "201:     dns.expect :getresource, target, [String, Object]",
          "203:     fetch = Gem::RemoteFetcher.new nil, dns",
          "204:     assert_equal URI.parse(\"http://example.com/foo\"), fetch.api_endpoint(uri)",
          "206:     target.verify",
          "207:     dns.verify",
          "208:   end",
          "210:   def test_api_endpoint_ignores_trans_domain_values_that_end_with_original",
          "211:     uri = URI.parse \"http://example.com/foo\"",
          "212:     target = MiniTest::Mock.new",
          "213:     target.expect :target, \"badexample.com\"",
          "215:     dns = MiniTest::Mock.new",
          "216:     dns.expect :getresource, target, [String, Object]",
          "218:     fetch = Gem::RemoteFetcher.new nil, dns",
          "219:     assert_equal URI.parse(\"http://example.com/foo\"), fetch.api_endpoint(uri)",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 8",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-08-17\"",
          "3: #define RUBY_PATCHLEVEL 399",
          "7: #define RUBY_RELEASE_DAY 17",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-08-18\"",
          "3: #define RUBY_PATCHLEVEL 400",
          "7: #define RUBY_RELEASE_DAY 18",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51e8c8199cf6068496fa495a00d36fb7e674ce77",
      "candidate_info": {
        "commit_hash": "51e8c8199cf6068496fa495a00d36fb7e674ce77",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/51e8c8199cf6068496fa495a00d36fb7e674ce77",
        "files": [
          "ChangeLog",
          "string.c",
          "version.h"
        ],
        "message": "merge revision(s) r48747,r48772: [Backport #10582]\n\n\t* string.c: [DOC] Add missing documentation around String#chomp.\n\t  Patch by @stderr [ci skip][fix GH-780]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49911 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "string.c||string.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "string.c||string.c": [
          "File: string.c -> string.c"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-03-10\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 310",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 311",
          "",
          "---------------"
        ]
      }
    }
  ]
}