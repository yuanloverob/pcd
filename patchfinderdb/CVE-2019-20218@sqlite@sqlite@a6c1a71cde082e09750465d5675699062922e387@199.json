{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bf00f6d7ece6a1e207e096a9a94e039594fb6d77",
      "candidate_info": {
        "commit_hash": "bf00f6d7ece6a1e207e096a9a94e039594fb6d77",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bf00f6d7ece6a1e207e096a9a94e039594fb6d77",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Enhanced VdbeCoverage() macros in the new windows function code.\n\nFossilOrigin-Name: f24066f8dd847dfb656f26c4a8142e7fb6a412ffe325aea6254cb122cfbb3e1c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bb643bac535ac7d5fb4c13edb8782cd13540bbc7d2b2deb689f4ca8d1914f422",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1835:   sqlite3VdbeJumpHere(v, addrGe);",
          "1836:   sqlite3VdbeAddOp3(v, op, reg2, lbl, reg1);",
          "1837:   sqlite3VdbeChangeP5(v, SQLITE_NULLEQ);",
          "1840:   sqlite3ReleaseTempReg(pParse, reg1);",
          "1841:   sqlite3ReleaseTempReg(pParse, reg2);",
          "",
          "[Removed Lines]",
          "1838:   VdbeCoverage(v);",
          "",
          "[Added Lines]",
          "1838:   assert( op==OP_Ge || op==OP_Gt || op==OP_Le );",
          "1839:   VdbeCoverageIf(v, op==OP_Ge);",
          "1840:   VdbeCoverageIf(v, op==OP_Gt);",
          "1841:   VdbeCoverageIf(v, op==OP_Le);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2533:   if( pMWin->eStart==pMWin->eEnd && regStart ){",
          "2534:     int op = ((pMWin->eStart==TK_FOLLOWING) ? OP_Ge : OP_Le);",
          "2535:     int addrGe = sqlite3VdbeAddOp3(v, op, regStart, 0, regEnd);",
          "2537:     windowAggFinal(&s, 0);",
          "2538:     sqlite3VdbeAddOp2(v, OP_Rewind, s.current.csr, 1);",
          "2539:     VdbeCoverageNeverTaken(v);",
          "",
          "[Removed Lines]",
          "2536:     VdbeCoverage(v);",
          "",
          "[Added Lines]",
          "2539:     VdbeCoverageIf(v, op==OP_Ge);",
          "2540:     VdbeCoverageIf(v, op==OP_Le);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7fe2fc0dcb0bb214fe83a8a8fcdeb553fb20b97d",
      "candidate_info": {
        "commit_hash": "7fe2fc0dcb0bb214fe83a8a8fcdeb553fb20b97d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7fe2fc0dcb0bb214fe83a8a8fcdeb553fb20b97d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "src/expr.c",
          "test/gencol1.test"
        ],
        "message": "Fix a problem with foreign keys and generated columns discovered by Manuel Rigger.\n\nFossilOrigin-Name: 27c0fdab1ba4d4993b164eb4b777c63e82aa247c3fa406121dc8ed94970a0b35",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "src/expr.c||src/expr.c",
          "test/gencol1.test||test/gencol1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ef73107f475e40e6bdd8b722e96992070f81fd2b7a3cb718ec8f251c89ca3e81",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "952: i16 sqlite3TableColumnToStorage(Table *pTab, i16 iCol){",
          "953:   int i;",
          "954:   i16 n;",
          "955:   assert( iCol<pTab->nCol );",
          "957:   for(i=0, n=0; i<iCol; i++){",
          "958:     if( (pTab->aCol[i].colFlags & COLFLAG_VIRTUAL)==0 ) n++;",
          "959:   }",
          "",
          "[Removed Lines]",
          "956:   if( (pTab->tabFlags & TF_HasVirtual)==0 ) return iCol;",
          "",
          "[Added Lines]",
          "958:   if( (pTab->tabFlags & TF_HasVirtual)==0 || iCol<0 ) return iCol;",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4136:       Table *pTab = pExpr->y.pTab;",
          "4137:       int iCol = pExpr->iColumn;",
          "4138:       int p1 = pExpr->iTable * (pTab->nCol+1) + 1",
          "4141:       assert( pExpr->iTable==0 || pExpr->iTable==1 );",
          "4142:       assert( iCol>=-1 && iCol<pTab->nCol );",
          "",
          "[Removed Lines]",
          "4139:                      + (iCol>=0 ? sqlite3TableColumnToStorage(pTab, iCol) : -1);",
          "",
          "[Added Lines]",
          "4139:                      + sqlite3TableColumnToStorage(pTab, iCol);",
          "",
          "---------------"
        ],
        "test/gencol1.test||test/gencol1.test": [
          "File: test/gencol1.test -> test/gencol1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "272:   PRAGMA integrity_check;",
          "273: } {ok}",
          "275: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "275: # 2019-12-06 Found by mrigger",
          "276: #",
          "277: sqlite3 db :memory:",
          "278: do_execsql_test gencol1-11.10 {",
          "279:   PRAGMA foreign_keys = true;",
          "280:   CREATE TABLE t0(",
          "281:     c0,",
          "282:     c1 INTEGER PRIMARY KEY,",
          "283:     c2 BLOB UNIQUE DEFAULT x'00',",
          "284:     c3 BLOB GENERATED ALWAYS AS (1),",
          "285:     FOREIGN KEY(c1) REFERENCES t0(c2)",
          "286:   );",
          "287: }",
          "288: do_catchsql_test gencol1-11.20 {",
          "289:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
          "290: } {1 {FOREIGN KEY constraint failed}}",
          "291: do_execsql_test gencol1-11.30 {",
          "292:   DROP TABLE t0;",
          "293:   CREATE TABLE t0(",
          "294:     c0,",
          "295:     c1 INTEGER PRIMARY KEY,",
          "296:     c3 BLOB GENERATED ALWAYS AS (1),",
          "297:     c2 BLOB UNIQUE DEFAULT x'00',",
          "298:     FOREIGN KEY(c1) REFERENCES t0(c2)",
          "299:   );",
          "300: }",
          "301: do_catchsql_test gencol1-11.40 {",
          "302:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
          "303: } {1 {FOREIGN KEY constraint failed}}",
          "304: do_execsql_test gencol1-11.50 {",
          "305:   DROP TABLE t0;",
          "306:   CREATE TABLE t0(",
          "307:     c0,",
          "308:     c3 BLOB GENERATED ALWAYS AS (1),",
          "309:     c1 INTEGER PRIMARY KEY,",
          "310:     c2 BLOB UNIQUE DEFAULT x'00',",
          "311:     FOREIGN KEY(c1) REFERENCES t0(c2)",
          "312:   );",
          "313: }",
          "314: do_catchsql_test gencol1-11.60 {",
          "315:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
          "316: } {1 {FOREIGN KEY constraint failed}}",
          "317: do_execsql_test gencol1-11.70 {",
          "318:   DROP TABLE t0;",
          "319:   CREATE TABLE t0(",
          "320:     c3 BLOB GENERATED ALWAYS AS (1),",
          "321:     c0,",
          "322:     c1 INTEGER PRIMARY KEY,",
          "323:     c2 BLOB UNIQUE DEFAULT x'00',",
          "324:     FOREIGN KEY(c1) REFERENCES t0(c2)",
          "325:   );",
          "326: }",
          "327: do_catchsql_test gencol1-11.80 {",
          "328:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
          "329: } {1 {FOREIGN KEY constraint failed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "40f827a65e3328b072a37eb14dcf93cccfd5aba3",
      "candidate_info": {
        "commit_hash": "40f827a65e3328b072a37eb14dcf93cccfd5aba3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/40f827a65e3328b072a37eb14dcf93cccfd5aba3",
        "files": [
          "README.md",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Improvements to the README.md file.  No code changes.\n\nFossilOrigin-Name: bbdbaf84a52937ccf877072a8b01b07f7b9c037c59ba54df72ca888d5404cbad",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b2011c13173114505705d2ff2ba6f476697d51aca0bddd585a9e5a639dca41e2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61ad5513e05469c93546a3324f53e8ff0efa3b18",
      "candidate_info": {
        "commit_hash": "61ad5513e05469c93546a3324f53e8ff0efa3b18",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/61ad5513e05469c93546a3324f53e8ff0efa3b18",
        "files": [
          "Makefile.msc",
          "autoconf/Makefile.msc",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Support building the Tcl bindings DLL using MSVC.\n\nFossilOrigin-Name: b2011c13173114505705d2ff2ba6f476697d51aca0bddd585a9e5a639dca41e2",
        "before_after_code_files": [
          "Makefile.msc||Makefile.msc",
          "autoconf/Makefile.msc||autoconf/Makefile.msc",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.msc||Makefile.msc": [
          "File: Makefile.msc -> Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "320: SQLITETCLDECLSH = sqlite_tclDecls.h",
          "321: !ENDIF",
          "323: # These are the additional targets that the targets that integrate with the",
          "324: # Tcl library should depend on when compiling, etc.",
          "325: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323: # This is the name to use for the dynamic link library (DLL) containing the",
          "324: # Tcl bindings for SQLite.",
          "325: #",
          "326: !IFNDEF SQLITE3TCLDLL",
          "327: SQLITE3TCLDLL = tclsqlite3.dll",
          "328: !ENDIF",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "495: # will run on the platform that is doing the build.",
          "496: #",
          "497: !IF $(USE_FULLWARN)!=0",
          "499: !ELSE",
          "501: !ENDIF",
          "503: # Check if assembly code listings should be generated for the source",
          "",
          "[Removed Lines]",
          "498: BCC = $(NCC) -nologo -W4 $(CCOPTS) $(BCCOPTS)",
          "500: BCC = $(NCC) -nologo -W3 $(CCOPTS) $(BCCOPTS)",
          "",
          "[Added Lines]",
          "505: BCC = $(NCC) -nologo -W4 -Fd$*.pdb $(CCOPTS) $(BCCOPTS)",
          "507: BCC = $(NCC) -nologo -W3 -Fd$*.pdb $(CCOPTS) $(BCCOPTS)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "853: # prior to running nmake in order to match the actual installed location and",
          "854: # version on this machine.",
          "855: #",
          "856: !IFNDEF TCLDIR",
          "857: TCLDIR = $(TOP)\\compat\\tcl",
          "858: !ENDIF",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "863: !IFNDEF TCLVERSION",
          "864: TCLVERSION = 86",
          "865: !ENDIF",
          "867: !IFNDEF TCLSUFFIX",
          "868: TCLSUFFIX =",
          "869: !ENDIF",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "866: !ENDIF",
          "868: !IFNDEF LIBTCL",
          "870: !ENDIF",
          "872: !IFNDEF LIBTCLSTUB",
          "874: !ENDIF",
          "876: !IFNDEF LIBTCLPATH",
          "",
          "[Removed Lines]",
          "869: LIBTCL = tcl86.lib",
          "873: LIBTCLSTUB = tclstub86.lib",
          "",
          "[Added Lines]",
          "884: LIBTCL = tcl$(TCLVERSION)$(TCLSUFFIX).lib",
          "888: LIBTCLSTUB = tclstub$(TCLVERSION)$(TCLSUFFIX).lib",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1063: # Command line prefixes for compiling code, compiling resources,",
          "1064: # linking, etc.",
          "1065: #",
          "1067: LTRCOMPILE = $(RCC) -r",
          "1068: LTLIB = lib.exe",
          "1069: LTLINK = $(TCC) -Fe$@",
          "",
          "[Removed Lines]",
          "1066: LTCOMPILE = $(TCC) -Fo$@",
          "",
          "[Added Lines]",
          "1081: LTCOMPILE = $(TCC) -Fo$@ -Fd$*.pdb",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1081: !IFDEF PLATFORM",
          "1082: LTLINKOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "1083: LTLIBOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "1084: !ELSE",
          "1085: LTLINKOPTS = /NOLOGO",
          "1086: LTLIBOPTS = /NOLOGO",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1099: !ELSEIF \"$(VISUALSTUDIOVERSION)\"==\"12.0\" || \\",
          "1100:         \"$(VISUALSTUDIOVERSION)\"==\"14.0\" || \\",
          "1101:         \"$(VISUALSTUDIOVERSION)\"==\"15.0\"",
          "1102: LTLINKOPTS = /NOLOGO /MACHINE:x86",
          "1103: LTLIBOPTS = /NOLOGO /MACHINE:x86",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1665: # Extra targets for the \"all\" target that require Tcl.",
          "1666: #",
          "1667: !IF $(NO_TCL)==0",
          "1669: !ELSE",
          "1670: ALL_TCL_TARGETS =",
          "1671: !ENDIF",
          "",
          "[Removed Lines]",
          "1668: ALL_TCL_TARGETS = libtclsqlite3.lib",
          "",
          "[Added Lines]",
          "1688: ALL_TCL_TARGETS = $(SQLITE3TCLDLL)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1697:  $(LTLIB) $(LTLIBOPTS) /OUT:$@ $(LIBOBJ) $(TLIBS)",
          "1699: libtclsqlite3.lib: tclsqlite.lo libsqlite3.lib",
          "1701: # <</mark>>",
          "1703: $(SQLITE3DLL): $(LIBOBJ) $(LIBRESOBJS) $(CORE_LINK_DEP)",
          "",
          "[Removed Lines]",
          "1700:  $(LTLIB) $(LTLIBOPTS) $(LTLIBPATHS) /OUT:$@ tclsqlite.lo libsqlite3.lib $(LIBTCLSTUB) $(TLIBS)",
          "",
          "[Added Lines]",
          "1720:  $(LTLIB) $(LTLIBOPTS) $(TCLLIBPATHS) $(LTLIBPATHS) /OUT:$@ tclsqlite.lo libsqlite3.lib $(LIBTCLSTUB) $(TLIBS)",
          "1722: tclsqlite3.def: tclsqlite.lo",
          "1723:  echo EXPORTS > tclsqlite3.def",
          "1724:  dumpbin /all tclsqlite.lo \\",
          "1725:   | $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl include \"^\\s+/EXPORT:_?((?:Sqlite3|Tclsqlite3)_[^@]*)(?:@\\d+)?$$\" \\1 \\",
          "1726:   | sort >> tclsqlite3.def",
          "1728: pkgIndex.tcl: $(TOP)\\VERSION",
          "1729:  for /F %%V in ('type \"$(TOP)\\VERSION\"') do ( \\",
          "1730:   echo package ifneeded sqlite3 @version@ [list load [file join $$dir $(SQLITE3TCLDLL)] sqlite3] \\",
          "1731:    | $(TCLSH_CMD) $(TOP)\\tool\\replace.tcl exact @version@ %%V > pkgIndex.tcl \\",
          "1732:  )",
          "1734: $(SQLITE3TCLDLL): libtclsqlite3.lib $(LIBRESOBJS) tclsqlite3.def pkgIndex.tcl",
          "1735:  $(LD) $(LDFLAGS) $(LTLINKOPTS) $(LTLIBPATHS) /DLL /DEF:tclsqlite3.def /OUT:$@ libtclsqlite3.lib $(LIBRESOBJS) $(LTLIBS) $(TLIBS)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1837: #",
          "1838: !IF $(USE_RC)!=0",
          "1839: # <<block1>>",
          "1841:  echo #ifndef SQLITE_RESOURCE_VERSION > sqlite3rc.h",
          "1842:  for /F %%V in ('type \"$(TOP)\\VERSION\"') do ( \\",
          "1843:   echo #define SQLITE_RESOURCE_VERSION %%V \\",
          "",
          "[Removed Lines]",
          "1840: $(LIBRESOBJS): $(TOP)\\src\\sqlite3.rc $(SQLITE3H)",
          "",
          "[Added Lines]",
          "1875: $(LIBRESOBJS): $(TOP)\\src\\sqlite3.rc $(SQLITE3H) $(TOP)\\VERSION",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2514:  del /Q *.bsc *.def *.cod *.da *.bb *.bbg *.vc gmon.out 2>NUL",
          "2515:  del /Q $(SQLITE3EXE) $(SQLITE3DLL) Replace.exe 2>NUL",
          "2516: # <<mark>>",
          "2517:  del /Q opcodes.c opcodes.h 2>NUL",
          "2518:  del /Q lemon.* lempar.c parse.* 2>NUL",
          "2519:  del /Q mksourceid.* mkkeywordhash.* keywordhash.h 2>NUL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2552:  del /Q $(SQLITE3TCLDLL) pkgIndex.tcl 2>NUL",
          "",
          "---------------"
        ],
        "autoconf/Makefile.msc||autoconf/Makefile.msc": [
          "File: autoconf/Makefile.msc -> autoconf/Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "433: # will run on the platform that is doing the build.",
          "434: #",
          "435: !IF $(USE_FULLWARN)!=0",
          "437: !ELSE",
          "439: !ENDIF",
          "441: # Check if assembly code listings should be generated for the source",
          "",
          "[Removed Lines]",
          "436: BCC = $(NCC) -nologo -W4 $(CCOPTS) $(BCCOPTS)",
          "438: BCC = $(NCC) -nologo -W3 $(CCOPTS) $(BCCOPTS)",
          "",
          "[Added Lines]",
          "436: BCC = $(NCC) -nologo -W4 -Fd$*.pdb $(CCOPTS) $(BCCOPTS)",
          "438: BCC = $(NCC) -nologo -W3 -Fd$*.pdb $(CCOPTS) $(BCCOPTS)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "808: # Command line prefixes for compiling code, compiling resources,",
          "809: # linking, etc.",
          "810: #",
          "812: LTRCOMPILE = $(RCC) -r",
          "813: LTLIB = lib.exe",
          "814: LTLINK = $(TCC) -Fe$@",
          "",
          "[Removed Lines]",
          "811: LTCOMPILE = $(TCC) -Fo$@",
          "",
          "[Added Lines]",
          "811: LTCOMPILE = $(TCC) -Fo$@ -Fd$*.pdb",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "826: !IFDEF PLATFORM",
          "827: LTLINKOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "828: LTLIBOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "829: !ELSE",
          "830: LTLINKOPTS = /NOLOGO",
          "831: LTLIBOPTS = /NOLOGO",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "829: !ELSEIF \"$(VISUALSTUDIOVERSION)\"==\"12.0\" || \\",
          "830:         \"$(VISUALSTUDIOVERSION)\"==\"14.0\" || \\",
          "831:         \"$(VISUALSTUDIOVERSION)\"==\"15.0\"",
          "832: LTLINKOPTS = /NOLOGO /MACHINE:x86",
          "833: LTLIBOPTS = /NOLOGO /MACHINE:x86",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5be64ea8e33f632f9c337feac9b0663d8e6e59fc9a71e5d832d9fd905c06458e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8f2b1e4c909df912209c34816ae33bf31cbb20b8",
      "candidate_info": {
        "commit_hash": "8f2b1e4c909df912209c34816ae33bf31cbb20b8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8f2b1e4c909df912209c34816ae33bf31cbb20b8",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/index6.test"
        ],
        "message": "Do not assume that \"x IS NOT ?\" implies \"x NOT NULL\" when considering partial indexes. Fix for ticket [8025674847].\n\nFossilOrigin-Name: 0ba6d709b50d92db1542f2ff30535a80184b00dadf759d51e5cae7a6e37b1764",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/index6.test||test/index6.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a194e53670e25a48c2bb51b54755abff88ed6ae2596c5858fb4aac16cb452bdf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4946:   if( pE2->op==TK_NOTNULL",
          "4947:    && pE1->op!=TK_ISNULL",
          "4948:    && pE1->op!=TK_IS",
          "4949:    && pE1->op!=TK_OR",
          "4950:   ){",
          "4951:     Expr *pX = sqlite3ExprSkipCollate(pE1->pLeft);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4949:    && pE1->op!=TK_ISNOT",
          "",
          "---------------"
        ],
        "test/index6.test||test/index6.test": [
          "File: test/index6.test -> test/index6.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "423:   SELECT * FROM t0 WHERE c0 OR 1;",
          "424: } {{}}",
          "426: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "426: # 2019-05-11",
          "427: # Ticket https://sqlite.org/src/tktview/8025674847",
          "428: reset_db",
          "429: do_execsql_test index6-14.1 {",
          "430:   CREATE TABLE IF NOT EXISTS t0 (c0, c1);",
          "431:   CREATE INDEX IF NOT EXISTS i0 ON t0(c0, c1) WHERE c0 NOT NULL;",
          "432:   INSERT INTO t0(c0, c1) VALUES(NULL, 'row');",
          "433:   SELECT * FROM t0 WHERE t0.c0 IS NOT 1;",
          "434: } {{} row}",
          "",
          "---------------"
        ]
      }
    }
  ]
}