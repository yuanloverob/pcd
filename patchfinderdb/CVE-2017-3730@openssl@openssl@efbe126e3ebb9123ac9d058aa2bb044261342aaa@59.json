{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b757d2d82fd3ed4028d505b645258c9d97115443",
      "candidate_info": {
        "commit_hash": "b757d2d82fd3ed4028d505b645258c9d97115443",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b757d2d82fd3ed4028d505b645258c9d97115443",
        "files": [
          "crypto/ec/ec_asn1.c"
        ],
        "message": "Iterate over EC_GROUP's poly array in a safe way\n\nPrevent that memory beyond the last element is accessed if every element\nof group->poly[] is non-zero\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2689)\n\n(cherry picked from commit 57f48f939ed5d3119e3c691ea0a8a3ac2f4a1a9e)",
        "before_after_code_files": [
          "crypto/ec/ec_asn1.c||crypto/ec/ec_asn1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ec/ec_asn1.c||crypto/ec/ec_asn1.c": [
          "File: crypto/ec/ec_asn1.c -> crypto/ec/ec_asn1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: int EC_GROUP_get_basis_type(const EC_GROUP *group)",
          "17: {",
          "20:     if (EC_METHOD_get_field_type(EC_GROUP_method_of(group)) !=",
          "21:         NID_X9_62_characteristic_two_field)",
          "23:         return 0;",
          "28:     if (i == 4)",
          "29:         return NID_X9_62_ppBasis;",
          "",
          "[Removed Lines]",
          "18:     int i = 0;",
          "25:     while (group->poly[i] != 0)",
          "26:         i++;",
          "",
          "[Added Lines]",
          "18:     int i;",
          "26:     for (i = 0;",
          "27:          i < (int)OSSL_NELEM(group->poly) & group->poly[i] != 0;",
          "28:          i++)",
          "29:         continue;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d32c2ae28952b5c1d7a24968e488532fcadc51a",
      "candidate_info": {
        "commit_hash": "6d32c2ae28952b5c1d7a24968e488532fcadc51a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6d32c2ae28952b5c1d7a24968e488532fcadc51a",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "Fix a mem leak in NPN handling\n\nIf a server sent multiple NPN extensions in a single ClientHello then a\nmem leak can occur. This will only happen where the client has requested\nNPN in the first place. It does not occur during renegotiation. Therefore\nthe maximum that could be leaked in a single connection with a malicious\nserver is 64k (the maximum size of the ServerHello extensions section). As\nthis is client side, only occurs if NPN has been requested and does not\noccur during renegotiation this is unlikely to be exploitable.\n\nIssue reported by Shi Lei.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2406:                 return 0;",
          "2407:             }",
          "2408:             s->next_proto_negotiated = OPENSSL_malloc(selected_len);",
          "2409:             if (s->next_proto_negotiated == NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2412:             OPENSSL_free(s->next_proto_negotiated);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "68f3b899105b5709b8d73265549c93a78e0f6e72",
      "candidate_info": {
        "commit_hash": "68f3b899105b5709b8d73265549c93a78e0f6e72",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/68f3b899105b5709b8d73265549c93a78e0f6e72",
        "files": [
          "Configurations/unix-Makefile.tmpl",
          "Makefile.shared"
        ],
        "message": "Remove automatic RPATH\n\nBefore OpenSSL 1.1.0, binaries were installed in a non-standard\nlocation by default, and runpath directories were therefore added in\nthose binaries, to make sure the executables would be able to find the\nshared libraries they were linked with.\n\nWith OpenSSL 1.1.0 and on, binaries are installed in standard\ndirectories by default, and the addition of runpath directories is\ntherefore not needed any more.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 075f7e2c6062a33352f570eeafe3c95e41419521)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl",
          "Makefile.shared||Makefile.shared"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "173: PLIB_LDFLAGS= {- $target{plib_lflags} -}",
          "174: EX_LIBS= {- $target{ex_libs} -} {- $config{ex_libs} -}",
          "175: LIB_CFLAGS={- $target{shared_cflag} || \"\" -}",
          "190: DSO_CFLAGS={- $target{shared_cflag} || \"\" -}",
          "191: DSO_LDFLAGS=$(LIB_LDFLAGS)",
          "192: BIN_CFLAGS={- $target{bin_cflags} -}",
          "",
          "[Removed Lines]",
          "176: LIB_LDFLAGS={- $target{shared_ldflag}.\" \".$config{shared_ldflag}",
          "177:                # Unlike other OSes (like Solaris, Linux, Tru64,",
          "178:                # IRIX) BSD run-time linkers (tested OpenBSD, NetBSD",
          "179:                # and FreeBSD) \"demand\" RPATH set on .so objects.",
          "180:                # Apparently application RPATH is not global and",
          "181:                # does not apply to .so linked with other .so.",
          "182:                # Problem manifests itself when libssl.so fails to",
          "183:                # load libcrypto.so. One can argue that we should",
          "184:                # engrave this into Makefile.shared rules or into",
          "185:                # BSD-* config lines above. Meanwhile let's try to",
          "186:                # be cautious and pass -rpath to linker only when",
          "187:                # $prefix is not /usr.",
          "188:                . ($config{target} =~ m|^BSD-| && $prefix !~ m|^/usr/.*$|",
          "189:                   ? \" -Wl,-rpath,\\$\\$(LIBRPATH)\" : \"\") -}",
          "",
          "[Added Lines]",
          "176: LIB_LDFLAGS={- $target{shared_ldflag}.\" \".$config{shared_ldflag} -}",
          "",
          "---------------"
        ],
        "Makefile.shared||Makefile.shared": [
          "File: Makefile.shared -> Makefile.shared",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:  ALLSYMSFLAGS='-Wl,--whole-archive'; \\",
          "177:  NOALLSYMSFLAGS='-Wl,--no-whole-archive'; \\",
          "178:  $(DO_GNU_SO_COMMON)",
          "181: #This is rather special.  It's a special target with which one can link",
          "182: #applications without bothering with any features that have anything to",
          "",
          "[Removed Lines]",
          "179: DO_GNU_APP=LDFLAGS=\"$(CFLAGS) $(LDFLAGS) -Wl,-rpath,$(LIBRPATH)\"",
          "",
          "[Added Lines]",
          "179: DO_GNU_APP=LDFLAGS=\"$(CFLAGS) $(LDFLAGS)\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "220:  fi; $(LINK_SO_SHLIB)",
          "221: link_app.bsd:",
          "222:  @if $(DETECT_GNU_LD); then $(DO_GNU_APP); else \\",
          "224:  fi; $(LINK_APP)",
          "226: # For Darwin AKA Mac OS/X (dyld)",
          "",
          "[Removed Lines]",
          "223:  LDFLAGS=\"$(CFLAGS) $(LDFLAGS) -Wl,-rpath,$(LIBPATH)\"; \\",
          "",
          "[Added Lines]",
          "223:  LDFLAGS=\"$(CFLAGS) $(LDFLAGS)\"; \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:  @if $(DETECT_GNU_LD); then \\",
          "353:   $(DO_GNU_APP); \\",
          "354:  else \\",
          "356:  fi; \\",
          "357:  $(LINK_APP)",
          "",
          "[Removed Lines]",
          "355:   LDFLAGS=\"$(CFLAGS) $(LDFLAGS) -rpath $(LIBRPATH)\"; \\",
          "",
          "[Added Lines]",
          "355:   LDFLAGS=\"$(CFLAGS) $(LDFLAGS)\"; \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "385:  @ if $(DETECT_GNU_LD); then \\",
          "386:   $(DO_GNU_APP); \\",
          "387:  else \\",
          "389:  fi; \\",
          "390:  $(LINK_APP)",
          "",
          "[Removed Lines]",
          "388:   LDFLAGS=\"$(CFLAGS) $(LDFLAGS) -R $(LIBRPATH)\"; \\",
          "",
          "[Added Lines]",
          "388:   LDFLAGS=\"$(CFLAGS) $(LDFLAGS)\"; \\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "476:  fi; \\",
          "477:  $(LINK_SO_SHLIB)",
          "478: link_app.irix:",
          "480:  $(LINK_APP)",
          "482: # 32-bit PA-RISC HP-UX embeds the -L pathname of libs we link with, so",
          "",
          "[Removed Lines]",
          "479:  @LDFLAGS=\"$(CFLAGS) $(LDFLAGS) -Wl,-rpath,$(LIBRPATH)\"; \\",
          "",
          "[Added Lines]",
          "479:  @LDFLAGS=\"$(CFLAGS) $(LDFLAGS)\"; \\",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "514:  $(LINK_SO_SHLIB) && chmod a=rx $$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX",
          "515: link_app.hpux:",
          "516:  @if $(DETECT_GNU_LD); then $(DO_GNU_APP); else \\",
          "518:  fi; \\",
          "519:  $(LINK_APP)",
          "",
          "[Removed Lines]",
          "517:  LDFLAGS=\"$(CFLAGS) $(LDFLAGS) -Wl,+s,+cdp,../:,+cdp,./:,+b,$(LIBRPATH)\"; \\",
          "",
          "[Added Lines]",
          "517:  LDFLAGS=\"$(CFLAGS) $(LDFLAGS) -Wl,+s,+cdp,../:,+cdp,./:\"; \\",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "540:  rm -f $(DSTDIR)/$$SHLIB$$SHLIB_SOVER 2>&1 > /dev/null ; \\",
          "541:  $(LINK_SO_SHLIB_VIA_O)",
          "542: link_app.aix:",
          "544:  $(LINK_APP)",
          "",
          "[Removed Lines]",
          "543:  LDFLAGS=\"$(CFLAGS) $(LDFLAGS) -Wl,-brtl,-blibpath:$(LIBRPATH):$${LIBPATH:-/usr/lib:/lib}\"; \\",
          "",
          "[Added Lines]",
          "543:  LDFLAGS=\"$(CFLAGS) -Wl,-bsvr4 $(LDFLAGS)\"; \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2cf10e88b7221e1edbbdc8ecc89abe2953a668b1",
      "candidate_info": {
        "commit_hash": "2cf10e88b7221e1edbbdc8ecc89abe2953a668b1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2cf10e88b7221e1edbbdc8ecc89abe2953a668b1",
        "files": [
          "Configurations/descrip.mms.tmpl",
          "Configurations/unix-Makefile.tmpl",
          "Configurations/windows-makefile.tmpl"
        ],
        "message": "Enable memory debugging while testing\n\nPre 1.1.0, 'make test' would set the environment variable\nOPENSSL_DEBUG_MEMORY to \"on\".  This got lost when translating the old\nbuild files to the new templates.  This changes reintroduces that\nvariable.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1840)\n(cherry picked from commit 6d4bc8a3d2c2f7701588bbfdea80a1f7a3973f26)",
        "before_after_code_files": [
          "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl",
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl",
          "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl": [
          "File: Configurations/descrip.mms.tmpl -> Configurations/descrip.mms.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "264:         DEFINE SRCTOP {- sourcedir() -}",
          "265:         DEFINE BLDTOP {- builddir() -}",
          "266:         DEFINE OPENSSL_ENGINES {- builddir(\"engines\") -}",
          "267:         IF \"$(VERBOSE)\" .NES. \"\" THEN DEFINE VERBOSE \"$(VERBOSE)\"",
          "268:         $(PERL) {- sourcefile(\"test\", \"run_tests.pl\") -} $(TESTS)",
          "269:         DEASSIGN OPENSSL_ENGINES",
          "270:         DEASSIGN BLDTOP",
          "271:         DEASSIGN SRCTOP",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "267:         DEFINE OPENSSL_DEBUG_MEMORY \"on\"",
          "270:         DEASSIGN OPENSSL_DEBUG_MEMORY",
          "",
          "---------------"
        ],
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "246:    PERL=\"$(PERL)\" \\",
          "247:    EXE_EXT={- $exeext -} \\",
          "248:    OPENSSL_ENGINES=../$(BLDDIR)/engines \\",
          "249:      $(PERL) ../$(SRCDIR)/test/run_tests.pl $(TESTS) )",
          "250:  @ : {- if ($disabled{tests}) { output_on(); } else { output_off(); } \"\" -}",
          "251:  @echo \"Tests are not supported with your chosen Configure options\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "249:    OPENSSL_DEBUG_MEMORY=on \\",
          "",
          "---------------"
        ],
        "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl": [
          "File: Configurations/windows-makefile.tmpl -> Configurations/windows-makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:  set SRCTOP=$(SRCDIR)",
          "199:  set BLDTOP=$(BLDDIR)",
          "200:  set PERL=$(PERL)",
          "201:  \"$(PERL)\" \"$(SRCDIR)\\test\\run_tests.pl\" $(TESTS)",
          "202:  @rem {- if ($disabled{tests}) { output_on(); } else { output_off(); } \"\" -}",
          "203:  @echo \"Tests are not supported with your chosen Configure options\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "201:  set OPENSSL_DEBUG_MEMORY=on",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea9b8d847f0c209e3caccb95a05fc20298c1d6eb",
      "candidate_info": {
        "commit_hash": "ea9b8d847f0c209e3caccb95a05fc20298c1d6eb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ea9b8d847f0c209e3caccb95a05fc20298c1d6eb",
        "files": [
          "apps/openssl.c"
        ],
        "message": "Remove unused variable\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2566)\n(cherry picked from commit a19a6c8179faa3da0dedaaf2effae385cf7dd65d)",
        "before_after_code_files": [
          "apps/openssl.c||apps/openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/openssl.c||apps/openssl.c": [
          "File: apps/openssl.c -> apps/openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: static void list_disabled(void);",
          "59: char *default_config_file = NULL;",
          "62: BIO *bio_in = NULL;",
          "63: BIO *bio_out = NULL;",
          "64: BIO *bio_err = NULL;",
          "",
          "[Removed Lines]",
          "61: static CONF *config = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248:  end:",
          "249:     OPENSSL_free(copied_argv);",
          "250:     OPENSSL_free(default_config_file);",
          "253:     lh_FUNCTION_free(prog);",
          "254:     OPENSSL_free(arg.argv);",
          "",
          "[Removed Lines]",
          "251:     NCONF_free(config);",
          "252:     config = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}