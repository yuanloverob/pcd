{
  "cve_id": "CVE-2015-8728",
  "cve_desc": "The Mobile Identity parser in (1) epan/dissectors/packet-ansi_a.c in the ANSI A dissector and (2) epan/dissectors/packet-gsm_a_common.c in the GSM A dissector in Wireshark 1.12.x before 1.12.9 and 2.0.x before 2.0.1 improperly uses the tvb_bcd_dig_to_wmem_packet_str function, which allows remote attackers to cause a denial of service (buffer overflow and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "15edc8d714b11dcff3a04e5d00b8db9adfdb81ed",
  "patch_info": {
    "commit_hash": "15edc8d714b11dcff3a04e5d00b8db9adfdb81ed",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/15edc8d714b11dcff3a04e5d00b8db9adfdb81ed",
    "files": [
      "epan/dissectors/packet-ansi_a.c",
      "epan/dissectors/packet-gsm_a_common.c"
    ],
    "message": "Fix bugs introduced in gcfc47c1\n\nBug: 11797\nChange-Id: I2574e19aa2b86f7c72370d98dd6a2b72b471da25\nReviewed-on: https://code.wireshark.org/review/12280\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-ansi_a.c||epan/dissectors/packet-ansi_a.c",
      "epan/dissectors/packet-gsm_a_common.c||epan/dissectors/packet-gsm_a_common.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-ansi_a.c||epan/dissectors/packet-ansi_a.c": [
      "File: epan/dissectors/packet-ansi_a.c -> epan/dissectors/packet-ansi_a.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2397:         proto_tree_add_item(tree, hf_ansi_a_meid_mid_digit_1, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
      "2398:         proto_tree_add_item(tree, hf_ansi_a_mid_odd_even_ind, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
      "2399:         proto_tree_add_item(tree, hf_ansi_a_mid_type_of_id, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
      "2403:             return (curr_offset - offset);",
      "2406:         proto_tree_add_string(tree, hf_ansi_a_meid, tvb, curr_offset, len - (curr_offset - offset), str);",
      "2408:         proto_item_append_text(data_p->elem_item, \" - MEID (%s)\", str);",
      "",
      "[Removed Lines]",
      "2400:         curr_offset++;",
      "2405:         str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), &Dgt_meid, FALSE);",
      "",
      "[Added Lines]",
      "2404:         str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), &Dgt_meid, TRUE);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2480:         proto_tree_add_item(tree, hf_ansi_a_mid_odd_even_ind, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
      "2481:         proto_tree_add_item(tree, hf_ansi_a_mid_type_of_id, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
      "2485:             return (curr_offset - offset);",
      "2488:         proto_tree_add_string_format(tree, hf_ansi_a_imsi, tvb, curr_offset, len - (curr_offset - offset),",
      "2489:                                      str, \"BCD Digits: %s\", str);",
      "",
      "[Removed Lines]",
      "2482:         curr_offset++;",
      "2487:         str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), &Dgt_msid, FALSE);",
      "",
      "[Added Lines]",
      "2485:         str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), &Dgt_msid, TRUE);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "6996: static guint8",
      "6997: elem_dtmf_chars(tvbuff_t *tvb, packet_info *pinfo _U_, proto_tree *tree, guint32 offset, guint len, ansi_a_shared_data_t *data_p)",
      "6998: {",
      "6999:     guint32     curr_offset;",
      "7000:     guint8      packed_len;",
      "7003:     curr_offset = offset;",
      "7005:     proto_tree_add_item(tree, hf_ansi_a_bdtmf_chars_num_chars, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
      "7006:     curr_offset++;",
      "7009:         return (curr_offset - offset);",
      "7011:     packed_len = len - (curr_offset - offset);",
      "7014:     proto_tree_add_string(tree, hf_ansi_a_bdtmf_chars_digits, tvb, curr_offset, packed_len, str);",
      "7015:     proto_item_append_text(data_p->elem_item, \" - (%s)\", str);",
      "",
      "[Removed Lines]",
      "7001:     const char *str;",
      "7012:     str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, packed_len, &Dgt_dtmf, FALSE);",
      "",
      "[Added Lines]",
      "6997:     guint8      oct;",
      "7000:     char       *str;",
      "7005:     oct = tvb_get_guint8(tvb, curr_offset);",
      "7012:     str = (char*)tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, packed_len, &Dgt_dtmf, FALSE);",
      "7017:     if (oct & 0x01)",
      "7018:     {",
      "7019:         str[(2*packed_len)-1] = '\\0';",
      "7020:     }",
      "",
      "---------------"
    ],
    "epan/dissectors/packet-gsm_a_common.c||epan/dissectors/packet-gsm_a_common.c": [
      "File: epan/dissectors/packet-gsm_a_common.c -> epan/dissectors/packet-gsm_a_common.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2211:         proto_tree_add_item(tree, hf_gsm_a_odd_even_ind, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
      "2213:         proto_tree_add_item(tree, hf_gsm_a_mobile_identity_type, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
      "2217:             return (curr_offset - offset);",
      "2221:         proto_tree_add_string_format(tree,",
      "2222:             hf_gsm_a_imei,",
      "",
      "[Removed Lines]",
      "2214:         curr_offset++;",
      "2219:         digit_str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), NULL, FALSE);",
      "",
      "[Added Lines]",
      "2218:         digit_str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), NULL, TRUE);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f777d68bd6b31102d82932875b577018d42e23e8",
      "candidate_info": {
        "commit_hash": "f777d68bd6b31102d82932875b577018d42e23e8",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/f777d68bd6b31102d82932875b577018d42e23e8",
        "files": [
          "epan/dissectors/packet-ansi_a.c",
          "epan/dissectors/packet-gsm_a_dtap.c"
        ],
        "message": "Fix Ubuntu compile error.\n\nShould be using the dgt_set_t variables provided in packet-ansi_a.c and packet-gsm_a_dtap.c\n\nChange-Id: I5bd95a2d31d4419faae0943ae0ab524e796d7d92\nReviewed-on: https://code.wireshark.org/review/12274\nReviewed-by: Michael Mann <mmann78@netscape.net>",
        "before_after_code_files": [
          "epan/dissectors/packet-ansi_a.c||epan/dissectors/packet-ansi_a.c",
          "epan/dissectors/packet-gsm_a_dtap.c||epan/dissectors/packet-gsm_a_dtap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ansi_a.c||epan/dissectors/packet-ansi_a.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ansi_a.c||epan/dissectors/packet-ansi_a.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ansi_a.c||epan/dissectors/packet-ansi_a.c": [
          "File: epan/dissectors/packet-ansi_a.c -> epan/dissectors/packet-ansi_a.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1414: }",
          "1415: ansi_a_shared_data_t;",
          "1431:     {",
          "1433:      '0','1','2','3','4','5','6','7','8','9','*','#','a','b','c', 0",
          "1434:     }",
          "1435: };",
          "1438:     {",
          "1440:      '0','1','2','3','4','5','6','7','8','9','?','?','?','?','?', 0",
          "1441:     }",
          "1442: };",
          "1445:     {",
          "1447:      '0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'",
          "",
          "[Removed Lines]",
          "1417: typedef struct ansi_a_dgt_set_t",
          "1418: {",
          "1423:     unsigned char out[16];",
          "1424: }",
          "1425: ansi_a_dgt_set_t;",
          "1430: static ansi_a_dgt_set_t Dgt_tbcd = {",
          "1437: static ansi_a_dgt_set_t Dgt_msid = {",
          "1444: static ansi_a_dgt_set_t Dgt_meid = {",
          "",
          "[Added Lines]",
          "1420: static dgt_set_t Dgt_tbcd = {",
          "1427: static dgt_set_t Dgt_msid = {",
          "1434: static dgt_set_t Dgt_meid = {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1455:     {",
          "1457:      '?','1','2','3','4','5','6','7','8','9','0','*','#','?','?', 0",
          "",
          "[Removed Lines]",
          "1454: static ansi_a_dgt_set_t Dgt_dtmf = {",
          "",
          "[Added Lines]",
          "1444: static dgt_set_t Dgt_dtmf = {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2413:             return (curr_offset - offset);",
          "2416:         proto_tree_add_string(tree, hf_ansi_a_meid, tvb, curr_offset, len - (curr_offset - offset), str);",
          "2418:         proto_item_append_text(data_p->elem_item, \" - MEID (%s)\", str);",
          "",
          "[Removed Lines]",
          "2415:         str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), NULL, FALSE);",
          "",
          "[Added Lines]",
          "2405:         str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), &Dgt_meid, FALSE);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2495:             return (curr_offset - offset);",
          "2498:         proto_tree_add_string_format(tree, hf_ansi_a_imsi, tvb, curr_offset, len - (curr_offset - offset),",
          "2499:                                      str, \"BCD Digits: %s\", str);",
          "",
          "[Removed Lines]",
          "2497:         str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), NULL, FALSE);",
          "",
          "[Added Lines]",
          "2487:         str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), &Dgt_msid, FALSE);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4068:         return (curr_offset - offset);",
          "4071:     proto_tree_add_string(tree, hf_ansi_a_cld_party_bcd_num, tvb, curr_offset, len - (curr_offset - offset), str);",
          "4073:     proto_item_append_text(data_p->elem_item, \" - (%s)\", str);",
          "",
          "[Removed Lines]",
          "4070:     str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), NULL, FALSE);",
          "",
          "[Added Lines]",
          "4060:     str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), &Dgt_tbcd, FALSE);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7019:         return (curr_offset - offset);",
          "7021:     packed_len = len - (curr_offset - offset);",
          "7024:     proto_tree_add_string(tree, hf_ansi_a_bdtmf_chars_digits, tvb, curr_offset, packed_len, str);",
          "7025:     proto_item_append_text(data_p->elem_item, \" - (%s)\", str);",
          "",
          "[Removed Lines]",
          "7022:     str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, packed_len, NULL, FALSE);",
          "",
          "[Added Lines]",
          "7012:     str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, packed_len, &Dgt_dtmf, FALSE);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-gsm_a_dtap.c||epan/dissectors/packet-gsm_a_dtap.c": [
          "File: epan/dissectors/packet-gsm_a_dtap.c -> epan/dissectors/packet-gsm_a_dtap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2271:     num_string_len = len - (curr_offset - offset);",
          "2275:     item = proto_tree_add_string(tree, header_field, tvb, curr_offset, num_string_len, digit_str);",
          "",
          "[Removed Lines]",
          "2274:     digit_str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, num_string_len, NULL, FALSE);",
          "",
          "[Added Lines]",
          "2274:     digit_str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, num_string_len, &Dgt_mbcd, FALSE);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cfc47c15c2b902a50764a21cbcd2ba1d78b1de7a",
      "candidate_info": {
        "commit_hash": "cfc47c15c2b902a50764a21cbcd2ba1d78b1de7a",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/cfc47c15c2b902a50764a21cbcd2ba1d78b1de7a",
        "files": [
          "epan/dissectors/packet-ansi_a.c",
          "epan/dissectors/packet-gsm_a_common.c",
          "epan/dissectors/packet-gsm_a_common.h",
          "epan/dissectors/packet-gsm_a_dtap.c"
        ],
        "message": "Replace my_dgt_tbcd_unpack with the safer tvb_bcd_dig_to_wmem_packet_str.\n\nBug: 11797\nChange-Id: I07fdf3f7564424eac053f4c17de17f0d96597cca\nReviewed-on: https://code.wireshark.org/review/12239\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-ansi_a.c||epan/dissectors/packet-ansi_a.c",
          "epan/dissectors/packet-gsm_a_common.c||epan/dissectors/packet-gsm_a_common.c",
          "epan/dissectors/packet-gsm_a_common.h||epan/dissectors/packet-gsm_a_common.h",
          "epan/dissectors/packet-gsm_a_dtap.c||epan/dissectors/packet-gsm_a_dtap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ansi_a.c||epan/dissectors/packet-ansi_a.c",
            "epan/dissectors/packet-gsm_a_common.c||epan/dissectors/packet-gsm_a_common.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ansi_a.c||epan/dissectors/packet-ansi_a.c",
            "epan/dissectors/packet-gsm_a_common.c||epan/dissectors/packet-gsm_a_common.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ansi_a.c||epan/dissectors/packet-ansi_a.c": [
          "File: epan/dissectors/packet-ansi_a.c -> epan/dissectors/packet-ansi_a.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1508: static const value_string ansi_a_so_str_vals[] = {",
          "1509:     { 1,        \"Basic Variable Rate Voice Service (8 kbps)\" },",
          "1510:     { 2,        \"Mobile Station Loopback (8 kbps)\" },",
          "",
          "[Removed Lines]",
          "1470: static int",
          "1471: my_dgt_tbcd_unpack(",
          "1476:     )",
          "1477: {",
          "1478:     int                 cnt = 0;",
          "1479:     unsigned char       i;",
          "1481:     while (num_octs)",
          "1482:     {",
          "1486:         i = *in++;",
          "1488:         cnt++;",
          "1493:         i >>= 4;",
          "1496:             break;",
          "1499:         cnt++;",
          "1500:         num_octs--;",
          "1501:     }",
          "1505:     return(cnt);",
          "1506: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2438: elem_mid(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, guint32 offset, guint len, ansi_a_shared_data_t *data_p)",
          "2439: {",
          "2440:     guint8      oct;",
          "2442:     guint32     value;",
          "2443:     guint32     curr_offset;",
          "2444:     const gchar *str;",
          "",
          "[Removed Lines]",
          "2441:     guint8      *poctets;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2453:         proto_tree_add_item(tree, hf_ansi_a_meid_mid_digit_1, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
          "2454:         proto_tree_add_item(tree, hf_ansi_a_mid_odd_even_ind, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
          "2455:         proto_tree_add_item(tree, hf_ansi_a_mid_type_of_id, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
          "2458:         curr_offset++;",
          "2465:         curr_offset += len - (curr_offset - offset);",
          "2473:         break;",
          "",
          "[Removed Lines]",
          "2457:         a_bigbuf[0] = Dgt_meid.out[(oct & 0xf0) >> 4];",
          "2460:         poctets = (guint8 *)tvb_memdup(wmem_packet_scope(), tvb, curr_offset, len - (curr_offset - offset));",
          "2462:         my_dgt_tbcd_unpack(&a_bigbuf[1], poctets, len - (curr_offset - offset),",
          "2463:             &Dgt_meid);",
          "2467:         proto_tree_add_string_format_value(tree, hf_ansi_a_meid, tvb, offset + 1, len - 1,",
          "2468:             a_bigbuf,",
          "2469:             \"%s\",",
          "2470:             a_bigbuf);",
          "2472:         proto_item_append_text(data_p->elem_item, \" - MEID (%s)\", a_bigbuf);",
          "",
          "[Added Lines]",
          "2413:             return (curr_offset - offset);",
          "2415:         str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), NULL, FALSE);",
          "2416:         proto_tree_add_string(tree, hf_ansi_a_meid, tvb, curr_offset, len - (curr_offset - offset), str);",
          "2418:         proto_item_append_text(data_p->elem_item, \" - MEID (%s)\", str);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2543:         proto_tree_add_item(tree, hf_ansi_a_mid_odd_even_ind, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
          "2544:         proto_tree_add_item(tree, hf_ansi_a_mid_type_of_id, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
          "2547:         curr_offset++;",
          "2560:         if (data_p->message_item)",
          "2561:         {",
          "2563:         }",
          "2564:         if (global_a_info_display)",
          "2565:         {",
          "2567:         }",
          "2569:         curr_offset += len - (curr_offset - offset);",
          "",
          "[Removed Lines]",
          "2546:         a_bigbuf[0] = Dgt_msid.out[(oct & 0xf0) >> 4];",
          "2549:         poctets = (guint8 *)tvb_memdup(wmem_packet_scope(), tvb, curr_offset, len - (curr_offset - offset));",
          "2551:         my_dgt_tbcd_unpack(&a_bigbuf[1], poctets, len - (curr_offset - offset),",
          "2552:             &Dgt_msid);",
          "2554:         proto_tree_add_string_format(tree, hf_ansi_a_imsi, tvb, curr_offset - 1, len - (curr_offset - 1 - offset),",
          "2555:             a_bigbuf,",
          "2556:             \"BCD Digits: %s\",",
          "2557:             a_bigbuf);",
          "2559:         proto_item_append_text(data_p->elem_item, \" - IMSI (%s)\", a_bigbuf);",
          "2562:             proto_item_append_text(data_p->message_item, \" MID=%s\", a_bigbuf);",
          "2566:             col_append_fstr(pinfo->cinfo, COL_INFO, \"MID=%s \", a_bigbuf);",
          "",
          "[Added Lines]",
          "2495:             return (curr_offset - offset);",
          "2497:         str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), NULL, FALSE);",
          "2498:         proto_tree_add_string_format(tree, hf_ansi_a_imsi, tvb, curr_offset, len - (curr_offset - offset),",
          "2499:                                      str, \"BCD Digits: %s\", str);",
          "2501:         proto_item_append_text(data_p->elem_item, \" - IMSI (%s)\", str);",
          "2504:             proto_item_append_text(data_p->message_item, \" MID=%s\", str);",
          "2508:             col_append_fstr(pinfo->cinfo, COL_INFO, \"MID=%s \", str);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4111: static guint8",
          "4112: elem_cld_party_bcd_num(tvbuff_t *tvb, packet_info *pinfo _U_, proto_tree *tree, guint32 offset, guint len, ansi_a_shared_data_t *data_p)",
          "4113: {",
          "4115:     guint32     curr_offset;",
          "4117:     curr_offset = offset;",
          "",
          "[Removed Lines]",
          "4114:     guint8      *poctets;",
          "",
          "[Added Lines]",
          "4057:     const char *str;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4123:     curr_offset++;",
          "4132:     curr_offset += len - (curr_offset - offset);",
          "",
          "[Removed Lines]",
          "4125:     poctets = (guint8 *)tvb_memdup(wmem_packet_scope(), tvb, curr_offset, len - (curr_offset - offset));",
          "4127:     my_dgt_tbcd_unpack(a_bigbuf, poctets, len - (curr_offset - offset), &Dgt_tbcd);",
          "4128:     proto_tree_add_string(tree, hf_ansi_a_cld_party_bcd_num, tvb, curr_offset, len - (curr_offset - offset), a_bigbuf);",
          "4130:     proto_item_append_text(data_p->elem_item, \" - (%s)\", a_bigbuf);",
          "",
          "[Added Lines]",
          "4068:         return (curr_offset - offset);",
          "4070:     str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), NULL, FALSE);",
          "4071:     proto_tree_add_string(tree, hf_ansi_a_cld_party_bcd_num, tvb, curr_offset, len - (curr_offset - offset), str);",
          "4073:     proto_item_append_text(data_p->elem_item, \" - (%s)\", str);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7063: static guint8",
          "7064: elem_dtmf_chars(tvbuff_t *tvb, packet_info *pinfo _U_, proto_tree *tree, guint32 offset, guint len, ansi_a_shared_data_t *data_p)",
          "7065: {",
          "7067:     guint32     curr_offset;",
          "7068:     guint8      packed_len;",
          "7071:     curr_offset = offset;",
          "7073:     proto_tree_add_item(tree, hf_ansi_a_bdtmf_chars_num_chars, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
          "7077:     curr_offset++;",
          "7100:     curr_offset += packed_len;",
          "",
          "[Removed Lines]",
          "7066:     guint8      oct;",
          "7069:     guint8      *poctets;",
          "7075:     oct = tvb_get_guint8(tvb, curr_offset);",
          "7079:     packed_len = len - (curr_offset - offset);",
          "7081:     poctets = (guint8 *)tvb_memdup(wmem_packet_scope(), tvb, curr_offset, packed_len);",
          "7087:     if (oct & 0x01)",
          "7088:     {",
          "7089:         poctets[packed_len-1] |= 0xF0;",
          "7090:     }",
          "7092:     my_dgt_tbcd_unpack(a_bigbuf, poctets, packed_len,",
          "7093:         &Dgt_dtmf);",
          "7095:     proto_tree_add_string(tree, hf_ansi_a_bdtmf_chars_digits, tvb, curr_offset, packed_len,",
          "7096:         a_bigbuf);",
          "7098:     proto_item_append_text(data_p->elem_item, \" - (%s)\", a_bigbuf);",
          "",
          "[Added Lines]",
          "7011:     const char *str;",
          "7019:         return (curr_offset - offset);",
          "7021:     packed_len = len - (curr_offset - offset);",
          "7022:     str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, packed_len, NULL, FALSE);",
          "7024:     proto_tree_add_string(tree, hf_ansi_a_bdtmf_chars_digits, tvb, curr_offset, packed_len, str);",
          "7025:     proto_item_append_text(data_p->elem_item, \" - (%s)\", str);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-gsm_a_common.c||epan/dissectors/packet-gsm_a_common.c": [
          "File: epan/dissectors/packet-gsm_a_common.c -> epan/dissectors/packet-gsm_a_common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "758: static expert_field ei_gsm_a_format_not_supported = EI_INIT;",
          "759: static expert_field ei_gsm_a_mobile_identity_type = EI_INIT;",
          "764: sccp_assoc_info_t* sccp_assoc;",
          "766: #define NUM_GSM_COMMON_ELEM (sizeof(gsm_common_elem_strings)/sizeof(value_string))",
          "",
          "[Removed Lines]",
          "762: static char a_bigbuf[1024];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1944: int",
          "1945: my_dgt_tbcd_unpack(",
          "1950:     )",
          "1951: {",
          "1952:     int cnt = 0;",
          "1953:     unsigned char i;",
          "1955:     while (num_octs)",
          "1956:     {",
          "1960:         i = *in++;",
          "1962:         cnt++;",
          "1967:         i >>= 4;",
          "1970:             break;",
          "1973:         cnt++;",
          "1974:         num_octs--;",
          "1975:     }",
          "1979:     return cnt;",
          "1980: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2183: {",
          "2184:     guint8    oct;",
          "2185:     guint32   curr_offset;",
          "2187:     guint32   value;",
          "2188:     gboolean  odd;",
          "2189:     const gchar *digit_str;",
          "",
          "[Removed Lines]",
          "2186:     guint8   *poctets;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2260:         proto_tree_add_item(tree, hf_gsm_a_odd_even_ind, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
          "2262:         proto_tree_add_item(tree, hf_gsm_a_mobile_identity_type, tvb, curr_offset, 1, ENC_BIG_ENDIAN);",
          "2266:         curr_offset++;",
          "2273:         proto_tree_add_string_format(tree,",
          "2274:             hf_gsm_a_imei,",
          "2275:             tvb, curr_offset, len - (curr_offset - offset),",
          "2277:             \"BCD Digits: %s\",",
          "2280:         if (add_string)",
          "2283:         curr_offset += len - (curr_offset - offset);",
          "2284:         break;",
          "",
          "[Removed Lines]",
          "2265:         a_bigbuf[0] = Dgt1_9_bcd.out[(oct & 0xf0) >> 4];",
          "2268:         poctets = (guint8 *)tvb_memdup(wmem_packet_scope(), tvb, curr_offset, len - (curr_offset - offset));",
          "2270:         my_dgt_tbcd_unpack(&a_bigbuf[1], poctets, len - (curr_offset - offset),",
          "2271:             &Dgt1_9_bcd);",
          "2276:             a_bigbuf,",
          "2278:             a_bigbuf);",
          "2281:             g_snprintf(add_string, string_len, \" - IMEI (%s)\", a_bigbuf);",
          "",
          "[Added Lines]",
          "2217:             return (curr_offset - offset);",
          "2219:         digit_str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, len - (curr_offset - offset), NULL, FALSE);",
          "2224:             digit_str,",
          "2226:             digit_str);",
          "2229:             g_snprintf(add_string, string_len, \" - IMEI (%s)\", digit_str);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-gsm_a_common.h||epan/dissectors/packet-gsm_a_common.h": [
          "File: epan/dissectors/packet-gsm_a_common.h -> epan/dissectors/packet-gsm_a_common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: typedef guint16 (*elem_fcn)(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint32 offset, guint len, gchar *add_string, int string_len);",
          "73: typedef void (*msg_fcn)(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint32 offset, guint len);",
          "",
          "[Removed Lines]",
          "74: int my_dgt_tbcd_unpack(",
          "79:     );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-gsm_a_dtap.c||epan/dissectors/packet-gsm_a_dtap.c": [
          "File: epan/dissectors/packet-gsm_a_dtap.c -> epan/dissectors/packet-gsm_a_dtap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2243: static guint16",
          "2244: de_bcd_num(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint32 offset, guint len, int header_field, gboolean *address_extracted)",
          "2245: {",
          "2247:     guint8      extension;",
          "2248:     guint32     curr_offset, num_string_len;",
          "2249:     proto_item *item;",
          "",
          "[Removed Lines]",
          "2246:     guint8     *poctets;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2270:     NO_MORE_DATA_CHECK(len);",
          "2272:     num_string_len = len - (curr_offset - offset);",
          "2279:     digit_str = tvb_bcd_dig_to_wmem_packet_str(tvb, curr_offset, num_string_len, NULL, FALSE);",
          "",
          "[Removed Lines]",
          "2273:     poctets = (guint8 *)tvb_memdup(wmem_packet_scope(), tvb, curr_offset, num_string_len);",
          "2276:     my_dgt_tbcd_unpack(a_bigbuf, poctets, num_string_len,",
          "2277:         &Dgt_mbcd);",
          "2280:     proto_tree_add_string(tree, header_field, tvb, curr_offset, num_string_len, digit_str);",
          "2281:     item = proto_tree_add_string_format(tree, header_field,",
          "2282:         tvb, curr_offset, num_string_len,",
          "2283:         a_bigbuf,",
          "2284:         \"BCD Digits: %s\",",
          "2285:         a_bigbuf);",
          "",
          "[Added Lines]",
          "2275:     item = proto_tree_add_string(tree, header_field, tvb, curr_offset, num_string_len, digit_str);",
          "",
          "---------------"
        ]
      }
    }
  ]
}