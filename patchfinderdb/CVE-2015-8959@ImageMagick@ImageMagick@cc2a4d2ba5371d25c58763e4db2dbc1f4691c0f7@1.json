{
  "cve_id": "CVE-2015-8959",
  "cve_desc": "coders/dds.c in ImageMagick before 6.9.0-4 Beta allows remote attackers to cause a denial of service (CPU consumption) via a crafted DDS file.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "cc2a4d2ba5371d25c58763e4db2dbc1f4691c0f7",
  "patch_info": {
    "commit_hash": "cc2a4d2ba5371d25c58763e4db2dbc1f4691c0f7",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/cc2a4d2ba5371d25c58763e4db2dbc1f4691c0f7",
    "files": [
      "coders/dds.c"
    ],
    "message": "http://www.imagemagick.org/discourse-server/viewtopic.php?f=3&t=26861",
    "before_after_code_files": [
      "coders/dds.c||coders/dds.c"
    ]
  },
  "patch_diff": {
    "coders/dds.c||coders/dds.c": [
      "File: coders/dds.c -> coders/dds.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2385:         Mipmapcount includes the main image, so start from one",
      "2389:         offset = (MagickOffsetType) ((w + 3) / 4) * ((h + 3) / 4) * texel_size;",
      "2390:         (void) SeekBlob(image, offset, SEEK_CUR);",
      "",
      "[Removed Lines]",
      "2387:       for (i = 1; (i < (ssize_t) dds_info->mipmapcount) && w && h; i++)",
      "2388:       {",
      "",
      "[Added Lines]",
      "2387:       for (i = 1; (i < (ssize_t) dds_info->mipmapcount) && w && h; i++)",
      "2388:       {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2432:         Mipmapcount includes the main image, so start from one",
      "2436:         offset = (MagickOffsetType) w * h * pixel_size;",
      "2437:         (void) SeekBlob(image, offset, SEEK_CUR);",
      "",
      "[Removed Lines]",
      "2434:       for (i=1; (i < (ssize_t) dds_info->mipmapcount) && w && h; i++)",
      "2435:       {",
      "",
      "[Added Lines]",
      "2434:       for (i=1; (i < (ssize_t) dds_info->mipmapcount) && w && h; i++)",
      "2435:       {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "33c31406e00fc72adadf1d46ac3946b9f648557a",
      "candidate_info": {
        "commit_hash": "33c31406e00fc72adadf1d46ac3946b9f648557a",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/33c31406e00fc72adadf1d46ac3946b9f648557a",
        "files": [
          "coders/dds.c"
        ],
        "message": "Fixed dds:cluster-fit option.",
        "before_after_code_files": [
          "coders/dds.c||coders/dds.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/dds.c||coders/dds.c"
          ],
          "candidate": [
            "coders/dds.c||coders/dds.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/dds.c||coders/dds.c": [
          "File: coders/dds.c -> coders/dds.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2590:   weightByAlpha=MagickFalse;",
          "2592:   if (pixelFormat == DDPF_FOURCC)",
          "2594:       option=GetImageOption(image_info,\"dds:cluster-fit\");",
          "2595:       if (option != (char *) NULL && LocaleCompare(option,\"true\") == 0)",
          "2596:         {",
          "",
          "[Removed Lines]",
          "2593:     {",
          "",
          "[Added Lines]",
          "2593:     {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "100a056069d5718f995e95a77950dcae6f412ff4",
      "candidate_info": {
        "commit_hash": "100a056069d5718f995e95a77950dcae6f412ff4",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/100a056069d5718f995e95a77950dcae6f412ff4",
        "files": [
          "MagickCore/blob.c",
          "MagickCore/distribute-cache.c",
          "MagickCore/morphology.c",
          "MagickWand/pixel-wand.c",
          "coders/cals.c",
          "coders/cin.c",
          "coders/dcm.c",
          "coders/dds.c",
          "coders/fits.c",
          "coders/hdr.c",
          "coders/mat.c",
          "coders/pict.c",
          "coders/pwp.c",
          "coders/rla.c",
          "coders/sfw.c",
          "coders/svg.c"
        ],
        "message": "",
        "before_after_code_files": [
          "MagickCore/blob.c||MagickCore/blob.c",
          "MagickCore/distribute-cache.c||MagickCore/distribute-cache.c",
          "MagickCore/morphology.c||MagickCore/morphology.c",
          "MagickWand/pixel-wand.c||MagickWand/pixel-wand.c",
          "coders/cals.c||coders/cals.c",
          "coders/cin.c||coders/cin.c",
          "coders/dcm.c||coders/dcm.c",
          "coders/dds.c||coders/dds.c",
          "coders/fits.c||coders/fits.c",
          "coders/hdr.c||coders/hdr.c",
          "coders/mat.c||coders/mat.c",
          "coders/pict.c||coders/pict.c",
          "coders/pwp.c||coders/pwp.c",
          "coders/rla.c||coders/rla.c",
          "coders/sfw.c||coders/sfw.c",
          "coders/svg.c||coders/svg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/dds.c||coders/dds.c"
          ],
          "candidate": [
            "coders/dds.c||coders/dds.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/blob.c||MagickCore/blob.c": [
          "File: MagickCore/blob.c -> MagickCore/blob.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "690: %    o blob_info: Specifies a pointer to a BlobInfo structure.",
          "691: %",
          "693: MagickExport unsigned char *DetachBlob(BlobInfo *blob_info)",
          "694: {",
          "695:   unsigned char",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "693: MagickExport unsigned char *DetachBlob(BlobInfo *blob_info)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1163:   assert(image != (const Image *) NULL);",
          "1164:   assert(image->signature == MagickSignature);",
          "1165:   assert(filename != (const char *) NULL);",
          "1166:   (void) LogMagickEvent(TraceEvent,GetMagickModule(),\"%s\",filename);",
          "1167:   file=fileno(stdin);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1166:   assert(filename != (const char *) NULL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1700:       file=close(file)-1;",
          "1701:       (void) ThrowMagickException(exception,GetMagickModule(),",
          "1702:         ResourceLimitError,\"MemoryAllocationError\",\"`%s'\",filename);",
          "1703:       return(MagickFalse);",
          "1704:     }",
          "1705:   length=0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1705:       return(MagickFalse);",
          "1706:     }",
          "",
          "---------------"
        ],
        "MagickCore/distribute-cache.c||MagickCore/distribute-cache.c": [
          "File: MagickCore/distribute-cache.c -> MagickCore/distribute-cache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:       return(-1);",
          "208:     }",
          "209:   client_socket=socket(result->ai_family,result->ai_socktype,",
          "210:     result->ai_protocol);",
          "211:   if (client_socket == -1)",
          "212:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "210:     result->ai_protocol);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "910:     server_socket=socket(p->ai_family,p->ai_socktype,p->ai_protocol);",
          "911:     if (server_socket == -1)",
          "913:     one=1;",
          "914:     status=setsockopt(server_socket,SOL_SOCKET,SO_REUSEADDR,&one,(socklen_t)",
          "915:       sizeof(one));",
          "",
          "[Removed Lines]",
          "912:       continue;",
          "",
          "[Added Lines]",
          "913:       continue;",
          "914:     one=1;",
          "915:     status=setsockopt(server_socket,SOL_SOCKET,SO_REUSEADDR,&one,(socklen_t)",
          "916:       sizeof(one));",
          "",
          "---------------"
        ],
        "MagickCore/morphology.c||MagickCore/morphology.c": [
          "File: MagickCore/morphology.c -> MagickCore/morphology.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickWand/pixel-wand.c||MagickWand/pixel-wand.c": [
          "File: MagickWand/pixel-wand.c -> MagickWand/pixel-wand.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "741: %                                                                             %",
          "742: %                                                                             %",
          "743: %                                                                             %",
          "745: %                                                                             %",
          "746: %                                                                             %",
          "747: %                                                                             %",
          "",
          "[Removed Lines]",
          "744: %   P i x e l G e t C o l o r A s N o r m a l i z e d S t r i n g             %",
          "",
          "[Added Lines]",
          "744: %   P i x e l G e t C o l o r A s N o r m a l i z e d S t r i n g             %",
          "",
          "---------------"
        ],
        "coders/cals.c||coders/cals.c": [
          "File: coders/cals.c -> coders/cals.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "145: %",
          "147: static Image *ReadCALSImage(const ImageInfo *image_info,",
          "149: {",
          "150:   char",
          "151:     filename[MaxTextExtent],",
          "",
          "[Removed Lines]",
          "148:   ExceptionInfo *exception)",
          "",
          "[Added Lines]",
          "148:   ExceptionInfo *exception)",
          "",
          "---------------"
        ],
        "coders/cin.c||coders/cin.c": [
          "File: coders/cin.c -> coders/cin.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "605:   offset+=ReadBlob(image,sizeof(cin.origination.device),(unsigned char *)",
          "606:     cin.origination.device);",
          "607:   (void) SetImageProperty(image,\"dpx:origination.device\",",
          "608:     cin.origination.device,exception);",
          "609:   offset+=ReadBlob(image,sizeof(cin.origination.model),(unsigned char *)",
          "610:     cin.origination.model);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "608:     cin.origination.device,exception);",
          "609:   offset+=ReadBlob(image,sizeof(cin.origination.model),(unsigned char *)",
          "",
          "---------------"
        ],
        "coders/dcm.c||coders/dcm.c": [
          "File: coders/dcm.c -> coders/dcm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3566:             break;",
          "3567:           }",
          "3568:         tag=(ReadBlobLSBShort(image) << 16) | ReadBlobLSBShort(image);",
          "3570:         if (tag == 0xFFFEE0DD)",
          "3572:         if (tag != 0xFFFEE000)",
          "",
          "[Removed Lines]",
          "3569:         length=(size_t) ReadBlobLSBLong(image);",
          "",
          "[Added Lines]",
          "3569:         length=(size_t) ReadBlobLSBLong(image);",
          "3570:         if (tag == 0xFFFEE0DD)",
          "3572:         if (tag != 0xFFFEE000)",
          "",
          "---------------"
        ],
        "coders/dds.c||coders/dds.c": [
          "File: coders/dds.c -> coders/dds.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1120:   gridrcp.x = 1.0f/31.0f;",
          "1121:   gridrcp.y = 1.0f/63.0f;",
          "1122:   gridrcp.z = 1.0f/31.0f;",
          "1123:   gridrcp.w = 0.0f;",
          "1125:   ConstructOrdering(count,points,principle,pointsWeights,&xSumwSum,order,0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1123:   gridrcp.w = 0.0f;",
          "1125:   xSumwSum.x = 0.0f;",
          "1126:   xSumwSum.y = 0.0f;",
          "1127:   xSumwSum.z = 0.0f;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2636:   (void) CloseBlob(image);",
          "2637:   return(MagickTrue);",
          "2638: }",
          "2640: static void WriteDDSInfo(Image *image, const size_t pixelFormat,",
          "2641:   const size_t compression, const size_t mipmaps)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2645: static void WriteDDSInfo(Image *image, const size_t pixelFormat,",
          "2646:   const size_t compression, const size_t mipmaps)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2673:              (unsigned int) (Max(1,(image->columns+3)/4) * 8));",
          "2674:   else",
          "2675:     (void) WriteBlobLSBLong(image,",
          "2678:   (void) WriteBlobLSBLong(image,0x00);",
          "2679:   (void) WriteBlobLSBLong(image,(unsigned int) mipmaps+1);",
          "",
          "[Removed Lines]",
          "2676:              (unsigned int) (Max(1,(image->columns+3)/4) * 16));",
          "",
          "[Added Lines]",
          "2684:              (unsigned int) (Max(1,(image->columns+3)/4) * 16));",
          "2686:   (void) WriteBlobLSBLong(image,0x00);",
          "",
          "---------------"
        ],
        "coders/fits.c||coders/fits.c": [
          "File: coders/fits.c -> coders/fits.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "333:         break;",
          "334:       for (i=0; i < 8; i++)",
          "335:       {",
          "336:         if (isspace((int) ((unsigned char) keyword[i])) != 0)",
          "337:           break;",
          "338:         keyword[i]=tolower((int) ((unsigned char) keyword[i]));",
          "340:       keyword[i]='\\0';",
          "341:       count=ReadBlob(image,72,(unsigned char *) value);",
          "342:       if (count != 72)",
          "",
          "[Removed Lines]",
          "339:       }",
          "",
          "[Added Lines]",
          "336:         if (isspace((int) ((unsigned char) keyword[i])) != 0)",
          "",
          "---------------"
        ],
        "coders/hdr.c||coders/hdr.c": [
          "File: coders/hdr.c -> coders/hdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "797:         }",
          "798:       p+=GetPixelChannels(image);",
          "799:     }",
          "802:         for (i=0; i < 4; i++)",
          "803:           length=HDRWriteRunlengthPixels(image,&pixels[i*image->columns]);",
          "804:       }",
          "",
          "[Removed Lines]",
          "800:     if ((image->columns >= 8) && (image->columns <= 0x7ffff))",
          "801:       {",
          "",
          "[Added Lines]",
          "800:     if ((image->columns >= 8) && (image->columns <= 0x7ffff))",
          "801:       {",
          "",
          "---------------"
        ],
        "coders/mat.c||coders/mat.c": [
          "File: coders/mat.c -> coders/mat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1218:   image->depth=8;",
          "1220:   current_time=time((time_t *) NULL);",
          "1222:   (void) localtime_r(&current_time,&local_time);",
          "1223: #else",
          "1224:   (void) memcpy(&local_time,localtime(&current_time),sizeof(local_time));",
          "",
          "[Removed Lines]",
          "1221: #if defined(MAGICKCORE_HAVE_LOCALTIME_R)",
          "",
          "[Added Lines]",
          "1221: #if defined(MAGICKCORE_HAVE_LOCALTIME_R)",
          "1222:   (void) localtime_r(&current_time,&local_time);",
          "",
          "---------------"
        ],
        "coders/pict.c||coders/pict.c": [
          "File: coders/pict.c -> coders/pict.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1391:         ReadRectangle(image,frame);",
          "1392:         for (i=0; i < 122; i++)",
          "1393:           (void) ReadBlobByte(image);",
          "1394:         for (i=0; i < (ssize_t) (length-154); i++)",
          "1395:         {",
          "1396:           c=ReadBlobByte(image);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1394:         for (i=0; i < (ssize_t) (length-154); i++)",
          "",
          "---------------"
        ],
        "coders/pwp.c||coders/pwp.c": [
          "File: coders/pwp.c -> coders/pwp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:         break;",
          "240:     status=SetImageProgress(image,LoadImagesTag,TellBlob(pwp_image),",
          "241:       GetBlobSize(pwp_image));",
          "242:     if (status == MagickFalse)",
          "243:       break;",
          "244:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242:     if (status == MagickFalse)",
          "",
          "---------------"
        ],
        "coders/rla.c||coders/rla.c": [
          "File: coders/rla.c -> coders/rla.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:   count=ReadBlob(image,24,(unsigned char *) rla_info.green_primary);",
          "229:   count=ReadBlob(image,24,(unsigned char *) rla_info.blue_primary);",
          "230:   count=ReadBlob(image,24,(unsigned char *) rla_info.white_point);",
          "231:   rla_info.job_number=(int) ReadBlobMSBLong(image);",
          "232:   count=ReadBlob(image,128,(unsigned char *) rla_info.name);",
          "233:   count=ReadBlob(image,128,(unsigned char *) rla_info.description);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:   rla_info.job_number=(int) ReadBlobMSBLong(image);",
          "",
          "---------------"
        ],
        "coders/sfw.c||coders/sfw.c": [
          "File: coders/sfw.c -> coders/sfw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:   extent=fwrite(header,(size_t) (offset-header+1),1,file);",
          "327:   (void) extent;",
          "328:   extent=fwrite(HuffmanTable,1,sizeof(HuffmanTable)/sizeof(*HuffmanTable),file);",
          "329:   extent=fwrite(offset+1,(size_t) (data-offset),1,file);",
          "330:   status=ferror(file) == -1 ? MagickFalse : MagickTrue;",
          "331:   (void) fclose(file);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329:   extent=fwrite(offset+1,(size_t) (data-offset),1,file);",
          "",
          "---------------"
        ],
        "coders/svg.c||coders/svg.c": [
          "File: coders/svg.c -> coders/svg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3078:       return((Image *) NULL);",
          "3079:     }",
          "3083:   if (image == (Image *) NULL)",
          "3084:     return((Image *) NULL);",
          "",
          "[Removed Lines]",
          "3081:     Parse SVG file.",
          "",
          "[Added Lines]",
          "3081:     Parse SVG file.",
          "3083:   if (image == (Image *) NULL)",
          "3084:     return((Image *) NULL);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad4781bde18264820eb521886c3de2a335611d52",
      "candidate_info": {
        "commit_hash": "ad4781bde18264820eb521886c3de2a335611d52",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/ad4781bde18264820eb521886c3de2a335611d52",
        "files": [
          "coders/dds.c"
        ],
        "message": "Fix assignment.",
        "before_after_code_files": [
          "coders/dds.c||coders/dds.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/dds.c||coders/dds.c"
          ],
          "candidate": [
            "coders/dds.c||coders/dds.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/dds.c||coders/dds.c": [
          "File: coders/dds.c -> coders/dds.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2984:     indexes[16],",
          "2985:     indices[16];",
          "2987:   color[0] = (unsigned char) ClampToLimit(255.0f*points->x,255);",
          "2988:   color[1] = (unsigned char) ClampToLimit(255.0f*points->y,255);",
          "2989:   color[2] = (unsigned char) ClampToLimit(255.0f*points->z,255);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2987:   color[0] = (unsigned char) ClampToLimit(255.0f*points->x,255);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f56826e7cfd515aedb1c1ead127e1b9453cd2be",
      "candidate_info": {
        "commit_hash": "0f56826e7cfd515aedb1c1ead127e1b9453cd2be",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/0f56826e7cfd515aedb1c1ead127e1b9453cd2be",
        "files": [
          "coders/dds.c"
        ],
        "message": "",
        "before_after_code_files": [
          "coders/dds.c||coders/dds.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/dds.c||coders/dds.c"
          ],
          "candidate": [
            "coders/dds.c||coders/dds.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/dds.c||coders/dds.c": [
          "File: coders/dds.c -> coders/dds.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2968:     index,",
          "2969:     indices[16];",
          "2975:   color[0] = ClampToLimit(255.0f*points->x,255);",
          "2976:   color[1] = ClampToLimit(255.0f*points->y,255);",
          "",
          "[Removed Lines]",
          "2971:   DDSVector3",
          "2972:     start,",
          "2973:     end;",
          "",
          "[Added Lines]",
          "2971:   DDSVector3",
          "2972:     start,",
          "2973:     end;",
          "",
          "---------------"
        ]
      }
    }
  ]
}