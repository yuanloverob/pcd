{
  "cve_id": "CVE-2015-8865",
  "cve_desc": "The file_check_mem function in funcs.c in file before 5.23, as used in the Fileinfo component in PHP before 5.5.34, 5.6.x before 5.6.20, and 7.x before 7.0.5, mishandles continuation-level jumps, which allows context-dependent attackers to cause a denial of service (buffer overflow and application crash) or possibly execute arbitrary code via a crafted magic file.",
  "repo": "file/file",
  "patch_hash": "6713ca45e7757297381f4b4cdb9cf5e624a9ad36",
  "patch_info": {
    "commit_hash": "6713ca45e7757297381f4b4cdb9cf5e624a9ad36",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/6713ca45e7757297381f4b4cdb9cf5e624a9ad36",
    "files": [
      "src/funcs.c"
    ],
    "message": "PR/454: Fix memory corruption when the continuation level jumps by more than 20 in a single step.",
    "before_after_code_files": [
      "src/funcs.c||src/funcs.c"
    ]
  },
  "patch_diff": {
    "src/funcs.c||src/funcs.c": [
      "File: src/funcs.c -> src/funcs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "33: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.80 2015/01/02 21:29:39 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.81 2015/05/28 19:26:59 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "416:  size_t len;",
      "418:  if (level >= ms->c.len) {",
      "420:   ms->c.li = CAST(struct level_info *, (ms->c.li == NULL) ?",
      "421:       malloc(len) :",
      "422:       realloc(ms->c.li, len));",
      "",
      "[Removed Lines]",
      "419:   len = (ms->c.len += 20) * sizeof(*ms->c.li);",
      "",
      "[Added Lines]",
      "419:   len = (ms->c.len = 20 + level) * sizeof(*ms->c.li);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "27dd75d1ec5943479c310933096d6f3577f53458",
      "candidate_info": {
        "commit_hash": "27dd75d1ec5943479c310933096d6f3577f53458",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/27dd75d1ec5943479c310933096d6f3577f53458",
        "files": [
          "ChangeLog",
          "src/ascmagic.c",
          "src/file.h",
          "src/funcs.c",
          "src/softmagic.c"
        ],
        "message": "change indirect recursion limit to a use count and bump it from 15 to 50 to prevent abuse.",
        "before_after_code_files": [
          "src/ascmagic.c||src/ascmagic.c",
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/funcs.c||src/funcs.c"
          ],
          "candidate": [
            "src/funcs.c||src/funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/ascmagic.c||src/ascmagic.c": [
          "File: src/ascmagic.c -> src/ascmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.91 2014/11/28 02:46:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.92 2015/04/09 20:01:41 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:       == NULL)",
          "148:    goto done;",
          "149:   if ((rv = file_softmagic(ms, utf8_buf,",
          "151:       TEXTTEST, text)) == 0)",
          "152:    rv = -1;",
          "153:  }",
          "",
          "[Removed Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), 0, NULL,",
          "",
          "[Added Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), NULL, NULL,",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "419:  uint16_t elf_phnum_max;",
          "420:  uint16_t elf_notes_max;",
          "421:  uint16_t regex_max;",
          "423: #define FILE_NAME_MAX   30",
          "424: #define FILE_ELF_SHNUM_MAX  32768",
          "425: #define FILE_ELF_PHNUM_MAX  2048",
          "",
          "[Removed Lines]",
          "422: #define FILE_INDIR_MAX   15",
          "",
          "[Added Lines]",
          "422: #define FILE_INDIR_MAX   50",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "464:     unichar **, size_t *, const char **, const char **, const char **);",
          "465: protected int file_is_tar(struct magic_set *, const unsigned char *, size_t);",
          "466: protected int file_softmagic(struct magic_set *, const unsigned char *, size_t,",
          "468: protected int file_apprentice(struct magic_set *, const char *, int);",
          "469: protected int buffer_apprentice(struct magic_set *, struct magic **,",
          "470:     size_t *, size_t);",
          "",
          "[Removed Lines]",
          "467:     uint16_t, uint16_t *, int, int);",
          "",
          "[Added Lines]",
          "467:     uint16_t *, uint16_t *, int, int);",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.87 2015/09/22 15:40:32 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.88 2016/02/10 15:57:40 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "253:  if ((ms->flags & MAGIC_NO_CHECK_SOFT) == 0)",
          "255:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "256:    (void)fprintf(stderr, \"[try softmagic %d]\\n\", m);",
          "257:   if (m) {",
          "",
          "[Removed Lines]",
          "254:   m = file_softmagic(ms, ubuf, nb, 0, NULL, BINTEST, looks_text);",
          "",
          "[Added Lines]",
          "254:   m = file_softmagic(ms, ubuf, nb, NULL, NULL, BINTEST,",
          "255:       looks_text);",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.225 2016/01/19 15:08:50 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.226 2016/03/02 18:27:53 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44: #include \"der.h\"",
          "46: private int match(struct magic_set *, struct magic *, uint32_t,",
          "48:     uint16_t *, int *, int *, int *);",
          "49: private int mget(struct magic_set *, const unsigned char *,",
          "51:     uint16_t *, int *, int *, int *);",
          "52: private int magiccheck(struct magic_set *, struct magic *);",
          "53: private int32_t mprint(struct magic_set *, struct magic *);",
          "",
          "[Removed Lines]",
          "47:     const unsigned char *, size_t, size_t, int, int, int, uint16_t,",
          "50:     struct magic *, size_t, size_t, unsigned int, int, int, int, uint16_t,",
          "",
          "[Added Lines]",
          "47:     const unsigned char *, size_t, size_t, int, int, int, uint16_t *,",
          "50:     struct magic *, size_t, size_t, unsigned int, int, int, int, uint16_t *,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "89: protected int",
          "90: file_softmagic(struct magic_set *ms, const unsigned char *buf, size_t nbytes,",
          "92: {",
          "93:  struct mlist *ml;",
          "94:  int rv, printed_something = 0, need_separator = 0;",
          "97:  if (name_count == NULL) {",
          "98:   nc = 0;",
          "99:   name_count = &nc;",
          "100:  }",
          "102:  for (ml = ms->mlist[0]->next; ml != ms->mlist[0]; ml = ml->next)",
          "103:   if ((rv = match(ms, ml->magic, ml->nmagic, buf, nbytes, 0, mode,",
          "105:       &printed_something, &need_separator, NULL)) != 0)",
          "106:    return rv;",
          "",
          "[Removed Lines]",
          "91:     uint16_t indir_level, uint16_t *name_count, int mode, int text)",
          "95:  uint16_t nc;",
          "104:       text, 0, indir_level, name_count,",
          "",
          "[Added Lines]",
          "91:     uint16_t *indir_count, uint16_t *name_count, int mode, int text)",
          "95:  uint16_t nc, ic;",
          "101:  if (indir_count == NULL) {",
          "102:   ic = 0;",
          "103:   indir_count = &ic;",
          "104:  }",
          "108:       text, 0, indir_count, name_count,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "157: private int",
          "158: match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,",
          "159:     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,",
          "161:     int *printed_something, int *need_separator, int *returnval)",
          "162: {",
          "163:  uint32_t magindex = 0;",
          "",
          "[Removed Lines]",
          "160:     int flip, uint16_t indir_level, uint16_t *name_count,",
          "",
          "[Added Lines]",
          "164:     int flip, uint16_t *indir_count, uint16_t *name_count,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "197:   switch (mget(ms, s, m, nbytes, offset, cont_level, mode, text,",
          "199:       printed_something, need_separator, returnval)) {",
          "200:   case -1:",
          "201:    return -1;",
          "",
          "[Removed Lines]",
          "198:       flip, indir_level, name_count,",
          "",
          "[Added Lines]",
          "202:       flip, indir_count, name_count,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "285:    }",
          "286: #endif",
          "287:    switch (mget(ms, s, m, nbytes, offset, cont_level, mode,",
          "289:        printed_something, need_separator, returnval)) {",
          "290:    case -1:",
          "291:     return -1;",
          "",
          "[Removed Lines]",
          "288:        text, flip, indir_level, name_count,",
          "",
          "[Added Lines]",
          "292:        text, flip, indir_count, name_count,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1242: private int",
          "1243: mget(struct magic_set *ms, const unsigned char *s, struct magic *m,",
          "1244:     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,",
          "1246:     int *printed_something, int *need_separator, int *returnval)",
          "1247: {",
          "1248:  uint32_t offset = ms->offset;",
          "",
          "[Removed Lines]",
          "1245:     int flip, uint16_t indir_level, uint16_t *name_count,",
          "",
          "[Added Lines]",
          "1249:     int flip, uint16_t *indir_count, uint16_t *name_count,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1253:  union VALUETYPE *p = &ms->ms_value;",
          "1254:  struct mlist ml;",
          "1259:   return -1;",
          "1260:  }",
          "",
          "[Removed Lines]",
          "1256:  if (indir_level >= ms->indir_max) {",
          "1257:   file_error(ms, 0, \"indirect recursion nesting (%hu) exceeded\",",
          "1258:       indir_level);",
          "",
          "[Added Lines]",
          "1260:  if (*indir_count >= ms->indir_max) {",
          "1261:   file_error(ms, 0, \"indirect count (%hu) exceeded\",",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1274:       SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT",
          "1275:       \"u, il=%hu, nc=%hu)\\n\",",
          "1276:       m->type, m->flag, offset, o, nbytes,",
          "1278:   mdebug(offset, (char *)(void *)p, sizeof(union VALUETYPE));",
          "1279: #ifndef COMPILE_ONLY",
          "1280:   file_mdump(m);",
          "",
          "[Removed Lines]",
          "1277:       indir_level, *name_count);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1704:   if ((pb = file_push_buffer(ms)) == NULL)",
          "1705:    return -1;",
          "1707:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
          "1710:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1711:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
          "",
          "[Removed Lines]",
          "1708:       indir_level + 1, name_count, BINTEST, text);",
          "",
          "[Added Lines]",
          "1711:   (*indir_count)++;",
          "1713:       indir_count, name_count, BINTEST, text);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1745:   if (m->flag & NOSPACE)",
          "1747:   rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,",
          "1749:       printed_something, need_separator, returnval);",
          "1750:   if (rv != 1)",
          "",
          "[Removed Lines]",
          "1748:       mode, text, flip, indir_level, name_count,",
          "",
          "[Added Lines]",
          "1753:       mode, text, flip, indir_count, name_count,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "64485737cf5e0251ab82d0a2d50e9903ab9ac588",
      "candidate_info": {
        "commit_hash": "64485737cf5e0251ab82d0a2d50e9903ab9ac588",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/64485737cf5e0251ab82d0a2d50e9903ab9ac588",
        "files": [
          "configure.ac",
          "src/file.c",
          "src/file.h",
          "src/funcs.c",
          "src/readcdf.c",
          "src/softmagic.c"
        ],
        "message": "don't use setlocale(3); it is not thread-safe.",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/file.c||src/file.c",
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/readcdf.c||src/readcdf.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/funcs.c||src/funcs.c"
          ],
          "candidate": [
            "src/funcs.c||src/funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "138: fi])",
          "140: dnl Checks for functions",
          "143: dnl Provide implementation of some required functions if necessary",
          "144: AC_REPLACE_FUNCS(getopt_long asprintf vasprintf strlcpy strlcat getline ctime_r asctime_r pread strcasestr fmtcheck)",
          "",
          "[Removed Lines]",
          "141: AC_CHECK_FUNCS(strerror strndup strtoul mkstemp mkostemp utimes utime wcwidth strtof)",
          "",
          "[Added Lines]",
          "141: AC_CHECK_FUNCS(strerror strndup strtoul mkstemp mkostemp utimes utime wcwidth strtof newlocale uselocale freelocale)",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.152 2013/06/26 14:46:54 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.153 2014/02/11 15:41:04 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54: #ifdef HAVE_UNISTD_H",
          "56: #endif",
          "60: #ifdef HAVE_WCHAR_H",
          "61: #include <wchar.h>",
          "62: #endif",
          "",
          "[Removed Lines]",
          "57: #ifdef HAVE_LOCALE_H",
          "58: #include <locale.h>",
          "59: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "471:     size_t);",
          "474: typedef struct {",
          "475:  const char *pat;",
          "477:  int rc;",
          "478:  regex_t rx;",
          "479: } file_regex_t;",
          "",
          "[Removed Lines]",
          "476:  char *old_lc_ctype;",
          "",
          "[Added Lines]",
          "474: #if defined(HAVE_LOCALE_H)",
          "475: #include <locale.h>",
          "476: #endif",
          "480: #if defined(HAVE_NEWLOCALE) && defined(HAVE_USELOCALE) && defined(HAVE_FREELOCALE)",
          "481: #define USE_C_LOCALE",
          "482:  locale_t old_lc_ctype;",
          "483:  locale_t c_lc_ctype;",
          "484: #endif",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.71 2014/05/05 20:53:10 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.72 2014/05/14 23:15:42 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: #if defined(HAVE_LIMITS_H)",
          "46: #include <limits.h>",
          "47: #endif",
          "52: #ifndef SIZE_MAX",
          "53: #define SIZE_MAX ((size_t)~0)",
          "",
          "[Removed Lines]",
          "48: #if defined(HAVE_LOCALE_H)",
          "49: #include <locale.h>",
          "50: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "455: protected int",
          "456: file_regcomp(file_regex_t *rx, const char *pat, int flags)",
          "457: {",
          "461:  assert(rx->old_lc_ctype != NULL);",
          "462:  rx->pat = pat;",
          "465:  return rx->rc = regcomp(&rx->rx, pat, flags);",
          "466: }",
          "",
          "[Removed Lines]",
          "458:  rx->old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "459:  assert(rx->old_lc_ctype != NULL);",
          "460:  rx->old_lc_ctype = strdup(rx->old_lc_ctype);",
          "464:  (void)setlocale(LC_CTYPE, \"C\");",
          "",
          "[Added Lines]",
          "455: #ifdef USE_C_LOCALE",
          "456:  rx->c_lc_ctype = newlocale(LC_CTYPE_MASK, \"C\", 0);",
          "457:  assert(rx->c_lc_ctype != NULL);",
          "458:  rx->old_lc_ctype = uselocale(rx->c_lc_ctype);",
          "460: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "478: {",
          "479:  if (rx->rc == 0)",
          "480:   regfree(&rx->rx);",
          "483: }",
          "485: protected void",
          "",
          "[Removed Lines]",
          "481:  (void)setlocale(LC_CTYPE, rx->old_lc_ctype);",
          "482:  free(rx->old_lc_ctype);",
          "",
          "[Added Lines]",
          "479: #ifdef USE_C_LOCALE",
          "480:  (void)uselocale(rx->old_lc_ctype);",
          "481:  freelocale(rx->c_lc_ctype);",
          "482: #endif",
          "",
          "---------------"
        ],
        "src/readcdf.c||src/readcdf.c": [
          "File: src/readcdf.c -> src/readcdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"file.h\"",
          "28: #ifndef lint",
          "30: #endif",
          "32: #include <assert.h>",
          "",
          "[Removed Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.46 2014/08/27 06:59:35 christos Exp $\")",
          "",
          "[Added Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.47 2014/08/27 13:00:37 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35: #include <string.h>",
          "36: #include <time.h>",
          "37: #include <ctype.h>",
          "42: #include \"cdf.h\"",
          "43: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: #if defined(HAVE_LOCALE_H)",
          "39: #include <locale.h>",
          "40: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107: {",
          "108:  size_t i;",
          "109:  const char *rv = NULL;",
          "115:  assert(old_lc_ctype != NULL);",
          "117:  for (i = 0; nv[i].pattern != NULL; i++)",
          "118:   if (strcasestr(vbuf, nv[i].pattern) != NULL) {",
          "119:    rv = nv[i].mime;",
          "120:    break;",
          "121:   }",
          "124:  return rv;",
          "125: }",
          "",
          "[Removed Lines]",
          "110:  char *old_lc_ctype;",
          "112:  old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "113:  assert(old_lc_ctype != NULL);",
          "114:  old_lc_ctype = strdup(old_lc_ctype);",
          "116:  (void)setlocale(LC_CTYPE, \"C\");",
          "122:  (void)setlocale(LC_CTYPE, old_lc_ctype);",
          "123:  free(old_lc_ctype);",
          "",
          "[Added Lines]",
          "107: #ifdef USE_C_LOCALE",
          "108:  locale_t old_lc_ctype, c_lc_ctype;",
          "110:  c_lc_ctype = newlocale(LC_CTYPE_MASK, \"C\", 0);",
          "111:  assert(c_lc_ctype != NULL);",
          "112:  old_lc_ctype = uselocale(c_lc_ctype);",
          "114: #endif",
          "120: #ifdef USE_C_LOCALE",
          "121:  (void)uselocale(old_lc_ctype);",
          "122:  freelocale(c_lc_ctype);",
          "123: #endif",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.191 2014/06/04 17:36:34 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.192 2014/08/30 15:30:11 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41: #include <ctype.h>",
          "42: #include <stdlib.h>",
          "43: #include <time.h>",
          "49: private int match(struct magic_set *, struct magic *, uint32_t,",
          "50:     const unsigned char *, size_t, size_t, int, int, int, int, int *, int *,",
          "",
          "[Removed Lines]",
          "44: #if defined(HAVE_LOCALE_H)",
          "45: #include <locale.h>",
          "46: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af444af0738468393f40f9d2261b1ea10fc4b2ba",
      "candidate_info": {
        "commit_hash": "af444af0738468393f40f9d2261b1ea10fc4b2ba",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/af444af0738468393f40f9d2261b1ea10fc4b2ba",
        "files": [
          "doc/file.man",
          "doc/libmagic.man",
          "src/apprentice.c",
          "src/ascmagic.c",
          "src/elfclass.h",
          "src/file.c",
          "src/file.h",
          "src/funcs.c",
          "src/magic.c",
          "src/softmagic.c"
        ],
        "message": "Remove name recursion limit, it is always lower than the count... Rename things for consistency.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/ascmagic.c||src/ascmagic.c",
          "src/elfclass.h||src/elfclass.h",
          "src/file.c||src/file.c",
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/magic.c||src/magic.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/funcs.c||src/funcs.c"
          ],
          "candidate": [
            "src/funcs.c||src/funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.225 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.226 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "524:   ms->mlist[i] = NULL;",
          "525:  ms->file = \"unknown\";",
          "526:  ms->line = 0;",
          "529:  ms->name_max = FILE_NAME_MAX;",
          "532:  return ms;",
          "533: free:",
          "534:  free(ms);",
          "",
          "[Removed Lines]",
          "527:  ms->indir_recursion = FILE_INDIR_RECURSION;",
          "528:  ms->name_recursion = FILE_NAME_RECURSION;",
          "530:  ms->shnum_max = FILE_ELF_SHNUM;",
          "531:  ms->phnum_max = FILE_ELF_PHNUM;",
          "",
          "[Added Lines]",
          "527:  ms->indir_max = FILE_INDIR_MAX;",
          "529:  ms->elf_shnum_max = FILE_ELF_SHNUM_MAX;",
          "530:  ms->elf_phnum_max = FILE_ELF_PHNUM_MAX;",
          "",
          "---------------"
        ],
        "src/ascmagic.c||src/ascmagic.c": [
          "File: src/ascmagic.c -> src/ascmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.89 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.90 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:       == NULL)",
          "148:    goto done;",
          "149:   if ((rv = file_softmagic(ms, utf8_buf,",
          "151:       TEXTTEST, text)) == 0)",
          "152:    rv = -1;",
          "153:  }",
          "",
          "[Removed Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), 0, 0, NULL,",
          "",
          "[Added Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), 0, NULL,",
          "",
          "---------------"
        ],
        "src/elfclass.h||src/elfclass.h": [
          "File: src/elfclass.h -> src/elfclass.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: #ifdef ELFCORE",
          "37:  case ET_CORE:",
          "38:   phnum = elf_getu16(swap, elfhdr.e_phnum);",
          "40:    return toomany(ms, \"program\", phnum);",
          "41:   flags |= FLAGS_IS_CORE;",
          "42:   if (dophn_core(ms, clazz, swap, fd,",
          "",
          "[Removed Lines]",
          "39:   if (phnum > ms->phnum_max)",
          "",
          "[Added Lines]",
          "39:   if (phnum > ms->elf_phnum_max)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:  case ET_EXEC:",
          "50:  case ET_DYN:",
          "51:   phnum = elf_getu16(swap, elfhdr.e_phnum);",
          "53:    return toomany(ms, \"program\", phnum);",
          "54:   shnum = elf_getu16(swap, elfhdr.e_shnum);",
          "56:    return toomany(ms, \"section\", shnum);",
          "57:   if (dophn_exec(ms, clazz, swap, fd,",
          "58:       (off_t)elf_getu(swap, elfhdr.e_phoff), phnum,",
          "",
          "[Removed Lines]",
          "52:   if (phnum > ms->phnum_max)",
          "55:   if (shnum > ms->shnum_max)",
          "",
          "[Added Lines]",
          "52:   if (phnum > ms->elf_phnum_max)",
          "55:   if (shnum > ms->elf_shnum_max)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:  case ET_REL:",
          "64:   shnum = elf_getu16(swap, elfhdr.e_shnum);",
          "66:    return toomany(ms, \"section\", shnum);",
          "67:   if (doshn(ms, clazz, swap, fd,",
          "68:       (off_t)elf_getu(swap, elfhdr.e_shoff), shnum,",
          "",
          "[Removed Lines]",
          "65:   if (shnum > ms->shnum_max)",
          "",
          "[Added Lines]",
          "65:   if (shnum > ms->elf_shnum_max)",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.157 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.158 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:  int tag;",
          "122:  size_t value;",
          "123: } pm[] = {",
          "129: };",
          "",
          "[Removed Lines]",
          "124:  { \"indir\", MAGIC_PARAM_INDIR_RECURSION, 0 },",
          "125:  { \"name\", MAGIC_PARAM_NAME_RECURSION, 0 },",
          "126:  { \"namenum\", MAGIC_PARAM_NAME_MAX, 0 },",
          "127:  { \"phnum\", MAGIC_PARAM_PHNUM_MAX, 0 },",
          "128:  { \"shnum\", MAGIC_PARAM_SHNUM_MAX, 0 },",
          "",
          "[Added Lines]",
          "124:  { \"indir\", MAGIC_PARAM_INDIR_MAX, 0 },",
          "125:  { \"name\", MAGIC_PARAM_NAME_MAX, 0 },",
          "126:  { \"elf_phnum\", MAGIC_PARAM_ELF_PHNUM_MAX, 0 },",
          "127:  { \"elf_shnum\", MAGIC_PARAM_ELF_SHNUM_MAX, 0 },",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "406:  uint16_t name_max;",
          "414: };",
          "",
          "[Removed Lines]",
          "404:  uint16_t indir_recursion;",
          "405:  uint16_t name_recursion;",
          "407:  uint16_t shnum_max;",
          "408:  uint16_t phnum_max;",
          "409: #define FILE_INDIR_RECURSION 15",
          "410: #define FILE_NAME_RECURSION 40",
          "411: #define FILE_NAME_MAX  30",
          "412: #define FILE_ELF_SHNUM  32768",
          "413: #define FILE_ELF_PHNUM  128",
          "",
          "[Added Lines]",
          "404:  uint16_t indir_max;",
          "406:  uint16_t elf_shnum_max;",
          "407:  uint16_t elf_phnum_max;",
          "408: #define FILE_INDIR_MAX   15",
          "409: #define FILE_NAME_MAX   30",
          "410: #define FILE_ELF_SHNUM_MAX  32768",
          "411: #define FILE_ELF_PHNUM_MAX  128",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "450:     unichar **, size_t *, const char **, const char **, const char **);",
          "451: protected int file_is_tar(struct magic_set *, const unsigned char *, size_t);",
          "452: protected int file_softmagic(struct magic_set *, const unsigned char *, size_t,",
          "454: protected int file_apprentice(struct magic_set *, const char *, int);",
          "455: protected int buffer_apprentice(struct magic_set *, struct magic **,",
          "456:     size_t *, size_t);",
          "",
          "[Removed Lines]",
          "453:     uint16_t, uint16_t, uint16_t *, int, int);",
          "",
          "[Added Lines]",
          "451:     uint16_t, uint16_t *, int, int);",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.75 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.76 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:  if ((ms->flags & MAGIC_NO_CHECK_SOFT) == 0)",
          "231:       looks_text)) != 0) {",
          "232:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "233:     (void)fprintf(stderr, \"softmagic %d\\n\", m);",
          "",
          "[Removed Lines]",
          "230:   if ((m = file_softmagic(ms, ubuf, nb, 0, 0, NULL, BINTEST,",
          "",
          "[Added Lines]",
          "230:   if ((m = file_softmagic(ms, ubuf, nb, 0, NULL, BINTEST,",
          "",
          "---------------"
        ],
        "src/magic.c||src/magic.c": [
          "File: src/magic.c -> src/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"file.h\"",
          "35: #ifndef lint",
          "39: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.87 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.88 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "541: magic_setparam(struct magic_set *ms, int param, const void *val)",
          "542: {",
          "543:  switch (param) {",
          "549:   return 0;",
          "550:  case MAGIC_PARAM_NAME_MAX:",
          "551:   ms->name_max = *(const size_t *)val;",
          "552:   return 0;",
          "555:   return 0;",
          "558:   return 0;",
          "559:  default:",
          "560:   errno = EINVAL;",
          "",
          "[Removed Lines]",
          "544:  case MAGIC_PARAM_INDIR_RECURSION:",
          "545:   ms->indir_recursion = *(const size_t *)val;",
          "546:   return 0;",
          "547:  case MAGIC_PARAM_NAME_RECURSION:",
          "548:   ms->name_recursion = *(const size_t *)val;",
          "553:  case MAGIC_PARAM_PHNUM_MAX:",
          "554:   ms->phnum_max = *(const size_t *)val;",
          "556:  case MAGIC_PARAM_SHNUM_MAX:",
          "557:   ms->shnum_max = *(const size_t *)val;",
          "",
          "[Added Lines]",
          "544:  case MAGIC_PARAM_INDIR_MAX:",
          "545:   ms->indir_max = *(const size_t *)val;",
          "550:  case MAGIC_PARAM_ELF_PHNUM_MAX:",
          "551:   ms->elf_phnum_max = *(const size_t *)val;",
          "553:  case MAGIC_PARAM_ELF_SHNUM_MAX:",
          "554:   ms->elf_shnum_max = *(const size_t *)val;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "566: magic_getparam(struct magic_set *ms, int param, void *val)",
          "567: {",
          "568:  switch (param) {",
          "574:   return 0;",
          "575:  case MAGIC_PARAM_NAME_MAX:",
          "577:   return 0;",
          "580:   return 0;",
          "583:   return 0;",
          "584:  default:",
          "585:   errno = EINVAL;",
          "",
          "[Removed Lines]",
          "569:  case MAGIC_PARAM_INDIR_RECURSION:",
          "571:   return 0;",
          "572:  case MAGIC_PARAM_NAME_RECURSION:",
          "578:  case MAGIC_PARAM_PHNUM_MAX:",
          "581:  case MAGIC_PARAM_SHNUM_MAX:",
          "",
          "[Added Lines]",
          "566:  case MAGIC_PARAM_INDIR_MAX:",
          "572:  case MAGIC_PARAM_ELF_PHNUM_MAX:",
          "575:  case MAGIC_PARAM_ELF_SHNUM_MAX:",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.200 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.201 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: #include <time.h>",
          "45: private int match(struct magic_set *, struct magic *, uint32_t,",
          "47:     uint16_t *, int *, int *, int *);",
          "48: private int mget(struct magic_set *, const unsigned char *,",
          "49:     struct magic *, size_t, size_t, unsigned int, int, int, int, uint16_t,",
          "51: private int magiccheck(struct magic_set *, struct magic *);",
          "52: private int32_t mprint(struct magic_set *, struct magic *);",
          "53: private int32_t moffset(struct magic_set *, struct magic *);",
          "",
          "[Removed Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, uint16_t, uint16_t,",
          "50:     uint16_t, uint16_t *, int *, int *, int *);",
          "",
          "[Added Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, uint16_t,",
          "50:     uint16_t *, int *, int *, int *);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72: protected int",
          "73: file_softmagic(struct magic_set *ms, const unsigned char *buf, size_t nbytes,",
          "76: {",
          "77:  struct mlist *ml;",
          "78:  int rv, printed_something = 0, need_separator = 0;",
          "",
          "[Removed Lines]",
          "74:     uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "75:  int mode, int text)",
          "",
          "[Added Lines]",
          "74:     uint16_t indir_level, uint16_t *name_count, int mode, int text)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "86:  for (ml = ms->mlist[0]->next; ml != ms->mlist[0]; ml = ml->next)",
          "87:   if ((rv = match(ms, ml->magic, ml->nmagic, buf, nbytes, 0, mode,",
          "89:       &printed_something, &need_separator, NULL)) != 0)",
          "90:    return rv;",
          "",
          "[Removed Lines]",
          "88:       text, 0, indir_level, name_level, name_count,",
          "",
          "[Added Lines]",
          "87:       text, 0, indir_level, name_count,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "141: private int",
          "142: match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,",
          "143:     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,",
          "145:     int *printed_something, int *need_separator, int *returnval)",
          "146: {",
          "147:  uint32_t magindex = 0;",
          "",
          "[Removed Lines]",
          "144:     int flip, uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "",
          "[Added Lines]",
          "143:     int flip, uint16_t indir_level, uint16_t *name_count,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "181:   switch (mget(ms, s, m, nbytes, offset, cont_level, mode, text,",
          "183:       printed_something, need_separator, returnval)) {",
          "184:   case -1:",
          "185:    return -1;",
          "",
          "[Removed Lines]",
          "182:       flip, indir_level, name_level, name_count,",
          "",
          "[Added Lines]",
          "181:       flip, indir_level, name_count,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "268:    }",
          "269: #endif",
          "270:    switch (mget(ms, s, m, nbytes, offset, cont_level, mode,",
          "272:        printed_something, need_separator, returnval)) {",
          "273:    case -1:",
          "274:     return -1;",
          "",
          "[Removed Lines]",
          "271:        text, flip, indir_level, name_level, name_count,",
          "",
          "[Added Lines]",
          "270:        text, flip, indir_level, name_count,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1222: private int",
          "1223: mget(struct magic_set *ms, const unsigned char *s, struct magic *m,",
          "1224:     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,",
          "1226:     int *printed_something, int *need_separator, int *returnval)",
          "1227: {",
          "1228:  uint32_t offset = ms->offset;",
          "",
          "[Removed Lines]",
          "1225:     int flip, uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "",
          "[Added Lines]",
          "1224:     int flip, uint16_t indir_level, uint16_t *name_count,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1233:  union VALUETYPE *p = &ms->ms_value;",
          "1234:  struct mlist ml;",
          "1237:   file_error(ms, 0, \"indirect recursion nesting (%hu) exceeded\",",
          "1238:       indir_level);",
          "1239:   return -1;",
          "1240:  }",
          "1248:  if (*name_count >= ms->name_max) {",
          "1249:   file_error(ms, 0, \"name use count (%hu) exceeded\",",
          "",
          "[Removed Lines]",
          "1236:  if (indir_level >= ms->indir_recursion) {",
          "1242:  if (name_level >= ms->name_recursion) {",
          "1243:   file_error(ms, 0, \"name recursion nesting (%hu) exceeded\",",
          "1244:       name_level);",
          "1245:   return -1;",
          "1246:  }",
          "",
          "[Added Lines]",
          "1235:  if (indir_level >= ms->indir_max) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1258:  if ((ms->flags & MAGIC_DEBUG) != 0) {",
          "1259:   fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%\"",
          "1260:       SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT",
          "1262:       m->type, m->flag, offset, o, nbytes,",
          "1264:   mdebug(offset, (char *)(void *)p, sizeof(union VALUETYPE));",
          "1265: #ifndef COMPILE_ONLY",
          "1266:   file_mdump(m);",
          "",
          "[Removed Lines]",
          "1261:       \"u, il=%hu, nl=%hu nc=%hu)\\n\",",
          "1263:       indir_level, name_level, *name_count);",
          "",
          "[Added Lines]",
          "1254:       \"u, il=%hu, nc=%hu)\\n\",",
          "1256:       indir_level, *name_count);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1701:    return -1;",
          "1703:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
          "1706:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1707:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
          "",
          "[Removed Lines]",
          "1704:       indir_level + 1, name_level, name_count, BINTEST, text);",
          "",
          "[Added Lines]",
          "1697:       indir_level + 1, name_count, BINTEST, text);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1741:   if (m->flag & NOSPACE)",
          "1743:   rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,",
          "1745:       printed_something, need_separator, returnval);",
          "1746:   if (rv != 1)",
          "",
          "[Removed Lines]",
          "1744:       mode, text, flip, indir_level, name_level + 1, name_count,",
          "",
          "[Added Lines]",
          "1737:       mode, text, flip, indir_level, name_count,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d54a3cd6dbfdb3b1a00654d72adb4823c7a688e7",
      "candidate_info": {
        "commit_hash": "d54a3cd6dbfdb3b1a00654d72adb4823c7a688e7",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/d54a3cd6dbfdb3b1a00654d72adb4823c7a688e7",
        "files": [
          "src/funcs.c"
        ],
        "message": "Always print the method we are trying in debug mode.",
        "before_after_code_files": [
          "src/funcs.c||src/funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/funcs.c||src/funcs.c"
          ],
          "candidate": [
            "src/funcs.c||src/funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.82 2015/06/03 18:01:20 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.83 2015/06/16 14:17:37 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "205: #ifdef __EMX__",
          "206:  if ((ms->flags & MAGIC_NO_CHECK_APPTYPE) == 0 && inname) {",
          "208:   case -1:",
          "209:    return -1;",
          "210:   case 0:",
          "",
          "[Removed Lines]",
          "207:   switch (file_os2_apptype(ms, inname, buf, nb)) {",
          "",
          "[Added Lines]",
          "207:   m = file_os2_apptype(ms, inname, buf, nb);",
          "208:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "209:    (void)fprintf(stderr, \"[try os2_apptype %d]\\n\", m);",
          "210:   switch (m) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "216: #endif",
          "217: #if HAVE_FORK",
          "223:    goto done_encoding;",
          "224:   }",
          "225: #endif",
          "231:    if (checkdone(ms, &rv))",
          "232:     goto done;",
          "233:   }",
          "240:    if (checkdone(ms, &rv))",
          "241:     goto done;",
          "242:   }",
          "245:  if ((ms->flags & MAGIC_NO_CHECK_SOFT) == 0)",
          "250: #ifdef BUILTIN_ELF",
          "251:    if ((ms->flags & MAGIC_NO_CHECK_ELF) == 0 && m == 1 &&",
          "252:        nb > 5 && fd != -1) {",
          "",
          "[Removed Lines]",
          "219:  if ((ms->flags & MAGIC_NO_CHECK_COMPRESS) == 0)",
          "220:   if ((m = file_zmagic(ms, fd, inname, ubuf, nb)) != 0) {",
          "221:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "222:     (void)fprintf(stderr, \"zmagic %d\\n\", m);",
          "227:  if ((ms->flags & MAGIC_NO_CHECK_TAR) == 0)",
          "228:   if ((m = file_is_tar(ms, ubuf, nb)) != 0) {",
          "229:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "230:     (void)fprintf(stderr, \"tar %d\\n\", m);",
          "236:  if ((ms->flags & MAGIC_NO_CHECK_CDF) == 0)",
          "237:   if ((m = file_trycdf(ms, fd, ubuf, nb)) != 0) {",
          "238:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "239:     (void)fprintf(stderr, \"cdf %d\\n\", m);",
          "246:   if ((m = file_softmagic(ms, ubuf, nb, 0, NULL, BINTEST,",
          "247:       looks_text)) != 0) {",
          "248:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "249:     (void)fprintf(stderr, \"softmagic %d\\n\", m);",
          "",
          "[Added Lines]",
          "222:  if ((ms->flags & MAGIC_NO_CHECK_COMPRESS) == 0) {",
          "223:   m = file_zmagic(ms, fd, inname, ubuf, nb);",
          "224:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "225:    (void)fprintf(stderr, \"[try zmagic %d]\\n\", m);",
          "226:   if (m) {",
          "229:  }",
          "232:  if ((ms->flags & MAGIC_NO_CHECK_TAR) == 0) {",
          "233:   m = file_is_tar(ms, ubuf, nb);",
          "234:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "235:    (void)fprintf(stderr, \"[try tar %d]\\n\", m);",
          "236:   if (m) {",
          "240:  }",
          "243:  if ((ms->flags & MAGIC_NO_CHECK_CDF) == 0) {",
          "244:   m = file_trycdf(ms, fd, ubuf, nb);",
          "245:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "246:    (void)fprintf(stderr, \"[try cdf %d]\\n\", m);",
          "247:   if (m) {",
          "251:  }",
          "255:   m = file_softmagic(ms, ubuf, nb, 0, NULL, BINTEST, looks_text);",
          "256:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "257:    (void)fprintf(stderr, \"[try softmagic %d]\\n\", m);",
          "258:   if (m) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "266:    }",
          "267: #endif",
          "268:    if (checkdone(ms, &rv))",
          "",
          "[Removed Lines]",
          "262:     if ((m = file_tryelf(ms, fd, ubuf, nb)) != 0)",
          "263:      if ((ms->flags & MAGIC_DEBUG) != 0)",
          "264:       (void)fprintf(stderr,",
          "265:           \"elf %d\\n\", m);",
          "",
          "[Added Lines]",
          "271:     m = file_tryelf(ms, fd, ubuf, nb);",
          "272:     if ((ms->flags & MAGIC_DEBUG) != 0)",
          "273:      (void)fprintf(stderr, \"[try elf %d]\\n\",",
          "274:          m);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "273:  if ((ms->flags & MAGIC_NO_CHECK_TEXT) == 0) {",
          "278:    if (checkdone(ms, &rv))",
          "279:     goto done;",
          "280:   }",
          "",
          "[Removed Lines]",
          "275:   if ((m = file_ascmagic(ms, ubuf, nb, looks_text)) != 0) {",
          "276:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "277:     (void)fprintf(stderr, \"ascmagic %d\\n\", m);",
          "",
          "[Added Lines]",
          "284:   m = file_ascmagic(ms, ubuf, nb, looks_text);",
          "285:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "286:    (void)fprintf(stderr, \"[try ascmagic %d]\\n\", m);",
          "287:   if (m) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2388f81e5258f4b24986e44b454bb3ae9ccf89c0",
      "candidate_info": {
        "commit_hash": "2388f81e5258f4b24986e44b454bb3ae9ccf89c0",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/2388f81e5258f4b24986e44b454bb3ae9ccf89c0",
        "files": [
          "src/funcs.c"
        ],
        "message": "print a space between previous messages and error.",
        "before_after_code_files": [
          "src/funcs.c||src/funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/funcs.c||src/funcs.c"
          ],
          "candidate": [
            "src/funcs.c||src/funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.81 2015/05/28 19:26:59 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.82 2015/06/03 18:01:20 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:  if (lineno != 0) {",
          "108:   free(ms->o.buf);",
          "109:   ms->o.buf = NULL;",
          "111:  }",
          "112:  file_vprintf(ms, f, va);",
          "113:  if (error > 0)",
          "114:   file_printf(ms, \" (%s)\", strerror(error));",
          "",
          "[Removed Lines]",
          "110:   file_printf(ms, \"line %\" SIZE_T_FORMAT \"u: \", lineno);",
          "",
          "[Added Lines]",
          "110:   file_printf(ms, \"line %\" SIZE_T_FORMAT \"u:\", lineno);",
          "112:  if (ms->o.buf && *ms->o.buf)",
          "113:   file_printf(ms, \" \");",
          "",
          "---------------"
        ]
      }
    }
  ]
}