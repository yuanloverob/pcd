{
  "cve_id": "CVE-2016-6302",
  "cve_desc": "The tls_decrypt_ticket function in ssl/t1_lib.c in OpenSSL before 1.1.0 does not consider the HMAC size during validation of the ticket length, which allows remote attackers to cause a denial of service via a ticket that is too short.",
  "repo": "openssl/openssl",
  "patch_hash": "e97763c92c655dcf4af2860b3abd2bc4c8a267f9",
  "patch_info": {
    "commit_hash": "e97763c92c655dcf4af2860b3abd2bc4c8a267f9",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/e97763c92c655dcf4af2860b3abd2bc4c8a267f9",
    "files": [
      "ssl/t1_lib.c"
    ],
    "message": "Sanity check ticket length.\n\nIf a ticket callback changes the HMAC digest to SHA512 the existing\nsanity checks are not sufficient and an attacker could perform a DoS\nattack with a malformed ticket. Add additional checks based on\nHMAC size.\n\nThanks to Shi Lei for reporting this bug.\n\nCVE-2016-6302\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>",
    "before_after_code_files": [
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2969:     HMAC_CTX *hctx = NULL;",
      "2970:     EVP_CIPHER_CTX *ctx;",
      "2971:     SSL_CTX *tctx = s->initial_ctx;",
      "2976:     hctx = HMAC_CTX_new();",
      "2977:     if (hctx == NULL)",
      "",
      "[Removed Lines]",
      "2973:     if (eticklen < 48)",
      "2974:         return 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3018:     if (mlen < 0) {",
      "3019:         goto err;",
      "3020:     }",
      "3021:     eticklen -= mlen;",
      "3023:     if (HMAC_Update(hctx, etick, eticklen) <= 0",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3020:     if (eticklen <=",
      "3021:         TLSEXT_KEYNAME_LENGTH + EVP_CIPHER_CTX_iv_length(ctx) + mlen) {",
      "3022:         ret = 2;",
      "3023:         goto err;",
      "3024:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "baaabfd8fdcec04a691695fad9a664bea43202b6",
      "candidate_info": {
        "commit_hash": "baaabfd8fdcec04a691695fad9a664bea43202b6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/baaabfd8fdcec04a691695fad9a664bea43202b6",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "Sanity check ticket length.\n\nIf a ticket callback changes the HMAC digest to SHA512 the existing\nsanity checks are not sufficient and an attacker could perform a DoS\nattack with a malformed ticket. Add additional checks based on\nHMAC size.\n\nThanks to Shi Lei for reporting this bug.\n\nCVE-2016-6302\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "ssl/t1_lib.c||ssl/t1_lib.c"
          ],
          "candidate": [
            "ssl/t1_lib.c||ssl/t1_lib.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3401:     HMAC_CTX hctx;",
          "3402:     EVP_CIPHER_CTX ctx;",
          "3403:     SSL_CTX *tctx = s->initial_ctx;",
          "3408:     HMAC_CTX_init(&hctx);",
          "3409:     EVP_CIPHER_CTX_init(&ctx);",
          "",
          "[Removed Lines]",
          "3405:     if (eticklen < 48)",
          "3406:         return 2;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3437:     if (mlen < 0) {",
          "3438:         goto err;",
          "3439:     }",
          "3440:     eticklen -= mlen;",
          "3442:     if (HMAC_Update(&hctx, etick, eticklen) <= 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3439:     if (eticklen <= 16 + EVP_CIPHER_CTX_iv_length(&ctx) + mlen) {",
          "3440:         HMAC_CTX_cleanup(&hctx);",
          "3441:         EVP_CIPHER_CTX_cleanup(&ctx);",
          "3442:         return 2;",
          "3443:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}