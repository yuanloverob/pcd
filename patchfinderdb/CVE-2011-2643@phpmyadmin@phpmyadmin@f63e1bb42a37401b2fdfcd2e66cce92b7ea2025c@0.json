{
  "cve_id": "CVE-2011-2643",
  "cve_desc": "Directory traversal vulnerability in sql.php in phpMyAdmin 3.4.x before 3.4.3.2, when configuration storage is enabled, allows remote attackers to include and execute arbitrary local files via directory traversal sequences in a MIME-type transformation parameter.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "f63e1bb42a37401b2fdfcd2e66cce92b7ea2025c",
  "patch_info": {
    "commit_hash": "f63e1bb42a37401b2fdfcd2e66cce92b7ea2025c",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/f63e1bb42a37401b2fdfcd2e66cce92b7ea2025c",
    "files": [
      "ChangeLog",
      "sql.php"
    ],
    "message": "Local file inclusion vulnerability",
    "before_after_code_files": [
      "sql.php||sql.php"
    ]
  },
  "patch_diff": {
    "sql.php||sql.php": [
      "File: sql.php -> sql.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "719:             parse_str($_REQUEST['transform_fields_list'], $edited_values);",
      "721:             foreach($mime_map as $transformation) {",
      "723:                 $column_name = $transformation['column_name'];",
      "724:                 $column_data = $edited_values[$column_name];",
      "",
      "[Removed Lines]",
      "722:                 $include_file = $transformation['transformation'];",
      "",
      "[Added Lines]",
      "722:                 $include_file = PMA_securePath($transformation['transformation']);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "43ed78a0f887e996cdc1459428bbcc7111bed38c",
      "candidate_info": {
        "commit_hash": "43ed78a0f887e996cdc1459428bbcc7111bed38c",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/43ed78a0f887e996cdc1459428bbcc7111bed38c",
        "files": [
          "js/sql.js",
          "sql.php"
        ],
        "message": "Transformed values are returned from server for newly edited values.  Handling of mimetypes other than text/plain needs to be implemented",
        "before_after_code_files": [
          "js/sql.js||js/sql.js",
          "sql.php||sql.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "sql.php||sql.php"
          ],
          "candidate": [
            "sql.php||sql.php"
          ]
        }
      },
      "candidate_diff": {
        "js/sql.js||js/sql.js": [
          "File: js/sql.js -> js/sql.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "245:         var params_to_submit = {};",
          "246:         var relation_fields = new Array();",
          "248:         $(input_siblings).each(function() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "247:         var transform_fields = {};",
          "248:         var transformation_fields = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "251:             var field_name = getFieldName($(this), disp_mode);",
          "253:             var this_field_params = {};",
          "254:             if($(this).is(\":not(.relation, .enum)\")) {",
          "255:                 this_field_params[field_name] = $(this).find('textarea').val();",
          "256:             }",
          "257:             else {",
          "258:                 this_field_params[field_name] = $(this).find('select').val();",
          "259:                 if($(this).is('.relation')) {",
          "260:                     relation_fields.push(field_name);",
          "261:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257:             if($(this).is('.transformed')) {",
          "258:                 transformation_fields =  true;",
          "259:             }",
          "263:                 if($(this).is('.transformed')) {",
          "264:                     $.extend(transform_fields, this_field_params);",
          "265:                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "277:         if(relation_fields.length > 0) {",
          "278:             rel_fields_list = relation_fields.join();",
          "279:         }",
          "282:         var post_params = {'ajax_request' : true,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "291:         var transform_fields_list = $.param(transform_fields);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "288:                             'clause_is_unique' : nonunique,",
          "289:                             'where_clause' : where_clause,",
          "290:                             'rel_fields_list' : rel_fields_list,",
          "291:                             'goto' : 'sql.php'",
          "292:                           };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "303:                             'do_transformations' : transformation_fields,",
          "304:                             'transform_fields_list' : transform_fields_list,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "301:                     if($(this).is(':not(.relation, .enum)')) {",
          "302:                         var new_html = $(this).find('textarea').val();",
          "303:                     }",
          "304:                     else {",
          "305:                         var new_html = $(this).find('select').val();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "318:                         if($(this).is('.transformed')) {",
          "319:                             var field_name = getFieldName($(this), disp_mode);",
          "320:                             var this_field = $(this);",
          "322:                             $.each(data.transformations, function(key, value) {",
          "323:                                 if(key == field_name) {",
          "324:                                     var new_value = $(this_field).find('textarea').val();",
          "325:                                     new_html = $(value).append(new_value);",
          "326:                                 }",
          "327:                             })",
          "328:                         }",
          "",
          "---------------"
        ],
        "sql.php||sql.php": [
          "File: sql.php -> sql.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "594:             $map = PMA_getForeigners($db, $table, '', 'both');",
          "598:             foreach( $rel_fields as $rel_field) {",
          "",
          "[Removed Lines]",
          "596:             $rel_fields = explode(',', $rel_fields_list);",
          "",
          "[Added Lines]",
          "596:             $rel_fields = explode(',', $_REQUEST['rel_fields_list']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "611:                 $extra_data['relations'][$rel_field] .= '</a>';",
          "612:             }",
          "613:         }",
          "614:         $extra_data['sql_query'] = PMA_showMessage(NULL, $GLOBALS['display_query']);",
          "616:         PMA_ajaxResponse($message, $message->isSuccess(), $extra_data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "615:         if(isset($_REQUEST['do_transformations']) && $_REQUEST['do_transformations'] == true ) {",
          "616:             require_once './libraries/transformations.lib.php';",
          "618:             $mime_map = PMA_getMIME($db, $table);",
          "620:             $edited_values = array();",
          "621:             parse_str($_REQUEST['transform_fields_list'], $edited_values);",
          "623:             foreach($mime_map as $transformation) {",
          "624:                 $include_file = $transformation['transformation'];",
          "625:                 $column_name = $transformation['column_name'];",
          "626:                 $column_data = $edited_values[$column_name];",
          "628:                 if (file_exists('./libraries/transformations/' . $include_file)) {",
          "629:                     $transformfunction_name = str_replace('.inc.php', '', $transformation['transformation']);",
          "631:                     require_once './libraries/transformations/' . $include_file;",
          "633:                     if (function_exists('PMA_transformation_' . $transformfunction_name)) {",
          "634:                         $transform_function = 'PMA_transformation_' . $transformfunction_name;",
          "635:                         $transform_options  = PMA_transformation_getOptions((isset($transformation['transformation_options']) ? $transformation['transformation_options'] : ''));",
          "637:                     }",
          "638:                 }",
          "640:                 $extra_data['transformations'][$column_name] = $transform_function($column_data, $transform_options);",
          "641:             }",
          "642:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}