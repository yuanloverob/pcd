{
  "cve_id": "CVE-2013-1439",
  "cve_desc": "The \"faster LJPEG decoder\" in libraw 0.13.x, 0.14.x, and 0.15.x before 0.15.4 allows context-dependent attackers to cause a denial of service (NULL pointer dereference) via a crafted photo file.",
  "repo": "LibRaw/LibRaw",
  "patch_hash": "11909cc59e712e09b508dda729b99aeaac2b29ad",
  "patch_info": {
    "commit_hash": "11909cc59e712e09b508dda729b99aeaac2b29ad",
    "repo": "LibRaw/LibRaw",
    "commit_url": "https://github.com/LibRaw/LibRaw/commit/11909cc59e712e09b508dda729b99aeaac2b29ad",
    "files": [
      "Changelog.txt",
      "Makefile.devel",
      "dcraw/dcraw.c",
      "internal/dcraw_common.cpp",
      "internal/dcraw_fileio.cpp",
      "libraw/libraw_version.h",
      "src/libraw_datastream.cpp"
    ],
    "message": "cumulated data checks patch",
    "before_after_code_files": [
      "Makefile.devel||Makefile.devel",
      "dcraw/dcraw.c||dcraw/dcraw.c",
      "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
      "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
      "libraw/libraw_version.h||libraw/libraw_version.h",
      "src/libraw_datastream.cpp||src/libraw_datastream.cpp"
    ]
  },
  "patch_diff": {
    "Makefile.devel||Makefile.devel": [
      "File: Makefile.devel -> Makefile.devel",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: CC=gcc",
      "6: CXX=g++",
      "8: # RawSpeed Support",
      "19: # LCMS support",
      "",
      "[Removed Lines]",
      "9: CFLAGS+=-DUSE_RAWSPEED -I../RawSpeed -I/usr/local/include/libxml2",
      "10: LDADD+=-L../RawSpeed/RawSpeed/release -lrawspeed -L/usr/local/include -ljpeg -lxml2",
      "11: RAWSPEED_DATA=../RawSpeed/data/cameras.xml",
      "14: CC=gcc48",
      "15: CXX=g++48",
      "16: CFLAGS+= -O4 -g -march=corei7 -mtune=corei7 -I. -pedantic  -Wno-long-long -Wno-overflow -msse4.2 -mfpmath=sse  -fopenmp",
      "",
      "[Added Lines]",
      "7: CFLAGS+= -O -g -I.",
      "10: #CFLAGS+=-DUSE_RAWSPEED -I../RawSpeed -I/usr/local/include/libxml2",
      "11: #LDADD+=-L../RawSpeed/RawSpeed/release -lrawspeed -L/usr/local/include -ljpeg -lxml2",
      "12: #RAWSPEED_DATA=../RawSpeed/data/cameras.xml",
      "15: #CC=gcc48",
      "16: #CXX=g++48",
      "17: #CFLAGS+= -O -g -I. -march=corei7 -mtune=corei7 -I. -pedantic  -Wno-long-long -Wno-overflow -msse4.2 -mfpmath=sse  -fopenmp",
      "",
      "---------------"
    ],
    "dcraw/dcraw.c||dcraw/dcraw.c": [
      "File: dcraw/dcraw.c -> dcraw/dcraw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "877: {",
      "878:   int len, diff;",
      "880:   len = gethuff(huff);",
      "881:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "882:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "880: #ifdef LIBRAW_LIBRARY_BUILD",
      "881:   if(!huff)",
      "882:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "883: #endif",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "891: {",
      "892:   int len, diff;",
      "894:   len = bits._gethuff_lj(buf,*huff,huff+1);",
      "895:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "896:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "899:   if(!huff || !buf)",
      "900:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1010:   }",
      "1011: #endif",
      "1014:   if (!ljpeg_start (&jh, 0)) return;",
      "1015:   jwide = jh.wide * jh.clrs;",
      "1017: #ifdef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1022: #ifdef LIBRAW_LIBRARY_BUILD",
      "1023:   if(jh.wide<1 || jh.high<1 || jh.clrs<1 || jh.bits <1)",
      "1024:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1025: #endif",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1028:       }",
      "1030:   slices = slicesWcnt * jh.high;",
      "1031:   offset = (unsigned*)calloc(slices+1,sizeof(offset[0]));",
      "1033:   for(slice=0;slice<slices;slice++)",
      "1034:       {",
      "1035:           offset[slice] = (t_x + t_y * raw_width)| (t_s<<28);",
      "1036:           if((offset[slice] & 0x0fffffff) >= raw_width * raw_height)",
      "1037:               throw LIBRAW_EXCEPTION_IO_BADFILE;",
      "1038:           t_y++;",
      "1039:           if(t_y == jh.high)",
      "1040:               {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1042:   if(!slices)",
      "1043:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1051:             {",
      "1052:               free(offset);",
      "1054:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1087:               pixno++;",
      "1088:               if (0 == --pixelsInSlice)",
      "1089:                   {",
      "1090:                       unsigned o = offset[slice++];",
      "1091:                       pixno = o & 0x0fffffff;",
      "1092:                       pixelsInSlice = slicesW[o>>28];",
      "1093:                   }",
      "1094:           }",
      "1095: #endif",
      "1096:       if (raw_width == 3984 && (col -= 2) < 0)",
      "1097:  col += (row--,raw_width);",
      "1098:       if (row >= 0) RAW(row,col) = val;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1107:                     if(slice > slices)",
      "1108:                       {",
      "1109:                         free(offset);",
      "1110:                         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1111:                       }",
      "1119:       if(row>raw_height)",
      "1120: #ifdef LIBRAW_LIBRARY_BUILD",
      "1121:       {",
      "1122:         free(offset);",
      "1123:         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1124:       }",
      "1125: #else",
      "1126:         longjmp (failure, 3);",
      "1127: #endif",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "6513:  break;",
      "6517:    num += getreal(type);",
      "6518:  black += num/len + 0.5;",
      "6519:  break;",
      "",
      "[Removed Lines]",
      "6516:  for (num=i=0; i < len; i++)",
      "",
      "[Added Lines]",
      "6549:  for (num=i=0; i < len && i < 65536; i++)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "6646:   if (thumb_offset) {",
      "6647:     fseek (ifp, thumb_offset, SEEK_SET);",
      "6648:     if (ljpeg_start (&jh, 1)) {",
      "6652:     }",
      "6653:   }",
      "6654:   for (i=0; i < tiff_nifds; i++) {",
      "",
      "[Removed Lines]",
      "6649:       thumb_misc   = jh.bits;",
      "6650:       thumb_width  = jh.wide;",
      "6651:       thumb_height = jh.high;",
      "",
      "[Added Lines]",
      "6682:       if((unsigned)jh.bits<17 && (unsigned)jh.wide < 0x10000 && (unsigned)jh.high < 0x10000)",
      "6683:         {",
      "6684:           thumb_misc   = jh.bits;",
      "6685:           thumb_width  = jh.wide;",
      "6686:           thumb_height = jh.high;",
      "6687:         }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "6656:  max_samp = tiff_ifd[i].samples;",
      "6657:     if (max_samp > 3) max_samp = 3;",
      "6658:     if ((tiff_ifd[i].comp != 6 || tiff_ifd[i].samples != 3) &&",
      "6660:  tiff_ifd[i].t_width*tiff_ifd[i].t_height > raw_width*raw_height) {",
      "6661:       raw_width     = tiff_ifd[i].t_width;",
      "6662:       raw_height    = tiff_ifd[i].t_height;",
      "",
      "[Removed Lines]",
      "6659:  (tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "[Added Lines]",
      "6695:         unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "6696:         (unsigned)tiff_ifd[i].bps < 33 && (unsigned)tiff_ifd[i].samples < 13 &&",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "6743:       is_raw = 0;",
      "6744:   for (i=0; i < tiff_nifds; i++)",
      "6745:     if (i != raw && tiff_ifd[i].samples == max_samp &&",
      "6746:  tiff_ifd[i].t_width * tiff_ifd[i].t_height / SQR(tiff_ifd[i].bps+1) >",
      "6747:        thumb_width *       thumb_height / SQR(thumb_misc+1)",
      "6748:  && tiff_ifd[i].comp != 34892) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6783:         tiff_ifd[i].bps>0 && tiff_ifd[i].bps < 33 &&",
      "6784:        unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "---------------"
    ],
    "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
      "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "611: {",
      "612:   int len, diff;",
      "614:   len = gethuff(huff);",
      "615:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "616:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "614: #ifdef LIBRAW_LIBRARY_BUILD",
      "615:   if(!huff)",
      "616:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "617: #endif",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "625: {",
      "626:   int len, diff;",
      "628:   len = bits._gethuff_lj(buf,*huff,huff+1);",
      "629:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
      "630:     return -32768;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "633:   if(!huff || !buf)",
      "634:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "744:   }",
      "745: #endif",
      "748:   if (!ljpeg_start (&jh, 0)) return;",
      "749:   jwide = jh.wide * jh.clrs;",
      "751: #ifdef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "756: #ifdef LIBRAW_LIBRARY_BUILD",
      "757:   if(jh.wide<1 || jh.high<1 || jh.clrs<1 || jh.bits <1)",
      "758:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "759: #endif",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "762:       }",
      "764:   slices = slicesWcnt * jh.high;",
      "765:   offset = (unsigned*)calloc(slices+1,sizeof(offset[0]));",
      "767:   for(slice=0;slice<slices;slice++)",
      "768:       {",
      "769:           offset[slice] = (t_x + t_y * raw_width)| (t_s<<28);",
      "770:           if((offset[slice] & 0x0fffffff) >= raw_width * raw_height)",
      "771:               throw LIBRAW_EXCEPTION_IO_BADFILE;",
      "772:           t_y++;",
      "773:           if(t_y == jh.high)",
      "774:               {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "776:   if(!slices)",
      "777:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "785:             {",
      "786:               free(offset);",
      "788:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "821:               pixno++;",
      "822:               if (0 == --pixelsInSlice)",
      "823:                   {",
      "824:                       unsigned o = offset[slice++];",
      "825:                       pixno = o & 0x0fffffff;",
      "826:                       pixelsInSlice = slicesW[o>>28];",
      "827:                   }",
      "828:           }",
      "829: #endif",
      "830:       if (raw_width == 3984 && (col -= 2) < 0)",
      "831:  col += (row--,raw_width);",
      "832:       if (row >= 0) RAW(row,col) = val;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "841:                     if(slice > slices)",
      "842:                       {",
      "843:                         free(offset);",
      "844:                         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "845:                       }",
      "853:       if(row>raw_height)",
      "854: #ifdef LIBRAW_LIBRARY_BUILD",
      "855:       {",
      "856:         free(offset);",
      "857:         throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "858:       }",
      "859: #else",
      "860:         longjmp (failure, 3);",
      "861: #endif",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1283:     if (tail[i]) nz++;",
      "1284:   return nz > 20;",
      "1285: }",
      "1287: void CLASS ppm_thumb()",
      "1288: {",
      "1289:   char *thumb;",
      "",
      "[Removed Lines]",
      "1286: #line 1557 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "1318: #line 1589 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2865:   jas_stream_close (in);",
      "2866: #endif",
      "2867: }",
      "2869: void CLASS crop_masked_pixels()",
      "2870: {",
      "2871:   int row, col;",
      "",
      "[Removed Lines]",
      "2868: #line 3846 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "2900: #line 3878 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2965:   RUN_CALLBACK(LIBRAW_PROGRESS_REMOVE_ZEROES,1,2);",
      "2966: #endif",
      "2967: }",
      "2969: void CLASS gamma_curve (double pwr, double ts, int mode, int imax)",
      "2970: {",
      "2971:   int i;",
      "",
      "[Removed Lines]",
      "2968: #line 4111 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "3000: #line 4143 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "4460:     fseek (ifp, save, SEEK_SET);",
      "4461:   }",
      "4462: }",
      "4464: void CLASS parse_makernote (int base, int uptag)",
      "4465: {",
      "4466:   static const uchar xlat[2][256] = {",
      "",
      "[Removed Lines]",
      "4463: #line 5610 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "4495: #line 5642 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "4975:     fseek (ifp, save, SEEK_SET);",
      "4976:   }",
      "4977: }",
      "4979: int CLASS parse_tiff_ifd (int base)",
      "4980: {",
      "4981:   unsigned entries, tag, type, len, plen=16, save;",
      "",
      "[Removed Lines]",
      "4978: #line 6130 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "5010: #line 6162 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "5362:  break;",
      "5366:    num += getreal(type);",
      "5367:  black += num/len + 0.5;",
      "5368:  break;",
      "",
      "[Removed Lines]",
      "5365:  for (num=i=0; i < len; i++)",
      "",
      "[Added Lines]",
      "5398:  for (num=i=0; i < len && i < 65536; i++)",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "5495:   if (thumb_offset) {",
      "5496:     fseek (ifp, thumb_offset, SEEK_SET);",
      "5497:     if (ljpeg_start (&jh, 1)) {",
      "5501:     }",
      "5502:   }",
      "5503:   for (i=0; i < tiff_nifds; i++) {",
      "",
      "[Removed Lines]",
      "5498:       thumb_misc   = jh.bits;",
      "5499:       thumb_width  = jh.wide;",
      "5500:       thumb_height = jh.high;",
      "",
      "[Added Lines]",
      "5531:       if((unsigned)jh.bits<17 && (unsigned)jh.wide < 0x10000 && (unsigned)jh.high < 0x10000)",
      "5532:         {",
      "5533:           thumb_misc   = jh.bits;",
      "5534:           thumb_width  = jh.wide;",
      "5535:           thumb_height = jh.high;",
      "5536:         }",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "5505:  max_samp = tiff_ifd[i].samples;",
      "5506:     if (max_samp > 3) max_samp = 3;",
      "5507:     if ((tiff_ifd[i].comp != 6 || tiff_ifd[i].samples != 3) &&",
      "5509:  tiff_ifd[i].t_width*tiff_ifd[i].t_height > raw_width*raw_height) {",
      "5510:       raw_width     = tiff_ifd[i].t_width;",
      "5511:       raw_height    = tiff_ifd[i].t_height;",
      "",
      "[Removed Lines]",
      "5508:  (tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "[Added Lines]",
      "5544:         unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "5545:         (unsigned)tiff_ifd[i].bps < 33 && (unsigned)tiff_ifd[i].samples < 13 &&",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "5592:       is_raw = 0;",
      "5593:   for (i=0; i < tiff_nifds; i++)",
      "5594:     if (i != raw && tiff_ifd[i].samples == max_samp &&",
      "5595:  tiff_ifd[i].t_width * tiff_ifd[i].t_height / SQR(tiff_ifd[i].bps+1) >",
      "5596:        thumb_width *       thumb_height / SQR(thumb_misc+1)",
      "5597:  && tiff_ifd[i].comp != 34892) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5632:         tiff_ifd[i].bps>0 && tiff_ifd[i].bps < 33 &&",
      "5633:        unsigned(tiff_ifd[i].t_width | tiff_ifd[i].t_height) < 0x10000 &&",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "6233:     data_offset = get4();",
      "6234:   }",
      "6235: }",
      "6237: char * CLASS foveon_gets (int offset, char *str, int len)",
      "6238: {",
      "6239:   int i;",
      "",
      "[Removed Lines]",
      "6236: #line 7390 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "6275: #line 7429 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "6334:   }",
      "6335:   is_foveon = 1;",
      "6336: }",
      "6339:    All matrices are from Adobe DNG Converter unless otherwise noted.",
      "",
      "[Removed Lines]",
      "6337: #line 7493 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "6376: #line 7532 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "8981: }",
      "8985: void CLASS convert_to_rgb()",
      "8986: {",
      "8987: #ifndef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "8984: #line 10231 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "9023: #line 10270 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "9212:   if (flip & 1) col = iwidth  - 1 - col;",
      "9213:   return row * iwidth + col;",
      "9214: }",
      "9216: void CLASS tiff_set (ushort *ntag,",
      "9217:  ushort tag, ushort type, int count, int val)",
      "9218: {",
      "",
      "[Removed Lines]",
      "9215: #line 10487 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "9254: #line 10526 \"dcraw/dcraw.c\"",
      "",
      "---------------"
    ],
    "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
      "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "21:    for more information",
      "25: #include <math.h>",
      "26: #define CLASS LibRaw::",
      "27: #include \"libraw/libraw_types.h\"",
      "",
      "[Removed Lines]",
      "24: #line 3948 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "24: #line 3980 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "29: #include \"libraw/libraw.h\"",
      "30: #include \"internal/defines.h\"",
      "31: #include \"internal/var_defines.h\"",
      "34:    Seach from the current directory up to the root looking for",
      "35:    a \".badpixels\" file, and fix those pixels now.",
      "",
      "[Removed Lines]",
      "32: #line 3959 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "32: #line 3991 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "54: #endif",
      "55:   if (cfname)",
      "56:     fp = fopen (cfname, \"r\");",
      "58:   if (!fp)",
      "59:       {",
      "60: #ifdef LIBRAW_LIBRARY_BUILD",
      "",
      "[Removed Lines]",
      "57: #line 4009 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "57: #line 4041 \"dcraw/dcraw.c\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
      "155: #endif",
      "156: }",
      "158: #ifndef NO_LCMS",
      "159: void CLASS apply_profile (const char *input, const char *output)",
      "160: {",
      "",
      "[Removed Lines]",
      "157: #line 10142 \"dcraw/dcraw.c\"",
      "",
      "[Added Lines]",
      "157: #line 10181 \"dcraw/dcraw.c\"",
      "",
      "---------------"
    ],
    "libraw/libraw_version.h||libraw/libraw_version.h": [
      "File: libraw/libraw_version.h -> libraw/libraw_version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #define LIBRAW_MAJOR_VERSION  0",
      "27: #define LIBRAW_MINOR_VERSION  15",
      "29: #define LIBRAW_VERSION_TAIL   Release",
      "31: #define LIBRAW_SHLIB_CURRENT   9",
      "",
      "[Removed Lines]",
      "28: #define LIBRAW_PATCH_VERSION  3",
      "",
      "[Added Lines]",
      "28: #define LIBRAW_PATCH_VERSION  4",
      "",
      "---------------"
    ],
    "src/libraw_datastream.cpp||src/libraw_datastream.cpp": [
      "File: src/libraw_datastream.cpp -> src/libraw_datastream.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "65: LibRaw_byte_buffer *LibRaw_abstract_datastream::make_byte_buffer(unsigned int sz)",
      "66: {",
      "67:     LibRaw_byte_buffer *ret = new LibRaw_byte_buffer(sz);",
      "68:     read(ret->get_buffer(),sz,1);",
      "69:     return ret;",
      "70: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "67:   if(INT64(sz)>size())",
      "68:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "71:     if(!ret) // failed new should throw std::exception",
      "72:       throw LIBRAW_EXCEPTION_ALLOC;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "442: LibRaw_byte_buffer *LibRaw_buffer_datastream::make_byte_buffer(unsigned int sz)",
      "443: {",
      "444:     LibRaw_byte_buffer *ret = new LibRaw_byte_buffer(0);",
      "445:     if(streampos + sz > streamsize)",
      "446:         sz = streamsize - streampos;",
      "447:     ret->set_buffer(buf+streampos,sz);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "449:   if(INT64(sz)>size())",
      "450:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "453:     if(!ret) // failed new should throw std::exception",
      "454:       throw LIBRAW_EXCEPTION_ALLOC;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4028950fddfe997b1211f2e8c164d9955ea75f4f",
      "candidate_info": {
        "commit_hash": "4028950fddfe997b1211f2e8c164d9955ea75f4f",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/4028950fddfe997b1211f2e8c164d9955ea75f4f",
        "files": [
          "Changelog.rus",
          "Changelog.txt",
          "Makefile.devel",
          "RawSpeed/rawspeed_xmldata.cpp",
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp",
          "libraw/libraw.h",
          "libraw/libraw_const.h",
          "libraw/libraw_version.h",
          "samples/dcraw_emu.cpp",
          "src/libraw_c_api.cpp",
          "src/libraw_cxx.cpp"
        ],
        "message": "0.15.0-Beta1",
        "before_after_code_files": [
          "Changelog.rus||Changelog.rus",
          "Makefile.devel||Makefile.devel",
          "RawSpeed/rawspeed_xmldata.cpp||RawSpeed/rawspeed_xmldata.cpp",
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
          "libraw/libraw.h||libraw/libraw.h",
          "libraw/libraw_const.h||libraw/libraw_const.h",
          "libraw/libraw_version.h||libraw/libraw_version.h",
          "samples/dcraw_emu.cpp||samples/dcraw_emu.cpp",
          "src/libraw_c_api.cpp||src/libraw_c_api.cpp",
          "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Makefile.devel||Makefile.devel",
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
            "libraw/libraw_version.h||libraw/libraw_version.h"
          ],
          "candidate": [
            "Makefile.devel||Makefile.devel",
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
            "libraw/libraw_version.h||libraw/libraw_version.h"
          ]
        }
      },
      "candidate_diff": {
        "Changelog.rus||Changelog.rus": [
          "File: Changelog.rus -> Changelog.rus",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:      \u0420\u0430\u0441\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 (LibRaw::unpack()) \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u0432 \u0441\u0442\u0430\u043b\u043e \u0432 1.5-3",
          "",
          "[Removed Lines]",
          "1: \ufeff2012-09-17  Alex Tutubalin <lexa@lexa.ru>",
          "",
          "[Added Lines]",
          "1: \ufeff2012-10-13  Alex Tutubalin <lexa@lexa.ru>",
          "7:      (\u0432\u043c\u0435\u0441\u0442\u0435 \u0441 LIBRAW_WARN_RAWSPEED_PROBLEM) \u0435\u0441\u043b\u0438 RawSpeed \u0441\u043e\u043e\u0431\u0449\u0438\u043b\u0430,",
          "8:      \u0447\u0442\u043e \u043a\u0430\u043c\u0435\u0440\u0430 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f.",
          "11: 2012-09-17  Alex Tutubalin <lexa@lexa.ru>",
          "",
          "---------------"
        ],
        "Makefile.devel||Makefile.devel": [
          "File: Makefile.devel -> Makefile.devel",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: # RawSpeed Support",
          "9: CFLAGS+=-DUSE_RAWSPEED -I../RawSpeed -I/usr/local/include/libxml2",
          "11: RAWSPEED_DATA=../RawSpeed/data/cameras.xml",
          "",
          "[Removed Lines]",
          "10: LDADD+=-L../RawSpeed/RawSpeed -lrawspeed -L/usr/local/include -ljpeg -lxml2",
          "",
          "[Added Lines]",
          "10: LDADD+=-L../RawSpeed/RawSpeed/release -lrawspeed -L/usr/local/include -ljpeg -lxml2",
          "",
          "---------------"
        ],
        "RawSpeed/rawspeed_xmldata.cpp||RawSpeed/rawspeed_xmldata.cpp": [
          "File: RawSpeed/rawspeed_xmldata.cpp -> RawSpeed/rawspeed_xmldata.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "123: \"   <Vertical x=\\\"0\\\" width=\\\"28\\\"/>\\n\",",
          "124: \"   <Horizontal y=\\\"4\\\" height=\\\"12\\\"/>\\n\",",
          "125: \"  </BlackAreas>\\n\",",
          "126: \"  <Hints>\\n\",",
          "127: \"   <Hint name=\\\"sraw_40d\\\" value=\\\"\\\"/>\\n\",",
          "128: \"  </Hints>\\n\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126: \"\\t</Camera>\\n\",",
          "127: \"\\t<Camera make=\\\"Canon\\\" model=\\\"Canon EOS 40D\\\" mode=\\\"sRaw1\\\">\\n\",",
          "128: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"0\\\" height=\\\"0\\\"/>\\n\",",
          "129: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"65535\\\"/>\\n\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "903: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"3900\\\" height=\\\"2613\\\"/>\\n\",",
          "904: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"3880\\\"/>\\n\",",
          "905: \"\\t</Camera>\\n\",",
          "906: \"\\t<Camera make=\\\"NIKON CORPORATION\\\" model=\\\"NIKON D70\\\">\\n\",",
          "907: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "908: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">BLUE</Color>\\n\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "910: \"\\t<Camera make=\\\"NIKON CORPORATION\\\" model=\\\"NIKON D600\\\">\\n\",",
          "911: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "912: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">RED</Color>\\n\",",
          "913: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"0\\\">GREEN</Color>\\n\",",
          "914: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "915: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"1\\\">BLUE</Color>\\n\",",
          "916: \"\\t\\t</CFA>\\n\",",
          "917: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-50\\\" height=\\\"0\\\"/>\\n\",",
          "918: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"16383\\\"/>\\n\",",
          "919: \"\\t</Camera>\\n\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "923: \"\\t\\t<Crop x=\\\"2\\\" y=\\\"0\\\" width=\\\"4282\\\" height=\\\"2844\\\"/>\\n\",",
          "924: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"3972\\\"/>\\n\",",
          "925: \"\\t</Camera>\\n\",",
          "926: \"\\t<Camera make=\\\"NIKON CORPORATION\\\" model=\\\"NIKON D7000\\\">\\n\",",
          "927: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "928: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">RED</Color>\\n\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "940: \"\\t<Camera make=\\\"NIKON CORPORATION\\\" model=\\\"NIKON D700\\\" mode=\\\"14bit-uncompressed\\\">\\n\",",
          "941: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "942: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">RED</Color>\\n\",",
          "943: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"0\\\">GREEN</Color>\\n\",",
          "944: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "945: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"1\\\">BLUE</Color>\\n\",",
          "946: \"\\t\\t</CFA>\\n\",",
          "947: \"\\t\\t<Crop x=\\\"2\\\" y=\\\"0\\\" width=\\\"4282\\\" height=\\\"2844\\\"/>\\n\",",
          "948: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"16383\\\"/>\\n\",",
          "949: \"\\t</Camera>\\n\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "974: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"4310\\\" height=\\\"2868\\\"/>\\n\",",
          "975: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"3767\\\"/>\\n\",",
          "976: \"\\t</Camera>\\n\",",
          "978: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "983: \"\\t\\t</CFA>\\n\",",
          "985: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"0\\\"/>\\n\",",
          "986: \"\\t</Camera>\\n\",",
          "988: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "993: \"\\t\\t</CFA>\\n\",",
          "995: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"0\\\"/>\\n\",",
          "996: \"\\t</Camera>\\n\",",
          "997: \"\\t<Camera make=\\\"NIKON\\\" model=\\\"E5400\\\" decoder_version=\\\"3\\\">\\n\",",
          "",
          "[Removed Lines]",
          "977: \"\\t<Camera make=\\\"NIKON CORPORATION\\\" model=\\\"NIKON 1 J1\\\" supported=\\\"no\\\">\\n\",",
          "979: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">GREEN</Color>\\n\",",
          "980: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"0\\\">BLUE</Color>\\n\",",
          "981: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">RED</Color>\\n\",",
          "982: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "984: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"0\\\" height=\\\"0\\\"/>\\n\",",
          "987: \"\\t<Camera make=\\\"NIKON CORPORATION\\\" model=\\\"NIKON 1 V1\\\" supported=\\\"no\\\">\\n\",",
          "989: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">GREEN</Color>\\n\",",
          "990: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"0\\\">BLUE</Color>\\n\",",
          "991: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">RED</Color>\\n\",",
          "992: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "994: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"0\\\" height=\\\"0\\\"/>\\n\",",
          "",
          "[Added Lines]",
          "1001: \"\\t<Camera make=\\\"NIKON CORPORATION\\\" model=\\\"NIKON 1 J1\\\" decoder_version=\\\"4\\\">\\n\",",
          "1003: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">RED</Color>\\n\",",
          "1004: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"0\\\">GREEN</Color>\\n\",",
          "1005: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "1006: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"1\\\">BLUE</Color>\\n\",",
          "1008: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"0\\\" height=\\\"-2\\\"/>\\n\",",
          "1011: \"\\t<Camera make=\\\"NIKON CORPORATION\\\" model=\\\"NIKON 1 V1\\\" decoder_version=\\\"4\\\">\\n\",",
          "1013: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">RED</Color>\\n\",",
          "1014: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"0\\\">GREEN</Color>\\n\",",
          "1015: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "1016: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"1\\\">BLUE</Color>\\n\",",
          "1018: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"0\\\" height=\\\"-2\\\"/>\\n\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1007: \"  <Hint name=\\\"coolpixsplit\\\" value=\\\"\\\"/>\\n\",",
          "1008: \" </Hints> \\n\",",
          "1009: \"\\t</Camera>\\n\",",
          "1011: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1012: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">BLUE</Color>\\n\",",
          "1013: \"\\t\\t\\t<Color x=\\\"1\\\" y=\\\"0\\\">GREEN</Color>\\n\",",
          "",
          "[Removed Lines]",
          "1010: \"\\t<Camera make=\\\"NIKON\\\" model=\\\"E5700\\\" supported=\\\"no\\\">\\n\",",
          "",
          "[Added Lines]",
          "1034: \"\\t<Camera make=\\\"NIKON\\\" model=\\\"E5700\\\" decoder_version=\\\"4\\\">\\n\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1430: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-128\\\" height=\\\"0\\\"/>\\n\",",
          "1431: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"4095\\\"/>\\n\",",
          "1432: \"\\t</Camera>\\n\",",
          "1433: \"\\t<Camera make=\\\"Panasonic\\\" model = \\\"DMC-G1\\\">\\n\",",
          "1434: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1435: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"0\\\">BLUE</Color>\\n\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1457: \"\\t<Camera make=\\\"Panasonic\\\" model = \\\"DMC-FZ200\\\">\\n\",",
          "1458: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1459: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"0\\\">BLUE</Color>\\n\",",
          "1460: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">RED</Color><Color x=\\\"1\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "1461: \"\\t\\t</CFA>\\n\",",
          "1462: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-128\\\" height=\\\"-4\\\"/>\\n\",",
          "1463: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"4095\\\"/>\\n\",",
          "1464: \"\\t</Camera>\\n\",",
          "1465: \"\\t<Camera make=\\\"Panasonic\\\" model = \\\"DMC-FZ200\\\" mode=\\\"4:3\\\">\\n\",",
          "1466: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1467: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"0\\\">BLUE</Color>\\n\",",
          "1468: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">RED</Color><Color x=\\\"1\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "1469: \"\\t\\t</CFA>\\n\",",
          "1470: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-128\\\" height=\\\"-4\\\"/>\\n\",",
          "1471: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"4095\\\"/>\\n\",",
          "1472: \"\\t</Camera>\\n\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1780: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-44\\\" height=\\\"0\\\"/>\\n\",",
          "1781: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"4095\\\"/>\\n\",",
          "1782: \"\\t</Camera>\\n\",",
          "1783: \"\\t<Camera make=\\\"Panasonic\\\" model = \\\"DMC-LX5\\\">\\n\",",
          "1784: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1785: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"0\\\">RED</Color>\\n\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1823: \" <!-- Leica D-Lux 4 is the same camera as LX-3 -->\\n\",",
          "1824: \" <Camera make=\\\"LEICA\\\" model = \\\"D-LUX 4\\\">\\n\",",
          "1825: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1826: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">BLUE</Color><Color x=\\\"1\\\" y=\\\"0\\\">GREEN</Color>\\n\",",
          "1827: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"1\\\">RED</Color>\\n\",",
          "1828: \"\\t\\t</CFA>\\n\",",
          "1829: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-84\\\" height=\\\"0\\\"/>\\n\",",
          "1830: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"4095\\\"/>\\n\",",
          "1831: \"\\t</Camera>\\n\",",
          "1832: \"\\t<Camera make=\\\"LEICA\\\" model = \\\"D-LUX 4\\\" mode=\\\"16:9\\\">\\n\",",
          "1833: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1834: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">BLUE</Color><Color x=\\\"1\\\" y=\\\"0\\\">GREEN</Color>\\n\",",
          "1835: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"1\\\">RED</Color>\\n\",",
          "1836: \"\\t\\t</CFA>\\n\",",
          "1837: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"3990\\\" height=\\\"2250\\\"/>\\n\",",
          "1838: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"4095\\\"/>\\n\",",
          "1839: \"\\t</Camera>\\n\",",
          "1840: \"\\t<Camera make=\\\"LEICA\\\" model = \\\"D-LUX 4\\\" mode=\\\"4:3\\\">\\n\",",
          "1841: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1842: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">BLUE</Color><Color x=\\\"1\\\" y=\\\"0\\\">GREEN</Color>\\n\",",
          "1843: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"1\\\">RED</Color>\\n\",",
          "1844: \"\\t\\t</CFA>\\n\",",
          "1845: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"3666\\\" height=\\\"2754\\\"/>\\n\",",
          "1846: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"4095\\\"/>\\n\",",
          "1847: \"\\t</Camera>\\n\",",
          "1848: \"\\t<Camera make=\\\"LEICA\\\" model = \\\"D-LUX 4\\\" mode=\\\"3:2\\\">\\n\",",
          "1849: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1850: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">BLUE</Color><Color x=\\\"1\\\" y=\\\"0\\\">GREEN</Color>\\n\",",
          "1851: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"1\\\">RED</Color>\\n\",",
          "1852: \"\\t\\t</CFA>\\n\",",
          "1853: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-44\\\" height=\\\"0\\\"/>\\n\",",
          "1854: \"\\t\\t<Sensor black=\\\"0\\\" white=\\\"4095\\\"/>\\n\",",
          "1855: \"\\t</Camera>\\n\",",
          "1856: \"\\n\",",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1812: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-220\\\" height=\\\"-4\\\"/>\\n\",",
          "1813: \"\\t\\t<Sensor black=\\\"150\\\" white=\\\"4095\\\"/>\\n\",",
          "1814: \"\\t</Camera>\\n\",",
          "1815: \" <Camera make=\\\"PENTAX Corporation\\\" model=\\\"PENTAX K100D\\\">\\n\",",
          "1816: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1817: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">RED</Color>\\n\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1889: \"\\n\",",
          "1890: \" <!-- Leica D-Lux 5 is the same camera as LX-5 -->\\n\",",
          "1891: \"\\t<Camera make=\\\"LEICA\\\" model = \\\"D-LUX 5\\\">\\n\",",
          "1892: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1893: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"0\\\">RED</Color>\\n\",",
          "1894: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">BLUE</Color><Color x=\\\"1\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "1895: \"\\t\\t</CFA>\\n\",",
          "1896: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-200\\\" height=\\\"-4\\\"/>\\n\",",
          "1897: \"\\t\\t<Sensor black=\\\"150\\\" white=\\\"4095\\\"/>\\n\",",
          "1898: \"\\t</Camera>\\t\\n\",",
          "1899: \"\\t<Camera make=\\\"LEICA\\\" model = \\\"D-LUX 5\\\" mode=\\\"4:3\\\">\\n\",",
          "1900: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1901: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"0\\\">RED</Color>\\n\",",
          "1902: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">BLUE</Color><Color x=\\\"1\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "1903: \"\\t\\t</CFA>\\n\",",
          "1904: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-200\\\" height=\\\"-4\\\"/>\\n\",",
          "1905: \"\\t\\t<Sensor black=\\\"150\\\" white=\\\"4095\\\"/>\\n\",",
          "1906: \"\\t</Camera>\\t\\n\",",
          "1907: \"\\t<Camera make=\\\"LEICA\\\" model = \\\"D-LUX 5\\\" mode=\\\"3:2\\\">\\n\",",
          "1908: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1909: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"0\\\">RED</Color>\\n\",",
          "1910: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">BLUE</Color><Color x=\\\"1\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "1911: \"\\t\\t</CFA>\\n\",",
          "1912: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-74\\\" height=\\\"-4\\\"/>\\n\",",
          "1913: \"\\t\\t<Sensor black=\\\"150\\\" white=\\\"4095\\\"/>\\n\",",
          "1914: \"\\t</Camera>\\n\",",
          "1915: \"\\t<Camera make=\\\"LEICA\\\" model = \\\"D-LUX 5\\\" mode=\\\"1:1\\\">\\n\",",
          "1916: \"\\t\\t<CFA width=\\\"2\\\" height=\\\"2\\\">\\n\",",
          "1917: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"0\\\">GREEN</Color><Color x=\\\"1\\\" y=\\\"0\\\">RED</Color>\\n\",",
          "1918: \"\\t\\t\\t<Color x=\\\"0\\\" y=\\\"1\\\">BLUE</Color><Color x=\\\"1\\\" y=\\\"1\\\">GREEN</Color>\\n\",",
          "1919: \"\\t\\t</CFA>\\n\",",
          "1920: \"\\t\\t<Crop x=\\\"0\\\" y=\\\"0\\\" width=\\\"-220\\\" height=\\\"-4\\\"/>\\n\",",
          "1921: \"\\t\\t<Sensor black=\\\"150\\\" white=\\\"4095\\\"/>\\n\",",
          "1922: \"\\t</Camera>\\n\",",
          "1923: \" \\n\",",
          "",
          "---------------"
        ],
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9054:       !strcmp(model,\"D7000\")) {",
          "9055:     width -= 44;",
          "9056:   } else if (!strcmp(model,\"D3200\") ||",
          "9057:       !strcmp(model,\"D800\")) {",
          "9058:     width -= 46;",
          "9059:   } else if (!strcmp(model,\"D4\")) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9057:       !strcmp(model,\"D800E\") ||",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "7900:       !strcmp(model,\"D7000\")) {",
          "7901:     width -= 44;",
          "7902:   } else if (!strcmp(model,\"D3200\") ||",
          "7903:       !strcmp(model,\"D800\")) {",
          "7904:     width -= 46;",
          "7905:   } else if (!strcmp(model,\"D4\")) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7903:       !strcmp(model,\"D800E\") ||",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8801: }",
          "8805: void CLASS convert_to_rgb()",
          "8806: {",
          "8807: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "8804: #line 10050 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "8805: #line 10051 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "9032:   if (flip & 1) col = iwidth  - 1 - col;",
          "9033:   return row * iwidth + col;",
          "9034: }",
          "9036: void CLASS tiff_set (ushort *ntag,",
          "9037:  ushort tag, ushort type, int count, int val)",
          "9038: {",
          "",
          "[Removed Lines]",
          "9035: #line 10306 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9036: #line 10307 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 9961 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 9962 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "libraw/libraw.h||libraw/libraw.h": [
          "File: libraw/libraw.h -> libraw/libraw.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: DllDef    libraw_data_t       *libraw_init(unsigned int flags);",
          "54: DllDef    int                 libraw_open_file(libraw_data_t*, const char *);",
          "55: DllDef    int                 libraw_open_file_ex(libraw_data_t*, const char *, INT64 max_buff_sz);",
          "56: DllDef    int                 libraw_open_buffer(libraw_data_t*, void * buffer, size_t size);",
          "57: DllDef    int                 libraw_unpack(libraw_data_t*);",
          "58: DllDef    int                 libraw_unpack_thumb(libraw_data_t*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56: #ifdef WIN32",
          "57: DllDef    int                 libraw_open_wfile(libraw_data_t*, const wchar_t *);",
          "58: DllDef    int                 libraw_open_wfile_ex(libraw_data_t*, const wchar_t *, INT64 max_buff_sz);",
          "59: #endif",
          "",
          "---------------"
        ],
        "libraw/libraw_const.h||libraw/libraw_const.h": [
          "File: libraw/libraw_const.h -> libraw/libraw_const.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:     LIBRAW_WARN_BAD_DARKFRAME_FILE=1<<9,",
          "58:     LIBRAW_WARN_BAD_DARKFRAME_DIM=1<<10,",
          "59:     LIBRAW_WARN_NO_JASPER = 1<<11,",
          "61: };",
          "63: enum LibRaw_exceptions",
          "",
          "[Removed Lines]",
          "60:  LIBRAW_WARN_RAWSPEED_PROBLEM = 1<<12",
          "",
          "[Added Lines]",
          "60:     LIBRAW_WARN_RAWSPEED_PROBLEM = 1<<12,",
          "61:     LIBRAW_WARN_RAWSPEED_UNSUPPORTED = 1<<13",
          "",
          "---------------"
        ],
        "libraw/libraw_version.h||libraw/libraw_version.h": [
          "File: libraw/libraw_version.h -> libraw/libraw_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #define LIBRAW_MAJOR_VERSION  0",
          "27: #define LIBRAW_MINOR_VERSION  15",
          "28: #define LIBRAW_PATCH_VERSION  0",
          "31: #define LIBRAW_SHLIB_CURRENT   7",
          "32: #define LIBRAW_SHLIB_REVISION  0",
          "",
          "[Removed Lines]",
          "29: #define LIBRAW_VERSION_TAIL   Alpha4",
          "",
          "[Added Lines]",
          "29: #define LIBRAW_VERSION_TAIL   Beta1",
          "",
          "---------------"
        ],
        "samples/dcraw_emu.cpp||samples/dcraw_emu.cpp": [
          "File: samples/dcraw_emu.cpp -> samples/dcraw_emu.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "200:           char *optstr = argv[arg];",
          "201:           opt = argv[arg++][1];",
          "202:           if ((cp = strchr (sp=(char*)\"cnbrkStqmHABCgU\", opt))!=0)",
          "204:                   if (!isdigit(argv[arg+i][0]) && !optstr[2])",
          "205:                       {",
          "206:                           fprintf (stderr,\"Non-numeric argument to \\\"-%c\\\"\\n\", opt);",
          "",
          "[Removed Lines]",
          "203:               for (i=0; i < \"111411111142\"[cp-sp]-'0'; i++)",
          "",
          "[Added Lines]",
          "203:               for (i=0; i < \"111411111144221\"[cp-sp]-'0'; i++)",
          "",
          "---------------"
        ],
        "src/libraw_c_api.cpp||src/libraw_c_api.cpp": [
          "File: src/libraw_c_api.cpp -> src/libraw_c_api.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         LibRaw *ip = (LibRaw*) lr->parent_class;",
          "69:         return ip->open_file(file);",
          "70:     }",
          "71:     int libraw_open_file_ex(libraw_data_t* lr, const char *file,INT64 sz)",
          "72:     {",
          "73:         if(!lr) return EINVAL;",
          "74:         LibRaw *ip = (LibRaw*) lr->parent_class;",
          "75:         return ip->open_file(file,sz);",
          "76:     }",
          "77:     int libraw_open_buffer(libraw_data_t* lr, void *buffer, size_t size)",
          "78:     {",
          "79:         if(!lr) return EINVAL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78: #ifdef WIN32",
          "79:     int libraw_open_wfile(libraw_data_t* lr, const wchar_t *file)",
          "80:     {",
          "81:         if(!lr) return EINVAL;",
          "82:         LibRaw *ip = (LibRaw*) lr->parent_class;",
          "83:         return ip->open_file(file);",
          "84:     }",
          "86:     int libraw_open_wfile_ex(libraw_data_t* lr, const wchar_t *file,INT64 sz)",
          "87:     {",
          "88:         if(!lr) return EINVAL;",
          "89:         LibRaw *ip = (LibRaw*) lr->parent_class;",
          "90:         return ip->open_file(file,sz);",
          "91:     }",
          "92: #endif",
          "",
          "---------------"
        ],
        "src/libraw_cxx.cpp||src/libraw_cxx.cpp": [
          "File: src/libraw_cxx.cpp -> src/libraw_cxx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "927:   else if (load_raw == &LibRaw::sony_load_raw)",
          "928:     C.maximum = 0x3ff0;",
          "929:   else if (load_raw == &LibRaw::sony_arw2_load_raw || load_raw == &LibRaw::packed_load_raw )",
          "936: }",
          "937: #else",
          "938: void LibRaw::fix_after_rawspeed()",
          "",
          "[Removed Lines]",
          "930:  {",
          "931:   C.maximum *=4;",
          "932:   C.black *=4;",
          "933:   for(int c=0; c< 4; c++)",
          "934:    C.cblack[c]*=4;",
          "935:  }",
          "",
          "[Added Lines]",
          "930:     {",
          "931:       C.maximum *=4;",
          "932:       C.black *=4;",
          "933:       for(int c=0; c< 4; c++)",
          "934:         C.cblack[c]*=4;",
          "935:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1012:                 RawDecoder *d = 0;",
          "1013:                 CameraMetaDataLR *meta = static_cast<CameraMetaDataLR*>(_rawspeed_camerameta);",
          "1014:                 d = t.getDecoder();",
          "1016:                 d->decodeRaw();",
          "1017:                 d->decodeMetaData(meta);",
          "1018:                 RawImage r = d->mRaw;",
          "",
          "[Removed Lines]",
          "1015:                 d->checkSupport(meta);",
          "",
          "[Added Lines]",
          "1015:                 try {",
          "1016:                   d->checkSupport(meta);",
          "1017:                 }",
          "1018:                 catch (const RawDecoderException& e)",
          "1019:                   {",
          "1020:                     imgdata.process_warnings |= LIBRAW_WARN_RAWSPEED_UNSUPPORTED;",
          "1021:                     throw e;",
          "1022:                   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b69b792e385a2d2286f6504fb5fd5d878017cc34",
      "candidate_info": {
        "commit_hash": "b69b792e385a2d2286f6504fb5fd5d878017cc34",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/b69b792e385a2d2286f6504fb5fd5d878017cc34",
        "files": [
          "Changelog.txt",
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp"
        ],
        "message": "no openmp for linear interpolate",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4739: void CLASS lin_interpolate_loop(int code[16][16][32],int size)",
          "4740: {",
          "4741:   int row;",
          "4745:   for (row=1; row < height-1; row++)",
          "4746:     {",
          "4747:       int col,*ip;",
          "",
          "[Removed Lines]",
          "4742: #if defined(LIBRAW_USE_OPENMP)",
          "4743: #pragma omp parallel default(shared)",
          "4744: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "3598: void CLASS lin_interpolate_loop(int code[16][16][32],int size)",
          "3599: {",
          "3600:   int row;",
          "3604:   for (row=1; row < height-1; row++)",
          "3605:     {",
          "3606:       int col,*ip;",
          "",
          "[Removed Lines]",
          "3601: #if defined(LIBRAW_USE_OPENMP)",
          "3602: #pragma omp parallel default(shared)",
          "3603: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4498:     fseek (ifp, save, SEEK_SET);",
          "4499:   }",
          "4500: }",
          "4502: void CLASS parse_makernote (int base, int uptag)",
          "4503: {",
          "4504:   static const uchar xlat[2][256] = {",
          "",
          "[Removed Lines]",
          "4501: #line 5647 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "4498: #line 5644 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5013:     fseek (ifp, save, SEEK_SET);",
          "5014:   }",
          "5015: }",
          "5017: int CLASS parse_tiff_ifd (int base)",
          "5018: {",
          "5019:   unsigned entries, tag, type, len, plen=16, save;",
          "",
          "[Removed Lines]",
          "5016: #line 6167 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "5013: #line 6164 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6257:     data_offset = get4();",
          "6258:   }",
          "6259: }",
          "6261: char * CLASS foveon_gets (int offset, char *str, int len)",
          "6262: {",
          "6263:   int i;",
          "",
          "[Removed Lines]",
          "6260: #line 7413 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6257: #line 7410 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6358:   }",
          "6359:   is_foveon = 1;",
          "6360: }",
          "6363:    All matrices are from Adobe DNG Converter unless otherwise noted.",
          "",
          "[Removed Lines]",
          "6361: #line 7516 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6358: #line 7513 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8802: }",
          "8806: void CLASS convert_to_rgb()",
          "8807: {",
          "8808: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "8805: #line 10051 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "8802: #line 10048 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "9033:   if (flip & 1) col = iwidth  - 1 - col;",
          "9034:   return row * iwidth + col;",
          "9035: }",
          "9037: void CLASS tiff_set (ushort *ntag,",
          "9038:  ushort tag, ushort type, int count, int val)",
          "9039: {",
          "",
          "[Removed Lines]",
          "9036: #line 10307 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9033: #line 10304 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 9962 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 9959 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "091cb2efe1cf7ac4f9439f51beb8b662a93c19ac",
      "candidate_info": {
        "commit_hash": "091cb2efe1cf7ac4f9439f51beb8b662a93c19ac",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/091cb2efe1cf7ac4f9439f51beb8b662a93c19ac",
        "files": [
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp",
          "internal/libraw_internal_funcs.h"
        ],
        "message": "removed pentax pef decoder optimizations (incompatible with K-m), removed extra debug print",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
          "internal/libraw_internal_funcs.h||internal/libraw_internal_funcs.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "900:   return diff;",
          "901: }",
          "916: ushort * CLASS ljpeg_row_new (int jrow, struct jhead *jh, LibRaw_bit_buffer& bits,LibRaw_byte_buffer* bytes)",
          "917: {",
          "918:   int col, c, diff, pred, spred=0;",
          "",
          "[Removed Lines]",
          "903: int CLASS ljpeg_diff_pef (LibRaw_bit_buffer& bits, LibRaw_byte_buffer* buf,ushort *huff)",
          "904: {",
          "905:   int len, diff;",
          "907:   len = bits._gethuff(buf,*huff,huff+1,zero_after_ff);",
          "908:   if (len == 16 && (!dng_version || dng_version >= 0x1010000))",
          "909:     return -32768;",
          "910:   diff = bits._getbits(buf,len,zero_after_ff);",
          "911:   if ((diff & (1 << (len-1))) == 0)",
          "912:     diff -= (1 << len) - 1;",
          "913:   return diff;",
          "914: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1394:       huff[++i] = bit[1][c] << 8 | c;",
          "1395:   huff[0] = 12;",
          "1396:   fseek (ifp, data_offset, SEEK_SET);",
          "1404:   getbits(-1);",
          "1406:   for (row=0; row < raw_height; row++)",
          "1407:     for (col=0; col < raw_width; col++) {",
          "1411:       diff = ljpeg_diff (huff);",
          "1413:       if (col < 2) hpred[col] = vpred[row & 1][col] += diff;",
          "1414:       else    hpred[col & 1] += diff;",
          "1415:       RAW(row,col) = hpred[col & 1];",
          "1416:       if (hpred[col & 1] >> tiff_bps) derror();",
          "1417:     }",
          "1419:   delete buf;",
          "1421: }",
          "1423: void CLASS nikon_load_raw()",
          "",
          "[Removed Lines]",
          "1397: #ifdef LIBRAW_LIBRARY_BUILD",
          "1398:   if(!data_size)",
          "1399:       throw LIBRAW_EXCEPTION_IO_BADFILE;",
          "1400:   LibRaw_byte_buffer *buf = ifp->make_byte_buffer(data_size);",
          "1401:   LibRaw_bit_buffer bits;",
          "1402:   bits.reset();",
          "1403: #else",
          "1405: #endif",
          "1408: #ifdef LIBRAW_LIBRARY_BUILD",
          "1409:       diff = ljpeg_diff_pef(bits,buf,huff);",
          "1410: #else",
          "1412: #endif",
          "1418: #ifdef LIBRAW_LIBRARY_BUILD",
          "1420: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6432:  strcpy (make, \"Imacon\");",
          "6433:  data_offset = ftell(ifp);",
          "6434:  ima_len = len;",
          "6436:  break;",
          "6437:       case 46279:",
          "6438:  if (!ima_len) break;",
          "",
          "[Removed Lines]",
          "6435:         printf(\"Data len: %d\\n\",ima_len);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8324:   int i, j;",
          "8326:   sprintf (name, \"%s %s\", t_make, t_model);",
          "8328:   for (i=0; i < sizeof table / sizeof *table; i++)",
          "8329:     if (!strncmp (name, table[i].prefix, strlen(table[i].prefix))) {",
          "8331:       if (table[i].t_black)   black   = (ushort) table[i].t_black;",
          "8332:       if (table[i].t_maximum) maximum = (ushort) table[i].t_maximum;",
          "8333:       if (table[i].trans[0]) {",
          "",
          "[Removed Lines]",
          "8327:   printf(\"Check coeff for %s\\n\",name);",
          "8330:       printf(\"Found coeff for %s\\n\",name);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1128:       huff[++i] = bit[1][c] << 8 | c;",
          "1129:   huff[0] = 12;",
          "1130:   fseek (ifp, data_offset, SEEK_SET);",
          "1132:   if(!data_size)",
          "1133:       throw LIBRAW_EXCEPTION_IO_BADFILE;",
          "1134:   LibRaw_byte_buffer *buf = ifp->make_byte_buffer(data_size);",
          "",
          "[Removed Lines]",
          "1131: #ifdef LIBRAW_LIBRARY_BUILD",
          "",
          "[Added Lines]",
          "1131: #ifdef LIBRAW_LIBRARY_BUILDA",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1139: #endif",
          "1140:   for (row=0; row < raw_height; row++)",
          "1141:     for (col=0; col < raw_width; col++) {",
          "1143:       diff = ljpeg_diff_pef(bits,buf,huff);",
          "1144: #else",
          "1145:       diff = ljpeg_diff (huff);",
          "",
          "[Removed Lines]",
          "1142: #ifdef LIBRAW_LIBRARY_BUILD",
          "",
          "[Added Lines]",
          "1142: #ifdef LIBRAW_LIBRARY_BUILDA",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1149:       RAW(row,col) = hpred[col & 1];",
          "1150:       if (hpred[col & 1] >> tiff_bps) derror();",
          "1151:     }",
          "1153:   delete buf;",
          "1154: #endif",
          "1155: }",
          "",
          "[Removed Lines]",
          "1152: #ifdef LIBRAW_LIBRARY_BUILD",
          "",
          "[Added Lines]",
          "1152: #ifdef LIBRAW_LIBRARY_BUILDA",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5281:  strcpy (make, \"Imacon\");",
          "5282:  data_offset = ftell(ifp);",
          "5283:  ima_len = len;",
          "5285:  break;",
          "5286:       case 46279:",
          "5287:  if (!ima_len) break;",
          "",
          "[Removed Lines]",
          "5284:         printf(\"Data len: %d\\n\",ima_len);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6262:     data_offset = get4();",
          "6263:   }",
          "6264: }",
          "6266: char * CLASS foveon_gets (int offset, char *str, int len)",
          "6267: {",
          "6268:   int i;",
          "",
          "[Removed Lines]",
          "6265: #line 7419 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6264: #line 7418 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6363:   }",
          "6364:   is_foveon = 1;",
          "6365: }",
          "6368:    All matrices are from Adobe DNG Converter unless otherwise noted.",
          "",
          "[Removed Lines]",
          "6366: #line 7522 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6365: #line 7521 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7169:   int i, j;",
          "7171:   sprintf (name, \"%s %s\", t_make, t_model);",
          "7173:   for (i=0; i < sizeof table / sizeof *table; i++)",
          "7174:     if (!strncmp (name, table[i].prefix, strlen(table[i].prefix))) {",
          "7176:       if (table[i].t_black)   black   = (ushort) table[i].t_black;",
          "7177:       if (table[i].t_maximum) maximum = (ushort) table[i].t_maximum;",
          "7178:       if (table[i].trans[0]) {",
          "",
          "[Removed Lines]",
          "7172:   printf(\"Check coeff for %s\\n\",name);",
          "7175:       printf(\"Found coeff for %s\\n\",name);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "9002: }",
          "9006: void CLASS convert_to_rgb()",
          "9007: {",
          "9008: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "9005: #line 10252 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9002: #line 10249 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "9233:   if (flip & 1) col = iwidth  - 1 - col;",
          "9234:   return row * iwidth + col;",
          "9235: }",
          "9237: void CLASS tiff_set (ushort *ntag,",
          "9238:  ushort tag, ushort type, int count, int val)",
          "9239: {",
          "",
          "[Removed Lines]",
          "9236: #line 10508 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9233: #line 10505 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 10163 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 10160 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/libraw_internal_funcs.h||internal/libraw_internal_funcs.h": [
          "File: internal/libraw_internal_funcs.h -> internal/libraw_internal_funcs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:     void        ljpeg_end(struct jhead *jh);",
          "59:     int         ljpeg_diff (ushort *huff);",
          "60:     int         ljpeg_diff_new (LibRaw_bit_buffer& bits, LibRaw_byte_buffer* buf,ushort *huff);",
          "62:     ushort *    ljpeg_row (int jrow, struct jhead *jh);",
          "63:     ushort *    ljpeg_row_new (int jrow, struct jhead *jh, LibRaw_bit_buffer& bits,LibRaw_byte_buffer* bytes);",
          "",
          "[Removed Lines]",
          "61:     int         ljpeg_diff_pef (LibRaw_bit_buffer& bits, LibRaw_byte_buffer* buf,ushort *huff);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "968c975e21870df390bca95f801ffef6b477e3ba",
      "candidate_info": {
        "commit_hash": "968c975e21870df390bca95f801ffef6b477e3ba",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/968c975e21870df390bca95f801ffef6b477e3ba",
        "files": [
          "Changelog.rus",
          "Changelog.txt",
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp",
          "internal/libraw_internal_funcs.h",
          "src/libraw_cxx.cpp"
        ],
        "message": "Imacon 39Mp multishot",
        "before_after_code_files": [
          "Changelog.rus||Changelog.rus",
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
          "internal/libraw_internal_funcs.h||internal/libraw_internal_funcs.h",
          "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "Changelog.rus||Changelog.rus": [
          "File: Changelog.rus -> Changelog.rus",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:      Canon 6D \u0438 EOS M, Casio EX-ZR100, Fujifilm X-E1, Leica D-LUX6 \u0438 V-LUX4,",
          "4:      Nikon P7700, Olympus XZ-2, Panasonic G5, Samsung EX2F, Sony RX-1",
          "",
          "[Removed Lines]",
          "1: \ufeff2012-12-24  Alex Tutubalin <lexa@lexa.ru>",
          "",
          "[Added Lines]",
          "1: \ufeff2013-01-18  Alex Tutubalin <lexa@lexa.ru>",
          "4: 2012-12-24  Alex Tutubalin <lexa@lexa.ru>",
          "",
          "---------------"
        ],
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6418:  strcpy (make, \"Imacon\");",
          "6419:  data_offset = ftell(ifp);",
          "6420:  ima_len = len;",
          "6421:  break;",
          "6422:       case 46279:",
          "6423:  if (!ima_len) break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6421:         printf(\"Data len: %d\\n\",ima_len);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6430:  width = raw_width - left_margin - (get4() & 7);",
          "6431:  top_margin = get4() & 7;",
          "6432:  height = raw_height - top_margin - (get4() & 7);",
          "6434:    height = 5444;",
          "6435:    width  = 7244;",
          "6436:    left_margin = 7;",
          "",
          "[Removed Lines]",
          "6433:  if (raw_width == 7262) {",
          "",
          "[Added Lines]",
          "6434:  if (raw_width == 7262 && ima_len == 234317952 ) {",
          "6435:    height = 5412;",
          "6436:    width  = 7216;",
          "6437:    left_margin = 7;",
          "6438:           filters=0;",
          "6439:  } else  if (raw_width == 7262) {",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "5267:  strcpy (make, \"Imacon\");",
          "5268:  data_offset = ftell(ifp);",
          "5269:  ima_len = len;",
          "5270:  break;",
          "5271:       case 46279:",
          "5272:  if (!ima_len) break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5270:         printf(\"Data len: %d\\n\",ima_len);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5279:  width = raw_width - left_margin - (get4() & 7);",
          "5280:  top_margin = get4() & 7;",
          "5281:  height = raw_height - top_margin - (get4() & 7);",
          "5283:    height = 5444;",
          "5284:    width  = 7244;",
          "5285:    left_margin = 7;",
          "",
          "[Removed Lines]",
          "5282:  if (raw_width == 7262) {",
          "",
          "[Added Lines]",
          "5283:  if (raw_width == 7262 && ima_len == 234317952 ) {",
          "5284:    height = 5412;",
          "5285:    width  = 7216;",
          "5286:    left_margin = 7;",
          "5287:           filters=0;",
          "5288:  } else  if (raw_width == 7262) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6242:     data_offset = get4();",
          "6243:   }",
          "6244: }",
          "6246: char * CLASS foveon_gets (int offset, char *str, int len)",
          "6247: {",
          "6248:   int i;",
          "",
          "[Removed Lines]",
          "6245: #line 7399 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6251: #line 7405 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6343:   }",
          "6344:   is_foveon = 1;",
          "6345: }",
          "6348:    All matrices are from Adobe DNG Converter unless otherwise noted.",
          "",
          "[Removed Lines]",
          "6346: #line 7502 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6352: #line 7508 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8891: }",
          "8895: void CLASS convert_to_rgb()",
          "8896: {",
          "8897: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "8894: #line 10141 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "8900: #line 10147 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "9122:   if (flip & 1) col = iwidth  - 1 - col;",
          "9123:   return row * iwidth + col;",
          "9124: }",
          "9126: void CLASS tiff_set (ushort *ntag,",
          "9127:  ushort tag, ushort type, int count, int val)",
          "9128: {",
          "",
          "[Removed Lines]",
          "9125: #line 10397 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9131: #line 10403 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 10052 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 10058 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/libraw_internal_funcs.h||internal/libraw_internal_funcs.h": [
          "File: internal/libraw_internal_funcs.h -> internal/libraw_internal_funcs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     void        leaf_hdr_load_raw();",
          "115:     void        sinar_4shot_load_raw();",
          "116:     void        imacon_full_load_raw();",
          "117:     void        packed_load_raw();",
          "118:     float find_green(int,int,int,int);",
          "119:     void        unpacked_load_raw();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:     void        hasselblad_full_load_raw();",
          "",
          "---------------"
        ],
        "src/libraw_cxx.cpp||src/libraw_cxx.cpp": [
          "File: src/libraw_cxx.cpp -> src/libraw_cxx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "529:             d_info->decoder_name = \"imacon_full_load_raw()\";",
          "530:             d_info->decoder_flags = LIBRAW_DECODER_LEGACY;",
          "531:         }",
          "532:     else if (load_raw == &LibRaw::packed_load_raw )",
          "533:         {",
          "534:             d_info->decoder_name = \"packed_load_raw()\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "532:     else if (load_raw == &LibRaw::hasselblad_full_load_raw )",
          "533:         {",
          "534:             d_info->decoder_name = \"hasselblad_full_load_raw()\";",
          "535:             d_info->decoder_flags = LIBRAW_DECODER_LEGACY;",
          "536:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "838:     return ret;",
          "839: }",
          "842: int LibRaw::open_datastream(LibRaw_abstract_datastream *stream)",
          "843: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "846: void LibRaw::hasselblad_full_load_raw()",
          "847: {",
          "848:   int row, col;",
          "850:   for (row=0; row < S.height; row++)",
          "851:     for (col=0; col < S.width; col++)",
          "852:       {",
          "853:         read_shorts (&imgdata.image[row*S.width+col][2], 1); // B",
          "854:         read_shorts (&imgdata.image[row*S.width+col][1], 1); // G",
          "855:         read_shorts (&imgdata.image[row*S.width+col][0], 1); // R",
          "856:       }",
          "857: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "856:             O.use_camera_matrix = O.use_camera_wb;",
          "858:         identify();",
          "860:         if(C.profile_length)",
          "861:             {",
          "862:                 if(C.profile) free(C.profile);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "877: #if 0",
          "878:         size_t bytes = ID.input->size()-libraw_internal_data.unpacker_data.data_offset;",
          "879:         float bpp = float(bytes)/float(S.raw_width)/float(S.raw_height);",
          "880:         float bpp2 = float(bytes)/float(S.width)/float(S.height);",
          "881:         printf(\"RawSize: %dx%d data offset: %d data size:%d bpp: %g bpp2: %g\\n\",S.raw_width,S.raw_height,libraw_internal_data.unpacker_data.data_offset,bytes,bpp,bpp2);",
          "882:         if(!strcasecmp(imgdata.idata.make,\"Hasselblad\") && bpp == 6.0f)",
          "883:           {",
          "884:             load_raw = &LibRaw::hasselblad_full_load_raw;",
          "885:             S.width = S.raw_width;",
          "886:             S.height = S.raw_height;",
          "887:             P1.filters = 0;",
          "888:             P1.colors=3;",
          "889:             P1.raw_count=1;",
          "890:             C.maximum=0xffff;",
          "891:             printf(\"3 channel hassy found\\n\");",
          "892:           }",
          "893: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "958:                 free(imgdata.image);",
          "959:                 imgdata.image = 0;",
          "960:             }",
          "966:         if (libraw_internal_data.unpacker_data.meta_length)",
          "967:             {",
          "968:                 libraw_internal_data.internal_data.meta_data =",
          "",
          "[Removed Lines]",
          "961:      if(imgdata.rawdata.raw_alloc)",
          "962:   {",
          "963:    free(imgdata.rawdata.raw_alloc);",
          "964:    imgdata.rawdata.raw_alloc = 0;",
          "965:   }",
          "",
          "[Added Lines]",
          "995:         if(imgdata.rawdata.raw_alloc)",
          "996:           {",
          "997:             free(imgdata.rawdata.raw_alloc);",
          "998:             imgdata.rawdata.raw_alloc = 0;",
          "999:           }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "987:         S.raw_pitch = S.raw_width*2;",
          "988:         imgdata.rawdata.raw_image = 0;",
          "989:         imgdata.rawdata.color4_image = 0;",
          "991: #ifdef USE_RAWSPEED",
          "993:         if(O.use_rawspeed && (decoder_info.decoder_flags & LIBRAW_DECODER_TRYRAWSPEED) && _rawspeed_camerameta)",
          "",
          "[Removed Lines]",
          "990:   imgdata.rawdata.color3_image = 0;",
          "",
          "[Added Lines]",
          "1024:  imgdata.rawdata.color3_image = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1024:                   S.raw_pitch = r->pitch;",
          "1025:                   fix_after_rawspeed();",
          "1026:                 } else if(r->getCpp()==4) {",
          "1040:                 else",
          "1041:                   {",
          "1042:                     delete d;",
          "",
          "[Removed Lines]",
          "1027:      _rawspeed_decoder = static_cast<void*>(d);",
          "1028:      imgdata.rawdata.color4_image = (ushort(*)[4]) r->getDataUncropped(0,0);",
          "1029:      S.raw_pitch = r->pitch;",
          "1030:      C.maximum = r->whitePoint;",
          "1031:      fix_after_rawspeed();",
          "1032:     } else if(r->getCpp() == 3)",
          "1033:     {",
          "1034:      _rawspeed_decoder = static_cast<void*>(d);",
          "1035:      imgdata.rawdata.color3_image = (ushort(*)[3]) r->getDataUncropped(0,0);",
          "1036:      S.raw_pitch = r->pitch;",
          "1037:      C.maximum = r->whitePoint;",
          "1038:      fix_after_rawspeed();",
          "1039:     }",
          "",
          "[Added Lines]",
          "1061:                   _rawspeed_decoder = static_cast<void*>(d);",
          "1062:                   imgdata.rawdata.color4_image = (ushort(*)[4]) r->getDataUncropped(0,0);",
          "1063:                   S.raw_pitch = r->pitch;",
          "1064:                   C.maximum = r->whitePoint;",
          "1065:                   fix_after_rawspeed();",
          "1066:                 } else if(r->getCpp() == 3)",
          "1067:                   {",
          "1068:                     _rawspeed_decoder = static_cast<void*>(d);",
          "1069:                     imgdata.rawdata.color3_image = (ushort(*)[3]) r->getDataUncropped(0,0);",
          "1070:                     S.raw_pitch = r->pitch;",
          "1071:                     C.maximum = r->whitePoint;",
          "1072:                     fix_after_rawspeed();",
          "1073:                   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7bc160b4ca61389194d4655ab2673817f4b693c0",
      "candidate_info": {
        "commit_hash": "7bc160b4ca61389194d4655ab2673817f4b693c0",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/7bc160b4ca61389194d4655ab2673817f4b693c0",
        "files": [
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp",
          "src/libraw_cxx.cpp"
        ],
        "message": "no 1-pass subtract black for zero_is_bad cameras",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp",
          "src/libraw_cxx.cpp||src/libraw_cxx.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3946:   if (load_raw == &CLASS canon_600_load_raw && width < raw_width) {",
          "3947:     black = (mblack[0]+mblack[1]+mblack[2]+mblack[3]) /",
          "3948:      (mblack[4]+mblack[5]+mblack[6]+mblack[7]) - 4;",
          "3949:     canon_600_correct();",
          "3950:   } else if (zero < mblack[4] && mblack[5] && mblack[6] && mblack[7])",
          "3951:     FORC4 cblack[c] = mblack[c] / mblack[4+c];",
          "3952: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3949: #ifndef LIBRAW_LIBRARY_BUILD",
          "3951: #endif",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2970:   if (load_raw == &CLASS canon_600_load_raw && width < raw_width) {",
          "2971:     black = (mblack[0]+mblack[1]+mblack[2]+mblack[3]) /",
          "2972:      (mblack[4]+mblack[5]+mblack[6]+mblack[7]) - 4;",
          "2973:     canon_600_correct();",
          "2974:   } else if (zero < mblack[4] && mblack[5] && mblack[6] && mblack[7])",
          "2975:     FORC4 cblack[c] = mblack[c] / mblack[4+c];",
          "2976: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2973: #ifndef LIBRAW_LIBRARY_BUILD",
          "2975: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2998:   RUN_CALLBACK(LIBRAW_PROGRESS_REMOVE_ZEROES,1,2);",
          "2999: #endif",
          "3000: }",
          "3002: void CLASS gamma_curve (double pwr, double ts, int mode, int imax)",
          "3003: {",
          "3004:   int i;",
          "",
          "[Removed Lines]",
          "3001: #line 4143 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "3003: #line 4145 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4496:     fseek (ifp, save, SEEK_SET);",
          "4497:   }",
          "4498: }",
          "4500: void CLASS parse_makernote (int base, int uptag)",
          "4501: {",
          "4502:   static const uchar xlat[2][256] = {",
          "",
          "[Removed Lines]",
          "4499: #line 5645 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "4501: #line 5647 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5011:     fseek (ifp, save, SEEK_SET);",
          "5012:   }",
          "5013: }",
          "5015: int CLASS parse_tiff_ifd (int base)",
          "5016: {",
          "5017:   unsigned entries, tag, type, len, plen=16, save;",
          "",
          "[Removed Lines]",
          "5014: #line 6165 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "5016: #line 6167 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6255:     data_offset = get4();",
          "6256:   }",
          "6257: }",
          "6259: char * CLASS foveon_gets (int offset, char *str, int len)",
          "6260: {",
          "6261:   int i;",
          "",
          "[Removed Lines]",
          "6258: #line 7411 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6260: #line 7413 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6356:   }",
          "6357:   is_foveon = 1;",
          "6358: }",
          "6361:    All matrices are from Adobe DNG Converter unless otherwise noted.",
          "",
          "[Removed Lines]",
          "6359: #line 7514 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "6361: #line 7516 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8799: }",
          "8803: void CLASS convert_to_rgb()",
          "8804: {",
          "8805: #ifndef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "8802: #line 10048 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "8804: #line 10050 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "9030:   if (flip & 1) col = iwidth  - 1 - col;",
          "9031:   return row * iwidth + col;",
          "9032: }",
          "9034: void CLASS tiff_set (ushort *ntag,",
          "9035:  ushort tag, ushort type, int count, int val)",
          "9036: {",
          "",
          "[Removed Lines]",
          "9033: #line 10304 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "9035: #line 10306 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "internal/dcraw_fileio.cpp||internal/dcraw_fileio.cpp": [
          "File: internal/dcraw_fileio.cpp -> internal/dcraw_fileio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:    for more information",
          "25: #include <math.h>",
          "26: #define CLASS LibRaw::",
          "27: #include \"libraw/libraw_types.h\"",
          "",
          "[Removed Lines]",
          "24: #line 3980 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "24: #line 3982 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29: #include \"libraw/libraw.h\"",
          "30: #include \"internal/defines.h\"",
          "31: #include \"internal/var_defines.h\"",
          "34:    Seach from the current directory up to the root looking for",
          "35:    a \".badpixels\" file, and fix those pixels now.",
          "",
          "[Removed Lines]",
          "32: #line 3991 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "32: #line 3993 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: #endif",
          "55:   if (cfname)",
          "56:     fp = fopen (cfname, \"r\");",
          "58:   if (!fp)",
          "59:       {",
          "60: #ifdef LIBRAW_LIBRARY_BUILD",
          "",
          "[Removed Lines]",
          "57: #line 4041 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "57: #line 4043 \"dcraw/dcraw.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:   RUN_CALLBACK(LIBRAW_PROGRESS_DARK_FRAME,1,2);",
          "155: #endif",
          "156: }",
          "158: #ifndef NO_LCMS",
          "159: void CLASS apply_profile (const char *input, const char *output)",
          "160: {",
          "",
          "[Removed Lines]",
          "157: #line 9959 \"dcraw/dcraw.c\"",
          "",
          "[Added Lines]",
          "157: #line 9961 \"dcraw/dcraw.c\"",
          "",
          "---------------"
        ],
        "src/libraw_cxx.cpp||src/libraw_cxx.cpp": [
          "File: src/libraw_cxx.cpp -> src/libraw_cxx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "972:      phase_one_free_tempbuffer();",
          "973:           }",
          "975:         imgdata.progress_flags",
          "976:             = LIBRAW_PROGRESS_START|LIBRAW_PROGRESS_OPEN",
          "977:             |LIBRAW_PROGRESS_IDENTIFY|LIBRAW_PROGRESS_SIZE_ADJUST|LIBRAW_PROGRESS_LOAD_RAW;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "976:         if (load_raw == &CLASS canon_600_load_raw && S.width < S.raw_width)",
          "977:           {",
          "978:             canon_600_correct();",
          "979:           }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1300:       {",
          "1301:     phase_one_free_tempbuffer();",
          "1302:       }",
          "1304:     if(do_subtract_black)",
          "1305:       {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1309:     if (load_raw == &CLASS canon_600_load_raw && S.width < S.raw_width)",
          "1310:       {",
          "1311:         canon_600_correct();",
          "1312:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2108:         libraw_decoder_info_t di;",
          "2109:         get_decoder_info(&di);",
          "2113:         raw2image_ex(subtract_inline); // allocate imgdata.image and copy data!",
          "2115:         int save_4color = O.four_color_rgb;",
          "2117:         if (IO.zero_is_bad)",
          "2119:                 remove_zeroes();",
          "2120:                 SET_PROC_FLAG(LIBRAW_PROGRESS_REMOVE_ZEROES);",
          "2121:             }",
          "",
          "[Removed Lines]",
          "2111:         int subtract_inline = !O.bad_pixels && !O.dark_frame && !O.wf_debanding && !(di.decoder_flags & LIBRAW_DECODER_LEGACY);",
          "2118:             {",
          "",
          "[Added Lines]",
          "2121:         int subtract_inline = !O.bad_pixels && !O.dark_frame && !O.wf_debanding && !(di.decoder_flags & LIBRAW_DECODER_LEGACY) && !IO.zero_is_bad;",
          "2128:           {",
          "2129:             printf(\"Removing zeroes\\n\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}