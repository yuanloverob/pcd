{
  "cve_id": "CVE-2016-9262",
  "cve_desc": "Multiple integer overflows in the (1) jas_realloc function in base/jas_malloc.c and (2) mem_resize function in base/jas_stream.c in JasPer before 1.900.22 allow remote attackers to cause a denial of service via a crafted image, which triggers use after free vulnerabilities.",
  "repo": "mdadams/jasper",
  "patch_hash": "634ce8e8a5accc0fa05dd2c20d42b4749d4b2735",
  "patch_info": {
    "commit_hash": "634ce8e8a5accc0fa05dd2c20d42b4749d4b2735",
    "repo": "mdadams/jasper",
    "commit_url": "https://github.com/mdadams/jasper/commit/634ce8e8a5accc0fa05dd2c20d42b4749d4b2735",
    "files": [
      "src/libjasper/base/jas_debug.c",
      "src/libjasper/base/jas_image.c",
      "src/libjasper/base/jas_stream.c",
      "src/libjasper/include/jasper/jas_debug.h",
      "src/libjasper/include/jasper/jas_stream.h"
    ],
    "message": "Made some changes to the I/O stream library for memory streams. There were a number of potential problems due to the possibility of integer overflow. Changed some integral types to the larger types size_t or ssize_t. For example, the function mem_resize now takes the buffer size parameter as a size_t. Added a new function jas_stream_memopen2, which takes a buffer size specified as a size_t instead of an int. This can be used in jas_image_cmpt_create to avoid potential overflow problems.\n\nAdded a new function jas_deprecated to warn about reliance on\ndeprecated library behavior.",
    "before_after_code_files": [
      "src/libjasper/base/jas_debug.c||src/libjasper/base/jas_debug.c",
      "src/libjasper/base/jas_image.c||src/libjasper/base/jas_image.c",
      "src/libjasper/base/jas_stream.c||src/libjasper/base/jas_stream.c",
      "src/libjasper/include/jasper/jas_debug.h||src/libjasper/include/jasper/jas_debug.h",
      "src/libjasper/include/jasper/jas_stream.h||src/libjasper/include/jasper/jas_stream.h"
    ]
  },
  "patch_diff": {
    "src/libjasper/base/jas_debug.c||src/libjasper/base/jas_debug.c": [
      "File: src/libjasper/base/jas_debug.c -> src/libjasper/base/jas_debug.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "135:  }",
      "136:  return 0;",
      "137: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "143: void jas_deprecated(const char *s)",
      "144: {",
      "145:  static char message[] =",
      "146:  \"WARNING!!! WARNING!!! WARNING!!! WARNING!!! WARNING!!! WARNING!!!\\n\"",
      "147:  \"WARNING!!! WARNING!!! WARNING!!! WARNING!!! WARNING!!! WARNING!!!\\n\"",
      "148:  \"WARNING!!! WARNING!!! WARNING!!! WARNING!!! WARNING!!! WARNING!!!\\n\"",
      "149:  \"YOUR CODE IS RELYING ON DEPRECATED FUNCTIONALTIY IN THE JASPER LIBRARY.\\n\"",
      "150:  \"THIS FUNCTIONALITY WILL BE REMOVED IN THE NEAR FUTURE.\\n\"",
      "151:  \"PLEASE FIX THIS PROBLEM BEFORE YOUR CODE STOPS WORKING!\\n\"",
      "152:  ;",
      "153:  jas_eprintf(\"%s\", message);",
      "154:  jas_eprintf(\"The specific problem is as follows:\\n%s\\n\", s);",
      "156: }",
      "",
      "---------------"
    ],
    "src/libjasper/base/jas_image.c||src/libjasper/base/jas_image.c": [
      "File: src/libjasper/base/jas_image.c -> src/libjasper/base/jas_image.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "347:    !jas_safe_size_mul(size, cmpt->cps_, &size)) {",
      "348:   goto error;",
      "349:  }",
      "351:    jas_stream_tmpfile();",
      "352:  if (!cmpt->stream_) {",
      "353:   goto error;",
      "",
      "[Removed Lines]",
      "350:  cmpt->stream_ = (inmem) ? jas_stream_memopen(0, size) :",
      "",
      "[Added Lines]",
      "350:  cmpt->stream_ = (inmem) ? jas_stream_memopen2(0, size) :",
      "",
      "---------------"
    ],
    "src/libjasper/base/jas_stream.c||src/libjasper/base/jas_stream.c": [
      "File: src/libjasper/base/jas_stream.c -> src/libjasper/base/jas_stream.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "169:  return stream;",
      "170: }",
      "172: jas_stream_t *jas_stream_memopen(char *buf, int bufsize)",
      "173: {",
      "174:  jas_stream_t *stream;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "172: #if 0",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "238:  return stream;",
      "239: }",
      "241: jas_stream_t *jas_stream_fopen(const char *filename, const char *mode)",
      "242: {",
      "243:  jas_stream_t *stream;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "245: #else",
      "248: This function will eventually replace jas_stream_memopen.",
      "249: If buf is 0 and bufsize > 0:",
      "250:  a buffer is dynamically allocated with size bufsize and this buffer is",
      "251:  not growable.",
      "252: If buf is 0 and bufsize is 0:",
      "253:  a buffer is dynamically allocated whose size will automatically grow to",
      "254:  accommodate the amount of data written.",
      "255: If buf is not 0:",
      "256:  bufsize (which, in this case, is not currently allowed to be zero) is",
      "257:  the size of the (nongrowable) buffer pointed to by buf.",
      "260: jas_stream_t *jas_stream_memopen2(char *buf, size_t bufsize)",
      "261: {",
      "262:  jas_stream_t *stream;",
      "263:  jas_stream_memobj_t *obj;",
      "265:  JAS_DBGLOG(100, (\"jas_stream_memopen2(%p, %zu)\\n\", buf, bufsize));",
      "267:  assert((buf && bufsize > 0) || (!buf));",
      "269:  if (!(stream = jas_stream_create())) {",
      "270:   return 0;",
      "271:  }",
      "275:  stream->openmode_ = JAS_STREAM_READ | JAS_STREAM_WRITE | JAS_STREAM_BINARY;",
      "280:  jas_stream_initbuf(stream, JAS_STREAM_FULLBUF, 0, 0);",
      "283:  stream->ops_ = &jas_stream_memops;",
      "286:  if (!(obj = jas_malloc(sizeof(jas_stream_memobj_t)))) {",
      "287:   jas_stream_destroy(stream);",
      "288:   return 0;",
      "289:  }",
      "290:  stream->obj_ = (void *) obj;",
      "293:  obj->myalloc_ = 0;",
      "294:  obj->buf_ = 0;",
      "298:  if (!bufsize) {",
      "299:   obj->bufsize_ = 1024;",
      "300:   obj->growable_ = 1;",
      "301:  } else {",
      "302:   obj->bufsize_ = bufsize;",
      "303:   obj->growable_ = 0;",
      "304:  }",
      "305:  if (buf) {",
      "306:   obj->buf_ = JAS_CAST(unsigned char *, buf);",
      "307:  } else {",
      "308:   obj->buf_ = jas_malloc(obj->bufsize_);",
      "309:   obj->myalloc_ = 1;",
      "310:  }",
      "311:  if (!obj->buf_) {",
      "312:   jas_stream_close(stream);",
      "313:   return 0;",
      "314:  }",
      "315:  JAS_DBGLOG(100, (\"jas_stream_memopen2 buffer buf=%p myalloc=%d\\n\",",
      "316:    obj->buf_, obj->myalloc_));",
      "318:  if (bufsize > 0 && buf) {",
      "321:   obj->len_ = bufsize;",
      "322:  } else {",
      "324:   obj->len_ = 0;",
      "325:  }",
      "326:  obj->pos_ = 0;",
      "328:  return stream;",
      "329: }",
      "332: NOTE:",
      "333: The version of the function jas_stream_memopen only exists for backwards",
      "334: compatibility.",
      "335: Eventually, it should be replaced by jas_stream_memopen2.",
      "336: In retrospect, it was a very poor choice to have specified the buffer",
      "337: size parameter (bufsize) to have type int.  On some machines, int may only",
      "338: be a 16-bit integer.  This precludes larger-sized buffer allocations, which",
      "339: are needed in practice.",
      "341: If bufsize <= 0, the buffer is growable; otherwise, the buffer has a fixed",
      "342: size of bufsize.",
      "343: If buf is 0, the buffer is dynamically allocated with jas_malloc.",
      "344: If buf is not 0 and bufsize <= 0 (which is not permitted in any",
      "345: circumstances), bad things will happen (especially if the buf was not",
      "346: allocated with jas_malloc).",
      "348: jas_stream_t *jas_stream_memopen(char *buf, int bufsize)",
      "349: {",
      "350:  char *new_buf;",
      "351:  size_t new_bufsize;",
      "353:  JAS_DBGLOG(100, (\"jas_stream_memopen(%p, %d)\\n\", buf, bufsize));",
      "354:  if (bufsize < 0) {",
      "355:   jas_deprecated(\"negative buffer size for jas_stream_memopen\");",
      "356:  }",
      "357:  if (buf && bufsize <= 0) {",
      "359:   jas_eprintf(\"Invalid use of jas_stream_memopen detected.\\n\");",
      "360:   jas_deprecated(\"A user-provided buffer for \"",
      "361:     \"jas_stream_memopen cannot be growable.\\n\");",
      "362:  }",
      "363:  if (bufsize <= 0) {",
      "364:   new_bufsize = 0;",
      "365:   new_buf = 0;",
      "366:  } else {",
      "367:   new_bufsize = bufsize;",
      "368:   new_buf = buf;",
      "369:  }",
      "370:  return jas_stream_memopen2(new_buf, new_bufsize);",
      "371: }",
      "373: #endif",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "520:  int c;",
      "521:  char *bufptr;",
      "523:  bufptr = buf;",
      "525:  n = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "657:  if (cnt < 0) {",
      "658:   jas_deprecated(\"negative count for jas_stream_read\");",
      "659:  }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "539:  int n;",
      "540:  const char *bufptr;",
      "542:  bufptr = buf;",
      "544:  n = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "680:  if (cnt < 0) {",
      "681:   jas_deprecated(\"negative count for jas_stream_write\");",
      "682:  }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "604: int jas_stream_gobble(jas_stream_t *stream, int n)",
      "605: {",
      "606:  int m;",
      "607:  m = n;",
      "608:  for (m = n; m > 0; --m) {",
      "609:   if (jas_stream_getc(stream) == EOF) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "749:  if (n < 0) {",
      "750:   jas_deprecated(\"negative count for jas_stream_gobble\");",
      "751:  }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "616: int jas_stream_pad(jas_stream_t *stream, int n, int c)",
      "617: {",
      "618:  int m;",
      "619:  m = n;",
      "620:  for (m = n; m > 0; --m) {",
      "621:   if (jas_stream_putc(stream, c) == EOF)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "764:  if (n < 0) {",
      "765:   jas_deprecated(\"negative count for jas_stream_pad\");",
      "766:  }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "989: static int mem_read(jas_stream_obj_t *obj, char *buf, int cnt)",
      "990: {",
      "992:  assert(cnt >= 0);",
      "993:  assert(buf);",
      "",
      "[Removed Lines]",
      "991:  int n;",
      "",
      "[Added Lines]",
      "1139:  ssize_t n;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1001:  return cnt;",
      "1002: }",
      "1005: {",
      "1006:  unsigned char *buf;",
      "1012:  if (!(buf = jas_realloc2(m->buf_, bufsize, sizeof(unsigned char))) &&",
      "1013:    bufsize) {",
      "1014:   JAS_DBGLOG(100, (\"mem_resize realloc failed\\n\"));",
      "",
      "[Removed Lines]",
      "1004: static int mem_resize(jas_stream_memobj_t *m, int bufsize)",
      "1009:  assert(bufsize >= 0);",
      "1011:  JAS_DBGLOG(100, (\"mem_resize(%p, %d)\\n\", m, bufsize));",
      "",
      "[Added Lines]",
      "1152: static int mem_resize(jas_stream_memobj_t *m, size_t bufsize)",
      "1159:  JAS_DBGLOG(100, (\"mem_resize(%p, %zu)\\n\", m, bufsize));",
      "1160:  if (!bufsize) {",
      "1161:   jas_eprintf(",
      "1162:     \"mem_resize was not really designed to handle a buffer of size 0\\n\"",
      "1163:     \"This may not work.\\n\"",
      "1164:   );",
      "1165:  }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1023: static int mem_write(jas_stream_obj_t *obj, char *buf, int cnt)",
      "1024: {",
      "1026:  int ret;",
      "1027:  jas_stream_memobj_t *m = (jas_stream_memobj_t *)obj;",
      "1031:  assert(buf);",
      "1032:  assert(cnt >= 0);",
      "",
      "[Removed Lines]",
      "1025:  int n;",
      "1028:  long newbufsize;",
      "1029:  long newpos;",
      "",
      "[Added Lines]",
      "1180:  size_t n;",
      "1183:  size_t newbufsize;",
      "1184:  size_t newpos;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1036:  if (newpos > m->bufsize_ && m->growable_) {",
      "1037:   newbufsize = m->bufsize_;",
      "1038:   while (newbufsize < newpos) {",
      "1041:   }",
      "1043:     newbufsize));",
      "1046:   if (mem_resize(m, newbufsize)) {",
      "1047:    return -1;",
      "1048:   }",
      "",
      "[Removed Lines]",
      "1039:    newbufsize <<= 1;",
      "1040:    assert(newbufsize >= 0);",
      "1042:   JAS_DBGLOG(100, (\"mem_write resizing from %d to %z\\n\", m->bufsize_,",
      "1044:   JAS_DBGLOG(100, (\"mem_write resizing from %d to %ul\\n\", m->bufsize_,",
      "1045:     JAS_CAST(unsigned long, newbufsize)));",
      "",
      "[Added Lines]",
      "1195:    if (!jas_safe_size_mul(newbufsize, 2, &newbufsize)) {",
      "1196:     JAS_DBGLOG(100, (\"new buffer size would cause overflow\\n\"));",
      "1197:     return -1;",
      "1198:    }",
      "1200:   JAS_DBGLOG(100, (\"mem_write resizing from %d to %zu\\n\", m->bufsize_,",
      "1202:   assert(newbufsize > 0);",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1076: static long mem_seek(jas_stream_obj_t *obj, long offset, int origin)",
      "1077: {",
      "1078:  jas_stream_memobj_t *m = (jas_stream_memobj_t *)obj;",
      "1081:  JAS_DBGLOG(100, (\"mem_seek(%p, %ld, %d)\\n\", obj, offset, origin));",
      "1082:  switch (origin) {",
      "",
      "[Removed Lines]",
      "1079:  long newpos;",
      "",
      "[Added Lines]",
      "1236:  size_t newpos;",
      "",
      "---------------"
    ],
    "src/libjasper/include/jasper/jas_debug.h||src/libjasper/include/jasper/jas_debug.h": [
      "File: src/libjasper/include/jasper/jas_debug.h -> src/libjasper/include/jasper/jas_debug.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "108: int jas_memdump(FILE *out, void *data, size_t len);",
      "110: #ifdef __cplusplus",
      "111: }",
      "112: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "111: void jas_deprecated(const char *s);",
      "",
      "---------------"
    ],
    "src/libjasper/include/jasper/jas_stream.h||src/libjasper/include/jasper/jas_stream.h": [
      "File: src/libjasper/include/jasper/jas_stream.h -> src/libjasper/include/jasper/jas_stream.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "267:  uchar *buf_;",
      "273:  int_fast32_t len_;",
      "",
      "[Removed Lines]",
      "270:  int bufsize_;",
      "",
      "[Added Lines]",
      "270:  size_t bufsize_;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "294: jas_stream_t *jas_stream_memopen(char *buf, int bufsize);",
      "297: jas_stream_t *jas_stream_fdopen(int fd, const char *mode);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "298: jas_stream_t *jas_stream_memopen2(char *buf, size_t bufsize);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7e452109a3e7eb52685d48c0b293a551c1535ea6",
      "candidate_info": {
        "commit_hash": "7e452109a3e7eb52685d48c0b293a551c1535ea6",
        "repo": "mdadams/jasper",
        "commit_url": "https://github.com/mdadams/jasper/commit/7e452109a3e7eb52685d48c0b293a551c1535ea6",
        "files": [
          "CMakeLists.txt",
          "build/my_build",
          "src/libjasper/CMakeLists.txt",
          "src/libjasper/include/jasper/jas_config.h.in",
          "src/libjasper/include/jasper/jas_debug.h",
          "src/libjasper/include/jasper/jas_dll.h",
          "src/libjasper/include/jasper/jas_getopt.h",
          "src/libjasper/include/jasper/jas_image.h",
          "src/libjasper/include/jasper/jas_init.h",
          "src/libjasper/include/jasper/jas_malloc.h",
          "src/libjasper/include/jasper/jas_seq.h",
          "src/libjasper/include/jasper/jas_stream.h",
          "src/libjasper/include/jasper/jas_string.h",
          "src/libjasper/include/jasper/jas_tmr.h",
          "src/libjasper/include/jasper/jas_tvp.h",
          "src/libjasper/include/jasper/jas_version.h"
        ],
        "message": "Some preliminary changes for moving towards DLL support for Windows.",
        "before_after_code_files": [
          "src/libjasper/include/jasper/jas_config.h.in||src/libjasper/include/jasper/jas_config.h.in",
          "src/libjasper/include/jasper/jas_debug.h||src/libjasper/include/jasper/jas_debug.h",
          "src/libjasper/include/jasper/jas_dll.h||src/libjasper/include/jasper/jas_dll.h",
          "src/libjasper/include/jasper/jas_getopt.h||src/libjasper/include/jasper/jas_getopt.h",
          "src/libjasper/include/jasper/jas_image.h||src/libjasper/include/jasper/jas_image.h",
          "src/libjasper/include/jasper/jas_init.h||src/libjasper/include/jasper/jas_init.h",
          "src/libjasper/include/jasper/jas_malloc.h||src/libjasper/include/jasper/jas_malloc.h",
          "src/libjasper/include/jasper/jas_seq.h||src/libjasper/include/jasper/jas_seq.h",
          "src/libjasper/include/jasper/jas_stream.h||src/libjasper/include/jasper/jas_stream.h",
          "src/libjasper/include/jasper/jas_string.h||src/libjasper/include/jasper/jas_string.h",
          "src/libjasper/include/jasper/jas_tmr.h||src/libjasper/include/jasper/jas_tmr.h",
          "src/libjasper/include/jasper/jas_tvp.h||src/libjasper/include/jasper/jas_tvp.h",
          "src/libjasper/include/jasper/jas_version.h||src/libjasper/include/jasper/jas_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/libjasper/include/jasper/jas_debug.h||src/libjasper/include/jasper/jas_debug.h",
            "src/libjasper/include/jasper/jas_stream.h||src/libjasper/include/jasper/jas_stream.h"
          ],
          "candidate": [
            "src/libjasper/include/jasper/jas_debug.h||src/libjasper/include/jasper/jas_debug.h",
            "src/libjasper/include/jasper/jas_stream.h||src/libjasper/include/jasper/jas_stream.h"
          ]
        }
      },
      "candidate_diff": {
        "src/libjasper/include/jasper/jas_config.h.in||src/libjasper/include/jasper/jas_config.h.in": [
          "File: src/libjasper/include/jasper/jas_config.h.in -> src/libjasper/include/jasper/jas_config.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #ifndef JAS_CONFIG_H",
          "2: #define JAS_CONFIG_H",
          "4: #define JAS_CONFIGURE",
          "6: #if defined(_MSC_VER)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: #cmakedefine JAS_DLL 1",
          "6: #include <jasper/jas_dll.h>",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_debug.h||src/libjasper/include/jasper/jas_debug.h": [
          "File: src/libjasper/include/jasper/jas_debug.h -> src/libjasper/include/jasper/jas_debug.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "98: #endif",
          "107: int jas_eprintf(const char *fmt, ...);",
          "",
          "[Removed Lines]",
          "101: int jas_getdbglevel(void);",
          "104: int jas_setdbglevel(int dbglevel);",
          "",
          "[Added Lines]",
          "101: JAS_DLLEXPORT int jas_getdbglevel(void);",
          "104: JAS_DLLEXPORT int jas_setdbglevel(int dbglevel);",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_dll.h||src/libjasper/include/jasper/jas_dll.h": [
          "File: src/libjasper/include/jasper/jas_dll.h -> src/libjasper/include/jasper/jas_dll.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #ifndef JAS_DLL_H",
          "2: #define JAS_DLL_H",
          "4: #if defined(JAS_DLL)",
          "5:  #if defined(_WIN32)",
          "6:   #if defined(JAS_BUILDING_DLL)",
          "7:    #define JAS_DLLEXPORT __declspec(dllexport)",
          "8:   #else",
          "9:    #define JAS_DLLEXPORT __declspec(dllimport)",
          "10:   #endif",
          "11:   #define JAS_DLLLOCAL",
          "12:  #elif defined(JAS_HAVE_VISIBILITY)",
          "13:   #if defined(JAS_BUILDING_DLL)",
          "14:    #define JAS_DLLEXPORT __attribute__ ((visibility(\"default\")))",
          "15:    #define JAS_DLLLOCAL __attribute__ ((visibility(\"hidden\")))",
          "16:   #else",
          "17:    #define JAS_DLLEXPORT",
          "18:    #define JAS_DLLLOCAL",
          "19:   #endif",
          "20:  #else",
          "21:   #define JAS_DLLEXPORT",
          "22:   #define JAS_DLLLOCAL",
          "23:  #endif",
          "24: #else",
          "25:  #define JAS_DLLEXPORT",
          "26:  #define JAS_DLLLOCAL",
          "27: #endif",
          "29: #endif",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_getopt.h||src/libjasper/include/jasper/jas_getopt.h": [
          "File: src/libjasper/include/jasper/jas_getopt.h -> src/libjasper/include/jasper/jas_getopt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "128: #ifdef __cplusplus",
          "129: }",
          "",
          "[Removed Lines]",
          "126: int jas_getopt(int argc, char **argv, jas_opt_t *opts);",
          "",
          "[Added Lines]",
          "126: JAS_DLLEXPORT int jas_getopt(int argc, char **argv, jas_opt_t *opts);",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_image.h||src/libjasper/include/jasper/jas_image.h": [
          "File: src/libjasper/include/jasper/jas_image.h -> src/libjasper/include/jasper/jas_image.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "311:   jas_image_cmptparm_t *cmptparms, jas_clrspc_t clrspc);",
          "314: jas_image_t *jas_image_create0(void);",
          "323: #define jas_image_width(image) \\",
          "",
          "[Removed Lines]",
          "310: jas_image_t *jas_image_create(int numcmpts,",
          "317: jas_image_t *jas_image_copy(jas_image_t *image);",
          "320: void jas_image_destroy(jas_image_t *image);",
          "",
          "[Added Lines]",
          "310: JAS_DLLEXPORT jas_image_t *jas_image_create(int numcmpts,",
          "317: JAS_DLLEXPORT jas_image_t *jas_image_copy(jas_image_t *image);",
          "320: JAS_DLLEXPORT void jas_image_destroy(jas_image_t *image);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "409:    (image)->cmpts_[cmptno]->vstep_)",
          "423:   const char *optstr);",
          "429:   jas_image_coord_t y, jas_image_coord_t width, jas_image_coord_t height,",
          "430:   jas_matrix_t *data);",
          "",
          "[Removed Lines]",
          "412: bool jas_image_cmpt_domains_same(jas_image_t *image);",
          "416: uint_fast32_t jas_image_rawsize(jas_image_t *image);",
          "419: jas_image_t *jas_image_decode(jas_stream_t *in, int fmt, const char *optstr);",
          "422: int jas_image_encode(jas_image_t *image, jas_stream_t *out, int fmt,",
          "428: int jas_image_readcmpt(jas_image_t *image, int cmptno, jas_image_coord_t x,",
          "",
          "[Added Lines]",
          "412: JAS_DLLEXPORT bool jas_image_cmpt_domains_same(jas_image_t *image);",
          "416: JAS_DLLEXPORT uint_fast32_t jas_image_rawsize(jas_image_t *image);",
          "419: JAS_DLLEXPORT jas_image_t *jas_image_decode(jas_stream_t *in, int fmt, const char *optstr);",
          "422: JAS_DLLEXPORT int jas_image_encode(jas_image_t *image, jas_stream_t *out, int fmt,",
          "428: JAS_DLLEXPORT int jas_image_readcmpt(jas_image_t *image, int cmptno, jas_image_coord_t x,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "435:   jas_matrix_t *data);",
          "442:   jas_image_cmptparm_t *cmptparm);",
          "446:   jas_image_t *srcimage, int srccmptno);",
          "448: #define JAS_IMAGE_CDT_GETSGND(dtype) (((dtype) >> 7) & 1)",
          "",
          "[Removed Lines]",
          "438: void jas_image_delcmpt(jas_image_t *image, int cmptno);",
          "441: int jas_image_addcmpt(jas_image_t *image, int cmptno,",
          "445: int jas_image_copycmpt(jas_image_t *dstimage, int dstcmptno,",
          "",
          "[Added Lines]",
          "438: JAS_DLLEXPORT void jas_image_delcmpt(jas_image_t *image, int cmptno);",
          "441: JAS_DLLEXPORT int jas_image_addcmpt(jas_image_t *image, int cmptno,",
          "445: JAS_DLLEXPORT int jas_image_copycmpt(jas_image_t *dstimage, int dstcmptno,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "453: #define jas_image_cmptdtype(image, cmptno) \\",
          "454:  (JAS_IMAGE_CDT_SETSGND((image)->cmpts_[cmptno]->sgnd_) | JAS_IMAGE_CDT_SETPREC((image)->cmpts_[cmptno]->prec_))",
          "457:   int_fast32_t *lutents, int dtype, int newcmptno);",
          "461:   int_fast32_t v);",
          "474:   jas_image_fmtops_t *ops);",
          "495: #define jas_image_cmprof(image) ((image)->cmprof_)",
          "",
          "[Removed Lines]",
          "456: int jas_image_depalettize(jas_image_t *image, int cmptno, int numlutents,",
          "459: int jas_image_readcmptsample(jas_image_t *image, int cmptno, int x, int y);",
          "460: void jas_image_writecmptsample(jas_image_t *image, int cmptno, int x, int y,",
          "463: int jas_image_getcmptbytype(jas_image_t *image, int ctype);",
          "470: void jas_image_clearfmts(void);",
          "473: int jas_image_addfmt(int id, char *name, char *ext, char *desc,",
          "477: int jas_image_strtofmt(char *s);",
          "480: char *jas_image_fmttostr(int fmt);",
          "483: jas_image_fmtinfo_t *jas_image_lookupfmtbyid(int id);",
          "486: jas_image_fmtinfo_t *jas_image_lookupfmtbyname(const char *name);",
          "489: int jas_image_fmtfromname(char *filename);",
          "492: int jas_image_getfmt(jas_stream_t *in);",
          "",
          "[Added Lines]",
          "456: JAS_DLLEXPORT int jas_image_depalettize(jas_image_t *image, int cmptno, int numlutents,",
          "459: JAS_DLLEXPORT int jas_image_readcmptsample(jas_image_t *image, int cmptno, int x, int y);",
          "460: JAS_DLLEXPORT void jas_image_writecmptsample(jas_image_t *image, int cmptno, int x, int y,",
          "463: JAS_DLLEXPORT int jas_image_getcmptbytype(jas_image_t *image, int ctype);",
          "470: JAS_DLLEXPORT void jas_image_clearfmts(void);",
          "473: JAS_DLLEXPORT int jas_image_addfmt(int id, char *name, char *ext, char *desc,",
          "477: JAS_DLLEXPORT int jas_image_strtofmt(char *s);",
          "480: JAS_DLLEXPORT char *jas_image_fmttostr(int fmt);",
          "483: JAS_DLLEXPORT jas_image_fmtinfo_t *jas_image_lookupfmtbyid(int id);",
          "486: JAS_DLLEXPORT jas_image_fmtinfo_t *jas_image_lookupfmtbyname(const char *name);",
          "489: JAS_DLLEXPORT int jas_image_fmtfromname(char *filename);",
          "492: JAS_DLLEXPORT int jas_image_getfmt(jas_stream_t *in);",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_init.h||src/libjasper/include/jasper/jas_init.h": [
          "File: src/libjasper/include/jasper/jas_init.h -> src/libjasper/include/jasper/jas_init.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "76: int jas_init(void);",
          "80: #ifdef __cplusplus",
          "81: }",
          "",
          "[Removed Lines]",
          "78: void jas_cleanup(void);",
          "",
          "[Added Lines]",
          "79: JAS_DLLEXPORT void jas_cleanup(void);",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_malloc.h||src/libjasper/include/jasper/jas_malloc.h": [
          "File: src/libjasper/include/jasper/jas_malloc.h -> src/libjasper/include/jasper/jas_malloc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "112: #if defined(JAS_DEFAULT_MAX_MEM_USAGE)",
          "118: #endif",
          "",
          "[Removed Lines]",
          "114: void jas_set_max_mem_usage(size_t max_mem);",
          "116: size_t jas_get_mem_usage();",
          "",
          "[Added Lines]",
          "114: JAS_DLLEXPORT void jas_set_max_mem_usage(size_t max_mem);",
          "116: JAS_DLLEXPORT size_t jas_get_mem_usage();",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_seq.h||src/libjasper/include/jasper/jas_seq.h": [
          "File: src/libjasper/include/jasper/jas_seq.h -> src/libjasper/include/jasper/jas_seq.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:  (max((matrix)->numrows_, (matrix)->numcols_))",
          "207:   jas_matind_t c0, jas_matind_t r1, jas_matind_t c1);",
          "",
          "[Removed Lines]",
          "195: jas_matrix_t *jas_matrix_create(jas_matind_t numrows, jas_matind_t numcols);",
          "198: void jas_matrix_destroy(jas_matrix_t *matrix);",
          "201: int jas_matrix_resize(jas_matrix_t *matrix, jas_matind_t numrows, jas_matind_t numcols);",
          "203: int jas_matrix_output(jas_matrix_t *matrix, FILE *out);",
          "206: void jas_matrix_bindsub(jas_matrix_t *mat0, jas_matrix_t *mat1, jas_matind_t r0,",
          "",
          "[Added Lines]",
          "195: JAS_DLLEXPORT jas_matrix_t *jas_matrix_create(jas_matind_t numrows, jas_matind_t numcols);",
          "198: JAS_DLLEXPORT void jas_matrix_destroy(jas_matrix_t *matrix);",
          "201: JAS_DLLEXPORT int jas_matrix_resize(jas_matrix_t *matrix, jas_matind_t numrows, jas_matind_t numcols);",
          "203: JAS_DLLEXPORT int jas_matrix_output(jas_matrix_t *matrix, FILE *out);",
          "206: JAS_DLLEXPORT void jas_matrix_bindsub(jas_matrix_t *mat0, jas_matrix_t *mat1, jas_matind_t r0,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "215:   (jas_matrix_bindsub((mat0), (mat1), 0, (c), (mat1)->numrows_ - 1, (c)))",
          "219:   jas_seqent_t maxval);",
          "234: #define jas_matrix_rowstep(matrix) \\",
          "",
          "[Removed Lines]",
          "218: void jas_matrix_clip(jas_matrix_t *matrix, jas_seqent_t minval,",
          "222: void jas_matrix_asl(jas_matrix_t *matrix, int n);",
          "225: void jas_matrix_asr(jas_matrix_t *matrix, int n);",
          "228: void jas_matrix_divpow2(jas_matrix_t *matrix, int n);",
          "231: void jas_matrix_setall(jas_matrix_t *matrix, jas_seqent_t val);",
          "",
          "[Added Lines]",
          "218: JAS_DLLEXPORT void jas_matrix_clip(jas_matrix_t *matrix, jas_seqent_t minval,",
          "222: JAS_DLLEXPORT void jas_matrix_asl(jas_matrix_t *matrix, int n);",
          "225: JAS_DLLEXPORT void jas_matrix_asr(jas_matrix_t *matrix, int n);",
          "228: JAS_DLLEXPORT void jas_matrix_divpow2(jas_matrix_t *matrix, int n);",
          "231: JAS_DLLEXPORT void jas_matrix_setall(jas_matrix_t *matrix, jas_seqent_t val);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "239:  (((matrix)->numrows_ > 1) ? (jas_matrix_rowstep(matrix)) : (1))",
          "248: #define jas_seqent_asl jas_fast32_asl",
          "249: #define jas_seqent_asr jas_fast32_asr",
          "",
          "[Removed Lines]",
          "242: int jas_matrix_cmp(jas_matrix_t *mat0, jas_matrix_t *mat1);",
          "244: jas_matrix_t *jas_matrix_copy(jas_matrix_t *x);",
          "246: jas_matrix_t *jas_matrix_input(FILE *);",
          "",
          "[Added Lines]",
          "242: JAS_DLLEXPORT int jas_matrix_cmp(jas_matrix_t *mat0, jas_matrix_t *mat1);",
          "244: JAS_DLLEXPORT jas_matrix_t *jas_matrix_copy(jas_matrix_t *x);",
          "246: JAS_DLLEXPORT jas_matrix_t *jas_matrix_input(FILE *);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "258:   jas_matind_t xend, jas_matind_t yend);",
          "260: #define jas_seq2d_destroy(s) \\",
          "",
          "[Removed Lines]",
          "255: jas_seq2d_t *jas_seq2d_copy(jas_seq2d_t *x);",
          "257: jas_matrix_t *jas_seq2d_create(jas_matind_t xstart, jas_matind_t ystart,",
          "",
          "[Added Lines]",
          "255: JAS_DLLEXPORT jas_seq2d_t *jas_seq2d_copy(jas_seq2d_t *x);",
          "257: JAS_DLLEXPORT jas_matrix_t *jas_seq2d_create(jas_matind_t xstart, jas_matind_t ystart,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "285: #define jas_seq2d_size(s) \\",
          "286:  (jas_seq2d_width(s) * jas_seq2d_height(s))",
          "289:   jas_matind_t ystart, jas_matind_t xend, jas_matind_t yend);",
          "",
          "[Removed Lines]",
          "288: void jas_seq2d_bindsub(jas_matrix_t *s, jas_matrix_t *s1, jas_matind_t xstart,",
          "",
          "[Added Lines]",
          "288: JAS_DLLEXPORT void jas_seq2d_bindsub(jas_matrix_t *s, jas_matrix_t *s1, jas_matind_t xstart,",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_stream.h||src/libjasper/include/jasper/jas_stream.h": [
          "File: src/libjasper/include/jasper/jas_stream.h -> src/libjasper/include/jasper/jas_stream.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "292: jas_stream_t *jas_stream_fopen(const char *filename, const char *mode);",
          "295: jas_stream_t *jas_stream_memopen(char *buf, int bufsize);",
          "299: jas_stream_t *jas_stream_memopen2(char *buf, size_t bufsize);",
          "302: jas_stream_t *jas_stream_fdopen(int fd, const char *mode);",
          "305: jas_stream_t *jas_stream_freopen(const char *path, const char *mode, FILE *fp);",
          "308: jas_stream_t *jas_stream_tmpfile(void);",
          "311: int jas_stream_close(jas_stream_t *stream);",
          "",
          "[Added Lines]",
          "292: JAS_DLLEXPORT jas_stream_t *jas_stream_fopen(const char *filename, const char *mode);",
          "295: JAS_DLLEXPORT jas_stream_t *jas_stream_memopen(char *buf, int bufsize);",
          "299: JAS_DLLEXPORT jas_stream_t *jas_stream_memopen2(char *buf, size_t bufsize);",
          "302: JAS_DLLEXPORT jas_stream_t *jas_stream_fdopen(int fd, const char *mode);",
          "305: JAS_DLLEXPORT jas_stream_t *jas_stream_freopen(const char *path, const char *mode, FILE *fp);",
          "308: JAS_DLLEXPORT jas_stream_t *jas_stream_tmpfile(void);",
          "311: JAS_DLLEXPORT int jas_stream_close(jas_stream_t *stream);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "331:  (((const jas_stream_t *)(stream))->rwlimit_)",
          "337: #define jas_stream_getrwcount(stream) \\",
          "338:  (((const jas_stream_t *)(stream))->rwcnt_)",
          "",
          "[Removed Lines]",
          "334: int jas_stream_setrwlimit(jas_stream_t *stream, long rwlimit);",
          "341: long jas_stream_setrwcount(jas_stream_t *stream, long rwcnt);",
          "",
          "[Added Lines]",
          "334: JAS_DLLEXPORT int jas_stream_setrwlimit(jas_stream_t *stream, long rwlimit);",
          "341: JAS_DLLEXPORT long jas_stream_setrwcount(jas_stream_t *stream, long rwcnt);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "359: #endif",
          "",
          "[Removed Lines]",
          "362: int jas_stream_read(jas_stream_t *stream, void *buf, int cnt);",
          "365: int jas_stream_write(jas_stream_t *stream, const void *buf, int cnt);",
          "368: int jas_stream_printf(jas_stream_t *stream, const char *fmt, ...);",
          "371: int jas_stream_puts(jas_stream_t *stream, const char *s);",
          "374: char *jas_stream_gets(jas_stream_t *stream, char *buf, int bufsize);",
          "",
          "[Added Lines]",
          "362: JAS_DLLEXPORT int jas_stream_read(jas_stream_t *stream, void *buf, int cnt);",
          "365: JAS_DLLEXPORT int jas_stream_write(jas_stream_t *stream, const void *buf, int cnt);",
          "368: JAS_DLLEXPORT int jas_stream_printf(jas_stream_t *stream, const char *fmt, ...);",
          "371: JAS_DLLEXPORT int jas_stream_puts(jas_stream_t *stream, const char *s);",
          "374: JAS_DLLEXPORT char *jas_stream_gets(jas_stream_t *stream, char *buf, int bufsize);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "380:    ((int)(*(stream)->ptr_)))",
          "",
          "[Removed Lines]",
          "383: int jas_stream_ungetc(jas_stream_t *stream, int c);",
          "390: int jas_stream_isseekable(jas_stream_t *stream);",
          "393: long jas_stream_seek(jas_stream_t *stream, long offset, int origin);",
          "396: long jas_stream_tell(jas_stream_t *stream);",
          "399: int jas_stream_rewind(jas_stream_t *stream);",
          "406: int jas_stream_flush(jas_stream_t *stream);",
          "413: int jas_stream_copy(jas_stream_t *dst, jas_stream_t *src, int n);",
          "416: int jas_stream_display(jas_stream_t *stream, FILE *fp, int n);",
          "419: int jas_stream_gobble(jas_stream_t *stream, int n);",
          "422: int jas_stream_pad(jas_stream_t *stream, int n, int c);",
          "426: long jas_stream_length(jas_stream_t *stream);",
          "",
          "[Added Lines]",
          "383: JAS_DLLEXPORT int jas_stream_ungetc(jas_stream_t *stream, int c);",
          "390: JAS_DLLEXPORT int jas_stream_isseekable(jas_stream_t *stream);",
          "393: JAS_DLLEXPORT long jas_stream_seek(jas_stream_t *stream, long offset, int origin);",
          "396: JAS_DLLEXPORT long jas_stream_tell(jas_stream_t *stream);",
          "399: JAS_DLLEXPORT int jas_stream_rewind(jas_stream_t *stream);",
          "406: JAS_DLLEXPORT int jas_stream_flush(jas_stream_t *stream);",
          "413: JAS_DLLEXPORT int jas_stream_copy(jas_stream_t *dst, jas_stream_t *src, int n);",
          "416: JAS_DLLEXPORT int jas_stream_display(jas_stream_t *stream, FILE *fp, int n);",
          "419: JAS_DLLEXPORT int jas_stream_gobble(jas_stream_t *stream, int n);",
          "422: JAS_DLLEXPORT int jas_stream_pad(jas_stream_t *stream, int n, int c);",
          "426: JAS_DLLEXPORT long jas_stream_length(jas_stream_t *stream);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "465: #ifdef __cplusplus",
          "466: }",
          "",
          "[Removed Lines]",
          "460: int jas_stream_fillbuf(jas_stream_t *stream, int getflag);",
          "461: int jas_stream_flushbuf(jas_stream_t *stream, int c);",
          "462: int jas_stream_getc_func(jas_stream_t *stream);",
          "463: int jas_stream_putc_func(jas_stream_t *stream, int c);",
          "",
          "[Added Lines]",
          "460: JAS_DLLEXPORT int jas_stream_fillbuf(jas_stream_t *stream, int getflag);",
          "461: JAS_DLLEXPORT int jas_stream_flushbuf(jas_stream_t *stream, int c);",
          "462: JAS_DLLEXPORT int jas_stream_getc_func(jas_stream_t *stream);",
          "463: JAS_DLLEXPORT int jas_stream_putc_func(jas_stream_t *stream, int c);",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_string.h||src/libjasper/include/jasper/jas_string.h": [
          "File: src/libjasper/include/jasper/jas_string.h -> src/libjasper/include/jasper/jas_string.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "93: #ifdef __cplusplus",
          "94: }",
          "",
          "[Removed Lines]",
          "91: char *jas_strdup(const char *);",
          "",
          "[Added Lines]",
          "91: JAS_DLLEXPORT char *jas_strdup(const char *);",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_tmr.h||src/libjasper/include/jasper/jas_tmr.h": [
          "File: src/libjasper/include/jasper/jas_tmr.h -> src/libjasper/include/jasper/jas_tmr.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "95: #endif",
          "101: #ifdef __cplusplus",
          "102: }",
          "",
          "[Removed Lines]",
          "97: void jas_tmr_start(jas_tmr_t *tmr);",
          "98: void jas_tmr_stop(jas_tmr_t *tmr);",
          "99: double jas_tmr_get(jas_tmr_t *tmr);",
          "",
          "[Added Lines]",
          "97: JAS_DLLEXPORT void jas_tmr_start(jas_tmr_t *tmr);",
          "98: JAS_DLLEXPORT void jas_tmr_stop(jas_tmr_t *tmr);",
          "99: JAS_DLLEXPORT double jas_tmr_get(jas_tmr_t *tmr);",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_tvp.h||src/libjasper/include/jasper/jas_tvp.h": [
          "File: src/libjasper/include/jasper/jas_tvp.h -> src/libjasper/include/jasper/jas_tvp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:   exists (i.e., the pointer is nonnull); otherwise, a pointer to a dummy",
          "125:   object is returned.  This is useful in some situations to avoid checking",
          "148: #ifdef __cplusplus",
          "149: }",
          "",
          "[Removed Lines]",
          "121: jas_taginfo_t *jas_taginfos_lookup(jas_taginfo_t *taginfos, const char *name);",
          "127: jas_taginfo_t *jas_taginfo_nonull(jas_taginfo_t *taginfo);",
          "134: jas_tvparser_t *jas_tvparser_create(const char *s);",
          "137: void jas_tvparser_destroy(jas_tvparser_t *tvparser);",
          "140: int jas_tvparser_next(jas_tvparser_t *tvparser);",
          "143: char *jas_tvparser_gettag(jas_tvparser_t *tvparser);",
          "146: char *jas_tvparser_getval(jas_tvparser_t *tvparser);",
          "",
          "[Added Lines]",
          "121: JAS_DLLEXPORT jas_taginfo_t *jas_taginfos_lookup(jas_taginfo_t *taginfos, const char *name);",
          "127: JAS_DLLEXPORT jas_taginfo_t *jas_taginfo_nonull(jas_taginfo_t *taginfo);",
          "134: JAS_DLLEXPORT jas_tvparser_t *jas_tvparser_create(const char *s);",
          "137: JAS_DLLEXPORT void jas_tvparser_destroy(jas_tvparser_t *tvparser);",
          "140: JAS_DLLEXPORT int jas_tvparser_next(jas_tvparser_t *tvparser);",
          "143: JAS_DLLEXPORT char *jas_tvparser_gettag(jas_tvparser_t *tvparser);",
          "146: JAS_DLLEXPORT char *jas_tvparser_getval(jas_tvparser_t *tvparser);",
          "",
          "---------------"
        ],
        "src/libjasper/include/jasper/jas_version.h||src/libjasper/include/jasper/jas_version.h": [
          "File: src/libjasper/include/jasper/jas_version.h -> src/libjasper/include/jasper/jas_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "112: const char *jas_getversion(void);",
          "",
          "[Added Lines]",
          "112: JAS_DLLEXPORT const char *jas_getversion(void);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b35a05635e56f554870ce85f64293a3868793f69",
      "candidate_info": {
        "commit_hash": "b35a05635e56f554870ce85f64293a3868793f69",
        "repo": "mdadams/jasper",
        "commit_url": "https://github.com/mdadams/jasper/commit/b35a05635e56f554870ce85f64293a3868793f69",
        "files": [
          "src/libjasper/base/jas_image.c"
        ],
        "message": "Fixed potential integer overflow problem.",
        "before_after_code_files": [
          "src/libjasper/base/jas_image.c||src/libjasper/base/jas_image.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/libjasper/base/jas_image.c||src/libjasper/base/jas_image.c"
          ],
          "candidate": [
            "src/libjasper/base/jas_image.c||src/libjasper/base/jas_image.c"
          ]
        }
      },
      "candidate_diff": {
        "src/libjasper/base/jas_image.c||src/libjasper/base/jas_image.c": [
          "File: src/libjasper/base/jas_image.c -> src/libjasper/base/jas_image.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "303:  jas_free(image);",
          "304: }",
          "309: {",
          "310:  jas_image_cmpt_t *cmpt;",
          "313:  if (!(cmpt = jas_malloc(sizeof(jas_image_cmpt_t)))) {",
          "315:  }",
          "317:  cmpt->type_ = JAS_IMAGE_CT_UNKNOWN;",
          "",
          "[Removed Lines]",
          "306: static jas_image_cmpt_t *jas_image_cmpt_create(uint_fast32_t tlx, uint_fast32_t tly,",
          "307:   uint_fast32_t hstep, uint_fast32_t vstep, uint_fast32_t width, uint_fast32_t",
          "308:   height, uint_fast16_t depth, bool sgnd, uint_fast32_t inmem)",
          "311:  long size;",
          "314:   return 0;",
          "",
          "[Added Lines]",
          "306: static jas_image_cmpt_t *jas_image_cmpt_create(uint_fast32_t tlx,",
          "307:   uint_fast32_t tly, uint_fast32_t hstep, uint_fast32_t vstep,",
          "308:   uint_fast32_t width, uint_fast32_t height, uint_fast16_t depth, bool sgnd,",
          "309:   uint_fast32_t inmem)",
          "312:  size_t size;",
          "315:   goto error;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "326:  cmpt->stream_ = 0;",
          "327:  cmpt->cps_ = (depth + 7) / 8;",
          "331:  if (!cmpt->stream_) {",
          "334:  }",
          "338:  if (jas_stream_seek(cmpt->stream_, size - 1, SEEK_SET) < 0 ||",
          "339:    jas_stream_putc(cmpt->stream_, 0) == EOF ||",
          "340:    jas_stream_seek(cmpt->stream_, 0, SEEK_SET) < 0) {",
          "343:  }",
          "345:  return cmpt;",
          "346: }",
          "348: static void jas_image_cmpt_destroy(jas_image_cmpt_t *cmpt)",
          "",
          "[Removed Lines]",
          "329:  size = cmpt->width_ * cmpt->height_ * cmpt->cps_;",
          "330:  cmpt->stream_ = (inmem) ? jas_stream_memopen(0, size) : jas_stream_tmpfile();",
          "332:   jas_image_cmpt_destroy(cmpt);",
          "333:   return 0;",
          "341:   jas_image_cmpt_destroy(cmpt);",
          "342:   return 0;",
          "",
          "[Added Lines]",
          "331:  if (!jas_safe_size_mul(cmpt->width_, cmpt->height_, &size) ||",
          "332:    !jas_safe_size_mul(size, cmpt->cps_, &size)) {",
          "333:   goto error;",
          "334:  }",
          "335:  cmpt->stream_ = (inmem) ? jas_stream_memopen(0, size) :",
          "336:    jas_stream_tmpfile();",
          "338:   goto error;",
          "347:   goto error;",
          "352: error:",
          "353:  if (cmpt) {",
          "354:   jas_image_cmpt_destroy(cmpt);",
          "355:  }",
          "356:  return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}