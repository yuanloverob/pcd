{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c33d3174b88b86a7fc4c2f48f361b794206cb8aa",
      "candidate_info": {
        "commit_hash": "c33d3174b88b86a7fc4c2f48f361b794206cb8aa",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c33d3174b88b86a7fc4c2f48f361b794206cb8aa",
        "files": [
          "src/node.cc"
        ],
        "message": "node: un-revert 9a6012e\n\nThe crashes in debug mode after adding Locker are *not* caused by\nLocker. Locker is merely exposing issues that already existed. Some of\nthese issues have since been fixed in 70635753.\n\nThis reverts commit 407181538b5193f6810bf06a2056a200265c0e93.\nThis reapplies commit 9a6012edd9330296b7476bc6b7fbda2cd5c8165d.\n\nConflicts:\n\tsrc/node.cc",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2859:   Init(argc, argv_copy);",
          "2886: #ifndef NDEBUG",
          "2889:   V8::Dispose();",
          "2890: #endif  // NDEBUG",
          "",
          "[Removed Lines]",
          "2861:   v8::V8::Initialize();",
          "2862:   v8::HandleScope handle_scope;",
          "2865:   Persistent<v8::Context> context = v8::Context::New();",
          "2866:   v8::Context::Scope context_scope(context);",
          "2869:   Handle<Object> process_l = SetupProcessObject(argc, argv);",
          "2870:   v8_typed_array::AttachBindings(context->Global());",
          "2874:   Load(process_l);",
          "2881:   uv_run(uv_default_loop());",
          "2883:   EmitExit(process_l);",
          "2884:   RunAtExit();",
          "2888:   context.Dispose();",
          "",
          "[Added Lines]",
          "2861:   V8::Initialize();",
          "2862:   {",
          "2863:     Locker locker;",
          "2864:     HandleScope handle_scope;",
          "2867:     Persistent<Context> context = Context::New();",
          "2868:     Context::Scope context_scope(context);",
          "2871:     Handle<Object> process_l = SetupProcessObject(argc, argv);",
          "2872:     v8_typed_array::AttachBindings(context->Global());",
          "2876:     Load(process_l);",
          "2883:     uv_run(uv_default_loop());",
          "2885:     EmitExit(process_l);",
          "2886:     RunAtExit();",
          "2889:     context.Dispose();",
          "2890: #endif",
          "2891:   }",
          "2893: #ifndef NDEBUG",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03077db45de5590a1f5651ec86abc70e4fd8a1d4",
      "candidate_info": {
        "commit_hash": "03077db45de5590a1f5651ec86abc70e4fd8a1d4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/03077db45de5590a1f5651ec86abc70e4fd8a1d4",
        "files": [
          "test/simple/test-http-no-content-length.js"
        ],
        "message": "test: HTTP responses with no content-length\n\nRefs: #2952.",
        "before_after_code_files": [
          "test/simple/test-http-no-content-length.js||test/simple/test-http-no-content-length.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-http-no-content-length.js||test/simple/test-http-no-content-length.js": [
          "File: test/simple/test-http-no-content-length.js -> test/simple/test-http-no-content-length.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var net = require('net');",
          "25: var http = require('http');",
          "27: var body = '';",
          "29: var server = net.createServer(function(socket) {",
          "31:   socket.end('HTTP/1.1 200 ok\\r\\n\\r\\nHello');",
          "32: }).listen(common.PORT, function() {",
          "33:   var req = http.get({port: common.PORT}, function(res) {",
          "34:     res.setEncoding('utf8');",
          "35:     res.on('data', function(chunk) {",
          "36:       body += chunk;",
          "37:     });",
          "38:     res.on('end', function() {",
          "39:       server.close();",
          "40:     });",
          "41:   });",
          "42: });",
          "44: process.on('exit', function() {",
          "45:   assert.equal(body, 'Hello');",
          "46: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a38fd6056c2c6d4e2266a65fdefdbdc8dcbe4dee",
      "candidate_info": {
        "commit_hash": "a38fd6056c2c6d4e2266a65fdefdbdc8dcbe4dee",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a38fd6056c2c6d4e2266a65fdefdbdc8dcbe4dee",
        "files": [
          "lib/dgram.js",
          "src/udp_wrap.cc",
          "test/simple/test-dgram-multicast-multi-process.js"
        ],
        "message": "dgram: reintroduce addMembership() and dropMembership()\n\nRemoved during the early stages of node 0.5 refactoring to libuv.",
        "before_after_code_files": [
          "lib/dgram.js||lidgram.js",
          "src/udp_wrap.cc||src/udp_wrap.cc",
          "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/dgram.js||lidgram.js": [
          "File: lib/dgram.js -> lidgram.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "245: Socket.prototype.addMembership = function(multicastAddress,",
          "249: };",
          "252: Socket.prototype.dropMembership = function(multicastAddress,",
          "256: };",
          "",
          "[Removed Lines]",
          "246:                                           multicastInterface) {",
          "248:   throw new Error('not yet implemented');",
          "253:                                            multicastInterface) {",
          "255:   throw new Error('not yet implemented');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/udp_wrap.cc||src/udp_wrap.cc": [
          "File: src/udp_wrap.cc -> src/udp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:   static Handle<Value> RecvStart(const Arguments& args);",
          "92:   static Handle<Value> RecvStop(const Arguments& args);",
          "93:   static Handle<Value> GetSockName(const Arguments& args);",
          "95: private:",
          "96:   static inline char* NewSlab(v8::Handle<v8::Object> global, v8::Handle<v8::Object> wrap_obj);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:   static Handle<Value> AddMembership(const Arguments& args);",
          "95:   static Handle<Value> DropMembership(const Arguments& args);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "101:   static Handle<Value> DoBind(const Arguments& args, int family);",
          "102:   static Handle<Value> DoSend(const Arguments& args, int family);",
          "104:   static uv_buf_t OnAlloc(uv_handle_t* handle, size_t suggested_size);",
          "105:   static void OnSend(uv_udp_send_t* req, int status);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:   static Handle<Value> SetMembership(const Arguments& args,",
          "106:                                      uv_membership membership);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "147:   NODE_SET_PROTOTYPE_METHOD(t, \"recvStart\", RecvStart);",
          "148:   NODE_SET_PROTOTYPE_METHOD(t, \"recvStop\", RecvStop);",
          "149:   NODE_SET_PROTOTYPE_METHOD(t, \"getsockname\", GetSockName);",
          "151:   target->Set(String::NewSymbol(\"UDP\"),",
          "152:               Persistent<FunctionTemplate>::New(t)->GetFunction());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "154:   NODE_SET_PROTOTYPE_METHOD(t, \"addMembership\", AddMembership);",
          "155:   NODE_SET_PROTOTYPE_METHOD(t, \"dropMembership\", DropMembership);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "204: }",
          "207: Handle<Value> UDPWrap::DoSend(const Arguments& args, int family) {",
          "208:   HandleScope scope;",
          "209:   int r;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213: Handle<Value> UDPWrap::SetMembership(const Arguments& args,",
          "214:                                      uv_membership membership) {",
          "215:   HandleScope scope;",
          "216:   UNWRAP",
          "218:   assert(args.Length() == 2);",
          "220:   String::Utf8Value address(args[0]->ToString());",
          "221:   String::Utf8Value interface(args[1]->ToString());",
          "223:   const char* interface_cstr = *interface;",
          "224:   if (args[1]->IsUndefined() || args[1]->IsNull()) {",
          "225:       interface_cstr = NULL;",
          "226:   }",
          "228:   int r = uv_udp_set_membership(&wrap->handle_, *address, interface_cstr,",
          "229:                                 membership);",
          "231:   if (r)",
          "232:     SetErrno(uv_last_error(uv_default_loop()));",
          "234:   return scope.Close(Integer::New(r));",
          "235: }",
          "238: Handle<Value> UDPWrap::AddMembership(const Arguments& args) {",
          "239:   return SetMembership(args, UV_JOIN_GROUP);",
          "240: }",
          "243: Handle<Value> UDPWrap::DropMembership(const Arguments& args) {",
          "244:   return SetMembership(args, UV_LEAVE_GROUP);",
          "245: }",
          "",
          "---------------"
        ],
        "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js": [
          "File: test/simple/test-dgram-multicast-multi-process.js -> test/simple/test-dgram-multicast-multi-process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common'),",
          "23:     assert = require('assert'),",
          "24:     cluster = require('cluster'),",
          "25:     dgram = require('dgram'),",
          "26:     util = require('util'),",
          "27:     assert = require('assert'),",
          "28:     Buffer = require('buffer').Buffer,",
          "29:     LOCAL_BROADCAST_HOST = '224.0.0.1',",
          "30:     messages = [",
          "31:       new Buffer('First message to send'),",
          "32:       new Buffer('Second message to send'),",
          "33:       new Buffer('Third message to send'),",
          "34:       new Buffer('Fourth message to send')",
          "35:     ];",
          "37: if (cluster.isMaster) {",
          "38:   var workers = {},",
          "39:     listeners = 3,",
          "40:     listening = 0,",
          "41:     i = 0,",
          "42:     done = 0;",
          "45:   for (var x = 0; x < listeners; x++) {",
          "46:     (function () {",
          "47:       var worker = cluster.fork();",
          "48:       workers[worker.pid] = worker;",
          "50:       worker.messagesReceived = [];",
          "52:       worker.on('message', function (msg) {",
          "53:         if (msg.listening) {",
          "54:           listening += 1;",
          "56:           if (listening === listeners) {",
          "58:             sendSocket.sendNext();",
          "59:           }",
          "60:         }",
          "61:         else if (msg.message) {",
          "62:           worker.messagesReceived.push(msg.message);",
          "64:           if (worker.messagesReceived.length === messages.length) {",
          "65:             done += 1;",
          "66:             console.error('%d received %d messages total.', worker.pid,",
          "67:                     worker.messagesReceived.length);",
          "68:           }",
          "70:           if (done === listeners) {",
          "71:             console.error('All workers have received the required number of'",
          "72:                     + 'messages. Will now compare.');",
          "74:             Object.keys(workers).forEach(function (pid) {",
          "75:               var worker = workers[pid];",
          "77:               var count = 0;",
          "79:               worker.messagesReceived.forEach(function(buf) {",
          "80:                 for (var i = 0; i < messages.length; ++i) {",
          "81:                   if (buf.toString() === messages[i].toString()) {",
          "82:                     count++;",
          "83:                     break;",
          "84:                   }",
          "85:                 }",
          "86:               });",
          "88:               console.error('%d received %d matching messges.', worker.pid",
          "89:                     , count);",
          "91:               assert.equal(count, messages.length",
          "92:                 ,'A worker received an invalid multicast message');",
          "93:             });",
          "94:           }",
          "95:         }",
          "96:       });",
          "97:     })(x);",
          "98:   }",
          "100:   var sendSocket = dgram.createSocket('udp4');",
          "106:   sendSocket.on('close', function() {",
          "107:     console.error('sendSocket closed');",
          "108:   });",
          "110:   sendSocket.sendNext = function() {",
          "111:     var buf = messages[i++];",
          "113:     if (!buf) {",
          "114:       try { sendSocket.close(); } catch (e) {}",
          "115:       return;",
          "116:     }",
          "118:     sendSocket.send(buf, 0, buf.length,",
          "119:                 common.PORT, LOCAL_BROADCAST_HOST, function(err) {",
          "120:       if (err) throw err;",
          "121:       console.error('sent %s to %s', util.inspect(buf.toString()),",
          "122:                 LOCAL_BROADCAST_HOST + common.PORT);",
          "123:       process.nextTick(sendSocket.sendNext);",
          "124:     });",
          "125:   };",
          "126: }",
          "128: if (!cluster.isMaster) {",
          "129:   var receivedMessages = [];",
          "130:   var listenSocket = dgram.createSocket('udp4');",
          "132:   listenSocket.addMembership(LOCAL_BROADCAST_HOST);",
          "134:   listenSocket.on('message', function(buf, rinfo) {",
          "135:     console.error('%s received %s from %j', process.pid",
          "136:                 ,util.inspect(buf.toString()), rinfo);",
          "138:     receivedMessages.push(buf);",
          "140:     process.send({ message : buf.toString() });",
          "142:     if (receivedMessages.length == messages.length) {",
          "143:       listenSocket.dropMembership(LOCAL_BROADCAST_HOST);",
          "144:       process.nextTick(function() { // TODO should be changed to below.",
          "146:         listenSocket.close();",
          "147:       });",
          "148:     }",
          "149:   });",
          "151:   listenSocket.on('close', function() {",
          "152:     process.exit();",
          "153:   });",
          "155:   listenSocket.on('listening', function() {",
          "156:     process.send({ listening : true });",
          "157:   });",
          "159:   listenSocket.bind(common.PORT);",
          "160: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "34b0b6a6133ef70878c426af0812308869b5493b",
      "candidate_info": {
        "commit_hash": "34b0b6a6133ef70878c426af0812308869b5493b",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/34b0b6a6133ef70878c426af0812308869b5493b",
        "files": [
          "test/simple/test-bad-unicode.js"
        ],
        "message": "test-bad-unicode: update to reflect V8 3.11 behavior",
        "before_after_code_files": [
          "test/simple/test-bad-unicode.js||test/simple/test-bad-unicode.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-bad-unicode.js||test/simple/test-bad-unicode.js": [
          "File: test/simple/test-bad-unicode.js -> test/simple/test-bad-unicode.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "21: var assert = require('assert');",
          "22: var bad_unicode = '\\uc/ef';",
          "24: console.log(bad_unicode);",
          "26: assert.equal(bad_unicode, \"uc/ef\");",
          "",
          "[Added Lines]",
          "22: var assert = require('assert'),",
          "23:     exception = null;",
          "25: try {",
          "26:   eval('\"\\\\uc/ef\"');",
          "27: } catch (e) {",
          "28:   exception = e;",
          "29: }",
          "31: assert(exception instanceof SyntaxError);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "057b80611f977789f6c1334fdf3680c105af364e",
      "candidate_info": {
        "commit_hash": "057b80611f977789f6c1334fdf3680c105af364e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/057b80611f977789f6c1334fdf3680c105af364e",
        "files": [
          "deps/uv/config-mingw.mk",
          "deps/uv/config-unix.mk",
          "deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h",
          "deps/uv/src/fs-poll.c",
          "deps/uv/src/unix/core.c",
          "deps/uv/src/unix/linux/syscalls.c",
          "deps/uv/src/unix/sunos.c",
          "deps/uv/src/uv-common.h",
          "deps/uv/src/win/handle-inl.h",
          "deps/uv/src/win/handle.c",
          "deps/uv/src/win/internal.h",
          "deps/uv/test/test-fs-poll.c",
          "deps/uv/test/test-hrtime.c",
          "deps/uv/test/test-list.h",
          "deps/uv/test/test-ref.c",
          "deps/uv/uv.gyp"
        ],
        "message": "uv: upgrade to 61a6e06e",
        "before_after_code_files": [
          "deps/uv/config-mingw.mk||deps/uv/config-mingw.mk",
          "deps/uv/config-unix.mk||deps/uv/config-unix.mk",
          "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/fs-poll.c||deps/uv/src/fs-poll.c",
          "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c",
          "deps/uv/src/unix/linux/syscalls.c||deps/uv/src/unix/linux/syscalls.c",
          "deps/uv/src/unix/sunos.c||deps/uv/src/unix/sunos.c",
          "deps/uv/src/uv-common.h||deps/uv/src/uv-common.h",
          "deps/uv/src/win/handle-inl.h||deps/uv/src/win/handle-inl.h",
          "deps/uv/src/win/handle.c||deps/uv/src/win/handle.c",
          "deps/uv/src/win/internal.h||deps/uv/src/win/internal.h",
          "deps/uv/test/test-fs-poll.c||deps/uv/test/test-fs-poll.c",
          "deps/uv/test/test-hrtime.c||deps/uv/test/test-hrtime.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/test/test-ref.c||deps/uv/test/test-ref.c",
          "deps/uv/uv.gyp||deps/uv/uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/config-mingw.mk||deps/uv/config-mingw.mk": [
          "File: deps/uv/config-mingw.mk -> deps/uv/config-mingw.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: RUNNER_LIBS=-lws2_32 -lpsapi -liphlpapi",
          "38: RUNNER_SRC=test/runner-win.c",
          "43: src/%.o: src/%.c include/uv.h include/uv-private/uv-win.h",
          "44:  $(CC) $(CFLAGS) -c $< -o $@",
          "",
          "[Removed Lines]",
          "40: uv.a: $(WIN_OBJS) src/cares.o src/uv-common.o $(CARES_OBJS)",
          "41:  $(AR) rcs uv.a $(WIN_OBJS) src/cares.o src/uv-common.o $(CARES_OBJS)",
          "",
          "[Added Lines]",
          "40: uv.a: $(WIN_OBJS) src/cares.o src/fs-poll.o src/uv-common.o $(CARES_OBJS)",
          "41:  $(AR) rcs uv.a $^",
          "",
          "---------------"
        ],
        "deps/uv/config-unix.mk||deps/uv/config-unix.mk": [
          "File: deps/uv/config-unix.mk -> deps/uv/config-unix.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "129: RUNNER_LIBS=",
          "130: RUNNER_SRC=test/runner-unix.c",
          "135: src/%.o: src/%.c include/uv.h include/uv-private/uv-unix.h",
          "136:  $(CC) $(CSTDFLAG) $(CPPFLAGS) $(CFLAGS) -c $< -o $@",
          "",
          "[Removed Lines]",
          "132: uv.a: $(OBJS) src/cares.o src/uv-common.o src/unix/ev/ev.o src/unix/uv-eio.o src/unix/eio/eio.o $(CARES_OBJS)",
          "133:  $(AR) rcs uv.a $(OBJS) src/cares.o src/uv-common.o src/unix/uv-eio.o src/unix/ev/ev.o src/unix/eio/eio.o $(CARES_OBJS)",
          "",
          "[Added Lines]",
          "132: uv.a: $(OBJS) src/cares.o src/fs-poll.o src/uv-common.o src/unix/ev/ev.o src/unix/uv-eio.o src/unix/eio/eio.o $(CARES_OBJS)",
          "133:  $(AR) rcs uv.a $^",
          "",
          "---------------"
        ],
        "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h": [
          "File: deps/uv/include/uv-private/uv-unix.h -> deps/uv/include/uv-private/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #include \"eio.h\"",
          "30: #include <sys/types.h>",
          "31: #include <sys/socket.h>",
          "32: #include <netinet/in.h>",
          "33: #include <netinet/tcp.h>",
          "34: #include <arpa/inet.h>",
          "35: #include <netdb.h>",
          "37: #include <termios.h>",
          "39: #include <semaphore.h>",
          "40: #include <pthread.h>",
          "",
          "[Removed Lines]",
          "36: #include <pwd.h>",
          "",
          "[Added Lines]",
          "31: #include <sys/stat.h>",
          "32: #include <fcntl.h>",
          "41: #include <pwd.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56: typedef int uv_os_sock_t;",
          "58: #define UV_ONCE_INIT PTHREAD_ONCE_INIT",
          "60: typedef pthread_once_t uv_once_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: typedef struct stat uv_statbuf_t;",
          "",
          "---------------"
        ],
        "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h": [
          "File: deps/uv/include/uv-private/uv-win.h -> deps/uv/include/uv-private/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "166: typedef int uv_file;",
          "168: typedef SOCKET uv_os_sock_t;",
          "170: typedef HANDLE uv_thread_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168: typedef struct _stati64 uv_statbuf_t;",
          "",
          "---------------"
        ],
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "140:   XX(ASYNC, async)              \\",
          "141:   XX(CHECK, check)              \\",
          "142:   XX(FS_EVENT, fs_event)        \\",
          "143:   XX(IDLE, idle)                \\",
          "144:   XX(NAMED_PIPE, pipe)          \\",
          "145:   XX(POLL, poll)                \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "143:   XX(FS_POLL, fs_poll)          \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "209: typedef struct uv_fs_s uv_fs_t;",
          "211: typedef struct uv_fs_event_s uv_fs_event_t;",
          "212: typedef struct uv_work_s uv_work_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213: typedef struct uv_fs_poll_s uv_fs_poll_t;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "312: typedef void (*uv_fs_event_cb)(uv_fs_event_t* handle, const char* filename,",
          "313:     int events, int status);",
          "315: typedef enum {",
          "316:   UV_LEAVE_GROUP = 0,",
          "317:   UV_JOIN_GROUP",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "317: typedef void (*uv_fs_poll_cb)(uv_fs_poll_t* handle,",
          "318:                               int status,",
          "319:                               uv_statbuf_t* prev,",
          "320:                               uv_statbuf_t* curr);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1510: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1523: struct uv_fs_poll_s {",
          "1524:   UV_HANDLE_FIELDS",
          "1527:   unsigned int interval;",
          "1528:   uint64_t start_time;",
          "1529:   char* path;",
          "1530:   uv_fs_poll_cb poll_cb;",
          "1531:   uv_timer_t timer_handle;",
          "1532:   uv_fs_t* fs_req;",
          "1533:   uv_statbuf_t statbuf;",
          "1534: };",
          "1536: UV_EXTERN int uv_fs_poll_init(uv_loop_t* loop, uv_fs_poll_t* handle);",
          "1553: UV_EXTERN int uv_fs_poll_start(uv_fs_poll_t* handle,",
          "1554:                                uv_fs_poll_cb poll_cb,",
          "1555:                                const char* path,",
          "1556:                                unsigned int interval);",
          "1558: UV_EXTERN int uv_fs_poll_stop(uv_fs_poll_t* handle);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1685: struct uv_counters_s {",
          "1686:   uint64_t eio_init;",
          "1688:   uint64_t handle_init;",
          "1692:   uint64_t pipe_init;",
          "1694:   uint64_t poll_init;",
          "1695:   uint64_t prepare_init;",
          "1700:   uint64_t process_init;",
          "1702: };",
          "",
          "[Removed Lines]",
          "1687:   uint64_t req_init;",
          "1689:   uint64_t stream_init;",
          "1690:   uint64_t tcp_init;",
          "1691:   uint64_t udp_init;",
          "1693:   uint64_t tty_init;",
          "1696:   uint64_t check_init;",
          "1697:   uint64_t idle_init;",
          "1698:   uint64_t async_init;",
          "1699:   uint64_t timer_init;",
          "1701:   uint64_t fs_event_init;",
          "",
          "[Added Lines]",
          "1733:   uint64_t async_init;",
          "1734:   uint64_t check_init;",
          "1736:   uint64_t fs_event_init;",
          "1737:   uint64_t fs_poll_init;",
          "1739:   uint64_t idle_init;",
          "1744:   uint64_t req_init;",
          "1745:   uint64_t stream_init;",
          "1746:   uint64_t tcp_init;",
          "1747:   uint64_t timer_init;",
          "1748:   uint64_t tty_init;",
          "1749:   uint64_t udp_init;",
          "",
          "---------------"
        ],
        "deps/uv/src/fs-poll.c||deps/uv/src/fs-poll.c": [
          "File: deps/uv/src/fs-poll.c -> deps/uv/src/fs-poll.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"uv.h\"",
          "23: #include \"uv-common.h\"",
          "25: #include <assert.h>",
          "26: #include <stdlib.h>",
          "27: #include <string.h>",
          "29: static int statbuf_eq(const uv_statbuf_t* a, const uv_statbuf_t* b);",
          "30: static void timer_cb(uv_timer_t* timer, int status);",
          "31: static void poll_cb(uv_fs_t* req);",
          "34: int uv_fs_poll_init(uv_loop_t* loop, uv_fs_poll_t* handle) {",
          "36:   uv__handle_init(loop, (uv_handle_t*)handle, UV_FS_POLL);",
          "37:   loop->counters.fs_poll_init++;",
          "39:   if (uv_timer_init(loop, &handle->timer_handle))",
          "40:     return -1;",
          "42:   handle->timer_handle.flags |= UV__HANDLE_INTERNAL;",
          "43:   uv__handle_unref(&handle->timer_handle);",
          "45:   return 0;",
          "46: }",
          "49: int uv_fs_poll_start(uv_fs_poll_t* handle,",
          "50:                      uv_fs_poll_cb cb,",
          "51:                      const char* path,",
          "52:                      unsigned int interval) {",
          "53:   uv_fs_t* req;",
          "54:   size_t len;",
          "56:   if (uv__is_active(handle))",
          "57:     return 0;",
          "59:   len = strlen(path) + 1;",
          "60:   req = malloc(sizeof(*req) + len);",
          "62:   if (req == NULL)",
          "63:     return uv__set_artificial_error(handle->loop, UV_ENOMEM);",
          "65:   req->data = handle;",
          "66:   handle->path = memcpy(req + 1, path, len);",
          "67:   handle->fs_req = req;",
          "68:   handle->poll_cb = cb;",
          "69:   handle->interval = interval ? interval : 1;",
          "70:   handle->start_time = uv_now(handle->loop);",
          "71:   handle->busy_polling = 0;",
          "72:   memset(&handle->statbuf, 0, sizeof(handle->statbuf));",
          "74:   if (uv_fs_stat(handle->loop, handle->fs_req, handle->path, poll_cb))",
          "75:     abort();",
          "77:   uv__handle_start(handle);",
          "79:   return 0;",
          "80: }",
          "83: int uv_fs_poll_stop(uv_fs_poll_t* handle) {",
          "84:   if (!uv__is_active(handle))",
          "85:     return 0;",
          "94:   if (handle->fs_req->data)",
          "95:     handle->fs_req->data = NULL;",
          "96:   else",
          "97:     free(handle->fs_req);",
          "99:   handle->fs_req = NULL;",
          "100:   handle->path = NULL;",
          "102:   uv_timer_stop(&handle->timer_handle);",
          "103:   uv__handle_stop(handle);",
          "105:   return 0;",
          "106: }",
          "109: void uv__fs_poll_close(uv_fs_poll_t* handle) {",
          "110:   uv_fs_poll_stop(handle);",
          "111:   uv_close((uv_handle_t*)&handle->timer_handle, NULL);",
          "112: }",
          "115: static void timer_cb(uv_timer_t* timer, int status) {",
          "116:   uv_fs_poll_t* handle;",
          "118:   handle = container_of(timer, uv_fs_poll_t, timer_handle);",
          "119:   handle->start_time = uv_now(handle->loop);",
          "120:   handle->fs_req->data = handle;",
          "122:   if (uv_fs_stat(handle->loop, handle->fs_req, handle->path, poll_cb))",
          "123:     abort();",
          "125:   assert(uv__is_active(handle));",
          "126: }",
          "129: static void poll_cb(uv_fs_t* req) {",
          "130:   uv_statbuf_t* statbuf;",
          "131:   uv_fs_poll_t* handle;",
          "132:   uint64_t interval;",
          "134:   handle = req->data;",
          "137:     goto out;",
          "139:   assert(req == handle->fs_req);",
          "141:   if (req->result != 0) {",
          "142:     if (handle->busy_polling != -req->errorno) {",
          "143:       uv__set_artificial_error(handle->loop, req->errorno);",
          "144:       handle->poll_cb(handle, -1, NULL, NULL);",
          "145:       handle->busy_polling = -req->errorno;",
          "146:     }",
          "147:     goto out;",
          "148:   }",
          "150:   statbuf = req->ptr;",
          "152:   if (handle->busy_polling != 0)",
          "153:     if (handle->busy_polling < 0 || !statbuf_eq(&handle->statbuf, statbuf))",
          "154:       handle->poll_cb(handle, 0, &handle->statbuf, statbuf);",
          "156:   handle->statbuf = *statbuf;",
          "157:   handle->busy_polling = 1;",
          "159: out:",
          "160:   uv_fs_req_cleanup(req);",
          "163:     free(req);",
          "164:     return;",
          "165:   }",
          "170:   interval = handle->interval;",
          "171:   interval -= (uv_now(handle->loop) - handle->start_time) % interval;",
          "173:   if (uv_timer_start(&handle->timer_handle, timer_cb, interval, 0))",
          "174:     abort();",
          "175: }",
          "178: static int statbuf_eq(const uv_statbuf_t* a, const uv_statbuf_t* b) {",
          "179: #ifdef _WIN32",
          "180:   return a->st_mtime == b->st_mtime",
          "181:       && a->st_size == b->st_size",
          "182:       && a->st_mode == b->st_mode;",
          "183: #else",
          "186: # if __linux__",
          "188:   if (a->st_ctim.tv_nsec != b->st_ctim.tv_nsec) return 0;",
          "189:   if (a->st_mtim.tv_nsec != b->st_mtim.tv_nsec) return 0;",
          "190: #  else",
          "191:   if (a->st_ctimensec != b->st_ctimensec) return 0;",
          "192:   if (a->st_mtimensec != b->st_mtimensec) return 0;",
          "193: #  endif",
          "194: # endif",
          "197: # if __APPLE__",
          "198: #  if !defined(_POSIX_C_SOURCE) || defined(_DARWIN_C_SOURCE)",
          "199:   if (a->st_ctimespec.tv_nsec != b->st_ctimespec.tv_nsec) return 0;",
          "200:   if (a->st_mtimespec.tv_nsec != b->st_mtimespec.tv_nsec) return 0;",
          "201: #  else",
          "202:   if (a->st_ctimensec != b->st_ctimensec) return 0;",
          "203:   if (a->st_mtimensec != b->st_mtimensec) return 0;",
          "204: #  endif",
          "205: # endif",
          "211:   return a->st_ctime == b->st_ctime",
          "212:       && a->st_mtime == b->st_mtime",
          "213:       && a->st_size == b->st_size",
          "214:       && a->st_mode == b->st_mode",
          "215:       && a->st_uid == b->st_uid",
          "216:       && a->st_gid == b->st_gid",
          "217:       && a->st_ino == b->st_ino",
          "218:       && a->st_dev == b->st_dev;",
          "219: #endif",
          "220: }",
          "223: #ifdef _WIN32",
          "225: #include \"win/internal.h\"",
          "226: #include \"win/handle-inl.h\"",
          "228: void uv__fs_poll_endgame(uv_loop_t* loop, uv_fs_poll_t* handle) {",
          "229:   assert(handle->flags & UV_HANDLE_CLOSING);",
          "230:   assert(!(handle->flags & UV_HANDLE_CLOSED));",
          "231:   uv__handle_stop(handle);",
          "232:   uv__handle_close(handle);",
          "233: }",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c": [
          "File: deps/uv/src/unix/core.c -> deps/uv/src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:     uv__poll_close((uv_poll_t*)handle);",
          "110:     break;",
          "112:   default:",
          "113:     assert(0);",
          "114:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:   case UV_FS_POLL:",
          "113:     uv__fs_poll_close((uv_fs_poll_t*)handle);",
          "114:     break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:     case UV_ASYNC:",
          "134:     case UV_TIMER:",
          "135:     case UV_PROCESS:",
          "136:       break;",
          "138:     case UV_NAMED_PIPE:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:     case UV_FS_EVENT:",
          "141:     case UV_FS_POLL:",
          "142:     case UV_POLL:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "148:       uv__udp_finish_close((uv_udp_t*)handle);",
          "149:       break;",
          "157:     default:",
          "158:       assert(0);",
          "159:       break;",
          "",
          "[Removed Lines]",
          "151:     case UV_FS_EVENT:",
          "152:       break;",
          "154:     case UV_POLL:",
          "155:       break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/linux/syscalls.c||deps/uv/src/unix/linux/syscalls.c": [
          "File: deps/uv/src/unix/linux/syscalls.c -> deps/uv/src/unix/linux/syscalls.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "135: # elif __i386__",
          "136: #  define __NR_sendmmsg 345",
          "137: # elif __arm__",
          "139: # endif",
          "",
          "[Removed Lines]",
          "138: #  define __NR_recvmmsg (UV_SYSCALL_BASE + 374)",
          "",
          "[Added Lines]",
          "138: #  define __NR_sendmmsg (UV_SYSCALL_BASE + 374)",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/sunos.c||deps/uv/src/unix/sunos.c": [
          "File: deps/uv/src/unix/sunos.c -> deps/uv/src/unix/sunos.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:   free(handle->filename);",
          "214:   handle->filename = NULL;",
          "215:   handle->fo.fo_name = NULL;",
          "216: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:   uv__handle_stop(handle);",
          "",
          "---------------"
        ],
        "deps/uv/src/uv-common.h||deps/uv/src/uv-common.h": [
          "File: deps/uv/src/uv-common.h -> deps/uv/src/uv-common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:                     struct sockaddr_in6 address,",
          "87:                     uv_connect_cb cb);",
          "90: UNUSED static int uv__has_active_reqs(const uv_loop_t* loop) {",
          "91:   return !ngx_queue_empty(&loop->active_reqs);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89: void uv__fs_poll_close(uv_fs_poll_t* handle);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/handle-inl.h||deps/uv/src/win/handle-inl.h": [
          "File: deps/uv/src/win/handle-inl.h -> deps/uv/src/win/handle-inl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:         uv_fs_event_endgame(loop, (uv_fs_event_t*) handle);",
          "132:         break;",
          "134:       default:",
          "135:         assert(0);",
          "136:         break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:       case UV_FS_POLL:",
          "135:         uv__fs_poll_endgame(loop, (uv_fs_poll_t*) handle);",
          "136:         break;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/handle.c||deps/uv/src/win/handle.c": [
          "File: deps/uv/src/win/handle.c -> deps/uv/src/win/handle.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:       uv_fs_event_close(loop, (uv_fs_event_t*) handle);",
          "133:       return;",
          "135:     default:",
          "137:       abort();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:     case UV_FS_POLL:",
          "136:       uv__fs_poll_close((uv_fs_poll_t*) handle);",
          "137:       uv__handle_start(handle);",
          "138:       uv_want_endgame(loop, handle);",
          "139:       return;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/internal.h||deps/uv/src/win/internal.h": [
          "File: deps/uv/src/win/internal.h -> deps/uv/src/win/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "268: void uv_fs_event_endgame(uv_loop_t* loop, uv_fs_event_t* handle);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "274: void uv__fs_poll_endgame(uv_loop_t* loop, uv_fs_poll_t* handle);",
          "",
          "---------------"
        ],
        "deps/uv/test/test-fs-poll.c||deps/uv/test/test-fs-poll.c": [
          "File: deps/uv/test/test-fs-poll.c -> deps/uv/test/test-fs-poll.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"uv.h\"",
          "23: #include \"task.h\"",
          "25: #include <string.h>",
          "27: #define FIXTURE \"testfile\"",
          "29: static void timer_cb(uv_timer_t* handle, int status);",
          "30: static void close_cb(uv_handle_t* handle);",
          "31: static void poll_cb(uv_fs_poll_t* handle,",
          "32:                     int status,",
          "33:                     uv_statbuf_t* prev,",
          "34:                     uv_statbuf_t* curr);",
          "36: static uv_fs_poll_t poll_handle;",
          "37: static uv_timer_t timer_handle;",
          "38: static uv_loop_t* loop;",
          "40: static int poll_cb_called;",
          "41: static int timer_cb_called;",
          "42: static int close_cb_called;",
          "45: static void touch_file(const char* path) {",
          "46:   static int count;",
          "47:   FILE* fp;",
          "48:   int i;",
          "50:   ASSERT((fp = fopen(FIXTURE, \"w+\")));",
          "55:   i = ++count;",
          "57:   while (i--)",
          "58:     fputc('*', fp);",
          "60:   fclose(fp);",
          "61: }",
          "64: static void close_cb(uv_handle_t* handle) {",
          "65:   close_cb_called++;",
          "66: }",
          "69: static void timer_cb(uv_timer_t* handle, int status) {",
          "70:   touch_file(FIXTURE);",
          "71:   timer_cb_called++;",
          "72: }",
          "75: static void poll_cb(uv_fs_poll_t* handle,",
          "76:                     int status,",
          "77:                     uv_statbuf_t* prev,",
          "78:                     uv_statbuf_t* curr) {",
          "79:   ASSERT(handle == &poll_handle);",
          "80:   ASSERT(uv_is_active((uv_handle_t*)handle));",
          "82:   switch (poll_cb_called++) {",
          "83:   case 0:",
          "84:     ASSERT(status == -1);",
          "85:     ASSERT(prev == NULL);",
          "86:     ASSERT(curr == NULL);",
          "87:     ASSERT(uv_last_error(loop).code == UV_ENOENT);",
          "88:     touch_file(FIXTURE);",
          "89:     break;",
          "91:   case 1:",
          "92:     ASSERT(status == 0);",
          "93:     ASSERT(prev != NULL);",
          "94:     ASSERT(curr != NULL);",
          "95:     {",
          "96:       uv_statbuf_t buf;",
          "97:       memset(&buf, 0, sizeof(buf));",
          "98:       ASSERT(0 == memcmp(&buf, prev, sizeof(buf)));",
          "99:     }",
          "100:     ASSERT(0 == uv_timer_start(&timer_handle, timer_cb, 20, 0));",
          "101:     break;",
          "103:   case 2:",
          "104:     ASSERT(status == 0);",
          "105:     ASSERT(prev != NULL);",
          "106:     ASSERT(curr != NULL);",
          "107:     ASSERT(0 == uv_timer_start(&timer_handle, timer_cb, 200, 0));",
          "108:     break;",
          "110:   case 3:",
          "111:     ASSERT(status == 0);",
          "112:     ASSERT(prev != NULL);",
          "113:     ASSERT(curr != NULL);",
          "114:     remove(FIXTURE);",
          "115:     break;",
          "117:   case 4:",
          "118:     ASSERT(status == -1);",
          "119:     ASSERT(prev == NULL);",
          "120:     ASSERT(curr == NULL);",
          "121:     ASSERT(uv_last_error(loop).code == UV_ENOENT);",
          "122:     uv_close((uv_handle_t*)handle, close_cb);",
          "123:     break;",
          "125:   default:",
          "126:     ASSERT(0);",
          "127:   }",
          "128: }",
          "131: TEST_IMPL(fs_poll) {",
          "132:   loop = uv_default_loop();",
          "134:   remove(FIXTURE);",
          "136:   ASSERT(0 == uv_timer_init(loop, &timer_handle));",
          "137:   ASSERT(0 == uv_fs_poll_init(loop, &poll_handle));",
          "138:   ASSERT(0 == uv_fs_poll_start(&poll_handle, poll_cb, FIXTURE, 100));",
          "139:   ASSERT(0 == uv_run(loop));",
          "141:   ASSERT(poll_cb_called == 5);",
          "142:   ASSERT(timer_cb_called == 2);",
          "143:   ASSERT(close_cb_called == 1);",
          "144:   uv_loop_delete(loop);",
          "146:   return 0;",
          "147: }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-hrtime.c||deps/uv/test/test-hrtime.c": [
          "File: deps/uv/test/test-hrtime.c -> deps/uv/test/test-hrtime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: TEST_IMPL(hrtime) {",
          "35:   uint64_t a, b, diff;",
          "37:   while (i > 0) {",
          "38:     a = uv_hrtime();",
          "39:     uv_sleep(45);",
          "",
          "[Removed Lines]",
          "36:   int i = 100;",
          "",
          "[Added Lines]",
          "36:   int i = 75;",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "97: TEST_DECLARE   (timer_ref)",
          "98: TEST_DECLARE   (timer_ref2)",
          "99: TEST_DECLARE   (fs_event_ref)",
          "100: TEST_DECLARE   (tcp_ref)",
          "101: TEST_DECLARE   (tcp_ref2)",
          "102: TEST_DECLARE   (tcp_ref3)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100: TEST_DECLARE   (fs_poll_ref)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134: TEST_DECLARE   (spawn_setuid_fails)",
          "135: TEST_DECLARE   (spawn_setgid_fails)",
          "136: TEST_DECLARE   (spawn_stdout_to_file)",
          "137: TEST_DECLARE   (kill)",
          "138: TEST_DECLARE   (fs_file_noent)",
          "139: TEST_DECLARE   (fs_file_nametoolong)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "138: TEST_DECLARE   (fs_poll)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "294:   TEST_ENTRY  (ref)",
          "295:   TEST_ENTRY  (idle_ref)",
          "296:   TEST_ENTRY  (async_ref)",
          "297:   TEST_ENTRY  (prepare_ref)",
          "298:   TEST_ENTRY  (check_ref)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "298:   TEST_ENTRY  (fs_poll_ref)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "360:   TEST_ENTRY  (spawn_setuid_fails)",
          "361:   TEST_ENTRY  (spawn_setgid_fails)",
          "362:   TEST_ENTRY  (spawn_stdout_to_file)",
          "363:   TEST_ENTRY  (kill)",
          "364: #ifdef _WIN32",
          "365:   TEST_ENTRY  (spawn_detect_pipe_name_collisions_on_windows)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "366:   TEST_ENTRY  (fs_poll)",
          "",
          "---------------"
        ],
        "deps/uv/test/test-ref.c||deps/uv/test/test-ref.c": [
          "File: deps/uv/test/test-ref.c -> deps/uv/test/test-ref.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "168: }",
          "171: TEST_IMPL(tcp_ref) {",
          "172:   uv_tcp_t h;",
          "173:   uv_tcp_init(uv_default_loop(), &h);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "171: TEST_IMPL(fs_poll_ref) {",
          "172:   uv_fs_poll_t h;",
          "173:   uv_fs_poll_init(uv_default_loop(), &h);",
          "174:   uv_fs_poll_start(&h, NULL, \".\", 999);",
          "175:   uv_unref((uv_handle_t*)&h);",
          "176:   uv_run(uv_default_loop());",
          "177:   return 0;",
          "178: }",
          "",
          "---------------"
        ],
        "deps/uv/uv.gyp||deps/uv/uv.gyp": [
          "File: deps/uv/uv.gyp -> deps/uv/uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:         'include/uv-private/ngx-queue.h',",
          "51:         'include/uv-private/tree.h',",
          "52:         'src/cares.c',",
          "53:         'src/uv-common.c',",
          "54:         'src/uv-common.h',",
          "55:         'src/ares/ares_cancel.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:         'src/fs-poll.c',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "339:         'test/test-shutdown-close.c',",
          "340:         'test/test-shutdown-eof.c',",
          "341:         'test/test-spawn.c',",
          "342:         'test/test-stdio-over-pipes.c',",
          "343:         'test/test-tcp-bind-error.c',",
          "344:         'test/test-tcp-bind6-error.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "343:         'test/test-fs-poll.c',",
          "",
          "---------------"
        ]
      }
    }
  ]
}