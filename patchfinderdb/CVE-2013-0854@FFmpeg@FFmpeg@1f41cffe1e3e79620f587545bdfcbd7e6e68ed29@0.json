{
  "cve_id": "CVE-2013-0854",
  "cve_desc": "The mjpeg_decode_scan_progressive_ac function in libavcodec/mjpegdec.c in FFmpeg before 1.1 allows remote attackers to have an unspecified impact via crafted MJPEG data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "1f41cffe1e3e79620f587545bdfcbd7e6e68ed29",
  "patch_info": {
    "commit_hash": "1f41cffe1e3e79620f587545bdfcbd7e6e68ed29",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/1f41cffe1e3e79620f587545bdfcbd7e6e68ed29",
    "files": [
      "libavcodec/mjpegdec.c"
    ],
    "message": "mjpegdec: check SE.\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
      "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1095:     int last_scan = 0;",
      "1096:     int16_t *quant_matrix = s->quant_matrixes[s->quant_index[c]];",
      "1098:     if (!Al) {",
      "1099:         s->coefs_finished[c] |= (1LL << (se + 1)) - (1LL << ss);",
      "1100:         last_scan = !~s->coefs_finished[c];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1098:     if (se > 63) {",
      "1099:         av_log(s->avctx, AV_LOG_ERROR, \"SE %d is too large\\n\", se);",
      "1100:         return AVERROR_INVALIDDATA;",
      "1101:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "12fb647994c89cd6c45da9497ff7589d760c6ec1",
      "candidate_info": {
        "commit_hash": "12fb647994c89cd6c45da9497ff7589d760c6ec1",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/12fb647994c89cd6c45da9497ff7589d760c6ec1",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "mjpegdec: check SE.\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1097:     int last_scan = 0;",
          "1098:     int16_t *quant_matrix = s->quant_matrixes[s->quant_index[c]];",
          "1100:     if (!Al) {",
          "1101:         s->coefs_finished[c] |= (1LL << (se + 1)) - (1LL << ss);",
          "1102:         last_scan = !~s->coefs_finished[c];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1100:     if (se > 63) {",
          "1101:         av_log(s->avctx, AV_LOG_ERROR, \"SE %d is too large\\n\", se);",
          "1102:         return AVERROR_INVALIDDATA;",
          "1103:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}