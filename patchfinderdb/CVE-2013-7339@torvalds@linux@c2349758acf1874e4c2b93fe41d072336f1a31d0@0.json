{
  "cve_id": "CVE-2013-7339",
  "cve_desc": "The rds_ib_laddr_check function in net/rds/ib.c in the Linux kernel before 3.12.8 allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via a bind system call for an RDS socket on a system that lacks RDS transports.",
  "repo": "torvalds/linux",
  "patch_hash": "c2349758acf1874e4c2b93fe41d072336f1a31d0",
  "patch_info": {
    "commit_hash": "c2349758acf1874e4c2b93fe41d072336f1a31d0",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/c2349758acf1874e4c2b93fe41d072336f1a31d0",
    "files": [
      "net/rds/ib.c"
    ],
    "message": "rds: prevent dereference of a NULL device\n\nBinding might result in a NULL device, which is dereferenced\ncausing this BUG:\n\n[ 1317.260548] BUG: unable to handle kernel NULL pointer dereference at 000000000000097\n4\n[ 1317.261847] IP: [<ffffffff84225f52>] rds_ib_laddr_check+0x82/0x110\n[ 1317.263315] PGD 418bcb067 PUD 3ceb21067 PMD 0\n[ 1317.263502] Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC\n[ 1317.264179] Dumping ftrace buffer:\n[ 1317.264774]    (ftrace buffer empty)\n[ 1317.265220] Modules linked in:\n[ 1317.265824] CPU: 4 PID: 836 Comm: trinity-child46 Tainted: G        W    3.13.0-rc4-\nnext-20131218-sasha-00013-g2cebb9b-dirty #4159\n[ 1317.267415] task: ffff8803ddf33000 ti: ffff8803cd31a000 task.ti: ffff8803cd31a000\n[ 1317.268399] RIP: 0010:[<ffffffff84225f52>]  [<ffffffff84225f52>] rds_ib_laddr_check+\n0x82/0x110\n[ 1317.269670] RSP: 0000:ffff8803cd31bdf8  EFLAGS: 00010246\n[ 1317.270230] RAX: 0000000000000000 RBX: ffff88020b0dd388 RCX: 0000000000000000\n[ 1317.270230] RDX: ffffffff8439822e RSI: 00000000000c000a RDI: 0000000000000286\n[ 1317.270230] RBP: ffff8803cd31be38 R08: 0000000000000000 R09: 0000000000000000\n[ 1317.270230] R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000000\n[ 1317.270230] R13: 0000000054086700 R14: 0000000000a25de0 R15: 0000000000000031\n[ 1317.270230] FS:  00007ff40251d700(0000) GS:ffff88022e200000(0000) knlGS:000000000000\n0000\n[ 1317.270230] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[ 1317.270230] CR2: 0000000000000974 CR3: 00000003cd478000 CR4: 00000000000006e0\n[ 1317.270230] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 1317.270230] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000090602\n[ 1317.270230] Stack:\n[ 1317.270230]  0000000054086700 5408670000a25de0 5408670000000002 0000000000000000\n[ 1317.270230]  ffffffff84223542 00000000ea54c767 0000000000000000 ffffffff86d26160\n[ 1317.270230]  ffff8803cd31be68 ffffffff84223556 ffff8803cd31beb8 ffff8800c6765280\n[ 1317.270230] Call Trace:\n[ 1317.270230]  [<ffffffff84223542>] ? rds_trans_get_preferred+0x42/0xa0\n[ 1317.270230]  [<ffffffff84223556>] rds_trans_get_preferred+0x56/0xa0\n[ 1317.270230]  [<ffffffff8421c9c3>] rds_bind+0x73/0xf0\n[ 1317.270230]  [<ffffffff83e4ce62>] SYSC_bind+0x92/0xf0\n[ 1317.270230]  [<ffffffff812493f8>] ? context_tracking_user_exit+0xb8/0x1d0\n[ 1317.270230]  [<ffffffff8119313d>] ? trace_hardirqs_on+0xd/0x10\n[ 1317.270230]  [<ffffffff8107a852>] ? syscall_trace_enter+0x32/0x290\n[ 1317.270230]  [<ffffffff83e4cece>] SyS_bind+0xe/0x10\n[ 1317.270230]  [<ffffffff843a6ad0>] tracesys+0xdd/0xe2\n[ 1317.270230] Code: 00 8b 45 cc 48 8d 75 d0 48 c7 45 d8 00 00 00 00 66 c7 45 d0 02 00\n89 45 d4 48 89 df e8 78 49 76 ff 41 89 c4 85 c0 75 0c 48 8b 03 <80> b8 74 09 00 00 01 7\n4 06 41 bc 9d ff ff ff f6 05 2a b6 c2 02\n[ 1317.270230] RIP  [<ffffffff84225f52>] rds_ib_laddr_check+0x82/0x110\n[ 1317.270230]  RSP <ffff8803cd31bdf8>\n[ 1317.270230] CR2: 0000000000000974\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/rds/ib.c||net/rds/ib.c"
    ]
  },
  "patch_diff": {
    "net/rds/ib.c||net/rds/ib.c": [
      "File: net/rds/ib.c -> net/rds/ib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "338:  ret = rdma_bind_addr(cm_id, (struct sockaddr *)&sin);",
      "342:   ret = -EADDRNOTAVAIL;",
      "344:  rdsdebug(\"addr %pI4 ret %d node type %d\\n\",",
      "",
      "[Removed Lines]",
      "341:  if (ret || cm_id->device->node_type != RDMA_NODE_IB_CA)",
      "",
      "[Added Lines]",
      "341:  if (ret || !cm_id->device ||",
      "342:      cm_id->device->node_type != RDMA_NODE_IB_CA)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "443d20fd188208aa4df2118ad49f9168e411016d",
      "candidate_info": {
        "commit_hash": "443d20fd188208aa4df2118ad49f9168e411016d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/443d20fd188208aa4df2118ad49f9168e411016d",
        "files": [
          "net/netfilter/nf_conntrack_timestamp.c"
        ],
        "message": "netfilter: nf_ct_timestamp: Fix BUG_ON after netns deletion\n\nWhen having nf_conntrack_timestamp enabled deleting a netns\ncan lead to the following BUG being triggered:\n\n[63836.660000] Kernel bug detected[#1]:\n[63836.660000] CPU: 0 PID: 0 Comm: swapper Not tainted 3.10.18 #14\n[63836.660000] task: 802d9420 ti: 802d2000 task.ti: 802d2000\n[63836.660000] $ 0   : 00000000 00000000 00000000 00000000\n[63836.660000] $ 4   : 00000001 00000004 00000020 00000020\n[63836.660000] $ 8   : 00000000 80064910 00000000 00000000\n[63836.660000] $12   : 0bff0002 00000001 00000000 0a0a0abe\n[63836.660000] $16   : 802e70a0 85f29d80 00000000 00000004\n[63836.660000] $20   : 85fb62a0 00000002 802d3bc0 85fb62a0\n[63836.660000] $24   : 00000000 87138110\n[63836.660000] $28   : 802d2000 802d3b40 00000014 871327cc\n[63836.660000] Hi    : 000005ff\n[63836.660000] Lo    : f2edd000\n[63836.660000] epc   : 87138794 __nf_ct_ext_add_length+0xe8/0x1ec [nf_conntrack]\n[63836.660000]     Not tainted\n[63836.660000] ra    : 871327cc nf_conntrack_in+0x31c/0x7b8 [nf_conntrack]\n[63836.660000] Status: 1100d403 KERNEL EXL IE\n[63836.660000] Cause : 00800034\n[63836.660000] PrId  : 0001974c (MIPS 74Kc)\n[63836.660000] Modules linked in: ath9k ath9k_common pppoe ppp_async iptable_nat ath9k_hw ath pppox ppp_generic nf_nat_ipv4 nf_conntrack_ipv4 mac80211 ipt_MASQUERADE cfg80211 xt_time xt_tcpudp xt_state xt_quota xt_policy xt_pkttype xt_owner xt_nat xt_multiport xt_mark xh\n[63836.660000] Process swapper (pid: 0, threadinfo=802d2000, task=802d9420, tls=00000000)\n[63836.660000] Stack : 802e70a0 871323d4 00000005 87080234 802e70a0 86d2a840 00000000 00000000\n[63836.660000] Call Trace:\n[63836.660000] [<87138794>] __nf_ct_ext_add_length+0xe8/0x1ec [nf_conntrack]\n[63836.660000] [<871327cc>] nf_conntrack_in+0x31c/0x7b8 [nf_conntrack]\n[63836.660000] [<801ff63c>] nf_iterate+0x90/0xec\n[63836.660000] [<801ff730>] nf_hook_slow+0x98/0x164\n[63836.660000] [<80205968>] ip_rcv+0x3e8/0x40c\n[63836.660000] [<801d9754>] __netif_receive_skb_core+0x624/0x6a4\n[63836.660000] [<801da124>] process_backlog+0xa4/0x16c\n[63836.660000] [<801d9bb4>] net_rx_action+0x10c/0x1e0\n[63836.660000] [<8007c5a4>] __do_softirq+0xd0/0x1bc\n[63836.660000] [<8007c730>] do_softirq+0x48/0x68\n[63836.660000] [<8007c964>] irq_exit+0x54/0x70\n[63836.660000] [<80060830>] ret_from_irq+0x0/0x4\n[63836.660000] [<8006a9f8>] r4k_wait_irqoff+0x18/0x1c\n[63836.660000] [<8009cfb8>] cpu_startup_entry+0xa4/0x104\n[63836.660000] [<802eb918>] start_kernel+0x394/0x3ac\n[63836.660000]\n[63836.660000]\nCode: 00821021  8c420000  2c440001 <00040336> 90440011  92350010  90560010  2485ffff  02a5a821\n[63837.040000] ---[ end trace ebf660c3ce3b55e7 ]---\n[63837.050000] Kernel panic - not syncing: Fatal exception in interrupt\n[63837.050000] Rebooting in 3 seconds..\n\nFix this by not unregistering the conntrack extension in the per-netns\ncleanup code.\n\nThis bug was introduced in (73f4001 netfilter: nf_ct_tstamp: move\ninitialization out of pernet_operations).\n\nSigned-off-by: Helmut Schaa <helmut.schaa@googlemail.com>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
        "before_after_code_files": [
          "net/netfilter/nf_conntrack_timestamp.c||net/netfilter/nf_conntrack_timestamp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "net/netfilter/nf_conntrack_timestamp.c||net/netfilter/nf_conntrack_timestamp.c": [
          "File: net/netfilter/nf_conntrack_timestamp.c -> net/netfilter/nf_conntrack_timestamp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97: void nf_conntrack_tstamp_pernet_fini(struct net *net)",
          "98: {",
          "99:  nf_conntrack_tstamp_fini_sysctl(net);",
          "101: }",
          "103: int nf_conntrack_tstamp_init(void)",
          "",
          "[Removed Lines]",
          "100:  nf_ct_extend_unregister(&tstamp_extend);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51c71a3bbaca868043cc45b3ad3786dd48a90235",
      "candidate_info": {
        "commit_hash": "51c71a3bbaca868043cc45b3ad3786dd48a90235",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/51c71a3bbaca868043cc45b3ad3786dd48a90235",
        "files": [
          "arch/x86/xen/platform-pci-unplug.c",
          "drivers/block/xen-blkfront.c",
          "drivers/char/tpm/xen-tpmfront.c",
          "drivers/input/misc/xen-kbdfront.c",
          "drivers/net/xen-netfront.c",
          "drivers/pci/xen-pcifront.c",
          "drivers/video/xen-fbfront.c",
          "drivers/xen/xenbus/xenbus_probe_frontend.c",
          "include/xen/platform_pci.h"
        ],
        "message": "xen/pvhvm: If xen_platform_pci=0 is set don't blow up (v4).\n\nThe user has the option of disabling the platform driver:\n00:02.0 Unassigned class [ff80]: XenSource, Inc. Xen Platform Device (rev 01)\n\nwhich is used to unplug the emulated drivers (IDE, Realtek 8169, etc)\nand allow the PV drivers to take over. If the user wishes\nto disable that they can set:\n\n  xen_platform_pci=0\n  (in the guest config file)\n\nor\n  xen_emul_unplug=never\n  (on the Linux command line)\n\nexcept it does not work properly. The PV drivers still try to\nload and since the Xen platform driver is not run - and it\nhas not initialized the grant tables, most of the PV drivers\nstumble upon:\n\ninput: Xen Virtual Keyboard as /devices/virtual/input/input5\ninput: Xen Virtual Pointer as /devices/virtual/input/input6M\n------------[ cut here ]------------\nkernel BUG at /home/konrad/ssd/konrad/linux/drivers/xen/grant-table.c:1206!\ninvalid opcode: 0000 [#1] SMP\nModules linked in: xen_kbdfront(+) xenfs xen_privcmd\nCPU: 6 PID: 1389 Comm: modprobe Not tainted 3.13.0-rc1upstream-00021-ga6c892b-dirty #1\nHardware name: Xen HVM domU, BIOS 4.4-unstable 11/26/2013\nRIP: 0010:[<ffffffff813ddc40>]  [<ffffffff813ddc40>] get_free_entries+0x2e0/0x300\nCall Trace:\n [<ffffffff8150d9a3>] ? evdev_connect+0x1e3/0x240\n [<ffffffff813ddd0e>] gnttab_grant_foreign_access+0x2e/0x70\n [<ffffffffa0010081>] xenkbd_connect_backend+0x41/0x290 [xen_kbdfront]\n [<ffffffffa0010a12>] xenkbd_probe+0x2f2/0x324 [xen_kbdfront]\n [<ffffffff813e5757>] xenbus_dev_probe+0x77/0x130\n [<ffffffff813e7217>] xenbus_frontend_dev_probe+0x47/0x50\n [<ffffffff8145e9a9>] driver_probe_device+0x89/0x230\n [<ffffffff8145ebeb>] __driver_attach+0x9b/0xa0\n [<ffffffff8145eb50>] ? driver_probe_device+0x230/0x230\n [<ffffffff8145eb50>] ? driver_probe_device+0x230/0x230\n [<ffffffff8145cf1c>] bus_for_each_dev+0x8c/0xb0\n [<ffffffff8145e7d9>] driver_attach+0x19/0x20\n [<ffffffff8145e260>] bus_add_driver+0x1a0/0x220\n [<ffffffff8145f1ff>] driver_register+0x5f/0xf0\n [<ffffffff813e55c5>] xenbus_register_driver_common+0x15/0x20\n [<ffffffff813e76b3>] xenbus_register_frontend+0x23/0x40\n [<ffffffffa0015000>] ? 0xffffffffa0014fff\n [<ffffffffa001502b>] xenkbd_init+0x2b/0x1000 [xen_kbdfront]\n [<ffffffff81002049>] do_one_initcall+0x49/0x170\n\n.. snip..\n\nwhich is hardly nice. This patch fixes this by having each\nPV driver check for:\n - if running in PV, then it is fine to execute (as that is their\n   native environment).\n - if running in HVM, check if user wanted 'xen_emul_unplug=never',\n   in which case bail out and don't load any PV drivers.\n - if running in HVM, and if PCI device 5853:0001 (xen_platform_pci)\n   does not exist, then bail out and not load PV drivers.\n - (v2) if running in HVM, and if the user wanted 'xen_emul_unplug=ide-disks',\n   then bail out for all PV devices _except_ the block one.\n   Ditto for the network one ('nics').\n - (v2) if running in HVM, and if the user wanted 'xen_emul_unplug=unnecessary'\n   then load block PV driver, and also setup the legacy IDE paths.\n   In (v3) make it actually load PV drivers.\n\nReported-by: Sander Eikelenboom <linux@eikelenboom.it\nReported-by: Anthony PERARD <anthony.perard@citrix.com>\nReported-and-Tested-by: Fabio Fantoni <fabio.fantoni@m2r.biz>\nSigned-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\n[v2: Add extra logic to handle the myrid ways 'xen_emul_unplug'\ncan be used per Ian and Stefano suggestion]\n[v3: Make the unnecessary case work properly]\n[v4: s/disks/ide-disks/ spotted by Fabio]\nReviewed-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>\nAcked-by: Bjorn Helgaas <bhelgaas@google.com> [for PCI parts]\nCC: stable@vger.kernel.org",
        "before_after_code_files": [
          "arch/x86/xen/platform-pci-unplug.c||arch/x86/xen/platform-pci-unplug.c",
          "drivers/block/xen-blkfront.c||drivers/block/xen-blkfront.c",
          "drivers/char/tpm/xen-tpmfront.c||drivers/char/tpm/xen-tpmfront.c",
          "drivers/input/misc/xen-kbdfront.c||drivers/input/misc/xen-kbdfront.c",
          "drivers/net/xen-netfront.c||drivers/net/xen-netfront.c",
          "drivers/pci/xen-pcifront.c||drivers/pci/xen-pcifront.c",
          "drivers/video/xen-fbfront.c||drivers/video/xen-fbfront.c",
          "drivers/xen/xenbus/xenbus_probe_frontend.c||drivers/xen/xenbus/xenbus_probe_frontend.c",
          "include/xen/platform_pci.h||include/xen/platform_pci.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/x86/xen/platform-pci-unplug.c||arch/x86/xen/platform-pci-unplug.c": [
          "File: arch/x86/xen/platform-pci-unplug.c -> arch/x86/xen/platform-pci-unplug.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:  return 0;",
          "70: }",
          "72: void xen_unplug_emulated_devices(void)",
          "73: {",
          "74:  int r;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72: bool xen_has_pv_devices()",
          "73: {",
          "74:  if (!xen_domain())",
          "75:   return false;",
          "78:  if (xen_pv_domain())",
          "79:   return true;",
          "83:  if (xen_platform_pci_unplug == 0)",
          "84:   return false;",
          "86:  if (xen_platform_pci_unplug & XEN_UNPLUG_NEVER)",
          "87:   return false;",
          "89:  if (xen_platform_pci_unplug & XEN_UNPLUG_ALL)",
          "90:   return true;",
          "94:  if (xen_platform_pci_unplug & XEN_UNPLUG_UNNECESSARY)",
          "95:   return true;",
          "99:  return false;",
          "100: }",
          "101: EXPORT_SYMBOL_GPL(xen_has_pv_devices);",
          "103: static bool __xen_has_pv_device(int state)",
          "104: {",
          "106:  if (xen_hvm_domain() && (xen_platform_pci_unplug & state))",
          "107:   return true;",
          "109:  return xen_has_pv_devices();",
          "110: }",
          "112: bool xen_has_pv_nic_devices(void)",
          "113: {",
          "114:  return __xen_has_pv_device(XEN_UNPLUG_ALL_NICS | XEN_UNPLUG_ALL);",
          "115: }",
          "116: EXPORT_SYMBOL_GPL(xen_has_pv_nic_devices);",
          "118: bool xen_has_pv_disk_devices(void)",
          "119: {",
          "120:  return __xen_has_pv_device(XEN_UNPLUG_ALL_IDE_DISKS |",
          "121:        XEN_UNPLUG_AUX_IDE_DISKS | XEN_UNPLUG_ALL);",
          "122: }",
          "123: EXPORT_SYMBOL_GPL(xen_has_pv_disk_devices);",
          "130: bool xen_has_pv_and_legacy_disk_devices(void)",
          "131: {",
          "132:  if (!xen_domain())",
          "133:   return false;",
          "136:  if (xen_pv_domain())",
          "137:   return false;",
          "139:  if (xen_platform_pci_unplug & XEN_UNPLUG_UNNECESSARY)",
          "140:   return true;",
          "142:  return false;",
          "143: }",
          "144: EXPORT_SYMBOL_GPL(xen_has_pv_and_legacy_disk_devices);",
          "",
          "---------------"
        ],
        "drivers/block/xen-blkfront.c||drivers/block/xen-blkfront.c": [
          "File: drivers/block/xen-blkfront.c -> drivers/block/xen-blkfront.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1356:   char *type;",
          "1357:   int len;",
          "1360:    int major;",
          "1362:    if (!VDEV_IS_EXTENDED(vdevice))",
          "",
          "[Removed Lines]",
          "1359:   if (xen_platform_pci_unplug & XEN_UNPLUG_UNNECESSARY) {",
          "",
          "[Added Lines]",
          "1359:   if (xen_has_pv_and_legacy_disk_devices()) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2079:  if (!xen_domain())",
          "2080:   return -ENODEV;",
          "2083:   return -ENODEV;",
          "2085:  if (register_blkdev(XENVBD_MAJOR, DEV_NAME)) {",
          "",
          "[Removed Lines]",
          "2082:  if (xen_hvm_domain() && !xen_platform_pci_unplug)",
          "",
          "[Added Lines]",
          "2082:  if (!xen_has_pv_disk_devices())",
          "",
          "---------------"
        ],
        "drivers/char/tpm/xen-tpmfront.c||drivers/char/tpm/xen-tpmfront.c": [
          "File: drivers/char/tpm/xen-tpmfront.c -> drivers/char/tpm/xen-tpmfront.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include <xen/xenbus.h>",
          "18: #include <xen/page.h>",
          "19: #include \"tpm.h\"",
          "21: struct tpm_private {",
          "22:  struct tpm_chip *chip;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: #include <xen/platform_pci.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "421:  if (!xen_domain())",
          "422:   return -ENODEV;",
          "424:  return xenbus_register_frontend(&tpmfront_driver);",
          "425: }",
          "426: module_init(xen_tpmfront_init);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "425:  if (!xen_has_pv_devices())",
          "426:   return -ENODEV;",
          "",
          "---------------"
        ],
        "drivers/input/misc/xen-kbdfront.c||drivers/input/misc/xen-kbdfront.c": [
          "File: drivers/input/misc/xen-kbdfront.c -> drivers/input/misc/xen-kbdfront.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #include <xen/interface/io/fbif.h>",
          "30: #include <xen/interface/io/kbdif.h>",
          "31: #include <xen/xenbus.h>",
          "33: struct xenkbd_info {",
          "34:  struct input_dev *kbd;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: #include <xen/platform_pci.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "380:  if (xen_initial_domain())",
          "381:   return -ENODEV;",
          "383:  return xenbus_register_frontend(&xenkbd_driver);",
          "384: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "384:  if (!xen_has_pv_devices())",
          "385:   return -ENODEV;",
          "",
          "---------------"
        ],
        "drivers/net/xen-netfront.c||drivers/net/xen-netfront.c": [
          "File: drivers/net/xen-netfront.c -> drivers/net/xen-netfront.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2115:  if (!xen_domain())",
          "2116:   return -ENODEV;",
          "2119:   return -ENODEV;",
          "2121:  pr_info(\"Initialising Xen virtual ethernet driver\\n\");",
          "",
          "[Removed Lines]",
          "2118:  if (xen_hvm_domain() && !xen_platform_pci_unplug)",
          "",
          "[Added Lines]",
          "2118:  if (!xen_has_pv_nic_devices())",
          "",
          "---------------"
        ],
        "drivers/pci/xen-pcifront.c||drivers/pci/xen-pcifront.c": [
          "File: drivers/pci/xen-pcifront.c -> drivers/pci/xen-pcifront.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #include <linux/workqueue.h>",
          "21: #include <linux/bitops.h>",
          "22: #include <linux/time.h>",
          "24: #include <asm/xen/swiotlb-xen.h>",
          "25: #define INVALID_GRANT_REF (0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: #include <xen/platform_pci.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1138:  if (!xen_pv_domain() || xen_initial_domain())",
          "1139:   return -ENODEV;",
          "1141:  pci_frontend_registrar(1 /* enable */);",
          "1143:  return xenbus_register_frontend(&xenpci_driver);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1142:  if (!xen_has_pv_devices())",
          "1143:   return -ENODEV;",
          "",
          "---------------"
        ],
        "drivers/video/xen-fbfront.c||drivers/video/xen-fbfront.c": [
          "File: drivers/video/xen-fbfront.c -> drivers/video/xen-fbfront.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include <xen/interface/io/fbif.h>",
          "36: #include <xen/interface/io/protocols.h>",
          "37: #include <xen/xenbus.h>",
          "39: struct xenfb_info {",
          "40:  unsigned char  *fb;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: #include <xen/platform_pci.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "699:  if (xen_initial_domain())",
          "700:   return -ENODEV;",
          "702:  return xenbus_register_frontend(&xenfb_driver);",
          "703: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "703:  if (!xen_has_pv_devices())",
          "704:   return -ENODEV;",
          "",
          "---------------"
        ],
        "drivers/xen/xenbus/xenbus_probe_frontend.c||drivers/xen/xenbus/xenbus_probe_frontend.c": [
          "File: drivers/xen/xenbus/xenbus_probe_frontend.c -> drivers/xen/xenbus/xenbus_probe_frontend.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "496: #ifndef MODULE",
          "497: static int __init boot_wait_for_devices(void)",
          "498: {",
          "500:   return -ENODEV;",
          "502:  ready_to_wait_for_devices = 1;",
          "",
          "[Removed Lines]",
          "499:  if (xen_hvm_domain() && !xen_platform_pci_unplug)",
          "",
          "[Added Lines]",
          "499:  if (!xen_has_pv_devices())",
          "",
          "---------------"
        ],
        "include/xen/platform_pci.h||include/xen/platform_pci.h": [
          "File: include/xen/platform_pci.h -> include/xen/platform_pci.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: extern int xen_platform_pci_unplug;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: #if defined(CONFIG_XEN_PVHVM)",
          "52: extern bool xen_has_pv_devices(void);",
          "53: extern bool xen_has_pv_disk_devices(void);",
          "54: extern bool xen_has_pv_nic_devices(void);",
          "55: extern bool xen_has_pv_and_legacy_disk_devices(void);",
          "56: #else",
          "57: static inline bool xen_has_pv_devices(void)",
          "58: {",
          "59:  return IS_ENABLED(CONFIG_XEN);",
          "60: }",
          "61: static inline bool xen_has_pv_disk_devices(void)",
          "62: {",
          "63:  return IS_ENABLED(CONFIG_XEN);",
          "64: }",
          "65: static inline bool xen_has_pv_nic_devices(void)",
          "66: {",
          "67:  return IS_ENABLED(CONFIG_XEN);",
          "68: }",
          "69: static inline bool xen_has_pv_and_legacy_disk_devices(void)",
          "70: {",
          "71:  return false;",
          "72: }",
          "73: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7bda701e012373ca53c9d837b7b25131852e0238",
      "candidate_info": {
        "commit_hash": "7bda701e012373ca53c9d837b7b25131852e0238",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7bda701e012373ca53c9d837b7b25131852e0238",
        "files": [
          "drivers/net/vxlan.c"
        ],
        "message": "{vxlan, inet6} Mark vxlan_dev flags with VXLAN_F_IPV6 properly\n\nEven if user doesn't supply the physical netdev to attach vxlan dev\nto, and at the same time user want to vxlan sit top of IPv6, mark\nvxlan_dev flags with VXLAN_F_IPV6 to create IPv6 based socket.\nOtherwise kernel crashes safely every time spitting below messages,\n\nSteps to reproduce:\nip link add vxlan0 type vxlan id 42 group ff0e::110\nip link set vxlan0 up\n\n[   62.656266] BUG: unable to handle kernel NULL pointer dereference[   62.656320] ip (3008) used greatest stack depth: 3912 bytes left\n at 0000000000000046\n[   62.656423] IP: [<ffffffff816d822d>] ip6_route_output+0xbd/0xe0\n[   62.656525] PGD 2c966067 PUD 2c9a2067 PMD 0\n[   62.656674] Oops: 0000 [#1] SMP\n[   62.656781] Modules linked in: vxlan netconsole deflate zlib_deflate af_key\n[   62.657083] CPU: 1 PID: 2128 Comm: whoopsie Not tainted 3.12.0+ #182\n[   62.657083] Hardware name: innotek GmbH VirtualBox, BIOS VirtualBox 12/01/2006\n[   62.657083] task: ffff88002e2335d0 ti: ffff88002c94c000 task.ti: ffff88002c94c000\n[   62.657083] RIP: 0010:[<ffffffff816d822d>]  [<ffffffff816d822d>] ip6_route_output+0xbd/0xe0\n[   62.657083] RSP: 0000:ffff88002fd038f8  EFLAGS: 00210296\n[   62.657083] RAX: 0000000000000000 RBX: ffff88002fd039e0 RCX: 0000000000000000\n[   62.657083] RDX: ffff88002fd0eb68 RSI: ffff88002fd0d278 RDI: ffff88002fd0d278\n[   62.657083] RBP: ffff88002fd03918 R08: 0000000002000000 R09: 0000000000000000\n[   62.657083] R10: 00000000000001ff R11: 0000000000000000 R12: 0000000000000001\n[   62.657083] R13: ffff88002d96b480 R14: ffffffff81c8e2c0 R15: 0000000000000001\n[   62.657083] FS:  0000000000000000(0000) GS:ffff88002fd00000(0063) knlGS:00000000f693b740\n[   62.657083] CS:  0010 DS: 002b ES: 002b CR0: 0000000080050033\n[   62.657083] CR2: 0000000000000046 CR3: 000000002c9d2000 CR4: 00000000000006e0\n[   62.657083] Stack:\n[   62.657083]  ffff88002fd03a40 ffffffff81c8e2c0 ffff88002fd039e0 ffff88002d96b480\n[   62.657083]  ffff88002fd03958 ffffffff816cac8b ffff880019277cc0 ffff8800192b5d00\n[   62.657083]  ffff88002d5bc000 ffff880019277cc0 0000000000001821 0000000000000001\n[   62.657083] Call Trace:\n[   62.657083]  <IRQ>\n[   62.657083]  [<ffffffff816cac8b>] ip6_dst_lookup_tail+0xdb/0xf0\n[   62.657083]  [<ffffffff816caea0>] ip6_dst_lookup+0x10/0x20\n[   62.657083]  [<ffffffffa0020c13>] vxlan_xmit_one+0x193/0x9c0 [vxlan]\n[   62.657083]  [<ffffffff8137b3b7>] ? account+0xc7/0x1f0\n[   62.657083]  [<ffffffffa0021513>] vxlan_xmit+0xd3/0x400 [vxlan]\n[   62.657083]  [<ffffffff8161390d>] dev_hard_start_xmit+0x49d/0x5e0\n[   62.657083]  [<ffffffff81613d29>] dev_queue_xmit+0x2d9/0x480\n[   62.657083]  [<ffffffff817cb854>] ? _raw_write_unlock_bh+0x14/0x20\n[   62.657083]  [<ffffffff81630565>] ? eth_header+0x35/0xe0\n[   62.657083]  [<ffffffff8161bc5e>] neigh_resolve_output+0x11e/0x1e0\n[   62.657083]  [<ffffffff816ce0e0>] ? ip6_fragment+0xad0/0xad0\n[   62.657083]  [<ffffffff816cb465>] ip6_finish_output2+0x2f5/0x470\n[   62.657083]  [<ffffffff816ce166>] ip6_finish_output+0x86/0xc0\n[   62.657083]  [<ffffffff816ce218>] ip6_output+0x78/0xb0\n[   62.657083]  [<ffffffff816eadd6>] mld_sendpack+0x256/0x2a0\n[   62.657083]  [<ffffffff816ebd8c>] mld_ifc_timer_expire+0x17c/0x290\n[   62.657083]  [<ffffffff816ebc10>] ? igmp6_timer_handler+0x80/0x80\n[   62.657083]  [<ffffffff816ebc10>] ? igmp6_timer_handler+0x80/0x80\n[   62.657083]  [<ffffffff81051065>] call_timer_fn+0x45/0x150\n[   62.657083]  [<ffffffff816ebc10>] ? igmp6_timer_handler+0x80/0x80\n[   62.657083]  [<ffffffff81052353>] run_timer_softirq+0x1f3/0x2a0\n[   62.657083]  [<ffffffff8102dfd8>] ? lapic_next_event+0x18/0x20\n[   62.657083]  [<ffffffff8109e36f>] ? clockevents_program_event+0x6f/0x110\n[   62.657083]  [<ffffffff8104a2f6>] __do_softirq+0xd6/0x2b0\n[   62.657083]  [<ffffffff8104a75e>] irq_exit+0x7e/0xa0\n[   62.657083]  [<ffffffff8102ea15>] smp_apic_timer_interrupt+0x45/0x60\n[   62.657083]  [<ffffffff817d3eca>] apic_timer_interrupt+0x6a/0x70\n[   62.657083]  <EOI>\n[   62.657083]  [<ffffffff817d4a35>] ? sysenter_dispatch+0x7/0x1a\n[   62.657083] Code: 4d 8b 85 a8 02 00 00 4c 89 e9 ba 03 04 00 00 48 c7 c6 c0 be 8d 81 48 c7 c7 48 35 a3 81 31 c0 e8 db 68 0e 00 49 8b 85 a8 02 00 00 <0f> b6 40 46 c0 e8 05 0f b6 c0 c1 e0 03 41 09 c4 e9 77 ff ff ff\n[   62.657083] RIP  [<ffffffff816d822d>] ip6_route_output+0xbd/0xe0\n[   62.657083]  RSP <ffff88002fd038f8>\n[   62.657083] CR2: 0000000000000046\n[   62.657083] ---[ end trace ba8a9583d7cd1934 ]---\n[   62.657083] Kernel panic - not syncing: Fatal exception in interrupt\n\nSigned-off-by: Fan Du <fan.du@windriver.com>\nReported-by: Ryan Whelan <rcwhelan@gmail.com>\nAcked-by: Cong Wang <xiyou.wangcong@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "drivers/net/vxlan.c||drivers/net/vxlan.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/vxlan.c||drivers/net/vxlan.c": [
          "File: drivers/net/vxlan.c -> drivers/net/vxlan.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2441:   dev->hard_header_len = lowerdev->hard_header_len +",
          "2442:            (use_ipv6 ? VXLAN6_HEADROOM : VXLAN_HEADROOM);",
          "2445:  if (data[IFLA_VXLAN_TOS])",
          "2446:   vxlan->tos  = nla_get_u8(data[IFLA_VXLAN_TOS]);",
          "",
          "[Removed Lines]",
          "2443:  }",
          "",
          "[Added Lines]",
          "2443:  } else if (use_ipv6)",
          "2444:   vxlan->flags |= VXLAN_F_IPV6;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acef7b0f2b7da3cac01cd6fa5ee61e695bbfc217",
      "candidate_info": {
        "commit_hash": "acef7b0f2b7da3cac01cd6fa5ee61e695bbfc217",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/acef7b0f2b7da3cac01cd6fa5ee61e695bbfc217",
        "files": [
          "drivers/crypto/omap-sham.c"
        ],
        "message": "crypto: omap-sham - Fix Polling mode for larger blocks\n\nCommand \"tcrypt sec=1 mode=403\" give the follwoing error for Polling\nmode:\nroot@am335x-evm:/# insmod tcrypt.ko sec=1 mode=403\n[...]\n\n[  346.982754] test 15 ( 4096 byte blocks, 1024 bytes per update,   4 updates):   4352 opers/sec,  17825792 bytes/sec\n[  347.992661] test 16 ( 4096 byte blocks, 4096 bytes per update,   1 updates):   7095 opers/sec,  29061120 bytes/sec\n[  349.002667] test 17 ( 8192 byte blocks,   16 bytes per update, 512 updates):\n[  349.010882] Unable to handle kernel NULL pointer dereference at virtual address 00000000\n[  349.020037] pgd = ddeac000\n[  349.022884] [00000000] *pgd=9dcb4831, *pte=00000000, *ppte=00000000\n[  349.029816] Internal error: Oops: 17 [#1] PREEMPT SMP ARM\n[  349.035482] Modules linked in: tcrypt(+)\n[  349.039617] CPU: 0 PID: 1473 Comm: insmod Not tainted 3.12.4-01566-g6279006-dirty #38\n[  349.047832] task: dda91540 ti: ddcd2000 task.ti: ddcd2000\n[  349.053517] PC is at omap_sham_xmit_dma+0x6c/0x238\n[  349.058544] LR is at omap_sham_xmit_dma+0x38/0x238\n[  349.063570] pc : [<c04eb7cc>]    lr : [<c04eb798>]    psr: 20000013\n[  349.063570] sp : ddcd3c78  ip : 00000000  fp : 9d8980b8\n[  349.075610] r10: 00000000  r9 : 00000000  r8 : 00000000\n[  349.081090] r7 : 00001000  r6 : dd898000  r5 : 00000040  r4 : ddb10550\n[  349.087935] r3 : 00000004  r2 : 00000010  r1 : 53100080  r0 : 00000000\n[  349.094783] Flags: nzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user\n[  349.102268] Control: 10c5387d  Table: 9deac019  DAC: 00000015\n[  349.108294] Process insmod (pid: 1473, stack limit = 0xddcd2248)\n\n[...]\n\nThis is because polling_mode is not enabled for ctx without FLAGS_FINUP.\n\nFor polling mode the bufcnt is made 0 unconditionally. But it should be made 0\nonly if it is a final update or a total is not zero(This condition is similar\nto what is done in DMA case). Because of this wrong hashes are produced.\n\nFixing the same.\n\nSigned-off-by: Lokesh Vutla <lokeshvutla@ti.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
        "before_after_code_files": [
          "drivers/crypto/omap-sham.c||drivers/crypto/omap-sham.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/crypto/omap-sham.c||drivers/crypto/omap-sham.c": [
          "File: drivers/crypto/omap-sham.c -> drivers/crypto/omap-sham.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "789:  dev_dbg(dd->dev, \"cpu: bufcnt: %u, digcnt: %d, final: %d\\n\",",
          "790:   ctx->bufcnt, ctx->digcnt, final);",
          "796: }",
          "798: static int omap_sham_update_dma_stop(struct omap_sham_dev *dd)",
          "",
          "[Removed Lines]",
          "792:  bufcnt = ctx->bufcnt;",
          "793:  ctx->bufcnt = 0;",
          "795:  return omap_sham_xmit_cpu(dd, ctx->buffer, bufcnt, final);",
          "",
          "[Added Lines]",
          "792:  if (final || (ctx->bufcnt == ctx->buflen && ctx->total)) {",
          "793:   bufcnt = ctx->bufcnt;",
          "794:   ctx->bufcnt = 0;",
          "795:   return omap_sham_xmit_cpu(dd, ctx->buffer, bufcnt, final);",
          "796:  }",
          "798:  return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1103:   return 0;",
          "1104:  }",
          "1106:  return omap_sham_enqueue(req, OP_UPDATE);",
          "1107: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1109:  if (dd->polling_mode)",
          "1110:   ctx->flags |= BIT(FLAGS_CPU);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6fdda9a9c5db367130cf32df5d6618d08b89f46a",
      "candidate_info": {
        "commit_hash": "6fdda9a9c5db367130cf32df5d6618d08b89f46a",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/6fdda9a9c5db367130cf32df5d6618d08b89f46a",
        "files": [
          "kernel/time/timekeeping.c"
        ],
        "message": "timekeeping: Avoid possible deadlock from clock_was_set_delayed\n\nAs part of normal operaions, the hrtimer subsystem frequently calls\ninto the timekeeping code, creating a locking order of\n  hrtimer locks -> timekeeping locks\n\nclock_was_set_delayed() was suppoed to allow us to avoid deadlocks\nbetween the timekeeping the hrtimer subsystem, so that we could\nnotify the hrtimer subsytem the time had changed while holding\nthe timekeeping locks. This was done by scheduling delayed work\nthat would run later once we were out of the timekeeing code.\n\nBut unfortunately the lock chains are complex enoguh that in\nscheduling delayed work, we end up eventually trying to grab\nan hrtimer lock.\n\nSasha Levin noticed this in testing when the new seqlock lockdep\nenablement triggered the following (somewhat abrieviated) message:\n\n[  251.100221] ======================================================\n[  251.100221] [ INFO: possible circular locking dependency detected ]\n[  251.100221] 3.13.0-rc2-next-20131206-sasha-00005-g8be2375-dirty #4053 Not tainted\n[  251.101967] -------------------------------------------------------\n[  251.101967] kworker/10:1/4506 is trying to acquire lock:\n[  251.101967]  (timekeeper_seq){----..}, at: [<ffffffff81160e96>] retrigger_next_event+0x56/0x70\n[  251.101967]\n[  251.101967] but task is already holding lock:\n[  251.101967]  (hrtimer_bases.lock#11){-.-...}, at: [<ffffffff81160e7c>] retrigger_next_event+0x3c/0x70\n[  251.101967]\n[  251.101967] which lock already depends on the new lock.\n[  251.101967]\n[  251.101967]\n[  251.101967] the existing dependency chain (in reverse order) is:\n[  251.101967]\n-> #5 (hrtimer_bases.lock#11){-.-...}:\n[snipped]\n-> #4 (&rt_b->rt_runtime_lock){-.-...}:\n[snipped]\n-> #3 (&rq->lock){-.-.-.}:\n[snipped]\n-> #2 (&p->pi_lock){-.-.-.}:\n[snipped]\n-> #1 (&(&pool->lock)->rlock){-.-...}:\n[  251.101967]        [<ffffffff81194803>] validate_chain+0x6c3/0x7b0\n[  251.101967]        [<ffffffff81194d9d>] __lock_acquire+0x4ad/0x580\n[  251.101967]        [<ffffffff81194ff2>] lock_acquire+0x182/0x1d0\n[  251.101967]        [<ffffffff84398500>] _raw_spin_lock+0x40/0x80\n[  251.101967]        [<ffffffff81153e69>] __queue_work+0x1a9/0x3f0\n[  251.101967]        [<ffffffff81154168>] queue_work_on+0x98/0x120\n[  251.101967]        [<ffffffff81161351>] clock_was_set_delayed+0x21/0x30\n[  251.101967]        [<ffffffff811c4bd1>] do_adjtimex+0x111/0x160\n[  251.101967]        [<ffffffff811e2711>] compat_sys_adjtimex+0x41/0x70\n[  251.101967]        [<ffffffff843a4b49>] ia32_sysret+0x0/0x5\n[  251.101967]\n-> #0 (timekeeper_seq){----..}:\n[snipped]\n[  251.101967] other info that might help us debug this:\n[  251.101967]\n[  251.101967] Chain exists of:\n  timekeeper_seq --> &rt_b->rt_runtime_lock --> hrtimer_bases.lock#11\n\n[  251.101967]  Possible unsafe locking scenario:\n[  251.101967]\n[  251.101967]        CPU0                    CPU1\n[  251.101967]        ----                    ----\n[  251.101967]   lock(hrtimer_bases.lock#11);\n[  251.101967]                                lock(&rt_b->rt_runtime_lock);\n[  251.101967]                                lock(hrtimer_bases.lock#11);\n[  251.101967]   lock(timekeeper_seq);\n[  251.101967]\n[  251.101967]  *** DEADLOCK ***\n[  251.101967]\n[  251.101967] 3 locks held by kworker/10:1/4506:\n[  251.101967]  #0:  (events){.+.+.+}, at: [<ffffffff81154960>] process_one_work+0x200/0x530\n[  251.101967]  #1:  (hrtimer_work){+.+...}, at: [<ffffffff81154960>] process_one_work+0x200/0x530\n[  251.101967]  #2:  (hrtimer_bases.lock#11){-.-...}, at: [<ffffffff81160e7c>] retrigger_next_event+0x3c/0x70\n[  251.101967]\n[  251.101967] stack backtrace:\n[  251.101967] CPU: 10 PID: 4506 Comm: kworker/10:1 Not tainted 3.13.0-rc2-next-20131206-sasha-00005-g8be2375-dirty #4053\n[  251.101967] Workqueue: events clock_was_set_work\n\nSo the best solution is to avoid calling clock_was_set_delayed() while\nholding the timekeeping lock, and instead using a flag variable to\ndecide if we should call clock_was_set() once we've released the locks.\n\nThis works for the case here, where the do_adjtimex() was the deadlock\ntrigger point. Unfortuantely, in update_wall_time() we still hold\nthe jiffies lock, which would deadlock with the ipi triggered by\nclock_was_set(), preventing us from calling it even after we drop the\ntimekeeping lock. So instead call clock_was_set_delayed() at that point.\n\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Prarit Bhargava <prarit@redhat.com>\nCc: Richard Cochran <richardcochran@gmail.com>\nCc: Ingo Molnar <mingo@kernel.org>\nCc: Sasha Levin <sasha.levin@oracle.com>\nCc: stable <stable@vger.kernel.org> #3.10+\nReported-by: Sasha Levin <sasha.levin@oracle.com>\nTested-by: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: John Stultz <john.stultz@linaro.org>",
        "before_after_code_files": [
          "kernel/time/timekeeping.c||kernel/time/timekeeping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kernel/time/timekeeping.c||kernel/time/timekeeping.c": [
          "File: kernel/time/timekeeping.c -> kernel/time/timekeeping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1279:    __timekeeping_set_tai_offset(tk, tk->tai_offset - leap);",
          "1282:    clock_set = TK_CLOCK_WAS_SET;",
          "1283:   }",
          "1284:  }",
          "",
          "[Removed Lines]",
          "1281:    clock_was_set_delayed();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1442:  write_seqcount_end(&timekeeper_seq);",
          "1443: out:",
          "1444:  raw_spin_unlock_irqrestore(&timekeeper_lock, flags);",
          "1445: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1444:  if (clock_was_set) {",
          "1455:   clock_was_set_delayed();",
          "1456:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1702:  if (tai != orig_tai) {",
          "1703:   __timekeeping_set_tai_offset(tk, tai);",
          "1704:   timekeeping_update(tk, TK_MIRROR | TK_CLOCK_WAS_SET);",
          "1706:  }",
          "1707:  write_seqcount_end(&timekeeper_seq);",
          "1708:  raw_spin_unlock_irqrestore(&timekeeper_lock, flags);",
          "1710:  ntp_notify_cmos_timer();",
          "1712:  return ret;",
          "",
          "[Removed Lines]",
          "1705:   clock_was_set_delayed();",
          "",
          "[Added Lines]",
          "1721:  if (tai != orig_tai)",
          "1722:   clock_was_set();",
          "",
          "---------------"
        ]
      }
    }
  ]
}