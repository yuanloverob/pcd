{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0285dae26a8fabd2053ec8a893f9dc04b9961329",
      "candidate_info": {
        "commit_hash": "0285dae26a8fabd2053ec8a893f9dc04b9961329",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0285dae26a8fabd2053ec8a893f9dc04b9961329",
        "files": [
          "lib/repl.js",
          "test/simple/test-repl-console.js"
        ],
        "message": "repl: create a new Console instance for the repl when \"useGlobal\" is off\n\nNow `console.log('blah')` will work in a REPL running over a socket.\n\nCloses #3876.",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js",
          "test/simple/test-repl-console.js||test/simple/test-repl-console.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: var path = require('path');",
          "48: var fs = require('fs');",
          "49: var rl = require('readline');",
          "50: var EventEmitter = require('events').EventEmitter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "118:     cb(err, result);",
          "119:   };",
          "124:   if (!input && !output) {",
          "126:     if (!stream) {",
          "",
          "[Removed Lines]",
          "121:   self.resetContext();",
          "122:   self.bufferedCommand = '';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "138:     }",
          "139:   }",
          "142:   self.inputStream = input;",
          "143:   self.outputStream = output;",
          "145:   self.prompt = (prompt != undefined ? prompt : '> ');",
          "147:   function complete(text, callback) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "338:   if (!this.useGlobal) {",
          "339:     var context = vm.createContext();",
          "340:     for (var i in global) context[i] = global[i];",
          "341:   } else {",
          "342:     var context = global;",
          "343:   }",
          "345:   context.module = module;",
          "346:   context.require = require;",
          "350:   this.lines = [];",
          "351:   this.lines.level = [];",
          "",
          "[Removed Lines]",
          "347:   context.global = context;",
          "348:   context.global.global = context;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-repl-console.js||test/simple/test-repl-console.js": [
          "File: test/simple/test-repl-console.js -> test/simple/test-repl-console.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common'),",
          "23:     assert = require('assert'),",
          "24:     Stream = require('stream'),",
          "25:     repl = require('repl');",
          "28: var stream = new Stream();",
          "29: stream.write = stream.pause = stream.resume = function(){};",
          "30: stream.readable = stream.writable = true;",
          "32: var r = repl.start({",
          "33:   input: stream,",
          "34:   output: stream,",
          "35:   useGlobal: false",
          "36: });",
          "40: assert(r.context.console);",
          "43: assert.notStrictEqual(r.context.console, console);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2589d5561191ac58f5c87efa796457c9936de73f",
      "candidate_info": {
        "commit_hash": "2589d5561191ac58f5c87efa796457c9936de73f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2589d5561191ac58f5c87efa796457c9936de73f",
        "files": [
          "src/node_internals.h",
          "src/v8_typed_array.cc"
        ],
        "message": "core: add ThrowError(), ThrowTypeError(), ThrowRangeError()",
        "before_after_code_files": [
          "src/node_internals.h||src/node_internals.h",
          "src/v8_typed_array.cc||src/v8_typed_array.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_internals.h||src/node_internals.h": [
          "File: src/node_internals.h -> src/node_internals.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #ifndef SRC_NODE_INTERNALS_H_",
          "23: #define SRC_NODE_INTERNALS_H_",
          "25: namespace node {",
          "27: #ifndef offset_of",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #include \"v8.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40: #define ARRAY_SIZE(a) (sizeof((a)) / sizeof((a)[0]))",
          "41: #endif",
          "43: } // namespace node",
          "45: #endif // SRC_NODE_INTERNALS_H_",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: #define THROW_ERROR(fun)                                                      \\",
          "48:   do {                                                                        \\",
          "49:     v8::HandleScope scope;                                                    \\",
          "50:     return v8::ThrowException(fun(v8::String::New(errmsg)));                  \\",
          "51:   }                                                                           \\",
          "52:   while (0)",
          "54: inline static v8::Handle<v8::Value> ThrowError(const char* errmsg) {",
          "55:   THROW_ERROR(v8::Exception::Error);",
          "56: }",
          "58: inline static v8::Handle<v8::Value> ThrowTypeError(const char* errmsg) {",
          "59:   THROW_ERROR(v8::Exception::TypeError);",
          "60: }",
          "62: inline static v8::Handle<v8::Value> ThrowRangeError(const char* errmsg) {",
          "63:   THROW_ERROR(v8::Exception::RangeError);",
          "64: }",
          "",
          "---------------"
        ],
        "src/v8_typed_array.cc||src/v8_typed_array.cc": [
          "File: src/v8_typed_array.cc -> src/v8_typed_array.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <stdlib.h>  // calloc, etc",
          "23: #include <string.h>  // memmove",
          "27: #include \"v8_typed_array.h\"",
          "28: #include \"node_buffer.h\"",
          "30: namespace {",
          "44: struct BatchedMethods {",
          "45:   const char* name;",
          "",
          "[Removed Lines]",
          "25: #include <v8.h>",
          "32: v8::Handle<v8::Value> ThrowError(const char* msg) {",
          "33:   return v8::ThrowException(v8::Exception::Error(v8::String::New(msg)));",
          "34: }",
          "36: v8::Handle<v8::Value> ThrowTypeError(const char* msg) {",
          "37:   return v8::ThrowException(v8::Exception::TypeError(v8::String::New(msg)));",
          "38: }",
          "40: v8::Handle<v8::Value> ThrowRangeError(const char* msg) {",
          "41:   return v8::ThrowException(v8::Exception::RangeError(v8::String::New(msg)));",
          "42: }",
          "",
          "[Added Lines]",
          "27: #include \"node.h\"",
          "28: #include \"v8.h\"",
          "32: using node::ThrowRangeError;",
          "33: using node::ThrowTypeError;",
          "34: using node::ThrowError;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e1fb7b76e99a2e26bc5169e49f7ded3b41b21f8a",
      "candidate_info": {
        "commit_hash": "e1fb7b76e99a2e26bc5169e49f7ded3b41b21f8a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e1fb7b76e99a2e26bc5169e49f7ded3b41b21f8a",
        "files": [
          "deps/uv/src/unix/proctitle.c"
        ],
        "message": "uv: Upgrade to b49d6f7",
        "before_after_code_files": [
          "deps/uv/src/unix/proctitle.c||deps/uv/src/unix/proctitle.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/unix/proctitle.c||deps/uv/src/unix/proctitle.c": [
          "File: deps/uv/src/unix/proctitle.c -> deps/uv/src/unix/proctitle.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: uv_err_t uv_set_process_title(const char* title) {",
          "85:   return uv_ok_;",
          "86: }",
          "",
          "[Removed Lines]",
          "84:   uv_strlcpy(process_title.str, title, process_title.len);",
          "",
          "[Added Lines]",
          "89:   if (process_title.len > 0)",
          "90:     strncpy(process_title.str, title, process_title.len - 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30ab1f567d6dda2f1e6d48bd96a9034406b3c2b1",
      "candidate_info": {
        "commit_hash": "30ab1f567d6dda2f1e6d48bd96a9034406b3c2b1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/30ab1f567d6dda2f1e6d48bd96a9034406b3c2b1",
        "files": [
          "test/simple/test-eio-limit.js"
        ],
        "message": "test-eio-limit: bump the number of allowed background tasks to 200\n\nThis makes the test pass on Windows.",
        "before_after_code_files": [
          "test/simple/test-eio-limit.js||test/simple/test-eio-limit.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-eio-limit.js||test/simple/test-eio-limit.js": [
          "File: test/simple/test-eio-limit.js -> test/simple/test-eio-limit.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: function repeat(fn) {",
          "29:   if (started != 0) {",
          "31:   }",
          "33:   process.nextTick(function() {",
          "",
          "[Removed Lines]",
          "30:     assert.ok(started - done < 100);",
          "",
          "[Added Lines]",
          "30:     assert.ok(started - done < 200);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "029e01bb809d792651e6c12cdaa34f04f5333c26",
      "candidate_info": {
        "commit_hash": "029e01bb809d792651e6c12cdaa34f04f5333c26",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/029e01bb809d792651e6c12cdaa34f04f5333c26",
        "files": [
          "vcbuild.bat"
        ],
        "message": "vcbuild.bat: add duplicate arg-ok label to work around cmd.exe bug",
        "before_after_code_files": [
          "vcbuild.bat||vcbuild.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "vcbuild.bat||vcbuild.bat": [
          "File: vcbuild.bat -> vcbuild.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: echo Warning: ignoring invalid command line option `%1`.",
          "64: :arg-ok",
          "65: shift",
          "66: goto next-arg",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64: :arg-ok",
          "",
          "---------------"
        ]
      }
    }
  ]
}