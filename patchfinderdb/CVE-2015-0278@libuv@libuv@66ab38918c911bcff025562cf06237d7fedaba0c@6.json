{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "872263314eff8efa72bdccfbda89f9029425f4b0",
      "candidate_info": {
        "commit_hash": "872263314eff8efa72bdccfbda89f9029425f4b0",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/872263314eff8efa72bdccfbda89f9029425f4b0",
        "files": [
          "src/win/tty.c"
        ],
        "message": "windows: fix check in uv_tty_endgame()",
        "before_after_code_files": [
          "src/win/tty.c||src/win/tty.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/tty.c||src/win/tty.c": [
          "File: src/win/tty.c -> src/win/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1817: void uv_tty_endgame(uv_loop_t* loop, uv_tty_t* handle) {",
          "1819:       handle->shutdown_req != NULL &&",
          "1820:       handle->write_reqs_pending == 0) {",
          "1821:     UNREGISTER_HANDLE_REQ(loop, handle, handle->shutdown_req);",
          "",
          "[Removed Lines]",
          "1818:   if (!(handle->flags && UV_HANDLE_TTY_READABLE) &&",
          "",
          "[Added Lines]",
          "1818:   if (!(handle->flags & UV_HANDLE_TTY_READABLE) &&",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f6d4b4b58ea290961dc983117d31b19e198403a",
      "candidate_info": {
        "commit_hash": "2f6d4b4b58ea290961dc983117d31b19e198403a",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/2f6d4b4b58ea290961dc983117d31b19e198403a",
        "files": [
          "vcbuild.bat"
        ],
        "message": "build, windows: do not fail on Windows SDK Prompt",
        "before_after_code_files": [
          "vcbuild.bat||vcbuild.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "vcbuild.bat||vcbuild.bat": [
          "File: vcbuild.bat -> vcbuild.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: goto next-arg",
          "42: :args-done",
          "44: if defined VCINSTALLDIR goto select-target",
          "46: @rem Look for Visual Studio 2013",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: if defined WindowsSDKDir goto select-target",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111: if defined nobuild goto run",
          "113: @rem Check if VS build env is available",
          "118: echo Build skipped. To build, this file needs to run from VS cmd prompt.",
          "119: goto run",
          "",
          "[Removed Lines]",
          "114: if not defined VCINSTALLDIR goto msbuild-not-found",
          "115: goto msbuild-found",
          "117: :msbuild-not-found",
          "",
          "[Added Lines]",
          "115: if defined VCINSTALLDIR goto msbuild-found",
          "116: if defined WindowsSDKDir goto msbuild-found",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c3a348abd9e66d263482aee5289ca18397133e1",
      "candidate_info": {
        "commit_hash": "3c3a348abd9e66d263482aee5289ca18397133e1",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/3c3a348abd9e66d263482aee5289ca18397133e1",
        "files": [
          "include/uv.h"
        ],
        "message": "include: remove UV_VERSION_* macros\n\nSuperseded by uv_version() and uv_version_string().",
        "before_after_code_files": [
          "include/uv.h||include/uv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #endif",
          "53: #if defined(_MSC_VER) && _MSC_VER < 1600",
          "54: # include \"uv-private/stdint-msvc2008.h\"",
          "55: #else",
          "",
          "[Removed Lines]",
          "49: #define UV_VERSION_MAJOR 0",
          "50: #define UV_VERSION_MINOR 10",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce3c38a5d8e9542e71e76c2a93c8ee3584ce31e9",
      "candidate_info": {
        "commit_hash": "ce3c38a5d8e9542e71e76c2a93c8ee3584ce31e9",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/ce3c38a5d8e9542e71e76c2a93c8ee3584ce31e9",
        "files": [
          "include/uv.h"
        ],
        "message": "include: make uv_process_options_t.cwd const\n\nThere is no reason for it to be non-const, libuv treats it as a\nread-only input.  Make it a pointer to a const string.",
        "before_after_code_files": [
          "include/uv.h||include/uv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1420:   char* cwd;",
          "",
          "[Added Lines]",
          "1420:   const char* cwd;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e52aa6cc57256560461180b77a9bf5672950767c",
      "candidate_info": {
        "commit_hash": "e52aa6cc57256560461180b77a9bf5672950767c",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/e52aa6cc57256560461180b77a9bf5672950767c",
        "files": [
          "Makefile.am",
          "configure.ac"
        ],
        "message": "build: make autotools build system work with mingw",
        "before_after_code_files": [
          "Makefile.am||Makefile.am",
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: ACLOCAL_AMFLAGS = -I m4",
          "17: AM_CPPFLAGS = -I$(top_srcdir)/include \\",
          "19:               -I$(top_srcdir)/src",
          "23: CLEANFILES =",
          "",
          "[Removed Lines]",
          "18:               -I$(top_srcdir)/src/unix \\",
          "21: include_HEADERS=include/uv.h include/uv-errno.h include/uv-unix.h",
          "",
          "[Added Lines]",
          "20: include_HEADERS=include/uv.h include/uv-errno.h",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:                    src/inet.c \\",
          "30:                    src/uv-common.c \\",
          "31:                    src/uv-common.h \\",
          "34:                    src/unix/core.c \\",
          "35:                    src/unix/dl.c \\",
          "36:                    src/unix/fs.c \\",
          "",
          "[Removed Lines]",
          "32:                    src/version.c \\",
          "33:                    src/unix/async.c \\",
          "",
          "[Added Lines]",
          "31:                    src/version.c",
          "33: if WINNT",
          "35: include_HEADERS += include/uv-win.h include/tree.h",
          "36: AM_CPPFLAGS += -I$(top_srcdir)/src/win \\",
          "37:                -DWIN32_LEAN_AND_MEAN \\",
          "38:                -D_WIN32_WINNT=0x0600",
          "39: LIBS += -lws2_32 -lpsapi -lphlpapi2",
          "40: libuv_la_SOURCES += src/win/async.c \\",
          "41:                     src/win/core.c \\",
          "42:                     src/win/dl.c \\",
          "43:                     src/win/error.c \\",
          "44:                     src/win/fs-event.c \\",
          "45:                     src/win/fs.c \\",
          "46:                     src/win/getaddrinfo.c \\",
          "47:                     src/win/handle.c \\",
          "48:                     src/win/loop-watcher.c \\",
          "49:                     src/win/pipe.c \\",
          "50:                     src/win/poll.c \\",
          "51:                     src/win/process-stdio.c \\",
          "52:                     src/win/process.c \\",
          "53:                     src/win/req.c \\",
          "54:                     src/win/signal.c \\",
          "55:                     src/win/stream.c \\",
          "56:                     src/win/tcp.c \\",
          "57:                     src/win/thread.c \\",
          "58:                     src/win/threadpool.c \\",
          "59:                     src/win/timer.c \\",
          "60:                     src/win/tty.c \\",
          "61:                     src/win/udp.c \\",
          "62:                     src/win/util.c \\",
          "63:                     src/win/winapi.c \\",
          "64:                     src/win/winsock.c",
          "66: else  # WINNT",
          "68: include_HEADERS += include/uv-unix.h",
          "69: AM_CPPFLAGS += -I$(top_srcdir)/src/unix",
          "70: libuv_la_SOURCES += src/unix/async.c \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "50:                    src/unix/tty.c \\",
          "51:                    src/unix/udp.c",
          "53: TESTS = test/run-tests",
          "54: check_PROGRAMS = test/run-tests",
          "55: test_run_tests_SOURCES = test/blackhole-server.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90: endif  # WINNT",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: AM_CONDITIONAL([NETBSD],  [AS_CASE([$host_os], [netbsd*],  [true], [false])])",
          "45: AM_CONDITIONAL([OPENBSD], [AS_CASE([$host_os], [openbsd*], [true], [false])])",
          "46: AM_CONDITIONAL([SUNOS],   [AS_CASE([$host_os], [solaris*], [true], [false])])",
          "47: PANDORA_ENABLE_DTRACE",
          "48: AC_CONFIG_FILES([Makefile])",
          "49: AC_OUTPUT",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: AM_CONDITIONAL([WINNT],   [AS_CASE([$host_os], [mingw*],   [true], [false])])",
          "",
          "---------------"
        ]
      }
    }
  ]
}