{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0bb4433f26d9754bbfd4aeb5b5f1659b1407dc6b",
      "candidate_info": {
        "commit_hash": "0bb4433f26d9754bbfd4aeb5b5f1659b1407dc6b",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/0bb4433f26d9754bbfd4aeb5b5f1659b1407dc6b",
        "files": [
          "arch/ARM/ARMInstPrinter.c"
        ],
        "message": "arm: fix issue #740",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "347:    case ARM_LDRB_POST_IMM:",
          "348:    case ARM_LDR_POST_IMM:",
          "349:    case ARM_STRB_POST_IMM:",
          "350:    case ARM_STR_POST_IMM:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351:    case ARM_LDR_POST_REG:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "883c333f86ebc5c29b98cc48e0f513e566759849",
      "candidate_info": {
        "commit_hash": "883c333f86ebc5c29b98cc48e0f513e566759849",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/883c333f86ebc5c29b98cc48e0f513e566759849",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "Fix two missing register operands in X86 AT&T syntax (#791)\n\n* Bug fix: missing register operand in AT&T emitter for `movb %ax, imm`\n\n* Bug fix: missing register operand in AT&T emitter for `movb %al, imm`",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2686:  { X86_INSW, X86_REG_DX },",
          "2687:  { X86_INSL, X86_REG_DX },",
          "2692:  { X86_MOV16o16a, X86_REG_AX },",
          "2694:  { X86_PUSHCS32, X86_REG_CS },",
          "2695:  { X86_PUSHDS32, X86_REG_DS },",
          "",
          "[Removed Lines]",
          "2689:  { X86_MOV64o64a, X86_REG_RAX },",
          "2690:  { X86_MOV32o32a, X86_REG_EAX },",
          "2691:  { X86_MOV64o32a, X86_REG_EAX },",
          "",
          "[Added Lines]",
          "2689:  { X86_MOV8o16a, X86_REG_AL },",
          "2690:  { X86_MOV8o32a, X86_REG_AL },",
          "2691:  { X86_MOV8o64a, X86_REG_AL },",
          "2694:  { X86_MOV16o32a, X86_REG_AX },",
          "2695:  { X86_MOV16o64a, X86_REG_AX },",
          "2697:  { X86_MOV32o16a, X86_REG_EAX },",
          "2698:  { X86_MOV32o32a, X86_REG_EAX },",
          "2699:  { X86_MOV32o64a, X86_REG_EAX },",
          "2701:  { X86_MOV64o32a, X86_REG_RAX },",
          "2702:  { X86_MOV64o64a, X86_REG_RAX },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fef1c2920a86299b8d98233e591ce46e3e3542c5",
      "candidate_info": {
        "commit_hash": "fef1c2920a86299b8d98233e591ce46e3e3542c5",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/fef1c2920a86299b8d98233e591ce46e3e3542c5",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: fix #975",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:  uint8_t high, low;",
          "95:  uint8_t *result;",
          "97:  result = (uint8_t *)malloc(strlen(code));",
          "98:  if (result != NULL) {",
          "99:   while (code[i] != '\\0') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:  if (strlen(code) == 0)",
          "98:   return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "271:  mode = argv[optind];",
          "272:  assembly = preprocess(argv[optind + 1], &size);",
          "274:  if (args_left == 3) {",
          "275:   char *temp, *src = argv[optind + 2];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "276:  if (!assembly) {",
          "277:   usage(argv[0]);",
          "278:   return -1;",
          "279:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cbf5d3d4407d563ce6b3fecb414fe0f13af61ea4",
      "candidate_info": {
        "commit_hash": "cbf5d3d4407d563ce6b3fecb414fe0f13af61ea4",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/cbf5d3d4407d563ce6b3fecb414fe0f13af61ea4",
        "files": [
          "include/capstone/x86.h",
          "tests/test_x86.c"
        ],
        "message": "Remove never used cs_x86_op::fp",
        "before_after_code_files": [
          "include/capstone/x86.h||include/capstone/x86.h",
          "tests/test_x86.c||tests/test_x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/x86.h||include/capstone/x86.h": [
          "File: include/capstone/x86.h -> include/capstone/x86.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:  X86_OP_REG, // = CS_OP_REG (Register operand).",
          "124:  X86_OP_IMM, // = CS_OP_IMM (Immediate operand).",
          "125:  X86_OP_MEM, // = CS_OP_MEM (Memory operand).",
          "127: } x86_op_type;",
          "",
          "[Removed Lines]",
          "126:  X86_OP_FP,  //  = CS_OP_FP  (Floating-Point operand).",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "241:   union {",
          "242:    x86_reg reg;   // register value for REG operand",
          "243:    int64_t imm;  // immediate value for IMM operand",
          "245:    x86_op_mem mem;  // base/index/scale/disp value for MEM operand",
          "246:   };",
          "",
          "[Removed Lines]",
          "244:    double fp;  // floating point value for FP operand",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/test_x86.c||tests/test_x86.c": [
          "File: tests/test_x86.c -> tests/test_x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:    case X86_OP_IMM:",
          "215:     printf(\"\\t\\toperands[%u].type: IMM = 0x%\"PRIx64 \"\\n\", i, op->imm);",
          "216:     break;",
          "220:    case X86_OP_MEM:",
          "221:     printf(\"\\t\\toperands[%u].type: MEM\\n\", i);",
          "222:     if (op->mem.segment != X86_REG_INVALID)",
          "",
          "[Removed Lines]",
          "217:    case X86_OP_FP:",
          "218:     printf(\"\\t\\toperands[%u].type: FP = %f\\n\", i, op->fp);",
          "219:     break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6dad56669b1e2fb2f09484adfb5c494285204d18",
      "candidate_info": {
        "commit_hash": "6dad56669b1e2fb2f09484adfb5c494285204d18",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/6dad56669b1e2fb2f09484adfb5c494285204d18",
        "files": [
          "include/capstone.h",
          "tests/test_skipdata.c"
        ],
        "message": "Use CAPSTONE_API for cs_skipdata_cb_t",
        "before_after_code_files": [
          "include/capstone.h||include/capstone.h",
          "tests/test_skipdata.c||tests/test_skipdata.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone.h||include/capstone.h": [
          "File: include/capstone.h -> include/capstone.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:  @return: return number of bytes to skip, or 0 to immediately stop disassembling.",
          "178: typedef struct cs_opt_skipdata {",
          "",
          "[Removed Lines]",
          "175: typedef size_t (*cs_skipdata_cb_t)(const uint8_t *code, size_t code_size, size_t offset, void *user_data);",
          "",
          "[Added Lines]",
          "175: typedef size_t (CAPSTONE_API*cs_skipdata_cb_t)(const uint8_t *code, size_t code_size, size_t offset, void *user_data);",
          "",
          "---------------"
        ],
        "tests/test_skipdata.c||tests/test_skipdata.c": [
          "File: tests/test_skipdata.c -> tests/test_skipdata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  printf(\"\\n\");",
          "31: }",
          "34: {",
          "36:  return 2;",
          "",
          "[Removed Lines]",
          "33: static size_t mycallback(const uint8_t *buffer, size_t buffer_size, size_t offset, void *p)",
          "",
          "[Added Lines]",
          "33: static size_t CAPSTONE_API mycallback(const uint8_t *buffer, size_t buffer_size, size_t offset, void *p)",
          "",
          "---------------"
        ]
      }
    }
  ]
}