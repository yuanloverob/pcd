{
  "cve_id": "CVE-2021-29526",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. An attacker can trigger a division by 0 in `tf.raw_ops.Conv2D`. This is because the implementation(https://github.com/tensorflow/tensorflow/blob/988087bd83f144af14087fe4fecee2d250d93737/tensorflow/core/kernels/conv_ops.cc#L261-L263) does a division by a quantity that is controlled by the caller. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "b12aa1d44352de21d1a6faaf04172d8c2508b42b",
  "patch_info": {
    "commit_hash": "b12aa1d44352de21d1a6faaf04172d8c2508b42b",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/b12aa1d44352de21d1a6faaf04172d8c2508b42b",
    "files": [
      "tensorflow/core/kernels/conv_ops.cc"
    ],
    "message": "Fix one more FPE.\n\nPiperOrigin-RevId: 369346568\nChange-Id: I840fd575962adc879713a4c9cc59e6da3331caa7",
    "before_after_code_files": [
      "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc": [
      "File: tensorflow/core/kernels/conv_ops.cc -> tensorflow/core/kernels/conv_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "260:     const int64 out_depth = output->dim_size(3);",
      "261:     const int64 patch_depth = filter.dim_size(2);",
      "263:     if (in_depth % patch_depth != 0) {",
      "264:       ctx->SetStatus(errors::InvalidArgument(",
      "265:           \"input depth must be evenly divisible by filter depth: \", in_depth,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "263:     if (patch_depth <= 0) {",
      "264:       ctx->SetStatus(errors::InvalidArgument(",
      "265:           \"filter depth must be stricly positive, got \", patch_depth));",
      "266:       return;",
      "267:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "268:     }",
      "270:     const int64 num_groups = in_depth / patch_depth;",
      "271:     if (out_depth % num_groups != 0 || out_depth < num_groups) {",
      "272:       ctx->SetStatus(errors::InvalidArgument(",
      "273:           \"output depth must be evenly divisible by number of groups: \",",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "276:     if (num_groups <= 0) {",
      "277:       ctx->SetStatus(errors::InvalidArgument(",
      "278:           \"number of groups must be stricly positive, got \", num_groups));",
      "279:       return;",
      "280:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "536:               errors::InvalidArgument(\"Patch depth too large\"));",
      "537:   const int in_depth = static_cast<int>(in_depth_raw);",
      "538:   const int patch_depth = static_cast<int>(patch_depth_raw);",
      "539:   TF_REQUIRES(in_depth % patch_depth == 0,",
      "540:               errors::InvalidArgument(",
      "541:                   \"input depth must be evenly divisible by filter depth: \",",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "549:   TF_REQUIRES(patch_depth > 0,",
      "550:               errors::InvalidArgument(",
      "551:                   \"filter depth must be stricly positive, got \", patch_depth));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "984f2af0024a2a898f3c3df505fd12d14fd9fb33",
      "candidate_info": {
        "commit_hash": "984f2af0024a2a898f3c3df505fd12d14fd9fb33",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/984f2af0024a2a898f3c3df505fd12d14fd9fb33",
        "files": [
          "tensorflow/core/kernels/conv_ops.cc"
        ],
        "message": "Fix one more FPE.",
        "before_after_code_files": [
          "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc": [
          "File: tensorflow/core/kernels/conv_ops.cc -> tensorflow/core/kernels/conv_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "425:               errors::InvalidArgument(\"Patch depth too large\"));",
          "426:   const int in_depth = static_cast<int>(in_depth_raw);",
          "427:   const int patch_depth = static_cast<int>(patch_depth_raw);",
          "428:   TF_REQUIRES(in_depth % patch_depth == 0,",
          "429:               errors::InvalidArgument(",
          "430:                   \"input depth must be evenly divisible by filter depth: \",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "428:   TF_REQUIRES(patch_depth > 0,",
          "429:               errors::InvalidArgument(",
          "430:                   \"filter depth must be stricly positive, got \", patch_depth));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "942934a058fffe0a9e0359dffde06301f9c735b7",
      "candidate_info": {
        "commit_hash": "942934a058fffe0a9e0359dffde06301f9c735b7",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/942934a058fffe0a9e0359dffde06301f9c735b7",
        "files": [
          "tensorflow/core/kernels/conv_ops.cc"
        ],
        "message": "Fix one more FPE.",
        "before_after_code_files": [
          "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc": [
          "File: tensorflow/core/kernels/conv_ops.cc -> tensorflow/core/kernels/conv_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "424:               errors::InvalidArgument(\"Patch depth too large\"));",
          "425:   const int in_depth = static_cast<int>(in_depth_raw);",
          "426:   const int patch_depth = static_cast<int>(patch_depth_raw);",
          "427:   TF_REQUIRES(in_depth % patch_depth == 0,",
          "428:               errors::InvalidArgument(",
          "429:                   \"input depth must be evenly divisible by filter depth: \",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "427:   TF_REQUIRES(patch_depth > 0,",
          "428:               errors::InvalidArgument(",
          "429:                   \"filter depth must be stricly positive, got \", patch_depth));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9625abfbf705ce66fc08abc7eb4eef4e5c0a39ab",
      "candidate_info": {
        "commit_hash": "9625abfbf705ce66fc08abc7eb4eef4e5c0a39ab",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/9625abfbf705ce66fc08abc7eb4eef4e5c0a39ab",
        "files": [
          "tensorflow/core/kernels/conv_ops.cc"
        ],
        "message": "Fix one more FPE.\n\nPiperOrigin-RevId: 369346568\nChange-Id: I840fd575962adc879713a4c9cc59e6da3331caa7",
        "before_after_code_files": [
          "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc": [
          "File: tensorflow/core/kernels/conv_ops.cc -> tensorflow/core/kernels/conv_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "260:     const int64 out_depth = output->dim_size(3);",
          "261:     const int64 patch_depth = filter.dim_size(2);",
          "263:     if (in_depth % patch_depth != 0) {",
          "264:       ctx->SetStatus(errors::InvalidArgument(",
          "265:           \"input depth must be evenly divisible by filter depth: \", in_depth,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263:     if (patch_depth <= 0) {",
          "264:       ctx->SetStatus(errors::InvalidArgument(",
          "265:           \"filter depth must be stricly positive, got \", patch_depth));",
          "266:       return;",
          "267:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:     }",
          "270:     const int64 num_groups = in_depth / patch_depth;",
          "271:     if (out_depth % num_groups != 0 || out_depth < num_groups) {",
          "272:       ctx->SetStatus(errors::InvalidArgument(",
          "273:           \"output depth must be evenly divisible by number of groups: \",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "276:     if (num_groups <= 0) {",
          "277:       ctx->SetStatus(errors::InvalidArgument(",
          "278:           \"number of groups must be stricly positive, got \", num_groups));",
          "279:       return;",
          "280:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "536:               errors::InvalidArgument(\"Patch depth too large\"));",
          "537:   const int in_depth = static_cast<int>(in_depth_raw);",
          "538:   const int patch_depth = static_cast<int>(patch_depth_raw);",
          "539:   TF_REQUIRES(in_depth % patch_depth == 0,",
          "540:               errors::InvalidArgument(",
          "541:                   \"input depth must be evenly divisible by filter depth: \",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "549:   TF_REQUIRES(patch_depth > 0,",
          "550:               errors::InvalidArgument(",
          "551:                   \"filter depth must be stricly positive, got \", patch_depth));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ea660cb4d0ed82780912ca847c7207fbeaa5428",
      "candidate_info": {
        "commit_hash": "9ea660cb4d0ed82780912ca847c7207fbeaa5428",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/9ea660cb4d0ed82780912ca847c7207fbeaa5428",
        "files": [
          "tensorflow/core/kernels/conv_ops.cc"
        ],
        "message": "Fix one more FPE.",
        "before_after_code_files": [
          "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc": [
          "File: tensorflow/core/kernels/conv_ops.cc -> tensorflow/core/kernels/conv_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "425:               errors::InvalidArgument(\"Patch depth too large\"));",
          "426:   const int in_depth = static_cast<int>(in_depth_raw);",
          "427:   const int patch_depth = static_cast<int>(patch_depth_raw);",
          "428:   TF_REQUIRES(in_depth % patch_depth == 0,",
          "429:               errors::InvalidArgument(",
          "430:                   \"input depth must be evenly divisible by filter depth: \",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "429:   TF_REQUIRES(patch_depth > 0,",
          "430:               errors::InvalidArgument(",
          "431:                   \"filter depth must be stricly positive, got \", patch_depth));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d92b07398f53b635332279d7bf76c6ea035bfbd2",
      "candidate_info": {
        "commit_hash": "d92b07398f53b635332279d7bf76c6ea035bfbd2",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/d92b07398f53b635332279d7bf76c6ea035bfbd2",
        "files": [
          "tensorflow/core/kernels/conv_ops.cc"
        ],
        "message": "Fix one more FPE.",
        "before_after_code_files": [
          "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/conv_ops.cc||tensorflow/core/kernels/conv_ops.cc": [
          "File: tensorflow/core/kernels/conv_ops.cc -> tensorflow/core/kernels/conv_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "425:               errors::InvalidArgument(\"Patch depth too large\"));",
          "426:   const int in_depth = static_cast<int>(in_depth_raw);",
          "427:   const int patch_depth = static_cast<int>(patch_depth_raw);",
          "428:   TF_REQUIRES(in_depth % patch_depth == 0,",
          "429:               errors::InvalidArgument(",
          "430:                   \"input depth must be evenly divisible by filter depth: \",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "428:   TF_REQUIRES(patch_depth > 0,",
          "429:               errors::InvalidArgument(",
          "430:                   \"filter depth must be stricly positive, got \", patch_depth));",
          "",
          "---------------"
        ]
      }
    }
  ]
}