{
  "cve_id": "CVE-2017-16803",
  "cve_desc": "In Libav through 11.11 and 12.x through 12.1, the smacker_decode_tree function in libavcodec/smacker.c does not properly restrict tree recursion, which allows remote attackers to cause a denial of service (bitstream.c:build_table() out-of-bounds read and application crash) via a crafted Smacker stream.",
  "repo": "libav/libav",
  "patch_hash": "cd4663dc80323ba64989d0c103d51ad3ee0e9c2f",
  "patch_info": {
    "commit_hash": "cd4663dc80323ba64989d0c103d51ad3ee0e9c2f",
    "repo": "libav/libav",
    "commit_url": "https://github.com/libav/libav/commit/cd4663dc80323ba64989d0c103d51ad3ee0e9c2f",
    "files": [
      "libavcodec/smacker.c"
    ],
    "message": "smacker: add sanity check for length in smacker_decode_tree()\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n\nBug-Id: 1098\nCc: libav-stable@libav.org\nSigned-off-by: Sean McGovern <gseanmcg@gmail.com>",
    "before_after_code_files": [
      "libavcodec/smacker.c||libavcodec/smacker.c"
    ]
  },
  "patch_diff": {
    "libavcodec/smacker.c||libavcodec/smacker.c": [
      "File: libavcodec/smacker.c -> libavcodec/smacker.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "44: #define SMKTREE_BITS 9",
      "45: #define SMK_NODE 0x80000000",
      "48: typedef struct SmackVContext {",
      "49:     AVCodecContext *avctx;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "46: #define SMKTREE_DECODE_MAX_RECURSION 32",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "97: static int smacker_decode_tree(BitstreamContext *bc, HuffContext *hc,",
      "98:                                uint32_t prefix, int length)",
      "99: {",
      "100:     if (!bitstream_read_bit(bc)) { // Leaf",
      "101:         if(hc->current >= 256){",
      "102:             av_log(NULL, AV_LOG_ERROR, \"Tree size exceeded!\\n\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "100:     if (length > SMKTREE_DECODE_MAX_RECURSION) {",
      "101:         av_log(NULL, AV_LOG_ERROR, \"Maximum tree recursion level exceeded.\\n\");",
      "102:         return AVERROR_INVALIDDATA;",
      "103:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c7e5554393d5b423a51d0f0512234c9aadd90d11",
      "candidate_info": {
        "commit_hash": "c7e5554393d5b423a51d0f0512234c9aadd90d11",
        "repo": "libav/libav",
        "commit_url": "https://github.com/libav/libav/commit/c7e5554393d5b423a51d0f0512234c9aadd90d11",
        "files": [
          "libavcodec/smacker.c"
        ],
        "message": "smacker: add sanity check for length in smacker_decode_tree()\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n\nBug-Id: 1098\nCc: libav-stable@libav.org\nSigned-off-by: Sean McGovern <gseanmcg@gmail.com>\n(cherry picked from commit cd4663dc80323ba64989d0c103d51ad3ee0e9c2f)\nSigned-off-by: Sean McGovern <gseanmcg@gmail.com>",
        "before_after_code_files": [
          "libavcodec/smacker.c||libavcodec/smacker.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ],
          "candidate": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/smacker.c||libavcodec/smacker.c": [
          "File: libavcodec/smacker.c -> libavcodec/smacker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: #define SMKTREE_BITS 9",
          "44: #define SMK_NODE 0x80000000",
          "47: typedef struct SmackVContext {",
          "48:     AVCodecContext *avctx;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: #define SMKTREE_DECODE_MAX_RECURSION 32",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96: static int smacker_decode_tree(GetBitContext *gb, HuffContext *hc, uint32_t prefix, int length)",
          "97: {",
          "98:     if(!get_bits1(gb)){ //Leaf",
          "99:         if(hc->current >= 256){",
          "100:             av_log(NULL, AV_LOG_ERROR, \"Tree size exceeded!\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:     if (length > SMKTREE_DECODE_MAX_RECURSION) {",
          "99:       av_log(NULL, AV_LOG_ERROR, \"Maximum tree recursion level exceeded.\\n\");",
          "100:       return AVERROR_INVALIDDATA;",
          "101:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f24056c8f0dece9af0f9743dfb97c171af41b2dc",
      "candidate_info": {
        "commit_hash": "f24056c8f0dece9af0f9743dfb97c171af41b2dc",
        "repo": "libav/libav",
        "commit_url": "https://github.com/libav/libav/commit/f24056c8f0dece9af0f9743dfb97c171af41b2dc",
        "files": [
          "libavcodec/smacker.c"
        ],
        "message": "smacker: add sanity check for length in smacker_decode_tree()\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n\nBug-Id: 1098\nCc: libav-stable@libav.org\nSigned-off-by: Sean McGovern <gseanmcg@gmail.com>\n(cherry picked from commit cd4663dc80323ba64989d0c103d51ad3ee0e9c2f)\nSigned-off-by: Sean McGovern <gseanmcg@gmail.com>",
        "before_after_code_files": [
          "libavcodec/smacker.c||libavcodec/smacker.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ],
          "candidate": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/smacker.c||libavcodec/smacker.c": [
          "File: libavcodec/smacker.c -> libavcodec/smacker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: #define SMKTREE_BITS 9",
          "44: #define SMK_NODE 0x80000000",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: #define SMKTREE_DECODE_MAX_RECURSION 32",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98: static int smacker_decode_tree(GetBitContext *gb, HuffContext *hc, uint32_t prefix, int length)",
          "99: {",
          "100:     if(!get_bits1(gb)){ //Leaf",
          "101:         if(hc->current >= 256){",
          "102:             av_log(NULL, AV_LOG_ERROR, \"Tree size exceeded!\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:     if (length > SMKTREE_DECODE_MAX_RECURSION) {",
          "102:         av_log(NULL, AV_LOG_ERROR, \"Maximum tree recursion level exceeded.\\n\");",
          "103:         return AVERROR_INVALIDDATA;",
          "104:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}