{
  "cve_id": "CVE-2015-0232",
  "cve_desc": "The exif_process_unicode function in ext/exif/exif.c in PHP before 5.4.37, 5.5.x before 5.5.21, and 5.6.x before 5.6.5 allows remote attackers to execute arbitrary code or cause a denial of service (uninitialized pointer free and application crash) via crafted EXIF data in a JPEG image.",
  "repo": "php/php-src",
  "patch_hash": "2fc178cf448d8e1b95d1314e47eeef610729e0df",
  "patch_info": {
    "commit_hash": "2fc178cf448d8e1b95d1314e47eeef610729e0df",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/2fc178cf448d8e1b95d1314e47eeef610729e0df",
    "files": [
      "ext/exif/exif.c",
      "ext/exif/tests/bug68799.jpg",
      "ext/exif/tests/bug68799.phpt"
    ],
    "message": "Fix bug #68799: Free called on unitialized pointer",
    "before_after_code_files": [
      "ext/exif/exif.c||ext/exif/exif.c",
      "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt"
    ]
  },
  "patch_diff": {
    "ext/exif/exif.c||ext/exif/exif.c": [
      "File: ext/exif/exif.c -> ext/exif/exif.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2702: static int exif_process_unicode(image_info_type *ImageInfo, xp_field_type *xp_field, int tag, char *szValuePtr, int ByteCount TSRMLS_DC)",
      "2703: {",
      "2704:  xp_field->tag = tag;",
      "2707:  if (zend_multibyte_encoding_converter(",
      "2708:    (unsigned char**)&xp_field->value,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2705:  xp_field->value = NULL;",
      "",
      "---------------"
    ],
    "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt": [
      "File: ext/exif/tests/bug68799.phpt -> ext/exif/tests/bug68799.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #68799 (Free called on unitialized pointer)",
      "3: --SKIPIF--",
      "4: <?php if (!extension_loaded('exif')) print 'skip exif extension not available';?>",
      "5: --FILE--",
      "6: <?php",
      "10: class A {",
      "11:     function __construct() {",
      "12:         $a = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa';",
      "13:         $this->a = $a . $a . $a . $a . $a . $a;",
      "14:     }",
      "15: };",
      "17: function doStuff ($limit) {",
      "19:     $a = new A;",
      "21:     $b = array();",
      "22:     for ($i = 0; $i < $limit; $i++) {",
      "23:         $b[$i] = clone $a;",
      "24:     }",
      "26:     unset($a);",
      "28:     gc_collect_cycles();",
      "29: }",
      "31: $iterations = 3;",
      "33: doStuff($iterations);",
      "34: doStuff($iterations);",
      "36: gc_collect_cycles();",
      "38: print_r(exif_read_data(__DIR__.'/bug68799.jpg'));",
      "40: ?>",
      "41: --EXPECTF--",
      "42: Array",
      "43: (",
      "44:     [FileName] => bug68799.jpg",
      "45:     [FileDateTime] => %d",
      "46:     [FileSize] => 735",
      "47:     [FileType] => 2",
      "48:     [MimeType] => image/jpeg",
      "49:     [SectionsFound] => ANY_TAG, IFD0, WINXP",
      "50:     [COMPUTED] => Array",
      "51:         (",
      "52:             [html] => width=\"1\" height=\"1\"",
      "53:             [Height] => 1",
      "54:             [Width] => 1",
      "55:             [IsColor] => 1",
      "56:             [ByteOrderMotorola] => 1",
      "57:         )",
      "59:     [XResolution] => 96/1",
      "60:     [YResolution] => 96/1",
      "61:     [ResolutionUnit] => 2",
      "62:     [Author] =>",
      "63: )",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "363e6ce60b744673c5c3cd5e11486674bcb96a6b",
      "candidate_info": {
        "commit_hash": "363e6ce60b744673c5c3cd5e11486674bcb96a6b",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/363e6ce60b744673c5c3cd5e11486674bcb96a6b",
        "files": [
          "Zend/tests/bug43201.phpt",
          "Zend/zend_gc.c",
          "ext/curl/interface.c",
          "ext/curl/tests/bug69316.phpt",
          "ext/exif/tests/bug68799.phpt",
          "ext/mysqli/tests/mysqli_fetch_field_flags.phpt",
          "ext/odbc/php_odbc.c",
          "ext/odbc/php_odbc_includes.h",
          "ext/odbc/tests/bug60616.phpt",
          "ext/odbc/tests/bug69354.phpt",
          "ext/odbc/tests/odbc_exec_001.phpt",
          "ext/odbc/tests/odbc_free_result_001.phpt",
          "ext/opcache/tests/bug69281.phpt",
          "ext/opcache/tests/is_script_cached.phpt",
          "ext/opcache/zend_accelerator_module.c",
          "ext/opcache/zend_shared_alloc.c",
          "ext/pcre/pcrelib/pcre_exec.c",
          "ext/pdo_mysql/tests/pdo_mysql_pconnect.phpt",
          "ext/xmlwriter/php_xmlwriter.c",
          "ext/zip/php_zip.c"
        ],
        "message": "Merge branch 'PHP-5.5-security' into PHP-5.5.24\n\n* PHP-5.5-security: (22 commits)\n  Fixed bug #69316 (Use-after-free in php_curl related to CURLOPT_FILE/_INFILE/_WRITEHEADER)\n  Fix bug #68486 and bug #69218 (segfault in apache2handler with apache 2.4)\n  Fix bug #68819 (Fileinfo on specific file causes spurious OOM and/or segfault)\n  updated NEWS\n  added test for bug #69354\n  revert skipif, this should run everywhere\n  further ODBC 3.0 compliance\n  more compliance with the ODBC 3.0\n  test fixes\n  Prevent GC from changing zval or object 'color' before they are actually inserted into possible roots buffer.\n  sigh, can't even copypaste without screwing up\n  oop, put both the error number and message for both db object to the error message\n  test fixes\n  Fixed bug #69281 (opcache_is_script_cached no longer works)\n  Fix typo: unitialized -> uninitialized\n  Fix typo: unitialized -> uninitialized\n  Fixed bug #68739 (Missing break / control flow). Fixed bug #68740 (NULL Pointer Dereference). Fixed bug #68677 (Use After Free).\n  Fixed bug #68739 (Missing break / control flow in curl)\n  Fixed bug #68740 (NULL Pointer Dereference)\n  Fixed bug #68677 (Use After Free in OPcache)\n  ...\n\nConflicts:\n\tconfigure.in\n\text/curl/tests/bug69316.phpt\n\tmain/php_version.h",
        "before_after_code_files": [
          "Zend/tests/bug43201.phpt||Zend/tests/bug43201.phpt",
          "Zend/zend_gc.c||Zend/zend_gc.c",
          "ext/curl/interface.c||ext/curl/interface.c",
          "ext/curl/tests/bug69316.phpt||ext/curl/tests/bug69316.phpt",
          "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt",
          "ext/mysqli/tests/mysqli_fetch_field_flags.phpt||ext/mysqli/tests/mysqli_fetch_field_flags.phpt",
          "ext/odbc/php_odbc.c||ext/odbc/php_odbc.c",
          "ext/odbc/php_odbc_includes.h||ext/odbc/php_odbc_includes.h",
          "ext/odbc/tests/bug60616.phpt||ext/odbc/tests/bug60616.phpt",
          "ext/odbc/tests/bug69354.phpt||ext/odbc/tests/bug69354.phpt",
          "ext/odbc/tests/odbc_exec_001.phpt||ext/odbc/tests/odbc_exec_001.phpt",
          "ext/odbc/tests/odbc_free_result_001.phpt||ext/odbc/tests/odbc_free_result_001.phpt",
          "ext/opcache/tests/bug69281.phpt||ext/opcache/tests/bug69281.phpt",
          "ext/opcache/tests/is_script_cached.phpt||ext/opcache/tests/is_script_cached.phpt",
          "ext/opcache/zend_accelerator_module.c||ext/opcache/zend_accelerator_module.c",
          "ext/opcache/zend_shared_alloc.c||ext/opcache/zend_shared_alloc.c",
          "ext/pcre/pcrelib/pcre_exec.c||ext/pcre/pcrelib/pcre_exec.c",
          "ext/pdo_mysql/tests/pdo_mysql_pconnect.phpt||ext/pdo_mysql/tests/pdo_mysql_pconnect.phpt",
          "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c",
          "ext/zip/php_zip.c||ext/zip/php_zip.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt"
          ],
          "candidate": [
            "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt"
          ]
        }
      },
      "candidate_diff": {
        "Zend/tests/bug43201.phpt||Zend/tests/bug43201.phpt": [
          "File: Zend/tests/bug43201.phpt -> Zend/tests/bug43201.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: --TEST--",
          "3: --FILE--",
          "4: <?php",
          "5: class Foo {",
          "",
          "[Removed Lines]",
          "2: Bug #43201 (Crash on using unitialized vals and __get/__set)",
          "",
          "[Added Lines]",
          "2: Bug #43201 (Crash on using uninitialized vals and __get/__set)",
          "",
          "---------------"
        ],
        "Zend/zend_gc.c||Zend/zend_gc.c": [
          "File: Zend/zend_gc.c -> Zend/zend_gc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "147:  GC_BENCH_INC(zval_possible_root);",
          "149:  if (GC_ZVAL_GET_COLOR(zv) != GC_PURPLE) {",
          "152:   if (!GC_ZVAL_ADDRESS(zv)) {",
          "153:    gc_root_buffer *newRoot = GC_G(unused);",
          "",
          "[Removed Lines]",
          "150:   GC_ZVAL_SET_PURPLE(zv);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:     GC_G(first_unused)++;",
          "160:    } else {",
          "161:     if (!GC_G(gc_enabled)) {",
          "163:      return;",
          "164:     }",
          "165:     zv->refcount__gc++;",
          "",
          "[Removed Lines]",
          "162:      GC_ZVAL_SET_BLACK(zv);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "169:     if (!newRoot) {",
          "170:      return;",
          "171:     }",
          "173:     GC_G(unused) = newRoot->prev;",
          "174:    }",
          "176:    newRoot->next = GC_G(roots).next;",
          "177:    newRoot->prev = &GC_G(roots);",
          "178:    GC_G(roots).next->prev = newRoot;",
          "",
          "[Removed Lines]",
          "172:     GC_ZVAL_SET_PURPLE(zv);",
          "",
          "[Added Lines]",
          "172:    GC_ZVAL_SET_PURPLE(zv);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "204:  obj = &EG(objects_store).object_buckets[Z_OBJ_HANDLE_P(zv)].bucket.obj;",
          "205:  if (GC_GET_COLOR(obj->buffered) != GC_PURPLE) {",
          "207:   if (!GC_ADDRESS(obj->buffered)) {",
          "208:    gc_root_buffer *newRoot = GC_G(unused);",
          "",
          "[Removed Lines]",
          "206:   GC_SET_PURPLE(obj->buffered);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "214:     GC_G(first_unused)++;",
          "215:    } else {",
          "216:     if (!GC_G(gc_enabled)) {",
          "218:      return;",
          "219:     }",
          "220:     zv->refcount__gc++;",
          "",
          "[Removed Lines]",
          "217:      GC_ZVAL_SET_BLACK(zv);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "225:      return;",
          "226:     }",
          "227:     obj = &EG(objects_store).object_buckets[Z_OBJ_HANDLE_P(zv)].bucket.obj;",
          "229:     GC_G(unused) = newRoot->prev;",
          "230:    }",
          "232:    newRoot->next = GC_G(roots).next;",
          "233:    newRoot->prev = &GC_G(roots);",
          "234:    GC_G(roots).next->prev = newRoot;",
          "",
          "[Removed Lines]",
          "228:     GC_SET_PURPLE(obj->buffered);",
          "",
          "[Added Lines]",
          "226:    GC_SET_PURPLE(obj->buffered);",
          "",
          "---------------"
        ],
        "ext/curl/interface.c||ext/curl/interface.c": [
          "File: ext/curl/interface.c -> ext/curl/interface.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1420:    if (error == FAILURE) {",
          "1421:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Cannot call the CURLOPT_FNMATCH_FUNCTION\");",
          "1422:    } else if (retval_ptr) {",
          "1423:     if (Z_TYPE_P(retval_ptr) != IS_LONG) {",
          "1424:      convert_to_long_ex(&retval_ptr);",
          "1425:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1423:     _php_curl_verify_handlers(ch, 1 TSRMLS_CC);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2855:      curl_easy_setopt(ch->cp, CURLOPT_SHARE, sh->share);",
          "2856:     }",
          "2857:    }",
          "2860:   case CURLOPT_FNMATCH_FUNCTION:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2859:    break;",
          "",
          "---------------"
        ],
        "ext/curl/tests/bug69316.phpt||ext/curl/tests/bug69316.phpt": [
          "File: ext/curl/tests/bug69316.phpt -> ext/curl/tests/bug69316.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: --TEST--",
          "2: Bug #69316: Use-after-free in php_curl related to CURLOPT_FILE/_INFILE/_WRITEHEADER",
          "3: --SKIPIF--",
          "8: --FILE--",
          "9: <?php",
          "10:   function hdr_callback($ch, $data) {",
          "",
          "[Removed Lines]",
          "4: <?php",
          "5: if (!extension_loaded(\"curl\")) exit(\"skip curl extension not loaded\");",
          "6: if (false === getenv('PHP_CURL_HTTP_REMOTE_SERVER'))  exit(\"skip PHP_CURL_HTTP_REMOTE_SERVER env variable is not defined\");",
          "7: ?>",
          "",
          "[Added Lines]",
          "4: <?php include 'skipif.inc'; ?>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:       }",
          "19:       return strlen($data);",
          "20:   }",
          "23:   $temp_file = dirname(__FILE__) . '/body.tmp';",
          "24:   $url = \"{$host}/get.php?test=getpost\";",
          "25:   $ch = curl_init();",
          "",
          "[Removed Lines]",
          "21:   $host = getenv('PHP_CURL_HTTP_REMOTE_SERVER');",
          "",
          "[Added Lines]",
          "19:   include 'server.inc';",
          "20:   $host = curl_cli_server_start();",
          "",
          "---------------"
        ],
        "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt": [
          "File: ext/exif/tests/bug68799.phpt -> ext/exif/tests/bug68799.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: --TEST--",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded('exif')) print 'skip exif extension not available';?>",
          "5: --FILE--",
          "",
          "[Removed Lines]",
          "2: Bug #68799 (Free called on unitialized pointer)",
          "",
          "[Added Lines]",
          "2: Bug #68799 (Free called on uninitialized pointer)",
          "",
          "---------------"
        ],
        "ext/mysqli/tests/mysqli_fetch_field_flags.phpt||ext/mysqli/tests/mysqli_fetch_field_flags.phpt": [
          "File: ext/mysqli/tests/mysqli_fetch_field_flags.phpt -> ext/mysqli/tests/mysqli_fetch_field_flags.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "199:  if (!mysqli_query($link, 'DROP TABLE IF EXISTS test')) {",
          "200:   printf(\"[008] %s [%d] %s\\n\", $column_def,",
          "201:    mysqli_errno($link), mysqli_error($link));",
          "203:  }",
          "205:  $column_def = array('col1 CHAR(1)', 'col2 CHAR(2)','INDEX idx_col1_col2(col1, col2)');",
          "",
          "[Removed Lines]",
          "202:   continue;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "220:   while ($field = mysqli_fetch_field($res)) {",
          "221:    if (!isset($expected_flags[$field->name])) {",
          "222:     printf(\"[010] Found unexpected field '%s'\\n\", $field->name);",
          "224:    }",
          "225:    list($missing_flags, $unexpected_flags, $flags_found) = checkFlags($field->flags, $expected_flags[$field->name], $flags);",
          "226:    if ($unexpected_flags)",
          "",
          "[Removed Lines]",
          "223:     continue;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/odbc/php_odbc.c||ext/odbc/php_odbc.c": [
          "File: ext/odbc/php_odbc.c -> ext/odbc/php_odbc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "960:   charextraalloc = 0;",
          "961:   colfieldid = SQL_COLUMN_DISPLAY_SIZE;",
          "964:     result->values[i].name, sizeof(result->values[i].name), &colnamelen, 0);",
          "966:     NULL, 0, NULL, &result->values[i].coltype);",
          "",
          "[Removed Lines]",
          "963:   rc = SQLColAttributes(result->stmt, (SQLUSMALLINT)(i+1), SQL_COLUMN_NAME,",
          "965:   rc = SQLColAttributes(result->stmt, (SQLUSMALLINT)(i+1), SQL_COLUMN_TYPE,",
          "",
          "[Added Lines]",
          "963:   rc = PHP_ODBC_SQLCOLATTRIBUTE(result->stmt, (SQLUSMALLINT)(i+1), PHP_ODBC_DESC_BASE_COLUMN_NAME,",
          "965:   rc = PHP_ODBC_SQLCOLATTRIBUTE(result->stmt, (SQLUSMALLINT)(i+1), SQL_COLUMN_TYPE,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "997:     charextraalloc = 1;",
          "998: #endif",
          "999:    default:",
          "1001:         NULL, 0, NULL, &displaysize);",
          "1003:     if (result->values[i].coltype == SQL_TIMESTAMP) {",
          "",
          "[Removed Lines]",
          "1000:     rc = SQLColAttributes(result->stmt, (SQLUSMALLINT)(i+1), colfieldid,",
          "",
          "[Added Lines]",
          "1000:     rc = PHP_ODBC_SQLCOLATTRIBUTE(result->stmt, (SQLUSMALLINT)(i+1), colfieldid,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1091:   RETURN_FALSE;",
          "1092:  }",
          "1096:  RETURN_LONG(len);",
          "1097: }",
          "",
          "[Removed Lines]",
          "1094:  SQLColAttributes(result->stmt, (SQLUSMALLINT)pv_num, (SQLUSMALLINT) (type?SQL_COLUMN_SCALE:SQL_COLUMN_PRECISION), NULL, 0, NULL, &len);",
          "",
          "[Added Lines]",
          "1094:  PHP_ODBC_SQLCOLATTRIBUTE(result->stmt, (SQLUSMALLINT)pv_num, (SQLUSMALLINT) (type?SQL_COLUMN_SCALE:SQL_COLUMN_PRECISION), NULL, 0, NULL, &len);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2135:        fieldsize = result->longreadlen;",
          "2136:     }",
          "2137:    } else {",
          "2139:            (SQLUSMALLINT)((sql_c_type == SQL_C_BINARY) ? SQL_COLUMN_LENGTH :",
          "2140:            SQL_COLUMN_DISPLAY_SIZE),",
          "2141:            NULL, 0, NULL, &fieldsize);",
          "",
          "[Removed Lines]",
          "2138:       SQLColAttributes(result->stmt, (SQLUSMALLINT)(field_ind + 1),",
          "",
          "[Added Lines]",
          "2138:       PHP_ODBC_SQLCOLATTRIBUTE(result->stmt, (SQLUSMALLINT)(field_ind + 1),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2871:   RETURN_FALSE;",
          "2872:  }",
          "2875:  RETURN_STRING(tmp,1)",
          "2876: }",
          "",
          "[Removed Lines]",
          "2874:  SQLColAttributes(result->stmt, (SQLUSMALLINT)pv_num, SQL_COLUMN_TYPE_NAME, tmp, 31, &tmplen, NULL);",
          "",
          "[Added Lines]",
          "2874:  PHP_ODBC_SQLCOLATTRIBUTE(result->stmt, (SQLUSMALLINT)pv_num, SQL_COLUMN_TYPE_NAME, tmp, 31, &tmplen, NULL);",
          "",
          "---------------"
        ],
        "ext/odbc/php_odbc_includes.h||ext/odbc/php_odbc_includes.h": [
          "File: ext/odbc/php_odbc_includes.h -> ext/odbc/php_odbc_includes.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "282: #if defined(ODBCVER) && (ODBCVER >= 0x0300)",
          "283: #define IS_SQL_LONG(x) (x == SQL_LONGVARBINARY || x == SQL_LONGVARCHAR || x == SQL_WLONGVARCHAR)",
          "284: #else",
          "285: #define IS_SQL_LONG(x) (x == SQL_LONGVARBINARY || x == SQL_LONGVARCHAR)",
          "286: #endif",
          "287: #define IS_SQL_BINARY(x) (x == SQL_BINARY || x == SQL_VARBINARY || x == SQL_LONGVARBINARY)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "285: #define PHP_ODBC_SQLCOLATTRIBUTE SQLColAttribute",
          "287: #define PHP_ODBC_DESC_BASE_COLUMN_NAME SQL_DESC_BASE_COLUMN_NAME",
          "291: #define PHP_ODBC_SQLCOLATTRIBUTE SQLColAttributes",
          "293: #define PHP_ODBC_DESC_BASE_COLUMN_NAME SQL_COLUMN_NAME",
          "",
          "---------------"
        ],
        "ext/odbc/tests/bug60616.phpt||ext/odbc/tests/bug60616.phpt": [
          "File: ext/odbc/tests/bug60616.phpt -> ext/odbc/tests/bug60616.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: odbc_exec(): Getting accurate unicode data from query",
          "3: --SKIPIF--",
          "4: <?php include 'skipif.inc'; ?>",
          "5: --FILE--",
          "6: <?php",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: <?php",
          "6:  if (\"unixODBC\" != ODBC_TYPE) {",
          "7:   die(\"skip ODBC_TYPE != unixODBC\");",
          "8:  }",
          "9: ?>",
          "",
          "---------------"
        ],
        "ext/odbc/tests/bug69354.phpt||ext/odbc/tests/bug69354.phpt": [
          "File: ext/odbc/tests/bug69354.phpt -> ext/odbc/tests/bug69354.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #69354 Incorrect use of SQLColAttributes with ODBC 3.0",
          "3: --SKIPIF--",
          "4: <?php include 'skipif.inc'; ?>",
          "5: --FILE--",
          "6: <?php",
          "8: include 'config.inc';",
          "10: $conn = odbc_connect($dsn, $user, $pass);",
          "12: @odbc_exec($conn, 'CREATE DATABASE odbcTEST');",
          "14: odbc_exec($conn, 'CREATE TABLE FOO (ID INT, VARCHAR_COL VARCHAR(100))');",
          "16: odbc_exec($conn, \"INSERT INTO FOO(ID, VARCHAR_COL) VALUES (1, '\" . str_repeat(\"a\", 100) . \"')\");",
          "18: $res = odbc_exec($conn,\"select VARCHAR_COL from FOO\");",
          "19: if ($res) {",
          "20:  if (odbc_fetch_row($res)) {",
          "21:   $ret = odbc_result($res,'varchar_col');",
          "22:   echo strlen($ret), \"\\n\";",
          "23:   echo $ret[0], \"\\n\";",
          "24:   echo $ret[strlen($ret)-1], \"\\n\";",
          "25:  }",
          "26: }",
          "27: ?>",
          "28: ==DONE==",
          "29: --EXPECT--",
          "30: 100",
          "31: a",
          "32: a",
          "33: ==DONE==",
          "34: --CLEAN--",
          "35: <?php",
          "36: include 'config.inc';",
          "38: $conn = odbc_connect($dsn, $user, $pass);",
          "40: odbc_exec($conn, 'DROP TABLE FOO');",
          "41: odbc_exec($conn, 'DROP DATABASE odbcTEST');",
          "43: ?>",
          "",
          "---------------"
        ],
        "ext/odbc/tests/odbc_exec_001.phpt||ext/odbc/tests/odbc_exec_001.phpt": [
          "File: ext/odbc/tests/odbc_exec_001.phpt -> ext/odbc/tests/odbc_exec_001.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: odbc_exec(): Basic test",
          "3: --SKIPIF--",
          "4: <?php include 'skipif.inc'; ?>",
          "5: --FILE--",
          "6: <?php",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: <?php",
          "6:  if (\"unixODBC\" != ODBC_TYPE) {",
          "7:   die(\"skip ODBC_TYPE != unixODBC\");",
          "8:  }",
          "9: ?>",
          "",
          "---------------"
        ],
        "ext/odbc/tests/odbc_free_result_001.phpt||ext/odbc/tests/odbc_free_result_001.phpt": [
          "File: ext/odbc/tests/odbc_free_result_001.phpt -> ext/odbc/tests/odbc_free_result_001.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: odbc_exec($conn, 'CREATE DATABASE odbcTEST');",
          "15: odbc_exec($conn, 'ALTER TABLE FOO ADD PRIMARY KEY (TEST)');",
          "17: odbc_exec($conn, 'INSERT INTO FOO VALUES (1)');",
          "",
          "[Removed Lines]",
          "14: odbc_exec($conn, 'CREATE TABLE FOO (TEST INT)');",
          "",
          "[Added Lines]",
          "14: odbc_exec($conn, 'CREATE TABLE FOO (TEST INT NOT NULL)');",
          "",
          "---------------"
        ],
        "ext/opcache/tests/bug69281.phpt||ext/opcache/tests/bug69281.phpt": [
          "File: ext/opcache/tests/bug69281.phpt -> ext/opcache/tests/bug69281.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Test that script cached info is correct with validate_timestamps disabled",
          "3: --INI--",
          "4: opcache.enable=1",
          "5: opcache.enable_cli=1",
          "6: opcache.file_update_protection=0",
          "7: opcache.validate_timestamps=0",
          "8: --SKIPIF--",
          "9: <?php require_once('skipif.inc'); ?>",
          "10: --FILE--",
          "11: <?php",
          "12: var_dump(opcache_is_script_cached(__FILE__));",
          "13: var_dump(opcache_is_script_cached(\"nonexistent.php\"));",
          "14: ?>",
          "15: --EXPECT--",
          "16: bool(true)",
          "17: bool(false)",
          "",
          "---------------"
        ],
        "ext/opcache/tests/is_script_cached.phpt||ext/opcache/tests/is_script_cached.phpt": [
          "File: ext/opcache/tests/is_script_cached.phpt -> ext/opcache/tests/is_script_cached.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: opcache.enable=1",
          "5: opcache.enable_cli=1",
          "6: opcache.file_update_protection=0",
          "7: --SKIPIF--",
          "8: <?php require_once('skipif.inc'); ?>",
          "9: --FILE--",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: opcache.validate_timestamps=1",
          "",
          "---------------"
        ],
        "ext/opcache/zend_accelerator_module.c||ext/opcache/zend_accelerator_module.c": [
          "File: ext/opcache/zend_accelerator_module.c -> ext/opcache/zend_accelerator_module.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:   persistent_script = zend_accel_hash_find(&ZCSG(hash), filename, filename_len + 1);",
          "321:   if (persistent_script) {",
          "322:    return !persistent_script->corrupted &&",
          "324:   }",
          "325:  }",
          "327:  if ((key = accel_make_persistent_key_ex(&handle, filename_len, &key_length TSRMLS_CC)) != NULL) {",
          "328:   persistent_script = zend_accel_hash_find(&ZCSG(hash), key, key_length + 1);",
          "329:   return persistent_script && !persistent_script->corrupted &&",
          "331:  }",
          "333:  return 0;",
          "",
          "[Removed Lines]",
          "323:     validate_timestamp_and_record(persistent_script, &handle TSRMLS_CC) == SUCCESS;",
          "330:    validate_timestamp_and_record(persistent_script, &handle TSRMLS_CC) == SUCCESS;",
          "",
          "[Added Lines]",
          "323:     (!ZCG(accel_directives).validate_timestamps ||",
          "324:     validate_timestamp_and_record(persistent_script, &handle TSRMLS_CC) == SUCCESS);",
          "331:    (!ZCG(accel_directives).validate_timestamps ||",
          "332:    validate_timestamp_and_record(persistent_script, &handle TSRMLS_CC) == SUCCESS);",
          "",
          "---------------"
        ],
        "ext/opcache/zend_shared_alloc.c||ext/opcache/zend_shared_alloc.c": [
          "File: ext/opcache/zend_shared_alloc.c -> ext/opcache/zend_shared_alloc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "346:  retval = ZCG(mem);;",
          "347:  ZCG(mem) = (void*)(((char*)ZCG(mem)) + ZEND_ALIGNED_SIZE(size));",
          "348:  memcpy(retval, source, size);",
          "349:  if (free_source) {",
          "350:   interned_efree((char*)source);",
          "351:  }",
          "353:  return retval;",
          "354: }",
          "",
          "[Removed Lines]",
          "352:  zend_shared_alloc_register_xlat_entry(source, retval);",
          "",
          "[Added Lines]",
          "349:  zend_shared_alloc_register_xlat_entry(source, retval);",
          "",
          "---------------"
        ],
        "ext/pcre/pcrelib/pcre_exec.c||ext/pcre/pcrelib/pcre_exec.c": [
          "File: ext/pcre/pcrelib/pcre_exec.c -> ext/pcre/pcrelib/pcre_exec.c"
        ],
        "ext/pdo_mysql/tests/pdo_mysql_pconnect.phpt||ext/pdo_mysql/tests/pdo_mysql_pconnect.phpt": [
          "File: ext/pdo_mysql/tests/pdo_mysql_pconnect.phpt -> ext/pdo_mysql/tests/pdo_mysql_pconnect.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "87:  } catch (PDOException $e) {",
          "89:    $e->getMessage(),",
          "92:  }",
          "94:  print \"done!\";",
          "",
          "[Removed Lines]",
          "88:   printf(\"[001] %s, [%s] %s\\n\",",
          "90:    (is_object($db)) ? $db->errorCode() : 'n/a',",
          "91:    (is_object($db)) ? implode(' ', $db->errorInfo()) : 'n/a');",
          "",
          "[Added Lines]",
          "88:   printf(\"[001] %s, [%s] %s [%s] %s\\n\",",
          "90:    (is_object($db1)) ? $db1->errorCode() : 'n/a',",
          "91:    (is_object($db1)) ? implode(' ', $db1->errorInfo()) : 'n/a',",
          "92:    (is_object($db2)) ? $db2->errorCode() : 'n/a',",
          "93:    (is_object($db2)) ? implode(' ', $db2->errorInfo()) : 'n/a');",
          "",
          "---------------"
        ],
        "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c": [
          "File: ext/xmlwriter/php_xmlwriter.c -> ext/xmlwriter/php_xmlwriter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:   ze_xmlwriter_object *obj = (ze_xmlwriter_object*) zend_object_store_get_object(object TSRMLS_CC); \\",
          "114:   intern = obj->xmlwriter_ptr; \\",
          "115:   if (!intern) { \\",
          "117:    RETURN_FALSE; \\",
          "118:   } \\",
          "119:  }",
          "",
          "[Removed Lines]",
          "116:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid or unitialized XMLWriter object\"); \\",
          "",
          "[Added Lines]",
          "116:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid or uninitialized XMLWriter object\"); \\",
          "",
          "---------------"
        ],
        "ext/zip/php_zip.c||ext/zip/php_zip.c": [
          "File: ext/zip/php_zip.c -> ext/zip/php_zip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:   ze_zip_object *obj = (ze_zip_object*) zend_object_store_get_object(object TSRMLS_CC); \\",
          "418:   intern = obj->za; \\",
          "419:   if (!intern) { \\",
          "421:    RETURN_FALSE; \\",
          "422:   } \\",
          "423:  }",
          "",
          "[Removed Lines]",
          "420:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid or unitialized Zip object\"); \\",
          "",
          "[Added Lines]",
          "420:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid or uninitialized Zip object\"); \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "59c2a55ec7cbc70cc0227a127d3859fdc95566e7",
      "candidate_info": {
        "commit_hash": "59c2a55ec7cbc70cc0227a127d3859fdc95566e7",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/59c2a55ec7cbc70cc0227a127d3859fdc95566e7",
        "files": [
          "NEWS",
          "ext/exif/tests/bug68799.phpt",
          "ext/pcre/pcrelib/pcre_exec.c",
          "ext/xmlwriter/php_xmlwriter.c",
          "ext/zip/php_zip.c"
        ],
        "message": "Fix typo: unitialized -> uninitialized",
        "before_after_code_files": [
          "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt",
          "ext/pcre/pcrelib/pcre_exec.c||ext/pcre/pcrelib/pcre_exec.c",
          "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c",
          "ext/zip/php_zip.c||ext/zip/php_zip.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt"
          ],
          "candidate": [
            "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt": [
          "File: ext/exif/tests/bug68799.phpt -> ext/exif/tests/bug68799.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: --TEST--",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded('exif')) print 'skip exif extension not available';?>",
          "5: --FILE--",
          "",
          "[Removed Lines]",
          "2: Bug #68799 (Free called on unitialized pointer)",
          "",
          "[Added Lines]",
          "2: Bug #68799 (Free called on uninitialized pointer)",
          "",
          "---------------"
        ],
        "ext/pcre/pcrelib/pcre_exec.c||ext/pcre/pcrelib/pcre_exec.c": [
          "File: ext/pcre/pcrelib/pcre_exec.c -> ext/pcre/pcrelib/pcre_exec.c"
        ],
        "ext/xmlwriter/php_xmlwriter.c||ext/xmlwriter/php_xmlwriter.c": [
          "File: ext/xmlwriter/php_xmlwriter.c -> ext/xmlwriter/php_xmlwriter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:   ze_xmlwriter_object *obj = (ze_xmlwriter_object*) zend_object_store_get_object(object TSRMLS_CC); \\",
          "114:   intern = obj->xmlwriter_ptr; \\",
          "115:   if (!intern) { \\",
          "117:    RETURN_FALSE; \\",
          "118:   } \\",
          "119:  }",
          "",
          "[Removed Lines]",
          "116:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid or unitialized XMLWriter object\"); \\",
          "",
          "[Added Lines]",
          "116:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid or uninitialized XMLWriter object\"); \\",
          "",
          "---------------"
        ],
        "ext/zip/php_zip.c||ext/zip/php_zip.c": [
          "File: ext/zip/php_zip.c -> ext/zip/php_zip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:   ze_zip_object *obj = (ze_zip_object*) zend_object_store_get_object(object TSRMLS_CC); \\",
          "418:   intern = obj->za; \\",
          "419:   if (!intern) { \\",
          "421:    RETURN_FALSE; \\",
          "422:   } \\",
          "423:  }",
          "",
          "[Removed Lines]",
          "420:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid or unitialized Zip object\"); \\",
          "",
          "[Added Lines]",
          "420:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Invalid or uninitialized Zip object\"); \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21bc7464f454fec18a9ec024c738f195602fee2a",
      "candidate_info": {
        "commit_hash": "21bc7464f454fec18a9ec024c738f195602fee2a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/21bc7464f454fec18a9ec024c738f195602fee2a",
        "files": [
          "ext/exif/exif.c",
          "ext/exif/tests/bug68799.jpg",
          "ext/exif/tests/bug68799.phpt"
        ],
        "message": "Fix bug #68799: Free called on unitialized pointer",
        "before_after_code_files": [
          "ext/exif/exif.c||ext/exif/exif.c",
          "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/exif/exif.c||ext/exif/exif.c",
            "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt"
          ],
          "candidate": [
            "ext/exif/exif.c||ext/exif/exif.c",
            "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/exif/exif.c||ext/exif/exif.c": [
          "File: ext/exif/exif.c -> ext/exif/exif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2692: static int exif_process_unicode(image_info_type *ImageInfo, xp_field_type *xp_field, int tag, char *szValuePtr, int ByteCount TSRMLS_DC)",
          "2693: {",
          "2694:  xp_field->tag = tag;",
          "2697:  if (zend_multibyte_encoding_converter(",
          "2698:    (unsigned char**)&xp_field->value,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2695:  xp_field->value = NULL;",
          "",
          "---------------"
        ],
        "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt": [
          "File: ext/exif/tests/bug68799.phpt -> ext/exif/tests/bug68799.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #68799 (Free called on unitialized pointer)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded('exif')) print 'skip exif extension not available';?>",
          "5: --FILE--",
          "6: <?php",
          "10: class A {",
          "11:     function __construct() {",
          "12:         $a = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa';",
          "13:         $this->a = $a . $a . $a . $a . $a . $a;",
          "14:     }",
          "15: };",
          "17: function doStuff ($limit) {",
          "19:     $a = new A;",
          "21:     $b = array();",
          "22:     for ($i = 0; $i < $limit; $i++) {",
          "23:         $b[$i] = clone $a;",
          "24:     }",
          "26:     unset($a);",
          "28:     gc_collect_cycles();",
          "29: }",
          "31: $iterations = 3;",
          "33: doStuff($iterations);",
          "34: doStuff($iterations);",
          "36: gc_collect_cycles();",
          "38: print_r(exif_read_data(__DIR__.'/bug68799.jpg'));",
          "40: ?>",
          "41: --EXPECTF--",
          "42: Array",
          "43: (",
          "44:     [FileName] => bug68799.jpg",
          "45:     [FileDateTime] => %d",
          "46:     [FileSize] => 735",
          "47:     [FileType] => 2",
          "48:     [MimeType] => image/jpeg",
          "49:     [SectionsFound] => ANY_TAG, IFD0, WINXP",
          "50:     [COMPUTED] => Array",
          "51:         (",
          "52:             [html] => width=\"1\" height=\"1\"",
          "53:             [Height] => 1",
          "54:             [Width] => 1",
          "55:             [IsColor] => 1",
          "56:             [ByteOrderMotorola] => 1",
          "57:         )",
          "59:     [XResolution] => 96/1",
          "60:     [YResolution] => 96/1",
          "61:     [ResolutionUnit] => 2",
          "62:     [Author] =>",
          "63: )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "55001de6d8c6ed2aada870a76de1e4b4558737bf",
      "candidate_info": {
        "commit_hash": "55001de6d8c6ed2aada870a76de1e4b4558737bf",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/55001de6d8c6ed2aada870a76de1e4b4558737bf",
        "files": [
          "ext/exif/exif.c",
          "ext/exif/tests/bug68799.jpg",
          "ext/exif/tests/bug68799.phpt"
        ],
        "message": "Fix bug #68799: Free called on unitialized pointer",
        "before_after_code_files": [
          "ext/exif/exif.c||ext/exif/exif.c",
          "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/exif/exif.c||ext/exif/exif.c",
            "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt"
          ],
          "candidate": [
            "ext/exif/exif.c||ext/exif/exif.c",
            "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/exif/exif.c||ext/exif/exif.c": [
          "File: ext/exif/exif.c -> ext/exif/exif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2702: static int exif_process_unicode(image_info_type *ImageInfo, xp_field_type *xp_field, int tag, char *szValuePtr, int ByteCount TSRMLS_DC)",
          "2703: {",
          "2704:  xp_field->tag = tag;",
          "2707:  if (zend_multibyte_encoding_converter(",
          "2708:    (unsigned char**)&xp_field->value,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2705:  xp_field->value = NULL;",
          "",
          "---------------"
        ],
        "ext/exif/tests/bug68799.phpt||ext/exif/tests/bug68799.phpt": [
          "File: ext/exif/tests/bug68799.phpt -> ext/exif/tests/bug68799.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #68799 (Free called on unitialized pointer)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded('exif')) print 'skip exif extension not available';?>",
          "5: --FILE--",
          "6: <?php",
          "10: class A {",
          "11:     function __construct() {",
          "12:         $a = 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa';",
          "13:         $this->a = $a . $a . $a . $a . $a . $a;",
          "14:     }",
          "15: };",
          "17: function doStuff ($limit) {",
          "19:     $a = new A;",
          "21:     $b = array();",
          "22:     for ($i = 0; $i < $limit; $i++) {",
          "23:         $b[$i] = clone $a;",
          "24:     }",
          "26:     unset($a);",
          "28:     gc_collect_cycles();",
          "29: }",
          "31: $iterations = 3;",
          "33: doStuff($iterations);",
          "34: doStuff($iterations);",
          "36: gc_collect_cycles();",
          "38: print_r(exif_read_data(__DIR__.'/bug68799.jpg'));",
          "40: ?>",
          "41: --EXPECTF--",
          "42: Array",
          "43: (",
          "44:     [FileName] => bug68799.jpg",
          "45:     [FileDateTime] => %d",
          "46:     [FileSize] => 735",
          "47:     [FileType] => 2",
          "48:     [MimeType] => image/jpeg",
          "49:     [SectionsFound] => ANY_TAG, IFD0, WINXP",
          "50:     [COMPUTED] => Array",
          "51:         (",
          "52:             [html] => width=\"1\" height=\"1\"",
          "53:             [Height] => 1",
          "54:             [Width] => 1",
          "55:             [IsColor] => 1",
          "56:             [ByteOrderMotorola] => 1",
          "57:         )",
          "59:     [XResolution] => 96/1",
          "60:     [YResolution] => 96/1",
          "61:     [ResolutionUnit] => 2",
          "62:     [Author] =>",
          "63: )",
          "",
          "---------------"
        ]
      }
    }
  ]
}