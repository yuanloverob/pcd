{
  "cve_id": "CVE-2017-8294",
  "cve_desc": "libyara/re.c in the regex component in YARA 3.5.0 allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted rule that is mishandled in the yr_re_exec function.",
  "repo": "VirusTotal/yara",
  "patch_hash": "83d799804648c2a0895d40a19835d9b757c6fa4e",
  "patch_info": {
    "commit_hash": "83d799804648c2a0895d40a19835d9b757c6fa4e",
    "repo": "VirusTotal/yara",
    "commit_url": "https://github.com/VirusTotal/yara/commit/83d799804648c2a0895d40a19835d9b757c6fa4e",
    "files": [
      "libyara/exec.c",
      "libyara/include/yara/re.h",
      "libyara/re.c",
      "libyara/scan.c",
      "tests/test-rules.c"
    ],
    "message": "Fix issue #646 (#648)\n\n* Fix issue #646 and some edge cases with wide regexps using \\b and \\B\n\n* Rename function IS_WORD_CHAR to _yr_re_is_word_char",
    "before_after_code_files": [
      "libyara/exec.c||libyara/exec.c",
      "libyara/include/yara/re.h||libyara/include/yara/re.h",
      "libyara/re.c||libyara/re.c",
      "libyara/scan.c||libyara/scan.c",
      "tests/test-rules.c||tests/test-rules.c"
    ]
  },
  "patch_diff": {
    "libyara/exec.c||libyara/exec.c": [
      "File: libyara/exec.c -> libyara/exec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "850:           (uint8_t*) r2.re->code,",
      "851:           (uint8_t*) r1.ss->c_string,",
      "852:           r1.ss->length,",
      "853:           r2.re->flags | RE_FLAGS_SCAN,",
      "854:           NULL,",
      "855:           NULL) >= 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "853:           0,",
      "",
      "---------------"
    ],
    "libyara/include/yara/re.h||libyara/include/yara/re.h": [
      "File: libyara/include/yara/re.h -> libyara/include/yara/re.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "94: #define RE_FLAGS_NO_CASE                0x20",
      "95: #define RE_FLAGS_SCAN                   0x40",
      "96: #define RE_FLAGS_DOT_ALL                0x80",
      "98: #define RE_FLAGS_GREEDY                0x400",
      "99: #define RE_FLAGS_UNGREEDY              0x800",
      "",
      "[Removed Lines]",
      "97: #define RE_FLAGS_NOT_AT_START          0x100",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "107: typedef uint8_t RE_SPLIT_ID_TYPE;",
      "118: struct RE_NODE",
      "119: {",
      "120:   int type;",
      "",
      "[Removed Lines]",
      "110: #define CHAR_IN_CLASS(chr, cls)  \\",
      "111:     ((cls)[(chr) / 8] & 1 << ((chr) % 8))",
      "114: #define IS_WORD_CHAR(chr) \\",
      "115:     (isalnum(chr) || (chr) == '_')",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "213: int yr_re_exec(",
      "214:     uint8_t* re_code,",
      "215:     uint8_t* input,",
      "217:     int flags,",
      "218:     RE_MATCH_CALLBACK_FUNC callback,",
      "219:     void* callback_args);",
      "",
      "[Removed Lines]",
      "216:     size_t input_size,",
      "",
      "[Added Lines]",
      "207:     size_t input_forwards_size,",
      "208:     size_t input_backwards_size,",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "222: int yr_re_fast_exec(",
      "223:     uint8_t* re_code,",
      "224:     uint8_t* input,",
      "226:     int flags,",
      "227:     RE_MATCH_CALLBACK_FUNC callback,",
      "228:     void* callback_args);",
      "",
      "[Removed Lines]",
      "225:     size_t input_size,",
      "",
      "[Added Lines]",
      "217:     size_t input_forwards_size,",
      "218:     size_t input_backwards_size,",
      "",
      "---------------"
    ],
    "libyara/re.c||libyara/re.c": [
      "File: libyara/re.c -> libyara/re.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "140: YR_THREAD_STORAGE_KEY thread_storage_key = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "143: #define CHAR_IN_CLASS(chr, cls)  \\",
      "144:     ((cls)[(chr) / 8] & 1 << ((chr) % 8))",
      "147: int _yr_re_is_word_char(",
      "148:     uint8_t* input,",
      "149:     int character_size)",
      "150: {",
      "151:   int result = ((isalnum(*input) || (*input) == '_'));",
      "153:   if (character_size == 2)",
      "154:     result = result && (*(input + 1) == 0);",
      "156:   return result;",
      "157: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "360:       re->code,",
      "361:       (uint8_t*) target,",
      "362:       strlen(target),",
      "363:       re->flags | RE_FLAGS_SCAN,",
      "364:       NULL,",
      "365:       NULL);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "381:       0,",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1828: int yr_re_exec(",
      "1829:     uint8_t* re_code,",
      "1830:     uint8_t* input_data,",
      "1832:     int flags,",
      "1833:     RE_MATCH_CALLBACK_FUNC callback,",
      "1834:     void* callback_args)",
      "",
      "[Removed Lines]",
      "1831:     size_t input_size,",
      "",
      "[Added Lines]",
      "1863:     size_t input_forwards_size,",
      "1864:     size_t input_backwards_size,",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1858:   #define ACTION_KILL       2",
      "1859:   #define ACTION_KILL_TAIL  3",
      "1862:       { \\",
      "1863:         action = ACTION_KILL; \\",
      "1864:         break; \\",
      "1868:         case ERROR_INSUFFICIENT_MEMORY: \\",
      "1869:           return -2; \\",
      "1870:         case ERROR_TOO_MANY_RE_FIBERS: \\",
      "1871:           return -4; \\",
      "1874:   if (_yr_re_alloc_storage(&storage) != ERROR_SUCCESS)",
      "1875:     return -2;",
      "",
      "[Removed Lines]",
      "1861:   #define prolog if (bytes_matched >= max_bytes_matched) \\",
      "1865:       }",
      "1867:   #define fail_if_error(e) switch (e) { \\",
      "1872:       }",
      "",
      "[Added Lines]",
      "1894:   #define prolog { \\",
      "1895:       if ((bytes_matched >= max_bytes_matched) || \\",
      "1896:           (character_size == 2 && *(input + 1) != 0)) \\",
      "1900:       } \\",
      "1901:     }",
      "1903:   #define fail_if_error(e) { \\",
      "1904:       switch (e) { \\",
      "1909:       } \\",
      "1910:     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1885:   if (flags & RE_FLAGS_BACKWARDS)",
      "1886:   {",
      "1887:     input -= character_size;",
      "1888:     input_incr = -input_incr;",
      "1889:   }",
      "1897:   max_bytes_matched = max_bytes_matched - max_bytes_matched % character_size;",
      "",
      "[Removed Lines]",
      "1891:   max_bytes_matched = (int) yr_min(input_size, RE_SCAN_LIMIT);",
      "",
      "[Added Lines]",
      "1925:     max_bytes_matched = (int) yr_min(input_backwards_size, RE_SCAN_LIMIT);",
      "1929:   else",
      "1930:   {",
      "1931:     max_bytes_matched = (int) yr_min(input_forwards_size, RE_SCAN_LIMIT);",
      "1932:   }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1974:         case RE_OPCODE_WORD_CHAR:",
      "1975:           prolog;",
      "1977:           action = match ? ACTION_NONE : ACTION_KILL;",
      "1978:           fiber->ip += 1;",
      "1979:           break;",
      "1981:         case RE_OPCODE_NON_WORD_CHAR:",
      "1982:           prolog;",
      "1984:           action = match ? ACTION_NONE : ACTION_KILL;",
      "1985:           fiber->ip += 1;",
      "1986:           break;",
      "",
      "[Removed Lines]",
      "1976:           match = IS_WORD_CHAR(*input);",
      "1983:           match = !IS_WORD_CHAR(*input);",
      "",
      "[Added Lines]",
      "2017:           match = _yr_re_is_word_char(input, character_size);",
      "2024:           match = !_yr_re_is_word_char(input, character_size);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2028:         case RE_OPCODE_WORD_BOUNDARY:",
      "2029:         case RE_OPCODE_NON_WORD_BOUNDARY:",
      "2034:             match = TRUE;",
      "2035:           else if (bytes_matched >= max_bytes_matched)",
      "2036:             match = TRUE;",
      "2039:           else",
      "2042:           if (*ip == RE_OPCODE_NON_WORD_BOUNDARY)",
      "2043:             match = !match;",
      "",
      "[Removed Lines]",
      "2031:           if (bytes_matched == 0 &&",
      "2032:               !(flags & RE_FLAGS_NOT_AT_START) &&",
      "2033:               !(flags & RE_FLAGS_BACKWARDS))",
      "2037:           else if (IS_WORD_CHAR(*(input - input_incr)) != IS_WORD_CHAR(*input))",
      "2038:             match = TRUE;",
      "2040:             match = FALSE;",
      "",
      "[Added Lines]",
      "2072:           if (bytes_matched == 0 && input_backwards_size < character_size)",
      "2073:           {",
      "2075:           }",
      "2077:           {",
      "2079:           }",
      "2081:           {",
      "2082:             assert(input <  input_data + input_forwards_size);",
      "2083:             assert(input >= input_data - input_backwards_size);",
      "2085:             assert(input - input_incr <  input_data + input_forwards_size);",
      "2086:             assert(input - input_incr >= input_data - input_backwards_size);",
      "2088:             match = _yr_re_is_word_char(input, character_size) != \\",
      "2089:                     _yr_re_is_word_char(input - input_incr, character_size);",
      "2090:           }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2049:         case RE_OPCODE_MATCH_AT_START:",
      "2050:           if (flags & RE_FLAGS_BACKWARDS)",
      "2052:           else",
      "2054:           action = kill ? ACTION_KILL : ACTION_CONTINUE;",
      "2055:           fiber->ip += 1;",
      "2056:           break;",
      "2058:         case RE_OPCODE_MATCH_AT_END:",
      "2059:           kill = flags & RE_FLAGS_BACKWARDS ||",
      "2061:           action = kill ? ACTION_KILL : ACTION_CONTINUE;",
      "2062:           fiber->ip += 1;",
      "2063:           break;",
      "",
      "[Removed Lines]",
      "2051:             kill = input_size > (size_t) bytes_matched;",
      "2053:             kill = (flags & RE_FLAGS_NOT_AT_START) || (bytes_matched != 0);",
      "2060:                  input_size > (size_t) bytes_matched;",
      "",
      "[Added Lines]",
      "2101:             kill = input_backwards_size > (size_t) bytes_matched;",
      "2103:             kill = input_backwards_size > 0 || (bytes_matched != 0);",
      "2110:                  input_forwards_size > (size_t) bytes_matched;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2134:       }",
      "2135:     }",
      "2144:     input += input_incr;",
      "2145:     bytes_matched += character_size;",
      "",
      "[Removed Lines]",
      "2137:     if (flags & RE_FLAGS_WIDE &&",
      "2138:         bytes_matched < max_bytes_matched &&",
      "2140:     {",
      "2141:       _yr_re_fiber_kill_all(&fibers, &storage->fiber_pool);",
      "2142:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2164: int yr_re_fast_exec(",
      "2165:     uint8_t* code,",
      "2166:     uint8_t* input_data,",
      "2168:     int flags,",
      "2169:     RE_MATCH_CALLBACK_FUNC callback,",
      "2170:     void* callback_args)",
      "",
      "[Removed Lines]",
      "2167:     size_t input_size,",
      "",
      "[Added Lines]",
      "2210:     size_t input_forwards_size,",
      "2211:     size_t input_backwards_size,",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2187:   int input_incr;",
      "2188:   int sp = 0;",
      "2189:   int bytes_matched;",
      "2192:   input_incr = flags & RE_FLAGS_BACKWARDS ? -1 : 1;",
      "",
      "[Removed Lines]",
      "2190:   int max_bytes_matched = input_size;",
      "",
      "[Added Lines]",
      "2234:   int max_bytes_matched;",
      "2236:   max_bytes_matched = flags & RE_FLAGS_BACKWARDS ?",
      "2237:       input_backwards_size :",
      "2238:       input_forwards_size;",
      "",
      "---------------"
    ],
    "libyara/scan.c||libyara/scan.c": [
      "File: libyara/scan.c -> libyara/scan.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "528: typedef int (*RE_EXEC_FUNC)(",
      "529:     uint8_t* code,",
      "530:     uint8_t* input,",
      "532:     int flags,",
      "533:     RE_MATCH_CALLBACK_FUNC callback,",
      "534:     void* callback_args);",
      "",
      "[Removed Lines]",
      "531:     size_t input_size,",
      "",
      "[Added Lines]",
      "531:     size_t input_forwards_size,",
      "532:     size_t input_backwards_size,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "569:         ac_match->forward_code,",
      "570:         data + offset,",
      "571:         data_size - offset,",
      "573:         NULL,",
      "574:         NULL);",
      "575:   }",
      "",
      "[Removed Lines]",
      "572:         offset > 0 ? flags | RE_FLAGS_NOT_AT_START : flags,",
      "",
      "[Added Lines]",
      "573:         offset,",
      "574:         flags,",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "581:         ac_match->forward_code,",
      "582:         data + offset,",
      "583:         data_size - offset,",
      "585:         NULL,",
      "586:         NULL);",
      "587:   }",
      "",
      "[Removed Lines]",
      "584:         offset > 0 ? flags | RE_FLAGS_NOT_AT_START : flags,",
      "",
      "[Added Lines]",
      "586:         offset,",
      "587:         flags,",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "616:     backward_matches = exec(",
      "617:         ac_match->backward_code,",
      "618:         data + offset,",
      "619:         offset,",
      "620:         flags | RE_FLAGS_BACKWARDS | RE_FLAGS_EXHAUSTIVE,",
      "621:         _yr_scan_match_callback,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "622:         data_size - offset,",
      "",
      "---------------"
    ],
    "tests/test-rules.c||tests/test-rules.c": [
      "File: tests/test-rules.c -> tests/test-rules.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "901:       \"rule test { strings: $a = /a.{1,2}b/ wide condition: !a == 8 }\",",
      "902:       \"a\\0x\\0x\\0b\\0\");",
      "904:   assert_regexp_syntax_error(\")\");",
      "905:   assert_true_regexp(\"abc\", \"abc\", \"abc\");",
      "906:   assert_false_regexp(\"abc\", \"xbc\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "904:   assert_true_rule_blob(",
      "905:       \"rule test { strings: $a = /\\\\babc/ wide condition: $a }\",",
      "906:       \"a\\0b\\0c\\0\");",
      "908:   assert_true_rule_blob(",
      "909:       \"rule test { strings: $a = /\\\\babc/ wide condition: $a }\",",
      "910:       \"\\0a\\0b\\0c\\0\");",
      "912:   assert_true_rule_blob(",
      "913:       \"rule test { strings: $a = /\\\\babc/ wide condition: $a }\",",
      "914:       \"\\ta\\0b\\0c\\0\");",
      "916:   assert_false_rule_blob(",
      "917:       \"rule test { strings: $a = /\\\\babc/ wide condition: $a }\",",
      "918:       \"x\\0a\\0b\\0c\\0\");",
      "920:   assert_true_rule_blob(",
      "921:       \"rule test { strings: $a = /\\\\babc/ wide condition: $a }\",",
      "922:       \"x\\ta\\0b\\0c\\0\");",
      "924:   assert_true_rule_blob(",
      "925:       \"rule test { strings: $a = /abc\\\\b/ wide condition: $a }\",",
      "926:       \"a\\0b\\0c\\0\");",
      "928:   assert_true_rule_blob(",
      "929:       \"rule test { strings: $a = /abc\\\\b/ wide condition: $a }\",",
      "930:       \"a\\0b\\0c\\0\\0\");",
      "932:   assert_true_rule_blob(",
      "933:       \"rule test { strings: $a = /abc\\\\b/ wide condition: $a }\",",
      "934:       \"a\\0b\\0c\\0\\t\");",
      "936:   assert_false_rule_blob(",
      "937:       \"rule test { strings: $a = /abc\\\\b/ wide condition: $a }\",",
      "938:       \"a\\0b\\0c\\0x\\0\");",
      "940:   assert_true_rule_blob(",
      "941:       \"rule test { strings: $a = /abc\\\\b/ wide condition: $a }\",",
      "942:       \"a\\0b\\0c\\0b\\t\");",
      "944:   assert_false_rule_blob(",
      "945:       \"rule test { strings: $a = /\\\\b/ wide condition: $a }\",",
      "946:       \"abc\");",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3c798dde6c5ab7d268b0c666aa6afe4382d13dcb",
      "candidate_info": {
        "commit_hash": "3c798dde6c5ab7d268b0c666aa6afe4382d13dcb",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/3c798dde6c5ab7d268b0c666aa6afe4382d13dcb",
        "files": [
          "libyara/exec.c",
          "libyara/include/yara/re.h",
          "libyara/re.c",
          "libyara/scan.c"
        ],
        "message": "Refactor error returning in yr_re_exec",
        "before_after_code_files": [
          "libyara/exec.c||libyara/exec.c",
          "libyara/include/yara/re.h||libyara/include/yara/re.h",
          "libyara/re.c||libyara/re.c",
          "libyara/scan.c||libyara/scan.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/exec.c||libyara/exec.c",
            "libyara/include/yara/re.h||libyara/include/yara/re.h",
            "libyara/re.c||libyara/re.c",
            "libyara/scan.c||libyara/scan.c"
          ],
          "candidate": [
            "libyara/exec.c||libyara/exec.c",
            "libyara/include/yara/re.h||libyara/include/yara/re.h",
            "libyara/re.c||libyara/re.c",
            "libyara/scan.c||libyara/scan.c"
          ]
        }
      },
      "candidate_diff": {
        "libyara/exec.c||libyara/exec.c": [
          "File: libyara/exec.c -> libyara/exec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "846:           break;",
          "847:         }",
          "850:           (uint8_t*) r2.re->code,",
          "851:           (uint8_t*) r1.ss->c_string,",
          "852:           r1.ss->length,",
          "853:           0,",
          "854:           r2.re->flags | RE_FLAGS_SCAN,",
          "855:           NULL,",
          "858:         push(r1);",
          "859:         break;",
          "",
          "[Removed Lines]",
          "849:         r1.i = yr_re_exec(",
          "856:           NULL) >= 0;",
          "",
          "[Added Lines]",
          "849:         result = yr_re_exec(",
          "856:           NULL,",
          "857:           &found);",
          "859:         if (result != ERROR_SUCCESS)",
          "860:           stop = TRUE;",
          "862:         r1.i = found >= 0;",
          "",
          "---------------"
        ],
        "libyara/include/yara/re.h||libyara/include/yara/re.h": [
          "File: libyara/include/yara/re.h -> libyara/include/yara/re.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:     size_t input_backwards_size,",
          "209:     int flags,",
          "210:     RE_MATCH_CALLBACK_FUNC callback,",
          "214: int yr_re_fast_exec(",
          "217:     size_t input_forwards_size,",
          "218:     size_t input_backwards_size,",
          "219:     int flags,",
          "220:     RE_MATCH_CALLBACK_FUNC callback,",
          "224: int yr_re_parse(",
          "",
          "[Removed Lines]",
          "211:     void* callback_args);",
          "215:     uint8_t* re_code,",
          "216:     uint8_t* input,",
          "221:     void* callback_args);",
          "",
          "[Added Lines]",
          "211:     void* callback_args,",
          "212:     int* matches);",
          "216:     uint8_t* code,",
          "217:     uint8_t* input_data,",
          "222:     void* callback_args,",
          "223:     int* matches);",
          "",
          "---------------"
        ],
        "libyara/re.c||libyara/re.c": [
          "File: libyara/re.c -> libyara/re.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "374:     RE* re,",
          "375:     const char* target)",
          "376: {",
          "378:       re->code,",
          "379:       (uint8_t*) target,",
          "380:       strlen(target),",
          "381:       0,",
          "382:       re->flags | RE_FLAGS_SCAN,",
          "383:       NULL,",
          "385: }",
          "",
          "[Removed Lines]",
          "377:   return yr_re_exec(",
          "384:       NULL);",
          "",
          "[Added Lines]",
          "377:   int result;",
          "379:   yr_re_exec(",
          "386:       NULL,",
          "387:       &result);",
          "389:   return result;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1864:     size_t input_backwards_size,",
          "1865:     int flags,",
          "1866:     RE_MATCH_CALLBACK_FUNC callback,",
          "1868: {",
          "1869:   uint8_t* ip;",
          "1870:   uint8_t* input;",
          "",
          "[Removed Lines]",
          "1867:     void* callback_args)",
          "",
          "[Added Lines]",
          "1868:     void* callback_args,",
          "1869:     int* matches)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1876:   RE_FIBER* fiber;",
          "1877:   RE_FIBER* next_fiber;",
          "1880:   int bytes_matched;",
          "1881:   int max_bytes_matched;",
          "1882:   int match;",
          "",
          "[Removed Lines]",
          "1879:   int error;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1884:   int input_incr;",
          "1885:   int kill;",
          "1886:   int action;",
          "1889:   #define ACTION_NONE       0",
          "1890:   #define ACTION_CONTINUE   1",
          "",
          "[Removed Lines]",
          "1887:   int result = -1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1900:       } \\",
          "1901:     }",
          "1912:   if (_yr_re_alloc_storage(&storage) != ERROR_SUCCESS)",
          "1913:     return -2;",
          "",
          "[Removed Lines]",
          "1903:   #define fail_if_error(e) { \\",
          "1904:       switch (e) { \\",
          "1905:         case ERROR_INSUFFICIENT_MEMORY: \\",
          "1906:           return -2; \\",
          "1907:         case ERROR_TOO_MANY_RE_FIBERS: \\",
          "1908:           return -4; \\",
          "1909:       } \\",
          "1910:     }",
          "",
          "[Added Lines]",
          "1903:   if (matches != NULL)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1938:   max_bytes_matched = max_bytes_matched - max_bytes_matched % character_size;",
          "1939:   bytes_matched = 0;",
          "1944:   fiber->ip = re_code;",
          "1945:   fibers.head = fiber;",
          "1946:   fibers.tail = fiber;",
          "1951:   while (fibers.head != NULL)",
          "1952:   {",
          "",
          "[Removed Lines]",
          "1941:   error = _yr_re_fiber_create(&storage->fiber_pool, &fiber);",
          "1942:   fail_if_error(error);",
          "1948:   error = _yr_re_fiber_sync(&fibers, &storage->fiber_pool, fiber);",
          "1949:   fail_if_error(error);",
          "",
          "[Added Lines]",
          "1935:   FAIL_ON_ERROR(_yr_re_fiber_create(&storage->fiber_pool, &fiber));",
          "1941:   FAIL_ON_ERROR(_yr_re_fiber_sync(&fibers, &storage->fiber_pool, fiber));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2115:         case RE_OPCODE_MATCH:",
          "2119:           if (flags & RE_FLAGS_EXHAUSTIVE)",
          "2120:           {",
          "2121:             if (callback != NULL)",
          "2122:             {",
          "2125:               if (flags & RE_FLAGS_BACKWARDS)",
          "2127:                     input + character_size,",
          "2128:                     bytes_matched,",
          "2129:                     flags,",
          "2131:               else",
          "2133:                     input_data,",
          "2134:                     bytes_matched,",
          "2135:                     flags,",
          "2147:               }",
          "2148:             }",
          "",
          "[Removed Lines]",
          "2117:           result = bytes_matched;",
          "2123:               int cb_result;",
          "2126:                 cb_result = callback(",
          "2130:                     callback_args);",
          "2132:                 cb_result = callback(",
          "2136:                     callback_args);",
          "2138:               switch(cb_result)",
          "2139:               {",
          "2140:                 case ERROR_INSUFFICIENT_MEMORY:",
          "2141:                   return -2;",
          "2142:                 case ERROR_TOO_MANY_MATCHES:",
          "2143:                   return -3;",
          "2144:                 default:",
          "2145:                   if (cb_result != ERROR_SUCCESS)",
          "2146:                     return -4;",
          "",
          "[Added Lines]",
          "2109:           if (matches != NULL)",
          "2117:               {",
          "2118:                 FAIL_ON_ERROR(callback(",
          "2122:                     callback_args));",
          "2123:               }",
          "2125:               {",
          "2126:                 FAIL_ON_ERROR(callback(",
          "2130:                     callback_args));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2172:           break;",
          "2174:         case ACTION_CONTINUE:",
          "2177:           break;",
          "2179:         default:",
          "2180:           next_fiber = fiber->next;",
          "2183:           fiber = next_fiber;",
          "2184:       }",
          "2185:     }",
          "",
          "[Removed Lines]",
          "2175:           error = _yr_re_fiber_sync(&fibers, &storage->fiber_pool, fiber);",
          "2176:           fail_if_error(error);",
          "2181:           error = _yr_re_fiber_sync(&fibers, &storage->fiber_pool, fiber);",
          "2182:           fail_if_error(error);",
          "",
          "[Added Lines]",
          "2159:           FAIL_ON_ERROR(",
          "2160:               _yr_re_fiber_sync(&fibers, &storage->fiber_pool, fiber))",
          "2165:           FAIL_ON_ERROR(",
          "2166:               _yr_re_fiber_sync(&fibers, &storage->fiber_pool, fiber));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2190:     if (flags & RE_FLAGS_SCAN && bytes_matched < max_bytes_matched)",
          "2191:     {",
          "2195:       fiber->ip = re_code;",
          "2196:       _yr_re_fiber_append(&fibers, fiber);",
          "2200:     }",
          "2201:   }",
          "2204: }",
          "",
          "[Removed Lines]",
          "2192:       error = _yr_re_fiber_create(&storage->fiber_pool, &fiber);",
          "2193:       fail_if_error(error);",
          "2198:       error = _yr_re_fiber_sync(&fibers, &storage->fiber_pool, fiber);",
          "2199:       fail_if_error(error);",
          "2203:   return result;",
          "",
          "[Added Lines]",
          "2176:       FAIL_ON_ERROR(_yr_re_fiber_create(&storage->fiber_pool, &fiber));",
          "2181:       FAIL_ON_ERROR(_yr_re_fiber_sync(&fibers, &storage->fiber_pool, fiber));",
          "2185:   return ERROR_SUCCESS;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2211:     size_t input_backwards_size,",
          "2212:     int flags,",
          "2213:     RE_MATCH_CALLBACK_FUNC callback,",
          "2215: {",
          "2216:   RE_REPEAT_ANY_ARGS* repeat_any_args;",
          "",
          "[Removed Lines]",
          "2214:     void* callback_args)",
          "",
          "[Added Lines]",
          "2196:     void* callback_args,",
          "2197:     int* matches)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2261:       {",
          "2262:         if (flags & RE_FLAGS_EXHAUSTIVE)",
          "2263:         {",
          "2265:              flags & RE_FLAGS_BACKWARDS ? input + 1 : input_data,",
          "2266:              bytes_matched,",
          "2267:              flags,",
          "2281:           break;",
          "2282:         }",
          "2283:         else",
          "2284:         {",
          "2286:         }",
          "2287:       }",
          "",
          "[Removed Lines]",
          "2264:           int cb_result = callback(",
          "2268:              callback_args);",
          "2270:           switch(cb_result)",
          "2271:           {",
          "2272:             case ERROR_INSUFFICIENT_MEMORY:",
          "2273:               return -2;",
          "2274:             case ERROR_TOO_MANY_MATCHES:",
          "2275:               return -3;",
          "2276:             default:",
          "2277:               if (cb_result != ERROR_SUCCESS)",
          "2278:                 return -4;",
          "2279:           }",
          "2285:           return bytes_matched;",
          "",
          "[Added Lines]",
          "2247:           FAIL_ON_ERROR(callback(",
          "2251:              callback_args));",
          "2257:           if (matches != NULL)",
          "2260:           return ERROR_SUCCESS;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2370:     }",
          "2371:   }",
          "2374: }",
          "",
          "[Removed Lines]",
          "2373:   return -1;",
          "",
          "[Added Lines]",
          "2348:   if (matches != NULL)",
          "2351:   return ERROR_SUCCESS;",
          "",
          "---------------"
        ],
        "libyara/scan.c||libyara/scan.c": [
          "File: libyara/scan.c -> libyara/scan.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "532:     size_t input_backwards_size,",
          "533:     int flags,",
          "534:     RE_MATCH_CALLBACK_FUNC callback,",
          "538: int _yr_scan_verify_re_match(",
          "",
          "[Removed Lines]",
          "535:     void* callback_args);",
          "",
          "[Added Lines]",
          "535:     void* callback_args,",
          "536:     int* matches);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "567:   if (STRING_IS_ASCII(ac_match->string))",
          "568:   {",
          "570:         ac_match->forward_code,",
          "571:         data + offset,",
          "572:         data_size - offset,",
          "573:         offset,",
          "574:         flags,",
          "575:         NULL,",
          "577:   }",
          "579:   if (STRING_IS_WIDE(ac_match->string) && forward_matches == -1)",
          "580:   {",
          "581:     flags |= RE_FLAGS_WIDE;",
          "583:         ac_match->forward_code,",
          "584:         data + offset,",
          "585:         data_size - offset,",
          "586:         offset,",
          "587:         flags,",
          "588:         NULL,",
          "590:   }",
          "606:   if (forward_matches == 0 && ac_match->backward_code == NULL)",
          "607:     return ERROR_SUCCESS;",
          "",
          "[Removed Lines]",
          "569:     forward_matches = exec(",
          "576:         NULL);",
          "582:     forward_matches = exec(",
          "589:         NULL);",
          "592:   switch(forward_matches)",
          "593:   {",
          "594:     case -1:",
          "595:       return ERROR_SUCCESS;",
          "596:     case -2:",
          "597:       return ERROR_INSUFFICIENT_MEMORY;",
          "598:     case -3:",
          "599:       return ERROR_TOO_MANY_MATCHES;",
          "600:     case -4:",
          "601:       return ERROR_TOO_MANY_RE_FIBERS;",
          "602:     case -5:",
          "603:       return ERROR_INTERNAL_FATAL_ERROR;",
          "604:   }",
          "",
          "[Added Lines]",
          "570:     FAIL_ON_ERROR(exec(",
          "577:         NULL,",
          "578:         &forward_matches));",
          "584:     FAIL_ON_ERROR(exec(",
          "591:         NULL,",
          "592:         &forward_matches));",
          "595:   if (forward_matches == -1)",
          "596:     return ERROR_SUCCESS;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "617:   if (ac_match->backward_code != NULL)",
          "618:   {",
          "620:         ac_match->backward_code,",
          "621:         data + offset,",
          "622:         data_size - offset,",
          "623:         offset,",
          "624:         flags | RE_FLAGS_BACKWARDS | RE_FLAGS_EXHAUSTIVE,",
          "625:         _yr_scan_match_callback,",
          "639:   }",
          "640:   else",
          "641:   {",
          "",
          "[Removed Lines]",
          "619:     backward_matches = exec(",
          "626:         (void*) &callback_args);",
          "628:     switch(backward_matches)",
          "629:     {",
          "630:       case -2:",
          "631:         return ERROR_INSUFFICIENT_MEMORY;",
          "632:       case -3:",
          "633:         return ERROR_TOO_MANY_MATCHES;",
          "634:       case -4:",
          "635:         return ERROR_TOO_MANY_RE_FIBERS;",
          "636:       case -5:",
          "637:         return ERROR_INTERNAL_FATAL_ERROR;",
          "638:     }",
          "",
          "[Added Lines]",
          "611:     FAIL_ON_ERROR(exec(",
          "618:         (void*) &callback_args,",
          "619:         &backward_matches));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "554b5df4db9ca41a6cc4f67f9956746430107a01",
      "candidate_info": {
        "commit_hash": "554b5df4db9ca41a6cc4f67f9956746430107a01",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/554b5df4db9ca41a6cc4f67f9956746430107a01",
        "files": [
          "libyara/include/yara/re.h",
          "libyara/include/yara/re_lexer.h",
          "libyara/re.c",
          "libyara/re_grammar.c",
          "libyara/re_grammar.h",
          "libyara/re_grammar.y",
          "libyara/re_lexer.c",
          "libyara/re_lexer.l",
          "tests/test-rules.c"
        ],
        "message": "Fix issue 765 (#767)\n\n* Fix issue #765.\n\n* Simplify logic of _yr_re_is_char_in_class",
        "before_after_code_files": [
          "libyara/include/yara/re.h||libyara/include/yara/re.h",
          "libyara/include/yara/re_lexer.h||libyara/include/yara/re_lexer.h",
          "libyara/re.c||libyara/re.c",
          "libyara/re_grammar.c||libyara/re_grammar.c",
          "libyara/re_grammar.h||libyara/re_grammar.h",
          "libyara/re_grammar.y||libyara/re_grammar.y",
          "libyara/re_lexer.c||libyara/re_lexer.c",
          "libyara/re_lexer.l||libyara/re_lexer.l",
          "tests/test-rules.c||tests/test-rules.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/include/yara/re.h||libyara/include/yara/re.h",
            "libyara/re.c||libyara/re.c",
            "tests/test-rules.c||tests/test-rules.c"
          ],
          "candidate": [
            "libyara/include/yara/re.h||libyara/include/yara/re.h",
            "libyara/re.c||libyara/re.c",
            "tests/test-rules.c||tests/test-rules.c"
          ]
        }
      },
      "candidate_diff": {
        "libyara/include/yara/re.h||libyara/include/yara/re.h": [
          "File: libyara/include/yara/re.h -> libyara/include/yara/re.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "101: typedef struct RE RE;",
          "102: typedef struct RE_AST RE_AST;",
          "103: typedef struct RE_NODE RE_NODE;",
          "104: typedef struct RE_ERROR RE_ERROR;",
          "106: typedef uint8_t RE_SPLIT_ID_TYPE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104: typedef struct RE_CLASS RE_CLASS;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124:   int greedy;",
          "128:   RE_NODE* left;",
          "129:   RE_NODE* right;",
          "",
          "[Removed Lines]",
          "126:   uint8_t* class_vector;",
          "",
          "[Added Lines]",
          "127:   RE_CLASS* re_class;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "133: };",
          "136: struct RE_AST",
          "137: {",
          "138:   uint32_t flags;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137: struct RE_CLASS",
          "138: {",
          "139:   uint8_t negated;",
          "140:   uint8_t bitmap[32];",
          "141: };",
          "",
          "---------------"
        ],
        "libyara/include/yara/re_lexer.h||libyara/include/yara/re_lexer.h": [
          "File: libyara/include/yara/re_lexer.h -> libyara/include/yara/re_lexer.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: typedef struct _RE_LEX_ENVIRONMENT",
          "66: {",
          "69:   int last_error_code;",
          "70:   char last_error_message[256];",
          "",
          "[Removed Lines]",
          "67:   int negated_class;",
          "68:   uint8_t class_vector[32];",
          "",
          "[Added Lines]",
          "67:   RE_CLASS re_class;",
          "",
          "---------------"
        ],
        "libyara/re.c||libyara/re.c": [
          "File: libyara/re.c -> libyara/re.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "126: YR_THREAD_STORAGE_KEY thread_storage_key = 0;",
          "133: int _yr_re_is_word_char(",
          "",
          "[Removed Lines]",
          "129: #define CHAR_IN_CLASS(chr, cls)  \\",
          "130:     ((cls)[(chr) / 8] & 1 << ((chr) % 8))",
          "",
          "[Added Lines]",
          "129: #define CHAR_IN_CLASS(cls, chr)  \\",
          "130:   ((cls)[(chr) / 8] & 1 << ((chr) % 8))",
          "133: int _yr_re_is_char_in_class(",
          "134:     RE_CLASS* re_class,",
          "135:     uint8_t chr,",
          "136:     int case_insensitive)",
          "137: {",
          "138:   int result = CHAR_IN_CLASS(re_class->bitmap, chr);",
          "140:   if (case_insensitive)",
          "141:     result |= CHAR_IN_CLASS(re_class->bitmap, yr_altercase[chr]);",
          "143:   if (re_class->negated)",
          "144:     result = !result;",
          "146:   return result;",
          "147: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "239:     yr_re_node_destroy(node->right);",
          "241:   if (node->type == RE_NODE_CLASS)",
          "244:   yr_free(node);",
          "245: }",
          "",
          "[Removed Lines]",
          "242:     yr_free(node->class_vector);",
          "",
          "[Added Lines]",
          "258:     yr_free(node->re_class);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "878:     FAIL_ON_ERROR(yr_arena_write_data(",
          "879:         emit_context->arena,",
          "882:         NULL));",
          "885:     break;",
          "887:   case RE_NODE_ANCHOR_START:",
          "",
          "[Removed Lines]",
          "880:         re_node->class_vector,",
          "881:         32,",
          "",
          "[Added Lines]",
          "896:         re_node->re_class,",
          "897:         sizeof(*re_node->re_class),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2008:         case RE_OPCODE_CLASS:",
          "2009:           prolog;",
          "2013:           action = match ? ACTION_NONE : ACTION_KILL;",
          "2015:           break;",
          "2017:         case RE_OPCODE_WORD_CHAR:",
          "",
          "[Removed Lines]",
          "2010:           match = CHAR_IN_CLASS(*input, ip + 1);",
          "2011:           if (!match && (flags & RE_FLAGS_NO_CASE))",
          "2012:             match = CHAR_IN_CLASS(yr_altercase[*input], ip + 1);",
          "2014:           fiber->ip += 33;",
          "",
          "[Added Lines]",
          "2026:           match = _yr_re_is_char_in_class(",
          "2027:               (RE_CLASS*) (ip + 1), *input, flags & RE_FLAGS_NO_CASE);",
          "2029:           fiber->ip += (sizeof(RE_CLASS) + 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2456:   case RE_NODE_CLASS:",
          "2457:     printf(\"Class(\");",
          "2458:     for (i = 0; i < 256; i++)",
          "2460:         printf(\"%02X,\", i);",
          "2461:     printf(\")\");",
          "2462:     break;",
          "",
          "[Removed Lines]",
          "2459:       if (CHAR_IN_CLASS(i, re_node->class_vector))",
          "",
          "[Added Lines]",
          "2474:       if (_yr_re_is_char_in_class(re_node->re_class, i, FALSE))",
          "",
          "---------------"
        ],
        "libyara/re_grammar.c||libyara/re_grammar.c": [
          "File: libyara/re_grammar.c -> libyara/re_grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "183:   int integer;",
          "184:   uint32_t range;",
          "185:   RE_NODE* re_node;",
          "189: };",
          "",
          "[Removed Lines]",
          "186:   uint8_t* class_vector;",
          "",
          "[Added Lines]",
          "186:   RE_CLASS* re_class;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1048:     {",
          "1053:         break;",
          "",
          "[Removed Lines]",
          "1051:       { yr_free(((*yyvaluep).class_vector)); }",
          "",
          "[Added Lines]",
          "1051:       { yr_free(((*yyvaluep).re_class)); }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1758:         fail_if((yyval.re_node) == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "1761:       }",
          "1763:     break;",
          "",
          "[Removed Lines]",
          "1760:         (yyval.re_node)->class_vector = (yyvsp[0].class_vector);",
          "",
          "[Added Lines]",
          "1760:         (yyval.re_node)->re_class = (yyvsp[0].re_class);",
          "",
          "---------------"
        ],
        "libyara/re_grammar.h||libyara/re_grammar.h": [
          "File: libyara/re_grammar.h -> libyara/re_grammar.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:   int integer;",
          "84:   uint32_t range;",
          "85:   RE_NODE* re_node;",
          "89: };",
          "",
          "[Removed Lines]",
          "86:   uint8_t* class_vector;",
          "",
          "[Added Lines]",
          "86:   RE_CLASS* re_class;",
          "",
          "---------------"
        ],
        "libyara/re_grammar.y||libyara/re_grammar.y": [
          "File: libyara/re_grammar.y -> libyara/re_grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:   int integer;",
          "83:   uint32_t range;",
          "84:   RE_NODE* re_node;",
          "86: }",
          "89: %token <integer> _CHAR_ _ANY_",
          "90: %token <range> _RANGE_",
          "93: %token _WORD_CHAR_",
          "94: %token _NON_WORD_CHAR_",
          "",
          "[Removed Lines]",
          "85:   uint8_t* class_vector;",
          "91: %token <class_vector> _CLASS_",
          "",
          "[Added Lines]",
          "85:   RE_CLASS* re_class;",
          "91: %token <re_class> _CLASS_",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "429:         fail_if($$ == NULL, ERROR_INSUFFICIENT_MEMORY);",
          "432:       }",
          "433:     ;",
          "434: %%",
          "",
          "[Removed Lines]",
          "431:         $$->class_vector = $1;",
          "",
          "[Added Lines]",
          "431:         $$->re_class = $1;",
          "",
          "---------------"
        ],
        "libyara/re_lexer.c||libyara/re_lexer.c": [
          "File: libyara/re_lexer.c -> libyara/re_lexer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1202:   BEGIN(char_class);",
          "1205: }",
          "1206:  YY_BREAK",
          "1207: case 4:",
          "",
          "[Removed Lines]",
          "1203:   memset(LEX_ENV->class_vector, 0, 32);",
          "1204:   LEX_ENV->negated_class = TRUE;",
          "",
          "[Added Lines]",
          "1203:   memset(LEX_ENV->re_class.bitmap, 0, 32);",
          "1204:   LEX_ENV->re_class.negated = TRUE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1216:   BEGIN(char_class);",
          "1220: }",
          "1221:  YY_BREAK",
          "1222: case 5:",
          "",
          "[Removed Lines]",
          "1217:   memset(LEX_ENV->class_vector, 0, 32);",
          "1218:   LEX_ENV->negated_class = TRUE;",
          "1219:   LEX_ENV->class_vector[']' / 8] |= 1 << ']' % 8;",
          "",
          "[Added Lines]",
          "1217:   memset(LEX_ENV->re_class.bitmap, 0, 32);",
          "1218:   LEX_ENV->re_class.negated = TRUE;",
          "1219:   LEX_ENV->re_class.bitmap[']' / 8] |= 1 << ']' % 8;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1231:   BEGIN(char_class);",
          "1235: }",
          "1236:  YY_BREAK",
          "1237: case 6:",
          "",
          "[Removed Lines]",
          "1232:   memset(LEX_ENV->class_vector, 0, 32);",
          "1233:   LEX_ENV->negated_class = FALSE;",
          "1234:   LEX_ENV->class_vector[']' / 8] |= 1 << ']' % 8;",
          "",
          "[Added Lines]",
          "1232:   memset(LEX_ENV->re_class.bitmap, 0, 32);",
          "1233:   LEX_ENV->re_class.negated = FALSE;",
          "1234:   LEX_ENV->re_class.bitmap[']' / 8] |= 1 << ']' % 8;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1244:   BEGIN(char_class);",
          "1247: }",
          "1248:  YY_BREAK",
          "1249: case 7:",
          "",
          "[Removed Lines]",
          "1245:   memset(LEX_ENV->class_vector, 0, 32);",
          "1246:   LEX_ENV->negated_class = FALSE;",
          "",
          "[Added Lines]",
          "1245:   memset(LEX_ENV->re_class.bitmap, 0, 32);",
          "1246:   LEX_ENV->re_class.negated = FALSE;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1348: {",
          "1363:   BEGIN(INITIAL);",
          "1364:   return _CLASS_;",
          "",
          "[Removed Lines]",
          "1352:   int i;",
          "1354:   yylval->class_vector = (uint8_t*) yr_malloc(32);",
          "1355:   memcpy(yylval->class_vector, LEX_ENV->class_vector, 32);",
          "1357:   if (LEX_ENV->negated_class)",
          "1358:   {",
          "1359:     for(i = 0; i < 32; i++)",
          "1360:       yylval->class_vector[i] = ~yylval->class_vector[i];",
          "1361:   }",
          "",
          "[Added Lines]",
          "1351:   yylval->re_class = (RE_CLASS*) yr_malloc(sizeof(RE_CLASS));",
          "1352:   memcpy(yylval->re_class->bitmap, LEX_ENV->re_class.bitmap, 32);",
          "1354:   yylval->re_class->negated = LEX_ENV->re_class.negated;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1367: case 19:",
          "1369: YY_RULE_SETUP",
          "1371: {",
          "",
          "[Removed Lines]",
          "1370: #line 304 \"re_lexer.l\"",
          "",
          "[Added Lines]",
          "1363: #line 297 \"re_lexer.l\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1410:   for (c = start; c <= end; c++)",
          "1411:   {",
          "1413:   }",
          "1414: }",
          "1415:  YY_BREAK",
          "1416: case 20:",
          "1417: YY_RULE_SETUP",
          "1419: {",
          "1421:   int i;",
          "1423:   for (i = 0; i < 32; i++)",
          "1425: }",
          "1426:  YY_BREAK",
          "1427: case 21:",
          "1428: YY_RULE_SETUP",
          "1430: {",
          "1432:   int i;",
          "1434:   for (i = 0; i < 32; i++)",
          "1436: }",
          "1437:  YY_BREAK",
          "1438: case 22:",
          "1439: YY_RULE_SETUP",
          "1441: {",
          "1445: }",
          "1446:  YY_BREAK",
          "1447: case 23:",
          "1448: YY_RULE_SETUP",
          "1450: {",
          "1452:   int i;",
          "",
          "[Removed Lines]",
          "1412:     LEX_ENV->class_vector[c / 8] |= 1 << c % 8;",
          "1418: #line 350 \"re_lexer.l\"",
          "1424:     LEX_ENV->class_vector[i] |= word_chars[i];",
          "1429: #line 359 \"re_lexer.l\"",
          "1435:     LEX_ENV->class_vector[i] |= ~word_chars[i];",
          "1440: #line 368 \"re_lexer.l\"",
          "1443:   LEX_ENV->class_vector[' ' / 8] |= 1 << ' ' % 8;",
          "1444:   LEX_ENV->class_vector['\\t' / 8] |= 1 << '\\t' % 8;",
          "1449: #line 375 \"re_lexer.l\"",
          "",
          "[Added Lines]",
          "1405:     LEX_ENV->re_class.bitmap[c / 8] |= 1 << c % 8;",
          "1411: #line 343 \"re_lexer.l\"",
          "1417:     LEX_ENV->re_class.bitmap[i] |= word_chars[i];",
          "1422: #line 352 \"re_lexer.l\"",
          "1428:     LEX_ENV->re_class.bitmap[i] |= ~word_chars[i];",
          "1433: #line 361 \"re_lexer.l\"",
          "1436:   LEX_ENV->re_class.bitmap[' ' / 8] |= 1 << ' ' % 8;",
          "1437:   LEX_ENV->re_class.bitmap['\\t' / 8] |= 1 << '\\t' % 8;",
          "1442: #line 368 \"re_lexer.l\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1454:   for (i = 0; i < 32; i++)",
          "1455:   {",
          "1456:     if (i == ' ' / 8)",
          "1458:     else if (i == '\\t' / 8)",
          "1460:     else",
          "1462:   }",
          "1463: }",
          "1464:  YY_BREAK",
          "1465: case 24:",
          "1466: YY_RULE_SETUP",
          "1468: {",
          "1470:   char c;",
          "1472:   for (c = '0'; c <= '9'; c++)",
          "1474: }",
          "1475:  YY_BREAK",
          "1476: case 25:",
          "1477: YY_RULE_SETUP",
          "1479: {",
          "1481:   int i;",
          "",
          "[Removed Lines]",
          "1457:       LEX_ENV->class_vector[i] |= ~(1 << ' ' % 8);",
          "1459:       LEX_ENV->class_vector[i] |= ~(1 << '\\t' % 8);",
          "1461:       LEX_ENV->class_vector[i] = 0xFF;",
          "1467: #line 391 \"re_lexer.l\"",
          "1473:     LEX_ENV->class_vector[c / 8] |= 1 << c % 8;",
          "1478: #line 400 \"re_lexer.l\"",
          "",
          "[Added Lines]",
          "1450:       LEX_ENV->re_class.bitmap[i] |= ~(1 << ' ' % 8);",
          "1452:       LEX_ENV->re_class.bitmap[i] |= ~(1 << '\\t' % 8);",
          "1454:       LEX_ENV->re_class.bitmap[i] = 0xFF;",
          "1460: #line 384 \"re_lexer.l\"",
          "1466:     LEX_ENV->re_class.bitmap[c / 8] |= 1 << c % 8;",
          "1471: #line 393 \"re_lexer.l\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1491:     if (i == 7)",
          "1493:     else",
          "1495:   }",
          "1496: }",
          "1497:  YY_BREAK",
          "1498: case 26:",
          "1499: YY_RULE_SETUP",
          "1501: {",
          "1503:   uint8_t c;",
          "1505:   if (read_escaped_char(yyscanner, &c))",
          "1506:   {",
          "1508:   }",
          "1509:   else",
          "1510:   {",
          "",
          "[Removed Lines]",
          "1492:       LEX_ENV->class_vector[i] |= 0xFC;",
          "1494:       LEX_ENV->class_vector[i] = 0xFF;",
          "1500: #line 420 \"re_lexer.l\"",
          "1507:     LEX_ENV->class_vector[c / 8] |= 1 << c % 8;",
          "",
          "[Added Lines]",
          "1485:       LEX_ENV->re_class.bitmap[i] |= 0xFC;",
          "1487:       LEX_ENV->re_class.bitmap[i] = 0xFF;",
          "1493: #line 413 \"re_lexer.l\"",
          "1500:     LEX_ENV->re_class.bitmap[c / 8] |= 1 << c % 8;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1515:  YY_BREAK",
          "1516: case 27:",
          "1517: YY_RULE_SETUP",
          "1519: {",
          "1521:   if (yytext[0] >= 32 && yytext[0] < 127)",
          "",
          "[Removed Lines]",
          "1518: #line 436 \"re_lexer.l\"",
          "",
          "[Added Lines]",
          "1511: #line 429 \"re_lexer.l\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1527:   }",
          "1528:   else",
          "1529:   {",
          "",
          "[Removed Lines]",
          "1526:     LEX_ENV->class_vector[yytext[0] / 8] |= 1 << yytext[0] % 8;",
          "",
          "[Added Lines]",
          "1519:     LEX_ENV->re_class.bitmap[yytext[0] / 8] |= 1 << yytext[0] % 8;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1533: }",
          "1534:  YY_BREAK",
          "1535: case YY_STATE_EOF(char_class):",
          "1537: {",
          "",
          "[Removed Lines]",
          "1536: #line 453 \"re_lexer.l\"",
          "",
          "[Added Lines]",
          "1529: #line 446 \"re_lexer.l\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1544:  YY_BREAK",
          "1545: case 28:",
          "1546: YY_RULE_SETUP",
          "1548: {",
          "1550:   if (yytext[0] >= 32 && yytext[0] < 127)",
          "",
          "[Removed Lines]",
          "1547: #line 462 \"re_lexer.l\"",
          "",
          "[Added Lines]",
          "1540: #line 455 \"re_lexer.l\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1559: }",
          "1560:  YY_BREAK",
          "1561: case YY_STATE_EOF(INITIAL):",
          "1563: {",
          "1565:   yyterminate();",
          "",
          "[Removed Lines]",
          "1562: #line 476 \"re_lexer.l\"",
          "",
          "[Added Lines]",
          "1555: #line 469 \"re_lexer.l\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1567:  YY_BREAK",
          "1568: case 29:",
          "1569: YY_RULE_SETUP",
          "1571: ECHO;",
          "1572:  YY_BREAK",
          "1575:  case YY_END_OF_BUFFER:",
          "1576:   {",
          "",
          "[Removed Lines]",
          "1570: #line 481 \"re_lexer.l\"",
          "1573: #line 1573 \"re_lexer.c\"",
          "",
          "[Added Lines]",
          "1563: #line 474 \"re_lexer.l\"",
          "1566: #line 1566 \"re_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2720: #define YYTABLES_NAME \"yytables\"",
          "2725: int escaped_char_value(",
          "",
          "[Removed Lines]",
          "2722: #line 481 \"re_lexer.l\"",
          "",
          "[Added Lines]",
          "2715: #line 474 \"re_lexer.l\"",
          "",
          "---------------"
        ],
        "libyara/re_lexer.l||libyara/re_lexer.l": [
          "File: libyara/re_lexer.l -> libyara/re_lexer.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:   BEGIN(char_class);",
          "173: }",
          "175: \\[\\^\\] {",
          "",
          "[Removed Lines]",
          "171:   memset(LEX_ENV->class_vector, 0, 32);",
          "172:   LEX_ENV->negated_class = TRUE;",
          "",
          "[Added Lines]",
          "171:   memset(LEX_ENV->re_class.bitmap, 0, 32);",
          "172:   LEX_ENV->re_class.negated = TRUE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "181:   BEGIN(char_class);",
          "185: }",
          "",
          "[Removed Lines]",
          "182:   memset(LEX_ENV->class_vector, 0, 32);",
          "183:   LEX_ENV->negated_class = TRUE;",
          "184:   LEX_ENV->class_vector[']' / 8] |= 1 << ']' % 8;",
          "",
          "[Added Lines]",
          "182:   memset(LEX_ENV->re_class.bitmap, 0, 32);",
          "183:   LEX_ENV->re_class.negated = TRUE;",
          "184:   LEX_ENV->re_class.bitmap[']' / 8] |= 1 << ']' % 8;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "194:   BEGIN(char_class);",
          "198: }",
          "",
          "[Removed Lines]",
          "195:   memset(LEX_ENV->class_vector, 0, 32);",
          "196:   LEX_ENV->negated_class = FALSE;",
          "197:   LEX_ENV->class_vector[']' / 8] |= 1 << ']' % 8;",
          "",
          "[Added Lines]",
          "195:   memset(LEX_ENV->re_class.bitmap, 0, 32);",
          "196:   LEX_ENV->re_class.negated = FALSE;",
          "197:   LEX_ENV->re_class.bitmap[']' / 8] |= 1 << ']' % 8;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "205:   BEGIN(char_class);",
          "208: }",
          "",
          "[Removed Lines]",
          "206:   memset(LEX_ENV->class_vector, 0, 32);",
          "207:   LEX_ENV->negated_class = FALSE;",
          "",
          "[Added Lines]",
          "206:   memset(LEX_ENV->re_class.bitmap, 0, 32);",
          "207:   LEX_ENV->re_class.negated = FALSE;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "283: <char_class>\\] {",
          "298:   BEGIN(INITIAL);",
          "299:   return _CLASS_;",
          "",
          "[Removed Lines]",
          "287:   int i;",
          "289:   yylval->class_vector = (uint8_t*) yr_malloc(32);",
          "290:   memcpy(yylval->class_vector, LEX_ENV->class_vector, 32);",
          "292:   if (LEX_ENV->negated_class)",
          "293:   {",
          "294:     for(i = 0; i < 32; i++)",
          "295:       yylval->class_vector[i] = ~yylval->class_vector[i];",
          "296:   }",
          "",
          "[Added Lines]",
          "286:   yylval->re_class = (RE_CLASS*) yr_malloc(sizeof(RE_CLASS));",
          "287:   memcpy(yylval->re_class->bitmap, LEX_ENV->re_class.bitmap, 32);",
          "289:   yylval->re_class->negated = LEX_ENV->re_class.negated;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "343:   for (c = start; c <= end; c++)",
          "344:   {",
          "346:   }",
          "347: }",
          "",
          "[Removed Lines]",
          "345:     LEX_ENV->class_vector[c / 8] |= 1 << c % 8;",
          "",
          "[Added Lines]",
          "338:     LEX_ENV->re_class.bitmap[c / 8] |= 1 << c % 8;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "352:   int i;",
          "354:   for (i = 0; i < 32; i++)",
          "356: }",
          "",
          "[Removed Lines]",
          "355:     LEX_ENV->class_vector[i] |= word_chars[i];",
          "",
          "[Added Lines]",
          "348:     LEX_ENV->re_class.bitmap[i] |= word_chars[i];",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "361:   int i;",
          "363:   for (i = 0; i < 32; i++)",
          "365: }",
          "368: <char_class>\\\\s {",
          "372: }",
          "",
          "[Removed Lines]",
          "364:     LEX_ENV->class_vector[i] |= ~word_chars[i];",
          "370:   LEX_ENV->class_vector[' ' / 8] |= 1 << ' ' % 8;",
          "371:   LEX_ENV->class_vector['\\t' / 8] |= 1 << '\\t' % 8;",
          "",
          "[Added Lines]",
          "357:     LEX_ENV->re_class.bitmap[i] |= ~word_chars[i];",
          "363:   LEX_ENV->re_class.bitmap[' ' / 8] |= 1 << ' ' % 8;",
          "364:   LEX_ENV->re_class.bitmap['\\t' / 8] |= 1 << '\\t' % 8;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "379:   for (i = 0; i < 32; i++)",
          "380:   {",
          "381:     if (i == ' ' / 8)",
          "383:     else if (i == '\\t' / 8)",
          "385:     else",
          "387:   }",
          "388: }",
          "",
          "[Removed Lines]",
          "382:       LEX_ENV->class_vector[i] |= ~(1 << ' ' % 8);",
          "384:       LEX_ENV->class_vector[i] |= ~(1 << '\\t' % 8);",
          "386:       LEX_ENV->class_vector[i] = 0xFF;",
          "",
          "[Added Lines]",
          "375:       LEX_ENV->re_class.bitmap[i] |= ~(1 << ' ' % 8);",
          "377:       LEX_ENV->re_class.bitmap[i] |= ~(1 << '\\t' % 8);",
          "379:       LEX_ENV->re_class.bitmap[i] = 0xFF;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "393:   char c;",
          "395:   for (c = '0'; c <= '9'; c++)",
          "397: }",
          "",
          "[Removed Lines]",
          "396:     LEX_ENV->class_vector[c / 8] |= 1 << c % 8;",
          "",
          "[Added Lines]",
          "389:     LEX_ENV->re_class.bitmap[c / 8] |= 1 << c % 8;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "412:     if (i == 7)",
          "414:     else",
          "416:   }",
          "417: }",
          "",
          "[Removed Lines]",
          "413:       LEX_ENV->class_vector[i] |= 0xFC;",
          "415:       LEX_ENV->class_vector[i] = 0xFF;",
          "",
          "[Added Lines]",
          "406:       LEX_ENV->re_class.bitmap[i] |= 0xFC;",
          "408:       LEX_ENV->re_class.bitmap[i] = 0xFF;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "424:   if (read_escaped_char(yyscanner, &c))",
          "425:   {",
          "427:   }",
          "428:   else",
          "429:   {",
          "",
          "[Removed Lines]",
          "426:     LEX_ENV->class_vector[c / 8] |= 1 << c % 8;",
          "",
          "[Added Lines]",
          "419:     LEX_ENV->re_class.bitmap[c / 8] |= 1 << c % 8;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "444:   }",
          "445:   else",
          "446:   {",
          "",
          "[Removed Lines]",
          "443:     LEX_ENV->class_vector[yytext[0] / 8] |= 1 << yytext[0] % 8;",
          "",
          "[Added Lines]",
          "436:     LEX_ENV->re_class.bitmap[yytext[0] / 8] |= 1 << yytext[0] % 8;",
          "",
          "---------------"
        ],
        "tests/test-rules.c||tests/test-rules.c": [
          "File: tests/test-rules.c -> tests/test-rules.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1207:         strings: $a = /MZ.{300,}?t/ \\",
          "1208:         condition: !a == 314 }\",",
          "1209:       PE32_FILE);",
          "1210: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1211:   assert_false_rule(",
          "1212:       \"rule test { strings: $a = /abc[^d]/ nocase condition: $a }\",",
          "1213:       \"abcd\");",
          "1215:   assert_false_rule(",
          "1216:       \"rule test { strings: $a = /abc[^d]/ condition: $a }\",",
          "1217:       \"abcd\");",
          "1219:   assert_false_rule(",
          "1220:       \"rule test { strings: $a = /abc[^D]/ nocase condition: $a }\",",
          "1221:       \"abcd\");",
          "1223:   assert_true_rule(",
          "1224:       \"rule test { strings: $a = /abc[^D]/ condition: $a }\",",
          "1225:       \"abcd\");",
          "1227:   assert_true_rule(",
          "1228:       \"rule test { strings: $a = /abc[^f]/ nocase condition: $a }\",",
          "1229:       \"abcd\");",
          "1231:   assert_true_rule(",
          "1232:       \"rule test { strings: $a = /abc[^f]/ condition: $a }\",",
          "1233:       \"abcd\");",
          "1235:   assert_true_rule(",
          "1236:       \"rule test { strings: $a = /abc[^F]/ nocase condition: $a }\",",
          "1237:       \"abcd\");",
          "1239:   assert_true_rule(",
          "1240:        \"rule test { strings: $a = /abc[^F]/ condition: $a }\",",
          "1241:        \"abcd\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ef2251fa824d5c7725456c58341f0b79329c90fd",
      "candidate_info": {
        "commit_hash": "ef2251fa824d5c7725456c58341f0b79329c90fd",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/ef2251fa824d5c7725456c58341f0b79329c90fd",
        "files": [
          "libyara/re.c"
        ],
        "message": "Add some comments and do minor style improvements.",
        "before_after_code_files": [
          "libyara/re.c||libyara/re.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/re.c||libyara/re.c"
          ],
          "candidate": [
            "libyara/re.c||libyara/re.c"
          ]
        }
      },
      "candidate_diff": {
        "libyara/re.c||libyara/re.c": [
          "File: libyara/re.c -> libyara/re.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "739:   int emit_epilog;",
          "741:   RE_REPEAT_ARGS repeat_args;",
          "743:   RE_REPEAT_ANY_ARGS repeat_any_args;",
          "745:   RE_NODE* left;",
          "",
          "[Removed Lines]",
          "742:   RE_REPEAT_ARGS* repeat_args_addr;",
          "",
          "[Added Lines]",
          "742:   RE_REPEAT_ARGS* repeat_start_args_addr;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1165:           &repeat_args,",
          "1166:           sizeof(repeat_args),",
          "1167:           emit_prolog ? NULL : &instruction_addr,",
          "1169:           &inst_size));",
          "",
          "[Removed Lines]",
          "1168:           (void**) &repeat_args_addr,",
          "",
          "[Added Lines]",
          "1168:           (void**) &repeat_start_args_addr,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1183:       repeat_args.offset = -branch_size;",
          "1185:       FAIL_ON_ERROR(_yr_emit_inst_arg_struct(",
          "",
          "[Removed Lines]",
          "1182:       repeat_args_addr->offset = 2 * inst_size + branch_size;",
          "",
          "[Added Lines]",
          "1182:       repeat_start_args_addr->offset = 2 * inst_size + branch_size;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2008:             match = !match;",
          "2010:           action = match ? ACTION_CONTINUE : ACTION_KILL;",
          "2011:           break;",
          "2013:         case RE_OPCODE_MATCH_AT_START:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2046:           fiber->ip += 1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2016:           else",
          "2017:             kill = (flags & RE_FLAGS_NOT_AT_START) || (bytes_matched != 0);",
          "2018:           action = kill ? ACTION_KILL : ACTION_CONTINUE;",
          "2019:           break;",
          "2021:         case RE_OPCODE_MATCH_AT_END:",
          "2022:           action = input_size > (size_t) bytes_matched ?",
          "2023:               ACTION_KILL :",
          "2024:               ACTION_CONTINUE;",
          "2025:           break;",
          "2027:         case RE_OPCODE_MATCH:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2055:           fiber->ip += 1;",
          "2062:           fiber->ip += 1;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2084:           break;",
          "2086:         case ACTION_CONTINUE:",
          "2088:           error = _yr_re_fiber_sync(&fibers, &storage->fiber_pool, fiber);",
          "2089:           fail_if_error(error);",
          "2090:           break;",
          "",
          "[Removed Lines]",
          "2087:           fiber->ip += 1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "939215395349c2cede99c07391a40d27e23bb7e3",
      "candidate_info": {
        "commit_hash": "939215395349c2cede99c07391a40d27e23bb7e3",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/939215395349c2cede99c07391a40d27e23bb7e3",
        "files": [
          "libyara/ahocorasick.c",
          "libyara/arena.c",
          "libyara/atoms.c",
          "libyara/compiler.c",
          "libyara/hash.c",
          "libyara/include/yara/compiler.h",
          "libyara/libyara.c",
          "libyara/object.c",
          "libyara/parser.c",
          "libyara/proc.c",
          "libyara/re.c",
          "libyara/rules.c",
          "libyara/scan.c",
          "yara.c",
          "yarac.c"
        ],
        "message": "Declare all module-specific functions as static.",
        "before_after_code_files": [
          "libyara/ahocorasick.c||libyara/ahocorasick.c",
          "libyara/arena.c||libyara/arena.c",
          "libyara/atoms.c||libyara/atoms.c",
          "libyara/compiler.c||libyara/compiler.c",
          "libyara/hash.c||libyara/hash.c",
          "libyara/include/yara/compiler.h||libyara/include/yara/compiler.h",
          "libyara/libyara.c||libyara/libyara.c",
          "libyara/object.c||libyara/object.c",
          "libyara/parser.c||libyara/parser.c",
          "libyara/proc.c||libyara/proc.c",
          "libyara/re.c||libyara/re.c",
          "libyara/rules.c||libyara/rules.c",
          "libyara/scan.c||libyara/scan.c",
          "yara.c||yara.c",
          "yarac.c||yarac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/re.c||libyara/re.c",
            "libyara/scan.c||libyara/scan.c"
          ],
          "candidate": [
            "libyara/re.c||libyara/re.c",
            "libyara/scan.c||libyara/scan.c"
          ]
        }
      },
      "candidate_diff": {
        "libyara/ahocorasick.c||libyara/ahocorasick.c": [
          "File: libyara/ahocorasick.c -> libyara/ahocorasick.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     QUEUE* queue,",
          "75:     YR_AC_STATE* value)",
          "76: {",
          "",
          "[Removed Lines]",
          "73: int _yr_ac_queue_push(",
          "",
          "[Added Lines]",
          "73: static int _yr_ac_queue_push(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:     QUEUE* queue)",
          "113: {",
          "114:   YR_AC_STATE* result;",
          "",
          "[Removed Lines]",
          "111: YR_AC_STATE* _yr_ac_queue_pop(",
          "",
          "[Added Lines]",
          "111: static YR_AC_STATE* _yr_ac_queue_pop(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "148:     QUEUE* queue)",
          "149: {",
          "150:   return queue->head == NULL;",
          "",
          "[Removed Lines]",
          "147: int _yr_ac_queue_is_empty(",
          "",
          "[Added Lines]",
          "147: static int _yr_ac_queue_is_empty(",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "169:     YR_AC_STATE* state,",
          "170:     uint8_t input)",
          "171: {",
          "",
          "[Removed Lines]",
          "168: YR_AC_STATE* _yr_ac_next_state(",
          "",
          "[Added Lines]",
          "168: static YR_AC_STATE* _yr_ac_next_state(",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "201:     YR_AC_STATE* state,",
          "202:     uint8_t input)",
          "203: {",
          "",
          "[Removed Lines]",
          "200: YR_AC_STATE* _yr_ac_state_create(",
          "",
          "[Added Lines]",
          "200: static YR_AC_STATE* _yr_ac_state_create(",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "227:     YR_AC_STATE* state)",
          "228: {",
          "229:   YR_AC_STATE* child_state = state->first_child;",
          "",
          "[Removed Lines]",
          "226: int _yr_ac_state_destroy(",
          "",
          "[Added Lines]",
          "226: static int _yr_ac_state_destroy(",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "252:     YR_AC_AUTOMATON* automaton)",
          "253: {",
          "254:   YR_AC_STATE* current_state;",
          "",
          "[Removed Lines]",
          "251: int _yr_ac_create_failure_links(",
          "",
          "[Added Lines]",
          "251: static int _yr_ac_create_failure_links(",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "369:     YR_AC_STATE* s1,",
          "370:     YR_AC_STATE* s2)",
          "371: {",
          "",
          "[Removed Lines]",
          "368: int _yr_ac_transitions_subset(",
          "",
          "[Added Lines]",
          "368: static int _yr_ac_transitions_subset(",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "405:     YR_AC_AUTOMATON* automaton)",
          "406: {",
          "407:   QUEUE queue = { NULL, NULL};",
          "",
          "[Removed Lines]",
          "404: int _yr_ac_optimize_failure_links(",
          "",
          "[Added Lines]",
          "404: static int _yr_ac_optimize_failure_links(",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "455:     YR_AC_AUTOMATON* automaton,",
          "456:     YR_AC_STATE* state,",
          "457:     uint32_t* slot)",
          "",
          "[Removed Lines]",
          "454: int _yr_ac_find_suitable_transition_table_slot(",
          "",
          "[Added Lines]",
          "454: static int _yr_ac_find_suitable_transition_table_slot(",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "585:     YR_AC_AUTOMATON* automaton)",
          "586: {",
          "587:   YR_AC_STATE* state;",
          "",
          "[Removed Lines]",
          "584: int _yr_ac_build_transition_table(",
          "",
          "[Added Lines]",
          "584: static int _yr_ac_build_transition_table(",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "681:   YR_AC_STATE* state)",
          "682: {",
          "683:   int i;",
          "",
          "[Removed Lines]",
          "680: void _yr_ac_print_automaton_state(",
          "",
          "[Added Lines]",
          "680: static void _yr_ac_print_automaton_state(",
          "",
          "---------------"
        ],
        "libyara/arena.c||libyara/arena.c": [
          "File: libyara/arena.c -> libyara/arena.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:     size_t size)",
          "85: {",
          "86:   YR_ARENA_PAGE* new_page;",
          "",
          "[Removed Lines]",
          "83: YR_ARENA_PAGE* _yr_arena_new_page(",
          "",
          "[Added Lines]",
          "83: static YR_ARENA_PAGE* _yr_arena_new_page(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:     YR_ARENA* arena,",
          "128:     void* address)",
          "129: {",
          "",
          "[Removed Lines]",
          "126: YR_ARENA_PAGE* _yr_arena_page_for_address(",
          "",
          "[Added Lines]",
          "126: static YR_ARENA_PAGE* _yr_arena_page_for_address(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "173:     YR_ARENA* arena,",
          "174:     void* base,",
          "175:     va_list offsets)",
          "",
          "[Removed Lines]",
          "172: int _yr_arena_make_relocatable(",
          "",
          "[Added Lines]",
          "172: static int _yr_arena_make_relocatable(",
          "",
          "---------------"
        ],
        "libyara/atoms.c||libyara/atoms.c": [
          "File: libyara/atoms.c -> libyara/atoms.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:     uint8_t* atom,",
          "124:     int atom_length)",
          "125: {",
          "",
          "[Removed Lines]",
          "122: int _yr_atoms_quality(",
          "",
          "[Added Lines]",
          "122: static int _yr_atoms_quality(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "208:     uint8_t type)",
          "209: {",
          "210:   ATOM_TREE_NODE* new_node = (ATOM_TREE_NODE*) \\",
          "",
          "[Removed Lines]",
          "207: ATOM_TREE_NODE* _yr_atoms_tree_node_create(",
          "",
          "[Added Lines]",
          "207: static ATOM_TREE_NODE* _yr_atoms_tree_node_create(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "235:     ATOM_TREE_NODE* node)",
          "236: {",
          "237:   ATOM_TREE_NODE* child;",
          "",
          "[Removed Lines]",
          "234: void _yr_atoms_tree_node_destroy(",
          "",
          "[Added Lines]",
          "234: static void _yr_atoms_tree_node_destroy(",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "266:     ATOM_TREE_NODE* dest,",
          "267:     ATOM_TREE_NODE* node)",
          "268: {",
          "",
          "[Removed Lines]",
          "265: void _yr_atoms_tree_node_append(",
          "",
          "[Added Lines]",
          "265: static void _yr_atoms_tree_node_append(",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "286:     ATOM_TREE* atom_tree)",
          "287: {",
          "288:   _yr_atoms_tree_node_destroy(atom_tree->root_node);",
          "",
          "[Removed Lines]",
          "285: void _yr_atoms_tree_destroy(",
          "",
          "[Added Lines]",
          "285: static void _yr_atoms_tree_destroy(",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "321:     YR_ATOM_LIST_ITEM* list1,",
          "322:     YR_ATOM_LIST_ITEM* list2)",
          "323: {",
          "",
          "[Removed Lines]",
          "320: YR_ATOM_LIST_ITEM* _yr_atoms_list_concat(",
          "",
          "[Added Lines]",
          "320: static YR_ATOM_LIST_ITEM* _yr_atoms_list_concat(",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "349:     ATOM_TREE_NODE* node,",
          "350:     YR_ATOM_LIST_ITEM** chosen_atoms,",
          "351:     int* atoms_quality)",
          "",
          "[Removed Lines]",
          "348: int _yr_atoms_choose(",
          "",
          "[Added Lines]",
          "348: static int _yr_atoms_choose(",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "458:     uint8_t* atom,",
          "459:     int atom_length,",
          "460:     int atom_offset,",
          "",
          "[Removed Lines]",
          "457: uint8_t* _yr_atoms_case_combinations(",
          "",
          "[Added Lines]",
          "457: static uint8_t* _yr_atoms_case_combinations(",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "520:     YR_ATOM_LIST_ITEM* atoms,",
          "521:     YR_ATOM_LIST_ITEM** case_insensitive_atoms)",
          "522: {",
          "",
          "[Removed Lines]",
          "519: int _yr_atoms_case_insensitive(",
          "",
          "[Added Lines]",
          "519: static int _yr_atoms_case_insensitive(",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "585:     YR_ATOM_LIST_ITEM* atoms,",
          "586:     YR_ATOM_LIST_ITEM** wide_atoms)",
          "587: {",
          "",
          "[Removed Lines]",
          "584: int _yr_atoms_wide(",
          "",
          "[Added Lines]",
          "584: static _yr_atoms_wide(",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "637:   RE_NODE* re_node,",
          "638:   ATOM_TREE* atom_tree,",
          "639:   ATOM_TREE_NODE* current_node)",
          "",
          "[Removed Lines]",
          "636: ATOM_TREE_NODE* _yr_atoms_extract_from_re_node(",
          "",
          "[Added Lines]",
          "636: static ATOM_TREE_NODE* _yr_atoms_extract_from_re_node(",
          "",
          "---------------"
        ],
        "libyara/compiler.c||libyara/compiler.c": [
          "File: libyara/compiler.c -> libyara/compiler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: #include <yara/strutils.h>",
          "46: YR_API int yr_compiler_create(",
          "47:     YR_COMPILER** compiler)",
          "48: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46: static void _yr_compiler_default_include_free(",
          "47:   const char* callback_result_ptr,",
          "48:   void* user_data)",
          "49: {",
          "50:   if(callback_result_ptr != NULL)",
          "51:   {",
          "52:     yr_free((void*)callback_result_ptr);",
          "53:   }",
          "55: }",
          "58: const char* _yr_compiler_default_include_callback(",
          "59:     const char* include_name,",
          "60:     const char* calling_rule_filename,",
          "61:     const char* calling_rule_namespace,",
          "62:     void* user_data)",
          "63: {",
          "64:   char buffer[1024];",
          "65:   char* s = NULL;",
          "66:   #ifdef _WIN32",
          "67:   char* b = NULL;",
          "68:   #endif",
          "69:   char* f;",
          "70:   FILE* fh;",
          "71:   char* file_buffer;",
          "72:   long file_length;",
          "74:   if (calling_rule_filename != NULL)",
          "75:   {",
          "76:     strlcpy(buffer, calling_rule_filename, sizeof(buffer));",
          "77:   }",
          "78:   else",
          "79:   {",
          "80:     buffer[0] = '\\0';",
          "81:   }",
          "83:   s = strrchr(buffer, '/');",
          "85:   #ifdef _WIN32",
          "86:   b = strrchr(buffer, '\\\\'); // in Windows both path delimiters are accepted",
          "87:   #endif",
          "89:   #ifdef _WIN32",
          "90:   if (s != NULL || b != NULL)",
          "91:   #else",
          "92:   if (s != NULL)",
          "93:   #endif",
          "94:   {",
          "95:     #ifdef _WIN32",
          "96:     f = (b > s)? (b + 1): (s + 1);",
          "97:     #else",
          "98:     f = s + 1;",
          "99:     #endif",
          "101:     strlcpy(f, include_name, sizeof(buffer) - (f - buffer));",
          "103:     f = buffer;",
          "105:     fh = fopen(buffer, \"rb\");",
          "110:     if (fh == NULL)",
          "111:     {",
          "112:       f = (char*) include_name;",
          "114:       fh = fopen(include_name, \"rb\");",
          "115:     }",
          "116:   }",
          "117:   else",
          "118:   {",
          "119:     f = (char*) include_name;",
          "121:     fh = fopen(include_name, \"rb\");",
          "122:   }",
          "124:   if (fh == NULL)",
          "125:     return NULL;",
          "127:   fseek(fh, 0, SEEK_END);",
          "128:   file_length = ftell(fh);",
          "129:   fseek(fh, 0, SEEK_SET);",
          "131:   if (file_length == -1)",
          "132:   {",
          "133:     fclose(fh);",
          "134:     return NULL;",
          "135:   }",
          "137:   file_buffer = (char*) yr_malloc(file_length + 1);",
          "139:   if (file_buffer == NULL)",
          "140:   {",
          "141:     fclose(fh);",
          "142:     return NULL;",
          "143:   }",
          "145:   if (file_length != fread(file_buffer, 1, file_length, fh))",
          "146:   {",
          "147:     yr_free(file_buffer);",
          "148:     fclose(fh);",
          "149:     return NULL;",
          "150:   }",
          "151:   else",
          "152:   {",
          "153:     file_buffer[file_length] = '\\0';",
          "154:   }",
          "156:   fclose(fh);",
          "157:   return file_buffer;",
          "158: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182: }",
          "299: YR_API void yr_compiler_set_include_callback(",
          "300:     YR_COMPILER* compiler,",
          "301:     YR_COMPILER_INCLUDE_CALLBACK_FUNC include_callback,",
          "",
          "[Removed Lines]",
          "185: const char* _yr_compiler_default_include_callback(",
          "186:     const char* include_name,",
          "187:     const char* calling_rule_filename,",
          "188:     const char* calling_rule_namespace,",
          "189:     void* user_data)",
          "190: {",
          "191:   char buffer[1024];",
          "192:   char* s = NULL;",
          "193:   #ifdef _WIN32",
          "194:   char* b = NULL;",
          "195:   #endif",
          "196:   char* f;",
          "197:   FILE* fh;",
          "198:   char* file_buffer;",
          "199:   long file_length;",
          "201:   if (calling_rule_filename != NULL)",
          "202:   {",
          "203:     strlcpy(buffer, calling_rule_filename, sizeof(buffer));",
          "204:   }",
          "205:   else",
          "206:   {",
          "207:     buffer[0] = '\\0';",
          "208:   }",
          "210:   s = strrchr(buffer, '/');",
          "212:   #ifdef _WIN32",
          "213:   b = strrchr(buffer, '\\\\'); // in Windows both path delimiters are accepted",
          "214:   #endif",
          "216:   #ifdef _WIN32",
          "217:   if (s != NULL || b != NULL)",
          "218:   #else",
          "219:   if (s != NULL)",
          "220:   #endif",
          "221:   {",
          "222:     #ifdef _WIN32",
          "223:     f = (b > s)? (b + 1): (s + 1);",
          "224:     #else",
          "225:     f = s + 1;",
          "226:     #endif",
          "228:     strlcpy(f, include_name, sizeof(buffer) - (f - buffer));",
          "230:     f = buffer;",
          "232:     fh = fopen(buffer, \"rb\");",
          "237:     if (fh == NULL)",
          "238:     {",
          "239:       f = (char*) include_name;",
          "241:       fh = fopen(include_name, \"rb\");",
          "242:     }",
          "243:   }",
          "244:   else",
          "245:   {",
          "246:     f = (char*) include_name;",
          "248:     fh = fopen(include_name, \"rb\");",
          "249:   }",
          "251:   if (fh == NULL)",
          "252:     return NULL;",
          "254:   fseek(fh, 0, SEEK_END);",
          "255:   file_length = ftell(fh);",
          "256:   fseek(fh, 0, SEEK_SET);",
          "258:   if (file_length == -1)",
          "259:   {",
          "260:     fclose(fh);",
          "261:     return NULL;",
          "262:   }",
          "264:   file_buffer = (char*) yr_malloc(file_length + 1);",
          "266:   if (file_buffer == NULL)",
          "267:   {",
          "268:     fclose(fh);",
          "269:     return NULL;",
          "270:   }",
          "272:   if (file_length != fread(file_buffer, 1, file_length, fh))",
          "273:   {",
          "274:     yr_free(file_buffer);",
          "275:     fclose(fh);",
          "276:     return NULL;",
          "277:   }",
          "278:   else",
          "279:   {",
          "280:     file_buffer[file_length] = '\\0';",
          "281:   }",
          "283:   fclose(fh);",
          "284:   return file_buffer;",
          "285: }",
          "288: void _yr_compiler_default_include_free(",
          "289:   const char* callback_result_ptr,",
          "290:   void* user_data)",
          "291: {",
          "292:   if(callback_result_ptr != NULL)",
          "293:   {",
          "294:     yr_free((void*)callback_result_ptr);",
          "295:   }",
          "296: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "370: }",
          "374:     YR_COMPILER* compiler,",
          "375:     const char* namespace_)",
          "376: {",
          "",
          "[Removed Lines]",
          "373: int _yr_compiler_set_namespace(",
          "",
          "[Added Lines]",
          "374: static int _yr_compiler_set_namespace(",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "534: }",
          "538:   YR_COMPILER* compiler)",
          "539: {",
          "540:   YARA_RULES_FILE_HEADER* rules_file_header = NULL;",
          "",
          "[Removed Lines]",
          "537: int _yr_compiler_compile_rules(",
          "",
          "[Added Lines]",
          "538: static int _yr_compiler_compile_rules(",
          "",
          "---------------"
        ],
        "libyara/hash.c||libyara/hash.c": [
          "File: libyara/hash.c -> libyara/hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:   assert(shift < 32);",
          "42:   return (x << shift) | (x >> (-shift & 31));",
          "43: }",
          "",
          "[Removed Lines]",
          "40: uint32_t rotl32(uint32_t x, uint32_t shift) {",
          "",
          "[Added Lines]",
          "40: static uint32_t rotl32(uint32_t x, uint32_t shift) {",
          "",
          "---------------"
        ],
        "libyara/include/yara/compiler.h||libyara/include/yara/compiler.h": [
          "File: libyara/include/yara/compiler.h -> libyara/include/yara/compiler.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "153: void _yr_compiler_pop_file_name(",
          "154:     YR_COMPILER* compiler);",
          "156: const char* _yr_compiler_default_include_callback(",
          "157:     const char* include_name,",
          "158:     const char* calling_rule_filename,",
          "159:     const char* calling_rule_namespace,",
          "160:     void* user_data);",
          "166: YR_API int yr_compiler_create(",
          "167:     YR_COMPILER** compiler);",
          "",
          "[Removed Lines]",
          "162: void _yr_compiler_default_include_free(",
          "163:     const char* callback_result_ptr,",
          "164:     void* user_data);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libyara/libyara.c||libyara/libyara.c": [
          "File: libyara/libyara.c -> libyara/libyara.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78: static YR_MUTEX *openssl_locks;",
          "82: {",
          "83:   return (unsigned long) yr_current_thread_id();",
          "84: }",
          "88:     int mode,",
          "89:     int n,",
          "90:     const char *file,",
          "",
          "[Removed Lines]",
          "81: unsigned long thread_id(void)",
          "87: void locking_function(",
          "",
          "[Added Lines]",
          "81: static unsigned long _thread_id(void)",
          "87: static void _locking_function(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141:   for (i = 0; i < CRYPTO_num_locks(); i++)",
          "142:     yr_mutex_create(&openssl_locks[i]);",
          "147:   #elif defined(HAVE_WINCRYPT_H)",
          "",
          "[Removed Lines]",
          "144:   CRYPTO_set_id_callback(thread_id);",
          "145:   CRYPTO_set_locking_callback(locking_function);",
          "",
          "[Added Lines]",
          "144:   CRYPTO_set_id_callback(_thread_id);",
          "145:   CRYPTO_set_locking_callback(_locking_function);",
          "",
          "---------------"
        ],
        "libyara/object.c||libyara/object.c": [
          "File: libyara/object.c -> libyara/object.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "422: }",
          "426:     YR_OBJECT* object,",
          "427:     int flags,",
          "428:     const char* pattern,",
          "",
          "[Removed Lines]",
          "425: YR_OBJECT* _yr_object_lookup(",
          "",
          "[Added Lines]",
          "425: static YR_OBJECT* _yr_object_lookup(",
          "",
          "---------------"
        ],
        "libyara/parser.c||libyara/parser.c": [
          "File: libyara/parser.c -> libyara/parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "291: }",
          "295:     const char* identifier,",
          "296:     int flags,",
          "297:     YR_COMPILER* compiler,",
          "",
          "[Removed Lines]",
          "294: int _yr_parser_write_string(",
          "",
          "[Added Lines]",
          "294: static int _yr_parser_write_string(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1042: }",
          "1046:     SIZED_STRING* module_name)",
          "1047: {",
          "1048:   if (module_name->length == 0)",
          "",
          "[Removed Lines]",
          "1045: int _yr_parser_valid_module_name(",
          "",
          "[Added Lines]",
          "1045: static int _yr_parser_valid_module_name(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1123: }",
          "1127:     const char* op,",
          "1128:     int expression_type)",
          "1129: {",
          "",
          "[Removed Lines]",
          "1126: int _yr_parser_operator_to_opcode(",
          "",
          "[Added Lines]",
          "1126: static int _yr_parser_operator_to_opcode(",
          "",
          "---------------"
        ],
        "libyara/proc.c||libyara/proc.c": [
          "File: libyara/proc.c -> libyara/proc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "219: } YR_PROC_ITERATOR_CTX;",
          "223:     int pid,",
          "224:     YR_PROC_ITERATOR_CTX* context)",
          "225: {",
          "",
          "[Removed Lines]",
          "222: int _yr_process_attach(",
          "",
          "[Added Lines]",
          "222: static int _yr_process_attach(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232: }",
          "236:     YR_PROC_ITERATOR_CTX* context)",
          "237: {",
          "238:   if (context->task != MACH_PORT_NULL)",
          "",
          "[Removed Lines]",
          "235: int _yr_process_detach(",
          "",
          "[Added Lines]",
          "235: static int _yr_process_detach(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "350: } YR_PROC_ITERATOR_CTX;",
          "355:     int pid,",
          "356:     YR_PROC_ITERATOR_CTX* context)",
          "357: {",
          "",
          "[Removed Lines]",
          "354: int _yr_process_attach(",
          "",
          "[Added Lines]",
          "353: static int _yr_process_attach(",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "410: }",
          "414:     YR_PROC_ITERATOR_CTX* context)",
          "415: {",
          "416:   fclose(context->maps);",
          "",
          "[Removed Lines]",
          "413: int _yr_process_detach(",
          "",
          "[Added Lines]",
          "412: static int _yr_process_detach(",
          "",
          "---------------"
        ],
        "libyara/re.c||libyara/re.c": [
          "File: libyara/re.c -> libyara/re.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:   ((cls)[(chr) / 8] & 1 << ((chr) % 8))",
          "134:     RE_CLASS* re_class,",
          "135:     uint8_t chr,",
          "136:     int case_insensitive)",
          "",
          "[Removed Lines]",
          "133: int _yr_re_is_char_in_class(",
          "",
          "[Added Lines]",
          "133: static int _yr_re_is_char_in_class(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147: }",
          "151:     const uint8_t* input,",
          "152:     uint8_t character_size)",
          "153: {",
          "",
          "[Removed Lines]",
          "150: int _yr_re_is_word_char(",
          "",
          "[Added Lines]",
          "150: static int _yr_re_is_word_char(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "748: }",
          "752:     RE_EMIT_CONTEXT* emit_context,",
          "753:     RE_NODE* re_node,",
          "754:     int flags,",
          "",
          "[Removed Lines]",
          "751: int _yr_re_emit(",
          "",
          "[Added Lines]",
          "751: static int _yr_re_emit(",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1334: }",
          "1338:     RE_THREAD_STORAGE** storage)",
          "1339: {",
          "",
          "[Removed Lines]",
          "1337: int _yr_re_alloc_storage(",
          "",
          "[Added Lines]",
          "1337: static int _yr_re_alloc_storage(",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1359: }",
          "1363:     RE_FIBER_POOL* fiber_pool,",
          "1364:     RE_FIBER** new_fiber)",
          "1365: {",
          "",
          "[Removed Lines]",
          "1362: int _yr_re_fiber_create(",
          "",
          "[Added Lines]",
          "1362: static int _yr_re_fiber_create(",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1408:     RE_FIBER_LIST* fiber_list,",
          "1409:     RE_FIBER* fiber)",
          "1410: {",
          "",
          "[Removed Lines]",
          "1407: void _yr_re_fiber_append(",
          "",
          "[Added Lines]",
          "1407: static void _yr_re_fiber_append(",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1439:     RE_FIBER_LIST* fiber_list,",
          "1440:     RE_FIBER* target_fiber,",
          "1441:     RE_FIBER* last_fiber)",
          "",
          "[Removed Lines]",
          "1438: int _yr_re_fiber_exists(",
          "",
          "[Added Lines]",
          "1438: static int _yr_re_fiber_exists(",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1493:     RE_FIBER_LIST* fiber_list,",
          "1494:     RE_FIBER_POOL* fiber_pool,",
          "1495:     RE_FIBER* fiber,",
          "",
          "[Removed Lines]",
          "1492: int _yr_re_fiber_split(",
          "",
          "[Added Lines]",
          "1492: static int _yr_re_fiber_split(",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1535:     RE_FIBER_LIST* fiber_list,",
          "1536:     RE_FIBER_POOL* fiber_pool,",
          "1537:     RE_FIBER* fiber)",
          "",
          "[Removed Lines]",
          "1534: RE_FIBER* _yr_re_fiber_kill(",
          "",
          "[Added Lines]",
          "1534: static RE_FIBER* _yr_re_fiber_kill(",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1574:   RE_FIBER_LIST* fiber_list,",
          "1575:   RE_FIBER_POOL* fiber_pool,",
          "1576:   RE_FIBER* fiber)",
          "",
          "[Removed Lines]",
          "1573: void _yr_re_fiber_kill_tail(",
          "",
          "[Added Lines]",
          "1573: static void _yr_re_fiber_kill_tail(",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1606:     RE_FIBER_LIST* fiber_list,",
          "1607:     RE_FIBER_POOL* fiber_pool)",
          "1608: {",
          "",
          "[Removed Lines]",
          "1605: void _yr_re_fiber_kill_all(",
          "",
          "[Added Lines]",
          "1605: static void _yr_re_fiber_kill_all(",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1624:     RE_FIBER_LIST* fiber_list,",
          "1625:     RE_FIBER_POOL* fiber_pool,",
          "1626:     RE_FIBER* fiber_to_sync)",
          "",
          "[Removed Lines]",
          "1623: int _yr_re_fiber_sync(",
          "",
          "[Added Lines]",
          "1623: static int _yr_re_fiber_sync(",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2390: }",
          "2394:     RE_NODE* re_node)",
          "2395: {",
          "2396:   int i;",
          "",
          "[Removed Lines]",
          "2393: void _yr_re_print_node(",
          "",
          "[Added Lines]",
          "2393: static void _yr_re_print_node(",
          "",
          "---------------"
        ],
        "libyara/rules.c||libyara/rules.c": [
          "File: libyara/rules.c -> libyara/rules.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "171: }",
          "175:     YR_RULES* rules,",
          "176:     YR_SCAN_CONTEXT* context)",
          "177: {",
          "",
          "[Removed Lines]",
          "174: void _yr_rules_clean_matches(",
          "",
          "[Added Lines]",
          "174: static void _yr_rules_clean_matches(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "241: #endif",
          "245:     YR_RULES* rules,",
          "246:     const uint8_t* block_data,",
          "247:     YR_MEMORY_BLOCK* block,",
          "",
          "[Removed Lines]",
          "244: int _yr_rules_scan_mem_block(",
          "",
          "[Added Lines]",
          "244: static int _yr_rules_scan_mem_block(",
          "",
          "---------------"
        ],
        "libyara/scan.c||libyara/scan.c": [
          "File: libyara/scan.c -> libyara/scan.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: } CALLBACK_ARGS;",
          "62:     const uint8_t* data,",
          "63:     size_t data_size,",
          "64:     uint8_t* string,",
          "",
          "[Removed Lines]",
          "61: int _yr_scan_compare(",
          "",
          "[Added Lines]",
          "61: static int _yr_scan_compare(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79: }",
          "83:     const uint8_t* data,",
          "84:     size_t data_size,",
          "85:     uint8_t* string,",
          "",
          "[Removed Lines]",
          "82: int _yr_scan_icompare(",
          "",
          "[Added Lines]",
          "82: static int _yr_scan_icompare(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100: }",
          "104:     const uint8_t* data,",
          "105:     size_t data_size,",
          "106:     uint8_t* string,",
          "",
          "[Removed Lines]",
          "103: int _yr_scan_wcompare(",
          "",
          "[Added Lines]",
          "103: static int _yr_scan_wcompare(",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "125: }",
          "129:     const uint8_t* data,",
          "130:     size_t data_size,",
          "131:     uint8_t* string,",
          "",
          "[Removed Lines]",
          "128: int _yr_scan_wicompare(",
          "",
          "[Added Lines]",
          "128: static int _yr_scan_wicompare(",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "150: }",
          "154:     int tidx,",
          "155:     YR_STRING* string,",
          "156:     YR_MATCH* match_to_update,",
          "",
          "[Removed Lines]",
          "153: void _yr_scan_update_match_chain_length(",
          "",
          "[Added Lines]",
          "153: static void _yr_scan_update_match_chain_length(",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "184: }",
          "188:     YR_MATCH* match,",
          "189:     YR_MATCHES* matches_list,",
          "190:     int replace_if_exists)",
          "",
          "[Removed Lines]",
          "187: int _yr_scan_add_match_to_list(",
          "",
          "[Added Lines]",
          "187: static int _yr_scan_add_match_to_list(",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "238: }",
          "242:     YR_MATCH* match,",
          "243:     YR_MATCHES* matches_list)",
          "244: {",
          "",
          "[Removed Lines]",
          "241: void _yr_scan_remove_match_from_list(",
          "",
          "[Added Lines]",
          "241: static void _yr_scan_remove_match_from_list(",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "260: }",
          "264:     YR_STRING* matching_string,",
          "265:     YR_SCAN_CONTEXT* context,",
          "266:     const uint8_t* match_data,",
          "",
          "[Removed Lines]",
          "263: int _yr_scan_verify_chained_string_match(",
          "",
          "[Added Lines]",
          "263: static int _yr_scan_verify_chained_string_match(",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "426: }",
          "430:     const uint8_t* match_data,",
          "431:     int32_t match_length,",
          "432:     int flags,",
          "",
          "[Removed Lines]",
          "429: int _yr_scan_match_callback(",
          "",
          "[Added Lines]",
          "429: static int _yr_scan_match_callback(",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "541:     int* matches);",
          "545:     YR_SCAN_CONTEXT* context,",
          "546:     YR_AC_MATCH* ac_match,",
          "547:     const uint8_t* data,",
          "",
          "[Removed Lines]",
          "544: int _yr_scan_verify_re_match(",
          "",
          "[Added Lines]",
          "544: static int _yr_scan_verify_re_match(",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "633: }",
          "637:     YR_SCAN_CONTEXT* context,",
          "638:     YR_AC_MATCH* ac_match,",
          "639:     const uint8_t* data,",
          "",
          "[Removed Lines]",
          "636: int _yr_scan_verify_literal_match(",
          "",
          "[Added Lines]",
          "636: static int _yr_scan_verify_literal_match(",
          "",
          "---------------"
        ],
        "yara.c||yara.c": [
          "File: yara.c -> yara.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "246: MODULE_DATA* modules_data_list = NULL;",
          "250: {",
          "251:   int result;",
          "",
          "[Removed Lines]",
          "249: int file_queue_init()",
          "",
          "[Added Lines]",
          "249: static int file_queue_init()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "267: }",
          "271: {",
          "272:   mutex_destroy(&queue_mutex);",
          "273:   semaphore_destroy(&unused_slots);",
          "",
          "[Removed Lines]",
          "270: void file_queue_destroy()",
          "",
          "[Added Lines]",
          "270: static void file_queue_destroy()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "275: }",
          "279: {",
          "280:   int i;",
          "",
          "[Removed Lines]",
          "278: void file_queue_finish()",
          "",
          "[Added Lines]",
          "278: static void file_queue_finish()",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "284: }",
          "288:     const char* file_path)",
          "289: {",
          "290:   semaphore_wait(&unused_slots);",
          "",
          "[Removed Lines]",
          "287: void file_queue_put(",
          "",
          "[Added Lines]",
          "287: static void file_queue_put(",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "298: }",
          "302: {",
          "303:   char* result;",
          "",
          "[Removed Lines]",
          "301: char* file_queue_get()",
          "",
          "[Added Lines]",
          "301: static char* file_queue_get()",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "325: #if defined(_WIN32) || defined(__CYGWIN__)",
          "328:     const char* path)",
          "329: {",
          "330:   DWORD attributes = GetFileAttributes(path);",
          "",
          "[Removed Lines]",
          "327: int is_directory(",
          "",
          "[Added Lines]",
          "327: static int is_directory(",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "336:     return FALSE;",
          "337: }",
          "340:     const char* dir,",
          "341:     int recursive,",
          "342:     time_t start_time,",
          "",
          "[Removed Lines]",
          "339: void scan_dir(",
          "",
          "[Added Lines]",
          "339: static void scan_dir(",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "379: #else",
          "382:     const char* path)",
          "383: {",
          "384:   struct stat st;",
          "",
          "[Removed Lines]",
          "381: int is_directory(",
          "",
          "[Added Lines]",
          "381: static int is_directory(",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "390: }",
          "394:     const char* dir,",
          "395:     int recursive,",
          "396:     time_t start_time,",
          "",
          "[Removed Lines]",
          "393: void scan_dir(",
          "",
          "[Added Lines]",
          "393: static void scan_dir(",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "438: #endif",
          "441:     const uint8_t* data,",
          "442:     int length)",
          "443: {",
          "",
          "[Removed Lines]",
          "440: void print_string(",
          "",
          "[Added Lines]",
          "440: static void print_string(",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "462: };",
          "466:     const uint8_t* data,",
          "467:     size_t length)",
          "468: {",
          "",
          "[Removed Lines]",
          "465: void print_escaped(",
          "",
          "[Added Lines]",
          "465: static void print_escaped(",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "492: }",
          "496:     const uint8_t* data,",
          "497:     int length)",
          "498: {",
          "",
          "[Removed Lines]",
          "495: void print_hex_string(",
          "",
          "[Added Lines]",
          "495: static void print_hex_string(",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "503: }",
          "507:     int error)",
          "508: {",
          "509:   switch (error)",
          "",
          "[Removed Lines]",
          "506: void print_scanner_error(",
          "",
          "[Added Lines]",
          "506: static void print_scanner_error(",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "542: }",
          "546:     int error_level,",
          "547:     const char* file_name,",
          "548:     int line_number,",
          "",
          "[Removed Lines]",
          "545: void print_compiler_error(",
          "",
          "[Added Lines]",
          "545: static void print_compiler_error(",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "563: }",
          "567:     int message,",
          "568:     YR_RULE* rule,",
          "569:     void* data)",
          "",
          "[Removed Lines]",
          "566: int handle_message(",
          "",
          "[Added Lines]",
          "566: static int handle_message(",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "726: }",
          "730:     int message,",
          "731:     void* message_data,",
          "732:     void* user_data)",
          "",
          "[Removed Lines]",
          "729: int callback(",
          "",
          "[Added Lines]",
          "729: static int callback(",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "784: #if defined(_WIN32) || defined(__CYGWIN__)",
          "786: #else",
          "788: #endif",
          "789: {",
          "790:   int result = ERROR_SUCCESS;",
          "",
          "[Removed Lines]",
          "785: DWORD WINAPI scanning_thread(LPVOID param)",
          "787: void* scanning_thread(void* param)",
          "",
          "[Added Lines]",
          "785: static DWORD WINAPI scanning_thread(LPVOID param)",
          "787: static void* scanning_thread(void* param)",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "842: }",
          "846:     YR_RULES* rules,",
          "847:     YR_COMPILER* compiler)",
          "848: {",
          "",
          "[Removed Lines]",
          "845: int define_external_variables(",
          "",
          "[Added Lines]",
          "845: static int define_external_variables(",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "929: }",
          "933: {",
          "934:   for (int i = 0; modules_data[i] != NULL; i++)",
          "935:   {",
          "",
          "[Removed Lines]",
          "932: int load_modules_data()",
          "",
          "[Added Lines]",
          "932: static int load_modules_data()",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "967: }",
          "971: {",
          "972:   MODULE_DATA* module_data = modules_data_list;",
          "",
          "[Removed Lines]",
          "970: void unload_modules_data()",
          "",
          "[Added Lines]",
          "970: static void unload_modules_data()",
          "",
          "---------------"
        ],
        "yarac.c||yarac.c": [
          "File: yarac.c -> yarac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "100: };",
          "104:     int error_level,",
          "105:     const char* file_name,",
          "106:     int line_number,",
          "",
          "[Removed Lines]",
          "103: void report_error(",
          "",
          "[Added Lines]",
          "103: static void report_error(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121: }",
          "125:     YR_COMPILER* compiler)",
          "126: {",
          "127:   for (int i = 0; ext_vars[i] != NULL; i++)",
          "",
          "[Removed Lines]",
          "124: int define_external_variables(",
          "",
          "[Added Lines]",
          "124: static int define_external_variables(",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8598bbc702733ba37366116016b5329ac5d85343",
      "candidate_info": {
        "commit_hash": "8598bbc702733ba37366116016b5329ac5d85343",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/8598bbc702733ba37366116016b5329ac5d85343",
        "files": [
          "docs/capi.rst",
          "docs/writingmodules.rst",
          "libyara/arena.c",
          "libyara/exec.c",
          "libyara/exefiles.c",
          "libyara/filemap.c",
          "libyara/include/yara/arena.h",
          "libyara/include/yara/exefiles.h",
          "libyara/include/yara/filemap.h",
          "libyara/include/yara/pe_utils.h",
          "libyara/include/yara/proc.h",
          "libyara/include/yara/re.h",
          "libyara/include/yara/rules.h",
          "libyara/include/yara/scan.h",
          "libyara/include/yara/types.h",
          "libyara/modules/dotnet.c",
          "libyara/modules/elf.c",
          "libyara/modules/hash.c",
          "libyara/modules/magic.c",
          "libyara/modules/math.c",
          "libyara/modules/pe.c",
          "libyara/modules/pe_utils.c",
          "libyara/proc.c",
          "libyara/re.c",
          "libyara/rules.c",
          "libyara/scan.c",
          "tests/oss-fuzz/elf_fuzzer.cc",
          "yara.c"
        ],
        "message": "Add \"const\" qualifier to a bunch of pointers to buffer that shouldn't be modified. (#775)",
        "before_after_code_files": [
          "libyara/arena.c||libyara/arena.c",
          "libyara/exec.c||libyara/exec.c",
          "libyara/exefiles.c||libyara/exefiles.c",
          "libyara/filemap.c||libyara/filemap.c",
          "libyara/include/yara/arena.h||libyara/include/yara/arena.h",
          "libyara/include/yara/exefiles.h||libyara/include/yara/exefiles.h",
          "libyara/include/yara/filemap.h||libyara/include/yara/filemap.h",
          "libyara/include/yara/pe_utils.h||libyara/include/yara/pe_utils.h",
          "libyara/include/yara/proc.h||libyara/include/yara/proc.h",
          "libyara/include/yara/re.h||libyara/include/yara/re.h",
          "libyara/include/yara/rules.h||libyara/include/yara/rules.h",
          "libyara/include/yara/scan.h||libyara/include/yara/scan.h",
          "libyara/include/yara/types.h||libyara/include/yara/types.h",
          "libyara/modules/dotnet.c||libyara/modules/dotnet.c",
          "libyara/modules/elf.c||libyara/modules/elf.c",
          "libyara/modules/hash.c||libyara/modules/hash.c",
          "libyara/modules/magic.c||libyara/modules/magic.c",
          "libyara/modules/math.c||libyara/modules/math.c",
          "libyara/modules/pe.c||libyara/modules/pe.c",
          "libyara/modules/pe_utils.c||libyara/modules/pe_utils.c",
          "libyara/proc.c||libyara/proc.c",
          "libyara/re.c||libyara/re.c",
          "libyara/rules.c||libyara/rules.c",
          "libyara/scan.c||libyara/scan.c",
          "tests/oss-fuzz/elf_fuzzer.cc||tests/oss-fuzz/elf_fuzzer.cc",
          "yara.c||yara.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/exec.c||libyara/exec.c",
            "libyara/include/yara/re.h||libyara/include/yara/re.h",
            "libyara/re.c||libyara/re.c",
            "libyara/scan.c||libyara/scan.c"
          ],
          "candidate": [
            "libyara/exec.c||libyara/exec.c",
            "libyara/include/yara/re.h||libyara/include/yara/re.h",
            "libyara/re.c||libyara/re.c",
            "libyara/scan.c||libyara/scan.c"
          ]
        }
      },
      "candidate_diff": {
        "libyara/arena.c||libyara/arena.c": [
          "File: libyara/arena.c -> libyara/arena.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "715: int yr_arena_write_data(",
          "716:     YR_ARENA* arena,",
          "718:     size_t size,",
          "719:     void** written_data)",
          "720: {",
          "",
          "[Removed Lines]",
          "717:     void* data,",
          "",
          "[Added Lines]",
          "717:     const void* data,",
          "",
          "---------------"
        ],
        "libyara/exec.c||libyara/exec.c": [
          "File: libyara/exec.c -> libyara/exec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:             offset <= block->base + block->size - sizeof(type)) \\",
          "107:         { \\",
          "108:           type result; \\",
          "110:           if (data == NULL) \\",
          "111:             return UNDEFINED; \\",
          "112:           result = *(type *)(data + offset - block->base); \\",
          "",
          "[Removed Lines]",
          "109:           uint8_t* data = block->fetch_data(block); \\",
          "",
          "[Added Lines]",
          "109:           const uint8_t* data = block->fetch_data(block); \\",
          "",
          "---------------"
        ],
        "libyara/exefiles.c||libyara/exefiles.c": [
          "File: libyara/exefiles.c -> libyara/exefiles.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: PIMAGE_NT_HEADERS32 yr_get_pe_header(",
          "49:     size_t buffer_length)",
          "50: {",
          "51:   PIMAGE_DOS_HEADER mz_header;",
          "",
          "[Removed Lines]",
          "48:     uint8_t* buffer,",
          "",
          "[Added Lines]",
          "48:     const uint8_t* buffer,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "131: int yr_get_elf_type(",
          "133:     size_t buffer_length)",
          "134: {",
          "135:   elf_ident_t* elf_ident;",
          "",
          "[Removed Lines]",
          "132:     uint8_t* buffer,",
          "",
          "[Added Lines]",
          "132:     const uint8_t* buffer,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "347: uint64_t yr_get_entry_point_offset(",
          "349:     size_t buffer_length)",
          "350: {",
          "351:   PIMAGE_NT_HEADERS32 pe_header;",
          "",
          "[Removed Lines]",
          "348:     uint8_t* buffer,",
          "",
          "[Added Lines]",
          "348:     const uint8_t* buffer,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "386: uint64_t yr_get_entry_point_address(",
          "388:     size_t buffer_length,",
          "389:     size_t base_address)",
          "390: {",
          "",
          "[Removed Lines]",
          "387:     uint8_t* buffer,",
          "",
          "[Added Lines]",
          "387:     const uint8_t* buffer,",
          "",
          "---------------"
        ],
        "libyara/filemap.c||libyara/filemap.c": [
          "File: libyara/filemap.c -> libyara/filemap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "149:       return ERROR_COULD_NOT_MAP_FILE;",
          "150:     }",
          "153:         pmapped_file->mapping,",
          "154:         FILE_MAP_READ,",
          "155:         offset >> 32,",
          "",
          "[Removed Lines]",
          "152:     pmapped_file->data = (uint8_t*) MapViewOfFile(",
          "",
          "[Added Lines]",
          "152:     pmapped_file->data = (const uint8_t*) MapViewOfFile(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "206:   if (pmapped_file->size != 0)",
          "207:   {",
          "209:         0,",
          "210:         pmapped_file->size,",
          "211:         PROT_READ,",
          "",
          "[Removed Lines]",
          "208:     pmapped_file->data = (uint8_t*) mmap(",
          "",
          "[Added Lines]",
          "208:     pmapped_file->data = (const uint8_t*) mmap(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "222:       return ERROR_COULD_NOT_MAP_FILE;",
          "223:     }",
          "226:   }",
          "227:   else",
          "228:   {",
          "",
          "[Removed Lines]",
          "225:     madvise(pmapped_file->data, pmapped_file->size, MADV_SEQUENTIAL);",
          "",
          "[Added Lines]",
          "225:     madvise((void*) pmapped_file->data, pmapped_file->size, MADV_SEQUENTIAL);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "365:     YR_MAPPED_FILE* pmapped_file)",
          "366: {",
          "367:   if (pmapped_file->data != NULL)",
          "370:   pmapped_file->data = NULL;",
          "371:   pmapped_file->size = 0;",
          "",
          "[Removed Lines]",
          "368:     munmap(pmapped_file->data, pmapped_file->size);",
          "",
          "[Added Lines]",
          "368:     munmap((void*) pmapped_file->data, pmapped_file->size);",
          "",
          "---------------"
        ],
        "libyara/include/yara/arena.h||libyara/include/yara/arena.h": [
          "File: libyara/include/yara/arena.h -> libyara/include/yara/arena.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "129: int yr_arena_write_data(",
          "130:     YR_ARENA* arena,",
          "132:     size_t size,",
          "133:     void** written_data);",
          "",
          "[Removed Lines]",
          "131:     void* data,",
          "",
          "[Added Lines]",
          "131:     const void* data,",
          "",
          "---------------"
        ],
        "libyara/include/yara/exefiles.h||libyara/include/yara/exefiles.h": [
          "File: libyara/include/yara/exefiles.h -> libyara/include/yara/exefiles.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #define YR_EXEFILES_H",
          "33: uint64_t yr_get_entry_point_offset(",
          "35:     size_t buffer_length);",
          "38: uint64_t yr_get_entry_point_address(",
          "40:     size_t buffer_length,",
          "41:     size_t base_address);",
          "",
          "[Removed Lines]",
          "34:     uint8_t* buffer,",
          "39:     uint8_t* buffer,",
          "",
          "[Added Lines]",
          "34:     const uint8_t* buffer,",
          "39:     const uint8_t* buffer,",
          "",
          "---------------"
        ],
        "libyara/include/yara/filemap.h||libyara/include/yara/filemap.h": [
          "File: libyara/include/yara/filemap.h -> libyara/include/yara/filemap.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: {",
          "54:   YR_FILE_DESCRIPTOR  file;",
          "55:   size_t              size;",
          "57:   #if defined(_WIN32) || defined(__CYGWIN__)",
          "58:   HANDLE              mapping;",
          "59:   #endif",
          "",
          "[Removed Lines]",
          "56:   uint8_t*            data;",
          "",
          "[Added Lines]",
          "56:   const uint8_t*      data;",
          "",
          "---------------"
        ],
        "libyara/include/yara/pe_utils.h||libyara/include/yara/pe_utils.h": [
          "File: libyara/include/yara/pe_utils.h -> libyara/include/yara/pe_utils.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: typedef struct _PE",
          "56: {",
          "58:   size_t data_size;",
          "60:   union {",
          "",
          "[Removed Lines]",
          "57:   uint8_t* data;",
          "",
          "[Added Lines]",
          "57:   const uint8_t* data;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83: PIMAGE_NT_HEADERS32 pe_get_header(",
          "85:     size_t data_size);",
          "",
          "[Removed Lines]",
          "84:     uint8_t* data,",
          "",
          "[Added Lines]",
          "84:     const uint8_t* data,",
          "",
          "---------------"
        ],
        "libyara/include/yara/proc.h||libyara/include/yara/proc.h": [
          "File: libyara/include/yara/proc.h -> libyara/include/yara/proc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: YR_API YR_MEMORY_BLOCK* yr_process_get_next_memory_block(",
          "46:     YR_MEMORY_BLOCK_ITERATOR* iterator);",
          "49:     YR_MEMORY_BLOCK* block);",
          "51: #endif",
          "",
          "[Removed Lines]",
          "48: YR_API uint8_t* yr_process_fetch_memory_block_data(",
          "",
          "[Added Lines]",
          "48: YR_API const uint8_t* yr_process_fetch_memory_block_data(",
          "",
          "---------------"
        ],
        "libyara/include/yara/re.h||libyara/include/yara/re.h": [
          "File: libyara/include/yara/re.h -> libyara/include/yara/re.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "176: typedef int RE_MATCH_CALLBACK_FUNC(",
          "178:     int match_length,",
          "179:     int flags,",
          "180:     void* args);",
          "",
          "[Removed Lines]",
          "177:     uint8_t* match,",
          "",
          "[Added Lines]",
          "177:     const uint8_t* match,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "224: int yr_re_exec(",
          "227:     size_t input_forwards_size,",
          "228:     size_t input_backwards_size,",
          "229:     int flags,",
          "",
          "[Removed Lines]",
          "225:     uint8_t* re_code,",
          "226:     uint8_t* input,",
          "",
          "[Added Lines]",
          "225:     uint8_t* code,",
          "226:     const uint8_t* input_data,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "235: int yr_re_fast_exec(",
          "236:     uint8_t* code,",
          "238:     size_t input_forwards_size,",
          "239:     size_t input_backwards_size,",
          "240:     int flags,",
          "",
          "[Removed Lines]",
          "237:     uint8_t* input_data,",
          "",
          "[Added Lines]",
          "237:     const uint8_t* input_data,",
          "",
          "---------------"
        ],
        "libyara/include/yara/rules.h||libyara/include/yara/rules.h": [
          "File: libyara/include/yara/rules.h -> libyara/include/yara/rules.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: YR_API int yr_rules_scan_mem(",
          "73:     YR_RULES* rules,",
          "75:     size_t buffer_size,",
          "76:     int flags,",
          "77:     YR_CALLBACK_FUNC callback,",
          "",
          "[Removed Lines]",
          "74:     uint8_t* buffer,",
          "",
          "[Added Lines]",
          "74:     const uint8_t* buffer,",
          "",
          "---------------"
        ],
        "libyara/include/yara/scan.h||libyara/include/yara/scan.h": [
          "File: libyara/include/yara/scan.h -> libyara/include/yara/scan.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: int yr_scan_verify_match(",
          "42:     YR_SCAN_CONTEXT* context,",
          "43:     YR_AC_MATCH* ac_match,",
          "45:     size_t data_size,",
          "46:     size_t data_base,",
          "47:     size_t offset);",
          "",
          "[Removed Lines]",
          "44:     uint8_t* data,",
          "",
          "[Added Lines]",
          "44:     const uint8_t* data,",
          "",
          "---------------"
        ],
        "libyara/include/yara/types.h||libyara/include/yara/types.h": [
          "File: libyara/include/yara/types.h -> libyara/include/yara/types.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "398: struct _YR_MEMORY_BLOCK_ITERATOR;",
          "402:     struct _YR_MEMORY_BLOCK* self);",
          "",
          "[Removed Lines]",
          "401: typedef uint8_t* (*YR_MEMORY_BLOCK_FETCH_DATA_FUNC)(",
          "",
          "[Added Lines]",
          "401: typedef const uint8_t* (*YR_MEMORY_BLOCK_FETCH_DATA_FUNC)(",
          "",
          "---------------"
        ],
        "libyara/modules/dotnet.c||libyara/modules/dotnet.c": [
          "File: libyara/modules/dotnet.c -> libyara/modules/dotnet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: char* pe_get_dotnet_string(",
          "36:     PE* pe,",
          "38:     DWORD string_index)",
          "39: {",
          "40:   size_t remaining;",
          "",
          "[Removed Lines]",
          "37:     uint8_t* string_offset,",
          "",
          "[Added Lines]",
          "37:     const uint8_t* string_offset,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:   char guid[37];",
          "95:   int i = 0;",
          "98:   DWORD guid_size = guid_header->Size;",
          "",
          "[Removed Lines]",
          "97:   uint8_t* guid_offset = pe->data + metadata_root + guid_header->Offset;",
          "",
          "[Added Lines]",
          "97:   const uint8_t* guid_offset = pe->data + metadata_root + guid_header->Offset;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "131: BLOB_PARSE_RESULT dotnet_parse_blob_entry(",
          "132:     PE* pe,",
          "134: {",
          "135:   BLOB_PARSE_RESULT result;",
          "",
          "[Removed Lines]",
          "133:     uint8_t* offset)",
          "",
          "[Added Lines]",
          "133:     const uint8_t* offset)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "205:   BLOB_PARSE_RESULT blob_result;",
          "206:   int i = 0;",
          "",
          "[Removed Lines]",
          "208:   uint8_t* offset = pe->data + metadata_root + us_header->Offset;",
          "209:   uint8_t* end_of_header = offset + us_header->Size;",
          "",
          "[Added Lines]",
          "208:   const uint8_t* offset = pe->data + metadata_root + us_header->Offset;",
          "209:   const uint8_t* end_of_header = offset + us_header->Size;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "359:   int64_t resource_offset;",
          "360:   uint32_t row_size, row_count, counter;",
          "364:   uint32_t num_rows = 0;",
          "365:   uint32_t valid_rows = 0;",
          "",
          "[Removed Lines]",
          "361:   uint8_t* string_offset;",
          "362:   uint8_t* blob_offset;",
          "",
          "[Added Lines]",
          "362:   const uint8_t* string_offset;",
          "363:   const uint8_t* blob_offset;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1674: {",
          "1675:   YR_MEMORY_BLOCK* block;",
          "1676:   YR_MEMORY_BLOCK_ITERATOR* iterator = context->iterator;",
          "1679:   foreach_memory_block(iterator, block)",
          "1680:   {",
          "",
          "[Removed Lines]",
          "1677:   uint8_t* block_data = NULL;",
          "",
          "[Added Lines]",
          "1678:   const uint8_t* block_data = NULL;",
          "",
          "---------------"
        ],
        "libyara/modules/elf.c||libyara/modules/elf.c": [
          "File: libyara/modules/elf.c -> libyara/modules/elf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: #define CLASS_DATA(c,d) ((c << 8) | d)",
          "45: int get_elf_class_data(",
          "47:     size_t buffer_length)",
          "48: {",
          "49:   elf_ident_t* elf_ident;",
          "",
          "[Removed Lines]",
          "46:     uint8_t* buffer,",
          "",
          "[Added Lines]",
          "46:     const uint8_t* buffer,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "686:   foreach_memory_block(iterator, block)",
          "687:   {",
          "690:     if (block_data == NULL)",
          "691:       continue;",
          "",
          "[Removed Lines]",
          "688:     uint8_t* block_data = block->fetch_data(block);",
          "",
          "[Added Lines]",
          "688:     const uint8_t* block_data = block->fetch_data(block);",
          "",
          "---------------"
        ],
        "libyara/modules/hash.c||libyara/modules/hash.c": [
          "File: libyara/modules/hash.c -> libyara/modules/hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "227:     if (offset >= block->base &&",
          "228:         offset < block->base + block->size)",
          "229:     {",
          "232:       if (block_data != NULL)",
          "233:       {",
          "",
          "[Removed Lines]",
          "230:       uint8_t* block_data = block->fetch_data(block);",
          "",
          "[Added Lines]",
          "230:       const uint8_t* block_data = block->fetch_data(block);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "311:     if (offset >= block->base &&",
          "312:         offset < block->base + block->size)",
          "313:     {",
          "316:       if (block_data != NULL)",
          "317:       {",
          "",
          "[Removed Lines]",
          "314:       uint8_t* block_data = block->fetch_data(block);",
          "",
          "[Added Lines]",
          "314:       const uint8_t* block_data = block->fetch_data(block);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "395:     if (offset >= block->base &&",
          "396:         offset < block->base + block->size)",
          "397:     {",
          "400:       if (block_data != NULL)",
          "401:       {",
          "",
          "[Removed Lines]",
          "398:       uint8_t* block_data = block->fetch_data(block);",
          "",
          "[Added Lines]",
          "398:       const uint8_t* block_data = block->fetch_data(block);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "461:     if (offset >= block->base &&",
          "462:         offset < block->base + block->size)",
          "463:     {",
          "466:       if (block_data != NULL)",
          "467:       {",
          "",
          "[Removed Lines]",
          "464:       uint8_t* block_data = block->fetch_data(block);",
          "",
          "[Added Lines]",
          "464:       const uint8_t* block_data = block->fetch_data(block);",
          "",
          "---------------"
        ],
        "libyara/modules/magic.c||libyara/modules/magic.c": [
          "File: libyara/modules/magic.c -> libyara/modules/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:   YR_MEMORY_BLOCK* block;",
          "50:   YR_SCAN_CONTEXT* context = scan_context();",
          "54:   if (context->flags & SCAN_FLAGS_PROCESS_MEMORY)",
          "55:     return_string(UNDEFINED);",
          "",
          "[Removed Lines]",
          "52:   uint8_t* block_data;",
          "",
          "[Added Lines]",
          "52:   const uint8_t* block_data;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:   YR_MEMORY_BLOCK* block;",
          "83:   YR_SCAN_CONTEXT* context = scan_context();",
          "87:   if (context->flags & SCAN_FLAGS_PROCESS_MEMORY)",
          "88:     return_string(UNDEFINED);",
          "",
          "[Removed Lines]",
          "85:   uint8_t* block_data;",
          "",
          "[Added Lines]",
          "85:   const uint8_t* block_data;",
          "",
          "---------------"
        ],
        "libyara/modules/math.c||libyara/modules/math.c": [
          "File: libyara/modules/math.c -> libyara/modules/math.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:       size_t data_len = (size_t) yr_min(",
          "113:           length, (size_t) (block->size - data_offset));",
          "117:       if (block_data == NULL)",
          "118:       {",
          "",
          "[Removed Lines]",
          "115:       uint8_t* block_data = block->fetch_data(block);",
          "",
          "[Added Lines]",
          "115:       const uint8_t* block_data = block->fetch_data(block);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "200:   size_t data_offset = 0;",
          "201:   size_t data_len = 0;",
          "204:   YR_SCAN_CONTEXT* context = scan_context();",
          "205:   YR_MEMORY_BLOCK* block = first_memory_block(context);",
          "",
          "[Removed Lines]",
          "202:   uint8_t* block_data = NULL;",
          "",
          "[Added Lines]",
          "202:   const uint8_t* block_data = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "292:       size_t data_len = (size_t) yr_min(",
          "293:           length, (size_t) (block->size - data_offset));",
          "297:       if (block_data == NULL)",
          "298:         return_float(UNDEFINED);",
          "",
          "[Removed Lines]",
          "295:       uint8_t* block_data = block->fetch_data(block);",
          "",
          "[Added Lines]",
          "295:       const uint8_t* block_data = block->fetch_data(block);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "360:       size_t data_len = (size_t) yr_min(",
          "361:           length, (size_t) (block->size - data_offset));",
          "365:       if (block_data == NULL)",
          "366:         return_float(UNDEFINED);",
          "",
          "[Removed Lines]",
          "363:       uint8_t* block_data = block->fetch_data(block);",
          "",
          "[Added Lines]",
          "363:       const uint8_t* block_data = block->fetch_data(block);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "479:       size_t data_len = (size_t) yr_min(",
          "480:           length, (size_t) (block->size - data_offset));",
          "484:       if (block_data == NULL)",
          "485:         return_float(UNDEFINED);",
          "",
          "[Removed Lines]",
          "482:       uint8_t* block_data = block->fetch_data(block);",
          "",
          "[Added Lines]",
          "482:       const uint8_t* block_data = block->fetch_data(block);",
          "",
          "---------------"
        ],
        "libyara/modules/pe.c||libyara/modules/pe.c": [
          "File: libyara/modules/pe.c -> libyara/modules/pe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:      int rsrc_type, \\",
          "109:      int rsrc_id, \\",
          "110:      int rsrc_language, \\",
          "114:      void* cb_data);",
          "",
          "[Removed Lines]",
          "111:      uint8_t* type_string, \\",
          "112:      uint8_t* name_string, \\",
          "113:      uint8_t* lang_string, \\",
          "",
          "[Added Lines]",
          "111:      const uint8_t* type_string, \\",
          "112:      const uint8_t* name_string, \\",
          "113:      const uint8_t* lang_string, \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "255:     PE* pe,",
          "257:     PIMAGE_RESOURCE_DIRECTORY_ENTRY entry)",
          "258: {",
          "",
          "[Removed Lines]",
          "254: uint8_t* parse_resource_name(",
          "256:     uint8_t* rsrc_data,",
          "",
          "[Added Lines]",
          "254: const uint8_t* parse_resource_name(",
          "256:     const uint8_t* rsrc_data,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "264:   {",
          "265:     DWORD length;",
          "",
          "[Removed Lines]",
          "267:     uint8_t* rsrc_str_ptr = rsrc_data + (yr_le32toh(entry->Name) & 0x7FFFFFFF);",
          "",
          "[Added Lines]",
          "267:     const uint8_t* rsrc_str_ptr = rsrc_data + \\",
          "268:         (yr_le32toh(entry->Name) & 0x7FFFFFFF);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "288: int _pe_iterate_resources(",
          "289:     PE* pe,",
          "290:     PIMAGE_RESOURCE_DIRECTORY resource_dir,",
          "292:     int rsrc_tree_level,",
          "293:     int* type,",
          "294:     int* id,",
          "295:     int* language,",
          "299:     RESOURCE_CALLBACK_FUNC callback,",
          "300:     void* callback_data)",
          "301: {",
          "",
          "[Removed Lines]",
          "291:     uint8_t* rsrc_data,",
          "296:     uint8_t* type_string,",
          "297:     uint8_t* name_string,",
          "298:     uint8_t* lang_string,",
          "",
          "[Added Lines]",
          "292:     const uint8_t* rsrc_data,",
          "297:     const uint8_t* type_string,",
          "298:     const uint8_t* name_string,",
          "299:     const uint8_t* lang_string,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1053: {",
          "1054:   int i, counter = 0;",
          "1057:   uintptr_t end;",
          "1059:   PWIN_CERTIFICATE win_cert;",
          "",
          "[Removed Lines]",
          "1056:   uint8_t* eod;",
          "",
          "[Added Lines]",
          "1057:   const uint8_t* eod;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2294:   YR_MEMORY_BLOCK_ITERATOR* iterator = context->iterator;",
          "2296:   PIMAGE_NT_HEADERS32 pe_header;",
          "2298:   PE* pe = NULL;",
          "2300:   set_integer(",
          "",
          "[Removed Lines]",
          "2297:   uint8_t* block_data = NULL;",
          "",
          "[Added Lines]",
          "2298:   const uint8_t* block_data = NULL;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2582:   foreach_memory_block(iterator, block)",
          "2583:   {",
          "2586:     if (block_data == NULL)",
          "2587:       continue;",
          "",
          "[Removed Lines]",
          "2584:  block_data = block->fetch_data(block);",
          "",
          "[Added Lines]",
          "2585:    block_data = block->fetch_data(block);",
          "",
          "---------------"
        ],
        "libyara/modules/pe_utils.c||libyara/modules/pe_utils.c": [
          "File: libyara/modules/pe_utils.c -> libyara/modules/pe_utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: #endif",
          "46: PIMAGE_NT_HEADERS32 pe_get_header(",
          "48:     size_t data_size)",
          "49: {",
          "50:   PIMAGE_DOS_HEADER mz_header;",
          "",
          "[Removed Lines]",
          "47:     uint8_t* data,",
          "",
          "[Added Lines]",
          "47:     const uint8_t* data,",
          "",
          "---------------"
        ],
        "libyara/proc.c||libyara/proc.c": [
          "File: libyara/proc.c -> libyara/proc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: typedef struct _YR_PROC_ITERATOR_CTX",
          "41: {",
          "42:   HANDLE          hProcess;",
          "44:   size_t          buffer_size;",
          "45:   SYSTEM_INFO     si;",
          "46:   YR_MEMORY_BLOCK current_block;",
          "",
          "[Removed Lines]",
          "43:   uint8_t*        buffer;",
          "",
          "[Added Lines]",
          "43:   const uint8_t*  buffer;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97: }",
          "101:     YR_MEMORY_BLOCK* block)",
          "102: {",
          "103:   YR_PROC_ITERATOR_CTX* context = (YR_PROC_ITERATOR_CTX*) block->context;",
          "",
          "[Removed Lines]",
          "100: YR_API uint8_t* yr_process_fetch_memory_block_data(",
          "",
          "[Added Lines]",
          "100: YR_API const uint8_t* yr_process_fetch_memory_block_data(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "106:   if (context->buffer_size < block->size)",
          "107:   {",
          "108:     if (context->buffer != NULL)",
          "113:     if (context->buffer != NULL)",
          "114:     {",
          "",
          "[Removed Lines]",
          "109:       yr_free(context->buffer);",
          "111:     context->buffer = (uint8_t*) yr_malloc(block->size);",
          "",
          "[Added Lines]",
          "109:       yr_free((void*) context->buffer);",
          "111:     context->buffer = (const uint8_t*) yr_malloc(block->size);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "124:   if (ReadProcessMemory(",
          "125:         context->hProcess,",
          "126:         (LPCVOID) block->base,",
          "128:         (SIZE_T) block->size,",
          "129:         &read) == FALSE)",
          "130:     {",
          "",
          "[Removed Lines]",
          "127:         context->buffer,",
          "",
          "[Added Lines]",
          "127:         (LPVOID) context->buffer,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "212: typedef struct _YR_PROC_ITERATOR_CTX {",
          "214:   task_t            task;",
          "216:   size_t            buffer_size;",
          "217:   YR_MEMORY_BLOCK   current_block;",
          "",
          "[Removed Lines]",
          "215:   uint8_t*          buffer;",
          "",
          "[Added Lines]",
          "215:   const uint8_t*    buffer;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "242: }",
          "246:     YR_MEMORY_BLOCK* block)",
          "247: {",
          "248:   YR_PROC_ITERATOR_CTX* context = (YR_PROC_ITERATOR_CTX*) block->context;",
          "",
          "[Removed Lines]",
          "245: YR_API uint8_t* yr_process_fetch_memory_block_data(",
          "",
          "[Added Lines]",
          "245: YR_API const uint8_t* yr_process_fetch_memory_block_data(",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "251:   if (context->buffer_size < block->size)",
          "252:   {",
          "253:     if (context->buffer != NULL)",
          "258:     if (context->buffer != NULL)",
          "259:     {",
          "",
          "[Removed Lines]",
          "254:       yr_free(context->buffer);",
          "256:     context->buffer = yr_malloc(block->size);",
          "",
          "[Added Lines]",
          "254:       yr_free((void*) context->buffer);",
          "256:     context->buffer = (const uint8_t*) yr_malloc(block->size);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "343:   int             pid;",
          "344:   int             mem_fd;",
          "345:   FILE*           maps;",
          "347:   size_t          buffer_size;",
          "348:   YR_MEMORY_BLOCK current_block;",
          "",
          "[Removed Lines]",
          "346:   uint8_t*        buffer;",
          "",
          "[Added Lines]",
          "346:   const uint8_t*  buffer;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "421: }",
          "425:     YR_MEMORY_BLOCK* block)",
          "426: {",
          "427:   YR_PROC_ITERATOR_CTX* context = (YR_PROC_ITERATOR_CTX*) block->context;",
          "",
          "[Removed Lines]",
          "424: YR_API uint8_t* yr_process_fetch_memory_block_data(",
          "",
          "[Added Lines]",
          "424: YR_API const uint8_t* yr_process_fetch_memory_block_data(",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "429:   if (context->buffer_size < block->size)",
          "430:   {",
          "431:     if (context->buffer != NULL)",
          "436:     if (context->buffer != NULL)",
          "437:     {",
          "",
          "[Removed Lines]",
          "432:       yr_free(context->buffer);",
          "434:     context->buffer = yr_malloc(block->size);",
          "",
          "[Added Lines]",
          "432:       yr_free((void*) context->buffer);",
          "434:     context->buffer = (const uint8_t*) yr_malloc(block->size);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "445:   }",
          "447:   if (pread(context->mem_fd,",
          "449:             block->size,",
          "450:             block->base) == -1)",
          "451:   {",
          "",
          "[Removed Lines]",
          "448:             context->buffer,",
          "",
          "[Added Lines]",
          "448:             (void *) context->buffer,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "531:     _yr_process_detach(context);",
          "533:     if (context->buffer != NULL)",
          "536:     yr_free(context);",
          "",
          "[Removed Lines]",
          "534:       yr_free(context->buffer);",
          "",
          "[Added Lines]",
          "534:       yr_free((void*) context->buffer);",
          "",
          "---------------"
        ],
        "libyara/re.c||libyara/re.c": [
          "File: libyara/re.c -> libyara/re.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "150: int _yr_re_is_word_char(",
          "152:     uint8_t character_size)",
          "153: {",
          "154:   int result = ((isalnum(*input) || (*input) == '_'));",
          "",
          "[Removed Lines]",
          "151:     uint8_t* input,",
          "",
          "[Added Lines]",
          "151:     const uint8_t* input,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1873: int yr_re_exec(",
          "1876:     size_t input_forwards_size,",
          "1877:     size_t input_backwards_size,",
          "1878:     int flags,",
          "",
          "[Removed Lines]",
          "1874:     uint8_t* re_code,",
          "1875:     uint8_t* input_data,",
          "",
          "[Added Lines]",
          "1874:     uint8_t* code,",
          "1875:     const uint8_t* input_data,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1880:     void* callback_args,",
          "1881:     int* matches)",
          "1882: {",
          "1883:   uint8_t* ip;",
          "1885:   uint8_t mask;",
          "1886:   uint8_t value;",
          "1887:   uint8_t character_size;",
          "",
          "[Removed Lines]",
          "1884:   uint8_t* input;",
          "",
          "[Added Lines]",
          "1883:   const uint8_t* input;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1947:   FAIL_ON_ERROR(_yr_re_fiber_create(&storage->fiber_pool, &fiber));",
          "1950:   fibers.head = fiber;",
          "1951:   fibers.tail = fiber;",
          "",
          "[Removed Lines]",
          "1949:   fiber->ip = re_code;",
          "",
          "[Added Lines]",
          "1950:   fiber->ip = code;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2208:           _yr_re_fiber_create(&storage->fiber_pool, &fiber),",
          "2209:           _yr_re_fiber_kill_all(&fibers, &storage->fiber_pool));",
          "2212:       _yr_re_fiber_append(&fibers, fiber);",
          "2214:       FAIL_ON_ERROR_WITH_CLEANUP(",
          "",
          "[Removed Lines]",
          "2211:       fiber->ip = re_code;",
          "",
          "[Added Lines]",
          "2212:       fiber->ip = code;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2224: int yr_re_fast_exec(",
          "2225:     uint8_t* code,",
          "2227:     size_t input_forwards_size,",
          "2228:     size_t input_backwards_size,",
          "2229:     int flags,",
          "",
          "[Removed Lines]",
          "2226:     uint8_t* input_data,",
          "",
          "[Added Lines]",
          "2227:     const uint8_t* input_data,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2234:   RE_REPEAT_ANY_ARGS* repeat_any_args;",
          "2236:   uint8_t* code_stack[MAX_FAST_RE_STACK];",
          "2238:   int matches_stack[MAX_FAST_RE_STACK];",
          "2240:   uint8_t* ip = code;",
          "2243:   uint8_t* next_opcode;",
          "2244:   uint8_t mask;",
          "2245:   uint8_t value;",
          "",
          "[Removed Lines]",
          "2237:   uint8_t* input_stack[MAX_FAST_RE_STACK];",
          "2241:   uint8_t* input = input_data;",
          "2242:   uint8_t* next_input;",
          "",
          "[Added Lines]",
          "2238:   const uint8_t* input_stack[MAX_FAST_RE_STACK];",
          "2241:   const uint8_t* input = input_data;",
          "2242:   const uint8_t* next_input;",
          "",
          "---------------"
        ],
        "libyara/rules.c||libyara/rules.c": [
          "File: libyara/rules.c -> libyara/rules.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "244: int _yr_rules_scan_mem_block(",
          "245:     YR_RULES* rules,",
          "247:     YR_MEMORY_BLOCK* block,",
          "248:     YR_SCAN_CONTEXT* context,",
          "249:     int timeout,",
          "",
          "[Removed Lines]",
          "246:     uint8_t* block_data,",
          "",
          "[Added Lines]",
          "246:     const uint8_t* block_data,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "424:   while (block != NULL)",
          "425:   {",
          "429:     if (data == NULL)",
          "",
          "[Removed Lines]",
          "426:     uint8_t* data = block->fetch_data(block);",
          "",
          "[Added Lines]",
          "426:     const uint8_t* data = block->fetch_data(block);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "555: }",
          "559:     YR_MEMORY_BLOCK* block)",
          "560: {",
          "562: }",
          "565: YR_API int yr_rules_scan_mem(",
          "566:     YR_RULES* rules,",
          "568:     size_t buffer_size,",
          "569:     int flags,",
          "570:     YR_CALLBACK_FUNC callback,",
          "",
          "[Removed Lines]",
          "558: static uint8_t* _yr_fetch_block_data(",
          "561:   return (uint8_t*) block->context;",
          "567:     uint8_t* buffer,",
          "",
          "[Added Lines]",
          "558: static const uint8_t* _yr_fetch_block_data(",
          "561:   return (const uint8_t*) block->context;",
          "567:     const uint8_t* buffer,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "577:   block.size = buffer_size;",
          "578:   block.base = 0;",
          "579:   block.fetch_data = _yr_fetch_block_data;",
          "582:   iterator.context = &block;",
          "583:   iterator.first = _yr_get_first_block;",
          "",
          "[Removed Lines]",
          "580:   block.context = buffer;",
          "",
          "[Added Lines]",
          "580:   block.context = (void*) buffer;",
          "",
          "---------------"
        ],
        "libyara/scan.c||libyara/scan.c": [
          "File: libyara/scan.c -> libyara/scan.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:   YR_STRING* string;",
          "49:   YR_SCAN_CONTEXT* context;",
          "52:   size_t data_size;",
          "53:   size_t data_base;",
          "",
          "[Removed Lines]",
          "51:   uint8_t* data;",
          "",
          "[Added Lines]",
          "51:   const uint8_t* data;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: int _yr_scan_compare(",
          "63:     size_t data_size,",
          "64:     uint8_t* string,",
          "65:     size_t string_length)",
          "66: {",
          "70:   size_t i = 0;",
          "",
          "[Removed Lines]",
          "62:     uint8_t* data,",
          "67:   uint8_t* s1 = data;",
          "68:   uint8_t* s2 = string;",
          "",
          "[Added Lines]",
          "62:     const uint8_t* data,",
          "67:   const uint8_t* s1 = data;",
          "68:   const uint8_t* s2 = string;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "82: int _yr_scan_icompare(",
          "84:     size_t data_size,",
          "85:     uint8_t* string,",
          "86:     size_t string_length)",
          "87: {",
          "91:   size_t i = 0;",
          "",
          "[Removed Lines]",
          "83:     uint8_t* data,",
          "88:   uint8_t* s1 = data;",
          "89:   uint8_t* s2 = string;",
          "",
          "[Added Lines]",
          "83:     const uint8_t* data,",
          "88:   const uint8_t* s1 = data;",
          "89:   const uint8_t* s2 = string;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "103: int _yr_scan_wcompare(",
          "105:     size_t data_size,",
          "106:     uint8_t* string,",
          "107:     size_t string_length)",
          "108: {",
          "112:   size_t i = 0;",
          "",
          "[Removed Lines]",
          "104:     uint8_t* data,",
          "109:   uint8_t* s1 = data;",
          "110:   uint8_t* s2 = string;",
          "",
          "[Added Lines]",
          "104:     const uint8_t* data,",
          "109:   const uint8_t* s1 = data;",
          "110:   const uint8_t* s2 = string;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "128: int _yr_scan_wicompare(",
          "130:     size_t data_size,",
          "131:     uint8_t* string,",
          "132:     size_t string_length)",
          "133: {",
          "137:   size_t i = 0;",
          "",
          "[Removed Lines]",
          "129:     uint8_t* data,",
          "134:   uint8_t* s1 = data;",
          "135:   uint8_t* s2 = string;",
          "",
          "[Added Lines]",
          "129:     const uint8_t* data,",
          "134:   const uint8_t* s1 = data;",
          "135:   const uint8_t* s2 = string;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "263: int _yr_scan_verify_chained_string_match(",
          "264:     YR_STRING* matching_string,",
          "265:     YR_SCAN_CONTEXT* context,",
          "267:     uint64_t match_base,",
          "268:     uint64_t match_offset,",
          "269:     int32_t match_length)",
          "",
          "[Removed Lines]",
          "266:     uint8_t* match_data,",
          "",
          "[Added Lines]",
          "266:     const uint8_t* match_data,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "429: int _yr_scan_match_callback(",
          "431:     int32_t match_length,",
          "432:     int flags,",
          "433:     void* args)",
          "",
          "[Removed Lines]",
          "430:     uint8_t* match_data,",
          "",
          "[Added Lines]",
          "430:     const uint8_t* match_data,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "533: typedef int (*RE_EXEC_FUNC)(",
          "534:     uint8_t* code,",
          "536:     size_t input_forwards_size,",
          "537:     size_t input_backwards_size,",
          "538:     int flags,",
          "",
          "[Removed Lines]",
          "535:     uint8_t* input,",
          "",
          "[Added Lines]",
          "535:     const uint8_t* input,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "544: int _yr_scan_verify_re_match(",
          "545:     YR_SCAN_CONTEXT* context,",
          "546:     YR_AC_MATCH* ac_match,",
          "548:     size_t data_size,",
          "549:     size_t data_base,",
          "550:     size_t offset)",
          "",
          "[Removed Lines]",
          "547:     uint8_t* data,",
          "",
          "[Added Lines]",
          "547:     const uint8_t* data,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "636: int _yr_scan_verify_literal_match(",
          "637:     YR_SCAN_CONTEXT* context,",
          "638:     YR_AC_MATCH* ac_match,",
          "640:     size_t data_size,",
          "641:     size_t data_base,",
          "642:     size_t offset)",
          "",
          "[Removed Lines]",
          "639:     uint8_t* data,",
          "",
          "[Added Lines]",
          "639:     const uint8_t* data,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "719: int yr_scan_verify_match(",
          "720:     YR_SCAN_CONTEXT* context,",
          "721:     YR_AC_MATCH* ac_match,",
          "723:     size_t data_size,",
          "724:     size_t data_base,",
          "725:     size_t offset)",
          "",
          "[Removed Lines]",
          "722:     uint8_t* data,",
          "",
          "[Added Lines]",
          "722:     const uint8_t* data,",
          "",
          "---------------"
        ],
        "tests/oss-fuzz/elf_fuzzer.cc||tests/oss-fuzz/elf_fuzzer.cc": [
          "File: tests/oss-fuzz/elf_fuzzer.cc -> tests/oss-fuzz/elf_fuzzer.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:   yr_rules_scan_mem(",
          "81:       elf_rules,",
          "83:       size,",
          "84:       SCAN_FLAGS_NO_TRYCATCH,",
          "85:       callback,",
          "",
          "[Removed Lines]",
          "82:       (uint8_t*) data, // TODO: remove typecase after changing API",
          "",
          "[Added Lines]",
          "82:       data,",
          "",
          "---------------"
        ],
        "yara.c||yara.c": [
          "File: yara.c -> yara.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "752:       {",
          "753:         if (strcmp(module_data->module_name, mi->module_name) == 0)",
          "754:         {",
          "756:           mi->module_data_size = module_data->mapped_file.size;",
          "757:           break;",
          "758:         }",
          "",
          "[Removed Lines]",
          "755:           mi->module_data = module_data->mapped_file.data;",
          "",
          "[Added Lines]",
          "755:           mi->module_data = (void*) module_data->mapped_file.data;",
          "",
          "---------------"
        ]
      }
    }
  ]
}