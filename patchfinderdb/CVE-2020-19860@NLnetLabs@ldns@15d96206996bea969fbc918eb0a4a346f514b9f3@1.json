{
  "cve_id": "CVE-2020-19860",
  "cve_desc": "When ldns version 1.7.1 verifies a zone file, the ldns_rr_new_frm_str_internal function has a heap out of bounds read vulnerability. An attacker can leak information on the heap by constructing a zone file payload.",
  "repo": "NLnetLabs/ldns",
  "patch_hash": "15d96206996bea969fbc918eb0a4a346f514b9f3",
  "patch_info": {
    "commit_hash": "15d96206996bea969fbc918eb0a4a346f514b9f3",
    "repo": "NLnetLabs/ldns",
    "commit_url": "https://github.com/NLnetLabs/ldns/commit/15d96206996bea969fbc918eb0a4a346f514b9f3",
    "files": [
      "Changelog",
      "rr.c"
    ],
    "message": "* bugfix #70: heap Out-of-bound Read vulnerability in   rr_frm_str_internal reported by pokerfacett.",
    "before_after_code_files": [
      "rr.c||rr.c"
    ]
  },
  "patch_diff": {
    "rr.c||rr.c": [
      "File: rr.c -> rr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "365:     ldns_buffer_remaining(rd_buf) > 0){",
      "369:     ldns_buffer_skip(rd_buf, 1);",
      "370:    }",
      "373:     delimiters = \"\\\"\\0\";",
      "374:     ldns_buffer_skip(rd_buf, 1);",
      "375:     quoted = true;",
      "377:      == LDNS_RDF_TYPE_LONG_STR) {",
      "379:     status = LDNS_STATUS_SYNTAX_RDATA_ERR;",
      "",
      "[Removed Lines]",
      "368:    while (*(ldns_buffer_current(rd_buf)) == ' ') {",
      "372:    if (*(ldns_buffer_current(rd_buf)) == '\\\"') {",
      "376:    } else if (ldns_rr_descriptor_field_type(desc, r_cnt)",
      "",
      "[Added Lines]",
      "368:    while (sldns_buffer_remaining(strbuf) > 0 &&",
      "373:    if (sldns_buffer_remaining(strbuf) > 0 &&",
      "378:    }",
      "379:    if (!quoted && ldns_rr_descriptor_field_type(desc, r_cnt)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "53946eabc6fac560823bd6f205b906f0a327705a",
      "candidate_info": {
        "commit_hash": "53946eabc6fac560823bd6f205b906f0a327705a",
        "repo": "NLnetLabs/ldns",
        "commit_url": "https://github.com/NLnetLabs/ldns/commit/53946eabc6fac560823bd6f205b906f0a327705a",
        "files": [
          "Changelog",
          "drill/securetrace.c"
        ],
        "message": "* Fix compile warning by variable initialisation for older gcc.",
        "before_after_code_files": [
          "drill/securetrace.c||drill/securetrace.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NLnetLabs/ldns/pull/144"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drill/securetrace.c||drill/securetrace.c": [
          "File: drill/securetrace.c -> drill/securetrace.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:  ldns_rr_list *correct_key_list;",
          "138:  ldns_rr_list *trusted_ds_rrs;",
          "139:  bool new_keys_trusted = false;",
          "141:  ldns_rr_list *dataset;",
          "143:  ldns_rr_list *nsec_rrs = NULL;",
          "",
          "[Removed Lines]",
          "140:  ldns_rr_list *current_correct_keys;",
          "",
          "[Added Lines]",
          "140:  ldns_rr_list *current_correct_keys = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "136ec420437041fe13f344a2053e774f9050cc38",
      "candidate_info": {
        "commit_hash": "136ec420437041fe13f344a2053e774f9050cc38",
        "repo": "NLnetLabs/ldns",
        "commit_url": "https://github.com/NLnetLabs/ldns/commit/136ec420437041fe13f344a2053e774f9050cc38",
        "files": [
          "Changelog",
          "dnssec.c"
        ],
        "message": "* bugfix #51: Heap Out-of-bound Read vulnerability in   ldns_nsec3_salt_data reported by pokerfacett.",
        "before_after_code_files": [
          "dnssec.c||dnssec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NLnetLabs/ldns/pull/144"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "dnssec.c||dnssec.c": [
          "File: dnssec.c -> dnssec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1332:  ldns_rdf *salt_rdf = ldns_nsec3_salt(nsec3_rr);",
          "1333:  if (salt_rdf && ldns_rdf_size(salt_rdf) > 0) {",
          "1334:       salt_length = ldns_rdf_data(salt_rdf)[0];",
          "1335:   salt = LDNS_XMALLOC(uint8_t, salt_length);",
          "1336:                 if(!salt) return NULL;",
          "1337:   memcpy(salt, &ldns_rdf_data(salt_rdf)[1], salt_length);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1335:   if((size_t)salt_length+1 > ldns_rdf_size(salt_rdf))",
          "1336:    return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "70d94cfcaeff64beda60ff9403340f06a680f451",
      "candidate_info": {
        "commit_hash": "70d94cfcaeff64beda60ff9403340f06a680f451",
        "repo": "NLnetLabs/ldns",
        "commit_url": "https://github.com/NLnetLabs/ldns/commit/70d94cfcaeff64beda60ff9403340f06a680f451",
        "files": [
          "packaging/ldns-config.in"
        ],
        "message": "Revert \"Purge unused variables\"\n\nThis reverts commit c5fcd8ab8ee1b66d0ef75b02f72ccfc3ebf50cf5.",
        "before_after_code_files": [
          "packaging/ldns-config.in||packaging/ldns-config.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NLnetLabs/ldns/pull/144"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packaging/ldns-config.in||packaging/ldns-config.in": [
          "File: packaging/ldns-config.in -> packaging/ldns-config.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/sh",
          "3: VERSION=\"@PACKAGE_VERSION@\"",
          "4: LDFLAGS=\"@LDFLAGS@ @LIBSSL_LDFLAGS@ @PYTHON_LDFLAGS@\"",
          "5: LIBS=\"@LIBS@ @LIBSSL_LIBS@\"",
          "6: LIBDIR=\"@libdir@\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: prefix=\"@prefix@\"",
          "4: exec_prefix=\"@exec_prefix@\"",
          "6: CFLAGS=\"@CFLAGS@\"",
          "7: CPPFLAGS=\"@CPPFLAGS@ @LIBSSL_CPPFLAGS@ @PYTHON_CPPFLAGS@\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cdd567826405147a44b1116b5a97e0645bd4d541",
      "candidate_info": {
        "commit_hash": "cdd567826405147a44b1116b5a97e0645bd4d541",
        "repo": "NLnetLabs/ldns",
        "commit_url": "https://github.com/NLnetLabs/ldns/commit/cdd567826405147a44b1116b5a97e0645bd4d541",
        "files": [
          "test/60-compile-builddir.tpkg/60-compile-builddir.test"
        ],
        "message": "Change test 60 to test for deprecated OpenSSL APIs",
        "before_after_code_files": [
          "test/60-compile-builddir.tpkg/60-compile-builddir.test||test/60-compile-builddir.tpkg/60-compile-builddir.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NLnetLabs/ldns/pull/144"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/60-compile-builddir.tpkg/60-compile-builddir.test||test/60-compile-builddir.tpkg/60-compile-builddir.test": [
          "File: test/60-compile-builddir.tpkg/60-compile-builddir.test -> test/60-compile-builddir.tpkg/60-compile-builddir.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: make realclean || true",
          "32: $loot && $conf && mkdir -p b && cd b && \\",
          "34:  $mk",
          "",
          "[Removed Lines]",
          "33:  ../configure --disable-sha2 --disable-gost --disable-dane-ta-usage && \\",
          "",
          "[Added Lines]",
          "33:  ../configure CFLAGS=\"-Werror=implicit-function-declaration  -DOPENSSL_API_COMPAT=0x10100000L\" --with-drill --with-examples --disable-gost --disable-dane-ta-usage && \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "449f7840f6a3ac68b5ee66a745f58c50c25b53bc",
      "candidate_info": {
        "commit_hash": "449f7840f6a3ac68b5ee66a745f58c50c25b53bc",
        "repo": "NLnetLabs/ldns",
        "commit_url": "https://github.com/NLnetLabs/ldns/commit/449f7840f6a3ac68b5ee66a745f58c50c25b53bc",
        "files": [
          "test/13-unit-tests-base.tpkg/13-unit-tests-base.c"
        ],
        "message": "Just my preference for direct type conversions",
        "before_after_code_files": [
          "test/13-unit-tests-base.tpkg/13-unit-tests-base.c||test/13-unit-tests-base.tpkg/13-unit-tests-base.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NLnetLabs/ldns/pull/144"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/13-unit-tests-base.tpkg/13-unit-tests-base.c||test/13-unit-tests-base.tpkg/13-unit-tests-base.c": [
          "File: test/13-unit-tests-base.tpkg/13-unit-tests-base.c -> test/13-unit-tests-base.tpkg/13-unit-tests-base.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: #include <ldns/ldns.h>",
          "12: void print_data_ar(const uint8_t *data, const size_t len) {",
          "13:  size_t i;",
          "",
          "[Removed Lines]",
          "9: #define CH_PTR(ptr) ((char*)(ptr))",
          "10: #define UCH_PTR(ptr) ((unsigned char*)(ptr))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "306:  data_len = strlen(data);",
          "309:  (void) ldns_hexstring_to_data(expect_result, expect_result_str);",
          "311:  digest_len = LDNS_SHA1_DIGEST_LENGTH;",
          "",
          "[Removed Lines]",
          "308:  expect_result = malloc(strlen(CH_PTR(expect_result_str)) / 2);",
          "",
          "[Added Lines]",
          "304:  expect_result = malloc(strlen((char *)expect_result_str) / 2);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "319:   printf(\"\\n\");",
          "320:   result = 1;",
          "321:  } else {",
          "323:    printf(\"Bad sha1 digest: got: \");",
          "324:    print_data_ar(digest, digest_len);",
          "325:    printf(\"Expected:                 \");",
          "329:    result = 2;",
          "330:   } else {",
          "",
          "[Removed Lines]",
          "322:   if (strncmp(CH_PTR(expect_result), CH_PTR(digest), digest_len) != 0) {",
          "326:    printf(\"%s\\n\", CH_PTR(expect_result));",
          "327:    printf(\"Data:\\t%s\\n\", CH_PTR(data));",
          "",
          "[Added Lines]",
          "318:   if (strncmp((char *)expect_result, (char *)digest, digest_len) != 0) {",
          "322:    printf(\"%s\\n\", (char *)expect_result);",
          "323:    printf(\"Data:\\t%s\\n\", (char *)data);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "348:  data_len = strlen(data);",
          "351:  (void) ldns_hexstring_to_data(expect_result, expect_result_str);",
          "353:  digest_len = LDNS_SHA256_DIGEST_LENGTH;",
          "",
          "[Removed Lines]",
          "350:  expect_result = malloc(strlen(CH_PTR(expect_result_str)) / 2);",
          "",
          "[Added Lines]",
          "346:  expect_result = malloc(strlen((char *)expect_result_str) / 2);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "361:   printf(\"\\n\");",
          "362:   result = 1;",
          "363:  } else {",
          "365:    printf(\"Bad sha256 digest: got: \");",
          "366:    print_data_ar(digest, digest_len);",
          "367:    printf(\"Expected:                 \");",
          "371:    result = 2;",
          "372:   } else {",
          "",
          "[Removed Lines]",
          "364:   if (strncmp(CH_PTR(expect_result), CH_PTR(digest), digest_len) != 0) {",
          "368:    printf(\"%s\\n\", CH_PTR(expect_result));",
          "369:    printf(\"Data:\\t%s\\n\", CH_PTR(data));",
          "",
          "[Added Lines]",
          "360:   if (strncmp((char *)expect_result, (char *)digest, digest_len) != 0) {",
          "364:    printf(\"%s\\n\", (char *)expect_result);",
          "365:    printf(\"Data:\\t%s\\n\", (char *)data);",
          "",
          "---------------"
        ]
      }
    }
  ]
}