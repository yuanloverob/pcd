{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "73976b6c9ddbd2d22209ea292968ce700e97f1a2",
      "candidate_info": {
        "commit_hash": "73976b6c9ddbd2d22209ea292968ce700e97f1a2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/73976b6c9ddbd2d22209ea292968ce700e97f1a2",
        "files": [
          "deps/v8/build/common.gypi",
          "deps/v8/src/hydrogen-instructions.cc",
          "deps/v8/src/version.cc",
          "deps/v8/tools/gyp/v8.gyp"
        ],
        "message": "v8: Upgrade to 3.11.10.18",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi",
          "deps/v8/src/hydrogen-instructions.cc||deps/v8/src/hydrogen-instructions.cc",
          "deps/v8/src/version.cc||deps/v8/src/version.cc",
          "deps/v8/tools/gyp/v8.gyp||deps/v8/tools/gyp/v8.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:           'WIN32',",
          "240:         ],",
          "241:         'msvs_configuration_attributes': {",
          "242:           'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "243:           'CharacterSet': '1',",
          "244:         },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242:           'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "270:         'target_conditions': [",
          "271:           ['_toolset==\"host\"', {",
          "272:             'variables': {",
          "274:             },",
          "275:             'cflags': [ '<(m32flag)' ],",
          "276:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "273:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "274:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "280:           }],",
          "281:           ['_toolset==\"target\"', {",
          "282:             'variables': {",
          "284:             },",
          "285:             'cflags': [ '<(m32flag)' ],",
          "286:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "283:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "284:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "323:         },",
          "324:         'conditions': [",
          "325:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "327:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "328:           }],",
          "329:         ],",
          "",
          "[Removed Lines]",
          "326:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "327:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "332:         'conditions': [",
          "333:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\" \\",
          "334:             or OS==\"android\"', {",
          "335:             'cflags': [",
          "336:               '-fdata-sections',",
          "337:               '-ffunction-sections',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:             'cflags!': [",
          "337:               '-O2',",
          "338:               '-Os',",
          "339:             ],",
          "",
          "---------------"
        ],
        "deps/v8/src/hydrogen-instructions.cc||deps/v8/src/hydrogen-instructions.cc": [
          "File: deps/v8/src/hydrogen-instructions.cc -> deps/v8/src/hydrogen-instructions.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1631:     if (current->IsJSGlobalProxy() ||",
          "1632:         current->IsGlobalObject() ||",
          "1633:         !current->IsJSObject() ||",
          "1634:         JSObject::cast(current)->IsAccessCheckNeeded() ||",
          "1635:         !JSObject::cast(current)->HasFastProperties()) {",
          "1636:       return false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1634:         JSObject::cast(current)->map()->has_named_interceptor() ||",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1685:           types_.Add(types->at(i), zone);",
          "1686:           break;",
          "1687:         case MAP_TRANSITION:",
          "1689:             negative_lookups.Add(types->at(i), zone);",
          "1690:           }",
          "1691:           break;",
          "",
          "[Removed Lines]",
          "1688:           if (PrototypeChainCanNeverResolve(map, name)) {",
          "",
          "[Added Lines]",
          "1689:           if (!map->has_named_interceptor() &&",
          "1690:               PrototypeChainCanNeverResolve(map, name)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1693:           break;",
          "1694:       }",
          "1695:     } else if (lookup.IsCacheable()) {",
          "1697:         negative_lookups.Add(types->at(i), zone);",
          "1698:       }",
          "1699:     }",
          "",
          "[Removed Lines]",
          "1696:       if (PrototypeChainCanNeverResolve(map, name)) {",
          "",
          "[Added Lines]",
          "1698:       if (!map->has_named_interceptor() &&",
          "1699:           PrototypeChainCanNeverResolve(map, name)) {",
          "",
          "---------------"
        ],
        "deps/v8/src/version.cc||deps/v8/src/version.cc": [
          "File: deps/v8/src/version.cc -> deps/v8/src/version.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define MAJOR_VERSION     3",
          "36: #define MINOR_VERSION     11",
          "37: #define BUILD_NUMBER      10",
          "41: #define IS_CANDIDATE_VERSION 0",
          "",
          "[Removed Lines]",
          "38: #define PATCH_LEVEL       17",
          "",
          "[Added Lines]",
          "38: #define PATCH_LEVEL       18",
          "",
          "---------------"
        ],
        "deps/v8/tools/gyp/v8.gyp||deps/v8/tools/gyp/v8.gyp": [
          "File: deps/v8/tools/gyp/v8.gyp -> deps/v8/tools/gyp/v8.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "721:                 '../../src/win32-math.h',",
          "722:               ],",
          "723:               'msvs_disabled_warnings': [4351, 4355, 4800],",
          "727:               'link_settings':  {",
          "728:                 'libraries': [ '-lwinmm.lib', '-lws2_32.lib' ],",
          "729:               },",
          "",
          "[Removed Lines]",
          "724:               'direct_dependent_settings': {",
          "725:                 'msvs_disabled_warnings': [4351, 4355, 4800],",
          "726:               },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "70635753a3ff982ddb8686ecbb6b73b4780f8721",
      "candidate_info": {
        "commit_hash": "70635753a3ff982ddb8686ecbb6b73b4780f8721",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/70635753a3ff982ddb8686ecbb6b73b4780f8721",
        "files": [
          "src/node_script.cc"
        ],
        "message": "Cleanup vm module memory leakage\n\nThere are some paths here that led to dangling contexts. By being\nsmarter with handle management we can get rid of all the cleanup code\nand fix those issues.",
        "before_after_code_files": [
          "src/node_script.cc||src/node_script.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_script.cc||src/node_script.cc": [
          "File: src/node_script.cc -> src/node_script.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "348:     display_error = true;",
          "349:   }",
          "353:   Local<Array> keys;",
          "354:   if (context_flag == newContext) {",
          "358:   } else if (context_flag == userContext) {",
          "",
          "[Removed Lines]",
          "351:   Persistent<Context> context;",
          "356:     context = Context::New();",
          "",
          "[Added Lines]",
          "351:   Handle<Context> context = Context::GetCurrent();",
          "360:     Persistent<Context> tmp = Context::New();",
          "361:     context = Local<Context>::New(tmp);",
          "362:     tmp.Dispose();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:     context = nContext->GetV8Context();",
          "362:   }",
          "365:   if (context_flag == userContext || context_flag == newContext) {",
          "371:     CloneObject(args.This(), sandbox, context->Global()->GetPrototype());",
          "",
          "[Removed Lines]",
          "367:     context->Enter();",
          "",
          "[Added Lines]",
          "370:   Context::Scope context_scope(context);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "407:   if (output_flag == returnResult) {",
          "408:     result = script->Run();",
          "409:     if (result.IsEmpty()) {",
          "415:       return try_catch.ReThrow();",
          "416:     }",
          "417:   } else {",
          "",
          "[Removed Lines]",
          "410:       if (context_flag == newContext) {",
          "411:         context->DetachGlobal();",
          "412:         context->Exit();",
          "413:         context.Dispose();",
          "414:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "429:     CloneObject(args.This(), context->Global()->GetPrototype(), sandbox);",
          "430:   }",
          "442:   return result == args.This() ? result : scope.Close(result);",
          "443: }",
          "",
          "[Removed Lines]",
          "432:   if (context_flag == newContext) {",
          "434:     context->DetachGlobal();",
          "435:     context->Exit();",
          "436:     context.Dispose();",
          "437:   } else if (context_flag == userContext) {",
          "439:     context->Exit();",
          "440:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "07804c7c9a4c2eb50eb897fa5e41cb8c9e5a1ab5",
      "candidate_info": {
        "commit_hash": "07804c7c9a4c2eb50eb897fa5e41cb8c9e5a1ab5",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/07804c7c9a4c2eb50eb897fa5e41cb8c9e5a1ab5",
        "files": [
          "src/node_file.cc",
          "test/fixtures/test-regress-GH-4015.js",
          "test/simple/test-regress-GH-4015.js"
        ],
        "message": "fs: don't segfault on deeply recursive stat()\n\nCheck that the calls to Integer::New() and Date::New() succeed and bail out if\nthey don't.\n\nV8 returns an empty handle on stack overflow. Trying to set the empty handle as\na property on an object results in a NULL pointer dereference in release builds\nand an assert in debug builds.\n\nFixes #4015.",
        "before_after_code_files": [
          "src/node_file.cc||src/node_file.cc",
          "test/fixtures/test-regress-GH-4015.js||test/fixtures/test-regress-GH-4015.js",
          "test/simple/test-regress-GH-4015.js||test/simple/test-regress-GH-4015.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_file.cc||src/node_file.cc": [
          "File: src/node_file.cc -> src/node_file.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:   Local<Object> stats =",
          "302:     stats_constructor_template->GetFunction()->NewInstance();",
          "345:   return scope.Close(stats);",
          "346: }",
          "",
          "[Removed Lines]",
          "305:   stats->Set(dev_symbol, Integer::New(s->st_dev));",
          "308:   stats->Set(ino_symbol, Integer::New(s->st_ino));",
          "311:   stats->Set(mode_symbol, Integer::New(s->st_mode));",
          "314:   stats->Set(nlink_symbol, Integer::New(s->st_nlink));",
          "317:   stats->Set(uid_symbol, Integer::New(s->st_uid));",
          "320:   stats->Set(gid_symbol, Integer::New(s->st_gid));",
          "323:   stats->Set(rdev_symbol, Integer::New(s->st_rdev));",
          "326:   stats->Set(size_symbol, Number::New(s->st_size));",
          "328: #ifdef __POSIX__",
          "330:   stats->Set(blksize_symbol, Integer::New(s->st_blksize));",
          "333:   stats->Set(blocks_symbol, Integer::New(s->st_blocks));",
          "334: #endif",
          "337:   stats->Set(atime_symbol, NODE_UNIXTIME_V8(s->st_atime));",
          "340:   stats->Set(mtime_symbol, NODE_UNIXTIME_V8(s->st_mtime));",
          "343:   stats->Set(ctime_symbol, NODE_UNIXTIME_V8(s->st_ctime));",
          "",
          "[Added Lines]",
          "304:   if (stats.IsEmpty()) return Local<Object>();",
          "317: #define X(name)                                                               \\",
          "318:   {                                                                           \\",
          "319:     Local<Value> val = Integer::New(s->st_##name);                            \\",
          "320:     if (val.IsEmpty()) return Local<Object>();                                \\",
          "321:     stats->Set(name##_symbol, val);                                           \\",
          "322:   }",
          "323:   X(dev)",
          "324:   X(ino)",
          "325:   X(mode)",
          "326:   X(nlink)",
          "327:   X(uid)",
          "328:   X(gid)",
          "329:   X(rdev)",
          "330:   X(size)",
          "331: # if defined(__POSIX__)",
          "332:   X(blksize)",
          "333:   X(blocks)",
          "334: # endif",
          "335: #undef X",
          "337: #define X(name)                                                               \\",
          "338:   {                                                                           \\",
          "339:     Local<Value> val = NODE_UNIXTIME_V8(s->st_##name);                        \\",
          "340:     if (val.IsEmpty()) return Local<Object>();                                \\",
          "341:     stats->Set(name##_symbol, val);                                           \\",
          "342:   }",
          "343:   X(atime)",
          "344:   X(mtime)",
          "345:   X(ctime)",
          "346: #undef X",
          "",
          "---------------"
        ],
        "test/fixtures/test-regress-GH-4015.js||test/fixtures/test-regress-GH-4015.js": [
          "File: test/fixtures/test-regress-GH-4015.js -> test/fixtures/test-regress-GH-4015.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: var fs = require('fs');",
          "3: function load() {",
          "4:   fs.statSync('.');",
          "5:   load();",
          "6: }",
          "7: load();",
          "",
          "---------------"
        ],
        "test/simple/test-regress-GH-4015.js||test/simple/test-regress-GH-4015.js": [
          "File: test/simple/test-regress-GH-4015.js -> test/simple/test-regress-GH-4015.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var exec = require('child_process').exec;",
          "26: var cmd = process.execPath",
          "27:         + ' '",
          "28:         + common.fixturesDir",
          "29:         + '/test-regress-GH-4015.js';",
          "31: exec(cmd, function(err, stdout, stderr) {",
          "32:   assert(/RangeError: Maximum call stack size exceeded/.test(stderr));",
          "33: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5ea6ad0f01e67db73a30190b520df25ba8e16f4",
      "candidate_info": {
        "commit_hash": "e5ea6ad0f01e67db73a30190b520df25ba8e16f4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e5ea6ad0f01e67db73a30190b520df25ba8e16f4",
        "files": [
          "lib/path.js"
        ],
        "message": "_makeLong shouldn't turn the empty string into \\\\?\\C:\\",
        "before_after_code_files": [
          "lib/path.js||lipath.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/path.js||lipath.js": [
          "File: lib/path.js -> lipath.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "421: var _makeLong = exports._makeLong = isWindows ?",
          "422:   function(path) {",
          "423:     var resolvedPath = exports.resolve(path);",
          "425:     if (resolvedPath.match(/^[a-zA-Z]\\:\\\\/)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ea0397a1a679e7ffaaf353bc67afca2a4065fa5",
      "candidate_info": {
        "commit_hash": "3ea0397a1a679e7ffaaf353bc67afca2a4065fa5",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3ea0397a1a679e7ffaaf353bc67afca2a4065fa5",
        "files": [
          "lib/readline.js"
        ],
        "message": "readline: Use one history item for reentered line\n\nIf the command entered is exactly the same as the last history item,\ndon't dupe it in the history",
        "before_after_code_files": [
          "lib/readline.js||lireadline.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "188: Interface.prototype._addHistory = function() {",
          "189:   if (this.line.length === 0) return '';",
          "197:   return this.history[0];",
          "198: };",
          "",
          "[Removed Lines]",
          "191:   this.history.unshift(this.line);",
          "192:   this.historyIndex = -1;",
          "195:   if (this.history.length > kHistorySize) this.history.pop();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}