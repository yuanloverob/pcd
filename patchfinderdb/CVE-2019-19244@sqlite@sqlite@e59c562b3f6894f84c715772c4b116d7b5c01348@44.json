{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b1b808b92dddee6d57c661777d9e321c383486d2",
      "candidate_info": {
        "commit_hash": "b1b808b92dddee6d57c661777d9e321c383486d2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b1b808b92dddee6d57c661777d9e321c383486d2",
        "files": [
          "Makefile.msc",
          "autoconf/Makefile.msc",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Further enhancements and fixes.\n\nFossilOrigin-Name: c9f1972e10b0cdb5e351a776a64c60acf404dcfbe2a8a28c0a273bbe851e677f",
        "before_after_code_files": [
          "Makefile.msc||Makefile.msc",
          "autoconf/Makefile.msc||autoconf/Makefile.msc",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.msc||Makefile.msc": [
          "File: Makefile.msc -> Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "860: # prior to running nmake in order to match the actual installed location and",
          "861: # version on this machine.",
          "862: #",
          "863: !IFNDEF TCLDIR",
          "864: TCLDIR = $(TOP)\\compat\\tcl",
          "865: !ENDIF",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "863: !IFNDEF TCLVERSION",
          "864: TCLVERSION = 86",
          "865: !ENDIF",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "873: !ENDIF",
          "875: !IFNDEF LIBTCL",
          "877: !ENDIF",
          "879: !IFNDEF LIBTCLSTUB",
          "881: !ENDIF",
          "883: !IFNDEF LIBTCLPATH",
          "",
          "[Removed Lines]",
          "876: LIBTCL = tcl86.lib",
          "880: LIBTCLSTUB = tclstub86.lib",
          "",
          "[Added Lines]",
          "880: LIBTCL = tcl$(TCLVERSION).lib",
          "884: LIBTCLSTUB = tclstub$(TCLVERSION).lib",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1088: !IFDEF PLATFORM",
          "1089: LTLINKOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "1090: LTLIBOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "1094: LTLINKOPTS = /NOLOGO /MACHINE:x86",
          "1095: LTLIBOPTS = /NOLOGO /MACHINE:x86",
          "1096: !ELSE",
          "1097: LTLINKOPTS = /NOLOGO",
          "1098: LTLIBOPTS = /NOLOGO",
          "1099: !ENDIF",
          "1106: # When compiling for use in the WinRT environment, the following",
          "1107: # linker option must be used to mark the executable as runnable",
          "",
          "[Removed Lines]",
          "1091: !ELSE",
          "1092: !IFDEF VISUALSTUDIOVERSION",
          "1093: !IF \"$(VISUALSTUDIOVERSION)\">=\"12.0\"",
          "1100: !ELSE",
          "1101: LTLINKOPTS = /NOLOGO",
          "1102: LTLIBOPTS = /NOLOGO",
          "1103: !ENDIF",
          "1104: !ENDIF",
          "",
          "[Added Lines]",
          "1095: !ELSEIF \"$(VISUALSTUDIOVERSION)\"==\"12.0\" || \\",
          "1096:         \"$(VISUALSTUDIOVERSION)\"==\"14.0\" || \\",
          "1097:         \"$(VISUALSTUDIOVERSION)\"==\"15.0\"",
          "",
          "---------------"
        ],
        "autoconf/Makefile.msc||autoconf/Makefile.msc": [
          "File: autoconf/Makefile.msc -> autoconf/Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "826: !IFDEF PLATFORM",
          "827: LTLINKOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "828: LTLIBOPTS = /NOLOGO /MACHINE:$(PLATFORM)",
          "829: !ELSE",
          "830: LTLINKOPTS = /NOLOGO",
          "831: LTLIBOPTS = /NOLOGO",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "829: !ELSEIF \"$(VISUALSTUDIOVERSION)\"==\"12.0\" || \\",
          "830:         \"$(VISUALSTUDIOVERSION)\"==\"14.0\" || \\",
          "831:         \"$(VISUALSTUDIOVERSION)\"==\"15.0\"",
          "832: LTLINKOPTS = /NOLOGO /MACHINE:x86",
          "833: LTLIBOPTS = /NOLOGO /MACHINE:x86",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3e355846217785c30f518d31a5541172c4213c0d8559c3f8638a047cd745c98e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3db3d12cd11b60c47e52050eb3e83a67b7664d0f",
      "candidate_info": {
        "commit_hash": "3db3d12cd11b60c47e52050eb3e83a67b7664d0f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3db3d12cd11b60c47e52050eb3e83a67b7664d0f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "src/pragma.c",
          "test/vtab1.test",
          "test/without_rowid1.test",
          "test/without_rowid6.test",
          "test/without_rowid7.test"
        ],
        "message": "Fix the WITHOUT ROWID table logic so that it generates a correct KeyInfo object for tables that have a PRIMARY KEY containing the same column used more than once with different collating sequences.  Enhance the index_xinfo pragma to assist in testing the above. Fix for ticket [fd3aec0c7e3e2998].\n\nFossilOrigin-Name: 84a51a755c18ac8253080db6eec505df894ee3b1e97cfa8e61039ac38001e270",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "src/pragma.c||src/pragma.c",
          "test/vtab1.test||test/vtab1.test",
          "test/without_rowid1.test||test/without_rowid1.test",
          "test/without_rowid6.test||test/without_rowid6.test",
          "test/without_rowid7.test||test/without_rowid7.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fe014288ac03cdf0dc5410b7d45cad4768759b52746c0a22bce2fc03779c5d5a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1831:   Index *pIdx;",
          "1832:   Index *pPk;",
          "1833:   int nPk;",
          "1834:   int i, j;",
          "1835:   sqlite3 *db = pParse->db;",
          "1836:   Vdbe *v = pParse->pVdbe;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1834:   int nExtra;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1873:                        SQLITE_IDXTYPE_PRIMARYKEY);",
          "1874:     if( db->mallocFailed || pParse->nErr ) return;",
          "1875:     pPk = sqlite3PrimaryKeyIndex(pTab);",
          "1876:   }else{",
          "1877:     pPk = sqlite3PrimaryKeyIndex(pTab);",
          "1878:     assert( pPk!=0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1877:     assert( pPk->nKeyCol==1 );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1887:         pPk->nColumn--;",
          "1888:       }else{",
          "1889:         testcase( hasColumn(pPk->aiColumn, j, pPk->aiColumn[i]) );",
          "1890:         pPk->aiColumn[j++] = pPk->aiColumn[i];",
          "1891:       }",
          "1892:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1892:         pPk->azColl[j] = pPk->azColl[i];",
          "1893:         pPk->aSortOrder[j] = pPk->aSortOrder[i];",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1895:   assert( pPk!=0 );",
          "1896:   pPk->isCovering = 1;",
          "1897:   if( !db->init.imposterTable ) pPk->uniqNotNull = 1;",
          "",
          "[Removed Lines]",
          "1898:   nPk = pPk->nKeyCol;",
          "",
          "[Added Lines]",
          "1902:   nPk = pPk->nColumn = pPk->nKeyCol;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1957:     }",
          "1962:   }",
          "1963:   recomputeColumnsNotIndexed(pPk);",
          "1964: }",
          "",
          "[Removed Lines]",
          "1948:   if( nPk<pTab->nCol ){",
          "1949:     if( resizeIndexObject(db, pPk, pTab->nCol) ) return;",
          "1950:     for(i=0, j=nPk; i<pTab->nCol; i++){",
          "1951:       if( !hasColumn(pPk->aiColumn, j, i) ){",
          "1952:         assert( j<pPk->nColumn );",
          "1953:         pPk->aiColumn[j] = i;",
          "1954:         pPk->azColl[j] = sqlite3StrBINARY;",
          "1955:         j++;",
          "1956:       }",
          "1958:     assert( pPk->nColumn==j );",
          "1959:     assert( pTab->nCol==j );",
          "1960:   }else{",
          "1961:     pPk->nColumn = pTab->nCol;",
          "",
          "[Added Lines]",
          "1952:   nExtra = 0;",
          "1953:   for(i=0; i<pTab->nCol; i++){",
          "1954:     if( !hasColumn(pPk->aiColumn, nPk, i) ) nExtra++;",
          "1955:   }",
          "1956:   if( resizeIndexObject(db, pPk, nPk+nExtra) ) return;",
          "1957:   for(i=0, j=nPk; i<pTab->nCol; i++){",
          "1958:     if( !hasColumn(pPk->aiColumn, j, i) ){",
          "1959:       assert( j<pPk->nColumn );",
          "1960:       pPk->aiColumn[j] = i;",
          "1961:       pPk->azColl[j] = sqlite3StrBINARY;",
          "1962:       j++;",
          "1965:   assert( pPk->nColumn==j );",
          "1966:   assert( pTab->nCol<=j );",
          "",
          "---------------"
        ],
        "src/pragma.c||src/pragma.c": [
          "File: src/pragma.c -> src/pragma.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1157:     Index *pIdx;",
          "1158:     Table *pTab;",
          "1159:     pIdx = sqlite3FindIndex(db, zRight, zDb);",
          "1160:     if( pIdx ){",
          "1161:       int iIdxDb = sqlite3SchemaToIndex(db, pIdx->pSchema);",
          "1162:       int i;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1160:     if( pIdx==0 ){",
          "1164:       pTab = sqlite3LocateTable(pParse, LOCATE_NOERR, zRight, zDb);",
          "1165:       if( pTab && !HasRowid(pTab) ){",
          "1166:         pIdx = sqlite3PrimaryKeyIndex(pTab);",
          "1167:       }",
          "1168:     }",
          "",
          "---------------"
        ],
        "test/vtab1.test||test/vtab1.test": [
          "File: test/vtab1.test -> test/vtab1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "875:   }",
          "876: } {}",
          "878: ifcapable attach {",
          "879:   do_test vtab1.8-1 {",
          "880:     set echo_module \"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "878: # PRAGMA index_info and index_xinfo are no-ops on a virtual table",
          "879: do_test vtab1.7-14 {",
          "880:   execsql {",
          "881:     PRAGMA index_info('echo_abc');",
          "882:     PRAGMA index_xinfo('echo_abc');",
          "883:   }",
          "884: } {}",
          "",
          "---------------"
        ],
        "test/without_rowid1.test||test/without_rowid1.test": [
          "File: test/without_rowid1.test -> test/without_rowid1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: integrity_check without_rowid1-1.0ic",
          "34: do_execsql_test without_rowid1-1.1 {",
          "35:   SELECT *, '|' FROM t1 ORDER BY +c, a;",
          "36: } {arctic sleep ammonia helena | journal sherman ammonia helena | dynamic juliet flipper command | journal sherman gamma patriot |}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: do_execsql_test without_rowid1-1.0ixi {",
          "35:   SELECT name, key FROM pragma_index_xinfo('t1');",
          "36: } {c 1 a 1 b 0 d 0}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:   UPDATE t4 SET a = 'ABC';",
          "121:   SELECT * FROM t4;",
          "122: } {ABC def}",
          "124: do_execsql_test 2.2.1 {",
          "125:   DROP TABLE t4;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127: do_execsql_test 2.1.3 {",
          "128:   SELECT name, coll, key FROM pragma_index_xinfo('t4');",
          "129: } {a nocase 1 b BINARY 0}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "133:   SELECT * FROM t4;",
          "134: } {xyz ABC}",
          "136: do_execsql_test 2.3.1 {",
          "137:   CREATE TABLE t5 (a, b, PRIMARY KEY(b, a)) WITHOUT ROWID;",
          "138:   INSERT INTO t5(a, b) VALUES('abc', 'def');",
          "139:   UPDATE t5 SET a='abc', b='def';",
          "140: } {}",
          "142: do_execsql_test 2.4.1 {",
          "143:   CREATE TABLE t6 (",
          "144:     a COLLATE nocase, b, c UNIQUE, PRIMARY KEY(b, a)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "143: do_execsql_test 2.2.3 {",
          "144:   SELECT name, coll, key FROM pragma_index_xinfo('t4');",
          "145: } {a nocase 1 b BINARY 0}",
          "154: do_execsql_test 2.3.2 {",
          "155:   SELECT name, coll, key FROM pragma_index_xinfo('t5');",
          "156: } {b BINARY 1 a BINARY 1}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "153:   SELECT * FROM t6 ORDER BY c;",
          "154: } {ABC def ghi ABC def ghi}",
          "156: #-------------------------------------------------------------------------",
          "157: # Unless the destination table is completely empty, the xfer optimization",
          "158: # is disabled for WITHOUT ROWID tables. The following tests check for",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "173: do_execsql_test 2.4.3 {",
          "174:   SELECT name, coll, key FROM pragma_index_xinfo('t6');",
          "175: } {b BINARY 1 a nocase 1 c BINARY 0}",
          "",
          "---------------"
        ],
        "test/without_rowid6.test||test/without_rowid6.test": [
          "File: test/without_rowid6.test -> test/without_rowid6.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:   INSERT INTO t1(a,b,c,d,e) SELECT i, i+1000, printf('x%dy',i), 0, 0 FROM c;",
          "25:   ANALYZE;",
          "26: } {}",
          "27: do_execsql_test without_rowid6-110 {",
          "28:   SELECT c FROM t1 WHERE a=123;",
          "29: } {x123y}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: do_execsql_test without_rowid6-101 {",
          "28:   SELECT name, key FROM pragma_index_xinfo('t1');",
          "29: } {a 1 b 1 c 1 d 1 e 0}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:   INSERT INTO t1(a,b,c) VALUES(1,8,3),(4,5,6),(7,2,9);",
          "52:   SELECT a FROM t1 WHERE b>3 ORDER BY b;",
          "53: } {4 1}",
          "54: do_execsql_test without_rowid6-210 {",
          "55:   EXPLAIN QUERY PLAN",
          "56:   SELECT a FROM t1 WHERE b>3 ORDER BY b;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: do_execsql_test without_rowid6-201 {",
          "58:   SELECT name, key FROM pragma_index_xinfo('t1');",
          "59: } {b 1 a 0 c 0}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:   INSERT INTO t1(a,b,c) VALUES(1,8,3),(4,5,6),(7,2,9);",
          "106:   SELECT a FROM t1 WHERE b>3 ORDER BY b;",
          "107: } {4 1}",
          "108: do_execsql_test without_rowid6-510 {",
          "109:   EXPLAIN QUERY PLAN",
          "110:   SELECT a FROM t1 WHERE b>3 ORDER BY b;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114: do_execsql_test without_rowid6-501 {",
          "115:   SELECT name, key FROM pragma_index_xinfo('t1');",
          "116: } {b 1 c 1 a 0}",
          "",
          "---------------"
        ],
        "test/without_rowid7.test||test/without_rowid7.test": [
          "File: test/without_rowid7.test -> test/without_rowid7.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2019 July 17",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #*************************************************************************",
          "11: # This file implements regression tests for SQLite library.",
          "12: #",
          "14: set testdir [file dirname $argv0]",
          "15: source $testdir/tester.tcl",
          "16: set testprefix without_rowid7",
          "18: do_execsql_test 1.0 {",
          "19:   CREATE TABLE t1(a, b COLLATE nocase, PRIMARY KEY(a, a, b)) WITHOUT ROWID;",
          "20: }",
          "22: do_catchsql_test 1.1 {",
          "23:   INSERT INTO t1 VALUES(1, 'one'), (1, 'ONE');",
          "24: } {1 {UNIQUE constraint failed: t1.a, t1.b}}",
          "27: do_execsql_test 2.0 {",
          "28:   CREATE TABLE t2(a, b, PRIMARY KEY(a COLLATE nocase, a)) WITHOUT ROWID;",
          "29: }",
          "31: do_execsql_test 2.1 {",
          "32:   INSERT INTO t2 VALUES(1, 'one');",
          "33:   SELECT b FROM t2;",
          "34: } {one}",
          "36: do_execsql_test 2.2a {",
          "37:   PRAGMA index_info(t2);",
          "38: } {0 0 a 1 0 a}",
          "39: do_execsql_test 2.2b {",
          "40:   SELECT *, '|' FROM pragma_index_info('t2');",
          "41: } {0 0 a | 1 0 a |}",
          "42: do_execsql_test 2.3a {",
          "43:   PRAGMA index_xinfo(t2);",
          "44: } {0 0 a 0 nocase 1 1 0 a 0 BINARY 1 2 1 b 0 BINARY 0}",
          "45: do_execsql_test 2.3b {",
          "46:   SELECT *, '|' FROM pragma_index_xinfo('t2');",
          "47: } {0 0 a 0 nocase 1 | 1 0 a 0 BINARY 1 | 2 1 b 0 BINARY 0 |}",
          "49: do_execsql_test 2.4 {",
          "50:   CREATE TABLE t3(a, b, PRIMARY KEY(a COLLATE nocase, a));",
          "51:   PRAGMA index_info(t3);",
          "52: } {}",
          "56: finish_test",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a86b20820de16a8ca370e597217987f484376d51",
      "candidate_info": {
        "commit_hash": "a86b20820de16a8ca370e597217987f484376d51",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a86b20820de16a8ca370e597217987f484376d51",
        "files": [
          "ext/fts3/fts3.c",
          "ext/fts5/fts5_buffer.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test"
        ],
        "message": "Fix an infinite loop caused by a corrupt database in fts3. Also an undefined left-shift in fts5.\n\nFossilOrigin-Name: 55c5d72af9510e2f27c33544d804a58d4282b0efb384ead38484129ce91b574f",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "ext/fts5/fts5_buffer.c||ext/fts5/fts5_buffer.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2138: static void fts3PoslistMerge(",
          "",
          "[Added Lines]",
          "2138: static int fts3PoslistMerge(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2152:     else if( *p1==POS_END ) iCol1 = POSITION_LIST_END;",
          "2153:     else iCol1 = 0;",
          "2156:     else if( *p2==POS_END ) iCol2 = POSITION_LIST_END;",
          "2157:     else iCol2 = 0;",
          "",
          "[Removed Lines]",
          "2151:     if( *p1==POS_COLUMN ) fts3GetVarint32(&p1[1], &iCol1);",
          "2155:     if( *p2==POS_COLUMN ) fts3GetVarint32(&p2[1], &iCol2);",
          "",
          "[Added Lines]",
          "2151:     if( *p1==POS_COLUMN ){",
          "2152:       fts3GetVarint32(&p1[1], &iCol1);",
          "2153:       if( iCol1==0 ) return FTS_CORRUPT_VTAB;",
          "2154:     }",
          "2158:     if( *p2==POS_COLUMN ){",
          "2159:       fts3GetVarint32(&p2[1], &iCol2);",
          "2160:       if( iCol2==0 ) return FTS_CORRUPT_VTAB;",
          "2161:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2203: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2209:   return SQLITE_OK;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2494: ){",
          "2495:   sqlite3_int64 i1 = 0;",
          "2496:   sqlite3_int64 i2 = 0;",
          "2497:   sqlite3_int64 iPrev = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2502:   int rc = SQLITE_OK;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2547:     if( p2 && p1 && iDiff==0 ){",
          "2548:       fts3PutDeltaVarint3(&p, bDescDoclist, &iPrev, &bFirstOut, i1);",
          "2550:       fts3GetDeltaVarint3(&p1, pEnd1, bDescDoclist, &i1);",
          "2551:       fts3GetDeltaVarint3(&p2, pEnd2, bDescDoclist, &i2);",
          "2552:     }else if( !p2 || (p1 && iDiff<0) ){",
          "",
          "[Removed Lines]",
          "2549:       fts3PoslistMerge(&p, &p1, &p2);",
          "",
          "[Added Lines]",
          "2557:       rc = fts3PoslistMerge(&p, &p1, &p2);",
          "2558:       if( rc ) break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2565:   assert( *pnOut<=n1+n2+FTS3_VARINT_MAX-1 );",
          "2567: }",
          "",
          "[Removed Lines]",
          "2566:   return SQLITE_OK;",
          "",
          "[Added Lines]",
          "2575:   return rc;",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_buffer.c||ext/fts5/fts5_buffer.c": [
          "File: ext/fts5/fts5_buffer.c -> ext/fts5/fts5_buffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: }",
          "54: int sqlite3Fts5Get32(const u8 *aBuf){",
          "56: }",
          "",
          "[Removed Lines]",
          "55:   return (aBuf[0] << 24) + (aBuf[1] << 16) + (aBuf[2] << 8) + aBuf[3];",
          "",
          "[Added Lines]",
          "55:   return (int)((((u32)aBuf[0])<<24) + (aBuf[1]<<16) + (aBuf[2]<<8) + aBuf[3]);",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "4639:   SELECT * FROM t3;",
          "4640: } {1 {database disk image is malformed}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4642: #-------------------------------------------------------------------------",
          "4643: reset_db",
          "4644: do_execsql_test 37.0 {",
          "4645:   CREATE VIRTUAL TABLE t1 USING fts5(b, c);",
          "4646:   INSERT INTO t1 VALUES('a', 'b');",
          "4647:   SELECT quote(block) FROM t1_data WHERE rowid=10;",
          "4648: } {X'000000000101010001010101'}",
          "4650: do_execsql_test 37.1 {",
          "4651:   UPDATE t1_data SET block = X'FFFFFFFF0101010001010101' WHERE rowid = 10;",
          "4652:   SELECT rowid FROM t1('a');",
          "4653: } {1}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: acccc9808f52009b2c7794770c8b7efe2ce861fa184d32e287e7114c74e2b522",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1433:   SELECT rowid, quote(matchinfo(t1,'pcxybs')) FROM t1 WHERE t1 MATCH 'e*'",
          "1434: } {1 {database disk image is malformed}}",
          "1437: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1436: #-------------------------------------------------------------------------",
          "1437: reset_db",
          "1438: do_test 12.0 {",
          "1439:   sqlite3 db {}",
          "1440:   db deserialize [decode_hexdb {",
          "1441: | size 28672 pagesize 4096 filename c81b.db",
          "1442: | page 1 offset 0",
          "1443: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "1444: |     16: 10 00 01 01 00 40 20 20 00 00 00 01 00 00 00 07   .....@  ........",
          "1445: |     32: 00 00 00 02 00 00 00 01 00 00 00 01 00 00 00 04   ................",
          "1446: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "1447: |     80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01   ................",
          "1448: |     96: 00 2e 30 38 0d 0e b1 00 06 0d a4 00 0f 8d 0f 21   ..08...........!",
          "1449: |    112: 0e b9 0d c8 0e 7e 0d a4 0d a4 00 00 00 00 00 00   .....~..........",
          "1450: |   3488: 00 00 00 00 22 07 06 17 11 11 01 31 74 61 62 6c   ...........1tabl",
          "1451: |   3504: 65 74 32 74 32 07 43 52 45 41 54 45 20 54 41 42   et2t2.CREATE TAB",
          "1452: |   3520: 4c 45 20 74 32 28 78 29 81 33 05 07 17 1f 1f 01   LE t2(x).3......",
          "1453: |   3536: 82 35 74 61 62 6c 65 74 31 5f 73 65 67 64 69 72   .5tablet1_segdir",
          "1454: |   3552: 74 31 5f 73 65 67 64 69 72 05 43 52 45 41 54 45   t1_segdir.CREATE",
          "1455: |   3568: 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69    TABLE 't1_segdi",
          "1456: |   3584: 72 27 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 52   r'(level INTEGER",
          "1457: |   3600: 2c 69 64 78 20 49 4e 54 45 47 45 52 2c 73 74 61   ,idx INTEGER,sta",
          "1458: |   3616: 72 74 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52   rt_block INTEGER",
          "1459: |   3632: 2c 6c 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63   ,leaves_end_bloc",
          "1460: |   3648: 6b 20 49 4e 54 45 47 45 52 2c 65 6e 64 5f 62 6c   k INTEGER,end_bl",
          "1461: |   3664: 6f 63 6b 20 49 4e 54 45 47 45 62 2c 72 6f 6f 74   ock INTEGEb,root",
          "1462: |   3680: 20 42 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45    BLOB,PRIMARY KE",
          "1463: |   3696: 59 28 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 06   Y(level, idx))1.",
          "1464: |   3712: 06 17 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74   ..E...indexsqlit",
          "1465: |   3728: 65 5f 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73   e_autoindex_t1_s",
          "1466: |   3744: 65 67 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72   egdir_1t1_segdir",
          "1467: |   3760: 06 0f c7 00 08 00 00 00 00 66 04 07 17 23 23 01   .........f...##.",
          "1468: |   3776: 81 13 74 61 62 6c 65 74 31 5f 73 65 67 6d 65 6e   ..tablet1_segmen",
          "1469: |   3792: 74 73 74 31 5f 73 65 67 6d 65 6e 74 73 04 43 52   tst1_segments.CR",
          "1470: |   3808: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73   EATE TABLE 't1_s",
          "1471: |   3824: 65 67 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64   egments'(blockid",
          "1472: |   3840: 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59    INTEGER PRIMARY",
          "1473: |   3856: 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42    KEY, block BLOB",
          "1474: |   3872: 29 6a 03 07 17 21 21 01 81 1f 74 61 62 6c 65 74   )j...!!...tablet",
          "1475: |   3888: 31 5f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1_contentt1_cont",
          "1476: |   3904: 65 6e 74 03 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "1477: |   3920: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f    't1_content'(do",
          "1478: |   3936: 63 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   cid INTEGER PRIM",
          "1479: |   3952: 41 52 59 20 4b 45 59 2c 20 27 63 30 61 27 2c 20   ARY KEY, 'c0a',",
          "1480: |   3968: 27 63 31 62 27 2c 20 27 63 32 63 27 29 38 02 06   'c1b', 'c2c')8..",
          "1481: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "1482: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "1483: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 33   LE t1 USING fts3",
          "1484: |   4032: 28 61 2c 62 2c 63 29 00 00 00 39 00 00 00 00 00   (a,b,c)...9.....",
          "1485: | page 3 offset 8192",
          "1486: |      0: 0d 00 00 00 25 0b 48 00 0f d8 0f af 0f 86 0f 74   ....%.H........t",
          "1487: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "1488: |     32: 0e 8d 0e 74 0e 5b 0e 40 0e 24 0e 08 0d ef 0d d5   ...t.[.@.$......",
          "1489: |     48: 0d bb 0d a0 0d 84 0d 68 0d 4f 0d 35 0d 1b 0c fb   .......h.O.5....",
          "1490: |     64: 0c da 0c b9 0c 99 0c 78 0c 57 0c 3e 0c 24 0c 0a   .......x.W.>.$..",
          "1491: |     80: 0b 48 00 00 00 00 00 00 00 00 00 00 00 00 00 00   .H..............",
          "1492: |   2880: 00 00 00 00 00 00 00 00 81 3f 25 06 00 82 7f 00   .........?%.....",
          "1493: |   2896: 00 43 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e   .COMPILER=gcc-5.",
          "1494: |   2912: 34 2e 30 20 32 30 31 36 30 36 30 39 20 44 45 42   4.0 20160609 DEB",
          "1495: |   2928: 55 47 20 45 4e 41 42 4c 45 20 44 42 53 54 41 54   UG ENABLE DBSTAT",
          "1496: |   2944: 20 56 54 41 42 20 45 4e 41 42 4c 45 20 46 54 53    VTAB ENABLE FTS",
          "1497: |   2960: 34 20 45 4e 41 42 4c 45 20 46 54 53 35 20 45 4e   4 ENABLE FTS5 EN",
          "1498: |   2976: 41 42 4c 45 20 47 45 4f 50 4f 4c 59 20 46 4e 41   ABLE GEOPOLY FNA",
          "1499: |   2992: 42 4c 45 20 4a 53 4f 4e 31 20 45 4e 41 42 4c 45   BLE JSON1 ENABLE",
          "1500: |   3008: 20 4d 45 4d 53 59 53 35 20 45 4e 41 42 4c 45 20    MEMSYS5 ENABLE",
          "1501: |   3024: 52 54 52 45 45 20 4d 41 58 20 4d 45 4d 4f 52 59   RTREE MAX MEMORY",
          "1502: |   3040: 3d 35 30 30 30 30 30 30 30 20 4f 4d 49 54 20 4c   =50000000 OMIT L",
          "1503: |   3056: 4f 41 44 20 45 58 54 45 4e 53 49 4f 4e 20 54 48   OAD EXTENSION TH",
          "1504: |   3072: 52 45 41 44 53 41 46 45 3d 30 18 24 05 00 0f 25   READSAFE=0.$...%",
          "1505: |   3088: 19 58 54 48 52 45 41 44 53 41 46 45 3d 30 42 49   .XTHREADSAFE=0BI",
          "1506: |   3104: 4e 41 52 59 18 23 05 00 0f 25 19 58 54 48 52 45   NARY.#...%.XTHRE",
          "1507: |   3120: 41 44 53 41 46 45 3d 30 4e 4f 43 41 53 45 17 22   ADSAFE=0NOCASE..",
          "1508: |   3136: 05 00 0f 25 17 58 54 48 52 45 41 44 53 41 46 45   ...%.XTHREADSAFE",
          "1509: |   3152: 3d 30 52 54 52 49 4d 1f 21 05 00 0f 33 19 58 4f   =0RTRIM.!...3.XO",
          "1510: |   3168: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "1511: |   3184: 4f 4e 42 49 4e 41 52 59 1f 20 05 00 0f 33 19 58   ONBINARY. ...3.X",
          "1512: |   3200: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "1513: |   3216: 49 4f 4e 4e 4f 43 41 53 45 1e 1f 05 00 0f 33 17   IONNOCASE.....3.",
          "1514: |   3232: 58 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e   XOMIT LOAD EXTEN",
          "1515: |   3248: 53 49 4f 4e 52 54 52 49 4d 1f 1e 05 00 0f 33 19   SIONRTRIM.....3.",
          "1516: |   3264: 58 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   XMAX MEMORY=5000",
          "1517: |   3280: 30 30 30 30 42 49 4e 41 52 59 1f 1d 05 00 0f 33   0000BINARY.....3",
          "1518: |   3296: 19 58 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   .XMAX MEMORY=500",
          "1519: |   3312: 30 30 30 30 30 4e 4f 43 41 53 45 1e 1c 05 00 0f   00000NOCASE.....",
          "1520: |   3328: 33 17 58 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30   3.XMAX MEMORY=50",
          "1521: |   3344: 30 30 30 30 30 30 52 54 52 49 4d 18 1b 05 00 0f   000000RTRIM.....",
          "1522: |   3360: 25 19 58 45 4e 41 42 4c 45 20 52 54 52 45 45 42   %.XENABLE RTREEB",
          "1523: |   3376: 49 4e 41 52 59 18 1a 05 00 0f 25 19 58 45 4e 41   INARY.....%.XENA",
          "1524: |   3392: 42 4c 45 20 52 54 52 45 45 4e 4f 43 41 53 45 17   BLE RTREENOCASE.",
          "1525: |   3408: 19 05 00 0f 25 17 58 45 4e 41 42 4c 45 20 52 54   ....%.XENABLE RT",
          "1526: |   3424: 52 45 45 52 54 52 49 4d 1a 18 05 00 0f 29 19 58   REERTRIM.....).X",
          "1527: |   3440: 45 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 42 49   ENABLE MEMSYS5BI",
          "1528: |   3456: 4e 41 52 59 1a 17 05 00 0f 29 19 58 45 4e 41 42   NARY.....).XENAB",
          "1529: |   3472: 4c 45 20 4d 45 4d 53 59 53 35 4e 4f 43 41 53 45   LE MEMSYS5NOCASE",
          "1530: |   3488: 19 16 05 00 0f 29 17 58 45 4e 41 42 4c 45 20 4d   .....).XENABLE M",
          "1531: |   3504: 45 4d 53 59 53 35 52 54 52 49 4d 18 15 05 00 0f   EMSYS5RTRIM.....",
          "1532: |   3520: 25 19 58 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 42   %.XENABLE JSON1B",
          "1533: |   3536: 49 4e 41 52 59 18 14 05 00 0f 25 19 58 45 4e 41   INARY.....%.XENA",
          "1534: |   3552: 42 4c 45 20 4a 53 4f 4e 31 4e 4f 43 41 53 45 17   BLE JSON1NOCASE.",
          "1535: |   3568: 13 05 00 0f 25 17 58 45 4e 41 42 4c 45 20 4a 53   ....%.XENABLE JS",
          "1536: |   3584: 4f 4e 31 52 54 52 49 4d 1a 12 05 00 0f 29 19 58   ON1RTRIM.....).X",
          "1537: |   3600: 45 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 42 49   ENABLE GEOPOLYBI",
          "1538: |   3616: 4e 41 52 59 1a 11 05 00 0f 29 19 58 45 4e 41 1e   NARY.....).XENA.",
          "1539: |   3632: 4c 45 20 47 45 4f 50 4f 4c 59 4e 4f 43 41 53 45   LE GEOPOLYNOCASE",
          "1540: |   3648: 19 10 05 00 0f 29 17 58 45 4e 41 42 4c 45 20 47   .....).XENABLE G",
          "1541: |   3664: 45 4f 50 4f 4c 59 52 54 52 49 4d 17 0f 05 00 0f   EOPOLYRTRIM.....",
          "1542: |   3680: 23 19 58 45 4e 41 42 4c 45 20 46 54 53 35 42 49   #.XENABLE FTS5BI",
          "1543: |   3696: 4e 41 52 59 17 0e 05 00 0f 23 19 58 55 4e 41 42   NARY.....#.XUNAB",
          "1544: |   3712: 4c 45 20 46 54 53 35 4e 4f 43 41 53 45 16 0d 05   LE FTS5NOCASE...",
          "1545: |   3728: 00 0f 23 17 58 45 4e 41 42 4c 45 20 46 54 53 35   ..#.XENABLE FTS5",
          "1546: |   3744: 52 54 52 49 4d 17 0c 05 00 0f 23 19 58 45 4e 41   RTRIM.....#.XENA",
          "1547: |   3760: 42 4c 45 20 46 54 53 34 42 49 4e 41 52 59 17 0b   BLE FTS4BINARY..",
          "1548: |   3776: 05 00 0f 23 19 58 45 4e 41 42 4c 45 20 46 54 53   ...#.XENABLE FTS",
          "1549: |   3792: 35 4e 4f 43 40 53 45 16 0a 05 00 0f 23 17 58 45   5NOC@SE.....#.XE",
          "1550: |   3808: 4e 41 42 4c 45 20 46 54 53 34 52 54 52 49 4d 1e   NABLE FTS4RTRIM.",
          "1551: |   3824: 09 05 00 0f 31 19 58 45 4e 41 42 4c 35 20 44 42   ....1.XENABL5 DB",
          "1552: |   3840: 53 54 41 54 20 56 54 41 42 42 49 4e 41 52 59 1e   STAT VTABBINARY.",
          "1553: |   3856: 08 05 00 0f 31 19 58 45 4e 41 42 4c 45 20 44 42   ....1.XENABLE DB",
          "1554: |   3872: 53 54 41 54 20 56 54 41 42 4e 4f 43 41 53 45 1d   STAT VTABNOCASE.",
          "1555: |   3888: 07 05 00 0f 31 17 58 45 4e 41 42 4c 45 20 44 42   ....1.XENABLE DB",
          "1556: |   3904: 53 54 41 54 20 56 54 41 42 52 54 52 49 4d 11 06   STAT VTABRTRIM..",
          "1557: |   3920: 05 00 0f 17 19 58 44 45 42 55 47 42 49 4e 41 52   .....XDEBUGBINAR",
          "1558: |   3936: 59 11 05 05 00 0f 17 19 58 44 45 42 55 47 4e 4f   Y.......XDEBUGNO",
          "1559: |   3952: 43 41 53 45 10 04 05 00 0f 17 17 58 44 45 42 55   CASE.......XDEBU",
          "1560: |   3968: 47 52 54 52 49 4d 27 03 05 00 0f 43 19 58 43 4f   GRTRIM'....C.XCO",
          "1561: |   3984: 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30   MPILER=gcc-5.4.0",
          "1562: |   4000: 20 32 30 31 36 30 36 30 39 42 49 4e 41 52 59 27    20160609BINARY'",
          "1563: |   4016: 02 05 00 0f 43 19 58 43 4f 4d 50 49 4c 45 52 3d   ....C.XCOMPILER=",
          "1564: |   4032: 67 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36   gcc-5.4.0 201606",
          "1565: |   4048: 30 39 4e 4f 43 41 53 45 26 01 05 00 0f 43 17 58   09NOCASE&....C.X",
          "1566: |   4064: 43 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34   COMPILER=gcc-5.4",
          "1567: |   4080: 2e 30 20 32 30 31 36 30 36 30 39 52 54 52 49 4d   .0 20160609RTRIM",
          "1568: | page 4 offset 12288",
          "1569: |      0: 0d 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00   ................",
          "1570: | page 5 offset 16384",
          "1571: |      0: 0d 00 00 00 03 07 bb 00 0c ad 0b a0 07 bb 00 00   ................",
          "1572: |   1968: 00 00 00 00 00 00 00 00 00 00 00 87 62 03 08 08   ............b...",
          "1573: |   1984: 01 08 08 17 8f 34 02 30 20 39 38 30 00 01 30 1e   .....4.0 980..0.",
          "1574: |   2000: 01 01 01 06 00 01 01 01 06 00 01 01 01 06 00 1f   ................",
          "1575: |   2016: 01 01 03 00 01 01 01 03 00 01 01 01 03 00 00 08   ................",
          "1576: |   2032: 32 30 31 36 30 36 30 39 0f 01 01 01 07 00 01 01   20160609........",
          "1577: |   2048: 01 07 00 01 01 01 07 00 00 01 34 0f 01 01 01 05   ..........4.....",
          "1578: |   2064: 00 01 01 01 05 00 01 01 01 05 00 00 01 35 0f 01   .............5..",
          "1579: |   2080: 01 01 04 00 01 01 01 04 00 01 01 01 04 00 01 07   ................",
          "1580: |   2096: 30 30 30 30 30 30 30 0f 1c 01 01 04 00 01 01 01   0000000.........",
          "1581: |   2112: 04 00 01 01 01 04 00 00 06 62 69 6e 61 72 79 3c   .........binary<",
          "1582: |   2128: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "1583: |   2144: 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01   ................",
          "1584: |   2160: 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02   ................",
          "1585: |   2176: 02 00 03 01 02 02 00 03 01 02 02 00 00 08 63 6f   ..............co",
          "1586: |   2192: 6d 70 69 6c 65 72 0f 01 01 01 02 00 01 01 01 02   mpiler..........",
          "1587: |   2208: 00 01 01 01 02 00 00 06 64 62 73 74 61 74 0f 07   ........dbstat..",
          "1588: |   2224: 01 01 03 00 01 01 01 03 00 01 01 01 03 00 01 04   ................",
          "1589: |   2240: 65 62 75 67 0f 04 01 01 02 00 01 01 01 02 00 01   ebug............",
          "1590: |   2256: 01 01 02 00 00 03 65 6e 61 05 11 01 01 02 00 03   ......ena.......",
          "1591: |   2272: 03 62 6c 35 05 09 01 01 02 00 05 01 65 5a 07 01   .bl5........eZ..",
          "1592: |   2288: 01 02 00 01 01 01 02 00 02 01 01 02 00 01 01 01   ................",
          "1593: |   2304: 02 00 01 01 01 02 00 01 01 01 02 00 02 01 01 02   ................",
          "1594: |   2320: 00 01 01 01 02 00 02 01 01 02 00 01 01 01 02 00   ................",
          "1595: |   2336: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "1596: |   2352: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "1597: |   2368: 01 02 00 01 01 01 02 00 01 08 78 74 65 6e 73 69   ..........xtensi",
          "1598: |   2384: 6f 6e 0f 1f 01 01 04 00 01 01 01 04 00 01 01 01   on..............",
          "1599: |   2400: 04 00 00 04 66 74 73 34 0a 0a 01 01 03 00 02 01   ....fts4........",
          "1600: |   2416: 01 03 00 03 01 35 14 0b 01 01 03 00 02 01 01 03   .....5..........",
          "1601: |   2432: 00 01 01 01 03 00 01 01 01 03 00 00 03 67 63 63   .............gcc",
          "1602: |   2448: 0f 01 01 01 03 00 01 01 01 03 00 01 01 01 03 00   ................",
          "1603: |   2464: 01 06 65 6f 70 6f 6c 79 0f 10 01 01 03 00 01 01   ..eopoly........",
          "1604: |   2480: 01 04 00 01 01 01 03 00 00 05 6a 73 6f 6e 31 0f   ..........json1.",
          "1605: |   2496: 13 01 01 03 00 01 01 01 03 00 01 01 01 03 00 00   ................",
          "1606: |   2512: 02 6c 65 05 11 01 01 03 00 01 03 6f 61 64 0f 1f   .le........oad..",
          "1607: |   2528: 01 01 03 00 01 01 01 03 00 01 01 01 03 00 00 03   ................",
          "1608: |   2544: 6d 61 78 0f 1c 01 01 02 00 01 01 01 02 00 01 01   max.............",
          "1609: |   2560: 01 02 00 01 05 65 6d 6f 72 79 0f 1c 01 01 03 00   .....emory......",
          "1610: |   2576: 01 01 01 03 00 01 01 01 03 00 03 04 73 79 73 35   ............sys5",
          "1611: |   2592: 0f 16 01 01 03 00 01 01 01 03 00 01 01 01 03 00   ................",
          "1612: |   2608: 00 03 6e 6f 63 05 0b 01 02 02 00 03 03 61 73 65   ..noc........ase",
          "1613: |   2624: 37 02 01 02 02 00 03 01 02 02 00 03 01 02 02 00   7...............",
          "1614: |   2640: 06 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "1615: |   2656: 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01   ................",
          "1616: |   2672: 02 02 00 03 01 02 02 00 00 04 6f 6d 69 74 0f 1f   ..........omit..",
          "1617: |   2688: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 00 05   ................",
          "1618: |   2704: 72 74 72 65 65 0f 19 01 01 03 00 01 01 01 03 00   rtree...........",
          "1619: |   2720: 01 01 01 03 00 03 02 69 6d 3c 01 01 02 02 00 03   .......im<......",
          "1620: |   2736: 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01   ................",
          "1621: |   2752: 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02   ................",
          "1622: |   2768: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "1623: |   2784: 00 03 01 02 02 00 00 02 73 65 05 0b 01 02 03 00   ........se......",
          "1624: |   2800: 00 0a 74 68 72 65 61 64 73 61 66 65 0f 22 01 01   ..threadsafe....",
          "1625: |   2816: 02 00 01 01 01 02 00 01 01 01 02 00 00 06 75 6e   ..............un",
          "1626: |   2832: 61 62 6c 65 05 0e 01 01 02 00 00 04 76 74 61 62   able........vtab",
          "1627: |   2848: 0f 07 01 01 04 00 01 01 01 04 00 01 01 01 04 00   ................",
          "1628: |   2864: 00 01 78 6c 01 02 00 01 02 00 01 02 00 01 02 00   ..xl............",
          "1629: |   2880: 01 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01   ................",
          "1630: |   2896: 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02   ................",
          "1631: |   2912: 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02 00   ................",
          "1632: |   2928: 01 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01   ................",
          "1633: |   2944: 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02   ................",
          "1634: |   2960: 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02 00   ................",
          "1635: |   2976: 82 0a 02 08 08 09 08 08 17 84 06 30 20 32 35 33   ...........0 253",
          "1636: |   2992: 00 01 30 04 25 06 1b 00 00 08 32 30 31 36 30 36   ..0.%.....201606",
          "1637: |   3008: 30 39 03 25 07 00 00 01 34 03 25 05 00 00 01 35   09.%....4.%....5",
          "1638: |   3024: 03 25 04 00 01 07 30 30 30 30 30 30 30 03 25 1a   .%....0000000.%.",
          "1639: |   3040: 00 00 08 63 6f 6d 70 69 6c 65 72 03 25 02 00 00   ...compiler.%...",
          "1640: |   3056: 06 64 62 73 74 61 74 03 25 0a 00 01 04 65 62 75   .dbstat.%....ebu",
          "1641: |   3072: 67 03 25 08 00 00 06 65 6e 61 62 6c 65 09 25 09   g.%....enable.%.",
          "1642: |   3088: 05 04 04 04 04 04 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "1643: |   3104: 6e 03 25 1d 00 00 04 66 74 73 34 03 25 0d 00 03   n.%....fts4.%...",
          "1644: |   3120: 11 35 03 25 0f 00 00 03 67 63 63 03 25 03 00 01   .5.%....gcc.%...",
          "1645: |   3136: 06 65 6f 70 6f 6c 79 03 25 11 00 00 05 6a 73 6f   .eopoly.%....jso",
          "1646: |   3152: 6e 31 03 25 13 00 00 04 6c 6f 61 64 03 25 1c 00   n1.%....load.%..",
          "1647: |   3168: 00 03 6d 61 78 03 25 18 00 01 05 65 6d 6f 72 79   ..max.%....emory",
          "1648: |   3184: 03 25 19 00 03 04 73 79 73 35 03 25 15 00 00 04   .%....sys5.%....",
          "1649: |   3200: 6f 6d 69 74 03 25 1b 00 00 05 72 74 72 65 65 03   omit.%....rtree.",
          "1650: |   3216: 25 17 00 00 0a 74 68 72 65 61 64 73 61 66 65 03   %....threadsafe.",
          "1651: |   3232: 25 1e 00 00 04 76 74 61 62 03 25 0b 00 86 50 01   %....vtab.%...P.",
          "1652: |   3248: 08 08 08 08 08 17 8d 12 30 20 38 33 35 00 01 30   ........0 835..0",
          "1653: |   3264: 12 00 f6 00 01 06 00 01 06 00 1f 03 00 01 03 00   ................",
          "1654: |   3280: 01 03 00 00 08 32 30 31 36 30 36 30 39 09 01 07   .....20160609...",
          "1655: |   3296: 00 01 07 00 01 07 00 00 01 34 09 01 05 00 01 05   .........4......",
          "1656: |   3312: 00 01 05 00 00 01 35 09 01 04 00 01 04 00 01 04   ......5.........",
          "1657: |   3328: 00 01 07 30 30 30 30 30 30 30 09 1c 04 00 01 04   ...0000000......",
          "1658: |   3344: 00 01 04 00 00 06 62 69 6e 61 72 79 3c 03 01 02   ......binary<...",
          "1659: |   3360: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "1660: |   3376: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "1661: |   3392: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "1662: |   3408: 01 02 02 00 03 01 02 02 00 00 08 63 6f 6d 70 69   ...........compi",
          "1663: |   3424: 6c 65 72 09 01 02 00 01 02 00 01 02 00 00 06 64   ler............d",
          "1664: |   3440: 62 73 74 61 74 09 07 03 00 01 03 00 01 03 00 01   bstat...........",
          "1665: |   3456: 04 65 62 75 67 09 04 02 00 01 02 00 01 02 00 00   .ebug...........",
          "1666: |   3472: 06 65 6e 61 62 6c 65 3f 07 02 00 01 02 00 01 01   .enable?........",
          "1667: |   3488: 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02 00   ................",
          "1668: |   3504: 01 02 00 01 02 00 01 02 00 01 02 00 01 02 10 01   ................",
          "1669: |   3520: 02 00 01 02 00 01 02 00 01 02 00 01 02 00 01 02   ................",
          "1670: |   3536: 00 01 02 00 01 02 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "1671: |   3552: 6e 09 1f 04 00 01 04 00 01 04 00 00 04 66 74 73   n............fts",
          "1672: |   3568: 34 09 0a 03 00 01 03 00 01 03 00 03 01 35 09 0d   4............5..",
          "1673: |   3584: 03 00 01 03 00 01 03 00 00 03 67 63 63 09 01 03   ..........gcc...",
          "1674: |   3600: 00 01 03 00 01 03 00 01 06 65 6f 70 6f 6c 79 09   .........eopoly.",
          "1675: |   3616: 10 03 00 01 03 00 01 03 00 00 05 6a 73 6f 6e 31   ...........json1",
          "1676: |   3632: 09 13 03 00 01 03 00 01 03 00 00 04 6c 6f 61 64   ............load",
          "1677: |   3648: 09 1f 03 00 01 03 00 01 03 00 00 03 6d 61 78 09   ............max.",
          "1678: |   3664: 1c 02 00 01 02 00 01 02 00 01 05 65 6d 6f 72 79   ...........emory",
          "1679: |   3680: 09 1c 03 00 01 03 00 01 03 00 03 04 73 79 73 35   ............sys5",
          "1680: |   3696: 09 16 03 00 01 03 00 01 03 00 00 06 6e 6f 63 61   ............noca",
          "1681: |   3712: 73 65 3c 02 01 02 02 00 03 01 02 02 00 03 01 02   se<.............",
          "1682: |   3728: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "1683: |   3744: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "1684: |   3760: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 00   ................",
          "1685: |   3776: 04 6f 6d 69 74 09 1f 02 00 01 02 00 01 02 00 00   .omit...........",
          "1686: |   3792: 05 72 74 72 65 65 09 19 03 00 01 03 00 01 03 00   .rtree..........",
          "1687: |   3808: 03 02 69 6d 3c 01 01 02 02 00 03 01 02 02 00 03   ..im<...........",
          "1688: |   3824: 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01   ................",
          "1689: |   3840: 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02   ................",
          "1690: |   3856: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "1691: |   3872: 00 00 0a 74 68 72 65 61 64 73 61 66 65 09 22 02   ...threadsafe...",
          "1692: |   3888: 00 01 02 00 02 02 00 00 04 76 74 61 62 09 07 04   .........vtab...",
          "1693: |   3904: 00 01 04 00 01 04 00 00 01 78 b4 01 01 01 01 02   .........x......",
          "1694: |   3920: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "1695: |   3936: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "1696: |   3952: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "1697: |   3968: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "1698: |   3984: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "1699: |   4000: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "1700: |   4016: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "1701: |   4032: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "1702: |   4048: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "1703: |   4064: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "1704: |   4080: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "1705: | page 6 offset 20480",
          "1706: |      0: 0a 00 00 00 03 0f ee 00 0f fb 0f f5 0f ee 00 00   ................",
          "1707: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 04   ................",
          "1708: |   4080: 08 01 01 02 03 05 04 08 09 01 02 04 04 08 08 09   ................",
          "1709: | page 7 offset 24576",
          "1710: |      0: 0d 00 00 00 05 0f b8 00 0f f4 0f e9 0f d6 0f c7   ................",
          "1711: |     16: 0f b8 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "1712: |   4016: 00 00 00 00 00 00 00 00 0d 05 02 23 61 75 74 6f   ...........#auto",
          "1713: |   4032: 6d 65 72 67 65 3d 35 0c f4 02 23 6d 65 72 67 65   merge=5...#merge",
          "1714: |   4048: 3d 31 30 30 2c 38 11 03 02 2b 69 6e 74 65 67 72   =100,8...+integr",
          "1715: |   4064: 69 74 79 2d 63 68 65 63 6b 09 02 02 1b 72 65 62   ity-check....reb",
          "1716: |   4080: 75 69 6c 64 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   uild....optimize",
          "1717: | end c81b.db",
          "1718: }]} {}",
          "1720: do_catchsql_test 12.1 {",
          "1721:   SELECT rowid, quote(matchinfo(t1,'pcxybspcxybs'))",
          "1722:   FROM t1 WHERE t1 MATCH 'e*e*'",
          "1723: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d94d9e22895ba9226d26530ba492430de6b335c4",
      "candidate_info": {
        "commit_hash": "d94d9e22895ba9226d26530ba492430de6b335c4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d94d9e22895ba9226d26530ba492430de6b335c4",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases in fuzzdata8.db.\n\nFossilOrigin-Name: 0fe3c3fd30294d15cdfe29e9c49f3c8968e864ec8a114282561642f75586ab09",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8d478cfb92fdeb87591403fe1713b290fee309a38b71abee0002012935d1db98",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8eff0cc3261fdbbb539857795b6516a0f1ba7c48",
      "candidate_info": {
        "commit_hash": "8eff0cc3261fdbbb539857795b6516a0f1ba7c48",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8eff0cc3261fdbbb539857795b6516a0f1ba7c48",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/window1.test",
          "test/window8.tcl",
          "test/window8.test"
        ],
        "message": "Add tests to ensure that the window functions implementation is not generating code for unnecessary sorts.\n\nFossilOrigin-Name: e195948a6876efe01b5cf2ed67bc9015a781fda39dca668099cb7edc1d331818",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/window1.test||test/window1.test",
          "test/window8.tcl||test/window8.tcl",
          "test/window8.test||test/window8.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "test/window1.test||test/window1.test"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "test/window1.test||test/window1.test"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4f9b93e6cfa0b3b6ab8a126299c2b2a242f840453dc450e84d3df87576cf6cf8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "970:   \" $res",
          "971: }",
          "973: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "973: #-------------------------------------------------------------------------",
          "974: reset_db",
          "975: do_execsql_test 23.0 {",
          "976:   CREATE TABLE t5(a, b, c);",
          "977:   CREATE INDEX t5ab ON t5(a, b);",
          "978: }",
          "980: proc do_ordercount_test {tn sql nOrderBy} {",
          "981:   set plan [execsql \"EXPLAIN QUERY PLAN $sql\"]",
          "982:   uplevel [list do_test $tn [list regexp -all ORDER $plan] $nOrderBy]",
          "983: }",
          "985: do_ordercount_test 23.1 {",
          "986:   SELECT",
          "987:     sum(c) OVER (ORDER BY a, b),",
          "988:     sum(c) OVER (PARTITION BY a ORDER BY b)",
          "989:   FROM t5",
          "990: } 0",
          "992: do_ordercount_test 23.2 {",
          "993:   SELECT",
          "994:     sum(c) OVER (ORDER BY b, a),",
          "995:     sum(c) OVER (PARTITION BY b ORDER BY a)",
          "996:   FROM t5",
          "997: } 1",
          "999: do_ordercount_test 23.3 {",
          "1000:   SELECT",
          "1001:     sum(c) OVER (ORDER BY b, a),",
          "1002:     sum(c) OVER (ORDER BY c, b)",
          "1003:   FROM t5",
          "1004: } 2",
          "1006: do_ordercount_test 23.4 {",
          "1007:   SELECT",
          "1008:     sum(c) OVER (ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),",
          "1009:     sum(c) OVER (ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),",
          "1010:     sum(c) OVER (ORDER BY b GROUPS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)",
          "1011:   FROM t5",
          "1012: } 1",
          "1014: do_ordercount_test 23.5 {",
          "1015:   SELECT",
          "1016:     sum(c) OVER (ORDER BY b+1 ROWS UNBOUNDED PRECEDING),",
          "1017:     sum(c) OVER (ORDER BY b+1 RANGE UNBOUNDED PRECEDING),",
          "1018:     sum(c) OVER (ORDER BY b+1 GROUPS UNBOUNDED PRECEDING)",
          "1019:   FROM t5",
          "1020: } 1",
          "1022: do_ordercount_test 23.6 {",
          "1023:   SELECT",
          "1024:     sum(c) OVER (ORDER BY b+1 ROWS UNBOUNDED PRECEDING),",
          "1025:     sum(c) OVER (ORDER BY b+2 RANGE UNBOUNDED PRECEDING),",
          "1026:     sum(c) OVER (ORDER BY b+3 GROUPS UNBOUNDED PRECEDING)",
          "1027:   FROM t5",
          "1028: } 3",
          "",
          "---------------"
        ],
        "test/window8.tcl||test/window8.tcl": [
          "File: test/window8.tcl -> test/window8.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:   10 { ORDER BY a DESC RANGE BETWEEN 5.7 PRECEDING AND 5.8 FOLLOWING }",
          "166:   11 { ORDER BY a DESC RANGE BETWEEN UNBOUNDED PRECEDING AND 5.9 PRECEDING }",
          "167:   12 { ORDER BY a DESC RANGE BETWEEN 2.1 FOLLOWING AND UNBOUNDED FOLLOWING }",
          "168: } {",
          "169:   execsql_test 3.$tn \"",
          "170:     SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ($frame)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:   13  { ORDER BY a RANGE 5.1 PRECEDING }",
          "",
          "---------------"
        ],
        "test/window8.test||test/window8.test": [
          "File: test/window8.test -> test/window8.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "3494:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 2.1 FOLLOWING AND UNBOUNDED FOLLOWING )",
          "3495: } {30 232   22 112   20 112   15 30   13 30   13 30   10 10   5 {}}",
          "3497: #==========================================================================",
          "3499: do_execsql_test 4.0 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3497: do_execsql_test 3.13 {",
          "3498:   SELECT CAST(a AS INTEGER), sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE 5.1 PRECEDING )",
          "3499: } {5 10   10 30   13 72   13 72   15 102   20 70   22 120   30 90}",
          "",
          "---------------"
        ]
      }
    }
  ]
}