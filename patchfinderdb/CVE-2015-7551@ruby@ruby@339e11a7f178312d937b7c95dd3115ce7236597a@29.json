{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e86d271d9605bda1b19d534e108054e2902613da",
      "candidate_info": {
        "commit_hash": "e86d271d9605bda1b19d534e108054e2902613da",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/e86d271d9605bda1b19d534e108054e2902613da",
        "files": [
          "ChangeLog",
          "ext/socket/option.c",
          "test/socket/test_sockopt.rb",
          "version.h"
        ],
        "message": "merge revision(s) 53561: [Backport #11958]\n\n\t* ext/socket/option.c (sockopt_bool): relax boolean size to be one\n\t  too not only sizeof(int).  Winsock getsockopt() returns a single\n\t  byte as a boolean socket option.  [ruby-core:72730] [Bug #11958]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53931 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/socket/option.c||ext/socket/option.c",
          "test/socket/test_sockopt.rb||test/socket/test_sockopt.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/socket/option.c||ext/socket/option.c": [
          "File: ext/socket/option.c -> ext/socket/option.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "268: sockopt_bool(VALUE self)",
          "269: {",
          "270:     int i;",
          "271:     VALUE data = sockopt_data(self);",
          "272:     StringValue(data);",
          "274:         rb_raise(rb_eTypeError, \"size differ.  expected as sizeof(int)=%d but %ld\",",
          "276:     memcpy((char*)&i, RSTRING_PTR(data), sizeof(int));",
          "277:     return i == 0 ? Qfalse : Qtrue;",
          "278: }",
          "",
          "[Removed Lines]",
          "273:     if (RSTRING_LEN(data) != sizeof(int))",
          "275:                  (int)sizeof(int), (long)RSTRING_LEN(data));",
          "",
          "[Added Lines]",
          "271:     long len;",
          "274:     len = RSTRING_LEN(data);",
          "275:     if (len == 1) {",
          "276:  return *RSTRING_PTR(data) == 0 ? Qfalse : Qtrue;",
          "277:     }",
          "278:     if (len != sizeof(int))",
          "280:                  (int)sizeof(int), (long)len);",
          "",
          "---------------"
        ],
        "test/socket/test_sockopt.rb||test/socket/test_sockopt.rb": [
          "File: test/socket/test_sockopt.rb -> test/socket/test_sockopt.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     assert_equal(true, opt.bool)",
          "24:     opt = Socket::Option.int(:INET, :SOCKET, :KEEPALIVE, 2)",
          "25:     assert_equal(true, opt.bool)",
          "26:   end",
          "28:   def test_ipv4_multicast_loop",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:     Socket.open(:INET, :STREAM) {|s|",
          "27:       s.setsockopt(Socket::Option.bool(:INET, :SOCKET, :KEEPALIVE, true))",
          "28:       assert_equal(true, s.getsockopt(Socket::SOL_SOCKET, Socket::SO_KEEPALIVE).bool)",
          "29:       s.setsockopt(Socket::Option.bool(:INET, :SOCKET, :KEEPALIVE, false))",
          "30:       assert_equal(false, s.getsockopt(Socket::SOL_SOCKET, Socket::SO_KEEPALIVE).bool)",
          "31:     }",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-02-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 450",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 451",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf524be10c1fbc28e59d11d17fc7147f53129cb5",
      "candidate_info": {
        "commit_hash": "bf524be10c1fbc28e59d11d17fc7147f53129cb5",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/bf524be10c1fbc28e59d11d17fc7147f53129cb5",
        "files": [
          "ChangeLog",
          "re.c",
          "test/ruby/test_regexp.rb",
          "version.h"
        ],
        "message": "merge revision(s) 53167: [Backport #11825]\n\n\t* re.c (reg_names_iter): should consider encoding of regexp.\n\t  [ruby-core:72185] [Bug #11825]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53920 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "re.c||re.c",
          "test/ruby/test_regexp.rb||test/ruby/test_regexp.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "re.c||re.c": [
          "File: re.c -> re.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "759:           int back_num, int *back_refs, OnigRegex regex, void *arg)",
          "760: {",
          "761:     VALUE ary = (VALUE)arg;",
          "763:     return 0;",
          "764: }",
          "",
          "[Removed Lines]",
          "762:     rb_ary_push(ary, rb_str_new((const char *)name, name_end-name));",
          "",
          "[Added Lines]",
          "762:     rb_ary_push(ary, rb_enc_str_new((const char *)name, name_end-name, regex->enc));",
          "",
          "---------------"
        ],
        "test/ruby/test_regexp.rb||test/ruby/test_regexp.rb": [
          "File: test/ruby/test_regexp.rb -> test/ruby/test_regexp.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:     assert_equal(nil, Regexp.last_match(1))",
          "120:     assert_equal(nil, Regexp.last_match(:foo))",
          "122:     assert_equal([\"foo\", \"bar\"], /(?<foo>.)(?<bar>.)/.names)",
          "123:     assert_equal([\"foo\"], /(?<foo>.)(?<foo>.)/.names)",
          "124:     assert_equal([], /(.)(.)/.names)",
          "126:     assert_equal([\"foo\", \"bar\"], /(?<foo>.)(?<bar>.)/.match(\"ab\").names)",
          "127:     assert_equal([\"foo\"], /(?<foo>.)(?<foo>.)/.match(\"ab\").names)",
          "128:     assert_equal([], /(.)(.)/.match(\"ab\").names)",
          "130:     assert_equal({\"foo\"=>[1], \"bar\"=>[2]},",
          "131:                  /(?<foo>.)(?<bar>.)/.named_captures)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122:     bug11825_name = \"\\u{5b9d 77f3}\"",
          "123:     bug11825_str = \"\\u{30eb 30d3 30fc}\"",
          "124:     bug11825_re = /(?<#{bug11825_name}>)#{bug11825_str}/",
          "129:     assert_equal([bug11825_name], bug11825_re.names)",
          "134:     assert_equal([bug11825_name], bug11825_re.match(bug11825_str).names)",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-12-23\"",
          "3: #define RUBY_PATCHLEVEL 441",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 12",
          "7: #define RUBY_RELEASE_DAY 23",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2016-02-25\"",
          "3: #define RUBY_PATCHLEVEL 442",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 2",
          "7: #define RUBY_RELEASE_DAY 25",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b2bb02940199c3a540e903e9bb5b31abbf26f4aa",
      "candidate_info": {
        "commit_hash": "b2bb02940199c3a540e903e9bb5b31abbf26f4aa",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/b2bb02940199c3a540e903e9bb5b31abbf26f4aa",
        "files": [
          "ChangeLog",
          "array.c",
          "test/ruby/test_array.rb",
          "version.h"
        ],
        "message": "merge revision(s) 50827,50921: [Backport #11235]\n\n\t* array.c (ary_ensure_room_for_push): check if array size will\n\t  exceed maxmum size to get rid of buffer overflow.\n\t  [ruby-dev:49043] [Bug #11235]\n\n\t* array.c (ary_ensure_room_for_unshift, rb_ary_splice): ditto.\n\t  exceed maximum size to get rid of buffer overflow.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51597 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "array.c||array.c",
          "test/ruby/test_array.rb||test/ruby/test_array.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "array.c||array.c": [
          "File: array.c -> array.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "354: static void",
          "355: ary_ensure_room_for_push(VALUE ary, long add_len)",
          "356: {",
          "358:     long capa;",
          "360:     if (ARY_SHARED_P(ary)) {",
          "361:  if (new_len > RARRAY_EMBED_LEN_MAX) {",
          "362:      VALUE shared = ARY_SHARED(ary);",
          "",
          "[Removed Lines]",
          "357:     long new_len = RARRAY_LEN(ary) + add_len;",
          "",
          "[Added Lines]",
          "357:     long old_len = RARRAY_LEN(ary);",
          "358:     long new_len = old_len + add_len;",
          "361:     if (old_len > ARY_MAX_SIZE - add_len) {",
          "362:  rb_raise(rb_eIndexError, \"index %ld too big\", new_len);",
          "363:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1078:     long capa;",
          "1079:     const VALUE *head, *sharedp;",
          "1081:     if (ARY_SHARED_P(ary)) {",
          "1082:  VALUE shared = ARY_SHARED(ary);",
          "1083:  capa = RARRAY_LEN(shared);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1085:     if (len > ARY_MAX_SIZE - argc) {",
          "1086:  rb_raise(rb_eIndexError, \"index %ld too big\", new_len);",
          "1087:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1569:     else {",
          "1570:  long alen;",
          "1572:  rb_ary_modify(ary);",
          "1573:  alen = olen + rlen - len;",
          "1574:  if (alen >= ARY_CAPA(ary)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1580:  if (olen - len > ARY_MAX_SIZE - rlen) {",
          "1581:      rb_raise(rb_eIndexError, \"index %ld too big\", olen + rlen - len);",
          "1582:  }",
          "",
          "---------------"
        ],
        "test/ruby/test_array.rb||test/ruby/test_array.rb": [
          "File: test/ruby/test_array.rb -> test/ruby/test_array.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "2477:       skip e.message",
          "2478:     end",
          "2479:   end",
          "2480: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2481:   sizeof_long = [0].pack(\"l!\").size",
          "2482:   sizeof_voidp = [\"\"].pack(\"p\").size",
          "2483:   if sizeof_long < sizeof_voidp",
          "2484:     ARY_MAX = (1<<(8*sizeof_long-1)) / sizeof_voidp - 1",
          "2485:     Bug11235 = '[ruby-dev:49043] [Bug #11235]'",
          "2487:     def test_push_over_ary_max",
          "2488:       assert_separately(['-', ARY_MAX.to_s, Bug11235], <<-\"end;\")",
          "2489:         a = Array.new(ARGV[0].to_i)",
          "2490:         assert_raise(IndexError, ARGV[1]) {0x1000.times {a.push(1)}}",
          "2491:       end;",
          "2492:     end",
          "2494:     def test_unshift_over_ary_max",
          "2495:       assert_separately(['-', ARY_MAX.to_s, Bug11235], <<-\"end;\")",
          "2496:         a = Array.new(ARGV[0].to_i)",
          "2497:         assert_raise(IndexError, ARGV[1]) {0x1000.times {a.unshift(1)}}",
          "2498:       end;",
          "2499:     end",
          "2501:     def test_splice_over_ary_max",
          "2502:       assert_separately(['-', ARY_MAX.to_s, Bug11235], <<-\"end;\")",
          "2503:         a = Array.new(ARGV[0].to_i)",
          "2504:         assert_raise(IndexError, ARGV[1]) {a[0, 0] = Array.new(0x1000)}",
          "2505:       end;",
          "2506:     end",
          "2507:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-08-17\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 8",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 380",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 381",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7abafeb92d9ec90f152be98e2cc89981c337d4da",
      "candidate_info": {
        "commit_hash": "7abafeb92d9ec90f152be98e2cc89981c337d4da",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/7abafeb92d9ec90f152be98e2cc89981c337d4da",
        "files": [
          "ChangeLog",
          "io.c",
          "test/ruby/test_io_m17n.rb",
          "version.h"
        ],
        "message": "merge revision(s) 53083: [Backport #11823]\n\n\t* io.c (parse_mode_enc): fix buffer overflow.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53148 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "io.c||io.c",
          "test/ruby/test_io_m17n.rb||test/ruby/test_io_m17n.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "io.c||io.c": [
          "File: io.c -> io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5059:      fmode |= FMODE_SETENC_BY_BOM;",
          "5060:      estr += 4;",
          "5061:             len -= 4;",
          "5065:  }",
          "5066:  idx = rb_enc_find_index(estr);",
          "5067:     }",
          "",
          "[Removed Lines]",
          "5062:      memcpy(encname, estr, len);",
          "5063:      encname[len] = '\\0';",
          "5064:      estr = encname;",
          "",
          "[Added Lines]",
          "5062:      if (len > 0 && len <= ENCODING_MAXNAMELEN) {",
          "5063:   memcpy(encname, estr, len);",
          "5064:   encname[len] = '\\0';",
          "5065:   estr = encname;",
          "5066:      }",
          "",
          "---------------"
        ],
        "test/ruby/test_io_m17n.rb||test/ruby/test_io_m17n.rb": [
          "File: test/ruby/test_io_m17n.rb -> test/ruby/test_io_m17n.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "2073:     }",
          "2074:   end",
          "2076:   def test_cbuf",
          "2077:     with_tmpdir {",
          "2078:       fn = \"tst\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2076:   def test_bom_too_long_utfname",
          "2077:     assert_separately([], <<-'end;') # do",
          "2078:       assert_warn(/Unsupported encoding/) {",
          "2079:         open(IO::NULL, \"r:bom|utf-\" + \"x\" * 10000) {}",
          "2080:       }",
          "2081:     end;",
          "2082:     assert_separately([], <<-'end;') # do",
          "2083:       assert_warn(/Unsupported encoding/) {",
          "2084:         open(IO::NULL, encoding: \"bom|utf-\" + \"x\" * 10000) {}",
          "2085:       }",
          "2086:     end;",
          "2087:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 12",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 437",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 438",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7766666aed80c7e06dfd8288302a663638b66fe5",
      "candidate_info": {
        "commit_hash": "7766666aed80c7e06dfd8288302a663638b66fe5",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/7766666aed80c7e06dfd8288302a663638b66fe5",
        "files": [
          "ChangeLog",
          "test/ruby/test_transcode.rb",
          "transcode.c",
          "version.h"
        ],
        "message": "merge revision(s) 51037: [Backport #11277]\n\n\t* transcode.c (load_transcoder_entry): fix transcoder loading race\n\t  condition, by waiting in require.  [ruby-dev:49106] [Bug #11277]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51598 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_transcode.rb||test/ruby/test_transcode.rb",
          "transcode.c||transcode.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_transcode.rb||test/ruby/test_transcode.rb": [
          "File: test/ruby/test_transcode.rb -> test/ruby/test_transcode.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "2091:     assert_equal(\"\\x00\\x00\\xFE\\xFF\\x00\\x00\\x00t\\x00\\x00\\x00e\\x00\\x00\\x00s\\x00\\x00\\x00t\", result.b, bug)",
          "2092:     end;",
          "2093:   end",
          "2094: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2095:   def test_loading_race",
          "2096:     assert_separately([], <<-'end;') #do",
          "2097:       bug11277 = '[ruby-dev:49106] [Bug #11277]'",
          "2098:       num = 2",
          "2099:       th = (0...num).map do |i|",
          "2100:         Thread.new {\"\\u3042\".encode(\"EUC-JP\")}",
          "2101:       end",
          "2102:       result = nil",
          "2103:       assert_warning(\"\", bug11277) do",
          "2104:         assert_nothing_raised(Encoding::ConverterNotFoundError, bug11277) do",
          "2105:           result = th.map(&:value)",
          "2106:         end",
          "2107:       end",
          "2108:       expected = \"\\xa4\\xa2\".force_encoding(Encoding::EUC_JP)",
          "2109:       assert_equal([expected]*num, result, bug11277)",
          "2110:     end;",
          "2111:   end",
          "",
          "---------------"
        ],
        "transcode.c||transcode.c": [
          "File: transcode.c -> transcode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "372:         char *const path = RSTRING_PTR(fn);",
          "373:  const int safe = rb_safe_level();",
          "377:         memcpy(path, transcoder_lib_prefix, sizeof(transcoder_lib_prefix) - 1);",
          "378:         memcpy(path + sizeof(transcoder_lib_prefix) - 1, lib, len);",
          "379:         rb_str_set_len(fn, total_len);",
          "380:         FL_UNSET(fn, FL_TAINT);",
          "381:         OBJ_FREEZE(fn);",
          "384:     }",
          "386:     if (entry->transcoder)",
          "",
          "[Removed Lines]",
          "375:         entry->lib = NULL;",
          "382:         if (!rb_require_safe(fn, safe > 3 ? 3 : safe))",
          "383:             return NULL;",
          "",
          "[Added Lines]",
          "380:         rb_require_safe(fn, safe > 3 ? 3 : safe);",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-08-17\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 8",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 381",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 382",
          "",
          "---------------"
        ]
      }
    }
  ]
}