{
  "cve_id": "CVE-2018-16640",
  "cve_desc": "ImageMagick 7.0.8-5 has a memory leak vulnerability in the function ReadOneJNGImage in coders/png.c.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "76efa969342568841ecf320b5a041685a6d24e0b",
  "patch_info": {
    "commit_hash": "76efa969342568841ecf320b5a041685a6d24e0b",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/76efa969342568841ecf320b5a041685a6d24e0b",
    "files": [
      "coders/png.c",
      "configure"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/issues/1201",
    "before_after_code_files": [
      "coders/png.c||coders/png.c"
    ]
  },
  "patch_diff": {
    "coders/png.c||coders/png.c": [
      "File: coders/png.c -> coders/png.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4560:       }",
      "4562:     p=NULL;",
      "4565:     if (length != 0)",
      "4566:       {",
      "",
      "[Removed Lines]",
      "4563:     chunk=(unsigned char *) NULL;",
      "",
      "[Added Lines]",
      "4563:     chunk=(unsigned char *) NULL;",
      "4565:     if (length != 0)",
      "4566:       {",
      "4567:         chunk=(unsigned char *) AcquireQuantumMemory(length,sizeof(*chunk));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4597:             {",
      "4598:               DestroyJNG(chunk,&color_image,&color_image_info,",
      "4599:                 &alpha_image,&alpha_image_info);",
      "",
      "[Removed Lines]",
      "4590:     if (memcmp(type,mng_JHDR,4) == 0)",
      "4591:       {",
      "4592:         if (length == 16)",
      "4593:           {",
      "4594:             jng_width=(png_uint_32)mng_get_long(p);",
      "4595:             jng_height=(png_uint_32)mng_get_long(&p[4]);",
      "4596:             if ((jng_width == 0) || (jng_height == 0))",
      "",
      "[Added Lines]",
      "4594:     if (memcmp(type,mng_JHDR,4) == 0)",
      "4595:       {",
      "4596:         if (length == 16)",
      "4597:           {",
      "4598:             jng_width=(png_uint_32)mng_get_long(p);",
      "4599:             jng_height=(png_uint_32)mng_get_long(&p[4]);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d57d230f8a9a69ccde5a850646e807f12a47dacb",
      "candidate_info": {
        "commit_hash": "d57d230f8a9a69ccde5a850646e807f12a47dacb",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/d57d230f8a9a69ccde5a850646e807f12a47dacb",
        "files": [
          "coders/png.c"
        ],
        "message": "...",
        "before_after_code_files": [
          "coders/png.c||coders/png.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/png.c||coders/png.c"
          ],
          "candidate": [
            "coders/png.c||coders/png.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/png.c||coders/png.c": [
          "File: coders/png.c -> coders/png.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "728:     global_chrm;",
          "730:   RenderingIntent",
          "733:   unsigned int",
          "734:     delay,",
          "",
          "[Removed Lines]",
          "731:     global_srgb_intent;",
          "",
          "[Added Lines]",
          "731:     global_srgb_intent;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "768:     write_png32,",
          "769:     write_png48,",
          "770:     write_png64;",
          "772: #ifdef MNG_BASI_SUPPORTED",
          "773:   size_t",
          "774:     basi_width,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1584: static MngBox mng_read_box(MngBox previous_box,char delta_type,",
          "1585:   unsigned char *p)",
          "1591:     Read clipping boundaries from DEFI, CLIP, FRAM, or PAST chunk.",
          "",
          "[Removed Lines]",
          "1586: {",
          "1587:    MngBox",
          "1588:       box;",
          "",
          "[Added Lines]",
          "1586: {",
          "1587:    MngBox",
          "1588:       box;",
          "1591:     Read clipping boundaries from DEFI, CLIP, FRAM, or PAST chunk.",
          "1593:   box.left=(long) (((png_uint_32) p[0] << 24) | ((png_uint_32) p[1] << 16) |",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1603:     }",
          "1605:   return(box);",
          "1606: }",
          "1608: static MngPair mng_read_pair(MngPair previous_pair,int delta_type,",
          "1612:     pair;",
          "1614:     Read two ssize_ts from CLON, MOVE or PAST chunk",
          "",
          "[Removed Lines]",
          "1609:   unsigned char *p)",
          "1610: {",
          "1611:   MngPair",
          "",
          "[Added Lines]",
          "1612: static MngPair mng_read_pair(MngPair previous_pair,int delta_type,",
          "1614: {",
          "1615:   MngPair",
          "1616:     pair;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1620:     {",
          "1621:       pair.a+=previous_pair.a;",
          "1622:       pair.b+=previous_pair.b;",
          "1625:   return(pair);",
          "1626: }",
          "",
          "[Removed Lines]",
          "1623:     }",
          "",
          "[Added Lines]",
          "1629:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1928:       if (chunk->size != 9)",
          "1934:       image=(Image *) png_get_user_chunk_ptr(ping);",
          "1936:       image->page.width=(size_t) ((chunk->data[0] << 24) |",
          "",
          "[Removed Lines]",
          "1931:       if (chunk->data[8] != 0)",
          "",
          "[Added Lines]",
          "1938:       if (chunk->data[8] != 0)",
          "1941:       image=(Image *) png_get_user_chunk_ptr(ping);",
          "1943:       image->page.width=(size_t) (((png_uint_32) chunk->data[0] << 24) |",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1948:       chunk->name[2] ==  78 &&",
          "1949:       chunk->name[3] == 118)",
          "1950:     {",
          "1962:          (chunk->data[5] << 16) | (chunk->data[6] << 8) | chunk->data[7]);",
          "1964:       image->page.x=(size_t) ((chunk->data[8] << 24) |",
          "",
          "[Removed Lines]",
          "1953:       if (chunk->size != 16)",
          "1956:       image=(Image *) png_get_user_chunk_ptr(ping);",
          "1958:       image->page.width=(size_t) ((chunk->data[0] << 24) |",
          "1959:          (chunk->data[1] << 16) | (chunk->data[2] << 8) | chunk->data[3]);",
          "1961:       image->page.height=(size_t) ((chunk->data[4] << 24) |",
          "",
          "[Added Lines]",
          "1963:       if (chunk->size != 16)",
          "1966:       image=(Image *) png_get_user_chunk_ptr(ping);",
          "1968:       image->page.width=(size_t) (((png_uint_32) chunk->data[0] << 24) |",
          "1969:         ((png_uint_32) chunk->data[1] << 16) |",
          "1970:         ((png_uint_32) chunk->data[2] << 8) | (png_uint_32) chunk->data[3]);",
          "1971:       image->page.height=(size_t) (((png_uint_32) chunk->data[4] << 24) |",
          "1972:         ((png_uint_32) chunk->data[5] << 16) |",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2963:   if (png_get_valid(ping,ping_info,PNG_INFO_tRNS))",
          "2964:     {",
          "2966:         Image has a tRNS chunk.",
          "2968:       int",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3490:           case 16:",
          "3491:           {",
          "3493:             {",
          "3494: #if (MAGICKCORE_QUANTUM_DEPTH >= 16)",
          "3495:               unsigned short",
          "",
          "[Removed Lines]",
          "3492:             for (x=(ssize_t) image->columns-1; x >= 0; x--)",
          "",
          "[Added Lines]",
          "3503:             for (x=(ssize_t) image->columns-1; x >= 0; x--)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3501:               else",
          "3502:                 quantum=0;",
          "3506:               r++;",
          "",
          "[Removed Lines]",
          "3504:               quantum|=(*p++);",
          "",
          "[Added Lines]",
          "3515:               quantum|=(*p++);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4405:         p=chunk;",
          "4406:       }",
          "4411:       {",
          "4412:         if (length == 16)",
          "4413:           {",
          "",
          "[Removed Lines]",
          "4410:     if (memcmp(type,mng_JHDR,4) == 0)",
          "",
          "[Added Lines]",
          "4421:     if (memcmp(type,mng_JHDR,4) == 0)",
          "4422:       {",
          "4423:         if (length == 16)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "5326:           }",
          "5328:         if (memcmp(type,mng_MHDR,4) == 0)",
          "5336:             mng_info->mng_width=(size_t) ((p[0] << 24) | (p[1] << 16) |",
          "5337:                 (p[2] << 8) | p[3]);",
          "",
          "[Removed Lines]",
          "5329:           {",
          "5330:             if (length != 28)",
          "5331:               {",
          "5332:                 chunk=(unsigned char *) RelinquishMagickMemory(chunk);",
          "5333:                 ThrowReaderException(CorruptImageError,\"CorruptImage\");",
          "5334:               }",
          "",
          "[Added Lines]",
          "5342:           {",
          "5343:             if (length != 28)",
          "5344:               {",
          "5345:                 chunk=(unsigned char *) RelinquishMagickMemory(chunk);",
          "5346:                 ThrowReaderException(CorruptImageError,\"CorruptImage\");",
          "5347:               }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "5487:             mng_info->exists[object_id]=MagickTrue;",
          "5489:             if (length > 2)",
          "5496:               {",
          "5497:                 mng_info->x_off[object_id]=(ssize_t) ((p[4] << 24) |",
          "5498:                     (p[5] << 16) | (p[6] << 8) | p[7]);",
          "",
          "[Removed Lines]",
          "5490:               mng_info->invisible[object_id]=p[2];",
          "5493:               Extract object offset info.",
          "5495:             if (length > 11)",
          "",
          "[Added Lines]",
          "5503:               mng_info->invisible[object_id]=p[2];",
          "5506:               Extract object offset info.",
          "5508:             if (length > 11)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "6301:           {",
          "6302:             skip_to_iend=MagickTrue;",
          "6309:             mng_info->basi_warning++;",
          "6310: #ifdef MNG_BASI_SUPPORTED",
          "6311:             basi_width=(size_t) ((p[0] << 24) | (p[1] << 16) |",
          "6312:                (p[2] << 8) | p[3]);",
          "6314:                (p[6] << 8) | p[7]);",
          "6315:             basi_color_type=p[8];",
          "6316:             basi_compression_method=p[9];",
          "6317:             basi_filter_type=p[10];",
          "6318:             basi_interlace_method=p[11];",
          "6320:               basi_red=(p[12] << 8) & p[13];",
          "6322:             else",
          "6323:               basi_red=0;",
          "6326:               basi_green=(p[14] << 8) & p[15];",
          "6328:             else",
          "6329:               basi_green=0;",
          "6332:               basi_blue=(p[16] << 8) & p[17];",
          "6334:             else",
          "",
          "[Removed Lines]",
          "6304:             if (mng_info->basi_warning == 0)",
          "6305:               (void) ThrowMagickException(exception,GetMagickModule(),",
          "6306:                 CoderError,\"BASI is not implemented yet\",\"`%s'\",",
          "6307:                 image->filename);",
          "6313:             basi_height=(size_t) ((p[4] << 24) | (p[5] << 16) |",
          "6319:             if (length > 11)",
          "6325:             if (length > 13)",
          "6331:             if (length > 15)",
          "",
          "[Added Lines]",
          "6317:             if (mng_info->basi_warning == 0)",
          "6318:               (void) ThrowMagickException(exception,GetMagickModule(),",
          "6319:                 CoderError,\"BASI is not implemented yet\",\"`%s'\",",
          "6320:                 image->filename);",
          "6322:             mng_info->basi_warning++;",
          "6328:               ((png_uint_32) p[5] << 16) | ((png_uint_32) p[6] << 8) |",
          "6334:             if (length > 11)",
          "6340:             if (length > 13)",
          "6346:             if (length > 15)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "12995:             len;",
          "13004:           len=0;",
          "",
          "[Removed Lines]",
          "12998:           if (logging != MagickFalse)",
          "12999:             (void) LogMagickEvent(CoderEvent,GetMagickModule(),",
          "13000:               \"  Write IDAT chunks from blob, length=%.20g.\",(double)",
          "13001:               length);",
          "",
          "[Added Lines]",
          "13013:           if (logging != MagickFalse)",
          "13014:             (void) LogMagickEvent(CoderEvent,GetMagickModule(),",
          "13015:               \"  Write IDAT chunks from blob, length=%.20g.\",(double)",
          "13016:               length);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "baae4991b593826b4cd7fcf56199e96ee9effc7c",
      "candidate_info": {
        "commit_hash": "baae4991b593826b4cd7fcf56199e96ee9effc7c",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/baae4991b593826b4cd7fcf56199e96ee9effc7c",
        "files": [
          "coders/png.c"
        ],
        "message": "Use mng_get_long() everywhere in coders/png.c",
        "before_after_code_files": [
          "coders/png.c||coders/png.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/png.c||coders/png.c"
          ],
          "candidate": [
            "coders/png.c||coders/png.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/png.c||coders/png.c": [
          "File: coders/png.c -> coders/png.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1935:       if (chunk->size != 9)",
          "1944:         ((png_uint_32) chunk->data[1] << 16) |",
          "1945:         ((png_uint_32) chunk->data[2] << 8) |",
          "1946:         (png_uint_32) chunk->data[3]);",
          "",
          "[Removed Lines]",
          "1938:       if (chunk->data[8] != 0)",
          "1941:       image=(Image *) png_get_user_chunk_ptr(ping);",
          "1943:       image->page.width=(size_t) (((png_uint_32) chunk->data[0] << 24) |",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1958:       chunk->name[2] ==  78 &&",
          "1959:       chunk->name[3] == 118)",
          "1960:     {",
          "1973:         ((png_uint_32) chunk->data[6] << 8) | (png_uint_32) chunk->data[7]);",
          "1974:       image->page.x=(ssize_t) (((png_uint_32) chunk->data[8] << 24) |",
          "1975:         ((png_uint_32) chunk->data[9] << 16) |",
          "",
          "[Removed Lines]",
          "1963:       if (chunk->size != 16)",
          "1966:       image=(Image *) png_get_user_chunk_ptr(ping);",
          "1968:       image->page.width=(size_t) (((png_uint_32) chunk->data[0] << 24) |",
          "1969:         ((png_uint_32) chunk->data[1] << 16) |",
          "1970:         ((png_uint_32) chunk->data[2] << 8) | (png_uint_32) chunk->data[3]);",
          "1971:       image->page.height=(size_t) (((png_uint_32) chunk->data[4] << 24) |",
          "1972:         ((png_uint_32) chunk->data[5] << 16) |",
          "",
          "[Added Lines]",
          "1957:       if (chunk->size != 16)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4419:         p=chunk;",
          "4420:       }",
          "4427:           {",
          "4428:             jng_width=(png_uint_32) (((png_uint_32) p[0] << 24) |",
          "4429:               ((png_uint_32) p[1] << 16) | ((png_uint_32) p[2] << 8) |",
          "",
          "[Removed Lines]",
          "4424:     if (memcmp(type,mng_JHDR,4) == 0)",
          "4425:       {",
          "4426:         if (length == 16)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5342:           }",
          "5344:         if (memcmp(type,mng_MHDR,4) == 0)",
          "5352:             mng_info->mng_width=(unsigned long) (((png_uint_32) p[0] << 24) |",
          "5353:               ((png_uint_32) p[1] << 16) | ((png_uint_32) p[2] << 8) |",
          "",
          "[Removed Lines]",
          "5345:           {",
          "5346:             if (length != 28)",
          "5347:               {",
          "5348:                 chunk=(unsigned char *) RelinquishMagickMemory(chunk);",
          "5349:                 ThrowReaderException(CorruptImageError,\"CorruptImage\");",
          "5350:               }",
          "",
          "[Added Lines]",
          "5327:           {",
          "5328:             if (length != 28)",
          "5329:               {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6387479aa974709d5c329c8efbde38175f386844",
      "candidate_info": {
        "commit_hash": "6387479aa974709d5c329c8efbde38175f386844",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/6387479aa974709d5c329c8efbde38175f386844",
        "files": [
          "ChangeLog",
          "coders/png.c"
        ],
        "message": "Address JNG decoder Issue 760",
        "before_after_code_files": [
          "coders/png.c||coders/png.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/png.c||coders/png.c"
          ],
          "candidate": [
            "coders/png.c||coders/png.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/png.c||coders/png.c": [
          "File: coders/png.c -> coders/png.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4535:     if (memcmp(type,mng_JHDR,4) == 0)",
          "4536:       {",
          "4537:         if (length == 16)",
          "4538:           {",
          "4539:             jng_width=(png_uint_32)mng_get_long(p);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4535:     if (memcmp(type,mng_JHDR,4) == 0)",
          "4536:       {",
          "4537:         if (length == 16)",
          "4538:           {",
          "4541:             if ((jng_width == 0) || (jng_height == 0))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4606:            o create color_image",
          "4607:            o open color_blob, attached to color_image",
          "4608:            o if (color type has alpha)",
          "4609:                open alpha_blob, attached to alpha_image",
          "4612:         color_image_info=(ImageInfo *)AcquireMagickMemory(sizeof(ImageInfo));",
          "4614:         if (color_image_info == (ImageInfo *) NULL)",
          "4615:           ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "4617:         GetImageInfo(color_image_info);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4613:            o if (color type has alpha)",
          "4614:                open alpha_blob, attached to alpha_image",
          "4617:         color_image_info=(ImageInfo *)AcquireMagickMemory(sizeof(ImageInfo));",
          "4623:           ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "4624:         }",
          "4627:         color_image=AcquireImage(color_image_info,exception);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4623:         if (logging != MagickFalse)",
          "4624:           (void) LogMagickEvent(CoderEvent,GetMagickModule(),",
          "4625:             \"    Creating color_blob.\");",
          "4627:         (void) AcquireUniqueFilename(color_image->filename);",
          "4628:         status=OpenBlob(color_image_info,color_image,WriteBinaryBlobMode,",
          "4629:           exception);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4640:         (void) AcquireUniqueFilename(color_image->filename);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4634:             return(DestroyImageList(image));",
          "4635:           }",
          "4638:           {",
          "4639:             alpha_image_info=(ImageInfo *)",
          "4640:               AcquireMagickMemory(sizeof(ImageInfo));",
          "",
          "[Removed Lines]",
          "4637:         if ((image_info->ping == MagickFalse) && (jng_color_type >= 12))",
          "",
          "[Added Lines]",
          "4651:         if ((image_info->ping == MagickFalse) && (jng_color_type >= 12))",
          "4652:           {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4644:                 color_image=DestroyImage(color_image);",
          "4645:                 ThrowReaderException(ResourceLimitError,",
          "4646:                   \"MemoryAllocationFailed\");",
          "4649:             GetImageInfo(alpha_image_info);",
          "4650:             alpha_image=AcquireImage(alpha_image_info,exception);",
          "",
          "[Removed Lines]",
          "4647:               }",
          "",
          "[Added Lines]",
          "4662:               }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4944:     color_image->filename);",
          "4947:   jng_image=ReadImage(color_image_info,exception);",
          "4949:   (void) RelinquishUniqueFileResource(color_image->filename);",
          "4950:   color_image=DestroyImage(color_image);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4962:   jng_image=ReadImage(color_image_info,exception);",
          "4964:   (void) RelinquishUniqueFileResource(color_image->filename);",
          "4966:   color_image_info=DestroyImageInfo(color_image_info);",
          "",
          "---------------"
        ]
      }
    }
  ]
}