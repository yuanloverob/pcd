{
  "cve_id": "CVE-2017-7185",
  "cve_desc": "Use-after-free vulnerability in the mg_http_multipart_wait_for_boundary function in mongoose.c in Cesanta Mongoose Embedded Web Server Library 6.7 and earlier and Mongoose OS 1.2 and earlier allows remote attackers to cause a denial of service (crash) via a multipart/form-data POST request without a MIME boundary string.",
  "repo": "cesanta/mongoose",
  "patch_hash": "b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
  "patch_info": {
    "commit_hash": "b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
    "repo": "cesanta/mongoose",
    "commit_url": "https://github.com/cesanta/mongoose/commit/b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
    "files": [
      "mongoose.c"
    ],
    "message": "Fix crash in multipart handling\n\nClose cesanta/dev#6974\n\nPUBLISHED_FROM=4d4e4a46eceba10aec8dacb7f8f58bd078c92307",
    "before_after_code_files": [
      "mongoose.c||mongoose.c"
    ]
  },
  "patch_diff": {
    "mongoose.c||mongoose.c": [
      "File: mongoose.c -> mongoose.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "5961:   struct mbuf *io = &c->recv_mbuf;",
      "5962:   struct mg_http_proto_data *pd = mg_http_get_proto_data(c);",
      "5964:   if ((int) io->len < pd->mp_stream.boundary_len + 2) {",
      "5965:     return 0;",
      "5966:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5964:   if (pd->mp_stream.boundary == NULL) {",
      "5965:     pd->mp_stream.state = MPS_FINALIZE;",
      "5966:     DBG((\"Invalid request: boundary not initilaized\"));",
      "5967:     return 0;",
      "5968:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f78ee9d42e0f841b95db64de62da2df72e1c48f4",
      "candidate_info": {
        "commit_hash": "f78ee9d42e0f841b95db64de62da2df72e1c48f4",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/f78ee9d42e0f841b95db64de62da2df72e1c48f4",
        "files": [
          "mongoose.c"
        ],
        "message": "Don't ignore non-merge commits when publishing\n\nMerge commits are not explicitly ignored either: they're just naturally\nignored as empty commits.\n\nPUBLISHED_FROM=2c814104eedd76ee90813488277ecaaf2baf6315",
        "before_after_code_files": [
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4602:   }",
          "4603:   if (ctx->ca_cert != NULL) {",
          "4604:     mbedtls_ssl_conf_ca_chain(ctx->conf, NULL, NULL);",
          "4611:     mbedtls_x509_crt_free(ctx->ca_cert);",
          "4612:     MG_FREE(ctx->ca_cert);",
          "4613:     ctx->ca_cert = NULL;",
          "",
          "[Removed Lines]",
          "4605: #ifdef MBEDTLS_X509_CA_CHAIN_ON_DISK",
          "4606:     if (ctx->ca_cert->ca_chain_file != NULL) {",
          "4607:       MG_FREE((void *) ctx->ca_cert->ca_chain_file);",
          "4608:       ctx->ca_cert->ca_chain_file = NULL;",
          "4609:     }",
          "4610: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4693:   }",
          "4694:   ctx->ca_cert = (mbedtls_x509_crt *) MG_CALLOC(1, sizeof(*ctx->ca_cert));",
          "4695:   mbedtls_x509_crt_init(ctx->ca_cert);",
          "4702:   if (mbedtls_x509_crt_parse_file(ctx->ca_cert, ca_cert) != 0) {",
          "4703:     return MG_SSL_ERROR;",
          "4704:   }",
          "4706:   mbedtls_ssl_conf_ca_chain(ctx->conf, ctx->ca_cert, NULL);",
          "4707:   mbedtls_ssl_conf_authmode(ctx->conf, MBEDTLS_SSL_VERIFY_REQUIRED);",
          "4708:   return MG_SSL_OK;",
          "",
          "[Removed Lines]",
          "4696: #ifdef MBEDTLS_X509_CA_CHAIN_ON_DISK",
          "4697:   ca_cert = strdup(ca_cert);",
          "4698:   if (mbedtls_x509_crt_set_ca_chain_file(ctx->ca_cert, ca_cert) != 0) {",
          "4699:     return MG_SSL_ERROR;",
          "4700:   }",
          "4701: #else",
          "4705: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11130: void mg_set_nameserver(struct mg_mgr *mgr, const char *nameserver) {",
          "11131:   MG_FREE((char *) mgr->nameserver);",
          "11133:   if (nameserver != NULL) {",
          "11134:     mgr->nameserver = strdup(nameserver);",
          "11135:   }",
          "",
          "[Removed Lines]",
          "11132:   mgr->nameserver = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f20c41dd5ada1c79c449eb5be269badb4462623",
      "candidate_info": {
        "commit_hash": "7f20c41dd5ada1c79c449eb5be269badb4462623",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/7f20c41dd5ada1c79c449eb5be269badb4462623",
        "files": [
          "mongoose.c",
          "mongoose.h"
        ],
        "message": "Implement rmdir & sleep func instead macros\n\nPUBLISHED_FROM=62c73e5fb4f70e2b5b8824ce092012508640b173",
        "before_after_code_files": [
          "mongoose.c||mongoose.c",
          "mongoose.h||mongoose.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "15726: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15729: #ifdef MG_MODULE_LINES",
          "15730: #line 1 \"common/platforms/windows/windows_direct.c\"",
          "15731: #endif",
          "15737: #ifdef _WIN32",
          "15739: int rmdir(const char *dirname) {",
          "15740:   return _rmdir(dirname);",
          "15741: }",
          "15743: unsigned int sleep(unsigned int seconds) {",
          "15744:   Sleep(seconds * 1000);",
          "15745:   return 0;",
          "15746: }",
          "",
          "---------------"
        ],
        "mongoose.h||mongoose.h": [
          "File: mongoose.h -> mongoose.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "223: #endif",
          "224: #define snprintf _snprintf",
          "225: #define vsnprintf _vsnprintf",
          "227: #define to64(x) _atoi64(x)",
          "228: #if !defined(__MINGW32__) && !defined(__MINGW64__)",
          "229: #define popen(x, y) _popen((x), (y))",
          "230: #define pclose(x) _pclose(x)",
          "231: #define fileno _fileno",
          "232: #endif",
          "234: #if defined(_MSC_VER) && _MSC_VER >= 1400",
          "235: #define fseeko(x, y, z) _fseeki64((x), (y), (z))",
          "236: #else",
          "",
          "[Removed Lines]",
          "226: #define sleep(x) Sleep((x) *1000)",
          "233: #define rmdir _rmdir",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "321: #define MG_NET_IF MG_NET_IF_SOCKET",
          "322: #endif",
          "326: #ifdef MG_MODULE_LINES",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "322: int rmdir(const char *dirname);",
          "323: unsigned int sleep(unsigned int seconds);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c8af7cdd2740ecf89e927c1a26437e4c29d5ae6e",
      "candidate_info": {
        "commit_hash": "c8af7cdd2740ecf89e927c1a26437e4c29d5ae6e",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/c8af7cdd2740ecf89e927c1a26437e4c29d5ae6e",
        "files": [
          "mongoose.c"
        ],
        "message": "Check for int overflow when parsing WS frames\n\nPUBLISHED_FROM=b7325b38e881455df703b0b628c41931565ccb33",
        "before_after_code_files": [
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9204:   }",
          "9206:   frame_len = header_len + data_len;",
          "9209:   if (ok) {",
          "9210:     struct websocket_message wsm;",
          "",
          "[Removed Lines]",
          "9207:   ok = frame_len > 0 && frame_len <= buf_len;",
          "",
          "[Added Lines]",
          "9207:   ok = (frame_len > 0 && frame_len <= buf_len);",
          "9210:   if (frame_len < header_len || frame_len < data_len) {",
          "9211:     ok = 0;",
          "9212:     nc->flags |= MG_F_CLOSE_IMMEDIATELY;",
          "9213:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a93e301c9fdd139dcc37e8325017684de55f3b1",
      "candidate_info": {
        "commit_hash": "0a93e301c9fdd139dcc37e8325017684de55f3b1",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/0a93e301c9fdd139dcc37e8325017684de55f3b1",
        "files": [
          "examples/CC3200/Makefile.build",
          "examples/CC3200/main.c",
          "examples/CC3200/sdk.version",
          "mongoose.c",
          "mongoose.h"
        ],
        "message": "CC3220: Exception handling, NWP init\n\nAlso make CC3200 use newer ARM compiler, generates slightly smaller code.\n\nPUBLISHED_FROM=a0be49d7ea864a95886f7110887a59f6f11802d7",
        "before_after_code_files": [
          "examples/CC3200/Makefile.build||examples/CC3200/Makefile.build",
          "examples/CC3200/main.c||examples/CC3200/main.c",
          "examples/CC3200/sdk.version||examples/CC3200/sdk.version",
          "mongoose.c||mongoose.c",
          "mongoose.h||mongoose.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "examples/CC3200/Makefile.build||examples/CC3200/Makefile.build": [
          "File: examples/CC3200/Makefile.build -> examples/CC3200/Makefile.build",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: $(FW_ZIP): $(FW_ELF) $(FW_BIN) $(SLFS_FILES)",
          "59:  @echo \"    Code size: $(shell ls -l $(FW_BIN) | awk '{print $$5}')\"",
          "60:  @echo \"  GEN   $(FW_MANIFEST)\"",
          "62:    --json_output=$(BUILD_INFO_JSON)",
          "63:  @cp -v $(SLFS_FILES) out/",
          "64:  @cp $(CC3200_SP_FILE)* $(FW_DIR)",
          "66:    --name=$(PROG) --platform=$(PLATFORM) \\",
          "67:    --build_info=$(BUILD_INFO_JSON) \\",
          "68:    --output=$(FW_MANIFEST) \\",
          "",
          "[Removed Lines]",
          "61:  @fw_meta gen_build_info \\",
          "65:  @fw_meta create_manifest \\",
          "",
          "[Added Lines]",
          "61:  @fw_meta.py gen_build_info \\",
          "65:  @fw_meta.py create_manifest \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:    /sys/mcuimg.bin:type=app,src=$(notdir $(FW_BIN)) \\",
          "73:    $(foreach f,$(SLFS_FILES), $(notdir $(f)):type=slfile,src=$(notdir $(f)))",
          "74:  @echo \"  ZIP   $@\"",
          "76:    --manifest=$(FW_MANIFEST) \\",
          "77:    --src_dir=$(FW_DIR) \\",
          "78:    --output=$@",
          "80: FREERTOS_SRCS = timers.c list.c queue.c tasks.c port.c heap_3.c osi_freertos.c",
          "81: DRIVER_SRCS = cpu.c gpio.c gpio_if.c i2c.c i2c_if.c interrupt.c pin.c prcm.c spi.c uart.c udma.c utils.c",
          "83: SDK_SRCS = startup_gcc.c $(FREERTOS_SRCS) $(DRIVER_SRCS) $(SL_SRCS)",
          "84: IPATH += $(SDK_PATH) $(SDK_PATH)/inc $(SDK_PATH)/driverlib \\",
          "85:          $(SDK_PATH)/example/common $(SDK_PATH)/oslib \\",
          "",
          "[Removed Lines]",
          "75:  @fw_meta create_fw \\",
          "82: SL_SRCS = socket.c wlan.c driver.c device.c netapp.c netcfg.c network_common.c cc_pal.c fs.c",
          "",
          "[Added Lines]",
          "75:  @fw_meta.py create_fw \\",
          "82: SL_SRCS = socket.c wlan.c driver.c device.c netapp.c netcfg.c network_common.c timer.c cc_pal.c fs.c",
          "",
          "---------------"
        ],
        "examples/CC3200/main.c||examples/CC3200/main.c": [
          "File: examples/CC3200/main.c -> examples/CC3200/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "294:   LOG(LL_ERROR, (\"status %d sender %d\", e->EventData.deviceEvent.status,",
          "295:                  e->EventData.deviceEvent.sender));",
          "296: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "298: #ifndef __TI_COMPILER_VERSION__",
          "299: int _gettimeofday_r(struct _reent *r, struct timeval *tp, void *tz) {",
          "300: #else",
          "301: int gettimeofday(struct timeval *tp, void *tz) {",
          "302: #endif",
          "303:   unsigned long sec;",
          "304:   unsigned short msec;",
          "305:   MAP_PRCMRTCGet(&sec, &msec);",
          "306:   tp->tv_sec = sec;",
          "307:   tp->tv_usec = ((unsigned long) msec) * 1000;",
          "308:   return 0;",
          "309: }",
          "",
          "---------------"
        ],
        "examples/CC3200/sdk.version||examples/CC3200/sdk.version": [
          "File: examples/CC3200/sdk.version -> examples/CC3200/sdk.version",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: docker.cesanta.com/cc3200-build:1.2.0-r8",
          "",
          "[Added Lines]",
          "1: docker.cesanta.com/cc3200-build:1.3.0-r2",
          "",
          "---------------"
        ],
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12530: void fprint_str(FILE *fp, const char *str) {",
          "12531:   while (*str != '\\0') {",
          "12532:     if (*str == '\\n') MAP_UARTCharPut(CONSOLE_UART, '\\r');",
          "",
          "[Removed Lines]",
          "12508: #ifndef __TI_COMPILER_VERSION__",
          "12509: int _gettimeofday_r(struct _reent *r, struct timeval *tp, void *tz) {",
          "12510: #else",
          "12511: int gettimeofday(struct timeval *tp, void *tz) {",
          "12512: #endif",
          "12513:   unsigned long sec;",
          "12514:   unsigned short msec;",
          "12515:   MAP_PRCMRTCGet(&sec, &msec);",
          "12516:   tp->tv_sec = sec;",
          "12517:   tp->tv_usec = ((unsigned long) msec) * 1000;",
          "12518:   return 0;",
          "12519: }",
          "12521: #ifndef __TI_COMPILER_VERSION__",
          "12522: int settimeofday(const struct timeval *tv, const struct timezone *tz) {",
          "12523: #else",
          "12524: int settimeofday(const struct timeval *tv, const void *tz) {",
          "12525: #endif",
          "12526:   MAP_PRCMRTCSet(tv->tv_sec, tv->tv_usec / 1000);",
          "12527:   return 0;",
          "12528: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mongoose.h||mongoose.h": [
          "File: mongoose.h -> mongoose.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1219: #define SL_SOCKET_FD_SET SL_FD_SET",
          "1220: #define SL_SOCKET_FD_ISSET SL_FD_ISSET",
          "1221: #define SL_SO_SECURE_DOMAIN_NAME_VERIFICATION SO_SECURE_DOMAIN_NAME_VERIFICATION",
          "1222: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1223: #define SlDeviceVersion_t SlVersionFull",
          "1224: #define sl_DeviceGet sl_DevGet",
          "1225: #define SL_DEVICE_GENERAL SL_DEVICE_GENERAL_CONFIGURATION",
          "1226: #define SL_DEV_GET_LEN_TYPE _u8",
          "1227: #else",
          "1228: #define SL_DEV_GET_LEN_TYPE _u16",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6fe9cae62abb6a5fca55914b0f8f187c9f556645",
      "candidate_info": {
        "commit_hash": "6fe9cae62abb6a5fca55914b0f8f187c9f556645",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/6fe9cae62abb6a5fca55914b0f8f187c9f556645",
        "files": [
          "mongoose.c",
          "mongoose.h"
        ],
        "message": "Add mg_next_comma_list_entry_n()\n\nAnd mgos_conf_check_access_n()\n\nPUBLISHED_FROM=c7de937b4f5463ca463d604183a4ee831617bd6d",
        "before_after_code_files": [
          "mongoose.c||mongoose.c",
          "mongoose.h||mongoose.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1926:                                      struct mg_str *) WEAK;",
          "1927: const char *mg_next_comma_list_entry(const char *list, struct mg_str *val,",
          "1928:                                      struct mg_str *eq_val) {",
          "1932:   } else {",
          "1938:     } else {",
          "1942:     }",
          "1944:     if (eq_val != NULL) {",
          "",
          "[Removed Lines]",
          "1929:   if (list == NULL || *list == '\\0') {",
          "1931:     list = NULL;",
          "1933:     val->p = list;",
          "1934:     if ((list = strchr(val->p, ',')) != NULL) {",
          "1936:       val->len = list - val->p;",
          "1937:       list++;",
          "1940:       list = val->p + strlen(val->p);",
          "1941:       val->len = list - val->p;",
          "",
          "[Added Lines]",
          "1929:   struct mg_str ret = mg_next_comma_list_entry_n(mg_mk_str(list), val, eq_val);",
          "1930:   return ret.p;",
          "1931: }",
          "1933: struct mg_str mg_next_comma_list_entry_n(struct mg_str list, struct mg_str *val,",
          "1934:                                          struct mg_str *eq_val) WEAK;",
          "1935: struct mg_str mg_next_comma_list_entry_n(struct mg_str list, struct mg_str *val,",
          "1936:                                          struct mg_str *eq_val) {",
          "1937:   if (list.len == 0) {",
          "1939:     list = mg_mk_str(NULL);",
          "1941:     const char *chr = NULL;",
          "1944:     if ((chr = mg_strchr(*val, ',')) != NULL) {",
          "1946:       val->len = chr - val->p;",
          "1947:       chr++;",
          "1948:       list.len -= (chr - list.p);",
          "1949:       list.p = chr;",
          "1952:       list = mg_mk_str_n(list.p + list.len, 0);",
          "",
          "---------------"
        ],
        "mongoose.h||mongoose.h": [
          "File: mongoose.h -> mongoose.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2105: const char *mg_next_comma_list_entry(const char *list, struct mg_str *val,",
          "2106:                                      struct mg_str *eq_val);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2107: struct mg_str mg_next_comma_list_entry_n(struct mg_str list, struct mg_str *val,",
          "2108:                                          struct mg_str *eq_val);",
          "",
          "---------------"
        ]
      }
    }
  ]
}