{
  "cve_id": "CVE-2019-19242",
  "cve_desc": "SQLite 3.30.1 mishandles pExpr->y.pTab, as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.",
  "repo": "sqlite/sqlite",
  "patch_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
  "patch_info": {
    "commit_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/wherecode.c",
      "test/gencol1.test"
    ],
    "message": "Fix a problem that comes up when using generated columns that evaluate to a constant in an index and then making use of that index in a join.\n\nFossilOrigin-Name: 8b12e95fec7ce6e0de82a04ca3dfcf1a8e62e233b7382aa28a8a9be6e862b1af",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/wherecode.c||src/wherecode.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 2d53a30cc23e53033af8e8666457654db5dcc453ed6cd176ce1d0bff4f528159",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3607:         int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);",
      "3609:         if( aff>SQLITE_AFF_BLOB ){",
      "3610:           static const char zAff[] = \"B\\000C\\000D\\000E\";",
      "3611:           assert( SQLITE_AFF_BLOB=='A' );",
      "",
      "[Removed Lines]",
      "3608:         int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "",
      "[Added Lines]",
      "3608:         int aff;",
      "3609:         if( pExpr->y.pTab ){",
      "3610:           aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "3611:         }else{",
      "3612:           aff = pExpr->affExpr;",
      "3613:         }",
      "",
      "---------------"
    ],
    "src/wherecode.c||src/wherecode.c": [
      "File: src/wherecode.c -> src/wherecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1141:   if( pExpr->op==TK_COLUMN ){",
      "1142:     IdxExprTrans *pX = p->u.pIdxTrans;",
      "1143:     if( pExpr->iTable==pX->iTabCur && pExpr->iColumn==pX->iTabCol ){",
      "1144:       pExpr->iTable = pX->iIdxCur;",
      "1145:       pExpr->iColumn = pX->iIdxCol;",
      "1146:       pExpr->y.pTab = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1144:       assert( pExpr->y.pTab!=0 );",
      "1145:       pExpr->affExpr = sqlite3TableColumnAffinity(pExpr->y.pTab,pExpr->iColumn);",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:   UPDATE t0 SET c0 = NULL;",
      "244: } {1 {generated column loop on \"c2\"}}",
      "247: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "246: # 2019-11-21 Problems in the new generated column logic",
      "247: # reported by Yongheng Chen and Rui Zhong",
      "248: do_execsql_test gencol1-9.10 {",
      "249:   DROP TABLE IF EXISTS t1;",
      "250:   DROP TABLE IF EXISTS t2;",
      "251:   CREATE TABLE t1(aa , bb AS (17) UNIQUE);",
      "252:   INSERT INTO t1 VALUES(17);",
      "253:   CREATE TABLE t2(cc);",
      "254:   INSERT INTO t2 VALUES(41);",
      "255:   SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;",
      "256: } {41 17 17}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5d4589014a71960310af35a8a3412b2930eb84a2",
      "candidate_info": {
        "commit_hash": "5d4589014a71960310af35a8a3412b2930eb84a2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5d4589014a71960310af35a8a3412b2930eb84a2",
        "files": [
          "ext/fts5/fts5_index.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Improved detection of shadow table corruption in the fts5_decode() SQL function.\n\nFossilOrigin-Name: b74e5f3f3057ee7a98ebcb14ca0751048eacbec8fca3e11e241883029a57ecdf",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6398:     }else{",
          "6399:       iOff = szLeaf;",
          "6400:     }",
          "6401:     fts5DecodePoslist(&rc, &s, &a[4], iOff-4);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6401:     if( iOff>n ){",
          "6402:       rc = FTS5_CORRUPT;",
          "6403:       goto decode_out;",
          "6404:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6434:         term.n = nByte;",
          "6435:       }",
          "6436:       iOff += fts5GetVarint32(&a[iOff], nByte);",
          "6437:       fts5BufferAppendBlob(&rc, &term, nByte, &a[iOff]);",
          "6438:       iOff += nByte;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6441:       if( iOff+nByte>n ){",
          "6442:         rc = FTS5_CORRUPT;",
          "6443:         break;",
          "6444:       }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 567be3bb1e8b6477f3bf1c7b4cd6ec066fba69d0dcf8785632e244ce25db639f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9378818d898c09aa1eb075a337c1d3b12388baac",
      "candidate_info": {
        "commit_hash": "9378818d898c09aa1eb075a337c1d3b12388baac",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9378818d898c09aa1eb075a337c1d3b12388baac",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/fuzzdata7.db"
        ],
        "message": "Do not use the insert-overwrite optimization if the cell might overwrite the page header.\n\nFossilOrigin-Name: f60a83069168899dcfd706b4d0901084c7ce92d85277950317e962a8a98ec668",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e46b2afc99329c43de08d4a2e6ade4d2239d7409c5d5626bf272a3e0dd24d1b4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8730:       memcpy(oldCell, newCell, szNew);",
          "8731:       return SQLITE_OK;",
          "8732:     }",
          "",
          "[Removed Lines]",
          "8729:       if( oldCell+szNew > pPage->aDataEnd ) return SQLITE_CORRUPT_BKPT;",
          "",
          "[Added Lines]",
          "8729:       if( oldCell < pPage->aData+pPage->hdrOffset+10 ){",
          "8730:         return SQLITE_CORRUPT_BKPT;",
          "8731:       }",
          "8732:       if( oldCell+szNew > pPage->aDataEnd ){",
          "8733:         return SQLITE_CORRUPT_BKPT;",
          "8734:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "abd7449478c7a1ed47de9b86e8bdac04ebd5e235",
      "candidate_info": {
        "commit_hash": "abd7449478c7a1ed47de9b86e8bdac04ebd5e235",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/abd7449478c7a1ed47de9b86e8bdac04ebd5e235",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix another corrupt-database-handling problem in fts5.\n\nFossilOrigin-Name: 9876ae1b802a449aacbbdd42778653edc19e29315dc627c23ab7493d6492c800",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2327:  search_success:",
          "2328:   pIter->iLeafOffset = iOff + nNew;",
          "2330:     p->rc = FTS5_CORRUPT;",
          "2331:     return;",
          "2332:   }",
          "",
          "[Removed Lines]",
          "2329:   if( pIter->iLeafOffset>n ){",
          "",
          "[Added Lines]",
          "2329:   if( pIter->iLeafOffset>n || nNew<1 ){",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "2430: do_catchsql_test 24.1 {",
          "2431:   UPDATE t1 SET b=quote(zeroblob(200)) WHERE a MATCH 'thread*';",
          "2434: do_catchsql_test 24.2 {",
          "2435:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "",
          "[Removed Lines]",
          "2432: } {0 {}}",
          "",
          "[Added Lines]",
          "2432: } {1 {database disk image is malformed}}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6771:   SELECT term FROM t4 WHERE term LIKE 'oase';",
          "6772: } {1 {database disk image is malformed}}",
          "6775: sqlite3_fts5_may_be_corrupt 0",
          "6776: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6774: #--------------------------------------------------------------------------",
          "6775: reset_db",
          "6776: do_test 50.0 {",
          "6777:   sqlite3 db {}",
          "6778:   db deserialize [decode_hexdb {",
          "6779: | size 40960 pagesize 4096 filename crash-695bce8a3e107c.db",
          "6780: | page 1 offset 0",
          "6781: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "6782: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 0a   .....@  ........",
          "6783: |     32: 00 00 00 00 00 00 00 00 00 00 00 0d 00 00 00 04   ................",
          "6784: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "6785: |     96: 00 00 00 00 0d 00 00 00 0d 0b 6e 00 0f a3 0f 4c   ..........n....L",
          "6786: |    112: 0e e1 0e 81 0e 24 0d cc 0d 72 0d 1b 0c b0 0c 50   .....$...r.....P",
          "6787: |    128: 0b f8 0b b3 0b 6e 00 00 00 00 00 00 00 00 00 00   .....n..........",
          "6788: |   2912: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 43 0d   ..............C.",
          "6789: |   2928: 06 17 11 11 08 75 74 61 62 6c 65 74 34 74 34 43   .....utablet4t4C",
          "6790: |   2944: 52 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41   REATE VIRTUAL TA",
          "6791: |   2960: 42 4c 45 20 74 34 20 55 53 49 4e 47 20 66 74 73   BLE t4 USING fts",
          "6792: |   2976: 35 76 6f 63 61 62 28 27 74 32 27 2c 20 27 72 6f   5vocab('t2', 'ro",
          "6793: |   2992: 77 27 29 43 0c 06 17 11 11 08 75 74 61 62 6c 65   w')C......utable",
          "6794: |   3008: 74 33 74 33 43 52 45 41 54 45 20 56 49 52 54 55   t3t3CREATE VIRTU",
          "6795: |   3024: 41 4c 20 54 41 42 4c 45 20 74 33 20 55 53 49 4e   AL TABLE t3 USIN",
          "6796: |   3040: 47 20 66 74 73 35 76 6f 63 61 62 28 27 74 31 27   G fts5vocab('t1'",
          "6797: |   3056: 2c 20 27 72 6f 77 27 29 56 0b 06 17 1f 1f 01 7d   , 'row')V.......",
          "6798: |   3072: 74 61 62 6c 65 74 32 5f 63 6f 6e 66 69 67 74 32   tablet2_configt2",
          "6799: |   3088: 5f 63 6f 6e 66 69 67 0a 43 52 45 41 54 45 20 54   _config.CREATE T",
          "6800: |   3104: 41 42 4c 45 20 27 74 32 5f 63 6f 6e 66 69 67 27   ABLE 't2_config'",
          "6801: |   3120: 28 6b 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   (k PRIMARY KEY,",
          "6802: |   3136: 76 29 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44   v) WITHOUT ROWID",
          "6803: |   3152: 5e 0a 07 17 21 21 01 81 07 74 61 62 6c 65 74 32   ^...!!...tablet2",
          "6804: |   3168: 5f 63 6f 6e 74 65 6e 74 74 32 5f 63 6f 6e 74 65   _contentt2_conte",
          "6805: |   3184: 6e 74 09 43 52 45 41 54 45 20 54 41 42 4c 45 20   nt.CREATE TABLE",
          "6806: |   3200: 27 74 32 5f 63 6f 6e 74 65 6e 74 27 28 69 64 20   't2_content'(id",
          "6807: |   3216: 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59 20   INTEGER PRIMARY",
          "6808: |   3232: 4b 45 59 2c 20 63 30 2c 20 63 31 2c 20 63 32 29   KEY, c0, c1, c2)",
          "6809: |   3248: 69 09 07 17 19 19 01 81 2d 74 61 62 6c 65 74 32   i.......-tablet2",
          "6810: |   3264: 5f 69 64 78 74 32 5f 69 64 78 08 43 52 45 41 54   _idxt2_idx.CREAT",
          "6811: |   3280: 45 20 54 41 42 4c 45 20 27 74 32 5f 69 64 78 27   E TABLE 't2_idx'",
          "6812: |   3296: 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20 70 67   (segid, term, pg",
          "6813: |   3312: 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45 59 28   no, PRIMARY KEY(",
          "6814: |   3328: 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20 57 49   segid, term)) WI",
          "6815: |   3344: 54 48 4f 55 54 20 52 4f 57 49 44 55 08 07 17 1b   THOUT ROWIDU....",
          "6816: |   3360: 1b 01 81 01 74 61 62 6c 65 74 32 5f 64 61 74 61   ....tablet2_data",
          "6817: |   3376: 74 32 5f 64 61 74 61 07 43 52 45 41 54 45 20 54   t2_data.CREATE T",
          "6818: |   3392: 41 42 4c 45 20 27 74 32 5f 64 61 74 61 27 28 69   ABLE 't2_data'(i",
          "6819: |   3408: 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52   d INTEGER PRIMAR",
          "6820: |   3424: 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f   Y KEY, block BLO",
          "6821: |   3440: 42 29 58 07 07 17 11 11 08 81 1d 74 61 62 6c 65   B)X........table",
          "6822: |   3456: 74 32 74 32 43 52 45 41 54 45 20 56 49 52 54 55   t2t2CREATE VIRTU",
          "6823: |   3472: 41 4c 20 54 41 42 4c 45 20 74 32 20 55 53 49 4e   AL TABLE t2 USIN",
          "6824: |   3488: 47 20 66 74 73 35 28 27 61 27 2c 5b 62 5d 2c 22   G fts5('a',[b],.",
          "6825: |   3504: 63 22 2c 64 65 74 61 69 6c 3d 6e 6f 6e 65 2c 63   c.,detail=none,c",
          "6826: |   3520: 6f 6c 75 6d 6e 73 69 7a 65 3d 30 29 56 06 06 17   olumnsize=0)V...",
          "6827: |   3536: 1f 1f 01 7d 74 61 62 6c 65 74 31 5f 63 6f 6e 66   ....tablet1_conf",
          "6828: |   3552: 69 67 74 31 5f 63 6f 6e 66 69 67 06 43 52 45 41   igt1_config.CREA",
          "6829: |   3568: 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f 6e   TE TABLE 't1_con",
          "6830: |   3584: 66 69 67 27 28 6b 20 50 52 49 4d 41 52 59 20 4b   fig'(k PRIMARY K",
          "6831: |   3600: 45 59 2c 20 76 29 20 57 49 54 48 4f 55 54 20 52   EY, v) WITHOUT R",
          "6832: |   3616: 4f 57 49 44 5b 05 07 17 21 21 01 81 01 74 61 62   OWID[...!!...tab",
          "6833: |   3632: 6c 65 74 31 5f 64 6f 63 73 69 7a 65 74 31 5f 64   let1_docsizet1_d",
          "6834: |   3648: 6f 63 73 69 7a 65 05 43 52 45 41 54 45 20 54 41   ocsize.CREATE TA",
          "6835: |   3664: 42 4c 45 20 27 74 31 5f 64 6f 63 73 69 7a 65 27   BLE 't1_docsize'",
          "6836: |   3680: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "6837: |   3696: 41 52 59 20 4b 45 59 2c 20 73 7a 20 42 4c 4f 42   ARY KEY, sz BLOB",
          "6838: |   3712: 29 5e 04 07 17 21 21 01 81 07 74 61 62 6c 65 74   )^...!!...tablet",
          "6839: |   3728: 31 5f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1_contentt1_cont",
          "6840: |   3744: 65 6e 74 04 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "6841: |   3760: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 69 64    't1_content'(id",
          "6842: |   3776: 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59    INTEGER PRIMARY",
          "6843: |   3792: 20 4b 45 59 2c 20 63 30 2c 20 63 31 2c 20 63 32    KEY, c0, c1, c2",
          "6844: |   3808: 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65 74   )i.......-tablet",
          "6845: |   3824: 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45 41   1_idxt1_idx.CREA",
          "6846: |   3840: 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64 78   TE TABLE 't1_idx",
          "6847: |   3856: 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20 70   '(segid, term, p",
          "6848: |   3872: 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45 59   gno, PRIMARY KEY",
          "6849: |   3888: 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20 57   (segid, term)) W",
          "6850: |   3904: 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07 17   ITHOUT ROWIDU...",
          "6851: |   3920: 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61 74   .....tablet1_dat",
          "6852: |   3936: 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45 20   at1_data.CREATE",
          "6853: |   3952: 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27 28   TABLE 't1_data'(",
          "6854: |   3968: 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41   id INTEGER PRIMA",
          "6855: |   3984: 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c   RY KEY, block BL",
          "6856: |   4000: 4f 42 29 5b 01 07 17 11 11 08 81 23 74 61 62 6c   OB)[.......#tabl",
          "6857: |   4016: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "6858: |   4032: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "6859: |   4048: 4e 47 20 66 74 73 35 28 61 2c 62 20 75 6e 69 6e   NG fts5(a,b unin",
          "6860: |   4064: 64 65 78 65 64 2c 63 2c 74 6f 6b 65 6e 69 7a 65   dexed,c,tokenize",
          "6861: |   4080: 3d 22 70 6f 72 74 65 72 20 61 73 63 69 69 22 29   =.porter ascii.)",
          "6862: | page 2 offset 4096",
          "6863: |      0: 0d 0f 68 00 05 0f 13 00 0f e6 0f 13 0f a8 0f 7c   ..h............|",
          "6864: |     16: 0f 2a 00 00 00 00 00 00 00 00 00 00 00 00 00 00   .*..............",
          "6865: |   3856: 00 00 00 15 0a 03 00 30 00 00 00 00 01 03 03 00   .......0........",
          "6866: |   3872: 03 01 01 01 02 01 01 03 01 01 37 8c 80 80 80 80   ..........7.....",
          "6867: |   3888: 01 03 00 74 00 20 68 20 69 0d 00 00 00 03 0f e8   ...t. h i.......",
          "6868: |   3904: 00 0f f8 0f f0 0f e8 00 00 00 00 00 00 00 00 00   ................",
          "6869: | page 5 offset 16384",
          "6870: |   4064: 00 00 00 00 00 00 00 00 06 03 03 00 12 03 00 00   ................",
          "6871: |   4080: 60 20 30 d6 20 30 00 30 60 10 30 01 20 30 00 30   ` 0. 0.0`.0. 0.0",
          "6872: | page 6 offset 20480",
          "6873: |      0: a0 00 00 00 10 ff 40 00 ff 00 00 00 00 00 00 00   ......@.........",
          "6874: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "6875: | page 7 offset 24576",
          "6876: |      0: 0d 00 00 00 03 0f 9e 00 0f e6 0f ef 0f 9e 00 00   ................",
          "6877: |   3984: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 41 84   ..............A.",
          "6878: |   4000: 80 80 80 80 01 04 00 81 06 00 00 00 34 02 30 61   ............4.0a",
          "6879: |   4016: 01 01 00 00 00 00 00 00 00 00 00 11 87 89 06 26   ...............&",
          "6880: |   4032: 01 64 01 01 01 65 01 01 01 66 01 01 01 67 01 01   .d...e...f...g..",
          "6881: |   4048: 01 01 01 68 01 01 01 01 01 69 01 01 01 04 06 06   ...h.....i......",
          "6882: |   4064: 06 04 44 00 06 06 07 01 03 00 14 03 09 09 09 0f   ..D.............",
          "6883: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "6884: | page 8 offset 28672",
          "6885: |      0: 0a 00 00 00 01 0f fa 00 0f fa 00 00 00 00 00 00   ................",
          "6886: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "6887: | page 9 offset 32768",
          "6888: |      0: 0d 00 00 00 9d 0f be 00 0f ea 0f d4 0f be 00 00   ................",
          "6889: |   4016: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 14 03   ................",
          "6890: |   4032: 05 00 17 17 17 61 20 62 20 63 67 20 68 20 69 67   .....a b cg h ig",
          "6891: |   4048: 20 68 20 69 14 02 05 00 17 17 17 67 20 68 20 69    h i.......g h i",
          "6892: |   4064: 61 20 62 20 63 67 20 68 20 69 14 01 05 00 17 17   a b cg h i......",
          "6893: |   4080: 17 61 20 62 20 63 64 20 65 20 66 67 20 68 20 69   .a b cd e fg h i",
          "6894: | page 10 offset 36864",
          "6895: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "6896: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "6897: | end crash-695bce8a3e107c.db",
          "6898: }]} {}",
          "6900: do_catchsql_test 50.1 {",
          "6901:   SELECT term FROM t4 WHERE term LIKE '\u00bbas';",
          "6902: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 80151d7e3b9fd84086874a1cebed024b9e14005ea2d0108cf6efcd07373fcf51",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "65c29fd3ebd4e64e12dbdb5d540d417b50c25a69",
      "candidate_info": {
        "commit_hash": "65c29fd3ebd4e64e12dbdb5d540d417b50c25a69",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/65c29fd3ebd4e64e12dbdb5d540d417b50c25a69",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "In the CLI, code the \"sqlite_parameters\" name directly rather than using a macro, for clarity of presentation for users who are reading the code for the purpose of seeing how the CLI implements parameter binding.\n\nFossilOrigin-Name: e775ef002dd33e6bcbeec8d4b6ad7f59749e35548c7a59c9fa3bcfdc5cc50730",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9b20ee10ff86c1f79706180310e02b6f78863e02b179062d8966573ae33a252f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "2747: #endif",
          "2748: }",
          "2754: static void bind_table_init(ShellState *p){",
          "2755:   int wrSchema = 0;",
          "2756:   sqlite3_db_config(p->db, SQLITE_DBCONFIG_WRITABLE_SCHEMA, -1, &wrSchema);",
          "2757:   sqlite3_db_config(p->db, SQLITE_DBCONFIG_WRITABLE_SCHEMA, 1, 0);",
          "2758:   sqlite3_exec(p->db,",
          "2760:     \"  key TEXT PRIMARY KEY,\\n\"",
          "2761:     \"  value ANY\\n\"",
          "2762:     \") WITHOUT ROWID;\",",
          "",
          "[Removed Lines]",
          "2751: #define BIND_PARAM_TABLE \"sqlite_parameters\"",
          "2759:     \"CREATE TABLE IF NOT EXISTS temp.\" BIND_PARAM_TABLE \"(\\n\"",
          "",
          "[Added Lines]",
          "2756:     \"CREATE TABLE IF NOT EXISTS temp.sqlite_parameters(\\n\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2785:   nVar = sqlite3_bind_parameter_count(pStmt);",
          "2788:                                     \"key\", 0, 0, 0, 0, 0)!=SQLITE_OK ){",
          "2790:   }",
          "2791:   rc = sqlite3_prepare_v2(pArg->db,",
          "2793:           \" WHERE key=?1\", -1, &pQ, 0);",
          "2794:   if( rc || pQ==0 ) return;",
          "2795:   for(i=1; i<=nVar; i++){",
          "",
          "[Removed Lines]",
          "2787:   if( sqlite3_table_column_metadata(pArg->db, \"TEMP\", BIND_PARAM_TABLE,",
          "2792:           \"SELECT value FROM temp.\" BIND_PARAM_TABLE",
          "",
          "[Added Lines]",
          "2784:   if( sqlite3_table_column_metadata(pArg->db, \"TEMP\", \"sqlite_parameters\",",
          "2789:           \"SELECT value FROM temp.sqlite_parameters\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7149:       int wrSchema = 0;",
          "7150:       sqlite3_db_config(p->db, SQLITE_DBCONFIG_WRITABLE_SCHEMA, -1, &wrSchema);",
          "7151:       sqlite3_db_config(p->db, SQLITE_DBCONFIG_WRITABLE_SCHEMA, 1, 0);",
          "7153:                    0, 0, 0);",
          "7154:       sqlite3_db_config(p->db, SQLITE_DBCONFIG_WRITABLE_SCHEMA, wrSchema, 0);",
          "7155:     }else",
          "",
          "[Removed Lines]",
          "7152:       sqlite3_exec(p->db, \"DROP TABLE IF EXISTS temp.\" BIND_PARAM_TABLE \";\",",
          "",
          "[Added Lines]",
          "7149:       sqlite3_exec(p->db, \"DROP TABLE IF EXISTS temp.sqlite_parameters;\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7163:       int len = 0;",
          "7164:       rx = sqlite3_prepare_v2(p->db,",
          "7165:              \"SELECT max(length(key)) \"",
          "7167:       if( rx==SQLITE_OK && sqlite3_step(pStmt)==SQLITE_ROW ){",
          "7168:         len = sqlite3_column_int(pStmt, 0);",
          "7169:         if( len>40 ) len = 40;",
          "",
          "[Removed Lines]",
          "7166:              \"FROM temp.\" BIND_PARAM_TABLE \";\", -1, &pStmt, 0);",
          "",
          "[Added Lines]",
          "7163:              \"FROM temp.sqlite_parameters;\", -1, &pStmt, 0);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7173:       if( len ){",
          "7174:         rx = sqlite3_prepare_v2(p->db,",
          "7175:              \"SELECT key, quote(value) \"",
          "7177:         while( sqlite3_step(pStmt)==SQLITE_ROW ){",
          "7178:           utf8_printf(p->out, \"%-*s %s\\n\", len, sqlite3_column_text(pStmt,0),",
          "7179:                       sqlite3_column_text(pStmt,1));",
          "",
          "[Removed Lines]",
          "7176:              \"FROM temp.\" BIND_PARAM_TABLE \";\", -1, &pStmt, 0);",
          "",
          "[Added Lines]",
          "7173:              \"FROM temp.sqlite_parameters;\", -1, &pStmt, 0);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7204:       const char *zValue = azArg[3];",
          "7205:       bind_table_init(p);",
          "7206:       zSql = sqlite3_mprintf(",
          "7208:                   \"VALUES(%Q,%s);\", zKey, zValue);",
          "7209:       if( zSql==0 ) shell_out_of_memory();",
          "7210:       pStmt = 0;",
          "",
          "[Removed Lines]",
          "7207:                   \"REPLACE INTO temp.\" BIND_PARAM_TABLE \"(key,value)\"",
          "",
          "[Added Lines]",
          "7204:                   \"REPLACE INTO temp.sqlite_parameters(key,value)\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7214:         sqlite3_finalize(pStmt);",
          "7215:         pStmt = 0;",
          "7216:         zSql = sqlite3_mprintf(",
          "7218:                    \"VALUES(%Q,%Q);\", zKey, zValue);",
          "7219:         if( zSql==0 ) shell_out_of_memory();",
          "7220:         rx = sqlite3_prepare_v2(p->db, zSql, -1, &pStmt, 0);",
          "",
          "[Removed Lines]",
          "7217:                    \"REPLACE INTO temp.\" BIND_PARAM_TABLE \"(key,value)\"",
          "",
          "[Added Lines]",
          "7214:                    \"REPLACE INTO temp.sqlite_parameters(key,value)\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7237:     if( nArg==3 && strcmp(azArg[1],\"unset\")==0 ){",
          "7238:       char *zSql = sqlite3_mprintf(",
          "7240:       if( zSql==0 ) shell_out_of_memory();",
          "7241:       sqlite3_exec(p->db, zSql, 0, 0, 0);",
          "7242:       sqlite3_free(zSql);",
          "",
          "[Removed Lines]",
          "7239:           \"DELETE FROM temp.\" BIND_PARAM_TABLE \" WHERE key=%Q\", azArg[2]);",
          "",
          "[Added Lines]",
          "7236:           \"DELETE FROM temp.sqlite_parameters WHERE key=%Q\", azArg[2]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "29e780068b7ffde99f105282fd170de8d94af9b3",
      "candidate_info": {
        "commit_hash": "29e780068b7ffde99f105282fd170de8d94af9b3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/29e780068b7ffde99f105282fd170de8d94af9b3",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vacuum.c"
        ],
        "message": "Make no atttempt to generate VDBE code for VACUUM after a syntax error.\n\nFossilOrigin-Name: 930842470da27d72650033ef2c1df413e70f7c40eb46f91027b35f5ee156af38",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vacuum.c||src/vacuum.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4258e42d92b0113ba59f407197fc24f21734900e5b02952deed07818be3e3e5d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vacuum.c||src/vacuum.c": [
          "File: src/vacuum.c -> src/vacuum.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:   Vdbe *v = sqlite3GetVdbe(pParse);",
          "107:   int iDb = 0;",
          "108:   if( v==0 ) goto build_vacuum_end;",
          "109:   if( pNm ){",
          "110: #ifndef SQLITE_BUG_COMPATIBLE_20160819",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109:   if( pParse->nErr ) goto build_vacuum_end;",
          "",
          "---------------"
        ]
      }
    }
  ]
}