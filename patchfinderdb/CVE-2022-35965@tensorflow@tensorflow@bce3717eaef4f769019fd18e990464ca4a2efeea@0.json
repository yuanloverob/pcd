{
  "cve_id": "CVE-2022-35965",
  "cve_desc": "TensorFlow is an open source platform for machine learning. If `LowerBound` or `UpperBound` is given an empty`sorted_inputs` input, it results in a `nullptr` dereference, leading to a segfault that can be used to trigger a denial of service attack. We have patched the issue in GitHub commit bce3717eaef4f769019fd18e990464ca4a2efeea. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "bce3717eaef4f769019fd18e990464ca4a2efeea",
  "patch_info": {
    "commit_hash": "bce3717eaef4f769019fd18e990464ca4a2efeea",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/bce3717eaef4f769019fd18e990464ca4a2efeea",
    "files": [
      "tensorflow/core/kernels/searchsorted_op.cc",
      "tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
    ],
    "message": "Fix empty inputs for Upper/LowerBound.\n\nFor upper/lower-bound searches via `tf.searchsorted`, if the sorted input is empty,\nthe previous code resulted in a `nullptr` dereference.  For emtpy inputs, any\nsorted search should return a value of 0, meaning that a value would be inserted\ninto the first slot of the array.\n\nPiperOrigin-RevId: 460971165",
    "before_after_code_files": [
      "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc",
      "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc": [
      "File: tensorflow/core/kernels/searchsorted_op.cc -> tensorflow/core/kernels/searchsorted_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: #include \"tensorflow/core/framework/register_types.h\"",
      "23: #include \"tensorflow/core/framework/tensor.h\"",
      "24: #include \"tensorflow/core/framework/tensor_shape.h\"",
      "25: #include \"tensorflow/core/lib/core/bits.h\"",
      "26: #include \"tensorflow/core/platform/logging.h\"",
      "27: #include \"tensorflow/core/platform/threadpool.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "25: #include \"tensorflow/core/kernels/fill_functor.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "129:     auto output = output_t->template flat<OutType>();",
      "130:     const auto sorted_inputs = sorted_inputs_t.template flat<T>();",
      "131:     const auto values = values_t.template flat<T>();",
      "132:     OP_REQUIRES_OK(",
      "133:         ctx, functor::UpperBoundFunctor<Device, T, OutType>::Compute(",
      "134:                  ctx, sorted_inputs, values, sorted_inputs_t.dim_size(0),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "135:     if (sorted_inputs.size() == 0) {",
      "136:       functor::SetZeroFunctor<Device, OutType> set_zero;",
      "137:       set_zero(ctx->eigen_device<Device>(), output);",
      "138:       return;",
      "139:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "174:     auto output = output_t->template flat<OutType>();",
      "175:     const auto sorted_inputs = sorted_inputs_t.template flat<T>();",
      "176:     const auto values = values_t.template flat<T>();",
      "177:     OP_REQUIRES_OK(",
      "178:         ctx, functor::LowerBoundFunctor<Device, T, OutType>::Compute(",
      "179:                  ctx, sorted_inputs, values, sorted_inputs_t.dim_size(0),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "188:     if (sorted_inputs.size() == 0) {",
      "189:       functor::SetZeroFunctor<Device, OutType> set_zero;",
      "190:       set_zero(ctx->eigen_device<Device>(), output);",
      "191:       return;",
      "192:     }",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py": [
      "File: tensorflow/python/kernel_tests/array_ops/array_ops_test.py -> tensorflow/python/kernel_tests/array_ops/array_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "2060:                 side=side,",
      "2061:                 out_type=dtype), array_ops.zeros([2, 0], dtype))",
      "2063:   def testInt64(self):",
      "2065:     @def_function.function",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2063:   def testZeroInputSize(self):",
      "2064:     dtype = dtypes.int32",
      "2065:     for side in (\"left\", \"right\"):",
      "2066:       with self.subTest(side=side):",
      "2067:         self.assertAllEqual(",
      "2068:             array_ops.searchsorted(",
      "2069:                 array_ops.ones([2, 0]),",
      "2070:                 array_ops.ones([2, 3]),",
      "2071:                 side=side,",
      "2072:                 out_type=dtype), array_ops.zeros([2, 3], dtype))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f1a74b3fcfd6ad99bb6a3a2e70abeea47e609d77",
      "candidate_info": {
        "commit_hash": "f1a74b3fcfd6ad99bb6a3a2e70abeea47e609d77",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f1a74b3fcfd6ad99bb6a3a2e70abeea47e609d77",
        "files": [
          "tensorflow/core/kernels/searchsorted_op.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ],
        "message": "Fix empty inputs for Upper/LowerBound.\n\nFor upper/lower-bound searches via `tf.searchsorted`, if the sorted input is empty,\nthe previous code resulted in a `nullptr` dereference.  For emtpy inputs, any\nsorted search should return a value of 0, meaning that a value would be inserted\ninto the first slot of the array.\n\nPiperOrigin-RevId: 460971165",
        "before_after_code_files": [
          "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc": [
          "File: tensorflow/core/kernels/searchsorted_op.cc -> tensorflow/core/kernels/searchsorted_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"tensorflow/core/framework/register_types.h\"",
          "23: #include \"tensorflow/core/framework/tensor.h\"",
          "24: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "25: #include \"tensorflow/core/lib/core/bits.h\"",
          "26: #include \"tensorflow/core/platform/logging.h\"",
          "27: #include \"tensorflow/core/platform/threadpool.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #include \"tensorflow/core/kernels/fill_functor.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129:     auto output = output_t->template flat<OutType>();",
          "130:     const auto sorted_inputs = sorted_inputs_t.template flat<T>();",
          "131:     const auto values = values_t.template flat<T>();",
          "132:     OP_REQUIRES_OK(",
          "133:         ctx, functor::UpperBoundFunctor<Device, T, OutType>::Compute(",
          "134:                  ctx, sorted_inputs, values, sorted_inputs_t.dim_size(0),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:     if (sorted_inputs.size() == 0) {",
          "136:       functor::SetZeroFunctor<Device, OutType> set_zero;",
          "137:       set_zero(ctx->eigen_device<Device>(), output);",
          "138:       return;",
          "139:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "174:     auto output = output_t->template flat<OutType>();",
          "175:     const auto sorted_inputs = sorted_inputs_t.template flat<T>();",
          "176:     const auto values = values_t.template flat<T>();",
          "177:     OP_REQUIRES_OK(",
          "178:         ctx, functor::LowerBoundFunctor<Device, T, OutType>::Compute(",
          "179:                  ctx, sorted_inputs, values, sorted_inputs_t.dim_size(0),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "188:     if (sorted_inputs.size() == 0) {",
          "189:       functor::SetZeroFunctor<Device, OutType> set_zero;",
          "190:       set_zero(ctx->eigen_device<Device>(), output);",
          "191:       return;",
          "192:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/array_ops_test.py -> tensorflow/python/kernel_tests/array_ops/array_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1996:                 side=side,",
          "1997:                 out_type=dtype), array_ops.zeros([2, 0], dtype))",
          "1999:   def testInt64(self):",
          "2001:     @def_function.function",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1999:   def testZeroInputSize(self):",
          "2000:     dtype = dtypes.int32",
          "2001:     for side in (\"left\", \"right\"):",
          "2002:       with self.subTest(side=side):",
          "2003:         self.assertAllEqual(",
          "2004:             array_ops.searchsorted(",
          "2005:                 array_ops.ones([2, 0]),",
          "2006:                 array_ops.ones([2, 3]),",
          "2007:                 side=side,",
          "2008:                 out_type=dtype), array_ops.zeros([2, 3], dtype))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e642bcc4f8186a60b3eff8830444f02d2e949983",
      "candidate_info": {
        "commit_hash": "e642bcc4f8186a60b3eff8830444f02d2e949983",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/e642bcc4f8186a60b3eff8830444f02d2e949983",
        "files": [
          "tensorflow/core/kernels/searchsorted_op.cc",
          "tensorflow/python/kernel_tests/array_ops_test.py"
        ],
        "message": "Fix empty inputs for Upper/LowerBound.\n\nFor upper/lower-bound searches via `tf.searchsorted`, if the sorted input is empty,\nthe previous code resulted in a `nullptr` dereference.  For emtpy inputs, any\nsorted search should return a value of 0, meaning that a value would be inserted\ninto the first slot of the array.\n\nPiperOrigin-RevId: 460971165",
        "before_after_code_files": [
          "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc",
          "tensorflow/python/kernel_tests/array_ops_test.py||tensorflow/python/kernel_tests/array_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc": [
          "File: tensorflow/core/kernels/searchsorted_op.cc -> tensorflow/core/kernels/searchsorted_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"tensorflow/core/framework/register_types.h\"",
          "23: #include \"tensorflow/core/framework/tensor.h\"",
          "24: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "25: #include \"tensorflow/core/platform/logging.h\"",
          "26: #include \"tensorflow/core/platform/types.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #include \"tensorflow/core/kernels/fill_functor.h\"",
          "26: #include \"tensorflow/core/lib/core/bits.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:     auto output = output_t->template flat<OutType>();",
          "116:     const auto sorted_inputs = sorted_inputs_t.template flat<T>();",
          "117:     const auto values = values_t.template flat<T>();",
          "118:     OP_REQUIRES_OK(",
          "119:         ctx, functor::UpperBoundFunctor<Device, T, OutType>::Compute(",
          "120:                  ctx, sorted_inputs, values, sorted_inputs_t.dim_size(0),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122:     if (sorted_inputs.size() == 0) {",
          "123:       functor::SetZeroFunctor<Device, OutType> set_zero;",
          "124:       set_zero(ctx->eigen_device<Device>(), output);",
          "125:       return;",
          "126:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "160:     auto output = output_t->template flat<OutType>();",
          "161:     const auto sorted_inputs = sorted_inputs_t.template flat<T>();",
          "162:     const auto values = values_t.template flat<T>();",
          "163:     OP_REQUIRES_OK(",
          "164:         ctx, functor::LowerBoundFunctor<Device, T, OutType>::Compute(",
          "165:                  ctx, sorted_inputs, values, sorted_inputs_t.dim_size(0),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:     if (sorted_inputs.size() == 0) {",
          "176:       functor::SetZeroFunctor<Device, OutType> set_zero;",
          "177:       set_zero(ctx->eigen_device<Device>(), output);",
          "178:       return;",
          "179:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops_test.py||tensorflow/python/kernel_tests/array_ops_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops_test.py -> tensorflow/python/kernel_tests/array_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1959:                 side=side,",
          "1960:                 out_type=dtype), array_ops.zeros([2, 0], dtype))",
          "1963: class BatchGatherNdTest(test_util.TensorFlowTestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1962:   def testZeroInputSize(self):",
          "1963:     dtype = dtypes.int32",
          "1964:     for side in (\"left\", \"right\"):",
          "1965:       with self.subTest(side=side):",
          "1966:         self.assertAllEqual(",
          "1967:             array_ops.searchsorted(",
          "1968:                 array_ops.ones([2, 0]),",
          "1969:                 array_ops.ones([2, 3]),",
          "1970:                 side=side,",
          "1971:                 out_type=dtype), array_ops.zeros([2, 3], dtype))",
          "1973:   def testInt64(self):",
          "1975:     @def_function.function",
          "1976:     def g():",
          "1977:       x = random_ops.random_normal(shape=[int(1e10)])",
          "1978:       y = array_ops.ones(shape=[int(1e10)])",
          "1979:       return array_ops.searchsorted(x, y, out_type=dtypes.int64)",
          "1981:     _ = g.get_concrete_function()",
          "1983:   def testInt64UnspecifiedOutType(self):",
          "1985:     @def_function.function",
          "1986:     def g():",
          "1987:       x = random_ops.random_normal(shape=[int(1e10)])",
          "1988:       y = array_ops.ones(shape=[int(1e10)])",
          "1989:       return array_ops.searchsorted(x, y)",
          "1991:     _ = g.get_concrete_function()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b3f2fb37457ff62340293b0813714b09eebcab0",
      "candidate_info": {
        "commit_hash": "9b3f2fb37457ff62340293b0813714b09eebcab0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/9b3f2fb37457ff62340293b0813714b09eebcab0",
        "files": [
          "tensorflow/core/kernels/searchsorted_op.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ],
        "message": "Fix empty inputs for Upper/LowerBound.\n\nFor upper/lower-bound searches via `tf.searchsorted`, if the sorted input is empty,\nthe previous code resulted in a `nullptr` dereference.  For emtpy inputs, any\nsorted search should return a value of 0, meaning that a value would be inserted\ninto the first slot of the array.\n\nPiperOrigin-RevId: 460971165",
        "before_after_code_files": [
          "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/searchsorted_op.cc||tensorflow/core/kernels/searchsorted_op.cc": [
          "File: tensorflow/core/kernels/searchsorted_op.cc -> tensorflow/core/kernels/searchsorted_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"tensorflow/core/framework/register_types.h\"",
          "23: #include \"tensorflow/core/framework/tensor.h\"",
          "24: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "25: #include \"tensorflow/core/platform/logging.h\"",
          "26: #include \"tensorflow/core/platform/types.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #include \"tensorflow/core/kernels/fill_functor.h\"",
          "26: #include \"tensorflow/core/lib/core/bits.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:     auto output = output_t->template flat<OutType>();",
          "116:     const auto sorted_inputs = sorted_inputs_t.template flat<T>();",
          "117:     const auto values = values_t.template flat<T>();",
          "118:     OP_REQUIRES_OK(",
          "119:         ctx, functor::UpperBoundFunctor<Device, T, OutType>::Compute(",
          "120:                  ctx, sorted_inputs, values, sorted_inputs_t.dim_size(0),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122:     if (sorted_inputs.size() == 0) {",
          "123:       functor::SetZeroFunctor<Device, OutType> set_zero;",
          "124:       set_zero(ctx->eigen_device<Device>(), output);",
          "125:       return;",
          "126:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "160:     auto output = output_t->template flat<OutType>();",
          "161:     const auto sorted_inputs = sorted_inputs_t.template flat<T>();",
          "162:     const auto values = values_t.template flat<T>();",
          "163:     OP_REQUIRES_OK(",
          "164:         ctx, functor::LowerBoundFunctor<Device, T, OutType>::Compute(",
          "165:                  ctx, sorted_inputs, values, sorted_inputs_t.dim_size(0),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:     if (sorted_inputs.size() == 0) {",
          "176:       functor::SetZeroFunctor<Device, OutType> set_zero;",
          "177:       set_zero(ctx->eigen_device<Device>(), output);",
          "178:       return;",
          "179:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/array_ops_test.py -> tensorflow/python/kernel_tests/array_ops/array_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1965:                 side=side,",
          "1966:                 out_type=dtype), array_ops.zeros([2, 0], dtype))",
          "1968:   def testInt64(self):",
          "1970:     @def_function.function",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1968:   def testZeroInputSize(self):",
          "1969:     dtype = dtypes.int32",
          "1970:     for side in (\"left\", \"right\"):",
          "1971:       with self.subTest(side=side):",
          "1972:         self.assertAllEqual(",
          "1973:             array_ops.searchsorted(",
          "1974:                 array_ops.ones([2, 0]),",
          "1975:                 array_ops.ones([2, 3]),",
          "1976:                 side=side,",
          "1977:                 out_type=dtype), array_ops.zeros([2, 3], dtype))",
          "",
          "---------------"
        ]
      }
    }
  ]
}