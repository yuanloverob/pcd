{
  "cve_id": "CVE-2019-19242",
  "cve_desc": "SQLite 3.30.1 mishandles pExpr->y.pTab, as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.",
  "repo": "sqlite/sqlite",
  "patch_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
  "patch_info": {
    "commit_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/wherecode.c",
      "test/gencol1.test"
    ],
    "message": "Fix a problem that comes up when using generated columns that evaluate to a constant in an index and then making use of that index in a join.\n\nFossilOrigin-Name: 8b12e95fec7ce6e0de82a04ca3dfcf1a8e62e233b7382aa28a8a9be6e862b1af",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/wherecode.c||src/wherecode.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 2d53a30cc23e53033af8e8666457654db5dcc453ed6cd176ce1d0bff4f528159",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3607:         int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);",
      "3609:         if( aff>SQLITE_AFF_BLOB ){",
      "3610:           static const char zAff[] = \"B\\000C\\000D\\000E\";",
      "3611:           assert( SQLITE_AFF_BLOB=='A' );",
      "",
      "[Removed Lines]",
      "3608:         int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "",
      "[Added Lines]",
      "3608:         int aff;",
      "3609:         if( pExpr->y.pTab ){",
      "3610:           aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "3611:         }else{",
      "3612:           aff = pExpr->affExpr;",
      "3613:         }",
      "",
      "---------------"
    ],
    "src/wherecode.c||src/wherecode.c": [
      "File: src/wherecode.c -> src/wherecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1141:   if( pExpr->op==TK_COLUMN ){",
      "1142:     IdxExprTrans *pX = p->u.pIdxTrans;",
      "1143:     if( pExpr->iTable==pX->iTabCur && pExpr->iColumn==pX->iTabCol ){",
      "1144:       pExpr->iTable = pX->iIdxCur;",
      "1145:       pExpr->iColumn = pX->iIdxCol;",
      "1146:       pExpr->y.pTab = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1144:       assert( pExpr->y.pTab!=0 );",
      "1145:       pExpr->affExpr = sqlite3TableColumnAffinity(pExpr->y.pTab,pExpr->iColumn);",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:   UPDATE t0 SET c0 = NULL;",
      "244: } {1 {generated column loop on \"c2\"}}",
      "247: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "246: # 2019-11-21 Problems in the new generated column logic",
      "247: # reported by Yongheng Chen and Rui Zhong",
      "248: do_execsql_test gencol1-9.10 {",
      "249:   DROP TABLE IF EXISTS t1;",
      "250:   DROP TABLE IF EXISTS t2;",
      "251:   CREATE TABLE t1(aa , bb AS (17) UNIQUE);",
      "252:   INSERT INTO t1 VALUES(17);",
      "253:   CREATE TABLE t2(cc);",
      "254:   INSERT INTO t2 VALUES(41);",
      "255:   SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;",
      "256: } {41 17 17}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e464802d49013ea759c30be7106976cbc2cde1e5",
      "candidate_info": {
        "commit_hash": "e464802d49013ea759c30be7106976cbc2cde1e5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e464802d49013ea759c30be7106976cbc2cde1e5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeblob.c",
          "test/close.test"
        ],
        "message": "Fix a problem that could cause a crash if a blob handle were closed after the associated database handle was closed using sqlite3_close_v2().\n\nFossilOrigin-Name: 52f463d29407fad691c42b13462880e7605603c9be9f480d18e953a0ef78149a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeblob.c||src/vdbeblob.c",
          "test/close.test||test/close.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0fff105a3e501fd91877d67761459eb0323e6cf79916242027cce0d05697f554",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeblob.c||src/vdbeblob.c": [
          "File: src/vdbeblob.c -> src/vdbeblob.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "355:   sqlite3 *db;",
          "357:   if( p ){",
          "358:     db = p->db;",
          "359:     sqlite3_mutex_enter(db->mutex);",
          "361:     sqlite3DbFree(db, p);",
          "362:     sqlite3_mutex_leave(db->mutex);",
          "363:   }else{",
          "364:     rc = SQLITE_OK;",
          "365:   }",
          "",
          "[Removed Lines]",
          "360:     rc = sqlite3_finalize(p->pStmt);",
          "",
          "[Added Lines]",
          "358:     sqlite3_stmt *pStmt = p->pStmt;",
          "363:     rc = sqlite3_finalize(pStmt);",
          "",
          "---------------"
        ],
        "test/close.test||test/close.test": [
          "File: test/close.test -> test/close.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:   sqlite3_finalize $STMT",
          "80: } {SQLITE_OK}",
          "82: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82: do_test 1.5 {",
          "83:   set DB [sqlite3_open test.db]",
          "84:   sqlite3_blob_open $DB main t1 x 2 0 BLOB",
          "85:   sqlite3_close_v2 $DB",
          "86:   sqlite3_blob_close $BLOB",
          "87: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38a59af41766695f2e1aa6581781bb222e56a8b9",
      "candidate_info": {
        "commit_hash": "38a59af41766695f2e1aa6581781bb222e56a8b9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/38a59af41766695f2e1aa6581781bb222e56a8b9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/util.c"
        ],
        "message": "Use \"long double\" literals to initialize an array of \"long double\" objects.\n\nFossilOrigin-Name: 2e2ebad3ab636c4c65814ad41d417b105be8e254d609d0e08fbba4c5bd107bf3",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/util.c||src/util.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b84e7057c05338347b4267f7ccc1d7b9b6d4e9a941ce8b76bf2c27c26772000c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "359: static LONGDOUBLE_TYPE sqlite3Pow10(int E){",
          "360: #if defined(_MSC_VER)",
          "361:   static const LONGDOUBLE_TYPE x[] = {",
          "371:   };",
          "372:   LONGDOUBLE_TYPE r = 1.0;",
          "373:   int i;",
          "",
          "[Removed Lines]",
          "362:     1.0e+001,",
          "363:     1.0e+002,",
          "364:     1.0e+004,",
          "365:     1.0e+008,",
          "366:     1.0e+016,",
          "367:     1.0e+032,",
          "368:     1.0e+064,",
          "369:     1.0e+128,",
          "370:     1.0e+256",
          "",
          "[Added Lines]",
          "362:     1.0e+001L,",
          "363:     1.0e+002L,",
          "364:     1.0e+004L,",
          "365:     1.0e+008L,",
          "366:     1.0e+016L,",
          "367:     1.0e+032L,",
          "368:     1.0e+064L,",
          "369:     1.0e+128L,",
          "370:     1.0e+256L",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a015d3c82f295994186f1b95b1f0004ad2004d03",
      "candidate_info": {
        "commit_hash": "a015d3c82f295994186f1b95b1f0004ad2004d03",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a015d3c82f295994186f1b95b1f0004ad2004d03",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix a problem in the legacy \".explain on\" formatting when it is used on a query with more than 8 output columns.\n\nFossilOrigin-Name: 070b49825c5f87cce15be4b758f0dfdd65226ec379465ca527a18706a1f3b8f4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 346bdd49fb93aa58e8bd14250974d8c0c32cc7e8317c8b12da1fa44db10d8a3a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1855:       const int *colWidth;",
          "1856:       int showHdr;",
          "1857:       char *rowSep;",
          "1858:       if( p->cMode==MODE_Column ){",
          "1859:         colWidth = p->colWidth;",
          "1860:         showHdr = p->showHeader;",
          "1861:         rowSep = p->rowSeparator;",
          "1862:       }else{",
          "1863:         colWidth = aExplainWidths;",
          "1864:         showHdr = 1;",
          "1865:         rowSep = SEP_Row;",
          "1866:       }",
          "1867:       if( p->cnt++==0 ){",
          "1868:         for(i=0; i<nArg; i++){",
          "1869:           int w, n;",
          "1871:             w = colWidth[i];",
          "1872:           }else{",
          "1873:             w = 0;",
          "",
          "[Removed Lines]",
          "1870:           if( i<ArraySize(p->colWidth) ){",
          "",
          "[Added Lines]",
          "1858:       int nWidth;",
          "1861:         nWidth = ArraySize(p->colWidth);",
          "1866:         nWidth = ArraySize(aExplainWidths);",
          "1873:           if( i<nWidth ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dfe3b583159900285febfeb141b6e75c3fa1411e",
      "candidate_info": {
        "commit_hash": "dfe3b583159900285febfeb141b6e75c3fa1411e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dfe3b583159900285febfeb141b6e75c3fa1411e",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Fix a typo in a comment used to generate documentation.  No functional changes.\n\nFossilOrigin-Name: ccc4f7424bc8f37c168333091dd9e3d6f80ccff9e2b06f182df65be59a7e3349",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0888fc2e881d56ccd5222383d1a08cdf16fbd15c40da7ebfc14346be69ffb26a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c"
        ]
      }
    },
    {
      "candidate_hash": "f467744d5fc68f64f051d7e3a8ba8e4a67b006bb",
      "candidate_info": {
        "commit_hash": "f467744d5fc68f64f051d7e3a8ba8e4a67b006bb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f467744d5fc68f64f051d7e3a8ba8e4a67b006bb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/parse.y",
          "test/altertab3.test"
        ],
        "message": "Fix a problem with running ALTER TABLE on a schema that contains expressions of the type \"col IN ()\" (empty set on RHS of IN operator).\n\nFossilOrigin-Name: 2d9cd06715092c312c8c0ec392696a0e90ed090b074e2082e0b830f1399aa941",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 008112bcef561a8a3ebfb007cbef36cbc0071f547e6ebdba3d3bbb39e2c48c7a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1171:     }else if( Y->nExpr==1 ){",
          "",
          "[Removed Lines]",
          "1169:       sqlite3ExprDelete(pParse->db, A);",
          "1170:       A = sqlite3ExprAlloc(pParse->db, TK_INTEGER,&sqlite3IntTokens[N],1);",
          "",
          "[Added Lines]",
          "1169:       if( IN_RENAME_OBJECT==0 ){",
          "1170:         sqlite3ExprDelete(pParse->db, A);",
          "1171:         A = sqlite3ExprAlloc(pParse->db, TK_INTEGER,&sqlite3IntTokens[N],1);",
          "1172:       }",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:     SELECT a,b,c FROM \"t1x\" WHERE b>='d' ORDER BY name;",
          "64:     SELECT new.c;",
          "65:   END}}",
          "66: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67: #-------------------------------------------------------------------------",
          "68: reset_db",
          "69: do_execsql_test 3.0 {",
          "70:   CREATE TABLE t1(a, b, c, d);",
          "71:   CREATE VIEW v1 AS SELECT * FROM t1 WHERE a=1 OR (b IN ());",
          "72: }",
          "74: do_execsql_test 3.1 {",
          "75:   ALTER TABLE t1 RENAME b TO bbb;",
          "76: }",
          "78: do_execsql_test 3.2 {",
          "79:   SELECT sql FROM sqlite_master WHERE name = 'v1'",
          "80: } {{CREATE VIEW v1 AS SELECT * FROM t1 WHERE a=1 OR (bbb IN ())}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}