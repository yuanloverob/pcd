{
  "cve_id": "CVE-2013-1416",
  "cve_desc": "The prep_reprocess_req function in do_tgs_req.c in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.10.5 does not properly perform service-principal realm referral, which allows remote authenticated users to cause a denial of service (NULL pointer dereference and daemon crash) via a crafted TGS-REQ request.",
  "repo": "krb5/krb5",
  "patch_hash": "8ee70ec63931d1e38567905387ab9b1d45734d81",
  "patch_info": {
    "commit_hash": "8ee70ec63931d1e38567905387ab9b1d45734d81",
    "repo": "krb5/krb5",
    "commit_url": "https://github.com/krb5/krb5/commit/8ee70ec63931d1e38567905387ab9b1d45734d81",
    "files": [
      "src/kdc/do_tgs_req.c"
    ],
    "message": "KDC TGS-REQ null deref [CVE-2013-1416]\n\nBy sending an unusual but valid TGS-REQ, an authenticated remote\nattacker can cause the KDC process to crash by dereferencing a null\npointer.\n\nprep_reprocess_req() can cause a null pointer dereference when\nprocessing a service principal name.  Code in this function can\ninappropriately pass a null pointer to strlcpy().  Unmodified client\nsoftware can trivially trigger this vulnerability, but the attacker\nmust have already authenticated and received a valid Kerberos ticket.\n\nThe vulnerable code was introduced by the implementation of new\nservice principal realm referral functionality in krb5-1.7, but was\ncorrected as a side effect of the KDC refactoring in krb5-1.11.\n\nCVSSv2 vector: AV:N/AC:L/Au:S/C:N/I:N/A:C/E:H/RL:O/RC:C\n\nticket: 7600 (new)\nversion_fixed: 1.10.5\nstatus: resolved",
    "before_after_code_files": [
      "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c"
    ]
  },
  "patch_diff": {
    "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c": [
      "File: src/kdc/do_tgs_req.c -> src/kdc/do_tgs_req.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1141:             retval = ENOMEM;",
      "1142:             goto cleanup;",
      "1143:         }",
      "1146:         if ((krb5_princ_type(kdc_context, request->server) == KRB5_NT_SRV_HST ||",
      "1147:              krb5_princ_type(kdc_context, request->server) == KRB5_NT_SRV_INST ||",
      "",
      "[Removed Lines]",
      "1144:         strlcpy(comp1_str,comp1->data,comp1->length+1);",
      "",
      "[Added Lines]",
      "1144:         if (comp1->data != NULL)",
      "1145:             memcpy(comp1_str, comp1->data, comp1->length);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1164:                 retval = ENOMEM;",
      "1165:                 goto cleanup;",
      "1166:             }",
      "1168:             retval = krb5int_get_domain_realm_mapping(kdc_context, temp_buf, &realms);",
      "1169:             free(temp_buf);",
      "1170:             if (retval) {",
      "",
      "[Removed Lines]",
      "1167:             strlcpy(temp_buf, comp2->data,comp2->length+1);",
      "",
      "[Added Lines]",
      "1168:             if (comp2->data != NULL)",
      "1169:                 memcpy(temp_buf, comp2->data, comp2->length);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9fd9edbf12c4203cb2690c51c7ddea006e3215a5",
      "candidate_info": {
        "commit_hash": "9fd9edbf12c4203cb2690c51c7ddea006e3215a5",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/9fd9edbf12c4203cb2690c51c7ddea006e3215a5",
        "files": [
          "src/kdc/do_tgs_req.c"
        ],
        "message": "KDC TGS-REQ null deref [CVE-2013-1416]\n\nBy sending an unusual but valid TGS-REQ, an authenticated remote\nattacker can cause the KDC process to crash by dereferencing a null\npointer.\n\nprep_reprocess_req() can cause a null pointer dereference when\nprocessing a service principal name.  Code in this function can\ninappropriately pass a null pointer to strlcpy().  Unmodified client\nsoftware can trivially trigger this vulnerability, but the attacker\nmust have already authenticated and received a valid Kerberos ticket.\n\nThe vulnerable code was introduced by the implementation of new\nservice principal realm referral functionality in krb5-1.7, but was\ncorrected as a side effect of the KDC refactoring in krb5-1.11.\n\nCVSSv2 vector: AV:N/AC:L/Au:S/C:N/I:N/A:C/E:H/RL:O/RC:C\n\n(cherry picked from commit 8ee70ec63931d1e38567905387ab9b1d45734d81)\n\nticket: 7622 (new)\nversion_fixed: 1.9.5\nstatus: resolved",
        "before_after_code_files": [
          "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c"
          ],
          "candidate": [
            "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c"
          ]
        }
      },
      "candidate_diff": {
        "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c": [
          "File: src/kdc/do_tgs_req.c -> src/kdc/do_tgs_req.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1137:             retval = ENOMEM;",
          "1138:             goto cleanup;",
          "1139:         }",
          "1142:         if ((krb5_princ_type(kdc_context, request->server) == KRB5_NT_SRV_HST ||",
          "1143:              krb5_princ_type(kdc_context, request->server) == KRB5_NT_SRV_INST ||",
          "",
          "[Removed Lines]",
          "1140:         strlcpy(comp1_str,comp1->data,comp1->length+1);",
          "",
          "[Added Lines]",
          "1140:         if (comp1->data != NULL)",
          "1141:             memcpy(comp1_str, comp1->data, comp1->length);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1160:                 retval = ENOMEM;",
          "1161:                 goto cleanup;",
          "1162:             }",
          "1164:             retval = krb5int_get_domain_realm_mapping(kdc_context, temp_buf, &realms);",
          "1165:             free(temp_buf);",
          "1166:             if (retval) {",
          "",
          "[Removed Lines]",
          "1163:             strlcpy(temp_buf, comp2->data,comp2->length+1);",
          "",
          "[Added Lines]",
          "1164:             if (comp2->data != NULL)",
          "1165:                 memcpy(temp_buf, comp2->data, comp2->length);",
          "",
          "---------------"
        ]
      }
    }
  ]
}