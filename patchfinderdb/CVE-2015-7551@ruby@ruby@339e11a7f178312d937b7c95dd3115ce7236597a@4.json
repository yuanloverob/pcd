{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "00a360a93dc9ac5e32cfa56600b2a10ea42c685a",
      "candidate_info": {
        "commit_hash": "00a360a93dc9ac5e32cfa56600b2a10ea42c685a",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/00a360a93dc9ac5e32cfa56600b2a10ea42c685a",
        "files": [
          "ChangeLog",
          "lib/resolv.rb",
          "test/resolv/test_dns.rb",
          "version.h"
        ],
        "message": "merge revision(s) r48534: [Backport #10412]\n\n\t* lib/resolv.rb: fall back if canonicalization fails.\n\t  Thanks Vit Ondruch for the patch!  [ruby-core:65836]\n\n\t* test/resolv/test_dns.rb: test for patch\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49471 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/resolv.rb||lib/resolv.rb",
          "test/resolv/test_dns.rb||test/resolv/test_dns.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/resolv.rb||lib/resolv.rb": [
          "File: lib/resolv.rb -> lib/resolv.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1070:             candidates = []",
          "1071:           end",
          "1072:           candidates.concat(@search.map {|domain| Name.new(name.to_a + domain)})",
          "1073:         end",
          "1074:         return candidates",
          "1075:       end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1073:           fname = Name.create(\"#{name}.\")",
          "1074:           if !candidates.include?(fname)",
          "1075:             candidates << fname",
          "1076:           end",
          "",
          "---------------"
        ],
        "test/resolv/test_dns.rb||test/resolv/test_dns.rb": [
          "File: test/resolv/test_dns.rb -> test/resolv/test_dns.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     end",
          "24:   end",
          "26:   def test_query_ipv4_address",
          "27:     begin",
          "28:       OpenSSL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:   # [ruby-core:65836]",
          "27:   def test_resolve_with_2_ndots",
          "28:     conf = Resolv::DNS::Config.new :nameserver => ['127.0.0.1'], :ndots => 2",
          "29:     assert conf.single?",
          "31:     candidates = []",
          "32:     conf.resolv('example.com') { |candidate, *args|",
          "33:       candidates << candidate",
          "34:       raise Resolv::DNS::Config::NXDomain",
          "35:     }",
          "36:     n = Resolv::DNS::Name.create 'example.com.'",
          "37:     assert_equal n, candidates.last",
          "38:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-02-02\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 287",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 288",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "18d73ae8151ff259fe8e4aac8f228173dbe57924",
      "candidate_info": {
        "commit_hash": "18d73ae8151ff259fe8e4aac8f228173dbe57924",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/18d73ae8151ff259fe8e4aac8f228173dbe57924",
        "files": [
          "ChangeLog",
          "ext/date/extconf.rb",
          "version.h"
        ],
        "message": "merge revision(s) 50104,50105: [Backport #10906]\n\n\t* ext/date/extconf.rb: try_cflags(\"-std=iso9899:1999\") [Bug #10906]\n\t  ruby itself (including numeric.c) is built with strict compile\n\t  options including -std=iso9899:1999, but ext/date is not.\n\t  By the way -std=iso9899:1999 is not only a warning option but also\n\t  changes behavior like MACRO definitions for example INFINITY.\n\t  gcc on Solaris affect this.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@52645 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/date/extconf.rb||ext/date/extconf.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/date/extconf.rb||ext/date/extconf.rb": [
          "File: ext/date/extconf.rb -> ext/date/extconf.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: require 'mkmf'",
          "2: create_makefile('date_core')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: if try_cflags(\"-std=iso9899:1999\")",
          "3:   $CFLAGS += \" \" << \"-std=iso9899:1999\"",
          "4: end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-11-18\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 420",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 421",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "99fdb0a71b54fbea4ded06b99cb8c003c1d9552e",
      "candidate_info": {
        "commit_hash": "99fdb0a71b54fbea4ded06b99cb8c003c1d9552e",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/99fdb0a71b54fbea4ded06b99cb8c003c1d9552e",
        "files": [
          "ChangeLog",
          "thread_pthread.c",
          "version.h"
        ],
        "message": "merge revision(s) 49452: [Backport #10813]\n\n\t* thread_pthread.c (reserve_stack): fix intermittent SIGBUS on\n\t  Linux, by reserving the stack virtual address space at process\n\t  start up so that it will not clash with the heap space.\n\t  [Fix GH-822]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50289 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "thread_pthread.c||thread_pthread.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "thread_pthread.c||thread_pthread.c": [
          "File: thread_pthread.c -> thread_pthread.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "648:     }",
          "649: }",
          "651: #undef ruby_init_stack",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "651: #ifdef __linux__",
          "652: static __attribute__((noinline)) void",
          "653: reserve_stack(volatile char *limit, size_t size)",
          "654: {",
          "655: # ifdef C_ALLOCA",
          "656: #   error needs alloca()",
          "657: # endif",
          "658:     struct rlimit rl;",
          "659:     volatile char buf[0x100];",
          "660:     STACK_GROW_DIR_DETECTION;",
          "662:     if (!getrlimit(RLIMIT_STACK, &rl) && rl.rlim_cur == RLIM_INFINITY)",
          "663:  return;",
          "666:     if (IS_STACK_DIR_UPPER()) {",
          "667:  const volatile char *end = buf + sizeof(buf);",
          "668:  limit += size;",
          "669:  if (limit > end) {",
          "670:      size = limit - end;",
          "671:      limit = alloca(size);",
          "672:      limit[size-1] = 0;",
          "673:  }",
          "674:     }",
          "675:     else {",
          "676:  limit -= size;",
          "677:  if (buf > limit) {",
          "678:      limit = alloca(buf - limit);",
          "679:      limit[0] = 0;",
          "680:  }",
          "681:     }",
          "682: }",
          "683: #else",
          "684: # define reserve_stack(limit, size) ((void)(limit), (void)(size))",
          "685: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "669:  if (get_main_stack(&stackaddr, &size) == 0) {",
          "670:      native_main_thread.stack_maxsize = size;",
          "671:      native_main_thread.stack_start = stackaddr;",
          "672:      return;",
          "673:  }",
          "674:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "708:      reserve_stack(stackaddr, size);",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-04-13\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 4",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 332",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 333",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "40705c2be1d0fee20f7cce0e0105aabd075b99ed",
      "candidate_info": {
        "commit_hash": "40705c2be1d0fee20f7cce0e0105aabd075b99ed",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/40705c2be1d0fee20f7cce0e0105aabd075b99ed",
        "files": [
          "test/openssl/test_cipher.rb",
          "version.h"
        ],
        "message": "merge revision(s) r49575,r49579: [Backport #10839]\n\n\ttest_cipher.rb: show cipher name\n\n\t* test/openssl/test_cipher.rb (test_ciphers): show wrap mode\n  cipher name, which does not end with \"wrap\".\n  http://rubyci.blob.core.windows.net/fedora21/ruby-trunk/log/20150212T061502Z.fail.html.gz\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49588 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/openssl/test_cipher.rb||test/openssl/test_cipher.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/openssl/test_cipher.rb||test/openssl/test_cipher.rb": [
          "File: test/openssl/test_cipher.rb -> test/openssl/test_cipher.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:         begin",
          "108:           assert_kind_of(OpenSSL::Cipher::Cipher, OpenSSL::Cipher::Cipher.new(name))",
          "109:         rescue OpenSSL::Cipher::CipherError => e",
          "111:           raise",
          "112:         end",
          "113:       }",
          "",
          "[Removed Lines]",
          "110:           next if /wrap\\z/ =~ name and e.message == 'wrap mode not allowed'",
          "",
          "[Added Lines]",
          "110:           next if /wrap/ =~ name and e.message == 'wrap mode not allowed'",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 2",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-02-09\"",
          "3: #define RUBY_PATCHLEVEL 291",
          "7: #define RUBY_RELEASE_DAY 9",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-02-13\"",
          "3: #define RUBY_PATCHLEVEL 292",
          "7: #define RUBY_RELEASE_DAY 13",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba3b4e0a69e27f032179297cc9aed19472426558",
      "candidate_info": {
        "commit_hash": "ba3b4e0a69e27f032179297cc9aed19472426558",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ba3b4e0a69e27f032179297cc9aed19472426558",
        "files": [
          "test/ruby/test_io.rb",
          "test/ruby/test_process.rb",
          "version.h"
        ],
        "message": "merge revision(s) 52229,52273,52277,52357: [Backport #11613]\n\n\tAdd rlimit_nproc to avoid to create many process [Bug #11613]\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@52358 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_io.rb||test/ruby/test_io.rb",
          "test/ruby/test_process.rb||test/ruby/test_process.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_io.rb||test/ruby/test_io.rb": [
          "File: test/ruby/test_io.rb -> test/ruby/test_io.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1048:   def ruby(*args)",
          "1049:     args = ['-e', '$>.write($<.read)'] if args.empty?",
          "1050:     ruby = EnvUtil.rubybin",
          "1052:     pid = f.pid",
          "1053:     yield(f)",
          "1054:   ensure",
          "",
          "[Removed Lines]",
          "1051:     f = IO.popen([ruby] + args, 'r+')",
          "",
          "[Added Lines]",
          "1051:     opts = {}",
          "1052:     opts[:rlimit_nproc] = 1024 if defined?(Process::RLIMIT_NPROC)",
          "1053:     f = IO.popen([ruby] + args, 'r+', opts)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1100:   def test_dup_many",
          "1101:     ruby('-e', <<-'End') {|f|",
          "1102:       ok = 0",
          "1103:       a = []",
          "1104:       begin",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1104:       if defined?(Process::RLIMIT_NOFILE)",
          "1105:         lim = Process.getrlimit(Process::RLIMIT_NOFILE)[0]",
          "1106:         Process.setrlimit(Process::RLIMIT_NOFILE, [lim, 1024].min)",
          "1107:       end",
          "",
          "---------------"
        ],
        "test/ruby/test_process.rb||test/ruby/test_process.rb": [
          "File: test/ruby/test_process.rb -> test/ruby/test_process.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1448:   end",
          "1450:   def test_aspawn_too_long_path",
          "1452:     assert_fail_too_long_path(%w\"echo |\", bug4315)",
          "1453:   end",
          "",
          "[Removed Lines]",
          "1451:     bug4315 = '[ruby-core:34833]'",
          "",
          "[Added Lines]",
          "1451:     bug4315 = '[ruby-core:34833] #7904 [ruby-core:52628] #11613'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1458:     cmds = Array.new(min, cmd)",
          "1459:     exs = [Errno::ENOENT]",
          "1460:     exs << Errno::E2BIG if defined?(Errno::E2BIG)",
          "1461:     EnvUtil.suppress_warning do",
          "1462:       assert_raise(*exs, mesg) do",
          "1463:         begin",
          "1464:           loop do",
          "1466:             min = [cmds.size, min].max",
          "1467:             cmds *= 100",
          "1468:           end",
          "",
          "[Removed Lines]",
          "1465:             Process.spawn(cmds.join(sep), [STDOUT, STDERR]=>File::NULL)",
          "",
          "[Added Lines]",
          "1461:     opts = {[STDOUT, STDERR]=>File::NULL}",
          "1462:     opts[:rlimit_nproc] = 128 if defined?(Process::RLIMIT_NPROC)",
          "1467:             Process.spawn(cmds.join(sep), opts)",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-10-29\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 10",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 408",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 409",
          "",
          "---------------"
        ]
      }
    }
  ]
}