{
  "cve_id": "CVE-2014-2270",
  "cve_desc": "softmagic.c in file before 5.17 and libmagic allows context-dependent attackers to cause a denial of service (out-of-bounds memory access and crash) via crafted offsets in the softmagic of a PE executable.",
  "repo": "file/file",
  "patch_hash": "447558595a3650db2886cd2f416ad0beba965801",
  "patch_info": {
    "commit_hash": "447558595a3650db2886cd2f416ad0beba965801",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/447558595a3650db2886cd2f416ad0beba965801",
    "files": [
      "src/softmagic.c"
    ],
    "message": "PR/313: Aaron Reffett: Check properly for exceeding the offset.",
    "before_after_code_files": [
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.170 2014/01/06 02:25:32 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.171 2014/01/08 22:02:06 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "71: private void cvt_32(union VALUETYPE *, const struct magic *);",
      "72: private void cvt_64(union VALUETYPE *, const struct magic *);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "74: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) >= ((n) - (o)))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1223:   }",
      "1224:   switch (in_type = cvt_flip(m->in_type, flip)) {",
      "1225:   case FILE_BYTE:",
      "1227:     return 0;",
      "1228:    if (off) {",
      "1229:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1226:    if (nbytes < offset || nbytes < (offset + 1))",
      "",
      "[Added Lines]",
      "1227:    if (OFFSET_OOB(nbytes, offset, 1))",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1258:     offset = ~offset;",
      "1259:    break;",
      "1260:   case FILE_BESHORT:",
      "1262:     return 0;",
      "1263:    if (off) {",
      "1264:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1261:    if (nbytes < offset || nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1262:    if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1310:     offset = ~offset;",
      "1311:    break;",
      "1312:   case FILE_LESHORT:",
      "1314:     return 0;",
      "1315:    if (off) {",
      "1316:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1313:    if (nbytes < offset || nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1314:    if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1362:     offset = ~offset;",
      "1363:    break;",
      "1364:   case FILE_SHORT:",
      "1366:     return 0;",
      "1367:    if (off) {",
      "1368:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1365:    if (nbytes < offset || nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1366:    if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1399:    break;",
      "1400:   case FILE_BELONG:",
      "1401:   case FILE_BEID3:",
      "1403:     return 0;",
      "1404:    if (off) {",
      "1405:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1402:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1403:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1470:    break;",
      "1471:   case FILE_LELONG:",
      "1472:   case FILE_LEID3:",
      "1474:     return 0;",
      "1475:    if (off) {",
      "1476:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1473:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1474:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1540:     offset = ~offset;",
      "1541:    break;",
      "1542:   case FILE_MELONG:",
      "1544:     return 0;",
      "1545:    if (off) {",
      "1546:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1543:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1544:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1610:     offset = ~offset;",
      "1611:    break;",
      "1612:   case FILE_LONG:",
      "1614:     return 0;",
      "1615:    if (off) {",
      "1616:     switch (m->in_op & FILE_OPS_MASK) {",
      "",
      "[Removed Lines]",
      "1613:    if (nbytes < offset || nbytes < (offset + 4))",
      "",
      "[Added Lines]",
      "1614:    if (OFFSET_OOB(nbytes, offset, 4))",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1688:  switch (m->type) {",
      "1689:  case FILE_BYTE:",
      "1691:    return 0;",
      "1692:   break;",
      "1694:  case FILE_SHORT:",
      "1695:  case FILE_BESHORT:",
      "1696:  case FILE_LESHORT:",
      "1698:    return 0;",
      "1699:   break;",
      "",
      "[Removed Lines]",
      "1697:   if (nbytes < (offset + 2))",
      "",
      "[Added Lines]",
      "1691:   if (OFFSET_OOB(nbytes, offset, 1))",
      "1698:   if (OFFSET_OOB(nbytes, offset, 2))",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "1713:  case FILE_FLOAT:",
      "1714:  case FILE_BEFLOAT:",
      "1715:  case FILE_LEFLOAT:",
      "1717:    return 0;",
      "1718:   break;",
      "1720:  case FILE_DOUBLE:",
      "1721:  case FILE_BEDOUBLE:",
      "1722:  case FILE_LEDOUBLE:",
      "1724:    return 0;",
      "1725:   break;",
      "1727:  case FILE_STRING:",
      "1728:  case FILE_PSTRING:",
      "1729:  case FILE_SEARCH:",
      "1731:    return 0;",
      "1732:   break;",
      "1734:  case FILE_REGEX:",
      "1736:    return 0;",
      "1737:   break;",
      "1739:  case FILE_INDIRECT:",
      "1741:    return 0;",
      "1742:   sbuf = ms->o.buf;",
      "1743:   soffset = ms->offset;",
      "",
      "[Removed Lines]",
      "1716:   if (nbytes < (offset + 4))",
      "1723:   if (nbytes < (offset + 8))",
      "1730:   if (nbytes < (offset + m->vallen))",
      "1735:   if (nbytes < offset)",
      "1740:   if (nbytes < offset)",
      "",
      "[Added Lines]",
      "1717:   if (OFFSET_OOB(nbytes, offset, 4))",
      "1724:   if (OFFSET_OOB(nbytes, offset, 8))",
      "1731:   if (OFFSET_OOB(nbytes, offset, m->vallen))",
      "1736:   if (OFFSET_OOB(nbytes, offset, 0))",
      "1741:   if (OFFSET_OOB(nbytes, offset, 0))",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "1761:   return rv;",
      "1763:  case FILE_USE:",
      "1765:    return 0;",
      "1766:   sbuf = m->value.s;",
      "1767:   if (*sbuf == '^') {",
      "",
      "[Removed Lines]",
      "1764:   if (nbytes < offset)",
      "",
      "[Added Lines]",
      "1765:   if (OFFSET_OOB(nbytes, offset, 0))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4afb9b168906f117e32a11367761cd50fe9d4abe",
      "candidate_info": {
        "commit_hash": "4afb9b168906f117e32a11367761cd50fe9d4abe",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/4afb9b168906f117e32a11367761cd50fe9d4abe",
        "files": [
          "src/softmagic.c"
        ],
        "message": "limit recursion level for mget",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.160 2013/02/26 18:24:43 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.161 2013/02/26 21:03:14 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: private int match(struct magic_set *, struct magic *, uint32_t,",
          "47: private int mget(struct magic_set *, const unsigned char *,",
          "49: private int magiccheck(struct magic_set *, struct magic *);",
          "50: private int32_t mprint(struct magic_set *, struct magic *);",
          "51: private int32_t moffset(struct magic_set *, struct magic *);",
          "",
          "[Removed Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, int *);",
          "48:     struct magic *, size_t, size_t, unsigned int, int, int, int, int *);",
          "",
          "[Added Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, int, int *);",
          "48:     struct magic *, size_t, size_t, unsigned int, int, int, int, int, int *);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73:  int rv;",
          "74:  for (ml = ms->mlist[0]->next; ml != ms->mlist[0]; ml = ml->next)",
          "75:   if ((rv = match(ms, ml->magic, ml->nmagic, buf, nbytes, 0, mode,",
          "77:    return rv;",
          "79:  return 0;",
          "",
          "[Removed Lines]",
          "76:       text, 0, NULL)) != 0)",
          "",
          "[Added Lines]",
          "76:       text, 0, 0, NULL)) != 0)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "109: private int",
          "110: match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,",
          "111:     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,",
          "113: {",
          "114:  uint32_t magindex = 0;",
          "115:  unsigned int cont_level = 0;",
          "",
          "[Removed Lines]",
          "112:     int flip, int *returnval)",
          "",
          "[Added Lines]",
          "112:     int flip, int recursion_level, int *returnval)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "149:   switch (mget(ms, s, m, nbytes, offset, cont_level, mode, text,",
          "151:   case -1:",
          "152:    return -1;",
          "153:   case 0:",
          "",
          "[Removed Lines]",
          "150:       flip, returnval)) {",
          "",
          "[Added Lines]",
          "150:       flip, recursion_level + 1, returnval)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "233:    }",
          "234: #endif",
          "235:    switch (mget(ms, s, m, nbytes, offset, cont_level, mode,",
          "237:    case -1:",
          "238:     return -1;",
          "239:    case 0:",
          "",
          "[Removed Lines]",
          "236:        text, flip, returnval)) {",
          "",
          "[Added Lines]",
          "236:        text, flip, recursion_level + 1, returnval)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1116: private int",
          "1117: mget(struct magic_set *ms, const unsigned char *s, struct magic *m,",
          "1118:     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,",
          "1120: {",
          "1121:  uint32_t offset = ms->offset;",
          "1122:  uint32_t count = m->str_range;",
          "",
          "[Removed Lines]",
          "1119:     int flip, int *returnval)",
          "",
          "[Added Lines]",
          "1119:     int flip, int recursion_level, int *returnval)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1125:  union VALUETYPE *p = &ms->ms_value;",
          "1126:  struct mlist ml;",
          "1128:  if (mcopy(ms, p, m->type, m->flag & INDIR, s, (uint32_t)(offset + o),",
          "1129:      (uint32_t)nbytes, count) == -1)",
          "1130:   return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1128:  if (recursion_level >= 20) {",
          "1129:   file_error(ms, 0, \"recursion nesting exceeded\");",
          "1130:   return -1;",
          "1131:  }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1728:    return -1;",
          "1729:   }",
          "1730:   return match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,",
          "1733:  case FILE_NAME:",
          "1734:   if (file_printf(ms, \"%s\", m->desc) == -1)",
          "",
          "[Removed Lines]",
          "1731:       mode, text, flip, returnval);",
          "",
          "[Added Lines]",
          "1736:       mode, text, flip, recursion_level, returnval);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b71174f3ec9a134361e39948c0fec59b37a2f587",
      "candidate_info": {
        "commit_hash": "b71174f3ec9a134361e39948c0fec59b37a2f587",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/b71174f3ec9a134361e39948c0fec59b37a2f587",
        "files": [
          "src/apprentice.c",
          "src/cdf.c",
          "src/getline.c",
          "src/softmagic.c"
        ],
        "message": "PR/384: remove %z formats that break windows.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/cdf.c||src/cdf.c",
          "src/getline.c||src/getline.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.214 2014/08/04 06:48:22 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.215 2014/08/30 10:19:54 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "465:  if (action == FILE_LIST) {",
          "466:   for (i = 0; i < MAGIC_SETS; i++) {",
          "468:    apprentice_list(ms->mlist[i], BINTEST);",
          "469:    printf(\"Text patterns:\\n\");",
          "470:    apprentice_list(ms->mlist[i], TEXTTEST);",
          "",
          "[Removed Lines]",
          "467:    printf(\"Set %zu:\\nBinary patterns:\\n\", i);",
          "",
          "[Added Lines]",
          "467:    printf(\"Set %\" SIZE_T_FORMAT \"u:\\nBinary patterns:\\n\",",
          "468:        i);",
          "",
          "---------------"
        ],
        "src/cdf.c||src/cdf.c": [
          "File: src/cdf.c -> src/cdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "39: #endif",
          "41: #include <assert.h>",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.65 2014/08/07 09:38:35 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.66 2014/08/27 06:59:35 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1156:  for (i = 0; i < __arraycount(h->h_master_sat); i++) {",
          "1157:   if (h->h_master_sat[i] == CDF_SECID_FREE)",
          "1158:    break;",
          "1160:       \"master_sat\", i, h->h_master_sat[i]);",
          "1161:  }",
          "1162: }",
          "",
          "[Removed Lines]",
          "1159:   (void)fprintf(stderr, \"%35.35s[%.3zu] = %d\\n\",",
          "",
          "[Added Lines]",
          "1159:   (void)fprintf(stderr, \"%35.35s[%.3\" SIZE_T_FORMAT \"u] = %d\\n\",",
          "",
          "---------------"
        ],
        "src/getline.c||src/getline.c": [
          "File: src/getline.c -> src/getline.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:  size_t n = 0;",
          "99:  while ((len = getline(&p, &n, stdin)) != -1)",
          "101:  free(p);",
          "102:  return 0;",
          "103: }",
          "",
          "[Removed Lines]",
          "100:   (void)printf(\"%zd %s\", len, p);",
          "",
          "[Added Lines]",
          "100:   (void)printf(\"%\" SIZE_T_FORMAT \"d %s\", len, p);",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.193 2014/09/10 18:41:51 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.194 2014/09/22 18:26:19 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:  const char *ptr = fmtcheck(m->desc, def);",
          "96:  if (ptr == def)",
          "97:   file_magerror(ms,",
          "100:  return ptr;",
          "101: }",
          "102: #else",
          "",
          "[Removed Lines]",
          "98:       \"%s, %zu: format `%s' does not match with `%s'\",",
          "99:       file, line, m->desc, def);",
          "",
          "[Added Lines]",
          "98:       \"%s, %\" SIZE_T_FORMAT \"u: format `%s' does not match\"",
          "99:       \" with `%s'\", file, line, m->desc, def);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1057: private void",
          "1058: mdebug(uint32_t offset, const char *str, size_t len)",
          "1059: {",
          "1061:  file_showstr(stderr, str, len);",
          "1062:  (void) fputc('\\n', stderr);",
          "1063:  (void) fputc('\\n', stderr);",
          "",
          "[Removed Lines]",
          "1060:  (void) fprintf(stderr, \"mget/%zu @%d: \", len, offset);",
          "",
          "[Added Lines]",
          "1060:  (void) fprintf(stderr, \"mget/%\" SIZE_T_FORMAT \"u @%d: \", len, offset);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1207:   return -1;",
          "1209:  if ((ms->flags & MAGIC_DEBUG) != 0) {",
          "1212:   mdebug(offset, (char *)(void *)p, sizeof(union VALUETYPE));",
          "1213: #ifndef COMPILE_ONLY",
          "1214:   file_mdump(m);",
          "",
          "[Removed Lines]",
          "1210:   fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%zu, \"",
          "1211:       \"nbytes=%zu)\\n\", m->type, m->flag, offset, o, nbytes);",
          "",
          "[Added Lines]",
          "1210:   fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%\"",
          "1211:       SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT \"u)\\n\",",
          "1212:       m->type, m->flag, offset, o, nbytes);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1963:        copy = malloc(slen);",
          "1964:        if (copy == NULL)  {",
          "1965:     file_error(ms, errno,",
          "1967:     return -1;",
          "1968:        }",
          "1969:        memcpy(copy, ms->search.s, slen);",
          "",
          "[Removed Lines]",
          "1966:         \"can't allocate %zu bytes\", slen);",
          "",
          "[Added Lines]",
          "1967:         \"can't allocate %\" SIZE_T_FORMAT \"u bytes\",",
          "1968:         slen);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf0d80b4564ad2b7426ad7542f6de7f34f29eff5",
      "candidate_info": {
        "commit_hash": "cf0d80b4564ad2b7426ad7542f6de7f34f29eff5",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/cf0d80b4564ad2b7426ad7542f6de7f34f29eff5",
        "files": [
          "src/softmagic.c"
        ],
        "message": "Fix: perl -e 'print \"\\x0\" x 8, \"bad\", \"\\x0\" x 1013, \"H+\", \"\\x0\" x 6, \"good\"' | ./file printing bad... Reset the continuation offset. From Christoph Biedl",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.208 2015/01/05 00:16:01 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.209 2015/01/05 20:05:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:   if ((ms->flags & MAGIC_CONTINUE) == 0 && *printed_something) {",
          "363:   }",
          "364:  }",
          "366: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "364:   cont_level = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "870240654db1bc6f0434b4f1400122d470ab5835",
      "candidate_info": {
        "commit_hash": "870240654db1bc6f0434b4f1400122d470ab5835",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/870240654db1bc6f0434b4f1400122d470ab5835",
        "files": [
          "src/softmagic.c"
        ],
        "message": "keep track of white-space printed so that we can recurse properly.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.163 2013/02/27 16:58:32 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.164 2013/03/06 02:57:02 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: private int match(struct magic_set *, struct magic *, uint32_t,",
          "47: private int mget(struct magic_set *, const unsigned char *,",
          "49: private int magiccheck(struct magic_set *, struct magic *);",
          "50: private int32_t mprint(struct magic_set *, struct magic *);",
          "51: private int32_t moffset(struct magic_set *, struct magic *);",
          "",
          "[Removed Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, int, int *);",
          "48:     struct magic *, size_t, size_t, unsigned int, int, int, int, int, int *);",
          "",
          "[Added Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, int, int *, int *,",
          "47:     int *);",
          "49:     struct magic *, size_t, size_t, unsigned int, int, int, int, int, int *,",
          "50:     int *, int *);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "70:     int mode, int text)",
          "71: {",
          "72:  struct mlist *ml;",
          "74:  for (ml = ms->mlist[0]->next; ml != ms->mlist[0]; ml = ml->next)",
          "75:   if ((rv = match(ms, ml->magic, ml->nmagic, buf, nbytes, 0, mode,",
          "77:    return rv;",
          "79:  return 0;",
          "",
          "[Removed Lines]",
          "73:  int rv;",
          "76:       text, 0, 0, NULL)) != 0)",
          "",
          "[Added Lines]",
          "75:  int rv, printed_something = 0, need_separator = 0;",
          "78:       text, 0, 0, &printed_something, &need_separator,",
          "79:       NULL)) != 0)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "109: private int",
          "110: match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,",
          "111:     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,",
          "113: {",
          "114:  uint32_t magindex = 0;",
          "115:  unsigned int cont_level = 0;",
          "120:  int print = (ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0;",
          "122:  if (returnval == NULL)",
          "",
          "[Removed Lines]",
          "112:     int flip, int recursion_level, int *returnval)",
          "116:  int need_separator = 0;",
          "119:  int printed_something = 0;",
          "",
          "[Added Lines]",
          "115:     int flip, int recursion_level, int *printed_something, int *need_separator,",
          "116:     int *returnval)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "132:   if (m->type != FILE_NAME)",
          "133:   if ((IS_STRING(m->type) &&",
          "136:       (m->flag & mode) != mode) {",
          "138:    while (magindex + 1 < nmagic &&",
          "",
          "[Removed Lines]",
          "134:        ((text && (m->str_flags & (STRING_BINTEST | STRING_TEXTTEST)) == STRING_BINTEST) ||",
          "135:         (!text && (m->str_flags & (STRING_TEXTTEST | STRING_BINTEST)) == STRING_TEXTTEST))) ||",
          "",
          "[Added Lines]",
          "136: #define FLT (STRING_BINTEST | STRING_TEXTTEST)",
          "137:        ((text && (m->str_flags & FLT) == STRING_BINTEST) ||",
          "138:         (!text && (m->str_flags & FLT) == STRING_TEXTTEST))) ||",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "149:   switch (mget(ms, s, m, nbytes, offset, cont_level, mode, text,",
          "151:   case -1:",
          "152:    return -1;",
          "153:   case 0:",
          "",
          "[Removed Lines]",
          "150:       flip, recursion_level + 1, returnval)) {",
          "",
          "[Added Lines]",
          "153:       flip, recursion_level + 1, printed_something,",
          "154:       need_separator, returnval)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "191:   if (*m->desc) {",
          "194:    if (print_sep(ms, firstline) == -1)",
          "195:     return -1;",
          "196:   }",
          "",
          "[Removed Lines]",
          "192:    need_separator = 1;",
          "193:    printed_something = 1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "233:    }",
          "234: #endif",
          "235:    switch (mget(ms, s, m, nbytes, offset, cont_level, mode,",
          "237:    case -1:",
          "238:     return -1;",
          "239:    case 0:",
          "",
          "[Removed Lines]",
          "236:        text, flip, recursion_level + 1, returnval)) {",
          "",
          "[Added Lines]",
          "240:        text, flip, recursion_level + 1, printed_something,",
          "241:        need_separator, returnval)) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "277:     if (*m->desc) {",
          "280:       if (print_sep(ms, firstline)",
          "281:           == -1)",
          "282:        return -1;",
          "",
          "[Removed Lines]",
          "278:      if (!printed_something) {",
          "279:       printed_something = 1;",
          "",
          "[Added Lines]",
          "283:      if (!*printed_something) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "293:         && ((m->flag & NOSPACE) == 0)",
          "294:         && *m->desc) {",
          "295:      if (print &&",
          "296:          file_printf(ms, \" \") == -1)",
          "297:       return -1;",
          "299:     }",
          "300:     if (print && mprint(ms, m) == -1)",
          "301:      return -1;",
          "",
          "[Removed Lines]",
          "292:     if (need_separator",
          "298:      need_separator = 0;",
          "",
          "[Added Lines]",
          "297:     if (*need_separator",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "303:     ms->c.li[cont_level].off = moffset(ms, m);",
          "305:     if (*m->desc)",
          "",
          "[Removed Lines]",
          "306:      need_separator = 1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "315:     break;",
          "316:    }",
          "317:   }",
          "319:    firstline = 0;",
          "320:    if (print)",
          "322:   }",
          "325:   }",
          "326:  }",
          "",
          "[Removed Lines]",
          "318:   if (printed_something) {",
          "323:   if ((ms->flags & MAGIC_CONTINUE) == 0 && printed_something) {",
          "",
          "[Added Lines]",
          "323:   if (*printed_something) {",
          "328:   if ((ms->flags & MAGIC_CONTINUE) == 0 && *printed_something) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1113:  return 0;",
          "1114: }",
          "1123: private int",
          "1124: mget(struct magic_set *ms, const unsigned char *s, struct magic *m,",
          "1125:     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,",
          "1127: {",
          "1128:  uint32_t soffset, offset = ms->offset;",
          "1129:  uint32_t count = m->str_range;",
          "1131:  char *sbuf, *rbuf;",
          "1132:  union VALUETYPE *p = &ms->ms_value;",
          "1133:  struct mlist ml;",
          "",
          "[Removed Lines]",
          "1116: static void",
          "1117: trim(char *s) {",
          "1118:  size_t l = strlen(s);",
          "1119:  if (l > 0 && s[l - 1] == ' ')",
          "1120:   s[l - 1] = '\\0';",
          "1121: }",
          "1126:     int flip, int recursion_level, int *returnval)",
          "1130:  int rv;",
          "",
          "[Added Lines]",
          "1124:     int flip, int recursion_level, int *printed_something,",
          "1125:     int *need_separator, int *returnval)",
          "1129:  int rv, oneed_separator;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1716:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
          "1717:   rbuf = ms->o.buf;",
          "1718:   ms->o.buf = sbuf;",
          "1720:   if (rv == 1) {",
          "1723:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0 &&",
          "1724:        file_printf(ms, m->desc, offset) == -1)",
          "1725:     return -1;",
          "",
          "[Removed Lines]",
          "1719:   ms->offset = offset;",
          "1721:    if (m->flag & NOSPACE)",
          "1722:     trim(rbuf);",
          "",
          "[Added Lines]",
          "1718:   ms->offset = soffset;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1741:    file_error(ms, 0, \"cannot find entry `%s'\", sbuf);",
          "1742:    return -1;",
          "1743:   }",
          "1746:   if (m->flag & NOSPACE)",
          "1751:   return rv;",
          "1753:  case FILE_NAME:",
          "",
          "[Removed Lines]",
          "1744:   rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,",
          "1745:       mode, text, flip, recursion_level, returnval);",
          "1747:    trim(ms->o.buf);",
          "1748:   if (rv == 1 && (m->flag & NOSPACE) == 0 &&",
          "1749:       file_printf(ms, \" \") == -1)",
          "1750:    return -1;",
          "",
          "[Added Lines]",
          "1742:   oneed_separator = *need_separator;",
          "1745:   rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,",
          "1746:       mode, text, flip, recursion_level, printed_something,",
          "1747:       need_separator, returnval);",
          "1748:   if (rv != 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d566272d582d02e4729b33266171454bb5a2057e",
      "candidate_info": {
        "commit_hash": "d566272d582d02e4729b33266171454bb5a2057e",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/d566272d582d02e4729b33266171454bb5a2057e",
        "files": [
          "src/softmagic.c"
        ],
        "message": "PR/318: Klortho: if handle_annotation prints something, mark it as printed.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.169 2013/12/05 17:02:34 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.170 2014/01/06 02:25:32 christos Exp $\")",
          "",
          "---------------"
        ]
      }
    }
  ]
}