{
  "cve_id": "CVE-2015-8216",
  "cve_desc": "The ljpeg_decode_yuv_scan function in libavcodec/mjpegdec.c in FFmpeg before 2.8.2 omits certain width and height checks, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted MJPEG data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "d24888ef19ba38b787b11d1ee091a3d94920c76a",
  "patch_info": {
    "commit_hash": "d24888ef19ba38b787b11d1ee091a3d94920c76a",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/d24888ef19ba38b787b11d1ee091a3d94920c76a",
    "files": [
      "libavcodec/mjpegdec.c"
    ],
    "message": "avcodec/mjpegdec: Check index in ljpeg_decode_yuv_scan() before using it\n\nFixes: 04715144ba237443010554be0d05343f/asan_heap-oob_1eafc76_1737_c685b48041a563461839e4e7ab97abb8.jpg\nFixes out of array access\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
      "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1093:                         dc = mjpeg_decode_dc(s, s->dc_index[i]);",
      "1094:                         if(dc == 0xFFFFF)",
      "1095:                             return -1;",
      "1097:                         ptr = s->picture_ptr->data[c] + (linesize * (v * mb_y + y)) + (h * mb_x + x); //FIXME optimize this crap",
      "1098:                         if(y==0 && toprow){",
      "1099:                             if(x==0 && leftcol){",
      "",
      "[Removed Lines]",
      "1096:                         if(bits<=8){",
      "",
      "[Added Lines]",
      "1096:                         if (   h * mb_x + x >= s->width",
      "1097:                             || v * mb_y + y >= s->height) {",
      "1099:                         } else if (bits<=8) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1161:                         dc = mjpeg_decode_dc(s, s->dc_index[i]);",
      "1162:                         if(dc == 0xFFFFF)",
      "1163:                             return -1;",
      "1165:                             ptr = s->picture_ptr->data[c] +",
      "1166:                               (linesize * (v * mb_y + y)) +",
      "1167:                               (h * mb_x + x); //FIXME optimize this crap",
      "",
      "[Removed Lines]",
      "1164:                         if(bits<=8){",
      "",
      "[Added Lines]",
      "1167:                         if (   h * mb_x + x >= s->width",
      "1168:                             || v * mb_y + y >= s->height) {",
      "1170:                         } else if (bits<=8) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "484b1cdd5303771447e15d0067a2034b0c17fdc8",
      "candidate_info": {
        "commit_hash": "484b1cdd5303771447e15d0067a2034b0c17fdc8",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/484b1cdd5303771447e15d0067a2034b0c17fdc8",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "jpegdec: check return value of mjpeg_decode_dc() Fixes Ticket754\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "673:                 s->restart_count = s->restart_interval;",
          "675:             for(i=0;i<3;i++) {",
          "678:                 topleft[i]= top[i];",
          "679:                 top[i]= buffer[mb_x][i];",
          "681:                 PREDICT(pred, topleft[i], top[i], left[i], modified_predictor);",
          "683:                 left[i]=",
          "685:             }",
          "687:             if (s->restart_interval && !--s->restart_count) {",
          "",
          "[Removed Lines]",
          "676:                 int pred;",
          "684:                 buffer[mb_x][i]= mask & (pred + (mjpeg_decode_dc(s, s->dc_index[i]) << point_transform));",
          "",
          "[Added Lines]",
          "676:                 int pred, dc;",
          "683:                 dc = mjpeg_decode_dc(s, s->dc_index[i]);",
          "684:                 if(dc == 0xFFFF)",
          "685:                     return -1;",
          "688:                 buffer[mb_x][i]= mask & (pred + (dc << point_transform));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "735:                     linesize= s->linesize[c];",
          "737:                     for(j=0; j<n; j++) {",
          "740:                         ptr = s->picture.data[c] + (linesize * (v * mb_y + y)) + (h * mb_x + x); //FIXME optimize this crap",
          "741:                         if(y==0 && mb_y==0){",
          "",
          "[Removed Lines]",
          "738:                         int pred;",
          "",
          "[Added Lines]",
          "742:                         int pred, dc;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "755:                         if (s->interlaced && s->bottom_field)",
          "756:                             ptr += linesize >> 1;",
          "759:                         if (++x == h) {",
          "760:                             x = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "761:                         dc = mjpeg_decode_dc(s, s->dc_index[i]);",
          "762:                         if(dc == 0xFFFF)",
          "763:                             return -1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "765:             }else{",
          "766:                 for(i=0;i<nb_components;i++) {",
          "767:                     uint8_t *ptr;",
          "769:                     n = s->nb_blocks[i];",
          "770:                     c = s->comp_index[i];",
          "771:                     h = s->h_scount[i];",
          "",
          "[Removed Lines]",
          "768:                     int n, h, v, x, y, c, j, linesize;",
          "",
          "[Added Lines]",
          "775:                     int n, h, v, x, y, c, j, linesize, dc;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "780:                         ptr = s->picture.data[c] + (linesize * (v * mb_y + y)) + (h * mb_x + x); //FIXME optimize this crap",
          "781:                         PREDICT(pred, ptr[-linesize-1], ptr[-linesize], ptr[-1], predictor);",
          "783:                         if (++x == h) {",
          "784:                             x = 0;",
          "785:                             y++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "790:                         dc = mjpeg_decode_dc(s, s->dc_index[i]);",
          "791:                         if(dc == 0xFFFF)",
          "792:                             return -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "465eb0eb48a14f5308d7fa52c388e7be7170cc3e",
      "candidate_info": {
        "commit_hash": "465eb0eb48a14f5308d7fa52c388e7be7170cc3e",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/465eb0eb48a14f5308d7fa52c388e7be7170cc3e",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "jpegdec: 9-16 bit yuv/gray ljpeg support.\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "343:         s->yuv442 = 1;",
          "344:         break;",
          "345:     case 0x11000000:",
          "347:         break;",
          "348:     case 0x12111100:",
          "349:     case 0x22211100:",
          "",
          "[Removed Lines]",
          "346:         s->avctx->pix_fmt = PIX_FMT_GRAY8;",
          "",
          "[Added Lines]",
          "346:         if(s->bits <= 8)",
          "347:             s->avctx->pix_fmt = PIX_FMT_GRAY8;",
          "348:         else",
          "349:             s->avctx->pix_fmt = PIX_FMT_GRAY16;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "724: static int ljpeg_decode_yuv_scan(MJpegDecodeContext *s, int predictor, int point_transform){",
          "725:     int i, mb_x, mb_y;",
          "728:     for(mb_y = 0; mb_y < s->mb_height; mb_y++) {",
          "729:         for(mb_x = 0; mb_x < s->mb_width; mb_x++) {",
          "",
          "[Removed Lines]",
          "726:     const int nb_components=3;",
          "",
          "[Added Lines]",
          "729:     const int nb_components=s->nb_components;",
          "730:     int bits= (s->bits+7)&~7;",
          "732:     point_transform += bits - s->bits;",
          "734:     av_assert0(nb_components==1 || nb_components==3);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "733:             if(mb_x==0 || mb_y==0 || s->interlaced){",
          "734:                 for(i=0;i<nb_components;i++) {",
          "735:                     uint8_t *ptr;",
          "736:                     int n, h, v, x, y, c, j, linesize;",
          "737:                     n = s->nb_blocks[i];",
          "738:                     c = s->comp_index[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "744:                     uint16_t *ptr16;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "742:                     y = 0;",
          "743:                     linesize= s->linesize[c];",
          "745:                     for(j=0; j<n; j++) {",
          "746:                         int pred, dc;",
          "748:                         ptr = s->picture.data[c] + (linesize * (v * mb_y + y)) + (h * mb_x + x); //FIXME optimize this crap",
          "749:                         if(y==0 && mb_y==0){",
          "750:                             if(x==0 && mb_x==0){",
          "752:                             }else{",
          "753:                                 pred= ptr[-1];",
          "754:                             }",
          "",
          "[Removed Lines]",
          "751:                                 pred= 128 << point_transform;",
          "",
          "[Added Lines]",
          "754:                     if(bits>8) linesize /= 2;",
          "759:                         dc = mjpeg_decode_dc(s, s->dc_index[i]);",
          "760:                         if(dc == 0xFFFF)",
          "761:                             return -1;",
          "762:                         if(bits<=8){",
          "766:                                 pred= 1 << (bits - 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "763:                         if (s->interlaced && s->bottom_field)",
          "764:                             ptr += linesize >> 1;",
          "770:                         if (++x == h) {",
          "771:                             x = 0;",
          "772:                             y++;",
          "",
          "[Removed Lines]",
          "765:                         dc = mjpeg_decode_dc(s, s->dc_index[i]);",
          "766:                         if(dc == 0xFFFF)",
          "767:                             return -1;",
          "",
          "[Added Lines]",
          "781:                         }else{",
          "782:                             ptr16 = s->picture.data[c] + 2*(linesize * (v * mb_y + y)) + 2*(h * mb_x + x); //FIXME optimize this crap",
          "783:                             if(y==0 && mb_y==0){",
          "784:                                 if(x==0 && mb_x==0){",
          "785:                                     pred= 1 << (bits - 1);",
          "786:                                 }else{",
          "787:                                     pred= ptr16[-1];",
          "788:                                 }",
          "789:                             }else{",
          "790:                                 if(x==0 && mb_x==0){",
          "791:                                     pred= ptr16[-linesize];",
          "792:                                 }else{",
          "793:                                     PREDICT(pred, ptr16[-linesize-1], ptr16[-linesize], ptr16[-1], predictor);",
          "794:                                 }",
          "795:                             }",
          "797:                             if (s->interlaced && s->bottom_field)",
          "798:                                 ptr16 += linesize >> 1;",
          "800:                         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "776:             }else{",
          "777:                 for(i=0;i<nb_components;i++) {",
          "778:                     uint8_t *ptr;",
          "779:                     int n, h, v, x, y, c, j, linesize, dc;",
          "780:                     n = s->nb_blocks[i];",
          "781:                     c = s->comp_index[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "810:                     uint16_t *ptr16;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "785:                     y = 0;",
          "786:                     linesize= s->linesize[c];",
          "788:                     for(j=0; j<n; j++) {",
          "789:                         int pred;",
          "794:                         dc = mjpeg_decode_dc(s, s->dc_index[i]);",
          "795:                         if(dc == 0xFFFF)",
          "796:                             return -1;",
          "798:                         if (++x == h) {",
          "799:                             x = 0;",
          "800:                             y++;",
          "",
          "[Removed Lines]",
          "791:                         ptr = s->picture.data[c] + (linesize * (v * mb_y + y)) + (h * mb_x + x); //FIXME optimize this crap",
          "792:                         PREDICT(pred, ptr[-linesize-1], ptr[-linesize], ptr[-1], predictor);",
          "",
          "[Added Lines]",
          "820:                     if(bits>8) linesize /= 2;",
          "828:                         if(bits<=8){",
          "829:                         ptr = s->picture.data[c] + (linesize * (v * mb_y + y)) + (h * mb_x + x); //FIXME optimize this crap",
          "830:                         PREDICT(pred, ptr[-linesize-1], ptr[-linesize], ptr[-1], predictor);",
          "833:                         }else{",
          "834:                             ptr16 = s->picture.data[c] + 2*(linesize * (v * mb_y + y)) + 2*(h * mb_x + x); //FIXME optimize this crap",
          "835:                             PREDICT(pred, ptr16[-linesize-1], ptr16[-linesize], ptr16[-1], predictor);",
          "838:                         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}