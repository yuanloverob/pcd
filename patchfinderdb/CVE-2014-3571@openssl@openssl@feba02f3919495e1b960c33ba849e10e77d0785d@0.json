{
  "cve_id": "CVE-2014-3571",
  "cve_desc": "OpenSSL before 0.9.8zd, 1.0.0 before 1.0.0p, and 1.0.1 before 1.0.1k allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted DTLS message that is processed with a different read operation for the handshake header than for the handshake body, related to the dtls1_get_record function in d1_pkt.c and the ssl3_read_n function in s3_pkt.c.",
  "repo": "openssl/openssl",
  "patch_hash": "feba02f3919495e1b960c33ba849e10e77d0785d",
  "patch_info": {
    "commit_hash": "feba02f3919495e1b960c33ba849e10e77d0785d",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/feba02f3919495e1b960c33ba849e10e77d0785d",
    "files": [
      "ssl/d1_pkt.c",
      "ssl/s3_pkt.c"
    ],
    "message": "Fix crash in dtls1_get_record whilst in the listen state where you get two separate reads performed - one for the header and one for the body of the handshake record.\n\nCVE-2014-3571\n\nReviewed-by: Matt Caswell <matt@openssl.org>",
    "before_after_code_files": [
      "ssl/d1_pkt.c||ssl/d1_pkt.c",
      "ssl/s3_pkt.c||ssl/s3_pkt.c"
    ]
  },
  "patch_diff": {
    "ssl/d1_pkt.c||ssl/d1_pkt.c": [
      "File: ssl/d1_pkt.c -> ssl/d1_pkt.c"
    ],
    "ssl/s3_pkt.c||ssl/s3_pkt.c": [
      "File: ssl/s3_pkt.c -> ssl/s3_pkt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "198:  if (SSL_IS_DTLS(s))",
      "199:   {",
      "200:   if (left > 0 && n > left)",
      "201:    n = left;",
      "202:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "200:   if (left == 0 && extend)",
      "201:    return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8dd4ad0ff5d1d07ec4b6dd5d5104131269a472aa",
      "candidate_info": {
        "commit_hash": "8dd4ad0ff5d1d07ec4b6dd5d5104131269a472aa",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8dd4ad0ff5d1d07ec4b6dd5d5104131269a472aa",
        "files": [
          "ssl/s3_pkt.c"
        ],
        "message": "Make DTLS always act as if read_ahead is set. The actual value of read_ahead is ignored for DTLS.\n\nRT#3657\n\nReviewed-by: Andy Polyakov <appro@openssl.org>",
        "before_after_code_files": [
          "ssl/s3_pkt.c||ssl/s3_pkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ],
          "candidate": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/s3_pkt.c||ssl/s3_pkt.c": [
          "File: ssl/s3_pkt.c -> ssl/s3_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:         return -1;",
          "232:     }",
          "236:         max = n;",
          "237:     else {",
          "",
          "[Removed Lines]",
          "234:     if (!s->read_ahead)",
          "",
          "[Added Lines]",
          "235:     if (!s->read_ahead && !SSL_IS_DTLS(s))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "52e1d7b152a92d4fc2c3704a0129ec0ee0ce5e21",
      "candidate_info": {
        "commit_hash": "52e1d7b152a92d4fc2c3704a0129ec0ee0ce5e21",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/52e1d7b152a92d4fc2c3704a0129ec0ee0ce5e21",
        "files": [
          "ssl/record/rec_layer.h",
          "ssl/s3_pkt.c",
          "ssl/ssl_lib.c",
          "ssl/ssl_locl.h"
        ],
        "message": "Create a RECORD_LAYER structure and move read_ahead into it.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
        "before_after_code_files": [
          "ssl/record/rec_layer.h||ssl/record/rec_layer.h",
          "ssl/s3_pkt.c||ssl/s3_pkt.c",
          "ssl/ssl_lib.c||ssl/ssl_lib.c",
          "ssl/ssl_locl.h||ssl/ssl_locl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ],
          "candidate": [
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/record/rec_layer.h||ssl/record/rec_layer.h": [
          "File: ssl/record/rec_layer.h -> ssl/record/rec_layer.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112: typedef struct record_layer_st {",
          "117:     int read_ahead;",
          "118: } RECORD_LAYER;",
          "120: #define RECORD_LAYER_set_read_ahead(rl, ra)     ((rl)->read_ahead = (ra))",
          "121: #define RECORD_LAYER_get_read_ahead(rl)         ((rl)->read_ahead)",
          "",
          "---------------"
        ],
        "ssl/s3_pkt.c||ssl/s3_pkt.c": [
          "File: ssl/s3_pkt.c -> ssl/s3_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:     }",
          "237:         max = n;",
          "238:     else {",
          "",
          "[Removed Lines]",
          "235:     if (!s->read_ahead && !SSL_IS_DTLS(s))",
          "",
          "[Added Lines]",
          "235:     if (!RECORD_LAYER_get_read_ahead(&s->rlayer) && !SSL_IS_DTLS(s))",
          "",
          "---------------"
        ],
        "ssl/ssl_lib.c||ssl/ssl_lib.c": [
          "File: ssl/ssl_lib.c -> ssl/ssl_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:     if (s->cert == NULL)",
          "302:         goto err;",
          "305:     s->msg_callback = ctx->msg_callback;",
          "306:     s->msg_callback_arg = ctx->msg_callback_arg;",
          "307:     s->verify_mode = ctx->verify_mode;",
          "",
          "[Removed Lines]",
          "304:     s->read_ahead = ctx->read_ahead;",
          "",
          "[Added Lines]",
          "304:     RECORD_LAYER_set_read_ahead(&s->rlayer, ctx->read_ahead);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "822: void SSL_set_read_ahead(SSL *s, int yes)",
          "823: {",
          "825: }",
          "827: int SSL_get_read_ahead(const SSL *s)",
          "828: {",
          "830: }",
          "832: int SSL_pending(const SSL *s)",
          "",
          "[Removed Lines]",
          "824:     s->read_ahead = yes;",
          "829:     return (s->read_ahead);",
          "",
          "[Added Lines]",
          "824:     RECORD_LAYER_set_read_ahead(&s->rlayer, yes);",
          "829:     return RECORD_LAYER_get_read_ahead(&s->rlayer);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1064:     switch (cmd) {",
          "1065:     case SSL_CTRL_GET_READ_AHEAD:",
          "1067:     case SSL_CTRL_SET_READ_AHEAD:",
          "1070:         return (l);",
          "1072:     case SSL_CTRL_SET_MSG_CALLBACK_ARG:",
          "",
          "[Removed Lines]",
          "1066:         return (s->read_ahead);",
          "1068:         l = s->read_ahead;",
          "1069:         s->read_ahead = larg;",
          "",
          "[Added Lines]",
          "1066:         return (RECORD_LAYER_get_read_ahead(&s->rlayer));",
          "1068:         l = RECORD_LAYER_get_read_ahead(&s->rlayer);",
          "1069:         RECORD_LAYER_set_read_ahead(&s->rlayer, larg);",
          "",
          "---------------"
        ],
        "ssl/ssl_locl.h||ssl/ssl_locl.h": [
          "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "165: # include <openssl/ssl.h>",
          "166: # include <openssl/symhacks.h>",
          "168: # ifdef OPENSSL_BUILD_SHLIBSSL",
          "169: #  undef OPENSSL_EXTERN",
          "170: #  define OPENSSL_EXTERN OPENSSL_EXPORT",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168: #include \"record/rec_layer.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "977:     int type;",
          "979:     const SSL_METHOD *method;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "983:     RECORD_LAYER rlayer;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1030:     unsigned int packet_length;",
          "1036:     void (*msg_callback) (int write_p, int version, int content_type,",
          "1037:                           const void *buf, size_t len, SSL *ssl, void *arg);",
          "",
          "[Removed Lines]",
          "1033:     int read_ahead;             /* Read as many input bytes as possible (for",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "46bf0ba87665c5aa215673d87e9ee7dd4ce28359",
      "candidate_info": {
        "commit_hash": "46bf0ba87665c5aa215673d87e9ee7dd4ce28359",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/46bf0ba87665c5aa215673d87e9ee7dd4ce28359",
        "files": [
          "ssl/d1_pkt.c",
          "ssl/s3_pkt.c"
        ],
        "message": "Fix crash in dtls1_get_record whilst in the listen state where you get two separate reads performed - one for the header and one for the body of the handshake record.\n\nCVE-2014-3571\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n\nConflicts:\n\tssl/s3_pkt.c",
        "before_after_code_files": [
          "ssl/d1_pkt.c||ssl/d1_pkt.c",
          "ssl/s3_pkt.c||ssl/s3_pkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c",
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ],
          "candidate": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c",
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/d1_pkt.c||ssl/d1_pkt.c": [
          "File: ssl/d1_pkt.c -> ssl/d1_pkt.c"
        ],
        "ssl/s3_pkt.c||ssl/s3_pkt.c": [
          "File: ssl/s3_pkt.c -> ssl/s3_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "148:  if (SSL_version(s) == DTLS1_VERSION)",
          "149:   {",
          "150:   if ( s->s3->rbuf.left > 0 && n > s->s3->rbuf.left)",
          "151:    n = s->s3->rbuf.left;",
          "152:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150:   if (s->s3->rbuf.left == 0 && extend)",
          "151:    return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8d7aab986b499f34d9e1bc58fbfd77f05c38116e",
      "candidate_info": {
        "commit_hash": "8d7aab986b499f34d9e1bc58fbfd77f05c38116e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8d7aab986b499f34d9e1bc58fbfd77f05c38116e",
        "files": [
          "ssl/d1_pkt.c",
          "ssl/s3_pkt.c"
        ],
        "message": "Fix crash in dtls1_get_record whilst in the listen state where you get two separate reads performed - one for the header and one for the body of the handshake record.\n\nCVE-2014-3571\n\nReviewed-by: Matt Caswell <matt@openssl.org>",
        "before_after_code_files": [
          "ssl/d1_pkt.c||ssl/d1_pkt.c",
          "ssl/s3_pkt.c||ssl/s3_pkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c",
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ],
          "candidate": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c",
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/d1_pkt.c||ssl/d1_pkt.c": [
          "File: ssl/d1_pkt.c -> ssl/d1_pkt.c"
        ],
        "ssl/s3_pkt.c||ssl/s3_pkt.c": [
          "File: ssl/s3_pkt.c -> ssl/s3_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "184:  if (SSL_version(s) == DTLS1_VERSION || SSL_version(s) == DTLS1_BAD_VER)",
          "185:   {",
          "186:   if (left > 0 && n > left)",
          "187:    n = left;",
          "188:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "186:   if (left == 0 && extend)",
          "187:    return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25d738c3a46339730e990391ca6399158636473e",
      "candidate_info": {
        "commit_hash": "25d738c3a46339730e990391ca6399158636473e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/25d738c3a46339730e990391ca6399158636473e",
        "files": [
          "ssl/d1_pkt.c",
          "ssl/s3_pkt.c"
        ],
        "message": "Fix crash in dtls1_get_record whilst in the listen state where you get two separate reads performed - one for the header and one for the body of the handshake record.\n\nCVE-2014-3571\n\nReviewed-by: Matt Caswell <matt@openssl.org>",
        "before_after_code_files": [
          "ssl/d1_pkt.c||ssl/d1_pkt.c",
          "ssl/s3_pkt.c||ssl/s3_pkt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c",
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ],
          "candidate": [
            "ssl/d1_pkt.c||ssl/d1_pkt.c",
            "ssl/s3_pkt.c||ssl/s3_pkt.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/d1_pkt.c||ssl/d1_pkt.c": [
          "File: ssl/d1_pkt.c -> ssl/d1_pkt.c"
        ],
        "ssl/s3_pkt.c||ssl/s3_pkt.c": [
          "File: ssl/s3_pkt.c -> ssl/s3_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:  if (SSL_IS_DTLS(s))",
          "199:   {",
          "200:   if (left > 0 && n > left)",
          "201:    n = left;",
          "202:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "200:   if (left == 0 && extend)",
          "201:    return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}