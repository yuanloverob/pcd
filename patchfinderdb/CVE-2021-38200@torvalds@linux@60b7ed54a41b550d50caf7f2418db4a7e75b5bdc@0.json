{
  "cve_id": "CVE-2021-38200",
  "cve_desc": "arch/powerpc/perf/core-book3s.c in the Linux kernel before 5.12.13, on systems with perf_event_paranoid=-1 and no specific PMU driver support registered, allows local users to cause a denial of service (perf_instruction_pointer NULL pointer dereference and OOPS) via a \"perf record\" command.",
  "repo": "torvalds/linux",
  "patch_hash": "60b7ed54a41b550d50caf7f2418db4a7e75b5bdc",
  "patch_info": {
    "commit_hash": "60b7ed54a41b550d50caf7f2418db4a7e75b5bdc",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/60b7ed54a41b550d50caf7f2418db4a7e75b5bdc",
    "files": [
      "arch/powerpc/perf/core-book3s.c"
    ],
    "message": "powerpc/perf: Fix crash in perf_instruction_pointer() when ppmu is not set\n\nOn systems without any specific PMU driver support registered, running\nperf record causes Oops.\n\nThe relevant portion from call trace:\n\n  BUG: Kernel NULL pointer dereference on read at 0x00000040\n  Faulting instruction address: 0xc0021f0c\n  Oops: Kernel access of bad area, sig: 11 [#1]\n  BE PAGE_SIZE=4K PREEMPT CMPCPRO\n  SAF3000 DIE NOTIFICATION\n  CPU: 0 PID: 442 Comm: null_syscall Not tainted 5.13.0-rc6-s3k-dev-01645-g7649ee3d2957 #5164\n  NIP:  c0021f0c LR: c00e8ad8 CTR: c00d8a5c\n  NIP perf_instruction_pointer+0x10/0x60\n  LR  perf_prepare_sample+0x344/0x674\n  Call Trace:\n    perf_prepare_sample+0x7c/0x674 (unreliable)\n    perf_event_output_forward+0x3c/0x94\n    __perf_event_overflow+0x74/0x14c\n    perf_swevent_hrtimer+0xf8/0x170\n    __hrtimer_run_queues.constprop.0+0x160/0x318\n    hrtimer_interrupt+0x148/0x3b0\n    timer_interrupt+0xc4/0x22c\n    Decrementer_virt+0xb8/0xbc\n\nDuring perf record session, perf_instruction_pointer() is called to\ncapture the sample IP. This function in core-book3s accesses\nppmu->flags. If a platform specific PMU driver is not registered, ppmu\nis set to NULL and accessing its members results in a crash. Fix this\ncrash by checking if ppmu is set.\n\nFixes: 2ca13a4cc56c (\"powerpc/perf: Use regs->nip when SIAR is zero\")\nCc: stable@vger.kernel.org # v5.11+\nReported-by: Christophe Leroy <christophe.leroy@csgroup.eu>\nSigned-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>\nTested-by: Christophe Leroy <christophe.leroy@csgroup.eu>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>\nLink: https://lore.kernel.org/r/1623952506-1431-1-git-send-email-atrajeev@linux.vnet.ibm.com",
    "before_after_code_files": [
      "arch/powerpc/perf/core-book3s.c||arch/powerpc/perf/core-book3s.c"
    ]
  },
  "patch_diff": {
    "arch/powerpc/perf/core-book3s.c||arch/powerpc/perf/core-book3s.c": [
      "File: arch/powerpc/perf/core-book3s.c -> arch/powerpc/perf/core-book3s.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2254:  bool use_siar = regs_use_siar(regs);",
      "2255:  unsigned long siar = mfspr(SPRN_SIAR);",
      "2258:   if (siar)",
      "2259:    return siar;",
      "2260:   else",
      "",
      "[Removed Lines]",
      "2257:  if (ppmu->flags & PPMU_P10_DD1) {",
      "",
      "[Added Lines]",
      "2257:  if (ppmu && (ppmu->flags & PPMU_P10_DD1)) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c087e9480cf33672ef2c6cce4348d754988b8437",
      "candidate_info": {
        "commit_hash": "c087e9480cf33672ef2c6cce4348d754988b8437",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/c087e9480cf33672ef2c6cce4348d754988b8437",
        "files": [
          "tools/perf/util/machine.c"
        ],
        "message": "perf machine: Fix refcount usage when processing PERF_RECORD_KSYMBOL\n\nASan reported a memory leak of BPF-related ksymbols map and dso. The\nleak is caused by refount never reaching 0, due to missing __put calls\nin the function machine__process_ksymbol_register.\n\nOnce the dso is inserted in the map, dso__put() should be called\n(map__new2() increases the refcount to 2).\n\nThe same thing applies for the map when it's inserted into maps\n(maps__insert() increases the refcount to 2).\n\n  $ sudo ./perf record -- sleep 5\n  [ perf record: Woken up 1 times to write data ]\n  [ perf record: Captured and wrote 0.025 MB perf.data (8 samples) ]\n\n  =================================================================\n  ==297735==ERROR: LeakSanitizer: detected memory leaks\n\n  Direct leak of 6992 byte(s) in 19 object(s) allocated from:\n      #0 0x4f43c7 in calloc (/home/user/linux/tools/perf/perf+0x4f43c7)\n      #1 0x8e4e53 in map__new2 /home/user/linux/tools/perf/util/map.c:216:20\n      #2 0x8cf68c in machine__process_ksymbol_register /home/user/linux/tools/perf/util/machine.c:778:10\n      [...]\n\n  Indirect leak of 8702 byte(s) in 19 object(s) allocated from:\n      #0 0x4f43c7 in calloc (/home/user/linux/tools/perf/perf+0x4f43c7)\n      #1 0x8728d7 in dso__new_id /home/user/linux/tools/perf/util/dso.c:1256:20\n      #2 0x872015 in dso__new /home/user/linux/tools/perf/util/dso.c:1295:9\n      #3 0x8cf623 in machine__process_ksymbol_register /home/user/linux/tools/perf/util/machine.c:774:21\n      [...]\n\n  Indirect leak of 1520 byte(s) in 19 object(s) allocated from:\n      #0 0x4f43c7 in calloc (/home/user/linux/tools/perf/perf+0x4f43c7)\n      #1 0x87b3da in symbol__new /home/user/linux/tools/perf/util/symbol.c:269:23\n      #2 0x888954 in map__process_kallsym_symbol /home/user/linux/tools/perf/util/symbol.c:710:8\n      [...]\n\n  Indirect leak of 1406 byte(s) in 19 object(s) allocated from:\n      #0 0x4f43c7 in calloc (/home/user/linux/tools/perf/perf+0x4f43c7)\n      #1 0x87b3da in symbol__new /home/user/linux/tools/perf/util/symbol.c:269:23\n      #2 0x8cfbd8 in machine__process_ksymbol_register /home/user/linux/tools/perf/util/machine.c:803:8\n      [...]\n\nSigned-off-by: Riccardo Mancini <rickyman7@gmail.com>\nCc: Adrian Hunter <adrian.hunter@intel.com>\nCc: Alexander Shishkin <alexander.shishkin@linux.intel.com>\nCc: Andi Kleen <ak@linux.intel.com>\nCc: Ian Rogers <irogers@google.com>\nCc: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: Mark Rutland <mark.rutland@arm.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Tommi Rantala <tommi.t.rantala@nokia.com>\nLink: http://lore.kernel.org/lkml/20210612173751.188582-1-rickyman7@gmail.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
        "before_after_code_files": [
          "tools/perf/util/machine.c||tools/perf/util/machine.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/perf/util/machine.c||tools/perf/util/machine.c": [
          "File: tools/perf/util/machine.c -> tools/perf/util/machine.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "776:   if (dso) {",
          "777:    dso->kernel = DSO_SPACE__KERNEL;",
          "778:    map = map__new2(0, dso);",
          "779:   }",
          "781:   if (!dso || !map) {",
          "783:    return -ENOMEM;",
          "784:   }",
          "",
          "[Removed Lines]",
          "782:    dso__put(dso);",
          "",
          "[Added Lines]",
          "779:    dso__put(dso);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "792:   map->start = event->ksymbol.addr;",
          "793:   map->end = map->start + event->ksymbol.len;",
          "794:   maps__insert(&machine->kmaps, map);",
          "795:   dso__set_loaded(dso);",
          "797:   if (is_bpf_image(event->ksymbol.name)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "795:   map__put(map);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4bcbe438b3baaeb532dd50a5f002aed56c197e2a",
      "candidate_info": {
        "commit_hash": "4bcbe438b3baaeb532dd50a5f002aed56c197e2a",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/4bcbe438b3baaeb532dd50a5f002aed56c197e2a",
        "files": [
          "tools/perf/Documentation/perf-annotate.txt",
          "tools/perf/builtin-annotate.c"
        ],
        "message": "perf annotate: Add itrace options support\n\nThe \"auxtrace_info\" and \"auxtrace\" functions are not set in \"tool\" member of\n\"annotate\". As a result, perf annotate does not support parsing itrace data.\n\nBefore:\n\n  # perf record -e arm_spe_0/branch_filter=1/ -a sleep 1\n  [ perf record: Woken up 9 times to write data ]\n  [ perf record: Captured and wrote 20.874 MB perf.data ]\n  # perf annotate --stdio\n  Error:\n  The perf.data data has no samples!\n\nSolution:\n\n1. Add itrace options in help,\n2. Set hook functions of \"id_index\", \"auxtrace_info\" and \"auxtrace\" in perf_tool.\n\nAfter:\n\n  # perf record --all-user -e arm_spe_0/branch_filter=1/ ls\n  Couldn't synthesize bpf events.\n  perf.data\n  [ perf record: Woken up 1 times to write data ]\n  [ perf record: Captured and wrote 0.010 MB perf.data ]\n  # perf annotate --stdio\n   Percent |      Source code & Disassembly of libc-2.28.so for branch-miss (1 samples, percent: local period)\n  ------------------------------------------------------------------------------------------------------------\n           :\n           :\n           :\n           :           Disassembly of section .text:\n           :\n           :           0000000000066180 <__getdelim@@GLIBC_2.17>:\n      0.00 :   66180:  stp     x29, x30, [sp, #-96]!\n      0.00 :   66184:  cmp     x0, #0x0\n      0.00 :   66188:  ccmp    x1, #0x0, #0x4, ne  // ne = any\n      0.00 :   6618c:  mov     x29, sp\n      0.00 :   66190:  stp     x24, x25, [sp, #56]\n      0.00 :   66194:  stp     x26, x27, [sp, #72]\n      0.00 :   66198:  str     x28, [sp, #88]\n      0.00 :   6619c:  b.eq    66450 <__getdelim@@GLIBC_2.17+0x2d0>  // b.none\n      0.00 :   661a0:  stp     x22, x23, [x29, #40]\n      0.00 :   661a4:  mov     x22, x1\n      0.00 :   661a8:  ldr     w1, [x3]\n      0.00 :   661ac:  mov     w23, w2\n      0.00 :   661b0:  stp     x20, x21, [x29, #24]\n      0.00 :   661b4:  mov     x20, x3\n      0.00 :   661b8:  mov     x21, x0\n      0.00 :   661bc:  tbnz    w1, #15, 66360 <__getdelim@@GLIBC_2.17+0x1e0>\n      0.00 :   661c0:  ldr     x0, [x3, #136]\n      0.00 :   661c4:  ldr     x2, [x0, #8]\n      0.00 :   661c8:  str     x19, [x29, #16]\n      0.00 :   661cc:  mrs     x19, tpidr_el0\n      0.00 :   661d0:  sub     x19, x19, #0x700\n      0.00 :   661d4:  cmp     x2, x19\n      0.00 :   661d8:  b.eq    663f0 <__getdelim@@GLIBC_2.17+0x270>  // b.none\n      0.00 :   661dc:  mov     w1, #0x1                        // #1\n      0.00 :   661e0:  ldaxr   w2, [x0]\n      0.00 :   661e4:  cmp     w2, #0x0\n      0.00 :   661e8:  b.ne    661f4 <__getdelim@@GLIBC_2.17+0x74>  // b.any\n      0.00 :   661ec:  stxr    w3, w1, [x0]\n      0.00 :   661f0:  cbnz    w3, 661e0 <__getdelim@@GLIBC_2.17+0x60>\n      0.00 :   661f4:  b.ne    66448 <__getdelim@@GLIBC_2.17+0x2c8>  // b.any\n      0.00 :   661f8:  ldr     x0, [x20, #136]\n      0.00 :   661fc:  ldr     w1, [x20]\n      0.00 :   66200:  ldr     w2, [x0, #4]\n      0.00 :   66204:  str     x19, [x0, #8]\n      0.00 :   66208:  add     w2, w2, #0x1\n      0.00 :   6620c:  str     w2, [x0, #4]\n      0.00 :   66210:  tbnz    w1, #5, 66388 <__getdelim@@GLIBC_2.17+0x208>\n      0.00 :   66214:  ldr     x19, [x29, #16]\n      0.00 :   66218:  ldr     x0, [x21]\n      0.00 :   6621c:  cbz     x0, 66228 <__getdelim@@GLIBC_2.17+0xa8>\n      0.00 :   66220:  ldr     x0, [x22]\n      0.00 :   66224:  cbnz    x0, 6623c <__getdelim@@GLIBC_2.17+0xbc>\n      0.00 :   66228:  mov     x0, #0x78                       // #120\n      0.00 :   6622c:  str     x0, [x22]\n      0.00 :   66230:  bl      20710 <malloc@plt>\n      0.00 :   66234:  str     x0, [x21]\n      0.00 :   66238:  cbz     x0, 66428 <__getdelim@@GLIBC_2.17+0x2a8>\n      0.00 :   6623c:  ldr     x27, [x20, #8]\n      0.00 :   66240:  str     x19, [x29, #16]\n      0.00 :   66244:  ldr     x19, [x20, #16]\n      0.00 :   66248:  sub     x19, x19, x27\n      0.00 :   6624c:  cmp     x19, #0x0\n      0.00 :   66250:  b.le    66398 <__getdelim@@GLIBC_2.17+0x218>\n      0.00 :   66254:  mov     x25, #0x0                       // #0\n      0.00 :   66258:  b       662d8 <__getdelim@@GLIBC_2.17+0x158>\n      0.00 :   6625c:  nop\n      0.00 :   66260:  add     x24, x19, x25\n      0.00 :   66264:  ldr     x3, [x22]\n      0.00 :   66268:  add     x26, x24, #0x1\n      0.00 :   6626c:  ldr     x0, [x21]\n      0.00 :   66270:  cmp     x3, x26\n      0.00 :   66274:  b.cs    6629c <__getdelim@@GLIBC_2.17+0x11c>  // b.hs, b.nlast\n      0.00 :   66278:  lsl     x3, x3, #1\n      0.00 :   6627c:  cmp     x3, x26\n      0.00 :   66280:  csel    x26, x3, x26, cs  // cs = hs, nlast\n      0.00 :   66284:  mov     x1, x26\n      0.00 :   66288:  bl      206f0 <realloc@plt>\n      0.00 :   6628c:  cbz     x0, 66438 <__getdelim@@GLIBC_2.17+0x2b8>\n      0.00 :   66290:  str     x0, [x21]\n      0.00 :   66294:  ldr     x27, [x20, #8]\n      0.00 :   66298:  str     x26, [x22]\n      0.00 :   6629c:  mov     x2, x19\n      0.00 :   662a0:  mov     x1, x27\n      0.00 :   662a4:  add     x0, x0, x25\n      0.00 :   662a8:  bl      87390 <explicit_bzero@@GLIBC_2.25+0x50>\n      0.00 :   662ac:  ldr     x0, [x20, #8]\n      0.00 :   662b0:  add     x19, x0, x19\n      0.00 :   662b4:  str     x19, [x20, #8]\n      0.00 :   662b8:  cbnz    x28, 66410 <__getdelim@@GLIBC_2.17+0x290>\n      0.00 :   662bc:  mov     x0, x20\n      0.00 :   662c0:  bl      73b80 <__underflow@@GLIBC_2.17>\n      0.00 :   662c4:  cmn     w0, #0x1\n      0.00 :   662c8:  b.eq    66410 <__getdelim@@GLIBC_2.17+0x290>  // b.none\n      0.00 :   662cc:  ldp     x27, x19, [x20, #8]\n      0.00 :   662d0:  mov     x25, x24\n      0.00 :   662d4:  sub     x19, x19, x27\n      0.00 :   662d8:  mov     x2, x19\n      0.00 :   662dc:  mov     w1, w23\n      0.00 :   662e0:  mov     x0, x27\n      0.00 :   662e4:  bl      807b0 <memchr@@GLIBC_2.17>\n      0.00 :   662e8:  cmp     x0, #0x0\n      0.00 :   662ec:  mov     x28, x0\n      0.00 :   662f0:  sub     x0, x0, x27\n      0.00 :   662f4:  csinc   x19, x19, x0, eq  // eq = none\n      0.00 :   662f8:  mov     x0, #0x7fffffffffffffff         // #9223372036854775807\n      0.00 :   662fc:  sub     x0, x0, x25\n      0.00 :   66300:  cmp     x19, x0\n      0.00 :   66304:  b.lt    66260 <__getdelim@@GLIBC_2.17+0xe0>  // b.tstop\n      0.00 :   66308:  adrp    x0, 17f000 <sys_sigabbrev@@GLIBC_2.17+0x320>\n      0.00 :   6630c:  ldr     x0, [x0, #3624]\n      0.00 :   66310:  mrs     x2, tpidr_el0\n      0.00 :   66314:  ldr     x19, [x29, #16]\n      0.00 :   66318:  mov     w3, #0x4b                       // #75\n      0.00 :   6631c:  ldr     w1, [x20]\n      0.00 :   66320:  mov     x24, #0xffffffffffffffff        // #-1\n      0.00 :   66324:  str     w3, [x2, x0]\n      0.00 :   66328:  tbnz    w1, #15, 66340 <__getdelim@@GLIBC_2.17+0x1c0>\n      0.00 :   6632c:  ldr     x0, [x20, #136]\n      0.00 :   66330:  ldr     w1, [x0, #4]\n      0.00 :   66334:  sub     w1, w1, #0x1\n      0.00 :   66338:  str     w1, [x0, #4]\n      0.00 :   6633c:  cbz     w1, 663b8 <__getdelim@@GLIBC_2.17+0x238>\n      0.00 :   66340:  mov     x0, x24\n      0.00 :   66344:  ldr     x28, [sp, #88]\n      0.00 :   66348:  ldp     x20, x21, [x29, #24]\n      0.00 :   6634c:  ldp     x22, x23, [x29, #40]\n      0.00 :   66350:  ldp     x24, x25, [sp, #56]\n      0.00 :   66354:  ldp     x26, x27, [sp, #72]\n      0.00 :   66358:  ldp     x29, x30, [sp], #96\n      0.00 :   6635c:  ret\n    100.00 :   66360:  tbz     w1, #5, 66218 <__getdelim@@GLIBC_2.17+0x98>\n      0.00 :   66364:  ldp     x20, x21, [x29, #24]\n      0.00 :   66368:  mov     x24, #0xffffffffffffffff        // #-1\n      0.00 :   6636c:  ldp     x22, x23, [x29, #40]\n      0.00 :   66370:  mov     x0, x24\n      0.00 :   66374:  ldp     x24, x25, [sp, #56]\n      0.00 :   66378:  ldp     x26, x27, [sp, #72]\n      0.00 :   6637c:  ldr     x28, [sp, #88]\n      0.00 :   66380:  ldp     x29, x30, [sp], #96\n      0.00 :   66384:  ret\n      0.00 :   66388:  mov     x24, #0xffffffffffffffff        // #-1\n      0.00 :   6638c:  ldr     x19, [x29, #16]\n      0.00 :   66390:  b       66328 <__getdelim@@GLIBC_2.17+0x1a8>\n      0.00 :   66394:  nop\n      0.00 :   66398:  mov     x0, x20\n      0.00 :   6639c:  bl      73b80 <__underflow@@GLIBC_2.17>\n      0.00 :   663a0:  cmn     w0, #0x1\n      0.00 :   663a4:  b.eq    66438 <__getdelim@@GLIBC_2.17+0x2b8>  // b.none\n      0.00 :   663a8:  ldp     x27, x19, [x20, #8]\n      0.00 :   663ac:  sub     x19, x19, x27\n      0.00 :   663b0:  b       66254 <__getdelim@@GLIBC_2.17+0xd4>\n      0.00 :   663b4:  nop\n      0.00 :   663b8:  str     xzr, [x0, #8]\n      0.00 :   663bc:  ldxr    w2, [x0]\n      0.00 :   663c0:  stlxr   w3, w1, [x0]\n      0.00 :   663c4:  cbnz    w3, 663bc <__getdelim@@GLIBC_2.17+0x23c>\n      0.00 :   663c8:  cmp     w2, #0x1\n      0.00 :   663cc:  b.le    66340 <__getdelim@@GLIBC_2.17+0x1c0>\n      0.00 :   663d0:  mov     x1, #0x81                       // #129\n      0.00 :   663d4:  mov     x2, #0x1                        // #1\n      0.00 :   663d8:  mov     x3, #0x0                        // #0\n      0.00 :   663dc:  mov     x8, #0x62                       // #98\n      0.00 :   663e0:  svc     #0x0\n      0.00 :   663e4:  ldp     x20, x21, [x29, #24]\n      0.00 :   663e8:  ldp     x22, x23, [x29, #40]\n      0.00 :   663ec:  b       66370 <__getdelim@@GLIBC_2.17+0x1f0>\n      0.00 :   663f0:  ldr     w2, [x0, #4]\n      0.00 :   663f4:  add     w2, w2, #0x1\n      0.00 :   663f8:  str     w2, [x0, #4]\n      0.00 :   663fc:  tbz     w1, #5, 66214 <__getdelim@@GLIBC_2.17+0x94>\n      0.00 :   66400:  mov     x24, #0xffffffffffffffff        // #-1\n      0.00 :   66404:  ldr     x19, [x29, #16]\n      0.00 :   66408:  b       66330 <__getdelim@@GLIBC_2.17+0x1b0>\n      0.00 :   6640c:  nop\n      0.00 :   66410:  ldr     x0, [x21]\n      0.00 :   66414:  strb    wzr, [x0, x24]\n      0.00 :   66418:  ldr     w1, [x20]\n      0.00 :   6641c:  ldr     x19, [x29, #16]\n      0.00 :   66420:  b       66328 <__getdelim@@GLIBC_2.17+0x1a8>\n      0.00 :   66424:  nop\n      0.00 :   66428:  mov     x24, #0xffffffffffffffff        // #-1\n      0.00 :   6642c:  ldr     w1, [x20]\n      0.00 :   66430:  b       66328 <__getdelim@@GLIBC_2.17+0x1a8>\n      0.00 :   66434:  nop\n      0.00 :   66438:  mov     x24, #0xffffffffffffffff        // #-1\n      0.00 :   6643c:  ldr     w1, [x20]\n      0.00 :   66440:  ldr     x19, [x29, #16]\n      0.00 :   66444:  b       66328 <__getdelim@@GLIBC_2.17+0x1a8>\n      0.00 :   66448:  bl      e3ba0 <pthread_setcanceltype@@GLIBC_2.17+0x30>\n      0.00 :   6644c:  b       661f8 <__getdelim@@GLIBC_2.17+0x78>\n      0.00 :   66450:  adrp    x0, 17f000 <sys_sigabbrev@@GLIBC_2.17+0x320>\n      0.00 :   66454:  ldr     x0, [x0, #3624]\n      0.00 :   66458:  mrs     x1, tpidr_el0\n      0.00 :   6645c:  mov     w2, #0x16                       // #22\n      0.00 :   66460:  mov     x24, #0xffffffffffffffff        // #-1\n      0.00 :   66464:  str     w2, [x1, x0]\n      0.00 :   66468:  b       66370 <__getdelim@@GLIBC_2.17+0x1f0>\n      0.00 :   6646c:  ldr     w1, [x20]\n      0.00 :   66470:  mov     x4, x0\n      0.00 :   66474:  tbnz    w1, #15, 6648c <__getdelim@@GLIBC_2.17+0x30c>\n      0.00 :   66478:  ldr     x0, [x20, #136]\n      0.00 :   6647c:  ldr     w1, [x0, #4]\n      0.00 :   66480:  sub     w1, w1, #0x1\n      0.00 :   66484:  str     w1, [x0, #4]\n      0.00 :   66488:  cbz     w1, 66494 <__getdelim@@GLIBC_2.17+0x314>\n      0.00 :   6648c:  mov     x0, x4\n      0.00 :   66490:  bl      20e40 <gnu_get_libc_version@@GLIBC_2.17+0x130>\n      0.00 :   66494:  str     xzr, [x0, #8]\n      0.00 :   66498:  ldxr    w2, [x0]\n      0.00 :   6649c:  stlxr   w3, w1, [x0]\n      0.00 :   664a0:  cbnz    w3, 66498 <__getdelim@@GLIBC_2.17+0x318>\n      0.00 :   664a4:  cmp     w2, #0x1\n      0.00 :   664a8:  b.le    6648c <__getdelim@@GLIBC_2.17+0x30c>\n      0.00 :   664ac:  mov     x1, #0x81                       // #129\n      0.00 :   664b0:  mov     x2, #0x1                        // #1\n      0.00 :   664b4:  mov     x3, #0x0                        // #0\n      0.00 :   664b8:  mov     x8, #0x62                       // #98\n      0.00 :   664bc:  svc     #0x0\n      0.00 :   664c0:  b       6648c <__getdelim@@GLIBC_2.17+0x30c>\n\nSigned-off-by: Yang Jihong <yangjihong1@huawei.com>\nTested-by: Leo Yan <leo.yan@linaro.org>\nAcked-by: Adrian Hunter <adrian.hunter@intel.com>\nCc: Alexander Shishkin <alexander.shishkin@linux.intel.com>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: Mark Rutland <mark.rutland@arm.com>\nCc: Namhyung Kim <namhyung@kernel.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nLink: http://lore.kernel.org/lkml/20210615091704.259202-1-yangjihong1@huawei.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>",
        "before_after_code_files": [
          "tools/perf/builtin-annotate.c||tools/perf/builtin-annotate.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/perf/builtin-annotate.c||tools/perf/builtin-annotate.c": [
          "File: tools/perf/builtin-annotate.c -> tools/perf/builtin-annotate.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "474:    .attr = perf_event__process_attr,",
          "475:    .build_id = perf_event__process_build_id,",
          "476:    .tracing_data   = perf_event__process_tracing_data,",
          "477:    .feature = process_feature_event,",
          "478:    .ordered_events = true,",
          "479:    .ordering_requires_timestamps = true,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "477:    .id_index = perf_event__process_id_index,",
          "478:    .auxtrace_info = perf_event__process_auxtrace_info,",
          "479:    .auxtrace = perf_event__process_auxtrace,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "483:  struct perf_data data = {",
          "484:   .mode  = PERF_DATA_MODE_READ,",
          "485:  };",
          "486:  struct option options[] = {",
          "487:  OPT_STRING('i', \"input\", &input_name, \"file\",",
          "488:       \"input file name\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "489:  struct itrace_synth_opts itrace_synth_opts = {",
          "490:   .set = 0,",
          "491:  };",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "547:  OPT_CALLBACK(0, \"percent-type\", &annotate.opts, \"local-period\",",
          "548:        \"Set percent type local/global-period/hits\",",
          "549:        annotate_parse_percent_type),",
          "551:  OPT_END()",
          "552:  };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "556:  OPT_CALLBACK_OPTARG(0, \"itrace\", &itrace_synth_opts, NULL, \"opts\",",
          "557:        \"Instruction Tracing options\\n\" ITRACE_HELP,",
          "558:        itrace_parse_synth_opts),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "591:  if (IS_ERR(annotate.session))",
          "592:   return PTR_ERR(annotate.session);",
          "594:  annotate.has_br_stack = perf_header__has_feat(&annotate.session->header,",
          "595:             HEADER_BRANCH_STACK);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "603:  annotate.session->itrace_synth_opts = &itrace_synth_opts;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3a02764c372c50ff7917fde5c6961f6cdb81d9d5",
      "candidate_info": {
        "commit_hash": "3a02764c372c50ff7917fde5c6961f6cdb81d9d5",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3a02764c372c50ff7917fde5c6961f6cdb81d9d5",
        "files": [
          "Documentation/riscv/vm-layout.rst",
          "arch/riscv/include/asm/pgtable.h",
          "arch/riscv/mm/kasan_init.c"
        ],
        "message": "riscv: Ensure BPF_JIT_REGION_START aligned with PMD size\n\nAndreas reported commit fc8504765ec5 (\"riscv: bpf: Avoid breaking W^X\")\nbreaks booting with one kind of defconfig, I reproduced a kernel panic\nwith the defconfig:\n\n[    0.138553] Unable to handle kernel paging request at virtual address ffffffff81201220\n[    0.139159] Oops [#1]\n[    0.139303] Modules linked in:\n[    0.139601] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.13.0-rc5-default+ #1\n[    0.139934] Hardware name: riscv-virtio,qemu (DT)\n[    0.140193] epc : __memset+0xc4/0xfc\n[    0.140416]  ra : skb_flow_dissector_init+0x1e/0x82\n[    0.140609] epc : ffffffff8029806c ra : ffffffff8033be78 sp : ffffffe001647da0\n[    0.140878]  gp : ffffffff81134b08 tp : ffffffe001654380 t0 : ffffffff81201158\n[    0.141156]  t1 : 0000000000000002 t2 : 0000000000000154 s0 : ffffffe001647dd0\n[    0.141424]  s1 : ffffffff80a43250 a0 : ffffffff81201220 a1 : 0000000000000000\n[    0.141654]  a2 : 000000000000003c a3 : ffffffff81201258 a4 : 0000000000000064\n[    0.141893]  a5 : ffffffff8029806c a6 : 0000000000000040 a7 : ffffffffffffffff\n[    0.142126]  s2 : ffffffff81201220 s3 : 0000000000000009 s4 : ffffffff81135088\n[    0.142353]  s5 : ffffffff81135038 s6 : ffffffff8080ce80 s7 : ffffffff80800438\n[    0.142584]  s8 : ffffffff80bc6578 s9 : 0000000000000008 s10: ffffffff806000ac\n[    0.142810]  s11: 0000000000000000 t3 : fffffffffffffffc t4 : 0000000000000000\n[    0.143042]  t5 : 0000000000000155 t6 : 00000000000003ff\n[    0.143220] status: 0000000000000120 badaddr: ffffffff81201220 cause: 000000000000000f\n[    0.143560] [<ffffffff8029806c>] __memset+0xc4/0xfc\n[    0.143859] [<ffffffff8061e984>] init_default_flow_dissectors+0x22/0x60\n[    0.144092] [<ffffffff800010fc>] do_one_initcall+0x3e/0x168\n[    0.144278] [<ffffffff80600df0>] kernel_init_freeable+0x1c8/0x224\n[    0.144479] [<ffffffff804868a8>] kernel_init+0x12/0x110\n[    0.144658] [<ffffffff800022de>] ret_from_exception+0x0/0xc\n[    0.145124] ---[ end trace f1e9643daa46d591 ]---\n\nAfter some investigation, I think I found the root cause: commit\n2bfc6cd81bd (\"move kernel mapping outside of linear mapping\") moves\nBPF JIT region after the kernel:\n\n| #define BPF_JIT_REGION_START\tPFN_ALIGN((unsigned long)&_end)\n\nThe &_end is unlikely aligned with PMD size, so the front bpf jit\nregion sits with part of kernel .data section in one PMD size mapping.\nBut kernel is mapped in PMD SIZE, when bpf_jit_binary_lock_ro() is\ncalled to make the first bpf jit prog ROX, we will make part of kernel\n.data section RO too, so when we write to, for example memset the\n.data section, MMU will trigger a store page fault.\n\nTo fix the issue, we need to ensure the BPF JIT region is PMD size\naligned. This patch acchieve this goal by restoring the BPF JIT region\nto original position, I.E the 128MB before kernel .text section. The\nmodification to kasan_init.c is inspired by Alexandre.\n\nFixes: fc8504765ec5 (\"riscv: bpf: Avoid breaking W^X\")\nReported-by: Andreas Schwab <schwab@linux-m68k.org>\nSigned-off-by: Jisheng Zhang <jszhang@kernel.org>\nSigned-off-by: Palmer Dabbelt <palmerdabbelt@google.com>",
        "before_after_code_files": [
          "arch/riscv/include/asm/pgtable.h||arch/riscv/include/asm/pgtable.h",
          "arch/riscv/mm/kasan_init.c||arch/riscv/mm/kasan_init.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/riscv/include/asm/pgtable.h||arch/riscv/include/asm/pgtable.h": [
          "File: arch/riscv/include/asm/pgtable.h -> arch/riscv/include/asm/pgtable.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #define BPF_JIT_REGION_SIZE (SZ_128M)",
          "32: #ifdef CONFIG_64BIT",
          "36: #else",
          "37: #define BPF_JIT_REGION_START (PAGE_OFFSET - BPF_JIT_REGION_SIZE)",
          "38: #define BPF_JIT_REGION_END (VMALLOC_END)",
          "",
          "[Removed Lines]",
          "34: #define BPF_JIT_REGION_START PFN_ALIGN((unsigned long)&_end)",
          "35: #define BPF_JIT_REGION_END (BPF_JIT_REGION_START + BPF_JIT_REGION_SIZE)",
          "",
          "[Added Lines]",
          "33: #define BPF_JIT_REGION_START (BPF_JIT_REGION_END - BPF_JIT_REGION_SIZE)",
          "34: #define BPF_JIT_REGION_END (MODULES_END)",
          "",
          "---------------"
        ],
        "arch/riscv/mm/kasan_init.c||arch/riscv/mm/kasan_init.c": [
          "File: arch/riscv/mm/kasan_init.c -> arch/riscv/mm/kasan_init.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:  kasan_populate(kasan_mem_to_shadow((const void *)MODULES_VADDR),",
          "206:  for (i = 0; i < PTRS_PER_PTE; i++)",
          "207:   set_pte(&kasan_early_shadow_pte[i],",
          "",
          "[Removed Lines]",
          "204:          kasan_mem_to_shadow((const void *)BPF_JIT_REGION_END));",
          "",
          "[Added Lines]",
          "204:          kasan_mem_to_shadow((const void *)MODULES_VADDR + SZ_2G));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d74c4b5667425c35d74906795a08e02e29df5b46",
      "candidate_info": {
        "commit_hash": "d74c4b5667425c35d74906795a08e02e29df5b46",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d74c4b5667425c35d74906795a08e02e29df5b46",
        "files": [
          "drivers/net/wireless/mediatek/mt76/mt7921/mac.c"
        ],
        "message": "mt76: mt7921: do not schedule hw reset if the device is not running\n\nDo not schedule hw full reset if the device is not fully initialized\n(e.g if the channel has not been configured yet). This patch fixes\nthe kernel crash reported below\n\n[   44.440266] mt7921e 0000:01:00.0: chip reset failed\n[   44.527575] Unable to handle kernel paging request at virtual address ffffffc02f3e0000\n[   44.535771] Mem abort info:\n[   44.538646]   ESR = 0x96000006\n[   44.541792]   EC = 0x25: DABT (current EL), IL = 32 bits\n[   44.547268]   SET = 0, FnV = 0\n[   44.550413]   EA = 0, S1PTW = 0\n[   44.553648] Data abort info:\n[   44.556613]   ISV = 0, ISS = 0x00000006\n[   44.560563]   CM = 0, WnR = 0\n[   44.563619] swapper pgtable: 4k pages, 39-bit VAs, pgdp=0000000000955000\n[   44.570530] [ffffffc02f3e0000] pgd=100000003ffff003, p4d=100000003ffff003, pud=100000003ffff003, pmd=0000000000000000\n[   44.581489] Internal error: Oops: 96000006 [#1] SMP\n[   44.606406] CPU: 0 PID: 0 Comm: swapper/0 Tainted: G        W         5.13.0-rc1-espressobin-12875-g6dc7f82ebc26 #33\n[   44.617264] Hardware name: Globalscale Marvell ESPRESSOBin Board (DT)\n[   44.623905] pstate: 600000c5 (nZCv daIF -PAN -UAO -TCO BTYPE=--)\n[   44.630100] pc : __queue_work+0x1f0/0x500\n[   44.634249] lr : __queue_work+0x1e8/0x500\n[   44.638384] sp : ffffffc010003d70\n[   44.641798] x29: ffffffc010003d70 x28: 0000000000000000 x27: ffffff8003989200\n[   44.649166] x26: ffffffc010c08510 x25: 0000000000000002 x24: ffffffc010ad90b0\n[   44.656533] x23: ffffffc010c08508 x22: 0000000000000012 x21: 0000000000000000\n[   44.663899] x20: ffffff8006385238 x19: ffffffc02f3e0000 x18: 00000000000003c9\n[   44.671266] x17: 0000000000000000 x16: 0000000000000000 x15: 000009b1a8a3bf90\n[   44.678632] x14: 0098968000000000 x13: 0000000000000000 x12: 0000000000000325\n[   44.685998] x11: ffffff803fda1928 x10: 0000000000000001 x9 : ffffffc010003e98\n[   44.693365] x8 : 0000000000000032 x7 : fff8000000000000 x6 : 0000000000000035\n[   44.700732] x5 : 0000000000000000 x4 : 0000000000000000 x3 : ffffffc010adf700\n[   44.708098] x2 : ffffff8006385238 x1 : 000000007fffffff x0 : 0000000000000000\n[   44.715465] Call trace:\n[   44.717982]  __queue_work+0x1f0/0x500\n[   44.721760]  delayed_work_timer_fn+0x18/0x20\n[   44.726167]  call_timer_fn+0x2c/0x178\n[   44.729947]  run_timer_softirq+0x488/0x5c8\n[   44.734172]  _stext+0x11c/0x378\n[   44.737411]  irq_exit+0x100/0x108\n[   44.740830]  __handle_domain_irq+0x60/0xb0\n[   44.745059]  gic_handle_irq+0x70/0x2b4\n[   44.748929]  el1_irq+0xb8/0x13c\n[   44.752167]  arch_cpu_idle+0x14/0x30\n[   44.755858]  default_idle_call+0x38/0x168\n[   44.759994]  do_idle+0x1fc/0x210\n[   44.763325]  cpu_startup_entry+0x20/0x58\n[   44.767372]  rest_init+0xb8/0xc8\n[   44.770703]  arch_call_rest_init+0xc/0x14\n[   44.774841]  start_kernel+0x408/0x424\n[   44.778623] Code: aa1403e0 97fff54f aa0003f5 b5fff500 (f9400275)\n[   44.784907] ---[ end trace be73c3142d8c36a9 ]---\n[   44.789668] Kernel panic - not syncing: Oops: Fatal exception in interrupt\n\nFixes: 0c1ce9884607 (\"mt76: mt7921: add wifi reset support\")\nSigned-off-by: Lorenzo Bianconi <lorenzo@kernel.org>\nSigned-off-by: Felix Fietkau <nbd@nbd.name>",
        "before_after_code_files": [
          "drivers/net/wireless/mediatek/mt76/mt7921/mac.c||drivers/net/wireless/mediatek/mt76/mt7921/mac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/mediatek/mt76/mt7921/mac.c||drivers/net/wireless/mediatek/mt76/mt7921/mac.c": [
          "File: drivers/net/wireless/mediatek/mt76/mt7921/mac.c -> drivers/net/wireless/mediatek/mt76/mt7921/mac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1354: {",
          "1355:  struct mt7921_dev *dev = container_of(mdev, struct mt7921_dev, mt76);",
          "1357:  if (!dev->hw_full_reset)",
          "1358:   queue_work(dev->mt76.wq, &dev->reset_work);",
          "1359: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1357:  if (!test_bit(MT76_STATE_RUNNING, &dev->mphy.state))",
          "1358:   return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff75332b260cd33cc19000fdb5d256d9db4470d1",
      "candidate_info": {
        "commit_hash": "ff75332b260cd33cc19000fdb5d256d9db4470d1",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/ff75332b260cd33cc19000fdb5d256d9db4470d1",
        "files": [
          "drivers/media/i2c/rdacm21.c"
        ],
        "message": "media: i2c: rdacm21: Fix OV10640 powerup\n\nThe OV10640 image sensor powerdown signal is controlled by the first\nline of the OV490 GPIO pad #1, but the pad #0 identifier\nOV490_GPIO_OUTPUT_VALUE0 was erroneously used. As a result the image\nsensor powerdown signal was never asserted but was left floating and\nkept high by an internal pull-up resistor, causing sporadic failures\nduring the image sensor startup phase.\n\nFix this by using the correct GPIO pad identifier and wait the mandatory\n1.5 millisecond delay after the powerup lane is asserted. The reset\ndelay is not characterized in the chip manual if not as \"255 XVCLK +\ninitialization\". Wait for at least 3 milliseconds to guarantee the SCCB\nbus is available.\n\nWhile at it also fix the reset sequence, as the reset line was released\nbefore the powerdown one, and the line was not cycled.\n\nThis commit fixes a sporadic start-up error triggered by a failure to\nread the OV10640 chip ID:\nrdacm21 8-0054: OV10640 ID mismatch: (0x01)\n\nFixes: a59f853b3b4b (\"media: i2c: Add driver for RDACM21 camera module\")\nSigned-off-by: Jacopo Mondi <jacopo+renesas@jmondi.org>\nReviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>\nReviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>\nSigned-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>\nSigned-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>",
        "before_after_code_files": [
          "drivers/medii2c/rdacm21.c||drivers/media/i2c/rdacm21.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/medii2c/rdacm21.c||drivers/media/i2c/rdacm21.c": [
          "File: drivers/medii2c/rdacm21.c -> drivers/media/i2c/rdacm21.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "343:  ov490_write_reg(dev, OV490_GPIO_OUTPUT_VALUE1, OV490_SPWDN0);",
          "344:  usleep_range(1500, 3000);",
          "346:  ov490_write_reg(dev, OV490_GPIO_OUTPUT_VALUE0, 0x00);",
          "347:  usleep_range(1500, 3000);",
          "",
          "---------------"
        ]
      }
    }
  ]
}