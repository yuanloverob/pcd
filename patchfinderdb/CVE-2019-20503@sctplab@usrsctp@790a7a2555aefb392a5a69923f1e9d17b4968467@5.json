{
  "cve_id": "CVE-2019-20503",
  "cve_desc": "usrsctp before 2019-12-20 has out-of-bounds reads in sctp_load_addresses_from_init.",
  "repo": "sctplab/usrsctp",
  "patch_hash": "790a7a2555aefb392a5a69923f1e9d17b4968467",
  "patch_info": {
    "commit_hash": "790a7a2555aefb392a5a69923f1e9d17b4968467",
    "repo": "sctplab/usrsctp",
    "commit_url": "https://github.com/sctplab/usrsctp/commit/790a7a2555aefb392a5a69923f1e9d17b4968467",
    "files": [
      "usrsctplib/netinet/sctp_auth.c",
      "usrsctplib/netinet/sctp_pcb.c"
    ],
    "message": "Improve input validation for some parameters having a too small reported length.\n\nThanks to Natalie Silvanovich from Google for finding one of these\nissues in the SCTP userland stack and reporting it.",
    "before_after_code_files": [
      "usrsctplib/netinet/sctp_auth.c||usrsctplib/netinet/sctp_auth.c",
      "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c"
    ]
  },
  "patch_diff": {
    "usrsctplib/netinet/sctp_auth.c||usrsctplib/netinet/sctp_auth.c": [
      "File: usrsctplib/netinet/sctp_auth.c -> usrsctplib/netinet/sctp_auth.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #ifdef __FreeBSD__",
      "36: #include <sys/cdefs.h>",
      "38: #endif",
      "40: #include <netinet/sctp_os.h>",
      "",
      "[Removed Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_auth.c 352438 2019-09-17 09:46:42Z tuexen $\");",
      "",
      "[Added Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_auth.c 355931 2019-12-20 15:25:08Z tuexen $\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1421:   ptype = ntohs(phdr->param_type);",
      "1422:   plen = ntohs(phdr->param_length);",
      "1425:    break;",
      "1427:   if (ptype == SCTP_RANDOM) {",
      "",
      "[Removed Lines]",
      "1424:   if ((plen == 0) || (offset + plen > length))",
      "",
      "[Added Lines]",
      "1424:   if ((plen < sizeof(struct sctp_paramhdr)) ||",
      "1425:       (offset + plen > length))",
      "",
      "---------------"
    ],
    "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c": [
      "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplib/netinet/sctp_pcb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #ifdef __FreeBSD__",
      "36: #include <sys/cdefs.h>",
      "38: #endif",
      "40: #include <netinet/sctp_os.h>",
      "",
      "[Removed Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 353477 2019-10-13 16:14:04Z markj $\");",
      "",
      "[Added Lines]",
      "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 355931 2019-12-20 15:25:08Z tuexen $\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7247:   if (offset + plen > limit) {",
      "7248:    break;",
      "7249:   }",
      "7251:    break;",
      "7252:   }",
      "7253: #ifdef INET",
      "",
      "[Removed Lines]",
      "7250:   if (plen == 0) {",
      "",
      "[Added Lines]",
      "7250:   if (plen < sizeof(struct sctp_paramhdr)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "7463:    if (plen > sizeof(lstore)) {",
      "7464:     return (-23);",
      "7465:    }",
      "7466:    phdr = sctp_get_next_param(m, offset,",
      "7467:          (struct sctp_paramhdr *)&lstore,",
      "7468:          plen);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7466:    if (plen < sizeof(struct sctp_asconf_addrv4_param)) {",
      "7467:     return (-101);",
      "7468:    }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "21b55df676135b04ea9f3a2893308b8255c3e0a0",
      "candidate_info": {
        "commit_hash": "21b55df676135b04ea9f3a2893308b8255c3e0a0",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/21b55df676135b04ea9f3a2893308b8255c3e0a0",
        "files": [
          "usrsctplib/netinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_var.h"
        ],
        "message": "Stop the HB and PMTU timer when removing the net, not freeing it.\n\nThis is part of https://github.com/sctplab/usrsctp/pull/417\nThanks to Taylor Brandstetter for providing the patch.",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_var.h||usrsctplinetinet/sctp_var.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 357705 2020-02-09 22:05:41Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5186: void",
          "5187: sctp_remove_net(struct sctp_tcb *stcb, struct sctp_nets *net)",
          "5188: {",
          "5189:  struct sctp_association *asoc;",
          "5191:  asoc = &stcb->asoc;",
          "5192:  asoc->numnets--;",
          "5193:  TAILQ_REMOVE(&asoc->nets, net, sctp_next);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5235:   sctp_free_remote_addr(stcb->asoc.alternate);",
          "5236:   stcb->asoc.alternate = NULL;",
          "5237:  }",
          "5238:  sctp_free_remote_addr(net);",
          "5239: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8025:   asoc->last_revoke_count = cnt;",
          "8026:   sctp_timer_stop(SCTP_TIMER_TYPE_RECV, stcb->sctp_ep, stcb, NULL,",
          "8029:   sctp_send_sack(stcb, SCTP_SO_NOT_LOCKED);",
          "8030:   sctp_chunk_output(stcb->sctp_ep, stcb, SCTP_OUTPUT_FROM_DRAIN, SCTP_SO_NOT_LOCKED);",
          "",
          "[Removed Lines]",
          "8027:                   SCTP_FROM_SCTP_PCB + SCTP_LOC_16);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_var.h||usrsctplinetinet/sctp_var.h": [
          "File: usrsctplib/netinet/sctp_var.h -> usrsctplinetinet/sctp_var.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_VAR_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_var.h 317457 2017-04-26 19:26:40Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:  if ((__net)) {  \\",
          "193:   if (SCTP_DECREMENT_AND_CHECK_REFCOUNT(&(__net)->ref_count)) { \\",
          "194:    (void)SCTP_OS_TIMER_STOP(&(__net)->rxt_timer.timer); \\",
          "197:    if ((__net)->ro.ro_rt) { \\",
          "198:     RTFREE((__net)->ro.ro_rt); \\",
          "199:     (__net)->ro.ro_rt = NULL; \\",
          "",
          "[Removed Lines]",
          "195:    (void)SCTP_OS_TIMER_STOP(&(__net)->pmtu_timer.timer); \\",
          "196:    (void)SCTP_OS_TIMER_STOP(&(__net)->hb_timer.timer); \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "240:  if ((__net)) { \\",
          "241:   if (SCTP_DECREMENT_AND_CHECK_REFCOUNT(&(__net)->ref_count)) { \\",
          "242:    (void)SCTP_OS_TIMER_STOP(&(__net)->rxt_timer.timer); \\",
          "245:    if ((__net)->ro.ro_rt) { \\",
          "246:     RTFREE((__net)->ro.ro_rt); \\",
          "247:     (__net)->ro.ro_rt = NULL; \\",
          "",
          "[Removed Lines]",
          "243:    (void)SCTP_OS_TIMER_STOP(&(__net)->pmtu_timer.timer); \\",
          "244:    (void)SCTP_OS_TIMER_STOP(&(__net)->hb_timer.timer); \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "843cc3b847f6bff2b9a54c001bc0d4dbf1947a91",
      "candidate_info": {
        "commit_hash": "843cc3b847f6bff2b9a54c001bc0d4dbf1947a91",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/843cc3b847f6bff2b9a54c001bc0d4dbf1947a91",
        "files": [
          "usrsctplib/netinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_pcb.h"
        ],
        "message": "Be consistent with the kernel sources.",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_pcb.h||usrsctplinetinet/sctp_pcb.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "usrsctplib/netinet/sctp_pcb.c||usrsctplib/netinet/sctp_pcb.c"
          ],
          "candidate": [
            "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c"
          ]
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 350588 2019-08-05 13:22:15Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6635: #endif",
          "6637: void",
          "6638: sctp_pcb_init(int start_threads)",
          "6639: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.h||usrsctplinetinet/sctp_pcb.h": [
          "File: usrsctplib/netinet/sctp_pcb.h -> usrsctplinetinet/sctp_pcb.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "844: int sctp_del_remote_addr(struct sctp_tcb *, struct sockaddr *);",
          "846: void sctp_pcb_init(int);",
          "848: void sctp_pcb_finish(void);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d98d2c4c6f4a6a8cafef2a6a2c81de0137a07da0",
      "candidate_info": {
        "commit_hash": "d98d2c4c6f4a6a8cafef2a6a2c81de0137a07da0",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/d98d2c4c6f4a6a8cafef2a6a2c81de0137a07da0",
        "files": [
          "programs/daytime_server.c",
          "programs/daytime_server_upcall.c",
          "programs/discard_server.c",
          "programs/echo_server.c",
          "programs/ekr_loop_upcall.c",
          "programs/http_client.c",
          "programs/http_client_upcall.c",
          "programs/programs_helper.c",
          "programs/rtcweb.c",
          "programs/st_client.c",
          "programs/tsctp_upcall.c",
          "usrsctplib/netinet/sctp_asconf.c",
          "usrsctplib/netinet/sctp_bsd_addr.c",
          "usrsctplib/netinet/sctp_indata.c",
          "usrsctplib/netinet/sctp_input.c",
          "usrsctplib/netinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c"
        ],
        "message": "Check return value of snprintf().\n\nThis should fix https://github.com/sctplab/usrsctp/issues/453.",
        "before_after_code_files": [
          "programs/daytime_server.c||programs/daytime_server.c",
          "programs/daytime_server_upcall.c||programs/daytime_server_upcall.c",
          "programs/discard_server.c||programs/discard_server.c",
          "programs/echo_server.c||programs/echo_server.c",
          "programs/ekr_loop_upcall.c||programs/ekr_loop_upcall.c",
          "programs/http_client.c||programs/http_client.c",
          "programs/http_client_upcall.c||programs/http_client_upcall.c",
          "programs/programs_helper.c||programs/programs_helper.c",
          "programs/rtcweb.c||programs/rtcweb.c",
          "programs/st_client.c||programs/st_client.c",
          "programs/tsctp_upcall.c||programs/tsctp_upcall.c",
          "usrsctplib/netinet/sctp_asconf.c||usrsctplinetinet/sctp_asconf.c",
          "usrsctplib/netinet/sctp_bsd_addr.c||usrsctplinetinet/sctp_bsd_addr.c",
          "usrsctplib/netinet/sctp_indata.c||usrsctplinetinet/sctp_indata.c",
          "usrsctplib/netinet/sctp_input.c||usrsctplinetinet/sctp_input.c",
          "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "programs/daytime_server.c||programs/daytime_server.c": [
          "File: programs/daytime_server.c -> programs/daytime_server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:   }",
          "112:   time(&now);",
          "113: #ifdef _WIN32",
          "115: #else",
          "117: #endif",
          "118:   sndinfo.snd_sid = 0;",
          "119:   sndinfo.snd_flags = 0;",
          "120:   sndinfo.snd_ppid = htonl(DAYTIME_PPID);",
          "",
          "[Removed Lines]",
          "114:   _snprintf(buffer, sizeof(buffer), \"%s\", ctime(&now));",
          "116:   snprintf(buffer, sizeof(buffer), \"%s\", ctime(&now));",
          "",
          "[Added Lines]",
          "114:   if (_snprintf(buffer, sizeof(buffer), \"%s\", ctime(&now)) < 0) {",
          "116:   if (snprintf(buffer, sizeof(buffer), \"%s\", ctime(&now)) < 0) {",
          "118:    buffer[0] = '\\0';",
          "119:   }",
          "",
          "---------------"
        ],
        "programs/daytime_server_upcall.c||programs/daytime_server_upcall.c": [
          "File: programs/daytime_server_upcall.c -> programs/daytime_server_upcall.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:  }",
          "70:  time(&now);",
          "71: #ifdef _WIN32",
          "73: #else",
          "75: #endif",
          "76:   sndinfo.snd_sid = 0;",
          "77:   sndinfo.snd_flags = 0;",
          "78:   sndinfo.snd_ppid = htonl(DAYTIME_PPID);",
          "",
          "[Removed Lines]",
          "72:   _snprintf(buffer, sizeof(buffer), \"%s\", ctime(&now));",
          "74:   snprintf(buffer, sizeof(buffer), \"%s\", ctime(&now));",
          "",
          "[Added Lines]",
          "72:   if (_snprintf(buffer, sizeof(buffer), \"%s\", ctime(&now)) < 0) {",
          "74:   if (snprintf(buffer, sizeof(buffer), \"%s\", ctime(&now)) < 0) {",
          "76:    buffer[0] = '\\0';",
          "77:   }",
          "",
          "---------------"
        ],
        "programs/discard_server.c||programs/discard_server.c": [
          "File: programs/discard_server.c -> programs/discard_server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: #endif",
          "87:    case AF_CONN:",
          "88: #ifdef _WIN32",
          "90: #else",
          "92: #endif",
          "93:     name = namebuf;",
          "94:     port = ntohs(addr.sconn.sconn_port);",
          "95:     break;",
          "",
          "[Removed Lines]",
          "89:     _snprintf(namebuf, INET6_ADDRSTRLEN, \"%p\", addr.sconn.sconn_addr);",
          "91:     snprintf(namebuf, INET6_ADDRSTRLEN, \"%p\", addr.sconn.sconn_addr);",
          "",
          "[Added Lines]",
          "89:     if (_snprintf(namebuf, INET6_ADDRSTRLEN, \"%p\", addr.sconn.sconn_addr) < 0) {",
          "91:     if (snprintf(namebuf, INET6_ADDRSTRLEN, \"%p\", addr.sconn.sconn_addr) < 0) {",
          "93:      namebuf[0] = '\\0';",
          "94:     }",
          "",
          "---------------"
        ],
        "programs/echo_server.c||programs/echo_server.c": [
          "File: programs/echo_server.c -> programs/echo_server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: #endif",
          "87:    case AF_CONN:",
          "88: #ifdef _WIN32",
          "90: #else",
          "92: #endif",
          "93:     name = namebuf;",
          "94:     port = ntohs(addr.sconn.sconn_port);",
          "95:     break;",
          "",
          "[Removed Lines]",
          "89:     _snprintf(namebuf, INET6_ADDRSTRLEN, \"%p\", addr.sconn.sconn_addr);",
          "91:     snprintf(namebuf, INET6_ADDRSTRLEN, \"%p\", addr.sconn.sconn_addr);",
          "",
          "[Added Lines]",
          "89:     if (_snprintf(namebuf, INET6_ADDRSTRLEN, \"%p\", addr.sconn.sconn_addr) < 0) {",
          "91:     if (snprintf(namebuf, INET6_ADDRSTRLEN, \"%p\", addr.sconn.sconn_addr) < 0) {",
          "93:      namebuf[0] = '\\0';",
          "94:     }",
          "",
          "---------------"
        ],
        "programs/ekr_loop_upcall.c||programs/ekr_loop_upcall.c": [
          "File: programs/ekr_loop_upcall.c -> programs/ekr_loop_upcall.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:  FILE *fp;",
          "122:  char fname[128];",
          "123:  static int pktnum = 0;",
          "125:  fp = fopen(fname, \"wb\");",
          "126:  fwrite((char *)buf + 12, 1, length - 12, fp);",
          "127:  fclose(fp);",
          "",
          "[Removed Lines]",
          "124:  snprintf(fname, sizeof(fname), \"pkt-%d\", pktnum++);",
          "",
          "[Added Lines]",
          "124:  if (snprintf(fname, sizeof(fname), \"pkt-%d\", pktnum++) < 0) {",
          "125:   fname[0] = '\\0';",
          "126:  }",
          "",
          "---------------"
        ],
        "programs/http_client.c||programs/http_client.c": [
          "File: programs/http_client.c -> programs/http_client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "257:  if (argc > 6) {",
          "258: #ifdef _WIN32",
          "260: #else",
          "262: #endif",
          "263:  } else {",
          "264: #ifdef _WIN32",
          "266: #else",
          "268: #endif",
          "269:  }",
          "271:  printf(\"\\nHTTP request:\\n%s\\n\", request);",
          "",
          "[Removed Lines]",
          "259:   _snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, argv[6], request_postfix);",
          "261:   snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, argv[6], request_postfix);",
          "265:   _snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, \"/\", request_postfix);",
          "267:   snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, \"/\", request_postfix);",
          "",
          "[Added Lines]",
          "259:   if (_snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, argv[6], request_postfix) < 0) {",
          "261:   if (snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, argv[6], request_postfix) < 0) {",
          "263:    request[0] = '\\0';",
          "264:   }",
          "267:   if (_snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, \"/\", request_postfix) < 0) {",
          "269:   if (snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, \"/\", request_postfix) < 0) {",
          "271:    request[0] = '\\0';",
          "272:   }",
          "",
          "---------------"
        ],
        "programs/http_client_upcall.c||programs/http_client_upcall.c": [
          "File: programs/http_client_upcall.c -> programs/http_client_upcall.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "277:  if (argc > 6) {",
          "278: #ifdef _WIN32",
          "280: #else",
          "282: #endif",
          "283:  } else {",
          "284: #ifdef _WIN32",
          "286: #else",
          "288: #endif",
          "289:  }",
          "291:  printf(\"\\nHTTP request:\\n%s\\n\", request);",
          "",
          "[Removed Lines]",
          "279:   _snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, argv[6], request_postfix);",
          "281:   snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, argv[6], request_postfix);",
          "285:   _snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, \"/\", request_postfix);",
          "287:   snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, \"/\", request_postfix);",
          "",
          "[Added Lines]",
          "279:   if (_snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, argv[6], request_postfix) < 0) {",
          "281:   if (snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, argv[6], request_postfix) < 0) {",
          "283:    request[0] = '\\0';",
          "284:   }",
          "287:   if (_snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, \"/\", request_postfix) < 0) {",
          "289:   if (snprintf(request, sizeof(request), \"%s %s %s\", request_prefix, \"/\", request_postfix) < 0) {",
          "291:    request[0] = '\\0';",
          "292:   }",
          "",
          "---------------"
        ],
        "programs/programs_helper.c||programs/programs_helper.c": [
          "File: programs/programs_helper.c -> programs/programs_helper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:  timersub(&time_now, &time_main, &time_delta);",
          "67:  va_start(ap, format);",
          "70:  va_end(ap);",
          "72:  fprintf(stderr, \"[S][%u.%03u] %s\", (unsigned int) time_delta.tv_sec, (unsigned int) time_delta.tv_usec / 1000, charbuf);",
          "",
          "[Removed Lines]",
          "69:  vsnprintf(charbuf, 1024, format, ap);",
          "",
          "[Added Lines]",
          "68:  if (vsnprintf(charbuf, 1024, format, ap) < 0) {",
          "69:   charbuf[0] = '\\0';",
          "70:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "158:  case AF_CONN:",
          "159:   sconn = (struct sockaddr_conn *)&spc->spc_aaddr;",
          "160: #ifdef _WIN32",
          "162: #else",
          "164: #endif",
          "165:   addr = addr_buf;",
          "166:   break;",
          "167:  default:",
          "168: #ifdef _WIN32",
          "170: #else",
          "172: #endif",
          "173:   addr = addr_buf;",
          "174:   break;",
          "175:  }",
          "",
          "[Removed Lines]",
          "161:   _snprintf(addr_buf, INET6_ADDRSTRLEN, \"%p\", sconn->sconn_addr);",
          "163:   snprintf(addr_buf, INET6_ADDRSTRLEN, \"%p\", sconn->sconn_addr);",
          "169:   _snprintf(addr_buf, INET6_ADDRSTRLEN, \"Unknown family %d\", spc->spc_aaddr.ss_family);",
          "171:   snprintf(addr_buf, INET6_ADDRSTRLEN, \"Unknown family %d\", spc->spc_aaddr.ss_family);",
          "",
          "[Added Lines]",
          "162:   if (_snprintf(addr_buf, INET6_ADDRSTRLEN, \"%p\", sconn->sconn_addr) < 0) {",
          "164:   if (snprintf(addr_buf, INET6_ADDRSTRLEN, \"%p\", sconn->sconn_addr) < 0) {",
          "166:    addr_buf[0] = '\\0';",
          "167:   }",
          "172:   if (_snprintf(addr_buf, INET6_ADDRSTRLEN, \"Unknown family %d\", spc->spc_aaddr.ss_family) < 0) {",
          "174:   if (snprintf(addr_buf, INET6_ADDRSTRLEN, \"Unknown family %d\", spc->spc_aaddr.ss_family) < 0) {",
          "176:    addr_buf[0] = '\\0';",
          "177:   }",
          "",
          "---------------"
        ],
        "programs/rtcweb.c||programs/rtcweb.c": [
          "File: programs/rtcweb.c -> programs/rtcweb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "927:   break;",
          "928:  default:",
          "929: #ifdef _WIN32",
          "931: #else",
          "933: #endif",
          "934:   addr = addr_buf;",
          "935:   break;",
          "936:  }",
          "",
          "[Removed Lines]",
          "930:   _snprintf(addr_buf, INET6_ADDRSTRLEN, \"Unknown family %d\", spc->spc_aaddr.ss_family);",
          "932:   snprintf(addr_buf, INET6_ADDRSTRLEN, \"Unknown family %d\", spc->spc_aaddr.ss_family);",
          "",
          "[Added Lines]",
          "930:   if (_snprintf(addr_buf, INET6_ADDRSTRLEN, \"Unknown family %d\", spc->spc_aaddr.ss_family) < 0) {",
          "932:   if (snprintf(addr_buf, INET6_ADDRSTRLEN, \"Unknown family %d\", spc->spc_aaddr.ss_family) < 0) {",
          "934:    addr_buf[0] = '\\0';",
          "935:   }",
          "",
          "---------------"
        ],
        "programs/st_client.c||programs/st_client.c": [
          "File: programs/st_client.c -> programs/st_client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:  bufferlen = snprintf(buffer, BUFFER_SIZE, \"GET / HTTP/1.0\\r\\nUser-agent: libusrsctp\\r\\nConnection: close\\r\\n\\r\\n\");",
          "140:  sndinfo.snd_sid = 0;",
          "141:  sndinfo.snd_flags = 0;",
          "142:  sndinfo.snd_ppid = htonl(DISCARD_PPID);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:  if (bufferlen < 0) {",
          "141:   return;",
          "142:  }",
          "",
          "---------------"
        ],
        "programs/tsctp_upcall.c||programs/tsctp_upcall.c": [
          "File: programs/tsctp_upcall.c -> programs/tsctp_upcall.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:   }",
          "152:  }",
          "155:  return output;",
          "156: }",
          "",
          "[Removed Lines]",
          "154:  snprintf(output, sizeof(output), \"%.02lf %s\", human_size, suffix[i]);",
          "",
          "[Added Lines]",
          "154:  if (snprintf(output, sizeof(output), \"%.02lf %s\", human_size, suffix[i]) < 0) {",
          "155:   output[0] = '\\0';",
          "156:  }",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_asconf.c||usrsctplinetinet/sctp_asconf.c": [
          "File: usrsctplib/netinet/sctp_asconf.c -> usrsctplinetinet/sctp_asconf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_asconf.c 361145 2020-05-17 22:31:38Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1743:   char msg[SCTP_DIAG_INFO_LEN];",
          "1745:   SCTPDBG(SCTP_DEBUG_ASCONF1, \"handle_asconf_ack: got unexpected next serial number! Aborting asoc!\\n\");",
          "1748:   op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "1749:   sctp_abort_an_association(stcb->sctp_ep, stcb, op_err, SCTP_SO_NOT_LOCKED);",
          "",
          "[Removed Lines]",
          "1746:   snprintf(msg, sizeof(msg), \"Never sent serial number %8.8x\",",
          "1747:     serial_num);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_bsd_addr.c||usrsctplinetinet/sctp_bsd_addr.c": [
          "File: usrsctplib/netinet/sctp_bsd_addr.c -> usrsctplinetinet/sctp_bsd_addr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "542:    } else {",
          "543:     ifa_flags = 0;",
          "544:    }",
          "546:    sctp_ifa = sctp_add_addr_to_vrf(vrfid,",
          "548:                                    ifnet_index(ifn),",
          "",
          "[Removed Lines]",
          "545:    snprintf(name, SCTP_IFNAMSIZ, \"%s%d\", ifnet_name(ifn), ifnet_unit(ifn));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_indata.c||usrsctplinetinet/sctp_indata.c": [
          "File: usrsctplib/netinet/sctp_indata.c -> usrsctplinetinet/sctp_indata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_indata.c 360878 2020-05-10 17:19:19Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "169:  read_queue_e->data = dm;",
          "170:  read_queue_e->stcb = stcb;",
          "171:  read_queue_e->port_from = stcb->rport;",
          "172: failed_build:",
          "173:  return (read_queue_e);",
          "174: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "447:  struct mbuf *oper;",
          "449:  if (stcb->asoc.idata_supported) {",
          "457:  } else {",
          "466:  }",
          "467:  oper = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "468:  sctp_m_freem(chk->data);",
          "",
          "[Removed Lines]",
          "450:   snprintf(msg, sizeof(msg),",
          "451:     \"Reass %x,CF:%x,TSN=%8.8x,SID=%4.4x,FSN=%8.8x,MID:%8.8x\",",
          "452:     opspot,",
          "453:     control->fsn_included,",
          "454:     chk->rec.data.tsn,",
          "455:     chk->rec.data.sid,",
          "456:     chk->rec.data.fsn, chk->rec.data.mid);",
          "458:   snprintf(msg, sizeof(msg),",
          "459:     \"Reass %x,CI:%x,TSN=%8.8x,SID=%4.4x,FSN=%4.4x,SSN:%4.4x\",",
          "460:     opspot,",
          "461:     control->fsn_included,",
          "462:     chk->rec.data.tsn,",
          "463:     chk->rec.data.sid,",
          "464:     chk->rec.data.fsn,",
          "465:     (uint16_t)chk->rec.data.mid);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "546:   TAILQ_INSERT_HEAD(&strm->inqueue, control, next_instrm);",
          "547:   if (asoc->idata_supported) {",
          "551:   } else {",
          "557:   }",
          "558:   op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "559:   stcb->sctp_ep->last_abort_code = SCTP_FROM_SCTP_INDATA + SCTP_LOC_2;",
          "",
          "[Removed Lines]",
          "548:    snprintf(msg, sizeof(msg), \"Delivered MID=%8.8x, got TSN=%8.8x, SID=%4.4x, MID=%8.8x\",",
          "549:             strm->last_mid_delivered, control->sinfo_tsn,",
          "550:             control->sinfo_stream, control->mid);",
          "552:    snprintf(msg, sizeof(msg), \"Delivered SSN=%4.4x, got TSN=%8.8x, SID=%4.4x, SSN=%4.4x\",",
          "553:             (uint16_t)strm->last_mid_delivered,",
          "554:             control->sinfo_tsn,",
          "555:             control->sinfo_stream,",
          "556:             (uint16_t)control->mid);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "662:   if (sctp_place_control_in_stream(strm, asoc, control)) {",
          "666:    sctp_clean_up_control(stcb, control);",
          "667:    op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "668:    stcb->sctp_ep->last_abort_code = SCTP_FROM_SCTP_INDATA + SCTP_LOC_3;",
          "",
          "[Removed Lines]",
          "663:    snprintf(msg, sizeof(msg),",
          "664:      \"Queue to str MID: %u duplicate\",",
          "665:      control->mid);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "790:  atomic_add_int(&nc->whoFrom->ref_count, 1);",
          "791:  nc->stcb = control->stcb;",
          "792:  nc->port_from = control->port_from;",
          "793: }",
          "795: static void",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1874:   goto err_out;",
          "1875:  }",
          "1876:  control = sctp_find_reasm_entry(&asoc->strmin[sid], mid, ordered, asoc->idata_supported);",
          "",
          "[Removed Lines]",
          "1872:   snprintf(msg, sizeof(msg), \"FSN zero for MID=%8.8x, but flags=%2.2x\",",
          "1873:            mid, chk_flags);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1881:   if (control != NULL) {",
          "1883:    if (ordered && (mid != control->mid)) {",
          "1885:    err_out:",
          "1886:     op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "1887:     stcb->sctp_ep->last_abort_code = SCTP_FROM_SCTP_INDATA + SCTP_LOC_16;",
          "",
          "[Removed Lines]",
          "1884:     snprintf(msg, sizeof(msg), \"Reassembly problem (MID=%8.8x)\", mid);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1891:    }",
          "1892:    if (ordered && ((control->sinfo_flags >> 8) & SCTP_DATA_UNORDERED)) {",
          "1896:     goto err_out;",
          "1897:    }",
          "1898:    if (!ordered && (((control->sinfo_flags >> 8) & SCTP_DATA_UNORDERED) == 0)) {",
          "1902:     goto err_out;",
          "1903:    }",
          "1904:   }",
          "",
          "[Removed Lines]",
          "1894:     snprintf(msg, sizeof(msg), \"All fragments of a user message must be ordered or unordered (TSN=%8.8x)\",",
          "1895:       tsn);",
          "1900:     snprintf(msg, sizeof(msg), \"All fragments of a user message must be ordered or unordered (TSN=%8.8x)\",",
          "1901:       tsn);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1912:    if (ordered || asoc->idata_supported) {",
          "1913:     SCTPDBG(SCTP_DEBUG_XXX, \"chunk_flags: 0x%x dup detected on MID: %u\\n\",",
          "1914:      chk_flags, mid);",
          "1916:     goto err_out;",
          "1917:    } else {",
          "1918:     if ((tsn == control->fsn_included + 1) &&",
          "1919:         (control->end_added == 0)) {",
          "1921:      goto err_out;",
          "1922:     } else {",
          "1923:      control = NULL;",
          "",
          "[Removed Lines]",
          "1915:     snprintf(msg, sizeof(msg), \"Duplicate MID=%8.8x detected.\", mid);",
          "1920:      snprintf(msg, sizeof(msg), \"Illegal message sequence, missing end for MID: %8.8x\", control->fsn_included);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2014:    mid, asoc->strmin[sid].last_mid_delivered);",
          "2016:   if (asoc->idata_supported) {",
          "2022:   } else {",
          "2028:   }",
          "2029:   op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "2030:   stcb->sctp_ep->last_abort_code = SCTP_FROM_SCTP_INDATA + SCTP_LOC_17;",
          "",
          "[Removed Lines]",
          "2017:    snprintf(msg, sizeof(msg), \"Delivered MID=%8.8x, got TSN=%8.8x, SID=%4.4x, MID=%8.8x\",",
          "2018:             asoc->strmin[sid].last_mid_delivered,",
          "2019:             tsn,",
          "2020:             sid,",
          "2021:             mid);",
          "2023:    snprintf(msg, sizeof(msg), \"Delivered SSN=%4.4x, got TSN=%8.8x, SID=%4.4x, SSN=%4.4x\",",
          "2024:             (uint16_t)asoc->strmin[sid].last_mid_delivered,",
          "2025:             tsn,",
          "2026:             sid,",
          "2027:             (uint16_t)mid);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2752:    struct mbuf *op_err;",
          "2753:    char msg[SCTP_DIAG_INFO_LEN];",
          "2756:    op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "2757:    stcb->sctp_ep->last_abort_code = SCTP_FROM_SCTP_INDATA + SCTP_LOC_20;",
          "2758:    sctp_abort_an_association(inp, stcb, op_err, SCTP_SO_NOT_LOCKED);",
          "",
          "[Removed Lines]",
          "2755:    snprintf(msg, sizeof(msg), \"%s\", \"I-DATA chunk received when DATA was negotiated\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2763:    struct mbuf *op_err;",
          "2764:    char msg[SCTP_DIAG_INFO_LEN];",
          "2767:    op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "2768:    stcb->sctp_ep->last_abort_code = SCTP_FROM_SCTP_INDATA + SCTP_LOC_21;",
          "2769:    sctp_abort_an_association(inp, stcb, op_err, SCTP_SO_NOT_LOCKED);",
          "",
          "[Removed Lines]",
          "2766:    snprintf(msg, sizeof(msg), \"%s\", \"DATA chunk received when I-DATA was negotiated\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2786:     struct mbuf *op_err;",
          "2787:     char msg[SCTP_DIAG_INFO_LEN];",
          "2792:     op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "2793:     stcb->sctp_ep->last_abort_code = SCTP_FROM_SCTP_INDATA + SCTP_LOC_22;",
          "2794:     sctp_abort_an_association(inp, stcb, op_err, SCTP_SO_NOT_LOCKED);",
          "",
          "[Removed Lines]",
          "2789:     snprintf(msg, sizeof(msg), \"%s chunk of length %u\",",
          "2790:              ch->chunk_type == SCTP_DATA ? \"DATA\" : \"I-DATA\",",
          "2791:              chk_length);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2855:     struct mbuf *op_err;",
          "2856:     char msg[SCTP_DIAG_INFO_LEN];",
          "2860:     op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "2861:     sctp_abort_an_association(inp, stcb, op_err, SCTP_SO_NOT_LOCKED);",
          "2862:     return (2);",
          "",
          "[Removed Lines]",
          "2858:     snprintf(msg, sizeof(msg), \"DATA chunk followed by chunk of type %2.2x\",",
          "2859:              ch->chunk_type);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2874:      struct mbuf *op_err;",
          "2875:      char msg[SCTP_DIAG_INFO_LEN];",
          "2879:      op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "2880:      stcb->sctp_ep->last_abort_code = SCTP_FROM_SCTP_INDATA + SCTP_LOC_23;",
          "2881:      sctp_abort_an_association(inp, stcb, op_err, SCTP_SO_NOT_LOCKED);",
          "",
          "[Removed Lines]",
          "2877:      snprintf(msg, sizeof(msg), \"Chunk of length %u\",",
          "2878:        chk_length);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4011:   op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "4012:   stcb->sctp_ep->last_abort_code = SCTP_FROM_SCTP_INDATA + SCTP_LOC_24;",
          "4013:   sctp_abort_an_association(stcb->sctp_ep, stcb, op_err, SCTP_SO_NOT_LOCKED);",
          "",
          "[Removed Lines]",
          "4009:   snprintf(msg, sizeof(msg), \"Cum ack %8.8x greater or equal than TSN %8.8x\",",
          "4010:     cumack, send_s);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4566:  hopeless_peer:",
          "4571:   op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "4572:   stcb->sctp_ep->last_abort_code = SCTP_FROM_SCTP_INDATA + SCTP_LOC_28;",
          "4573:   sctp_abort_an_association(stcb->sctp_ep, stcb, op_err, SCTP_SO_NOT_LOCKED);",
          "",
          "[Removed Lines]",
          "4569:   snprintf(msg, sizeof(msg), \"Cum ack %8.8x greater or equal than TSN %8.8x\",",
          "4570:     cum_ack, send_s);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "5628:    op_err = sctp_generate_cause(SCTP_CAUSE_PROTOCOL_VIOLATION, msg);",
          "5629:    stcb->sctp_ep->last_abort_code = SCTP_FROM_SCTP_INDATA + SCTP_LOC_36;",
          "5630:    sctp_abort_an_association(stcb->sctp_ep, stcb, op_err, SCTP_SO_NOT_LOCKED);",
          "",
          "[Removed Lines]",
          "5625:    snprintf(msg, sizeof(msg),",
          "5626:             \"New cum ack %8.8x too high, highest TSN %8.8x\",",
          "5627:             new_cum_tsn, asoc->highest_tsn_inside_map);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_input.c||usrsctplinetinet/sctp_input.c": [
          "File: usrsctplib/netinet/sctp_input.c -> usrsctplinetinet/sctp_input.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_input.c 360942 2020-05-11 22:47:20Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4871:    }",
          "4872:   }",
          "4873:   if (stcb == NULL) {",
          "4875:    op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "4876:                                 msg);",
          "",
          "[Removed Lines]",
          "4874:    snprintf(msg, sizeof(msg), \"OOTB, %s:%d at %s\", __FILE__, __LINE__, __func__);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4915:     if (stcb != NULL) {",
          "4916:      SCTP_TCB_UNLOCK(stcb);",
          "4917:     }",
          "4919:     op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "4920:                                  msg);",
          "4921:     sctp_handle_ootb(m, iphlen, *offset, src, dst,",
          "",
          "[Removed Lines]",
          "4918:     snprintf(msg, sizeof(msg), \"OOTB, %s:%d at %s\", __FILE__, __LINE__, __func__);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5887: #if defined(__FreeBSD__)",
          "5888:    SCTP_PROBE5(receive, NULL, stcb, m, stcb, sh);",
          "5889: #endif",
          "5891:    op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "5892:                                 msg);",
          "5893:    sctp_handle_ootb(m, iphlen, offset, src, dst, sh, inp, op_err,",
          "",
          "[Removed Lines]",
          "5890:    snprintf(msg, sizeof(msg), \"OOTB, %s:%d at %s\", __FILE__, __LINE__, __func__);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5970: #if defined(__FreeBSD__)",
          "5971:    SCTP_PROBE5(receive, NULL, NULL, m, NULL, sh);",
          "5972: #endif",
          "5974:    op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "5975:                                 msg);",
          "5976:    sctp_handle_ootb(m, iphlen, offset, src, dst, sh, inp, op_err,",
          "",
          "[Removed Lines]",
          "5973:    snprintf(msg, sizeof(msg), \"OOTB, %s:%d at %s\", __FILE__, __LINE__, __func__);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6060:    op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "6061:                                 msg);",
          "6062:    sctp_handle_ootb(m, iphlen, offset, src, dst, sh, inp, op_err,",
          "",
          "[Removed Lines]",
          "6059:    snprintf(msg, sizeof(msg), \"OOTB, %s:%d at %s\", __FILE__, __LINE__, __func__);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c": [
          "File: usrsctplib/netinet/sctp_output.c -> usrsctplinetinet/sctp_output.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_output.c 361145 2020-05-17 22:31:38Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6065:   if (op_err == NULL) {",
          "6066:    char msg[SCTP_DIAG_INFO_LEN];",
          "6069:    op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "6070:                                 msg);",
          "6071:   }",
          "",
          "[Removed Lines]",
          "6068:    snprintf(msg, sizeof(msg), \"%s:%d at %s\", __FILE__, __LINE__, __func__);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7304:       char msg[SCTP_DIAG_INFO_LEN];",
          "7306:      abort_anyway:",
          "7309:       op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "7310:                                    msg);",
          "7311:       atomic_add_int(&stcb->asoc.refcnt, 1);",
          "",
          "[Removed Lines]",
          "7307:       snprintf(msg, sizeof(msg),",
          "7308:                \"%s:%d at %s\", __FILE__, __LINE__, __func__);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "10206:    struct mbuf *op_err;",
          "10207:    char msg[SCTP_DIAG_INFO_LEN];",
          "10211:    op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "10212:                                 msg);",
          "10213:    atomic_add_int(&stcb->asoc.refcnt, 1);",
          "",
          "[Removed Lines]",
          "10209:    snprintf(msg, sizeof(msg), \"TSN %8.8x retransmitted %d times, giving up\",",
          "10210:      chk->rec.data.tsn, chk->snd_count);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "14809:       atomic_add_int(&stcb->asoc.refcnt, -1);",
          "14810:       free_cnt_applied = 0;",
          "14811:      }",
          "14814:      op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "14815:                                   msg);",
          "14816: #if defined(__FreeBSD__)",
          "",
          "[Removed Lines]",
          "14812:      snprintf(msg, sizeof(msg),",
          "14813:               \"%s:%d at %s\", __FILE__, __LINE__, __func__);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 361145 2020-05-17 22:31:38Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "606:   atomic_add_int(&vrf->refcount, 1);",
          "607:   sctp_ifnp->ifn_mtu = SCTP_GATHER_MTU_FROM_IFN_INFO(ifn, ifn_index, addr->sa_family);",
          "608:   if (if_name != NULL) {",
          "610:   } else {",
          "612:   }",
          "613:   hash_ifn_head = &SCTP_BASE_INFO(vrf_ifn_hash)[(ifn_index & SCTP_BASE_INFO(vrf_ifn_hashmark))];",
          "614:   LIST_INIT(&sctp_ifnp->ifalist);",
          "",
          "[Removed Lines]",
          "609:    snprintf(sctp_ifnp->ifn_name, SCTP_IFNAMSIZ, \"%s\", if_name);",
          "611:    snprintf(sctp_ifnp->ifn_name, SCTP_IFNAMSIZ, \"%s\", \"unknown\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7298:        char msg[SCTP_DIAG_INFO_LEN];",
          "7303:        op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "7304:                 msg);",
          "7305:        sctp_abort_an_association(stcb_tmp->sctp_ep,",
          "",
          "[Removed Lines]",
          "7301:        snprintf(msg, sizeof(msg),",
          "7302:                 \"%s:%d at %s\", __FILE__, __LINE__, __func__);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7392:        char msg[SCTP_DIAG_INFO_LEN];",
          "7397:        op_err = sctp_generate_cause(SCTP_BASE_SYSCTL(sctp_diag_info_code),",
          "7398:                 msg);",
          "7399:        sctp_abort_an_association(stcb_tmp->sctp_ep,",
          "",
          "[Removed Lines]",
          "7395:        snprintf(msg, sizeof(msg),",
          "7396:                 \"%s:%d at %s\", __FILE__, __LINE__, __func__);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "287284c28d690373ba167874d979998f86c3d9e1",
      "candidate_info": {
        "commit_hash": "287284c28d690373ba167874d979998f86c3d9e1",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/287284c28d690373ba167874d979998f86c3d9e1",
        "files": [
          "usrsctplib/netinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_pcb.h"
        ],
        "message": "Sync with FreeBSD.",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c",
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c",
          "usrsctplib/netinet/sctp_pcb.h||usrsctplinetinet/sctp_pcb.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_output.c||usrsctplinetinet/sctp_output.c": [
          "File: usrsctplib/netinet/sctp_output.c -> usrsctplinetinet/sctp_output.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_output.c 356357 2020-01-04 20:33:12Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7441:          (void *)ca, 0,",
          "7442:          sctp_sendall_completes, inp, 1);",
          "7443:  if (ret) {",
          "7445:   SCTP_FREE(ca, SCTP_M_COPYAL);",
          "7446:   SCTP_LTRACE_ERR_RET_PKT(m, inp, NULL, NULL, SCTP_FROM_SCTP_OUTPUT, EFAULT);",
          "7447:   return (EFAULT);",
          "",
          "[Removed Lines]",
          "7444:   SCTP_PRINTF(\"Failed to initiate iterator for sendall\\n\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 355931 2019-12-20 15:25:08Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8180:       SCTP_M_ITER);",
          "8181:  if (it == NULL) {",
          "8182:   SCTP_LTRACE_ERR_RET(NULL, NULL, NULL, SCTP_FROM_SCTP_PCB, ENOMEM);",
          "8184:  }",
          "8185:  memset(it, 0, sizeof(*it));",
          "8186:  it->function_assoc = af;",
          "",
          "[Removed Lines]",
          "8183:   return (ENOMEM);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctp_pcb.h||usrsctplinetinet/sctp_pcb.h": [
          "File: usrsctplib/netinet/sctp_pcb.h -> usrsctplinetinet/sctp_pcb.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #ifndef _NETINET_SCTP_PCB_H_",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.h 349986 2019-07-14 12:04:39Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "305:  int packet_log_end;",
          "306:  uint8_t packet_log_buffer[SCTP_PACKET_LOG_SIZE];",
          "307: #endif",
          "308: #if defined(__APPLE__)",
          "309:  int sctp_main_timer_ticks;",
          "310: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f52d3df431be7db32b6d8fe49af9202d65e448f3",
      "candidate_info": {
        "commit_hash": "f52d3df431be7db32b6d8fe49af9202d65e448f3",
        "repo": "sctplab/usrsctp",
        "commit_url": "https://github.com/sctplab/usrsctp/commit/f52d3df431be7db32b6d8fe49af9202d65e448f3",
        "files": [
          "usrsctplib/netinet/sctp_pcb.c",
          "usrsctplib/netinet/sctputil.c"
        ],
        "message": "Don't start a timer on a net, which has been removed.\n\nThanks to Taylor Brandstetter for submitting the patch.",
        "before_after_code_files": [
          "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c",
          "usrsctplib/netinet/sctputil.c||usrsctplinetinet/sctputil.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usrsctplib/netinet/sctp_pcb.c||usrsctplinetinet/sctp_pcb.c": [
          "File: usrsctplib/netinet/sctp_pcb.c -> usrsctplinetinet/sctp_pcb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctp_pcb.c 357761 2020-02-11 14:00:27Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5241:                  SCTP_FROM_SCTP_PCB + SCTP_LOC_9);",
          "5242:  sctp_timer_stop(SCTP_TIMER_TYPE_HEARTBEAT, inp, stcb, net,",
          "5243:                  SCTP_FROM_SCTP_PCB + SCTP_LOC_10);",
          "5244:  sctp_free_remote_addr(net);",
          "5245: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "usrsctplib/netinet/sctputil.c||usrsctplinetinet/sctputil.c": [
          "File: usrsctplib/netinet/sctputil.c -> usrsctplinetinet/sctputil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #ifdef __FreeBSD__",
          "36: #include <sys/cdefs.h>",
          "38: #endif",
          "40: #include <netinet/sctp_os.h>",
          "",
          "[Removed Lines]",
          "37: __FBSDID(\"$FreeBSD: head/sys/netinet/sctputil.c 357761 2020-02-11 14:00:27Z tuexen $\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2157:  if (stcb) {",
          "2158:   SCTP_TCB_LOCK_ASSERT(stcb);",
          "2159:  }",
          "2160:  switch (t_type) {",
          "2161:  case SCTP_TIMER_TYPE_ADDR_WQ:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}