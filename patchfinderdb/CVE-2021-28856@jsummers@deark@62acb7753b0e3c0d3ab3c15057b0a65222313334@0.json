{
  "cve_id": "CVE-2021-28856",
  "cve_desc": "In Deark before v1.5.8, a specially crafted input file can cause a division by zero in (src/fmtutil.c) because of the value of pixelsize.",
  "repo": "jsummers/deark",
  "patch_hash": "62acb7753b0e3c0d3ab3c15057b0a65222313334",
  "patch_info": {
    "commit_hash": "62acb7753b0e3c0d3ab3c15057b0a65222313334",
    "repo": "jsummers/deark",
    "commit_url": "https://github.com/jsummers/deark/commit/62acb7753b0e3c0d3ab3c15057b0a65222313334",
    "files": [
      "src/fmtutil.c"
    ],
    "message": "pict,macrsrc: Fixed a bug that could cause division by 0\n\nFound by F. \u00c7elik.",
    "before_after_code_files": [
      "src/fmtutil.c||src/fmtutil.c"
    ]
  },
  "patch_diff": {
    "src/fmtutil.c||src/fmtutil.c": [
      "File: src/fmtutil.c -> src/fmtutil.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1618:  de_dbg(c, \"pixel type=%d, bits/pixel=%d, components/pixel=%d, bits/comp=%d\",",
      "1619:   (int)bi->pixeltype, (int)bi->pixelsize, (int)bi->cmpcount, (int)bi->cmpsize);",
      "1622:  if(bi->pdwidth < bi->npwidth) {",
      "1623:   bi->pdwidth = bi->npwidth;",
      "1624:  }",
      "",
      "[Removed Lines]",
      "1621:  bi->pdwidth = (bi->rowbytes*8)/bi->pixelsize;",
      "",
      "[Added Lines]",
      "1621:  if(bi->pixelsize>0) {",
      "1622:   bi->pdwidth = (bi->rowbytes*8)/bi->pixelsize;",
      "1623:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "97b815ca4de5763efdd23932ba25fc285414c517",
      "candidate_info": {
        "commit_hash": "97b815ca4de5763efdd23932ba25fc285414c517",
        "repo": "jsummers/deark",
        "commit_url": "https://github.com/jsummers/deark/commit/97b815ca4de5763efdd23932ba25fc285414c517",
        "files": [
          "modules/macrsrc.c",
          "modules/pict.c",
          "src/deark-fmtutil.h",
          "src/fmtutil.c"
        ],
        "message": "pict: Support -padpix",
        "before_after_code_files": [
          "modules/macrsrc.c||modules/macrsrc.c",
          "modules/pict.c||modules/pict.c",
          "src/deark-fmtutil.h||src/deark-fmtutil.h",
          "src/fmtutil.c||src/fmtutil.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/fmtutil.c||src/fmtutil.c"
          ],
          "candidate": [
            "src/fmtutil.c||src/fmtutil.c"
          ]
        }
      },
      "candidate_diff": {
        "modules/macrsrc.c||modules/macrsrc.c": [
          "File: modules/macrsrc.c -> modules/macrsrc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:  pos += 10;",
          "232:  fmtutil_macbitmap_read_pixmap_only_fields(c, c->infile, bi, pos);",
          "233:  pos += 36;",
          "236:  if((i64)bi->pmTable != pixdata_offs + bi->rowbytes * bi->height) {",
          "237:   de_warn(c, \"Unexpected color table offset. \"",
          "",
          "[Removed Lines]",
          "234:  if(!de_good_image_dimensions(c, bi->width, bi->height)) goto done;",
          "",
          "[Added Lines]",
          "234:  if(!de_good_image_dimensions(c, bi->npwidth, bi->height)) goto done;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "247:   goto done;",
          "248:  }",
          "252:  if(pixdata_offs >= dlen) goto done;",
          "253:  pos = pos1 + pixdata_offs;",
          "",
          "[Removed Lines]",
          "250:  img_color = de_bitmap_create(c, bi->width, bi->height, 4);",
          "",
          "[Added Lines]",
          "250:  img_color = de_bitmap_create2(c, bi->npwidth, bi->pdwidth, bi->height, 4);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "348:  pos += 4; // \"icon data\"",
          "352:   bw_exists = 1;",
          "353:  }",
          "359:  if(bi_fgcolor->pixeltype!=0) goto done;",
          "360:  if(bi_fgcolor->pixelsize!=bi_fgcolor->cmpsize) goto done;",
          "",
          "[Removed Lines]",
          "351:  if(bi_bw->rowbytes && bi_bw->height && bi_bw->width) {",
          "355:  if(!de_good_image_dimensions_noerr(c, bi_fgcolor->width, bi_fgcolor->height)) goto done;",
          "356:  if(!de_good_image_dimensions_noerr(c, bi_mask->width, bi_mask->height)) goto done;",
          "357:  if(bw_exists && !de_good_image_dimensions_noerr(c, bi_bw->width, bi_bw->height)) goto done;",
          "",
          "[Added Lines]",
          "351:  if(bi_bw->rowbytes && bi_bw->height && bi_bw->npwidth) {",
          "355:  if(!de_good_image_dimensions_noerr(c, bi_fgcolor->npwidth, bi_fgcolor->height)) goto done;",
          "356:  if(!de_good_image_dimensions_noerr(c, bi_mask->npwidth, bi_mask->height)) goto done;",
          "357:  if(bw_exists && !de_good_image_dimensions_noerr(c, bi_bw->npwidth, bi_bw->height)) goto done;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "372:  if(pos+mask_bitssize > dpos+dlen) goto done;",
          "373:  de_dbg(c, \"mask bitmap at %\"I64_FMT\", len=%\"I64_FMT, pos, mask_bitssize);",
          "375:  de_convert_image_bilevel(c->infile, pos, bi_mask->rowbytes, img_mask, 0);",
          "376:  pos += mask_bitssize;",
          "378:  if(bw_exists) {",
          "379:   if(pos+bw_bitssize > dpos+dlen) goto done;",
          "380:   de_dbg(c, \"bw bitmap at %\"I64_FMT\", len=%\"I64_FMT, pos, bw_bitssize);",
          "382:   de_convert_image_bilevel(c->infile, pos, bi_bw->rowbytes, img_bw,",
          "383:    DE_CVTF_WHITEISZERO);",
          "384:   de_bitmap_apply_mask(img_bw, img_mask, 0);",
          "",
          "[Removed Lines]",
          "374:  img_mask = de_bitmap_create(c, bi_mask->width, bi_mask->height, 1);",
          "381:   img_bw = de_bitmap_create(c, bi_bw->width, bi_bw->height, 2);",
          "",
          "[Added Lines]",
          "374:  img_mask = de_bitmap_create2(c, bi_mask->npwidth, bi_mask->pdwidth, bi_mask->height, 1);",
          "381:   img_bw = de_bitmap_create2(c, bi_bw->npwidth, bi_bw->pdwidth, bi_bw->height, 2);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "400:  if(pos+fgcolor_bitssize > dpos+dlen) goto done;",
          "401:  de_dbg(c, \"color bitmap at %\"I64_FMT\", len=%\"I64_FMT, pos, fgcolor_bitssize);",
          "403:  de_convert_image_paletted(c->infile, pos, bi_fgcolor->pixelsize, bi_fgcolor->rowbytes,",
          "404:   bi_fgcolor->pal, img_fgcolor, 0);",
          "405:  de_bitmap_apply_mask(img_fgcolor, img_mask, 0);",
          "",
          "[Removed Lines]",
          "402:  img_fgcolor = de_bitmap_create(c, bi_fgcolor->width, bi_fgcolor->height, 4);",
          "",
          "[Added Lines]",
          "402:  img_fgcolor = de_bitmap_create2(c, bi_fgcolor->npwidth, bi_fgcolor->pdwidth, bi_fgcolor->height, 4);",
          "",
          "---------------"
        ],
        "modules/pict.c||modules/pict.c": [
          "File: modules/pict.c -> modules/pict.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:   de_err(c, \"Bad rowBytes value (%d)\", (int)bi->rowbytes);",
          "256:   goto done;",
          "257:  }",
          "",
          "[Removed Lines]",
          "254:  if(bi->rowbytes > (bi->width * bi->pixelsize)/8 + 1000) {",
          "",
          "[Added Lines]",
          "254:  if(bi->rowbytes > (bi->npwidth * bi->pixelsize)/8 + 1000) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "293:  u8 cr, cg, cb;",
          "295:  for(j=0; j<bi->height; j++) {",
          "300:    de_bitmap_setpixel_rgb(img, i, j, DE_MAKE_RGB(cr,cg,cb));",
          "301:   }",
          "302:  }",
          "",
          "[Removed Lines]",
          "296:   for(i=0; i<bi->width; i++) {",
          "297:    cr = dbuf_getbyte(unc_pixels, j*bi->rowspan + (bi->cmpcount-3+0)*bi->width + i);",
          "298:    cg = dbuf_getbyte(unc_pixels, j*bi->rowspan + (bi->cmpcount-3+1)*bi->width + i);",
          "299:    cb = dbuf_getbyte(unc_pixels, j*bi->rowspan + (bi->cmpcount-3+2)*bi->width + i);",
          "",
          "[Added Lines]",
          "296:   for(i=0; i<bi->pdwidth; i++) {",
          "297:    cr = dbuf_getbyte(unc_pixels, j*bi->rowspan + (bi->cmpcount-3+0)*bi->pdwidth + i);",
          "298:    cg = dbuf_getbyte(unc_pixels, j*bi->rowspan + (bi->cmpcount-3+1)*bi->pdwidth + i);",
          "299:    cb = dbuf_getbyte(unc_pixels, j*bi->rowspan + (bi->cmpcount-3+2)*bi->pdwidth + i);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "310:  u32 clr;",
          "312:  for(j=0; j<bi->height; j++) {",
          "314:    c0 = dbuf_getbyte(unc_pixels, j*bi->rowspan + i*2);",
          "315:    c1 = dbuf_getbyte(unc_pixels, j*bi->rowspan + i*2+1);",
          "316:    clr = ((u32)c0 << 8)|c1;",
          "",
          "[Removed Lines]",
          "313:   for(i=0; i<bi->width; i++) {",
          "",
          "[Added Lines]",
          "313:   for(i=0; i<bi->pdwidth; i++) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "328:  u32 clr;",
          "330:  for(j=0; j<bi->height; j++) {",
          "332:    b = de_get_bits_symbol(unc_pixels, bi->pixelsize, j*bi->rowspan, i);",
          "333:    clr = bi->pal[(unsigned int)b];",
          "334:    de_bitmap_setpixel_rgb(img, i, j, clr);",
          "",
          "[Removed Lines]",
          "331:   for(i=0; i<bi->width; i++) {",
          "",
          "[Added Lines]",
          "331:   for(i=0; i<bi->pdwidth; i++) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "404:   }",
          "405:  }",
          "409:  fi = de_finfo_create(c);",
          "",
          "[Removed Lines]",
          "407:  img = de_bitmap_create(c, bi->width, bi->height, dst_nsamples);",
          "",
          "[Added Lines]",
          "407:  img = de_bitmap_create2(c, bi->npwidth, bi->pdwidth, bi->height, dst_nsamples);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "441:  de_dbg_indent(c, 1);",
          "444:   de_warn(c, \"Ignoring zero-size bitmap (%d\"DE_CHAR_TIMES\"%d)\",",
          "446:   goto done;",
          "447:  }",
          "450:  if(bi->pixelsize!=1 && bi->pixelsize!=2 && bi->pixelsize!=4 && bi->pixelsize!=8 &&",
          "451:   bi->pixelsize!=16 && bi->pixelsize!=24 && bi->pixelsize!=32)",
          "",
          "[Removed Lines]",
          "443:  if(bi->width==0 || bi->height==0) {",
          "445:    (int)bi->width, (int)bi->height);",
          "448:  if(!de_good_image_dimensions(c, bi->width, bi->height)) goto done;",
          "",
          "[Added Lines]",
          "443:  if(bi->npwidth==0 || bi->height==0) {",
          "445:    (int)bi->npwidth, (int)bi->height);",
          "448:  if(!de_good_image_dimensions(c, bi->npwidth, bi->height)) goto done;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "560:   de_dbg_indent(c, -1);",
          "561:   if(rgnsize<2) goto done;",
          "562:   pos += rgnsize;",
          "565:  }",
          "567:  if(!get_pixdata_size(c, d, bi, pos, &pixdata_size)) {",
          "",
          "[Removed Lines]",
          "563:   de_info(c, \"Note: Ignoring clipping region. Output image might have \"",
          "564:    \"extraneous pixels.\");",
          "",
          "[Added Lines]",
          "563:   if(!c->padpix) {",
          "564:    de_info(c, \"Note: Ignoring clipping region. Output image might have \"",
          "565:     \"extraneous pixels.\");",
          "566:   }",
          "",
          "---------------"
        ],
        "src/deark-fmtutil.h||src/deark-fmtutil.h": [
          "File: src/deark-fmtutil.h -> src/deark-fmtutil.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "513: struct fmtutil_macbitmap_info {",
          "514:  i64 rowbytes; // The rowBytes field",
          "515:  i64 rowspan; // Actual number of bytes/row",
          "517:  int is_uncompressed;",
          "518:  i64 packing_type;",
          "519:  i64 pixeltype, pixelsize;",
          "",
          "[Removed Lines]",
          "516:  i64 width, height;",
          "",
          "[Added Lines]",
          "516:  i64 npwidth, pdwidth, height;",
          "",
          "---------------"
        ],
        "src/fmtutil.c||src/fmtutil.c": [
          "File: src/fmtutil.c -> src/fmtutil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1572:  de_dbg(c, \"pixmap flag: %d\", bi->pixmap_flag);",
          "1574:  pict_read_rect(f, pos+2, &tmprect, \"rect\");",
          "1576:  bi->height = tmprect.b - tmprect.t;",
          "1578:  de_dbg_indent(c, -1);",
          "",
          "[Removed Lines]",
          "1575:  bi->width = tmprect.r - tmprect.l;",
          "",
          "[Added Lines]",
          "1575:  bi->npwidth = tmprect.r - tmprect.l;",
          "1576:  bi->pdwidth = bi->npwidth; // default",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1611:  de_dbg(c, \"pixel type=%d, bits/pixel=%d, components/pixel=%d, bits/comp=%d\",",
          "1612:   (int)bi->pixeltype, (int)bi->pixelsize, (int)bi->cmpcount, (int)bi->cmpsize);",
          "1614:  plane_bytes = dbuf_getu32be(f, pos+24);",
          "1615:  de_dbg(c, \"plane bytes: %d\", (int)plane_bytes);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1615:  bi->pdwidth = (bi->rowbytes*8)/bi->pixelsize;",
          "1616:  if(bi->pdwidth < bi->npwidth) {",
          "1617:   bi->pdwidth = bi->npwidth;",
          "1618:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}