{
  "cve_id": "CVE-2017-7185",
  "cve_desc": "Use-after-free vulnerability in the mg_http_multipart_wait_for_boundary function in mongoose.c in Cesanta Mongoose Embedded Web Server Library 6.7 and earlier and Mongoose OS 1.2 and earlier allows remote attackers to cause a denial of service (crash) via a multipart/form-data POST request without a MIME boundary string.",
  "repo": "cesanta/mongoose",
  "patch_hash": "b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
  "patch_info": {
    "commit_hash": "b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
    "repo": "cesanta/mongoose",
    "commit_url": "https://github.com/cesanta/mongoose/commit/b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
    "files": [
      "mongoose.c"
    ],
    "message": "Fix crash in multipart handling\n\nClose cesanta/dev#6974\n\nPUBLISHED_FROM=4d4e4a46eceba10aec8dacb7f8f58bd078c92307",
    "before_after_code_files": [
      "mongoose.c||mongoose.c"
    ]
  },
  "patch_diff": {
    "mongoose.c||mongoose.c": [
      "File: mongoose.c -> mongoose.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "5961:   struct mbuf *io = &c->recv_mbuf;",
      "5962:   struct mg_http_proto_data *pd = mg_http_get_proto_data(c);",
      "5964:   if ((int) io->len < pd->mp_stream.boundary_len + 2) {",
      "5965:     return 0;",
      "5966:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5964:   if (pd->mp_stream.boundary == NULL) {",
      "5965:     pd->mp_stream.state = MPS_FINALIZE;",
      "5966:     DBG((\"Invalid request: boundary not initilaized\"));",
      "5967:     return 0;",
      "5968:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "84907d5bc4a940133d4a45971e48662d448e5394",
      "candidate_info": {
        "commit_hash": "84907d5bc4a940133d4a45971e48662d448e5394",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/84907d5bc4a940133d4a45971e48662d448e5394",
        "files": [
          "mongoose.c"
        ],
        "message": "Ignore tcp sent cb when there's no asscociated nc\n\nTCP ACK may arrive after the we've corresponding mg_connection has already been closed.\nFixes cesanta/mongoose-os#235\n\nPUBLISHED_FROM=8164b86131ef08c1b2a6a08630920d600b3f91ac",
        "before_after_code_files": [
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "14203:                                  u16_t num_sent) {",
          "14204:   struct mg_connection *nc = (struct mg_connection *) arg;",
          "14205:   DBG((\"%p %p %u\", nc, tpcb, num_sent));",
          "14206:   if ((nc->flags & MG_F_SEND_AND_CLOSE) && !(nc->flags & MG_F_WANT_WRITE) &&",
          "14207:       nc->send_mbuf.len == 0 && tpcb->unacked == 0) {",
          "14208:     mg_lwip_post_signal(MG_SIG_CLOSE_CONN, nc);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14206:   if (nc == NULL) return ERR_OK;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "920e8d914567da18b64a6aa89542457ef0f911c2",
      "candidate_info": {
        "commit_hash": "920e8d914567da18b64a6aa89542457ef0f911c2",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/920e8d914567da18b64a6aa89542457ef0f911c2",
        "files": [
          "docs/c-api/util.h/intro.md",
          "docs/c-api/util.h/mg_fread.md",
          "docs/c-api/util.h/mg_fwrite.md",
          "docs/overview/build-options/tunables.md",
          "mongoose.c",
          "mongoose.h"
        ],
        "message": "Add shims for mongoose file operations\n\nPUBLISHED_FROM=b5b12cdf4273f21dbcdac9bfb6a06063152914c9",
        "before_after_code_files": [
          "mongoose.c||mongoose.c",
          "mongoose.h||mongoose.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5374:     if (to_read == 0) {",
          "5376:     } else if (pd->file.sent < pd->file.cl &&",
          "5378:       mg_send(nc, buf, n);",
          "5379:       pd->file.sent += n;",
          "5380:     } else {",
          "",
          "[Removed Lines]",
          "5377:                (n = fread(buf, 1, to_read, pd->file.fp)) > 0) {",
          "",
          "[Added Lines]",
          "5377:                (n = mg_fread(buf, 1, to_read, pd->file.fp)) > 0) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5384:   } else if (pd->file.type == DATA_PUT) {",
          "5385:     struct mbuf *io = &nc->recv_mbuf;",
          "5386:     size_t to_write = left <= 0 ? 0 : left < io->len ? (size_t) left : io->len;",
          "5388:     if (n > 0) {",
          "5389:       mbuf_remove(io, n);",
          "5390:       pd->file.sent += n;",
          "",
          "[Removed Lines]",
          "5387:     size_t n = fwrite(io->buf, 1, to_write, pd->file.fp);",
          "",
          "[Added Lines]",
          "5387:     size_t n = mg_fwrite(io->buf, 1, to_write, pd->file.fp);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7515:       struct file_upload_state *fus =",
          "7516:           (struct file_upload_state *) mp->user_data;",
          "7517:       if (fus == NULL || fus->fp == NULL) break;",
          "7519:         LOG(LL_ERROR, (\"Failed to write to %s: %d, wrote %d\", fus->lfn,",
          "7520:                        mg_get_errno(), (int) fus->num_recd));",
          "7521:         if (mg_get_errno() == ENOSPC",
          "",
          "[Removed Lines]",
          "7518:       if (fwrite(mp->data.p, 1, mp->data.len, fus->fp) != mp->data.len) {",
          "",
          "[Added Lines]",
          "7518:       if (mg_fwrite(mp->data.p, 1, mp->data.len, fus->fp) != mp->data.len) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8328: static void mg_send_file_data(struct mg_connection *nc, FILE *fp) {",
          "8329:   char buf[BUFSIZ];",
          "8330:   size_t n;",
          "8332:     mg_send(nc, buf, n);",
          "8333:   }",
          "8334: }",
          "",
          "[Removed Lines]",
          "8331:   while ((n = fread(buf, 1, sizeof(buf), fp)) > 0) {",
          "",
          "[Added Lines]",
          "8331:   while ((n = mg_fread(buf, 1, sizeof(buf), fp)) > 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "9209:   return tolower(*(const unsigned char *) s);",
          "9210: }",
          "9213: int mg_stat(const char *path, cs_stat_t *st) {",
          "9214: #ifdef _WIN32",
          "9215:   wchar_t wpath[MAX_PATH_SIZE];",
          "",
          "[Removed Lines]",
          "9212: #if MG_ENABLE_FILESYSTEM",
          "",
          "[Added Lines]",
          "9212: #if MG_ENABLE_FILESYSTEM && !defined(MG_USER_FILE_FUNCTIONS)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "9242: #endif",
          "9243: }",
          "9244: #endif",
          "9246: void mg_base64_encode(const unsigned char *src, int src_len, char *dst) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9245: size_t mg_fread(void *ptr, size_t size, size_t count, FILE *f) {",
          "9246:   return fread(ptr, size, count, f);",
          "9247: }",
          "9249: size_t mg_fwrite(const void *ptr, size_t size, size_t count, FILE *f) {",
          "9250:   return fwrite(ptr, size, count, f);",
          "9251: }",
          "",
          "---------------"
        ],
        "mongoose.h||mongoose.h": [
          "File: mongoose.h -> mongoose.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3900: int mg_open(const char *path, int flag, int mode);",
          "3903: #if MG_ENABLE_THREADS",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3907: size_t mg_fread(void *ptr, size_t size, size_t count, FILE *f);",
          "3914: size_t mg_fwrite(const void *ptr, size_t size, size_t count, FILE *f);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c5452fc2ec620c9b26ba22ff3c283b20ba9e1de1",
      "candidate_info": {
        "commit_hash": "c5452fc2ec620c9b26ba22ff3c283b20ba9e1de1",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/c5452fc2ec620c9b26ba22ff3c283b20ba9e1de1",
        "files": [
          "mongoose.c"
        ],
        "message": "Don't ignore non-merge commits when publishing\n\nMerge commits are not explicitly ignored either: they're just naturally\nignored as empty commits.\n\nPUBLISHED_FROM=12871fd4c9b1e9de4e57e13d810bffd98ddba299",
        "before_after_code_files": [
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4602:   }",
          "4603:   if (ctx->ca_cert != NULL) {",
          "4604:     mbedtls_ssl_conf_ca_chain(ctx->conf, NULL, NULL);",
          "4605:     mbedtls_x509_crt_free(ctx->ca_cert);",
          "4606:     MG_FREE(ctx->ca_cert);",
          "4607:     ctx->ca_cert = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4605: #ifdef MBEDTLS_X509_CA_CHAIN_ON_DISK",
          "4606:     if (ctx->ca_cert->ca_chain_file != NULL) {",
          "4607:       MG_FREE((void *) ctx->ca_cert->ca_chain_file);",
          "4608:       ctx->ca_cert->ca_chain_file = NULL;",
          "4609:     }",
          "4610: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4687:   }",
          "4688:   ctx->ca_cert = (mbedtls_x509_crt *) MG_CALLOC(1, sizeof(*ctx->ca_cert));",
          "4689:   mbedtls_x509_crt_init(ctx->ca_cert);",
          "4690:   if (mbedtls_x509_crt_parse_file(ctx->ca_cert, ca_cert) != 0) {",
          "4691:     return MG_SSL_ERROR;",
          "4692:   }",
          "4693:   mbedtls_ssl_conf_ca_chain(ctx->conf, ctx->ca_cert, NULL);",
          "4694:   mbedtls_ssl_conf_authmode(ctx->conf, MBEDTLS_SSL_VERIFY_REQUIRED);",
          "4695:   return MG_SSL_OK;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4696: #ifdef MBEDTLS_X509_CA_CHAIN_ON_DISK",
          "4697:   ca_cert = strdup(ca_cert);",
          "4698:   if (mbedtls_x509_crt_set_ca_chain_file(ctx->ca_cert, ca_cert) != 0) {",
          "4699:     return MG_SSL_ERROR;",
          "4700:   }",
          "4701: #else",
          "4705: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11117: void mg_set_nameserver(struct mg_mgr *mgr, const char *nameserver) {",
          "11118:   MG_FREE((char *) mgr->nameserver);",
          "11119:   if (nameserver != NULL) {",
          "11120:     mgr->nameserver = strdup(nameserver);",
          "11121:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11132:   mgr->nameserver = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eb5645241c85028d019ee154900215e79b22e2a9",
      "candidate_info": {
        "commit_hash": "eb5645241c85028d019ee154900215e79b22e2a9",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/eb5645241c85028d019ee154900215e79b22e2a9",
        "files": [
          "mongoose.h"
        ],
        "message": "CC3220: WiFi, basic networking support\n\nPUBLISHED_FROM=db89a45a536f0234d6d5cf740354c0dbeeff1f26",
        "before_after_code_files": [
          "mongoose.h||mongoose.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "mongoose.h||mongoose.h": [
          "File: mongoose.h -> mongoose.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1241: #define SlDeviceVersion_t SlVersionFull",
          "1242: #define sl_DeviceGet sl_DevGet",
          "1243: #define SL_DEVICE_GENERAL SL_DEVICE_GENERAL_CONFIGURATION",
          "",
          "[Removed Lines]",
          "1244: #define SL_DEV_GET_LEN_TYPE _u8",
          "",
          "[Added Lines]",
          "1244: #define SL_LEN_TYPE _u8",
          "1245: #define SL_OPT_TYPE _u8",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1250: #define SL_FI_FILE_SIZE(fi) ((fi).Len)",
          "1251: #define SL_FI_FILE_MAX_SIZE(fi) ((fi).MaxSize)",
          "",
          "[Removed Lines]",
          "1253: #define SL_DEV_GET_LEN_TYPE _u16",
          "",
          "[Added Lines]",
          "1254: #define SL_LEN_TYPE _u16",
          "1255: #define SL_OPT_TYPE _u16",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d9243d1c0b1e895e6cebf3971162efcdd79e9214",
      "candidate_info": {
        "commit_hash": "d9243d1c0b1e895e6cebf3971162efcdd79e9214",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/d9243d1c0b1e895e6cebf3971162efcdd79e9214",
        "files": [
          "mongoose.c"
        ],
        "message": "Fix MD5 disabling\n\nPUBLISHED_FROM=bb03593fb2abfb79daa3118b786428ee3e693e3d",
        "before_after_code_files": [
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c"
        ]
      }
    }
  ]
}