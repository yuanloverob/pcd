{
  "cve_id": "CVE-2017-7585",
  "cve_desc": "In libsndfile before 1.0.28, an error in the \"flac_buffer_copy()\" function (flac.c) can be exploited to cause a stack-based buffer overflow via a specially crafted FLAC file.",
  "repo": "erikd/libsndfile",
  "patch_hash": "60b234301adf258786d8b90be5c1d437fc8799e0",
  "patch_info": {
    "commit_hash": "60b234301adf258786d8b90be5c1d437fc8799e0",
    "repo": "erikd/libsndfile",
    "commit_url": "https://github.com/erikd/libsndfile/commit/60b234301adf258786d8b90be5c1d437fc8799e0",
    "files": [
      "src/flac.c"
    ],
    "message": "src/flac.c: Improve error handling\n\nEspecially when dealing with corrupt or malicious files.",
    "before_after_code_files": [
      "src/flac.c||src/flac.c"
    ]
  },
  "patch_diff": {
    "src/flac.c||src/flac.c": [
      "File: src/flac.c -> src/flac.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "68:  unsigned bufferpos ;",
      "70:  const FLAC__Frame *frame ;",
      "73:  unsigned compression ;",
      "74: } FLAC_PRIVATE ;",
      "76: typedef struct",
      "",
      "[Removed Lines]",
      "71:  FLAC__bool bufferbackup ;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "188:  if (pflac->ptr == NULL)",
      "189:  { /*",
      "194:   for (i = 0 ; i < channels ; i++)",
      "195:   {",
      "196:    if (pflac->rbuffer [i] == NULL)",
      "",
      "[Removed Lines]",
      "193:   pflac->bufferbackup = SF_TRUE ;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "207:  len = SF_MIN (pflac->len, frame->header.blocksize) ;",
      "209:  switch (pflac->pcmtype)",
      "210:  { case PFLAC_PCM_SHORT :",
      "211:    { short *retpcm = (short*) pflac->ptr ;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "208:  if (pflac->remain % channels != 0)",
      "209:  { psf_log_printf (psf, \"Error: pflac->remain %u    channels %u\\n\", pflac->remain, channels) ;",
      "210:   return 0 ;",
      "211:   } ;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "381:  pflac->frame = frame ;",
      "382:  pflac->bufferpos = 0 ;",
      "385:  pflac->wbuffer = buffer ;",
      "387:  flac_buffer_copy (psf) ;",
      "",
      "[Removed Lines]",
      "384:  pflac->bufferbackup = SF_FALSE ;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "907: static unsigned",
      "908: flac_read_loop (SF_PRIVATE *psf, unsigned len)",
      "909: { FLAC_PRIVATE* pflac = (FLAC_PRIVATE*) psf->codec_data ;",
      "911:  pflac->pos = 0 ;",
      "912:  pflac->len = len ;",
      "913:  pflac->remain = len ;",
      "916:  if (pflac->frame != NULL && pflac->bufferpos < pflac->frame->header.blocksize)",
      "917:   flac_buffer_copy (psf) ;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "913:  FLAC__StreamDecoderState state ;",
      "919:  state = FLAC__stream_decoder_get_state (pflac->fsd) ;",
      "920:  if (state > FLAC__STREAM_DECODER_END_OF_STREAM)",
      "921:  { psf_log_printf (psf, \"FLAC__stream_decoder_get_state returned %s\\n\", FLAC__StreamDecoderStateString [state]) ;",
      "923:   pflac->frame = NULL ;",
      "924:   } ;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "920:  while (pflac->pos < pflac->len)",
      "921:  { if (FLAC__stream_decoder_process_single (pflac->fsd) == 0)",
      "922:    break ;",
      "924:    break ;",
      "925:   } ;",
      "927:  pflac->ptr = NULL ;",
      "",
      "[Removed Lines]",
      "923:   if (FLAC__stream_decoder_get_state (pflac->fsd) >= FLAC__STREAM_DECODER_END_OF_STREAM)",
      "",
      "[Added Lines]",
      "934:   state = FLAC__stream_decoder_get_state (pflac->fsd) ;",
      "935:   if (state >= FLAC__STREAM_DECODER_END_OF_STREAM)",
      "936:   { psf_log_printf (psf, \"FLAC__stream_decoder_get_state returned %s\\n\", FLAC__StreamDecoderStateString [state]) ;",
      "938:    pflac->frame = NULL ;",
      "940:    } ;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "acaa880036b61f49280976a120fe99cbadbac7b3",
      "candidate_info": {
        "commit_hash": "acaa880036b61f49280976a120fe99cbadbac7b3",
        "repo": "erikd/libsndfile",
        "commit_url": "https://github.com/erikd/libsndfile/commit/acaa880036b61f49280976a120fe99cbadbac7b3",
        "files": [
          "src/flac.c"
        ],
        "message": "src/flac.c: Cleanup and validation improvements",
        "before_after_code_files": [
          "src/flac.c||src/flac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/flac.c||src/flac.c"
          ],
          "candidate": [
            "src/flac.c||src/flac.c"
          ]
        }
      },
      "candidate_diff": {
        "src/flac.c||src/flac.c": [
          "File: src/flac.c -> src/flac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:  FLAC__StreamMetadata *metadata ;",
          "68:  unsigned bufferpos ;",
          "70:  const FLAC__Frame *frame ;",
          "",
          "[Removed Lines]",
          "64:  const FLAC__int32 * const * wbuffer ;",
          "65:  FLAC__int32 * rbuffer [FLAC__MAX_CHANNELS] ;",
          "67:  FLAC__int32* encbuffer ;",
          "",
          "[Added Lines]",
          "64:  const int32_t * const * wbuffer ;",
          "65:  int32_t * rbuffer [FLAC__MAX_CHANNELS] ;",
          "67:  int32_t* encbuffer ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95: static sf_count_t flac_write_f2flac (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;",
          "96: static sf_count_t flac_write_d2flac (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;",
          "111: static int flac_command (SF_PRIVATE *psf, int command, void *data, int datasize) ;",
          "",
          "[Removed Lines]",
          "98: static void  f2flac8_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;",
          "99: static void  f2flac16_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;",
          "100: static void  f2flac24_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;",
          "101: static void  f2flac8_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;",
          "102: static void  f2flac16_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;",
          "103: static void  f2flac24_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;",
          "104: static void  d2flac8_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;",
          "105: static void  d2flac16_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;",
          "106: static void  d2flac24_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;",
          "107: static void  d2flac8_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;",
          "108: static void  d2flac16_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;",
          "109: static void  d2flac24_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;",
          "",
          "[Added Lines]",
          "98: static void  f2flac8_array (const float *src, int32_t *dest, int count, int normalize) ;",
          "99: static void  f2flac16_array (const float *src, int32_t *dest, int count, int normalize) ;",
          "100: static void  f2flac24_array (const float *src, int32_t *dest, int count, int normalize) ;",
          "101: static void  f2flac8_clip_array (const float *src, int32_t *dest, int count, int normalize) ;",
          "102: static void  f2flac16_clip_array (const float *src, int32_t *dest, int count, int normalize) ;",
          "103: static void  f2flac24_clip_array (const float *src, int32_t *dest, int count, int normalize) ;",
          "104: static void  d2flac8_array (const double *src, int32_t *dest, int count, int normalize) ;",
          "105: static void  d2flac16_array (const double *src, int32_t *dest, int count, int normalize) ;",
          "106: static void  d2flac24_array (const double *src, int32_t *dest, int count, int normalize) ;",
          "107: static void  d2flac8_clip_array (const double *src, int32_t *dest, int count, int normalize) ;",
          "108: static void  d2flac16_clip_array (const double *src, int32_t *dest, int count, int normalize) ;",
          "109: static void  d2flac24_clip_array (const double *src, int32_t *dest, int count, int normalize) ;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116: static FLAC__StreamDecoderTellStatus sf_flac_tell_callback (const FLAC__StreamDecoder *decoder, FLAC__uint64 *absolute_byte_offset, void *client_data) ;",
          "117: static FLAC__StreamDecoderLengthStatus sf_flac_length_callback (const FLAC__StreamDecoder *decoder, FLAC__uint64 *stream_length, void *client_data) ;",
          "118: static FLAC__bool sf_flac_eof_callback (const FLAC__StreamDecoder *decoder, void *client_data) ;",
          "120: static void sf_flac_meta_callback (const FLAC__StreamDecoder *decoder, const FLAC__StreamMetadata *metadata, void *client_data) ;",
          "121: static void sf_flac_error_callback (const FLAC__StreamDecoder *decoder, FLAC__StreamDecoderErrorStatus status, void *client_data) ;",
          "",
          "[Removed Lines]",
          "119: static FLAC__StreamDecoderWriteStatus sf_flac_write_callback (const FLAC__StreamDecoder *decoder, const FLAC__Frame *frame, const FLAC__int32 * const buffer [], void *client_data) ;",
          "",
          "[Added Lines]",
          "119: static FLAC__StreamDecoderWriteStatus sf_flac_write_callback (const FLAC__StreamDecoder *decoder, const FLAC__Frame *frame, const int32_t * const buffer [], void *client_data) ;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "126: static FLAC__StreamEncoderWriteStatus sf_flac_enc_write_callback (const FLAC__StreamEncoder *encoder, const FLAC__byte buffer [], size_t bytes, unsigned samples, unsigned current_frame, void *client_data) ;",
          "128: static void",
          "130: { while (--count >= 0)",
          "131:   dest [count] = src [count] >> 8 ;",
          "134: static void",
          "136: { while (--count >= 0)",
          "137:   dest [count] = src [count] ;",
          "140: static void",
          "142: { while (--count >= 0)",
          "143:   dest [count] = src [count] << 8 ;",
          "146: static void",
          "148: { while (--count >= 0)",
          "149:   dest [count] = src [count] >> 24 ;",
          "152: static void",
          "154: {",
          "155:  while (--count >= 0)",
          "156:   dest [count] = src [count] >> 16 ;",
          "159: static void",
          "161: { while (--count >= 0)",
          "162:   dest [count] = src [count] >> 8 ;",
          "",
          "[Removed Lines]",
          "129: s2flac8_array (const short *src, FLAC__int32 *dest, int count)",
          "135: s2flac16_array (const short *src, FLAC__int32 *dest, int count)",
          "141: s2flac24_array (const short *src, FLAC__int32 *dest, int count)",
          "147: i2flac8_array (const int *src, FLAC__int32 *dest, int count)",
          "153: i2flac16_array (const int *src, FLAC__int32 *dest, int count)",
          "160: i2flac24_array (const int *src, FLAC__int32 *dest, int count)",
          "",
          "[Added Lines]",
          "129: s2flac8_array (const short *src, int32_t *dest, int count)",
          "135: s2flac16_array (const short *src, int32_t *dest, int count)",
          "141: s2flac24_array (const short *src, int32_t *dest, int count)",
          "147: i2flac8_array (const int *src, int32_t *dest, int count)",
          "153: i2flac16_array (const int *src, int32_t *dest, int count)",
          "160: i2flac24_array (const int *src, int32_t *dest, int count)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "166: flac_buffer_copy (SF_PRIVATE *psf)",
          "167: { FLAC_PRIVATE* pflac = (FLAC_PRIVATE*) psf->codec_data ;",
          "168:  const FLAC__Frame *frame = pflac->frame ;",
          "",
          "[Removed Lines]",
          "169:  const FLAC__int32* const *buffer = pflac->wbuffer ;",
          "170:  unsigned i = 0, j, offset ;",
          "",
          "[Added Lines]",
          "169:  const int32_t* const *buffer = pflac->wbuffer ;",
          "170:  unsigned i = 0, j, offset, channels, len ;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "180:   return 0 ;",
          "181:   } ;",
          "183:  if (pflac->ptr == NULL)",
          "184:  { /*",
          "188:   pflac->bufferbackup = SF_TRUE ;",
          "190:   {",
          "191:    if (pflac->rbuffer [i] == NULL)",
          "195:    } ;",
          "198:   return 0 ;",
          "199:   } ;",
          "201:  switch (pflac->pcmtype)",
          "202:  { case PFLAC_PCM_SHORT :",
          "203:    { short *retpcm = (short*) pflac->ptr ;",
          "204:     int shift = 16 - frame->header.bits_per_sample ;",
          "205:     if (shift < 0)",
          "206:     { shift = abs (shift) ;",
          "210:       if (pflac->bufferpos >= frame->header.blocksize)",
          "211:        break ;",
          "214:        retpcm [offset + j] = buffer [j][pflac->bufferpos] >> shift ;",
          "216:       pflac->bufferpos++ ;",
          "217:       }",
          "218:      }",
          "219:     else",
          "223:       if (pflac->bufferpos >= frame->header.blocksize)",
          "224:        break ;",
          "227:        retpcm [offset + j] = ((uint16_t) buffer [j][pflac->bufferpos]) << shift ;",
          "230:       pflac->bufferpos++ ;",
          "231:       } ;",
          "232:      } ;",
          "",
          "[Removed Lines]",
          "189:   for (i = 0 ; i < frame->header.channels ; i++)",
          "192:     pflac->rbuffer [i] = calloc (FLAC__MAX_BLOCK_SIZE, sizeof (FLAC__int32)) ;",
          "194:    memcpy (pflac->rbuffer [i], buffer [i], frame->header.blocksize * sizeof (FLAC__int32)) ;",
          "196:   pflac->wbuffer = (const FLAC__int32* const*) pflac->rbuffer ;",
          "207:      for (i = 0 ; i < frame->header.blocksize && pflac->remain > 0 ; i++)",
          "208:      { offset = pflac->pos + i * frame->header.channels ;",
          "213:       for (j = 0 ; j < frame->header.channels ; j++)",
          "215:       pflac->remain -= frame->header.channels ;",
          "220:     { for (i = 0 ; i < frame->header.blocksize && pflac->remain > 0 ; i++)",
          "221:      { offset = pflac->pos + i * frame->header.channels ;",
          "226:       for (j = 0 ; j < frame->header.channels ; j++)",
          "229:       pflac->remain -= frame->header.channels ;",
          "",
          "[Added Lines]",
          "183:  if (frame->header.channels > FLAC__MAX_CHANNELS)",
          "184:   psf_log_printf (psf, \"Ooops : frame->header.channels (%d) > FLAC__MAX_BLOCK_SIZE (%d)\\n\", __func__, __LINE__, frame->header.channels, FLAC__MAX_CHANNELS) ;",
          "186:  channels = SF_MIN (frame->header.channels, FLAC__MAX_CHANNELS) ;",
          "194:   for (i = 0 ; i < channels ; i++)",
          "197:     pflac->rbuffer [i] = calloc (FLAC__MAX_BLOCK_SIZE, sizeof (int32_t)) ;",
          "199:    memcpy (pflac->rbuffer [i], buffer [i], frame->header.blocksize * sizeof (int32_t)) ;",
          "201:   pflac->wbuffer = (const int32_t* const*) pflac->rbuffer ;",
          "207:  len = SF_MIN (pflac->len, frame->header.blocksize) ;",
          "215:      for (i = 0 ; i < len && pflac->remain > 0 ; i++)",
          "216:      { offset = pflac->pos + i * channels ;",
          "221:       if (offset + channels > pflac->len)",
          "222:        break ;",
          "224:       for (j = 0 ; j < channels ; j++)",
          "226:       pflac->remain -= channels ;",
          "231:     { for (i = 0 ; i < len && pflac->remain > 0 ; i++)",
          "232:      { offset = pflac->pos + i * channels ;",
          "237:       if (offset + channels > pflac->len)",
          "238:        break ;",
          "240:       for (j = 0 ; j < channels ; j++)",
          "243:       pflac->remain -= channels ;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "236:   case PFLAC_PCM_INT :",
          "237:    { int *retpcm = (int*) pflac->ptr ;",
          "238:     int shift = 32 - frame->header.bits_per_sample ;",
          "242:      if (pflac->bufferpos >= frame->header.blocksize)",
          "243:       break ;",
          "246:       retpcm [offset + j] = ((uint32_t) buffer [j][pflac->bufferpos]) << shift ;",
          "248:      pflac->bufferpos++ ;",
          "249:      } ;",
          "250:     } ;",
          "",
          "[Removed Lines]",
          "239:     for (i = 0 ; i < frame->header.blocksize && pflac->remain > 0 ; i++)",
          "240:     { offset = pflac->pos + i * frame->header.channels ;",
          "245:      for (j = 0 ; j < frame->header.channels ; j++)",
          "247:      pflac->remain -= frame->header.channels ;",
          "",
          "[Added Lines]",
          "253:     for (i = 0 ; i < len && pflac->remain > 0 ; i++)",
          "254:     { offset = pflac->pos + i * channels ;",
          "259:      if (offset + channels > pflac->len)",
          "260:       break ;",
          "262:      for (j = 0 ; j < channels ; j++)",
          "264:      pflac->remain -= channels ;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "254:    { float *retpcm = (float*) pflac->ptr ;",
          "255:     float norm = (psf->norm_float == SF_TRUE) ? 1.0 / (1 << (frame->header.bits_per_sample - 1)) : 1.0 ;",
          "260:      if (pflac->bufferpos >= frame->header.blocksize)",
          "261:       break ;",
          "264:       retpcm [offset + j] = buffer [j][pflac->bufferpos] * norm ;",
          "266:      pflac->bufferpos++ ;",
          "267:      } ;",
          "268:     } ;",
          "",
          "[Removed Lines]",
          "257:     for (i = 0 ; i < frame->header.blocksize && pflac->remain > 0 ; i++)",
          "258:     { offset = pflac->pos + i * frame->header.channels ;",
          "263:      for (j = 0 ; j < frame->header.channels ; j++)",
          "265:      pflac->remain -= frame->header.channels ;",
          "",
          "[Added Lines]",
          "274:     for (i = 0 ; i < len && pflac->remain > 0 ; i++)",
          "275:     { offset = pflac->pos + i * channels ;",
          "280:      if (offset + channels > pflac->len)",
          "281:       break ;",
          "283:      for (j = 0 ; j < channels ; j++)",
          "285:      pflac->remain -= channels ;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "272:    { double *retpcm = (double*) pflac->ptr ;",
          "273:     double norm = (psf->norm_double == SF_TRUE) ? 1.0 / (1 << (frame->header.bits_per_sample - 1)) : 1.0 ;",
          "278:      if (pflac->bufferpos >= frame->header.blocksize)",
          "279:       break ;",
          "282:       retpcm [offset + j] = buffer [j][pflac->bufferpos] * norm ;",
          "284:      pflac->bufferpos++ ;",
          "285:      } ;",
          "286:     } ;",
          "",
          "[Removed Lines]",
          "275:     for (i = 0 ; i < frame->header.blocksize && pflac->remain > 0 ; i++)",
          "276:     { offset = pflac->pos + i * frame->header.channels ;",
          "281:      for (j = 0 ; j < frame->header.channels ; j++)",
          "283:      pflac->remain -= frame->header.channels ;",
          "",
          "[Added Lines]",
          "295:     for (i = 0 ; i < len && pflac->remain > 0 ; i++)",
          "296:     { offset = pflac->pos + i * channels ;",
          "301:      if (offset + channels > pflac->len)",
          "302:       break ;",
          "304:      for (j = 0 ; j < channels ; j++)",
          "306:      pflac->remain -= channels ;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "290:    return 0 ;",
          "291:   } ;",
          "296:  return offset ;",
          "",
          "[Removed Lines]",
          "293:  offset = i * frame->header.channels ;",
          "294:  pflac->pos += i * frame->header.channels ;",
          "",
          "[Added Lines]",
          "316:  offset = i * channels ;",
          "317:  pflac->pos += i * channels ;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "353: static FLAC__StreamDecoderWriteStatus",
          "355: { SF_PRIVATE *psf = (SF_PRIVATE*) client_data ;",
          "356:  FLAC_PRIVATE* pflac = (FLAC_PRIVATE*) psf->codec_data ;",
          "",
          "[Removed Lines]",
          "354: sf_flac_write_callback (const FLAC__StreamDecoder * UNUSED (decoder), const FLAC__Frame *frame, const FLAC__int32 * const buffer [], void *client_data)",
          "",
          "[Added Lines]",
          "377: sf_flac_write_callback (const FLAC__StreamDecoder * UNUSED (decoder), const FLAC__Frame *frame, const int32_t * const buffer [], void *client_data)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "369: static void",
          "370: sf_flac_meta_get_vorbiscomments (SF_PRIVATE *psf, const FLAC__StreamMetadata *metadata)",
          "372:  {  { \"title\", SF_STR_TITLE },",
          "373:   { \"copyright\", SF_STR_COPYRIGHT },",
          "374:   { \"software\", SF_STR_SOFTWARE },",
          "",
          "[Removed Lines]",
          "371: { FLAC_TAG tags [] =",
          "",
          "[Added Lines]",
          "394: { static FLAC_TAG tags [] =",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "404: static void",
          "405: sf_flac_meta_callback (const FLAC__StreamDecoder * UNUSED (decoder), const FLAC__StreamMetadata *metadata, void *client_data)",
          "406: { SF_PRIVATE *psf = (SF_PRIVATE*) client_data ;",
          "409:  switch (metadata->type)",
          "410:  { case FLAC__METADATA_TYPE_STREAMINFO :",
          "",
          "[Removed Lines]",
          "407:  int bitwidth = 0 ;",
          "",
          "[Added Lines]",
          "430:  FLAC_PRIVATE* pflac = (FLAC_PRIVATE*) psf->codec_data ;",
          "431:  int bitwidth = 0, i ;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "442:    if (bitwidth > 0)",
          "443:     psf_log_printf (psf, \"  Bit width   : %d\\n\", bitwidth) ;",
          "444:    break ;",
          "446:   case FLAC__METADATA_TYPE_VORBIS_COMMENT :",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "470:    for (i = 0 ; i < psf->sf.channels ; i++)",
          "471:     pflac->rbuffer [i] = calloc (FLAC__MAX_BLOCK_SIZE, sizeof (int32_t)) ;",
          "473:    pflac->wbuffer = (const int32_t* const*) pflac->rbuffer ;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "618:  if (psf->error == 0)",
          "619:   psf->dataoffset = psf_ftell (psf) ;",
          "622:  return psf->error ;",
          "",
          "[Removed Lines]",
          "620:  pflac->encbuffer = calloc (ENC_BUFFER_SIZE, sizeof (FLAC__int32)) ;",
          "",
          "[Added Lines]",
          "650:  pflac->encbuffer = calloc (ENC_BUFFER_SIZE, sizeof (int32_t)) ;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "978: static sf_count_t",
          "979: flac_write_s2flac (SF_PRIVATE *psf, const short *ptr, sf_count_t len)",
          "980: { FLAC_PRIVATE* pflac = (FLAC_PRIVATE*) psf->codec_data ;",
          "982:  int bufferlen, writecount, thiswrite ;",
          "983:  sf_count_t total = 0 ;",
          "986:  switch (SF_CODEC (psf->sf.format))",
          "987:  { case SF_FORMAT_PCM_S8 :",
          "",
          "[Removed Lines]",
          "981:  void (*convert) (const short *, FLAC__int32 *, int) ;",
          "984:  FLAC__int32* buffer = pflac->encbuffer ;",
          "",
          "[Added Lines]",
          "1015:  void (*convert) (const short *, int32_t *, int) ;",
          "1018:  int32_t* buffer = pflac->encbuffer ;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "997:    return -1 ;",
          "998:   } ;",
          "1001:  bufferlen *= psf->sf.channels ;",
          "1003:  while (len > 0)",
          "",
          "[Removed Lines]",
          "1000:  bufferlen = ENC_BUFFER_SIZE / (sizeof (FLAC__int32) * psf->sf.channels) ;",
          "",
          "[Added Lines]",
          "1034:  bufferlen = ENC_BUFFER_SIZE / (sizeof (int32_t) * psf->sf.channels) ;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1020: static sf_count_t",
          "1021: flac_write_i2flac (SF_PRIVATE *psf, const int *ptr, sf_count_t len)",
          "1022: { FLAC_PRIVATE* pflac = (FLAC_PRIVATE*) psf->codec_data ;",
          "1024:  int bufferlen, writecount, thiswrite ;",
          "1025:  sf_count_t total = 0 ;",
          "1028:  switch (SF_CODEC (psf->sf.format))",
          "1029:  { case SF_FORMAT_PCM_S8 :",
          "",
          "[Removed Lines]",
          "1023:  void (*convert) (const int *, FLAC__int32 *, int) ;",
          "1026:  FLAC__int32* buffer = pflac->encbuffer ;",
          "",
          "[Added Lines]",
          "1057:  void (*convert) (const int *, int32_t *, int) ;",
          "1060:  int32_t* buffer = pflac->encbuffer ;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1039:    return -1 ;",
          "1040:   } ;",
          "1043:  bufferlen *= psf->sf.channels ;",
          "1045:  while (len > 0)",
          "",
          "[Removed Lines]",
          "1042:  bufferlen = ENC_BUFFER_SIZE / (sizeof (FLAC__int32) * psf->sf.channels) ;",
          "",
          "[Added Lines]",
          "1076:  bufferlen = ENC_BUFFER_SIZE / (sizeof (int32_t) * psf->sf.channels) ;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1062: static sf_count_t",
          "1063: flac_write_f2flac (SF_PRIVATE *psf, const float *ptr, sf_count_t len)",
          "1064: { FLAC_PRIVATE* pflac = (FLAC_PRIVATE*) psf->codec_data ;",
          "1066:  int bufferlen, writecount, thiswrite ;",
          "1067:  sf_count_t total = 0 ;",
          "1070:  switch (SF_CODEC (psf->sf.format))",
          "1071:  { case SF_FORMAT_PCM_S8 :",
          "",
          "[Removed Lines]",
          "1065:  void (*convert) (const float *, FLAC__int32 *, int, int) ;",
          "1068:  FLAC__int32* buffer = pflac->encbuffer ;",
          "",
          "[Added Lines]",
          "1099:  void (*convert) (const float *, int32_t *, int, int) ;",
          "1102:  int32_t* buffer = pflac->encbuffer ;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1081:    return -1 ;",
          "1082:   } ;",
          "1085:  bufferlen *= psf->sf.channels ;",
          "1087:  while (len > 0)",
          "",
          "[Removed Lines]",
          "1084:  bufferlen = ENC_BUFFER_SIZE / (sizeof (FLAC__int32) * psf->sf.channels) ;",
          "",
          "[Added Lines]",
          "1118:  bufferlen = ENC_BUFFER_SIZE / (sizeof (int32_t) * psf->sf.channels) ;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1104: static void",
          "1106: { float normfact, scaled_value ;",
          "1108:  normfact = normalize ? (8.0 * 0x10) : 1.0 ;",
          "",
          "[Removed Lines]",
          "1105: f2flac8_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1139: f2flac8_clip_array (const float *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1126: static void",
          "1128: { float normfact, scaled_value ;",
          "1130:  normfact = normalize ? (8.0 * 0x1000) : 1.0 ;",
          "",
          "[Removed Lines]",
          "1127: f2flac16_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1161: f2flac16_clip_array (const float *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1146: static void",
          "1148: { float normfact, scaled_value ;",
          "1150:  normfact = normalize ? (8.0 * 0x100000) : 1.0 ;",
          "",
          "[Removed Lines]",
          "1147: f2flac24_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1181: f2flac24_clip_array (const float *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1169: static void",
          "1171: { float normfact = normalize ? (1.0 * 0x7F) : 1.0 ;",
          "1173:  while (--count >= 0)",
          "",
          "[Removed Lines]",
          "1170: f2flac8_array (const float *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1204: f2flac8_array (const float *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1177: static void",
          "1179: { float normfact = normalize ? (1.0 * 0x7FFF) : 1.0 ;",
          "1181:  while (--count >= 0)",
          "",
          "[Removed Lines]",
          "1178: f2flac16_array (const float *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1212: f2flac16_array (const float *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1185: static void",
          "1187: { float normfact = normalize ? (1.0 * 0x7FFFFF) : 1.0 ;",
          "1189:  while (--count >= 0)",
          "",
          "[Removed Lines]",
          "1186: f2flac24_array (const float *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1220: f2flac24_array (const float *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1193: static sf_count_t",
          "1194: flac_write_d2flac (SF_PRIVATE *psf, const double *ptr, sf_count_t len)",
          "1195: { FLAC_PRIVATE* pflac = (FLAC_PRIVATE*) psf->codec_data ;",
          "1197:  int bufferlen, writecount, thiswrite ;",
          "1198:  sf_count_t total = 0 ;",
          "1201:  switch (SF_CODEC (psf->sf.format))",
          "1202:  { case SF_FORMAT_PCM_S8 :",
          "",
          "[Removed Lines]",
          "1196:  void (*convert) (const double *, FLAC__int32 *, int, int) ;",
          "1199:  FLAC__int32* buffer = pflac->encbuffer ;",
          "",
          "[Added Lines]",
          "1230:  void (*convert) (const double *, int32_t *, int, int) ;",
          "1233:  int32_t* buffer = pflac->encbuffer ;",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1212:    return -1 ;",
          "1213:   } ;",
          "1216:  bufferlen *= psf->sf.channels ;",
          "1218:  while (len > 0)",
          "",
          "[Removed Lines]",
          "1215:  bufferlen = ENC_BUFFER_SIZE / (sizeof (FLAC__int32) * psf->sf.channels) ;",
          "",
          "[Added Lines]",
          "1249:  bufferlen = ENC_BUFFER_SIZE / (sizeof (int32_t) * psf->sf.channels) ;",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1235: static void",
          "1237: { double normfact, scaled_value ;",
          "1239:  normfact = normalize ? (8.0 * 0x10) : 1.0 ;",
          "",
          "[Removed Lines]",
          "1236: d2flac8_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1270: d2flac8_clip_array (const double *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1257: static void",
          "1259: { double normfact, scaled_value ;",
          "1261:  normfact = normalize ? (8.0 * 0x1000) : 1.0 ;",
          "",
          "[Removed Lines]",
          "1258: d2flac16_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1292: d2flac16_clip_array (const double *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1279: static void",
          "1281: { double normfact, scaled_value ;",
          "1283:  normfact = normalize ? (8.0 * 0x100000) : 1.0 ;",
          "",
          "[Removed Lines]",
          "1280: d2flac24_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1314: d2flac24_clip_array (const double *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1301: static void",
          "1303: { double normfact = normalize ? (1.0 * 0x7F) : 1.0 ;",
          "1305:  while (--count >= 0)",
          "",
          "[Removed Lines]",
          "1302: d2flac8_array (const double *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1336: d2flac8_array (const double *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1309: static void",
          "1311: { double normfact = normalize ? (1.0 * 0x7FFF) : 1.0 ;",
          "1313:  while (--count >= 0)",
          "",
          "[Removed Lines]",
          "1310: d2flac16_array (const double *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1344: d2flac16_array (const double *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1317: static void",
          "1319: { double normfact = normalize ? (1.0 * 0x7FFFFF) : 1.0 ;",
          "1321:  while (--count >= 0)",
          "",
          "[Removed Lines]",
          "1318: d2flac24_array (const double *src, FLAC__int32 *dest, int count, int normalize)",
          "",
          "[Added Lines]",
          "1352: d2flac24_array (const double *src, int32_t *dest, int count, int normalize)",
          "",
          "---------------"
        ]
      }
    }
  ]
}