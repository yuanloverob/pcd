{
  "cve_id": "CVE-2022-23571",
  "cve_desc": "Tensorflow is an Open Source Machine Learning Framework. When decoding a tensor from protobuf, a TensorFlow process can encounter cases where a `CHECK` assertion is invalidated based on user controlled arguments, if the tensors have an invalid `dtype` and 0 elements or an invalid shape. This allows attackers to cause denial of services in TensorFlow processes. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "5b491cd5e41ad63735161cec9c2a568172c8b6a3",
  "patch_info": {
    "commit_hash": "5b491cd5e41ad63735161cec9c2a568172c8b6a3",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/5b491cd5e41ad63735161cec9c2a568172c8b6a3",
    "files": [
      "tensorflow/core/framework/tensor.cc"
    ],
    "message": "Validate `proto.dtype()` before calling `set_dtype()`.\n\nThis prevents a `DCHECK`-fail when the proto contains an invalid dtype for a tensor shape with 0 elements or for an incomplete tensor shape.\n\nPiperOrigin-RevId: 408369083\nChange-Id: Ia21a3e3d62a90d642a4561f08f3b543e5ad00c46",
    "before_after_code_files": [
      "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc": [
      "File: tensorflow/core/framework/tensor.cc -> tensorflow/core/framework/tensor.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "983:                          dtype_error = true, dtype_error = true);",
      "984:     }",
      "985:     if (dtype_error || p == nullptr) return false;",
      "986:   }",
      "987:   shape_ = shape;",
      "988:   set_dtype(proto.dtype());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "986:   } else {",
      "991:     bool dtype_error = false;",
      "992:     CASES_WITH_DEFAULT(proto.dtype(), break, dtype_error = true,",
      "993:                        dtype_error = true);",
      "994:     if (dtype_error) return false;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0fc681cdff6f0a7d588af73951c1aaf53c58a88a",
      "candidate_info": {
        "commit_hash": "0fc681cdff6f0a7d588af73951c1aaf53c58a88a",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/0fc681cdff6f0a7d588af73951c1aaf53c58a88a",
        "files": [
          "tensorflow/core/framework/tensor.cc"
        ],
        "message": "Validate `proto.dtype()` before calling `set_dtype()`.\n\nThis prevents a `DCHECK`-fail when the proto contains an invalid dtype for a tensor shape with 0 elements or for an incomplete tensor shape.\n\nPiperOrigin-RevId: 408369083\nChange-Id: Ia21a3e3d62a90d642a4561f08f3b543e5ad00c46",
        "before_after_code_files": [
          "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc": [
          "File: tensorflow/core/framework/tensor.cc -> tensorflow/core/framework/tensor.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "943:                          dtype_error = true, dtype_error = true);",
          "944:     }",
          "945:     if (dtype_error || p == nullptr) return false;",
          "946:   }",
          "947:   shape_ = shape;",
          "948:   set_dtype(proto.dtype());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "946:   } else {",
          "951:     bool dtype_error = false;",
          "952:     CASES_WITH_DEFAULT(proto.dtype(), break, dtype_error = true,",
          "953:                        dtype_error = true);",
          "954:     if (dtype_error) return false;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f2829d9f52f914986fea150b877a013ceff4d2d",
      "candidate_info": {
        "commit_hash": "7f2829d9f52f914986fea150b877a013ceff4d2d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/7f2829d9f52f914986fea150b877a013ceff4d2d",
        "files": [
          "tensorflow/core/framework/tensor.cc"
        ],
        "message": "Validate `proto.dtype()` before calling `set_dtype()`.\n\nThis prevents a `DCHECK`-fail when the proto contains an invalid dtype for a tensor shape with 0 elements or for an incomplete tensor shape.\n\nPiperOrigin-RevId: 408369083\nChange-Id: Ia21a3e3d62a90d642a4561f08f3b543e5ad00c46",
        "before_after_code_files": [
          "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc": [
          "File: tensorflow/core/framework/tensor.cc -> tensorflow/core/framework/tensor.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "939:                          dtype_error = true, dtype_error = true);",
          "940:     }",
          "941:     if (dtype_error || p == nullptr) return false;",
          "942:   }",
          "943:   shape_ = shape;",
          "944:   set_dtype(proto.dtype());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "942:   } else {",
          "947:     bool dtype_error = false;",
          "948:     CASES_WITH_DEFAULT(proto.dtype(), break, dtype_error = true,",
          "949:                        dtype_error = true);",
          "950:     if (dtype_error) return false;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5b00aca9dfa4985fe74982b4101bbe822a52fbc5",
      "candidate_info": {
        "commit_hash": "5b00aca9dfa4985fe74982b4101bbe822a52fbc5",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5b00aca9dfa4985fe74982b4101bbe822a52fbc5",
        "files": [
          "tensorflow/core/framework/tensor.cc"
        ],
        "message": "Validate `proto.dtype()` before calling `set_dtype()`.\n\nThis prevents a `DCHECK`-fail when the proto contains an invalid dtype for a tensor shape with 0 elements or for an incomplete tensor shape.\n\nPiperOrigin-RevId: 408369083\nChange-Id: Ia21a3e3d62a90d642a4561f08f3b543e5ad00c46",
        "before_after_code_files": [
          "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/tensor.cc||tensorflow/core/framework/tensor.cc": [
          "File: tensorflow/core/framework/tensor.cc -> tensorflow/core/framework/tensor.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "937:                          dtype_error = true, dtype_error = true);",
          "938:     }",
          "939:     if (dtype_error || p == nullptr) return false;",
          "940:   }",
          "941:   shape_ = shape;",
          "942:   set_dtype(proto.dtype());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "940:   } else {",
          "945:     bool dtype_error = false;",
          "946:     CASES_WITH_DEFAULT(proto.dtype(), break, dtype_error = true,",
          "947:                        dtype_error = true);",
          "948:     if (dtype_error) return false;",
          "",
          "---------------"
        ]
      }
    }
  ]
}