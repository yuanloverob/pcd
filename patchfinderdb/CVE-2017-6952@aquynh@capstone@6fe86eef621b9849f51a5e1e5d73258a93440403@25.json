{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "79194cc63a19e62c693c39ebb60b90185914b9d2",
      "candidate_info": {
        "commit_hash": "79194cc63a19e62c693c39ebb60b90185914b9d2",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/79194cc63a19e62c693c39ebb60b90185914b9d2",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "x86: indentation",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3139:     return false;",
          "3141:    case X86_INS_JAE:",
          "3167:     return true;",
          "3168:   }",
          "3169:  }",
          "",
          "[Removed Lines]",
          "3142:             case X86_INS_JA:",
          "3143:             case X86_INS_JBE:",
          "3144:             case X86_INS_JB:",
          "3145:             case X86_INS_JCXZ:",
          "3146:             case X86_INS_JECXZ:",
          "3147:             case X86_INS_JE:",
          "3148:             case X86_INS_JGE:",
          "3149:             case X86_INS_JG:",
          "3150:             case X86_INS_JLE:",
          "3151:             case X86_INS_JL:",
          "3152:             case X86_INS_JMP:",
          "3153:             case X86_INS_JNE:",
          "3154:             case X86_INS_JNO:",
          "3155:             case X86_INS_JNP:",
          "3156:             case X86_INS_JNS:",
          "3157:             case X86_INS_JO:",
          "3158:             case X86_INS_JP:",
          "3159:             case X86_INS_JRCXZ:",
          "3160:             case X86_INS_JS:",
          "3162:             case X86_INS_CALL:",
          "3163:             case X86_INS_RET:",
          "3164:             case X86_INS_RETF:",
          "3165:             case X86_INS_RETFQ:",
          "",
          "[Added Lines]",
          "3142:    case X86_INS_JA:",
          "3143:    case X86_INS_JBE:",
          "3144:    case X86_INS_JB:",
          "3145:    case X86_INS_JCXZ:",
          "3146:    case X86_INS_JECXZ:",
          "3147:    case X86_INS_JE:",
          "3148:    case X86_INS_JGE:",
          "3149:    case X86_INS_JG:",
          "3150:    case X86_INS_JLE:",
          "3151:    case X86_INS_JL:",
          "3152:    case X86_INS_JMP:",
          "3153:    case X86_INS_JNE:",
          "3154:    case X86_INS_JNO:",
          "3155:    case X86_INS_JNP:",
          "3156:    case X86_INS_JNS:",
          "3157:    case X86_INS_JO:",
          "3158:    case X86_INS_JP:",
          "3159:    case X86_INS_JRCXZ:",
          "3160:    case X86_INS_JS:",
          "3162:    case X86_INS_CALL:",
          "3163:    case X86_INS_RET:",
          "3164:    case X86_INS_RETF:",
          "3165:    case X86_INS_RETFQ:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9d07c1cd180dd6d399350a37d0f28ce028e9b648",
      "candidate_info": {
        "commit_hash": "9d07c1cd180dd6d399350a37d0f28ce028e9b648",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9d07c1cd180dd6d399350a37d0f28ce028e9b648",
        "files": [
          "cs.c"
        ],
        "message": "arm: only reset IT block for ARM",
        "before_after_code_files": [
          "cs.c||cs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "563:  handle->errnum = CS_ERR_OK;",
          "568: #ifdef CAPSTONE_USE_SYS_DYN_MEM",
          "569:  if (count > 0 && count <= INSN_CACHE_SIZE)",
          "",
          "[Removed Lines]",
          "566:  handle->ITBlock.size = 0;",
          "",
          "[Added Lines]",
          "566:  if (handle->arch == CS_ARCH_ARM)",
          "567:   handle->ITBlock.size = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9af97427063a749344736039d24b5af6fcd90ad0",
      "candidate_info": {
        "commit_hash": "9af97427063a749344736039d24b5af6fcd90ad0",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9af97427063a749344736039d24b5af6fcd90ad0",
        "files": [
          "arch/X86/X86IntelInstPrinter.c",
          "cstool/cstool.c"
        ],
        "message": "Honor CS_OPT_UNSIGNED on x86 and add cstool -u (#945)",
        "before_after_code_files": [
          "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c",
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c": [
          "File: arch/X86/X86IntelInstPrinter.c -> arch/X86/X86IntelInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "444:   printRegName(O, MCOperand_getReg(Op));",
          "445:  } else if (MCOperand_isImm(Op)) {",
          "446:   int64_t imm = MCOperand_getImm(Op);",
          "448:  }",
          "449: }",
          "",
          "[Removed Lines]",
          "447:   printImm(MI->csh->syntax, O, imm, false);",
          "",
          "[Added Lines]",
          "447:   printImm(MI->csh->syntax, O, imm, MI->csh->imm_unsigned);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "888:   switch(MI->flat_insn->id) {",
          "889:    default:",
          "891:     break;",
          "893:    case X86_INS_MOVABS:",
          "",
          "[Removed Lines]",
          "890:     printImm(MI->csh->syntax, O, imm, false);",
          "",
          "[Added Lines]",
          "890:     printImm(MI->csh->syntax, O, imm, MI->csh->imm_unsigned);",
          "",
          "---------------"
        ],
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: static void usage(char *prog)",
          "73: {",
          "74:  printf(\"Cstool for Capstone Disassembler Engine v%u.%u.%u\\n\\n\", CS_VERSION_MAJOR, CS_VERSION_MINOR, CS_VERSION_EXTRA);",
          "76:  printf(\"\\nThe following <arch+mode> options are supported:\\n\");",
          "78:  if (cs_support(CS_ARCH_X86)) {",
          "",
          "[Removed Lines]",
          "75:  printf(\"Syntax: %s [-d] <arch+mode> <assembly-hexstring> [start-address-in-hex-format]\\n\", prog);",
          "",
          "[Added Lines]",
          "75:  printf(\"Syntax: %s [-u|-d] <arch+mode> <assembly-hexstring> [start-address-in-hex-format]\\n\", prog);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144:  cs_mode md;",
          "145:  cs_arch arch;",
          "146:  bool detail_flag = false;",
          "148:  if (argc != 3 && argc != 4 && argc != 5) {",
          "149:   usage(argv[0]);",
          "150:   return -1;",
          "151:  }",
          "154:   if (argc == 3) {",
          "155:    usage(argv[0]);",
          "156:    return -1;",
          "157:   }",
          "159:   mode = argv[2];",
          "160:   assembly = preprocess(argv[3], &size);",
          "161:   if (argc == 5) {",
          "",
          "[Removed Lines]",
          "153:  if (!strcmp(argv[1], \"-d\")) {",
          "158:   detail_flag = true;",
          "",
          "[Added Lines]",
          "147:  bool unsigned_flag = false;",
          "154:  if (!strcmp(argv[1], \"-d\") || !strcmp(argv[1], \"-u\")) {",
          "159:   if (argv[1][1] == 'd') {",
          "160:    detail_flag = true;",
          "161:   } else {",
          "162:    unsigned_flag = true;",
          "163:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "345:  if (detail_flag) {",
          "346:   cs_option(handle, CS_OPT_DETAIL, CS_OPT_ON);",
          "347:  }",
          "349:  count = cs_disasm(handle, assembly, size, address, 0, &insn);",
          "350:  if (count > 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "353:  if (unsigned_flag) {",
          "354:   cs_option(handle, CS_OPT_UNSIGNED, CS_OPT_ON);",
          "355:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8853489ea99b5f47be6b9c8fe7aea4740ab6a987",
      "candidate_info": {
        "commit_hash": "8853489ea99b5f47be6b9c8fe7aea4740ab6a987",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/8853489ea99b5f47be6b9c8fe7aea4740ab6a987",
        "files": [
          "cstool/cstool_m68k.c"
        ],
        "message": "cstool: remove M68K support",
        "before_after_code_files": [
          "cstool/cstool_m68k.c||cstool/cstool_m68k.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool_m68k.c||cstool/cstool_m68k.c": [
          "File: cstool/cstool_m68k.c -> cstool/cstool_m68k.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f69d43db7d610dfa507a53a4437681c9ff4c9117",
      "candidate_info": {
        "commit_hash": "f69d43db7d610dfa507a53a4437681c9ff4c9117",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/f69d43db7d610dfa507a53a4437681c9ff4c9117",
        "files": [
          "tests/test_winkernel.cpp",
          "windows/winkernel_mm.c",
          "windows/winkernel_mm.h"
        ],
        "message": "change copyright",
        "before_after_code_files": [
          "tests/test_winkernel.cpp||tests/test_winkernel.cpp",
          "windows/winkernel_mm.c||windows/winkernel_mm.c",
          "windows/winkernel_mm.h||windows/winkernel_mm.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "windows/winkernel_mm.c||windows/winkernel_mm.c"
          ],
          "candidate": [
            "windows/winkernel_mm.c||windows/winkernel_mm.c"
          ]
        }
      },
      "candidate_diff": {
        "tests/test_winkernel.cpp||tests/test_winkernel.cpp": [
          "File: tests/test_winkernel.cpp -> tests/test_winkernel.cpp"
        ],
        "windows/winkernel_mm.c||windows/winkernel_mm.c": [
          "File: windows/winkernel_mm.c -> windows/winkernel_mm.c"
        ],
        "windows/winkernel_mm.h||windows/winkernel_mm.h": [
          "File: windows/winkernel_mm.h -> windows/winkernel_mm.h"
        ]
      }
    }
  ]
}