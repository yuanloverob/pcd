{
  "cve_id": "CVE-2013-4163",
  "cve_desc": "The ip6_append_data_mtu function in net/ipv6/ip6_output.c in the IPv6 implementation in the Linux kernel through 3.10.3 does not properly maintain information about whether the IPV6_MTU setsockopt option had been specified, which allows local users to cause a denial of service (BUG and system crash) via a crafted application that uses the UDP_CORK option in a setsockopt system call.",
  "repo": "torvalds/linux",
  "patch_hash": "75a493e60ac4bbe2e977e7129d6d8cbb0dd236be",
  "patch_info": {
    "commit_hash": "75a493e60ac4bbe2e977e7129d6d8cbb0dd236be",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/75a493e60ac4bbe2e977e7129d6d8cbb0dd236be",
    "files": [
      "net/ipv6/ip6_output.c"
    ],
    "message": "ipv6: ip6_append_data_mtu did not care about pmtudisc and frag_size\n\nIf the socket had an IPV6_MTU value set, ip6_append_data_mtu lost track\nof this when appending the second frame on a corked socket. This results\nin the following splat:\n\n[37598.993962] ------------[ cut here ]------------\n[37598.994008] kernel BUG at net/core/skbuff.c:2064!\n[37598.994008] invalid opcode: 0000 [#1] SMP\n[37598.994008] Modules linked in: tcp_lp uvcvideo videobuf2_vmalloc videobuf2_memops videobuf2_core videodev media vfat fat usb_storage fuse ebtable_nat xt_CHECKSUM bridge stp llc ipt_MASQUERADE nf_conntrack_netbios_ns nf_conntrack_broadcast ip6table_mangle ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 iptable_nat\n+nf_nat_ipv4 nf_nat iptable_mangle nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack ebtable_filter ebtables ip6table_filter ip6_tables be2iscsi iscsi_boot_sysfs bnx2i cnic uio cxgb4i cxgb4 cxgb3i cxgb3 mdio libcxgbi ib_iser rdma_cm ib_addr iw_cm ib_cm ib_sa ib_mad ib_core iscsi_tcp libiscsi_tcp libiscsi\n+scsi_transport_iscsi rfcomm bnep iTCO_wdt iTCO_vendor_support snd_hda_codec_conexant arc4 iwldvm mac80211 snd_hda_intel acpi_cpufreq mperf coretemp snd_hda_codec microcode cdc_wdm cdc_acm\n[37598.994008]  snd_hwdep cdc_ether snd_seq snd_seq_device usbnet mii joydev btusb snd_pcm bluetooth i2c_i801 e1000e lpc_ich mfd_core ptp iwlwifi pps_core snd_page_alloc mei cfg80211 snd_timer thinkpad_acpi snd tpm_tis soundcore rfkill tpm tpm_bios vhost_net tun macvtap macvlan kvm_intel kvm uinput binfmt_misc\n+dm_crypt i915 i2c_algo_bit drm_kms_helper drm i2c_core wmi video\n[37598.994008] CPU 0\n[37598.994008] Pid: 27320, comm: t2 Not tainted 3.9.6-200.fc18.x86_64 #1 LENOVO 27744PG/27744PG\n[37598.994008] RIP: 0010:[<ffffffff815443a5>]  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330\n[37598.994008] RSP: 0018:ffff88003670da18  EFLAGS: 00010202\n[37598.994008] RAX: ffff88018105c018 RBX: 0000000000000004 RCX: 00000000000006c0\n[37598.994008] RDX: ffff88018105a6c0 RSI: ffff88018105a000 RDI: ffff8801e1b0aa00\n[37598.994008] RBP: ffff88003670da78 R08: 0000000000000000 R09: ffff88018105c040\n[37598.994008] R10: ffff8801e1b0aa00 R11: 0000000000000000 R12: 000000000000fff8\n[37598.994008] R13: 00000000000004fc R14: 00000000ffff0504 R15: 0000000000000000\n[37598.994008] FS:  00007f28eea59740(0000) GS:ffff88023bc00000(0000) knlGS:0000000000000000\n[37598.994008] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[37598.994008] CR2: 0000003d935789e0 CR3: 00000000365cb000 CR4: 00000000000407f0\n[37598.994008] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[37598.994008] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n[37598.994008] Process t2 (pid: 27320, threadinfo ffff88003670c000, task ffff88022c162ee0)\n[37598.994008] Stack:\n[37598.994008]  ffff88022e098a00 ffff88020f973fc0 0000000000000008 00000000000004c8\n[37598.994008]  ffff88020f973fc0 00000000000004c4 ffff88003670da78 ffff8801e1b0a200\n[37598.994008]  0000000000000018 00000000000004c8 ffff88020f973fc0 00000000000004c4\n[37598.994008] Call Trace:\n[37598.994008]  [<ffffffff815fc21f>] ip6_append_data+0xccf/0xfe0\n[37598.994008]  [<ffffffff8158d9f0>] ? ip_copy_metadata+0x1a0/0x1a0\n[37598.994008]  [<ffffffff81661f66>] ? _raw_spin_lock_bh+0x16/0x40\n[37598.994008]  [<ffffffff8161548d>] udpv6_sendmsg+0x1ed/0xc10\n[37598.994008]  [<ffffffff812a2845>] ? sock_has_perm+0x75/0x90\n[37598.994008]  [<ffffffff815c3693>] inet_sendmsg+0x63/0xb0\n[37598.994008]  [<ffffffff812a2973>] ? selinux_socket_sendmsg+0x23/0x30\n[37598.994008]  [<ffffffff8153a450>] sock_sendmsg+0xb0/0xe0\n[37598.994008]  [<ffffffff810135d1>] ? __switch_to+0x181/0x4a0\n[37598.994008]  [<ffffffff8153d97d>] sys_sendto+0x12d/0x180\n[37598.994008]  [<ffffffff810dfb64>] ? __audit_syscall_entry+0x94/0xf0\n[37598.994008]  [<ffffffff81020ed1>] ? syscall_trace_enter+0x231/0x240\n[37598.994008]  [<ffffffff8166a7e7>] tracesys+0xdd/0xe2\n[37598.994008] Code: fe 07 00 00 48 c7 c7 04 28 a6 81 89 45 a0 4c 89 4d b8 44 89 5d a8 e8 1b ac b1 ff 44 8b 5d a8 4c 8b 4d b8 8b 45 a0 e9 cf fe ff ff <0f> 0b 66 0f 1f 84 00 00 00 00 00 66 66 66 66 90 55 48 89 e5 48\n[37598.994008] RIP  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325/0x330\n[37598.994008]  RSP <ffff88003670da18>\n[37599.007323] ---[ end trace d69f6a17f8ac8eee ]---\n\nWhile there, also check if path mtu discovery is activated for this\nsocket. The logic was adapted from ip6_append_data when first writing\non the corked socket.\n\nThis bug was introduced with commit\n0c1833797a5a6ec23ea9261d979aa18078720b74 (\"ipv6: fix incorrect ipsec\nfragment\").\n\nv2:\na) Replace IPV6_PMTU_DISC_DO with IPV6_PMTUDISC_PROBE.\nb) Don't pass ipv6_pinfo to ip6_append_data_mtu (suggestion by Gao\n   feng, thanks!).\nc) Change mtu to unsigned int, else we get a warning about\n   non-matching types because of the min()-macro type-check.\n\nAcked-by: Gao feng <gaofeng@cn.fujitsu.com>\nCc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c"
    ]
  },
  "patch_diff": {
    "net/ipv6/ip6_output.c||net/ipv6/ip6_output.c": [
      "File: net/ipv6/ip6_output.c -> net/ipv6/ip6_output.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1093:  return src ? kmemdup(src, (src->hdrlen + 1) * 8, gfp) : NULL;",
      "1094: }",
      "1097:     int *maxfraglen,",
      "1098:     unsigned int fragheaderlen,",
      "1099:     struct sk_buff *skb,",
      "1101: {",
      "1102:  if (!(rt->dst.flags & DST_XFRM_TUNNEL)) {",
      "1103:   if (skb == NULL) {",
      "",
      "[Removed Lines]",
      "1096: static void ip6_append_data_mtu(int *mtu,",
      "1100:     struct rt6_info *rt)",
      "",
      "[Added Lines]",
      "1096: static void ip6_append_data_mtu(unsigned int *mtu,",
      "1100:     struct rt6_info *rt,",
      "1101:     bool pmtuprobe)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1113:   }",
      "1115:          + fragheaderlen - sizeof(struct frag_hdr);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1114:        rt->dst.dev->mtu :",
      "1115:        dst_mtu(rt->dst.path));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1126:  struct ipv6_pinfo *np = inet6_sk(sk);",
      "1127:  struct inet_cork *cork;",
      "1128:  struct sk_buff *skb, *skb_prev = NULL;",
      "1130:  int exthdrlen;",
      "1131:  int dst_exthdrlen;",
      "1132:  int hh_len;",
      "1134:  int copy;",
      "1135:  int err;",
      "1136:  int offset = 0;",
      "",
      "[Removed Lines]",
      "1129:  unsigned int maxfraglen, fragheaderlen;",
      "1133:  int mtu;",
      "",
      "[Added Lines]",
      "1132:  unsigned int maxfraglen, fragheaderlen, mtu;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1288:    if (skb == NULL || skb_prev == NULL)",
      "1289:     ip6_append_data_mtu(&mtu, &maxfraglen,",
      "1292:    skb_prev = skb;",
      "",
      "[Removed Lines]",
      "1290:           fragheaderlen, skb, rt);",
      "",
      "[Added Lines]",
      "1292:           fragheaderlen, skb, rt,",
      "1293:           np->pmtudisc ==",
      "1294:           IPV6_PMTUDISC_PROBE);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4642aabd21d0491a7d9dcbe789bdf93a596f771c",
      "candidate_info": {
        "commit_hash": "4642aabd21d0491a7d9dcbe789bdf93a596f771c",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/4642aabd21d0491a7d9dcbe789bdf93a596f771c",
        "files": [
          "sound/soc/codecs/wm8962.c"
        ],
        "message": "ASoC: wm8962: fix NULL pdata pointer\n\nThere is an error in merge commit 384b834 on conflict resolution which\ncauses the following NULL pdata pointer bug.\n\nwm8962 0-001a: customer id 0 revision D\nUnable to handle kernel NULL pointer dereference at virtual address 00000004\npgd = 80004000\n[00000004] *pgd=00000000\nInternal error: Oops: 5 [#1] SMP ARM\nModules linked in:\nCPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.10.0+ #1\ntask: bf870000 ti: bf874000 task.ti: bf874000\nPC is at wm8962_probe+0x134/0x6c8\nLR is at regmap_unlock_mutex+0x10/0x14\npc : [<80452100>]    lr : [<80304cf4>]    psr: a0000113\nsp : bf875c98  ip : 00000000  fp : bf875cd4\nr10: 00000000  r9 : bfb1830c  r8 : 80779bc4\nr7 : 00000000  r6 : 00000001  r5 : bfbac010  r4 : bfb33e00\nr3 : 80304ce4  r2 : 00000000  r1 : 00000001  r0 : fffffffb\nFlags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment kernel\nControl: 10c53c7d  Table: 1000404a  DAC: 00000017\nProcess swapper/0 (pid: 1, stack limit = 0xbf874238)\nStack: (0xbf875c98 to 0xbf876000)\n...\n\nFix the error by assigning pdata a correct pointer.\n\nSigned-off-by: Shawn Guo <shawn.guo@linaro.org>\nSigned-off-by: Mark Brown <broonie@linaro.org>",
        "before_after_code_files": [
          "sound/soc/codecs/wm8962.c||sound/soc/codecs/wm8962.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sound/soc/codecs/wm8962.c||sound/soc/codecs/wm8962.c": [
          "File: sound/soc/codecs/wm8962.c -> sound/soc/codecs/wm8962.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3377: {",
          "3378:  int ret;",
          "3379:  struct wm8962_priv *wm8962 = snd_soc_codec_get_drvdata(codec);",
          "3381:  int i, trigger, irq_pol;",
          "3382:  bool dmicclk, dmicdat;",
          "",
          "[Removed Lines]",
          "3380:  struct wm8962_pdata *pdata = dev_get_platdata(codec->dev);",
          "",
          "[Added Lines]",
          "3380:  struct wm8962_pdata *pdata = &wm8962->pdata;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5446429630257f4723829409337a26c076907d5d",
      "candidate_info": {
        "commit_hash": "5446429630257f4723829409337a26c076907d5d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/5446429630257f4723829409337a26c076907d5d",
        "files": [
          "fs/ceph/super.c"
        ],
        "message": "ceph: avoid accessing invalid memory\n\nwhen mounting ceph with a dev name that starts with a slash, ceph\nwould attempt to access the character before that slash. Since we\ndon't actually own that byte of memory, we would trigger an\ninvalid access:\n\n[   43.499934] BUG: unable to handle kernel paging request at ffff880fa3a97fff\n[   43.500984] IP: [<ffffffff818f3884>] parse_mount_options+0x1a4/0x300\n[   43.501491] PGD 743b067 PUD 10283c4067 PMD 10282a6067 PTE 8000000fa3a97060\n[   43.502301] Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC\n[   43.503006] Dumping ftrace buffer:\n[   43.503596]    (ftrace buffer empty)\n[   43.504046] CPU: 0 PID: 10879 Comm: mount Tainted: G        W    3.10.0-sasha #1129\n[   43.504851] task: ffff880fa625b000 ti: ffff880fa3412000 task.ti: ffff880fa3412000\n[   43.505608] RIP: 0010:[<ffffffff818f3884>]  [<ffffffff818f3884>] parse_mount_options$\n[   43.506552] RSP: 0018:ffff880fa3413d08  EFLAGS: 00010286\n[   43.507133] RAX: ffff880fa3a98000 RBX: ffff880fa3a98000 RCX: 0000000000000000\n[   43.507893] RDX: ffff880fa3a98001 RSI: 000000000000002f RDI: ffff880fa3a98000\n[   43.508610] RBP: ffff880fa3413d58 R08: 0000000000001f99 R09: ffff880fa3fe64c0\n[   43.509426] R10: ffff880fa3413d98 R11: ffff880fa38710d8 R12: ffff880fa3413da0\n[   43.509792] R13: ffff880fa3a97fff R14: 0000000000000000 R15: ffff880fa3413d90\n[   43.509792] FS:  00007fa9c48757e0(0000) GS:ffff880fd2600000(0000) knlGS:000000000000$\n[   43.509792] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[   43.509792] CR2: ffff880fa3a97fff CR3: 0000000fa3bb9000 CR4: 00000000000006b0\n[   43.509792] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   43.509792] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n[   43.509792] Stack:\n[   43.509792]  0000e5180000000e ffffffff85ca1900 ffff880fa38710d8 ffff880fa3413d98\n[   43.509792]  0000000000000120 0000000000000000 ffff880fa3a98000 0000000000000000\n[   43.509792]  ffffffff85cf32a0 0000000000000000 ffff880fa3413dc8 ffffffff818f3c72\n[   43.509792] Call Trace:\n[   43.509792]  [<ffffffff818f3c72>] ceph_mount+0xa2/0x390\n[   43.509792]  [<ffffffff81226314>] ? pcpu_alloc+0x334/0x3c0\n[   43.509792]  [<ffffffff81282f8d>] mount_fs+0x8d/0x1a0\n[   43.509792]  [<ffffffff812263d0>] ? __alloc_percpu+0x10/0x20\n[   43.509792]  [<ffffffff8129f799>] vfs_kern_mount+0x79/0x100\n[   43.509792]  [<ffffffff812a224d>] do_new_mount+0xcd/0x1c0\n[   43.509792]  [<ffffffff812a2e8d>] do_mount+0x15d/0x210\n[   43.509792]  [<ffffffff81220e55>] ? strndup_user+0x45/0x60\n[   43.509792]  [<ffffffff812a2fdd>] SyS_mount+0x9d/0xe0\n[   43.509792]  [<ffffffff83fd816c>] tracesys+0xdd/0xe2\n[   43.509792] Code: 4c 8b 5d c0 74 0a 48 8d 50 01 49 89 14 24 eb 17 31 c0 48 83 c9 ff $\n[   43.509792] RIP  [<ffffffff818f3884>] parse_mount_options+0x1a4/0x300\n[   43.509792]  RSP <ffff880fa3413d08>\n[   43.509792] CR2: ffff880fa3a97fff\n[   43.509792] ---[ end trace 22469cd81e93af51 ]---\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com>\nReviewed-by: Sage Weil <sage@inktan.com>",
        "before_after_code_files": [
          "fs/ceph/super.c||fs/ceph/super.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/ceph/super.c||fs/ceph/super.c": [
          "File: fs/ceph/super.c -> fs/ceph/super.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "357:  }",
          "358:  err = -EINVAL;",
          "361:   pr_err(\"device name is missing path (no : separator in %s)\\n\",",
          "362:     dev_name);",
          "363:   goto out;",
          "",
          "[Removed Lines]",
          "360:  if (*dev_name_end != ':') {",
          "",
          "[Added Lines]",
          "360:  if (dev_name_end < dev_name || *dev_name_end != ':') {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "384816051ca9125cd54750e59c780c2a2655fa4f",
      "candidate_info": {
        "commit_hash": "384816051ca9125cd54750e59c780c2a2655fa4f",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/384816051ca9125cd54750e59c780c2a2655fa4f",
        "files": [
          "net/sunrpc/clnt.c",
          "net/sunrpc/rpc_pipe.c"
        ],
        "message": "SUNRPC: fix races on PipeFS MOUNT notifications\n\nBelow are races, when RPC client can be created without PiepFS dentries\n\nCPU#0\t\t\t\t\tCPU#1\n-----------------------------\t\t-----------------------------\nrpc_new_client\t\t\t\trpc_fill_super\nrpc_setup_pipedir\nmutex_lock(&sn->pipefs_sb_lock)\nrpc_get_sb_net == NULL\n(no per-net PipeFS superblock)\n\t\t\t\t\tsn->pipefs_sb = sb;\n\t\t\t\t\tnotifier_call_chain(MOUNT)\n\t\t\t\t\t(client is not in the list)\nrpc_register_client\n(client without pipes dentries)\n\nTo fix this patch:\n1) makes PipeFS mount notification call with pipefs_sb_lock being held.\n2) releases pipefs_sb_lock on new SUNRPC client creation only after\nregistration.\n\nSigned-off-by: Stanislav Kinsbursky <skinsbursky@parallels.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>",
        "before_after_code_files": [
          "net/sunrpc/clnt.c||net/sunrpc/clnt.c",
          "net/sunrpc/rpc_pipe.c||net/sunrpc/rpc_pipe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "net/sunrpc/clnt.c||net/sunrpc/clnt.c": [
          "File: net/sunrpc/clnt.c -> net/sunrpc/clnt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "157: }",
          "159: static int",
          "161: {",
          "164:  struct dentry *dentry;",
          "166:  clnt->cl_dentry = NULL;",
          "167:  if (dir_name == NULL)",
          "168:   return 0;",
          "172:  dentry = rpc_setup_pipedir_sb(pipefs_sb, clnt, dir_name);",
          "174:  if (IS_ERR(dentry))",
          "175:   return PTR_ERR(dentry);",
          "176:  clnt->cl_dentry = dentry;",
          "",
          "[Removed Lines]",
          "160: rpc_setup_pipedir(struct rpc_clnt *clnt, const char *dir_name)",
          "162:  struct net *net = rpc_net_ns(clnt);",
          "163:  struct super_block *pipefs_sb;",
          "169:  pipefs_sb = rpc_get_sb_net(net);",
          "170:  if (!pipefs_sb)",
          "171:   return 0;",
          "173:  rpc_put_sb_net(net);",
          "",
          "[Added Lines]",
          "160: rpc_setup_pipedir(struct rpc_clnt *clnt, const char *dir_name,",
          "161:     struct super_block *pipefs_sb)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "296:  struct rpc_clnt  *clnt = NULL;",
          "297:  struct rpc_auth  *auth;",
          "298:  int err;",
          "301:  dprintk(\"RPC:       creating %s client for %s (xprt %p)\\n\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "294:  struct super_block *pipefs_sb;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "355:  atomic_set(&clnt->cl_count, 1);",
          "361:  auth = rpcauth_create(args->authflavor, clnt);",
          "362:  if (IS_ERR(auth)) {",
          "",
          "[Removed Lines]",
          "357:  err = rpc_setup_pipedir(clnt, program->pipe_dir_name);",
          "358:  if (err < 0)",
          "359:   goto out_no_path;",
          "",
          "[Added Lines]",
          "353:  pipefs_sb = rpc_get_sb_net(rpc_net_ns(clnt));",
          "354:  if (pipefs_sb) {",
          "355:   err = rpc_setup_pipedir(clnt, program->pipe_dir_name, pipefs_sb);",
          "356:   if (err)",
          "357:    goto out_no_path;",
          "358:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "370:  rpc_clnt_set_nodename(clnt, utsname()->nodename);",
          "371:  rpc_register_client(clnt);",
          "372:  return clnt;",
          "374: out_no_auth:",
          "376: out_no_path:",
          "377:  kfree(clnt->cl_principal);",
          "378: out_no_principal:",
          "379:  rpc_free_iostats(clnt->cl_metrics);",
          "",
          "[Removed Lines]",
          "375:  rpc_clnt_remove_pipedir(clnt);",
          "",
          "[Added Lines]",
          "371:  if (pipefs_sb)",
          "372:   rpc_put_sb_net(rpc_net_ns(clnt));",
          "376:  if (pipefs_sb)",
          "377:   __rpc_clnt_remove_pipedir(clnt);",
          "379:  if (pipefs_sb)",
          "380:   rpc_put_sb_net(rpc_net_ns(clnt));",
          "",
          "---------------"
        ],
        "net/sunrpc/rpc_pipe.c||net/sunrpc/rpc_pipe.c": [
          "File: net/sunrpc/rpc_pipe.c -> net/sunrpc/rpc_pipe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1127:   return -ENOMEM;",
          "1128:  dprintk(\"RPC:       sending pipefs MOUNT notification for net %p%s\\n\",",
          "1129:   net, NET_NAME(net));",
          "1130:  sn->pipefs_sb = sb;",
          "1131:  err = blocking_notifier_call_chain(&rpc_pipefs_notifier_list,",
          "1132:         RPC_PIPEFS_MOUNT,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1130:  mutex_lock(&sn->pipefs_sb_lock);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1134:  if (err)",
          "1135:   goto err_depopulate;",
          "1136:  sb->s_fs_info = get_net(net);",
          "1137:  return 0;",
          "1139: err_depopulate:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1138:  mutex_unlock(&sn->pipefs_sb_lock);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1142:         sb);",
          "1143:  sn->pipefs_sb = NULL;",
          "1144:  __rpc_depopulate(root, files, RPCAUTH_lockd, RPCAUTH_RootEOF);",
          "1145:  return err;",
          "1146: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1147:  mutex_unlock(&sn->pipefs_sb_lock);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8965779d2c0e6ab246c82a405236b1fb2adae6b2",
      "candidate_info": {
        "commit_hash": "8965779d2c0e6ab246c82a405236b1fb2adae6b2",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/8965779d2c0e6ab246c82a405236b1fb2adae6b2",
        "files": [
          "include/net/addrconf.h",
          "net/ipv6/addrconf.c",
          "net/ipv6/mcast.c"
        ],
        "message": "ipv6,mcast: always hold idev->lock before mca_lock\n\ndingtianhong reported the following deadlock detected by lockdep:\n\n ======================================================\n [ INFO: possible circular locking dependency detected ]\n 3.4.24.05-0.1-default #1 Not tainted\n -------------------------------------------------------\n ksoftirqd/0/3 is trying to acquire lock:\n  (&ndev->lock){+.+...}, at: [<ffffffff8147f804>] ipv6_get_lladdr+0x74/0x120\n\n but task is already holding lock:\n  (&mc->mca_lock){+.+...}, at: [<ffffffff8149d130>] mld_send_report+0x40/0x150\n\n which lock already depends on the new lock.\n\n the existing dependency chain (in reverse order) is:\n\n -> #1 (&mc->mca_lock){+.+...}:\n        [<ffffffff810a8027>] validate_chain+0x637/0x730\n        [<ffffffff810a8417>] __lock_acquire+0x2f7/0x500\n        [<ffffffff810a8734>] lock_acquire+0x114/0x150\n        [<ffffffff814f691a>] rt_spin_lock+0x4a/0x60\n        [<ffffffff8149e4bb>] igmp6_group_added+0x3b/0x120\n        [<ffffffff8149e5d8>] ipv6_mc_up+0x38/0x60\n        [<ffffffff81480a4d>] ipv6_find_idev+0x3d/0x80\n        [<ffffffff81483175>] addrconf_notify+0x3d5/0x4b0\n        [<ffffffff814fae3f>] notifier_call_chain+0x3f/0x80\n        [<ffffffff81073471>] raw_notifier_call_chain+0x11/0x20\n        [<ffffffff813d8722>] call_netdevice_notifiers+0x32/0x60\n        [<ffffffff813d92d4>] __dev_notify_flags+0x34/0x80\n        [<ffffffff813d9360>] dev_change_flags+0x40/0x70\n        [<ffffffff813ea627>] do_setlink+0x237/0x8a0\n        [<ffffffff813ebb6c>] rtnl_newlink+0x3ec/0x600\n        [<ffffffff813eb4d0>] rtnetlink_rcv_msg+0x160/0x310\n        [<ffffffff814040b9>] netlink_rcv_skb+0x89/0xb0\n        [<ffffffff813eb357>] rtnetlink_rcv+0x27/0x40\n        [<ffffffff81403e20>] netlink_unicast+0x140/0x180\n        [<ffffffff81404a9e>] netlink_sendmsg+0x33e/0x380\n        [<ffffffff813c4252>] sock_sendmsg+0x112/0x130\n        [<ffffffff813c537e>] __sys_sendmsg+0x44e/0x460\n        [<ffffffff813c5544>] sys_sendmsg+0x44/0x70\n        [<ffffffff814feab9>] system_call_fastpath+0x16/0x1b\n\n -> #0 (&ndev->lock){+.+...}:\n        [<ffffffff810a798e>] check_prev_add+0x3de/0x440\n        [<ffffffff810a8027>] validate_chain+0x637/0x730\n        [<ffffffff810a8417>] __lock_acquire+0x2f7/0x500\n        [<ffffffff810a8734>] lock_acquire+0x114/0x150\n        [<ffffffff814f6c82>] rt_read_lock+0x42/0x60\n        [<ffffffff8147f804>] ipv6_get_lladdr+0x74/0x120\n        [<ffffffff8149b036>] mld_newpack+0xb6/0x160\n        [<ffffffff8149b18b>] add_grhead+0xab/0xc0\n        [<ffffffff8149d03b>] add_grec+0x3ab/0x460\n        [<ffffffff8149d14a>] mld_send_report+0x5a/0x150\n        [<ffffffff8149f99e>] igmp6_timer_handler+0x4e/0xb0\n        [<ffffffff8105705a>] call_timer_fn+0xca/0x1d0\n        [<ffffffff81057b9f>] run_timer_softirq+0x1df/0x2e0\n        [<ffffffff8104e8c7>] handle_pending_softirqs+0xf7/0x1f0\n        [<ffffffff8104ea3b>] __do_softirq_common+0x7b/0xf0\n        [<ffffffff8104f07f>] __thread_do_softirq+0x1af/0x210\n        [<ffffffff8104f1c1>] run_ksoftirqd+0xe1/0x1f0\n        [<ffffffff8106c7de>] kthread+0xae/0xc0\n        [<ffffffff814fff74>] kernel_thread_helper+0x4/0x10\n\nactually we can just hold idev->lock before taking pmc->mca_lock,\nand avoid taking idev->lock again when iterating idev->addr_list,\nsince the upper callers of mld_newpack() already take\nread_lock_bh(&idev->lock).\n\nReported-by: dingtianhong <dingtianhong@huawei.com>\nCc: dingtianhong <dingtianhong@huawei.com>\nCc: Hideaki YOSHIFUJI <yoshfuji@linux-ipv6.org>\nCc: David S. Miller <davem@davemloft.net>\nCc: Hannes Frederic Sowa <hannes@stressinduktion.org>\nTested-by: Ding Tianhong <dingtianhong@huawei.com>\nTested-by: Chen Weilong <chenweilong@huawei.com>\nSigned-off-by: Cong Wang <amwang@redhat.com>\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "include/net/addrconf.h||include/net/addrconf.h",
          "net/ipv6/addrconf.c||net/ipv6/addrconf.c",
          "net/ipv6/mcast.c||net/ipv6/mcast.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/net/addrconf.h||include/net/addrconf.h": [
          "File: include/net/addrconf.h -> include/net/addrconf.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:             const struct in6_addr *daddr,",
          "87:             unsigned int srcprefs,",
          "88:             struct in6_addr *saddr);",
          "89: extern int   ipv6_get_lladdr(struct net_device *dev,",
          "90:       struct in6_addr *addr,",
          "91:       unsigned char banned_flags);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89: extern int   __ipv6_get_lladdr(struct inet6_dev *idev,",
          "90:         struct in6_addr *addr,",
          "91:         unsigned char banned_flags);",
          "",
          "---------------"
        ],
        "net/ipv6/addrconf.c||net/ipv6/addrconf.c": [
          "File: net/ipv6/addrconf.c -> net/ipv6/addrconf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1444: }",
          "1445: EXPORT_SYMBOL(ipv6_dev_get_saddr);",
          "1449: {",
          "1450:  struct inet6_ifaddr *ifp;",
          "1451:  int err = -EADDRNOTAVAIL;",
          "",
          "[Removed Lines]",
          "1447: static int __ipv6_get_lladdr(struct inet6_dev *idev, struct in6_addr *addr,",
          "1448:         unsigned char banned_flags)",
          "",
          "[Added Lines]",
          "1447: int __ipv6_get_lladdr(struct inet6_dev *idev, struct in6_addr *addr,",
          "1448:         unsigned char banned_flags)",
          "",
          "---------------"
        ],
        "net/ipv6/mcast.c||net/ipv6/mcast.c": [
          "File: net/ipv6/mcast.c -> net/ipv6/mcast.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1351:  hdr->daddr = *daddr;",
          "1352: }",
          "1355: {",
          "1356:  struct net *net = dev_net(dev);",
          "1357:  struct sock *sk = net->ipv6.igmp_sk;",
          "1358:  struct sk_buff *skb;",
          "",
          "[Removed Lines]",
          "1354: static struct sk_buff *mld_newpack(struct net_device *dev, int size)",
          "",
          "[Added Lines]",
          "1354: static struct sk_buff *mld_newpack(struct inet6_dev *idev, int size)",
          "1356:  struct net_device *dev = idev->dev;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1378:  skb_reserve(skb, hlen);",
          "",
          "[Removed Lines]",
          "1380:  if (ipv6_get_lladdr(dev, &addr_buf, IFA_F_TENTATIVE)) {",
          "",
          "[Added Lines]",
          "1381:  if (__ipv6_get_lladdr(idev, &addr_buf, IFA_F_TENTATIVE)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1474:  struct mld2_grec *pgr;",
          "1476:  if (!skb)",
          "1478:  if (!skb)",
          "1479:   return NULL;",
          "1480:  pgr = (struct mld2_grec *)skb_put(skb, sizeof(struct mld2_grec));",
          "",
          "[Removed Lines]",
          "1477:   skb = mld_newpack(dev, dev->mtu);",
          "",
          "[Added Lines]",
          "1478:   skb = mld_newpack(pmc->idev, dev->mtu);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1494: static struct sk_buff *add_grec(struct sk_buff *skb, struct ifmcaddr6 *pmc,",
          "1495:  int type, int gdeleted, int sdeleted)",
          "1496: {",
          "1498:  struct mld2_report *pmr;",
          "1499:  struct mld2_grec *pgr = NULL;",
          "1500:  struct ip6_sf_list *psf, *psf_next, *psf_prev, **psf_list;",
          "",
          "[Removed Lines]",
          "1497:  struct net_device *dev = pmc->idev->dev;",
          "",
          "[Added Lines]",
          "1498:  struct inet6_dev *idev = pmc->idev;",
          "1499:  struct net_device *dev = idev->dev;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1523:       AVAILABLE(skb) < grec_size(pmc, type, gdeleted, sdeleted)) {",
          "1524:    if (skb)",
          "1525:     mld_sendpack(skb);",
          "1527:   }",
          "1528:  }",
          "1529:  first = 1;",
          "",
          "[Removed Lines]",
          "1526:    skb = mld_newpack(dev, dev->mtu);",
          "",
          "[Added Lines]",
          "1528:    skb = mld_newpack(idev, dev->mtu);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1550:     pgr->grec_nsrcs = htons(scount);",
          "1551:    if (skb)",
          "1552:     mld_sendpack(skb);",
          "1554:    first = 1;",
          "1555:    scount = 0;",
          "1556:   }",
          "",
          "[Removed Lines]",
          "1553:    skb = mld_newpack(dev, dev->mtu);",
          "",
          "[Added Lines]",
          "1555:    skb = mld_newpack(idev, dev->mtu);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1605:  struct sk_buff *skb = NULL;",
          "1606:  int type;",
          "1608:  if (!pmc) {",
          "1610:   for (pmc=idev->mc_list; pmc; pmc=pmc->next) {",
          "1611:    if (pmc->mca_flags & MAF_NOREPORT)",
          "1612:     continue;",
          "",
          "[Removed Lines]",
          "1609:   read_lock_bh(&idev->lock);",
          "",
          "[Added Lines]",
          "1610:  read_lock_bh(&idev->lock);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1618:    skb = add_grec(skb, pmc, type, 0, 0);",
          "1619:    spin_unlock_bh(&pmc->mca_lock);",
          "1620:   }",
          "1622:  } else {",
          "1623:   spin_lock_bh(&pmc->mca_lock);",
          "1624:   if (pmc->mca_sfcount[MCAST_EXCLUDE])",
          "",
          "[Removed Lines]",
          "1621:   read_unlock_bh(&idev->lock);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1628:   skb = add_grec(skb, pmc, type, 0, 0);",
          "1629:   spin_unlock_bh(&pmc->mca_lock);",
          "1630:  }",
          "1631:  if (skb)",
          "1632:   mld_sendpack(skb);",
          "1633: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1632:  read_unlock_bh(&idev->lock);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "adb6fa7ffe9031857ec14b8aab75c9ab65556cbc",
      "candidate_info": {
        "commit_hash": "adb6fa7ffe9031857ec14b8aab75c9ab65556cbc",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/adb6fa7ffe9031857ec14b8aab75c9ab65556cbc",
        "files": [
          "net/sunrpc/clnt.c",
          "net/sunrpc/rpc_pipe.c"
        ],
        "message": "SUNRPC: fix races on PipeFS UMOUNT notifications\n\nCPU#0                                   CPU#1\n-----------------------------           -----------------------------\nrpc_kill_sb\nsn->pipefs_sb = NULL                    rpc_release_client\n(UMOUNT_EVENT)                          rpc_free_auth\nrpc_pipefs_event\nrpc_get_client_for_event\n!atomic_inc_not_zero(cl_count)\n<skip the client>\n                                        atomic_inc(cl_count)\n                                        rpc_free_client\n                                        rpc_clnt_remove_pipedir\n                                        <skip client dir removing>\n\nTo fix this, this patch does the following:\n\n1) Calls RPC_PIPEFS_UMOUNT notification with sn->pipefs_sb_lock being held.\n2) Removes SUNRPC client from the list AFTER pipes destroying.\n3) Doesn't hold RPC client on notification: if client in the list, then it\ncan't be destroyed while sn->pipefs_sb_lock in hold by notification caller.\n\nSigned-off-by: Stanislav Kinsbursky <skinsbursky@parallels.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>",
        "before_after_code_files": [
          "net/sunrpc/clnt.c||net/sunrpc/clnt.c",
          "net/sunrpc/rpc_pipe.c||net/sunrpc/rpc_pipe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "net/sunrpc/clnt.c||net/sunrpc/clnt.c": [
          "File: net/sunrpc/clnt.c -> net/sunrpc/clnt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "236:    continue;",
          "237:   if (rpc_clnt_skip_event(clnt, event))",
          "238:    continue;",
          "241:   spin_unlock(&sn->rpc_client_lock);",
          "242:   return clnt;",
          "243:  }",
          "",
          "[Removed Lines]",
          "239:   if (atomic_inc_not_zero(&clnt->cl_count) == 0)",
          "240:    continue;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "255:  while ((clnt = rpc_get_client_for_event(sb->s_fs_info, event))) {",
          "256:   error = __rpc_pipefs_event(clnt, event, sb);",
          "258:   if (error)",
          "259:    break;",
          "260:  }",
          "",
          "[Removed Lines]",
          "257:   rpc_release_client(clnt);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "641:    rcu_dereference(clnt->cl_xprt)->servername);",
          "642:  if (clnt->cl_parent != clnt)",
          "643:   rpc_release_client(clnt->cl_parent);",
          "645:  rpc_clnt_remove_pipedir(clnt);",
          "646:  rpc_free_iostats(clnt->cl_metrics);",
          "647:  kfree(clnt->cl_principal);",
          "648:  clnt->cl_metrics = NULL;",
          "",
          "[Removed Lines]",
          "644:  rpc_unregister_client(clnt);",
          "",
          "[Added Lines]",
          "642:  rpc_unregister_client(clnt);",
          "",
          "---------------"
        ],
        "net/sunrpc/rpc_pipe.c||net/sunrpc/rpc_pipe.c": [
          "File: net/sunrpc/rpc_pipe.c -> net/sunrpc/rpc_pipe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1166:   goto out;",
          "1167:  }",
          "1168:  sn->pipefs_sb = NULL;",
          "1170:  dprintk(\"RPC:       sending pipefs UMOUNT notification for net %p%s\\n\",",
          "1171:   net, NET_NAME(net));",
          "1172:  blocking_notifier_call_chain(&rpc_pipefs_notifier_list,",
          "1173:         RPC_PIPEFS_UMOUNT,",
          "1174:         sb);",
          "1175:  put_net(net);",
          "1176: out:",
          "1177:  kill_litter_super(sb);",
          "",
          "[Removed Lines]",
          "1169:  mutex_unlock(&sn->pipefs_sb_lock);",
          "",
          "[Added Lines]",
          "1174:  mutex_unlock(&sn->pipefs_sb_lock);",
          "",
          "---------------"
        ]
      }
    }
  ]
}