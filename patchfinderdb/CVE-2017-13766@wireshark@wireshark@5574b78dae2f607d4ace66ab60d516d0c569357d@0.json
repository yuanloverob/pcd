{
  "cve_id": "CVE-2017-13766",
  "cve_desc": "In Wireshark 2.4.0 and 2.2.0 to 2.2.8, the Profinet I/O dissector could crash with an out-of-bounds write. This was addressed in plugins/profinet/packet-dcerpc-pn-io.c by adding string validation.",
  "repo": "wireshark/wireshark",
  "patch_hash": "5574b78dae2f607d4ace66ab60d516d0c569357d",
  "patch_info": {
    "commit_hash": "5574b78dae2f607d4ace66ab60d516d0c569357d",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/5574b78dae2f607d4ace66ab60d516d0c569357d",
    "files": [
      "extcap/androiddump.c",
      "plugins/profinet/packet-dcerpc-pn-io.c"
    ],
    "message": "Fix potential oob write crashes\n\nBug: 13847\nChange-Id: I3a706db25204fe4c1fd1b7be3b17b8c55365dccf\nReviewed-on: https://code.wireshark.org/review/23169\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "extcap/androiddump.c||extcap/androiddump.c",
      "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c"
    ]
  },
  "patch_diff": {
    "extcap/androiddump.c||extcap/androiddump.c": [
      "File: extcap/androiddump.c -> extcap/androiddump.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1102:                 response[data_length] = '\\0';",
      "1104:                 data_str = strchr(response, '\\n');",
      "1106:                     g_debug(\"Android Bluetooth application PID for %s is %s\", serial_number, pid);",
      "1108:                     result = g_snprintf(check_port_buf, sizeof(check_port_buf), adb_check_port_templace, pid);",
      "",
      "[Removed Lines]",
      "1105:                 if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1) {",
      "",
      "[Added Lines]",
      "1105:                 if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1123:                         response[data_length] = '\\0';",
      "1125:                         data_str = strchr(response, '\\n');",
      "1127:                             g_debug(\"Bluedroid External Parser Port for %s is %s\", serial_number, pid + 9);",
      "1128:                         } else {",
      "1129:                             disable_interface = 1;",
      "",
      "[Removed Lines]",
      "1126:                         if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1 && strcmp(pid + 9, \"10EA\") == 0) {",
      "",
      "[Added Lines]",
      "1126:                         if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, \"10EA\") == 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1175:                 else",
      "1176:                     data_str = strchr(response, '\\n');",
      "1179:                     g_debug(\"Android Bluetooth application PID for %s is %s\", serial_number, pid);",
      "1181:                     result = g_snprintf(check_port_buf, sizeof(check_port_buf), adb_check_port_templace, pid);",
      "",
      "[Removed Lines]",
      "1178:                 if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1) {",
      "",
      "[Added Lines]",
      "1178:                 if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1196:                         response[data_length] = '\\0';",
      "1198:                         data_str = strchr(response, '\\n');",
      "1200:                             g_debug(\"Btsnoop Net Port for %s is %s\", serial_number, pid + 9);",
      "1201:                         } else {",
      "1202:                             disable_interface = 1;",
      "",
      "[Removed Lines]",
      "1199:                         if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1 && strcmp(pid + 9, \"22A8\") == 0) {",
      "",
      "[Added Lines]",
      "1199:                         if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, \"22A8\") == 0) {",
      "",
      "---------------"
    ],
    "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c": [
      "File: plugins/profinet/packet-dcerpc-pn-io.c -> plugins/profinet/packet-dcerpc-pn-io.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "9457:                             if((strstr(puffer, vendorIdStr)) != NULL) {",
      "9458:                                 memset (convertStr, 0, sizeof(*convertStr));",
      "9459:                                 pch = strstr(puffer, vendorIdStr);",
      "9461:                                     read_vendor_id = (guint32) strtoul (convertStr, NULL, 0);",
      "9463:                                     if(read_vendor_id == searchVendorID) {",
      "",
      "[Removed Lines]",
      "9460:                                 if (pch!= NULL && sscanf(pch, \"VendorID=\\\"%[^\\\"]\", convertStr) == 1) {",
      "",
      "[Added Lines]",
      "9460:                                 if (pch!= NULL && sscanf(pch, \"VendorID=\\\"%199[^\\\"]\", convertStr) == 1) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "9470:                             if((strstr(puffer, deviceIdStr)) != NULL) {",
      "9471:                                 memset(convertStr, 0, sizeof(*convertStr));",
      "9472:                                 pch = strstr(puffer, deviceIdStr);",
      "9474:                                     read_device_id = (guint32)strtoul(convertStr, NULL, 0);",
      "9476:                                     if(read_device_id == searchDeviceID) {",
      "",
      "[Removed Lines]",
      "9473:                                 if (pch != NULL && sscanf(pch, \"DeviceID=\\\"%[^\\\"]\", convertStr) == 1) {",
      "",
      "[Added Lines]",
      "9473:                                 if (pch != NULL && sscanf(pch, \"DeviceID=\\\"%199[^\\\"]\", convertStr) == 1) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "9604:                         memset (convertStr, 0, sizeof(*convertStr));",
      "9606:                         pch = strstr(temp, fParameterIndexStr);",
      "9608:                             io_data_object->fParameterIndexNr = (guint32)strtoul(convertStr, NULL, 0);",
      "9609:                         }",
      "",
      "[Removed Lines]",
      "9607:                         if (pch != NULL && sscanf(pch, \"Index=\\\"%[^\\\"]\", convertStr) == 1) {",
      "",
      "[Added Lines]",
      "9607:                         if (pch != NULL && sscanf(pch, \"Index=\\\"%199[^\\\"]\", convertStr) == 1) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "9652:                                     if((strstr(temp, subModuleStr)) != NULL) {",
      "9653:                                         memset (convertStr, 0, sizeof(*convertStr));",
      "9654:                                         pch = strstr(temp, subModuleStr);",
      "",
      "[Removed Lines]",
      "9655:                                         if (pch != NULL && sscanf(pch, \"SubmoduleIdentNumber=\\\"%[^\\\"]\", convertStr) == 1) {",
      "",
      "[Added Lines]",
      "9655:                                         if (pch != NULL && sscanf(pch, \"SubmoduleIdentNumber=\\\"%199[^\\\"]\", convertStr) == 1) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1c95d45a4063cd1120121a5cb7f63027152fdd64",
      "candidate_info": {
        "commit_hash": "1c95d45a4063cd1120121a5cb7f63027152fdd64",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1c95d45a4063cd1120121a5cb7f63027152fdd64",
        "files": [
          "extcap/androiddump.c",
          "plugins/profinet/packet-dcerpc-pn-io.c"
        ],
        "message": "Fix potential oob write crashes\n\nBug: 13847\nChange-Id: I3a706db25204fe4c1fd1b7be3b17b8c55365dccf\nReviewed-on: https://code.wireshark.org/review/23169\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 5574b78dae2f607d4ace66ab60d516d0c569357d)\nReviewed-on: https://code.wireshark.org/review/23170",
        "before_after_code_files": [
          "extcap/androiddump.c||extcap/androiddump.c",
          "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "extcap/androiddump.c||extcap/androiddump.c",
            "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c"
          ],
          "candidate": [
            "extcap/androiddump.c||extcap/androiddump.c",
            "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c"
          ]
        }
      },
      "candidate_diff": {
        "extcap/androiddump.c||extcap/androiddump.c": [
          "File: extcap/androiddump.c -> extcap/androiddump.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1006:                 response[data_length] = '\\0';",
          "1008:                 data_str = strchr(response, '\\n');",
          "1010:                     g_debug(\"Android Bluetooth application PID for %s is %s\", serial_number, pid);",
          "1012:                     sock = adb_connect(adb_server_ip, adb_server_tcp_port);",
          "",
          "[Removed Lines]",
          "1009:                 if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1) {",
          "",
          "[Added Lines]",
          "1009:                 if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1043:                         response[data_length] = '\\0';",
          "1045:                         data_str = strchr(response, '\\n');",
          "1047:                             g_debug(\"Bluedroid External Parser Port for %s is %s\", serial_number, pid + 9);",
          "1048:                         } else {",
          "1049:                             disable_interface = 1;",
          "",
          "[Removed Lines]",
          "1046:                         if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1 && strcmp(pid + 9, \"10EA\") == 0) {",
          "",
          "[Added Lines]",
          "1046:                         if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, \"10EA\") == 0) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1104:                 else",
          "1105:                     data_str = strchr(response, '\\n');",
          "1108:                     g_debug(\"Android Bluetooth application PID for %s is %s\", serial_number, pid);",
          "1110:                     sock = adb_connect(adb_server_ip, adb_server_tcp_port);",
          "",
          "[Removed Lines]",
          "1107:                 if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1) {",
          "",
          "[Added Lines]",
          "1107:                 if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1141:                         response[data_length] = '\\0';",
          "1143:                         data_str = strchr(response, '\\n');",
          "1145:                             g_debug(\"Btsnoop Net Port for %s is %s\", serial_number, pid + 9);",
          "1146:                         } else {",
          "1147:                             disable_interface = 1;",
          "",
          "[Removed Lines]",
          "1144:                         if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1 && strcmp(pid + 9, \"22A8\") == 0) {",
          "",
          "[Added Lines]",
          "1144:                         if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, \"22A8\") == 0) {",
          "",
          "---------------"
        ],
        "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c": [
          "File: plugins/profinet/packet-dcerpc-pn-io.c -> plugins/profinet/packet-dcerpc-pn-io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9457:                             if((strstr(puffer, vendorIdStr)) != NULL) {",
          "9458:                                 memset (convertStr, 0, sizeof(*convertStr));",
          "9459:                                 pch = strstr(puffer, vendorIdStr);",
          "9461:                                     read_vendor_id = (guint32) strtoul (convertStr, NULL, 0);",
          "9463:                                     if(read_vendor_id == searchVendorID) {",
          "",
          "[Removed Lines]",
          "9460:                                 if (pch!= NULL && sscanf(pch, \"VendorID=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "9460:                                 if (pch!= NULL && sscanf(pch, \"VendorID=\\\"%199[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9470:                             if((strstr(puffer, deviceIdStr)) != NULL) {",
          "9471:                                 memset(convertStr, 0, sizeof(*convertStr));",
          "9472:                                 pch = strstr(puffer, deviceIdStr);",
          "9474:                                     read_device_id = (guint32)strtoul(convertStr, NULL, 0);",
          "9476:                                     if(read_device_id == searchDeviceID) {",
          "",
          "[Removed Lines]",
          "9473:                                 if (pch != NULL && sscanf(pch, \"DeviceID=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "9473:                                 if (pch != NULL && sscanf(pch, \"DeviceID=\\\"%199[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "9604:                         memset (convertStr, 0, sizeof(*convertStr));",
          "9606:                         pch = strstr(temp, fParameterIndexStr);",
          "9608:                             io_data_object->fParameterIndexNr = (guint32)strtoul(convertStr, NULL, 0);",
          "9609:                         }",
          "",
          "[Removed Lines]",
          "9607:                         if (pch != NULL && sscanf(pch, \"Index=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "9607:                         if (pch != NULL && sscanf(pch, \"Index=\\\"%199[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "9652:                                     if((strstr(temp, subModuleStr)) != NULL) {",
          "9653:                                         memset (convertStr, 0, sizeof(*convertStr));",
          "9654:                                         pch = strstr(temp, subModuleStr);",
          "",
          "[Removed Lines]",
          "9655:                                         if (pch != NULL && sscanf(pch, \"SubmoduleIdentNumber=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "9655:                                         if (pch != NULL && sscanf(pch, \"SubmoduleIdentNumber=\\\"%199[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2096bc1e5078732543e0a3ee115a2ce520a72bbc",
      "candidate_info": {
        "commit_hash": "2096bc1e5078732543e0a3ee115a2ce520a72bbc",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/2096bc1e5078732543e0a3ee115a2ce520a72bbc",
        "files": [
          "extcap/androiddump.c",
          "plugins/profinet/packet-dcerpc-pn-io.c"
        ],
        "message": "Fix potential oob write crashes\n\n# Conflicts:\n#\textcap/androiddump.c\n#\tplugins/profinet/packet-dcerpc-pn-io.c\n\nBug: 13847\nChange-Id: I3a706db25204fe4c1fd1b7be3b17b8c55365dccf\nReviewed-on: https://code.wireshark.org/review/23169\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 5574b78dae2f607d4ace66ab60d516d0c569357d)\nReviewed-on: https://code.wireshark.org/review/23170\nReviewed-on: https://code.wireshark.org/review/23171\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "extcap/androiddump.c||extcap/androiddump.c",
          "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "extcap/androiddump.c||extcap/androiddump.c",
            "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c"
          ],
          "candidate": [
            "extcap/androiddump.c||extcap/androiddump.c",
            "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c"
          ]
        }
      },
      "candidate_diff": {
        "extcap/androiddump.c||extcap/androiddump.c": [
          "File: extcap/androiddump.c -> extcap/androiddump.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "938:                 response[data_length] = '\\0';",
          "940:                 data_str = strchr(response, '\\n');",
          "942:                     verbose_print(\"VERBOSE: Android Bluetooth application PID for %s is %s\\n\", serial_number, pid);",
          "944:                     sock = adb_connect(adb_server_ip, adb_server_tcp_port);",
          "",
          "[Removed Lines]",
          "941:                 if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1) {",
          "",
          "[Added Lines]",
          "941:                 if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "975:                         response[data_length] = '\\0';",
          "977:                         data_str = strchr(response, '\\n');",
          "979:                             verbose_print(\"VERBOSE: Bluedroid External Parser Port for %s is %s\\n\", serial_number, pid + 9);",
          "980:                         } else {",
          "981:                             disable_interface = 1;",
          "",
          "[Removed Lines]",
          "978:                         if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1 && strcmp(pid + 9, \"10EA\") == 0) {",
          "",
          "[Added Lines]",
          "978:                         if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, \"10EA\") == 0) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1030:                 response[data_length] = '\\0';",
          "1032:                 data_str = strchr(response, '\\n');",
          "1034:                     verbose_print(\"VERBOSE: Android Bluetooth application PID for %s is %s\\n\", serial_number, pid);",
          "1036:                     sock = adb_connect(adb_server_ip, adb_server_tcp_port);",
          "",
          "[Removed Lines]",
          "1033:                 if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1) {",
          "",
          "[Added Lines]",
          "1033:                 if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1067:                         response[data_length] = '\\0';",
          "1069:                         data_str = strchr(response, '\\n');",
          "1071:                             verbose_print(\"VERBOSE: Btsnoop Net Port for %s is %s\\n\", serial_number, pid + 9);",
          "1072:                         } else {",
          "1073:                             disable_interface = 1;",
          "",
          "[Removed Lines]",
          "1070:                         if (data_str && sscanf(data_str, \"%*s %s\", pid) == 1 && strcmp(pid + 9, \"22A8\") == 0) {",
          "",
          "[Added Lines]",
          "1070:                         if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, \"22A8\") == 0) {",
          "",
          "---------------"
        ],
        "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c": [
          "File: plugins/profinet/packet-dcerpc-pn-io.c -> plugins/profinet/packet-dcerpc-pn-io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8216:                             if((strstr(puffer, vendorIdStr)) != NULL) {",
          "8217:                                 memset (convertStr, 0, sizeof(*convertStr));",
          "8218:                                 pch = strstr(puffer, vendorIdStr);",
          "8220:                                     read_vendor_id = (guint32) strtoul (convertStr, NULL, 0);",
          "8222:                                     if(read_vendor_id == searchVendorID) {",
          "",
          "[Removed Lines]",
          "8219:                                 if (sscanf(pch, \"VendorID=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "8219:                                 if (pch!= NULL && sscanf(pch, \"VendorID=\\\"%199[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8229:                             if((strstr(puffer, deviceIdStr)) != NULL) {",
          "8230:                                 memset(convertStr, 0, sizeof(*convertStr));",
          "8231:                                 pch = strstr(puffer, deviceIdStr);",
          "8233:                                     read_device_id = (guint32)strtoul(convertStr, NULL, 0);",
          "8235:                                     if(read_device_id == searchDeviceID) {",
          "",
          "[Removed Lines]",
          "8232:                                 if (sscanf(pch, \"DeviceID=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "8232:                                 if (pch != NULL && sscanf(pch, \"DeviceID=\\\"%199[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8360:                         memset (convertStr, 0, sizeof(*convertStr));",
          "8362:                         pch = strstr(temp, fParameterIndexStr);",
          "8364:                             io_data_object->fParameterIndexNr = (guint32)strtoul(convertStr, NULL, 0);",
          "8365:                         }",
          "",
          "[Removed Lines]",
          "8363:                         if (sscanf(pch, \"Index=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "8363:                         if (pch != NULL && sscanf(pch, \"Index=\\\"%199[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8408:                                     if((strstr(temp, subModuleStr)) != NULL) {",
          "8409:                                         memset (convertStr, 0, sizeof(*convertStr));",
          "8410:                                         pch = strstr(temp, subModuleStr);",
          "",
          "[Removed Lines]",
          "8411:                                         if (sscanf(pch, \"SubmoduleIdentNumber=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "8411:                                         if (pch != NULL && sscanf(pch, \"SubmoduleIdentNumber=\\\"%199[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3ce2336b2a0e684a94d1e0046556bc0b42748f2",
      "candidate_info": {
        "commit_hash": "a3ce2336b2a0e684a94d1e0046556bc0b42748f2",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/a3ce2336b2a0e684a94d1e0046556bc0b42748f2",
        "files": [
          "plugins/profinet/packet-dcerpc-pn-io.c"
        ],
        "message": "PROFINET: Fix possibly passing a null pointer to function\n\nA NULL pointer is possibly being passed to a function identified.\n\nChange-Id: I87afb4fcd669451d94fecbcb827e7ff82d3e6740\nReviewed-on: https://code.wireshark.org/review/17950\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>",
        "before_after_code_files": [
          "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c"
          ],
          "candidate": [
            "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c"
          ]
        }
      },
      "candidate_diff": {
        "plugins/profinet/packet-dcerpc-pn-io.c||plugins/profinet/packet-dcerpc-pn-io.c": [
          "File: plugins/profinet/packet-dcerpc-pn-io.c -> plugins/profinet/packet-dcerpc-pn-io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8216:                             if((strstr(puffer, vendorIdStr)) != NULL) {",
          "8217:                                 memset (convertStr, 0, sizeof(*convertStr));",
          "8218:                                 pch = strstr(puffer, vendorIdStr);",
          "8220:                                     read_vendor_id = (guint32) strtoul (convertStr, NULL, 0);",
          "8222:                                     if(read_vendor_id == searchVendorID) {",
          "",
          "[Removed Lines]",
          "8219:                                 if (sscanf(pch, \"VendorID=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "8219:                                 if (pch!= NULL && sscanf(pch, \"VendorID=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8229:                             if((strstr(puffer, deviceIdStr)) != NULL) {",
          "8230:                                 memset(convertStr, 0, sizeof(*convertStr));",
          "8231:                                 pch = strstr(puffer, deviceIdStr);",
          "8233:                                     read_device_id = (guint32)strtoul(convertStr, NULL, 0);",
          "8235:                                     if(read_device_id == searchDeviceID) {",
          "",
          "[Removed Lines]",
          "8232:                                 if (sscanf(pch, \"DeviceID=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "8232:                                 if (pch != NULL && sscanf(pch, \"DeviceID=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8362:                         memset (convertStr, 0, sizeof(*convertStr));",
          "8364:                         pch = strstr(temp, fParameterIndexStr);",
          "8366:                             io_data_object->fParameterIndexNr = (guint32)strtoul(convertStr, NULL, 0);",
          "8367:                         }",
          "",
          "[Removed Lines]",
          "8365:                         if (sscanf(pch, \"Index=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "8365:                         if (pch != NULL && sscanf(pch, \"Index=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8398:                                                 if(((strstr(temp, tmp_moduletext)) != NULL) && ((strstr(temp, moduleValueInfo)) != NULL)) {",
          "8399:                                                     pch = strstr(temp, moduleValueInfo);",
          "8402:                                                 }",
          "8403:                                             }",
          "",
          "[Removed Lines]",
          "8400:                                                     if (sscanf(pch, \"Value=\\\"%[^\\\"]\", io_data_object->moduleNameStr) == 1)",
          "",
          "[Added Lines]",
          "8400:                                                     if (pch != NULL && sscanf(pch, \"Value=\\\"%[^\\\"]\", io_data_object->moduleNameStr) == 1)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8410:                                     if((strstr(temp, subModuleStr)) != NULL) {",
          "8411:                                         memset (convertStr, 0, sizeof(*convertStr));",
          "8412:                                         pch = strstr(temp, subModuleStr);",
          "",
          "[Removed Lines]",
          "8413:                                         if (sscanf(pch, \"SubmoduleIdentNumber=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "[Added Lines]",
          "8413:                                         if (pch != NULL && sscanf(pch, \"SubmoduleIdentNumber=\\\"%[^\\\"]\", convertStr) == 1) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "789db1f15de6238c7b7b00662aeaedf8189eb962",
      "candidate_info": {
        "commit_hash": "789db1f15de6238c7b7b00662aeaedf8189eb962",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/789db1f15de6238c7b7b00662aeaedf8189eb962",
        "files": [
          "extcap/androiddump.c"
        ],
        "message": "androiddump: Fix btsnoop net port lookup\n\nCode assumes btsnoop net port is the first tcp socket found in\n/proc/<pid>/net/tcp. If it is not the port number lookup will\nfail.\n\nFixed by searching all open tcp sockets for a match.\n\nChange-Id: I988fe18680600b59c595f3d619d95c72c1a6966d\nReviewed-on: https://code.wireshark.org/review/26651\nPetri-Dish: Roland Knall <rknall@gmail.com>\nTested-by: Petri Dish Buildbot\nReviewed-by: Roland Knall <rknall@gmail.com>",
        "before_after_code_files": [
          "extcap/androiddump.c||extcap/androiddump.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "extcap/androiddump.c||extcap/androiddump.c"
          ],
          "candidate": [
            "extcap/androiddump.c||extcap/androiddump.c"
          ]
        }
      },
      "candidate_diff": {
        "extcap/androiddump.c||extcap/androiddump.c": [
          "File: extcap/androiddump.c -> extcap/androiddump.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1225:                         disable_interface = 1;",
          "1226:                     } else {",
          "1227:                         response[data_length] = '\\0';",
          "1233:                             disable_interface = 1;",
          "1234:                             g_debug(\"Btsnoop Net Port for %s is unknown\", serial_number);",
          "1235:                         }",
          "",
          "[Removed Lines]",
          "1229:                         data_str = strchr(response, '\\n');",
          "1230:                         if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, \"22A8\") == 0) {",
          "1231:                             g_debug(\"Btsnoop Net Port for %s is %s\", serial_number, pid + 9);",
          "1232:                         } else {",
          "",
          "[Added Lines]",
          "1228:                         data_str = strtok(response, \"\\n\");",
          "1229:                         while (data_str != NULL) {",
          "1230:                             if (data_str && sscanf(data_str, \"%*s %15s\", pid) == 1 && strlen(pid) > 10 && strcmp(pid + 9, \"22A8\") == 0) {",
          "1231:                                 g_debug(\"Btsnoop Net Port for %s is %s\", serial_number, pid + 9);",
          "1232:                                 break;",
          "1233:                             }",
          "1234:                             data_str = strtok(NULL, \"\\n\");",
          "1235:                         }",
          "1236:                         if (data_str == NULL) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}