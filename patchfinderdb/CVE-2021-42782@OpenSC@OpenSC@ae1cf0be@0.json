{
  "cve_id": "CVE-2021-42782",
  "cve_desc": "Stack buffer overflow issues were found in Opensc before version 0.22.0 in various places that could potentially crash programs using the library.",
  "repo": "OpenSC/OpenSC",
  "patch_hash": "ae1cf0be90396fb6c0be95829bf0d3eecbd2fd1c",
  "patch_info": {
    "commit_hash": "ae1cf0be90396fb6c0be95829bf0d3eecbd2fd1c",
    "repo": "OpenSC/OpenSC",
    "commit_url": "https://github.com/OpenSC/OpenSC/commit/ae1cf0be90396fb6c0be95829bf0d3eecbd2fd1c",
    "files": [
      "src/libopensc/card-iasecc.c"
    ],
    "message": "iasecc: Prevent stack buffer overflow when empty ACL is returned\n\nThanks oss-fuzz\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=30800",
    "before_after_code_files": [
      "src/libopensc/card-iasecc.c||src/libopensc/card-iasecc.c"
    ]
  },
  "patch_diff": {
    "src/libopensc/card-iasecc.c||src/libopensc/card-iasecc.c": [
      "File: src/libopensc/card-iasecc.c -> src/libopensc/card-iasecc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1171:  else",
      "1172:   acls = sc_asn1_find_tag(ctx, buf, buflen, IASECC_DOCP_TAG_ACLS_CONTACT, &taglen);",
      "1175:   sc_log(ctx,",
      "1176:          \"ACLs not found in data(%\"SC_FORMAT_LEN_SIZE_T\"u) %s\",",
      "1177:          buflen, sc_dump_hex(buf, buflen));",
      "",
      "[Removed Lines]",
      "1174:  if (!acls)   {",
      "",
      "[Added Lines]",
      "1174:  if (!acls || taglen < 7)   {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5f7c91e54f41d5e609b25fe1b0e615c1a17cf318",
      "candidate_info": {
        "commit_hash": "5f7c91e54f41d5e609b25fe1b0e615c1a17cf318",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/5f7c91e54f41d5e609b25fe1b0e615c1a17cf318",
        "files": [
          "src/pkcs15init/pkcs15-isoApplet.c"
        ],
        "message": "pkcs15-isoApplet: Avoid uninitialized reads\n\nThanks coverity\n\nCID 365817",
        "before_after_code_files": [
          "src/pkcs15init/pkcs15-isoApplet.c||src/pkcs15init/pkcs15-isoApplet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/2219"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/pkcs15init/pkcs15-isoApplet.c||src/pkcs15init/pkcs15-isoApplet.c": [
          "File: src/pkcs15init/pkcs15-isoApplet.c -> src/pkcs15init/pkcs15-isoApplet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "455:  LOG_FUNC_CALLED(card->ctx);",
          "458:  if(key_info->field_length == 0)",
          "459:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "457:  memset(&args, 0, sizeof(args));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "477:  args.pubkey.ec.params.prime.value   = curve->prime.value;",
          "478:  args.pubkey.ec.params.prime.len    = curve->prime.len;",
          "479:  args.pubkey.ec.params.coefficientA.value = curve->coefficientA.value;",
          "",
          "[Removed Lines]",
          "475:  memset(&args, 0, sizeof(args));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1252aca9f10771ef5ba8405e73cf2da50827958f",
      "candidate_info": {
        "commit_hash": "1252aca9f10771ef5ba8405e73cf2da50827958f",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/1252aca9f10771ef5ba8405e73cf2da50827958f",
        "files": [
          "src/libopensc/card-cardos.c"
        ],
        "message": "cardos: Correctly calculate the left bytes to avoid buffer overrun\n\nThanks oss-fuzz\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=29912",
        "before_after_code_files": [
          "src/libopensc/card-cardos.c||src/libopensc/card-cardos.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/2219"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/libopensc/card-cardos.c||src/libopensc/card-cardos.c": [
          "File: src/libopensc/card-cardos.c -> src/libopensc/card-cardos.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:  sc_apdu_t apdu;",
          "160:         u8        rbuf[SC_MAX_APDU_BUFFER_SIZE];",
          "161:         int       r;",
          "163:  size_t    len, tlen = 0, ilen = 0;",
          "165:  sc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, 0xca, 0x01, 0x88);",
          "",
          "[Removed Lines]",
          "162:  const u8  *p = rbuf, *q;",
          "",
          "[Added Lines]",
          "162:  const u8  *p = rbuf, *q, *pp;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "175:   return 0;",
          "177:  while (len != 0) {",
          "180:    return 0;",
          "182:   if (q == NULL || ilen != 4)",
          "183:    return 0;",
          "184:   if (q[0] == 0x1c)",
          "",
          "[Removed Lines]",
          "178:   p = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);",
          "179:   if (p == NULL)",
          "181:   q = sc_asn1_find_tag(card->ctx, p, tlen, 0x01, &ilen);",
          "",
          "[Added Lines]",
          "178:   pp = sc_asn1_find_tag(card->ctx, p, len, 0xe1, &tlen);",
          "179:   if (pp == NULL)",
          "181:   q = sc_asn1_find_tag(card->ctx, pp, tlen, 0x01, &ilen);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a567ab9dca5d0d8b1b169f780833607be88d2daf",
      "candidate_info": {
        "commit_hash": "a567ab9dca5d0d8b1b169f780833607be88d2daf",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/a567ab9dca5d0d8b1b169f780833607be88d2daf",
        "files": [
          "src/tests/p11test/p11test_case_readonly.c"
        ],
        "message": "p11test: Fix possible resource leak\n\nThanks coverity\n\nCID 365819",
        "before_after_code_files": [
          "src/tests/p11test/p11test_case_readonly.c||src/tests/p11test/p11test_case_readonly.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/2219"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/tests/p11test/p11test_case_readonly.c||src/tests/p11test/p11test_case_readonly.c": [
          "File: src/tests/p11test/p11test_case_readonly.c -> src/tests/p11test/p11test_case_readonly.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:  CK_BYTE *message = NULL;",
          "172:  CK_BYTE *dec_message = NULL;",
          "173:  int dec_message_length = 0;",
          "175:  int enc_message_length, rv;",
          "177:  if (o->private_handle == CK_INVALID_HANDLE) {",
          "",
          "[Removed Lines]",
          "174:  unsigned char *enc_message;",
          "",
          "[Added Lines]",
          "174:  unsigned char *enc_message = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "207:  enc_message_length = encrypt_message(o, info, message, message_length,",
          "208:      mech, &enc_message);",
          "209:  if (enc_message_length <= 0) {",
          "210:   free(message);",
          "211:   return -1;",
          "212:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "210:   free(enc_message);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cee431a3ce36f68313740291d7f184c74d84730a",
      "candidate_info": {
        "commit_hash": "cee431a3ce36f68313740291d7f184c74d84730a",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/cee431a3ce36f68313740291d7f184c74d84730a",
        "files": [
          "src/pkcs15init/pkcs15-iasecc.c"
        ],
        "message": "pkcs15-iasecc: Check return value as in other cases\n\nThanks coverity\n\nCID 365820",
        "before_after_code_files": [
          "src/pkcs15init/pkcs15-iasecc.c||src/pkcs15init/pkcs15-iasecc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/2219"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/pkcs15init/pkcs15-iasecc.c||src/pkcs15init/pkcs15-iasecc.c": [
          "File: src/pkcs15init/pkcs15-iasecc.c -> src/pkcs15init/pkcs15-iasecc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1660:  pubkey_info->usage |= prkey_info->usage & SC_PKCS15_PRKEY_USAGE_DECRYPT ? SC_PKCS15_PRKEY_USAGE_ENCRYPT : 0;",
          "1661:  pubkey_info->usage |= prkey_info->usage & SC_PKCS15_PRKEY_USAGE_UNWRAP ? SC_PKCS15_PRKEY_USAGE_WRAP : 0;",
          "1665:  memcpy(&pubkey_info->algo_refs[0], &prkey_info->algo_refs[0], sizeof(pubkey_info->algo_refs));",
          "",
          "[Removed Lines]",
          "1663:  iasecc_pkcs15_add_access_rule(object, SC_PKCS15_ACCESS_RULE_MODE_READ, NULL);",
          "",
          "[Added Lines]",
          "1663:  rv = iasecc_pkcs15_add_access_rule(object, SC_PKCS15_ACCESS_RULE_MODE_READ, NULL);",
          "1664:  LOG_TEST_RET(ctx, rv, \"Too many access rules\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "251c4f6b7613a9cea421035e5971c793fc30f9e2",
      "candidate_info": {
        "commit_hash": "251c4f6b7613a9cea421035e5971c793fc30f9e2",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/251c4f6b7613a9cea421035e5971c793fc30f9e2",
        "files": [
          "src/libopensc/pkcs15-oberthur.c"
        ],
        "message": "oberthur: Avoid memory leaks\n\nThanks oss-fuzz\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=29998",
        "before_after_code_files": [
          "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OpenSC/OpenSC/pull/2219"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/libopensc/pkcs15-oberthur.c||src/libopensc/pkcs15-oberthur.c": [
          "File: src/libopensc/pkcs15-oberthur.c -> src/libopensc/pkcs15-oberthur.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "575:  struct sc_pkcs15_pubkey_info key_info;",
          "576:  struct sc_pkcs15_object key_obj;",
          "577:  char ch_tmp[0x100];",
          "579:  size_t len, info_len, offs;",
          "580:  unsigned flags;",
          "581:  int rv;",
          "",
          "[Removed Lines]",
          "578:  unsigned char *info_blob;",
          "",
          "[Added Lines]",
          "578:  unsigned char *info_blob = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "594:  offs = 2;",
          "596:   LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add public key: no 'tag'\");",
          "597:  flags = *(info_blob + 0) * 0x100 + *(info_blob + 1);",
          "598:  key_info.usage = sc_oberthur_decode_usage(flags);",
          "599:  if (flags & OBERTHUR_ATTR_MODIFIABLE)",
          "",
          "[Removed Lines]",
          "595:  if (offs > info_len)",
          "",
          "[Added Lines]",
          "595:  if (offs > info_len) {",
          "596:   free(info_blob);",
          "598:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "601:  sc_log(ctx, \"Public key key-usage:%04X\", key_info.usage);",
          "605:   LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add public key: no 'Label'\");",
          "606:  len = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;",
          "607:  if (len)   {",
          "608:   if (len > sizeof(key_obj.label) - 1)",
          "",
          "[Removed Lines]",
          "604:  if (offs + 2 > info_len)",
          "",
          "[Added Lines]",
          "606:  if (offs + 2 > info_len) {",
          "607:   free(info_blob);",
          "609:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "612:  offs += 2 + len;",
          "616:   LOG_TEST_RET(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED, \"Failed to add public key: no 'ID'\");",
          "617:  len = *(info_blob + offs + 1) + *(info_blob + offs) * 0x100;",
          "619:   LOG_TEST_RET(ctx, SC_ERROR_INVALID_DATA, \"Failed to add public key: invalid 'ID' length\");",
          "620:  memcpy(key_info.id.value, info_blob + offs + 2, len);",
          "621:  key_info.id.len = len;",
          "625:  snprintf(ch_tmp, sizeof(ch_tmp), \"%s%04X\", AWP_OBJECTS_DF_PUB, file_id);",
          "",
          "[Removed Lines]",
          "615:  if (offs > info_len)",
          "618:  if (!len || len > sizeof(key_info.id.value))",
          "",
          "[Added Lines]",
          "619:  if (offs > info_len) {",
          "620:   free(info_blob);",
          "622:  }",
          "624:  if (!len || len > sizeof(key_info.id.value)) {",
          "625:   free(info_blob);",
          "627:  }",
          "631:  free(info_blob);",
          "",
          "---------------"
        ]
      }
    }
  ]
}