{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "64aa3d080ed66bd4e1829120312f5a840807c856",
      "candidate_info": {
        "commit_hash": "64aa3d080ed66bd4e1829120312f5a840807c856",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/64aa3d080ed66bd4e1829120312f5a840807c856",
        "files": [
          "apps/ca.c"
        ],
        "message": "Make sure that a cert with extensions gets version number 2 (v3)\n\nFixes #4419\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4420)\n\n(cherry picked from commit 4881d849da23528e19b7312f963d28916d9804b1)",
        "before_after_code_files": [
          "apps/ca.c||apps/ca.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/ca.c||apps/ca.c": [
          "File: apps/ca.c -> apps/ca.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1720:     if (ext_sect) {",
          "1721:         X509V3_CTX ctx;",
          "1725:         if (selfsign)",
          "",
          "[Removed Lines]",
          "1722:         X509_set_version(ret, 2);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1774:         goto end;",
          "1775:     }",
          "1778:     if (email_dn == 0) {",
          "1779:         if (!X509_set_subject_name(ret, dn_subject))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1776:     {",
          "1777:         const STACK_OF(X509_EXTENSION) *exts = X509_get0_extensions(ret);",
          "1779:         if (exts != NULL && sk_X509_EXTENSION_num(exts) > 0)",
          "1781:             if (!X509_set_version(ret, 2))",
          "1782:                 goto end;",
          "1783:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0e5be9faa3958cce5eb776c65fcf31b634590ea8",
      "candidate_info": {
        "commit_hash": "0e5be9faa3958cce5eb776c65fcf31b634590ea8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0e5be9faa3958cce5eb776c65fcf31b634590ea8",
        "files": [
          "crypto/ec/ec_kmeth.c",
          "include/openssl/ec.h"
        ],
        "message": "Fix const correctness of EC_KEY_METHOD_get_*\n\nChanges the EC_KEY_METHOD_get_* family to not need a EC_KEY_METHOD* as\nits first parameter, but a const EC_KEY_METHOD*, which is entirely\nsufficient.\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\nReviewed-by: Paul Dale <paul.dale@oracle.com>\nGH: #3985\n(cherry picked from commit 4e9b720e90ec154c9708139e96ec0ff8e2796c82)",
        "before_after_code_files": [
          "crypto/ec/ec_kmeth.c||crypto/ec/ec_kmeth.c",
          "include/openssl/ec.h||include/openssl/ec.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ec/ec_kmeth.c||crypto/ec/ec_kmeth.c": [
          "File: crypto/ec/ec_kmeth.c -> crypto/ec/ec_kmeth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "236:     meth->verify_sig = verify_sig;",
          "237: }",
          "240:                             int (**pinit)(EC_KEY *key),",
          "241:                             void (**pfinish)(EC_KEY *key),",
          "242:                             int (**pcopy)(EC_KEY *dest, const EC_KEY *src),",
          "",
          "[Removed Lines]",
          "239: void EC_KEY_METHOD_get_init(EC_KEY_METHOD *meth,",
          "",
          "[Added Lines]",
          "239: void EC_KEY_METHOD_get_init(const EC_KEY_METHOD *meth,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "262: }",
          "265:                               int (**pkeygen)(EC_KEY *key))",
          "266: {",
          "267:     if (pkeygen != NULL)",
          "269: }",
          "272:                                    int (**pck)(unsigned char **pout,",
          "273:                                                size_t *poutlen,",
          "274:                                                const EC_POINT *pub_key,",
          "",
          "[Removed Lines]",
          "264: void EC_KEY_METHOD_get_keygen(EC_KEY_METHOD *meth,",
          "271: void EC_KEY_METHOD_get_compute_key(EC_KEY_METHOD *meth,",
          "",
          "[Added Lines]",
          "264: void EC_KEY_METHOD_get_keygen(const EC_KEY_METHOD *meth,",
          "271: void EC_KEY_METHOD_get_compute_key(const EC_KEY_METHOD *meth,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "279: }",
          "282:                             int (**psign)(int type, const unsigned char *dgst,",
          "283:                                           int dlen, unsigned char *sig,",
          "284:                                           unsigned int *siglen,",
          "",
          "[Removed Lines]",
          "281: void EC_KEY_METHOD_get_sign(EC_KEY_METHOD *meth,",
          "",
          "[Added Lines]",
          "281: void EC_KEY_METHOD_get_sign(const EC_KEY_METHOD *meth,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "301: }",
          "304:                               int (**pverify)(int type, const unsigned",
          "305:                                               char *dgst, int dgst_len,",
          "306:                                               const unsigned char *sigbuf,",
          "",
          "[Removed Lines]",
          "303: void EC_KEY_METHOD_get_verify(EC_KEY_METHOD *meth,",
          "",
          "[Added Lines]",
          "303: void EC_KEY_METHOD_get_verify(const EC_KEY_METHOD *meth,",
          "",
          "---------------"
        ],
        "include/openssl/ec.h||include/openssl/ec.h": [
          "File: include/openssl/ec.h -> include/openssl/ec.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1223:                                                 const ECDSA_SIG *sig,",
          "1224:                                                 EC_KEY *eckey));",
          "1227:                             int (**pinit)(EC_KEY *key),",
          "1228:                             void (**pfinish)(EC_KEY *key),",
          "1229:                             int (**pcopy)(EC_KEY *dest, const EC_KEY *src),",
          "",
          "[Removed Lines]",
          "1226: void EC_KEY_METHOD_get_init(EC_KEY_METHOD *meth,",
          "",
          "[Added Lines]",
          "1226: void EC_KEY_METHOD_get_init(const EC_KEY_METHOD *meth,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1234:                             int (**pset_public)(EC_KEY *key,",
          "1235:                                                 const EC_POINT *pub_key));",
          "1238:                               int (**pkeygen)(EC_KEY *key));",
          "1241:                                    int (**pck)(unsigned char **psec,",
          "1242:                                                size_t *pseclen,",
          "1243:                                                const EC_POINT *pub_key,",
          "1244:                                                const EC_KEY *ecdh));",
          "1247:                             int (**psign)(int type, const unsigned char *dgst,",
          "1248:                                           int dlen, unsigned char *sig,",
          "1249:                                           unsigned int *siglen,",
          "",
          "[Removed Lines]",
          "1237: void EC_KEY_METHOD_get_keygen(EC_KEY_METHOD *meth,",
          "1240: void EC_KEY_METHOD_get_compute_key(EC_KEY_METHOD *meth,",
          "1246: void EC_KEY_METHOD_get_sign(EC_KEY_METHOD *meth,",
          "",
          "[Added Lines]",
          "1237: void EC_KEY_METHOD_get_keygen(const EC_KEY_METHOD *meth,",
          "1240: void EC_KEY_METHOD_get_compute_key(const EC_KEY_METHOD *meth,",
          "1246: void EC_KEY_METHOD_get_sign(const EC_KEY_METHOD *meth,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1257:                                                      const BIGNUM *in_r,",
          "1258:                                                      EC_KEY *eckey));",
          "1261:                               int (**pverify)(int type, const unsigned",
          "1262:                                               char *dgst, int dgst_len,",
          "1263:                                               const unsigned char *sigbuf,",
          "",
          "[Removed Lines]",
          "1260: void EC_KEY_METHOD_get_verify(EC_KEY_METHOD *meth,",
          "",
          "[Added Lines]",
          "1260: void EC_KEY_METHOD_get_verify(const EC_KEY_METHOD *meth,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5c26dd5b70e7be158dade9da9d75af258c7795dc",
      "candidate_info": {
        "commit_hash": "5c26dd5b70e7be158dade9da9d75af258c7795dc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5c26dd5b70e7be158dade9da9d75af258c7795dc",
        "files": [
          "crypto/pkcs12/p12_kiss.c"
        ],
        "message": "Clear outputs in PKCS12_parse error handling.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4145)\n\n(cherry picked from commit 524fdd515569e12047ddb29ba4c7f19706aacc98)",
        "before_after_code_files": [
          "crypto/pkcs12/p12_kiss.c||crypto/pkcs12/p12_kiss.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/pkcs12/p12_kiss.c||crypto/pkcs12/p12_kiss.c": [
          "File: crypto/pkcs12/p12_kiss.c -> crypto/pkcs12/p12_kiss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: {",
          "35:     STACK_OF(X509) *ocerts = NULL;",
          "36:     X509 *x = NULL;",
          "39:     if (!p12) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:     if (pkey)",
          "40:     if (cert)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:         return 0;",
          "43:     }",
          "",
          "[Removed Lines]",
          "45:     if (pkey)",
          "47:     if (cert)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76:     if (!ocerts) {",
          "77:         PKCS12err(PKCS12_F_PKCS12_PARSE, ERR_R_MALLOC_FAILURE);",
          "79:     }",
          "81:     if (!parse_pk12(p12, pass, -1, pkey, ocerts)) {",
          "",
          "[Removed Lines]",
          "78:         return 0;",
          "",
          "[Added Lines]",
          "79:         goto err;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "112:  err:",
          "115:         EVP_PKEY_free(*pkey);",
          "117:         X509_free(*cert);",
          "118:     X509_free(x);",
          "119:     sk_X509_pop_free(ocerts, X509_free);",
          "120:     return 0;",
          "",
          "[Removed Lines]",
          "114:     if (pkey)",
          "116:     if (cert)",
          "",
          "[Added Lines]",
          "115:     if (pkey) {",
          "118:     }",
          "119:     if (cert) {",
          "122:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de403939a65e3aa581a97aa9a6c60b9d75c3ae8c",
      "candidate_info": {
        "commit_hash": "de403939a65e3aa581a97aa9a6c60b9d75c3ae8c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/de403939a65e3aa581a97aa9a6c60b9d75c3ae8c",
        "files": [
          "apps/tsget.in"
        ],
        "message": "tsget.in: remove call of WWW::Curl::Easy::global_cleanup\n\nThis function is undocumented, but similarly named functions (such as\n'curl_global_cleanup') are documented as internals that should not be\ncalled by scripts.\n\nFixes #3765\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3768)\n\n(cherry picked from commit 6544a91cefe817156461e57a4538c3fe7f621075)",
        "before_after_code_files": [
          "apps/tsget.in||apps/tsget.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/tsget.in||apps/tsget.in": [
          "File: apps/tsget.in -> apps/tsget.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:     STDERR->printflush(\", $output written.\\n\") if $options{v};",
          "199: }",
          "200: $curl->cleanup();",
          "",
          "[Removed Lines]",
          "201: WWW::Curl::Easy::global_cleanup();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf37a9f58cd9b60c0397cb0a4c56d20b157a889c",
      "candidate_info": {
        "commit_hash": "bf37a9f58cd9b60c0397cb0a4c56d20b157a889c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bf37a9f58cd9b60c0397cb0a4c56d20b157a889c",
        "files": [
          "apps/dsa.c",
          "crypto/asn1/a_i2d_fp.c"
        ],
        "message": "Add error handling in dsa_main and ASN1_i2d_bio.\n\nCLA: trivial\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/4600)\n\n(cherry picked from commit a6f622bc99ffdc7b34199babb9d200b24a7a6431)",
        "before_after_code_files": [
          "apps/dsa.c||apps/dsa.c",
          "crypto/asn1/a_i2d_fp.c||crypto/asn1/a_i2d_fp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/dsa.c||apps/dsa.c": [
          "File: apps/dsa.c -> apps/dsa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:     } else if (outformat == FORMAT_MSBLOB || outformat == FORMAT_PVK) {",
          "218:         EVP_PKEY *pk;",
          "219:         pk = EVP_PKEY_new();",
          "220:         EVP_PKEY_set1_DSA(pk, dsa);",
          "221:         if (outformat == FORMAT_PVK) {",
          "222:             if (pubin) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "220:         if (pk == NULL)",
          "221:            goto end;",
          "",
          "---------------"
        ],
        "crypto/asn1/a_i2d_fp.c||crypto/asn1/a_i2d_fp.c": [
          "File: crypto/asn1/a_i2d_fp.c -> crypto/asn1/a_i2d_fp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     int i, j = 0, n, ret = 1;",
          "40:     n = i2d(x, NULL);",
          "41:     b = OPENSSL_malloc(n);",
          "42:     if (b == NULL) {",
          "43:         ASN1err(ASN1_F_ASN1_I2D_BIO, ERR_R_MALLOC_FAILURE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:     if (n <= 0)",
          "42:         return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}