{
  "cve_id": "CVE-2016-7133",
  "cve_desc": "Zend/zend_alloc.c in PHP 7.x before 7.0.10, when open_basedir is enabled, mishandles huge realloc operations, which allows remote attackers to cause a denial of service (integer overflow) or possibly have unspecified other impact via a long pathname.",
  "repo": "php/php-src",
  "patch_hash": "c2a13ced4272f2e65d2773e2ea6ca11c1ce4a911",
  "patch_info": {
    "commit_hash": "c2a13ced4272f2e65d2773e2ea6ca11c1ce4a911",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/c2a13ced4272f2e65d2773e2ea6ca11c1ce4a911",
    "files": [
      "Zend/zend_alloc.c"
    ],
    "message": "Fix bug #72742 - memory allocator fails to realloc small block to large one",
    "before_after_code_files": [
      "Zend/zend_alloc.c||Zend/zend_alloc.c"
    ]
  },
  "patch_diff": {
    "Zend/zend_alloc.c||Zend/zend_alloc.c": [
      "File: Zend/zend_alloc.c -> Zend/zend_alloc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1549:   ZEND_MM_CHECK(chunk->heap == heap, \"zend_mm_heap corrupted\");",
      "1550:   if (info & ZEND_MM_IS_SRUN) {",
      "1554:    old_size = bin_data_size[old_bin_num];",
      "1557: #if ZEND_DEBUG",
      "1564: #endif",
      "1566:    }",
      "1567:   } else /* if (info & ZEND_MM_IS_LARGE_RUN) */ {",
      "1568:    ZEND_MM_CHECK(ZEND_MM_ALIGNED_OFFSET(page_offset, ZEND_MM_PAGE_SIZE) == 0, \"zend_mm_heap corrupted\");",
      "",
      "[Removed Lines]",
      "1551:    int old_bin_num, bin_num;",
      "1553:    old_bin_num = ZEND_MM_SRUN_BIN_NUM(info);",
      "1555:    bin_num = ZEND_MM_SMALL_SIZE_TO_BIN(size);",
      "1556:    if (old_bin_num == bin_num) {",
      "1558:     dbg = zend_mm_get_debug_info(heap, ptr);",
      "1559:     dbg->size = real_size;",
      "1560:     dbg->filename = __zend_filename;",
      "1561:     dbg->orig_filename = __zend_orig_filename;",
      "1562:     dbg->lineno = __zend_lineno;",
      "1563:     dbg->orig_lineno = __zend_orig_lineno;",
      "1565:     return ptr;",
      "",
      "[Added Lines]",
      "1551:    int old_bin_num = ZEND_MM_SRUN_BIN_NUM(info);",
      "1553:    if (size <= ZEND_MM_MAX_SMALL_SIZE) {",
      "1554:     int bin_num = ZEND_MM_SMALL_SIZE_TO_BIN(size);",
      "1555:     if (old_bin_num == bin_num) {",
      "1557:      dbg = zend_mm_get_debug_info(heap, ptr);",
      "1558:      dbg->size = real_size;",
      "1559:      dbg->filename = __zend_filename;",
      "1560:      dbg->orig_filename = __zend_orig_filename;",
      "1561:      dbg->lineno = __zend_lineno;",
      "1562:      dbg->orig_lineno = __zend_orig_lineno;",
      "1564:      return ptr;",
      "1565:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "326ac100ac016cd5fc2c7367c97d64fa4b6932df",
      "candidate_info": {
        "commit_hash": "326ac100ac016cd5fc2c7367c97d64fa4b6932df",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/326ac100ac016cd5fc2c7367c97d64fa4b6932df",
        "files": [
          "Zend/zend_alloc.c"
        ],
        "message": "Fix bug #72742 - memory allocator fails to realloc small block to large one\n\n(cherry picked from commit c2a13ced4272f2e65d2773e2ea6ca11c1ce4a911)",
        "before_after_code_files": [
          "Zend/zend_alloc.c||Zend/zend_alloc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_alloc.c||Zend/zend_alloc.c"
          ],
          "candidate": [
            "Zend/zend_alloc.c||Zend/zend_alloc.c"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_alloc.c||Zend/zend_alloc.c": [
          "File: Zend/zend_alloc.c -> Zend/zend_alloc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1549:   ZEND_MM_CHECK(chunk->heap == heap, \"zend_mm_heap corrupted\");",
          "1550:   if (info & ZEND_MM_IS_SRUN) {",
          "1554:    old_size = bin_data_size[old_bin_num];",
          "1557: #if ZEND_DEBUG",
          "1564: #endif",
          "1566:    }",
          "1567:   } else /* if (info & ZEND_MM_IS_LARGE_RUN) */ {",
          "1568:    ZEND_MM_CHECK(ZEND_MM_ALIGNED_OFFSET(page_offset, ZEND_MM_PAGE_SIZE) == 0, \"zend_mm_heap corrupted\");",
          "",
          "[Removed Lines]",
          "1551:    int old_bin_num, bin_num;",
          "1553:    old_bin_num = ZEND_MM_SRUN_BIN_NUM(info);",
          "1555:    bin_num = ZEND_MM_SMALL_SIZE_TO_BIN(size);",
          "1556:    if (old_bin_num == bin_num) {",
          "1558:     dbg = zend_mm_get_debug_info(heap, ptr);",
          "1559:     dbg->size = real_size;",
          "1560:     dbg->filename = __zend_filename;",
          "1561:     dbg->orig_filename = __zend_orig_filename;",
          "1562:     dbg->lineno = __zend_lineno;",
          "1563:     dbg->orig_lineno = __zend_orig_lineno;",
          "1565:     return ptr;",
          "",
          "[Added Lines]",
          "1551:    int old_bin_num = ZEND_MM_SRUN_BIN_NUM(info);",
          "1553:    if (size <= ZEND_MM_MAX_SMALL_SIZE) {",
          "1554:     int bin_num = ZEND_MM_SMALL_SIZE_TO_BIN(size);",
          "1555:     if (old_bin_num == bin_num) {",
          "1557:      dbg = zend_mm_get_debug_info(heap, ptr);",
          "1558:      dbg->size = real_size;",
          "1559:      dbg->filename = __zend_filename;",
          "1560:      dbg->orig_filename = __zend_orig_filename;",
          "1561:      dbg->lineno = __zend_lineno;",
          "1562:      dbg->orig_lineno = __zend_orig_lineno;",
          "1564:      return ptr;",
          "1565:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}