{
  "cve_id": "CVE-2019-19880",
  "cve_desc": "exprListAppendList in window.c in SQLite 3.30.1 allows attackers to trigger an invalid pointer dereference because constant integer values in ORDER BY clauses of window definitions are mishandled.",
  "repo": "sqlite/sqlite",
  "patch_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
  "patch_info": {
    "commit_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/window.c"
    ],
    "message": "When processing constant integer values in ORDER BY clauses of window definitions (see check-in [7e4809eadfe99ebf]) be sure to fully disable the constant value to avoid an invalid pointer dereference if the expression is ever duplicated. This fixes a crash report from Yongheng and Rui.\n\nFossilOrigin-Name: 1ca0bd982ab1183bbafce0d260e4dceda5eb766ed2e7793374a88d1ae0bdd2ca",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8223e79f987feda5c8e51ec52cec6798cca16d070b10558939e2888ca1a25b8e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "895:     int nInit = pList ? pList->nExpr : 0;",
      "896:     for(i=0; i<pAppend->nExpr; i++){",
      "897:       Expr *pDup = sqlite3ExprDup(pParse->db, pAppend->a[i].pExpr, 0);",
      "898:       if( bIntToNull && pDup && pDup->op==TK_INTEGER ){",
      "899:         pDup->op = TK_NULL;",
      "900:         pDup->flags &= ~(EP_IntValue|EP_IsTrue|EP_IsFalse);",
      "901:       }",
      "902:       pList = sqlite3ExprListAppend(pParse, pList, pDup);",
      "903:       if( pList ) pList->a[nInit+i].sortFlags = pAppend->a[i].sortFlags;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "898:       assert( pDup==0 || !ExprHasProperty(pDup, EP_MemToken) );",
      "902:         pDup->u.zToken = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "491b6d897df09229cfa425d60ba095c1bd81c95f",
      "candidate_info": {
        "commit_hash": "491b6d897df09229cfa425d60ba095c1bd81c95f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/491b6d897df09229cfa425d60ba095c1bd81c95f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c"
        ],
        "message": "Make sure the column name flags are restored correctly after an error inside of sqlite3ResultSetOfSelect().\n\nFossilOrigin-Name: b1601db7adba2dccd4f90fbbe5099c801a2b0d97af087fbe82ed98d05496b38c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: db4b4c2c1e9f1adacfb1b2fedb717a4d8bb0a299c3b11835404a99fcd67bf24b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2089:   db->flags &= ~(u64)SQLITE_FullColNames;",
          "2090:   db->flags |= SQLITE_ShortColNames;",
          "2091:   sqlite3SelectPrep(pParse, pSelect, 0);",
          "2092:   if( pParse->nErr ) return 0;",
          "2093:   while( pSelect->pPrior ) pSelect = pSelect->pPrior;",
          "2095:   pTab = sqlite3DbMallocZero(db, sizeof(Table) );",
          "2096:   if( pTab==0 ){",
          "2097:     return 0;",
          "",
          "[Removed Lines]",
          "2094:   db->flags = savedFlags;",
          "",
          "[Added Lines]",
          "2092:   db->flags = savedFlags;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af63892337c6fe37972bbae9b77365eb8c33d47a",
      "candidate_info": {
        "commit_hash": "af63892337c6fe37972bbae9b77365eb8c33d47a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/af63892337c6fe37972bbae9b77365eb8c33d47a",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzcheck.c"
        ],
        "message": "In the fuzzcheck test program, make sure the isspace() and related routines are not given values outside the range of -1 to 255.\n\nFossilOrigin-Name: f298328771d5aaba798d05f50c77ac239c7c72422ff35953463d6876a9659f74",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/fuzzcheck.c||test/fuzzcheck.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a505e34d4ec31159a4508ec827fcffed0cf3bd5ea5ef0ac293016da02367a53a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fuzzcheck.c||test/fuzzcheck.c": [
          "File: test/fuzzcheck.c -> test/fuzzcheck.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "533:   }",
          "534:   memset(a, 0, nAlloc);",
          "535:   for(i=k=0; i<n; i++){",
          "537:     if( isxdigit(c) ){",
          "538:       k++;",
          "539:       if( k & 1 ){",
          "",
          "[Removed Lines]",
          "536:     char c = zIn[i];",
          "",
          "[Added Lines]",
          "536:     unsigned char c = (unsigned char)zIn[i];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "651: static int runDbSql(sqlite3 *db, const char *zSql){",
          "652:   int rc;",
          "653:   sqlite3_stmt *pStmt;",
          "655:   if( zSql[0]==0 ) return SQLITE_OK;",
          "656:   if( eVerbosity>=4 ){",
          "657:     printf(\"RUNNING-SQL: [%s]\\n\", zSql);",
          "",
          "[Removed Lines]",
          "654:   while( isspace(zSql[0]) ) zSql++;",
          "",
          "[Added Lines]",
          "654:   while( isspace(zSql[0]&0x7f) ) zSql++;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eb4a61a30cff88326069684788321dc5e01224fb",
      "candidate_info": {
        "commit_hash": "eb4a61a30cff88326069684788321dc5e01224fb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/eb4a61a30cff88326069684788321dc5e01224fb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Merge accidental fork in trunk.\n\nFossilOrigin-Name: ec9373031d76b34163a45d0ed05e43c0c9d585c8d47aa255f670340673bc7875",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7ccf2e7d413adb109c61456a5f46e87d38884801dbaab93297a17e3050014b59",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3884:   if( fgets(zLine, sizeof(zLine), in)==0 ) goto readHexDb_error;",
          "3885:   rc = sscanf(zLine, \"| size %d pagesize %d\", &n, &pgsz);",
          "3886:   if( rc!=2 ) goto readHexDb_error;",
          "3889:   if( a==0 ){",
          "3890:     utf8_printf(stderr, \"Out of memory!\\n\");",
          "3891:     goto readHexDb_error;",
          "",
          "[Removed Lines]",
          "3887:   if( n<=0 ) goto readHexDb_error;",
          "3888:   a = sqlite3_malloc( n );",
          "",
          "[Added Lines]",
          "3887:   if( n<0 ) goto readHexDb_error;",
          "3888:   a = sqlite3_malloc( n ? n : 1 );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3924:   return a;",
          "3926: readHexDb_error:",
          "3928:     fclose(in);",
          "3929:   }else{",
          "3930:     while( fgets(zLine, sizeof(zLine), p->in)!=0 ){",
          "",
          "[Removed Lines]",
          "3927:   if( in!=stdin ){",
          "",
          "[Added Lines]",
          "3927:   if( in!=p->in ){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4166:       }else{",
          "4167:         aData = readHexDb(p, &nData);",
          "4168:         if( aData==0 ){",
          "4170:           return;",
          "4171:         }",
          "4172:       }",
          "",
          "[Removed Lines]",
          "4169:           utf8_printf(stderr, \"Error in hexdb input\\n\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce059e5219aaba9408cfadee7289ff6d8f4647ca",
      "candidate_info": {
        "commit_hash": "ce059e5219aaba9408cfadee7289ff6d8f4647ca",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ce059e5219aaba9408cfadee7289ff6d8f4647ca",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/util.c"
        ],
        "message": "Improved comment on the sqlite3FaultSim() function.  No changes to code.\n\nFossilOrigin-Name: 08b29672c552e5a6a3874746c6cc7025295e0e44dec43a1bfba3022acce849ff",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/util.c||src/util.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8b5a621e2ee3bb9d7d4f905217872e7e59153be9477aaa626cea287d56710b5b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c"
        ]
      }
    },
    {
      "candidate_hash": "03199343222fdf2db1ee4b264e79e52d251eb483",
      "candidate_info": {
        "commit_hash": "03199343222fdf2db1ee4b264e79e52d251eb483",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/03199343222fdf2db1ee4b264e79e52d251eb483",
        "files": [
          "ext/misc/fileio.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix the readfile() UDF so that it returns an empty BLOB, not an OOM error, when reading an empty file.\n\nFossilOrigin-Name: 0edad5339e36d69aed9289bb3e60d35f9930386d76a62bb0194c4fdf420d16fb",
        "before_after_code_files": [
          "ext/misc/fileio.c||ext/misc/fileio.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/fileio.c||ext/misc/fileio.c": [
          "File: ext/misc/fileio.c -> ext/misc/fileio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:     fclose(in);",
          "153:     return;",
          "154:   }",
          "156:   if( pBuf==0 ){",
          "157:     sqlite3_result_error_nomem(ctx);",
          "158:     fclose(in);",
          "159:     return;",
          "160:   }",
          "162:     sqlite3_result_blob64(ctx, pBuf, nIn, sqlite3_free);",
          "163:   }else{",
          "164:     sqlite3_result_error_code(ctx, SQLITE_IOERR);",
          "",
          "[Removed Lines]",
          "155:   pBuf = sqlite3_malloc64( nIn );",
          "161:   if( 1==fread(pBuf, nIn, 1, in) ){",
          "",
          "[Added Lines]",
          "155:   pBuf = sqlite3_malloc64( nIn ? nIn : 1 );",
          "161:   if( nIn==fread(pBuf, 1, nIn, in) ){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 789a492b68c353e2b763d67d399722b7ab61bfe09b472466df2821f65cab1be9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}