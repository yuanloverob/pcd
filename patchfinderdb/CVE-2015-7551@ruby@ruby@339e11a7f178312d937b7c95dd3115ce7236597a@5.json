{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4a680e81f2a7521518890bc6f0dd94411efff7f7",
      "candidate_info": {
        "commit_hash": "4a680e81f2a7521518890bc6f0dd94411efff7f7",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/4a680e81f2a7521518890bc6f0dd94411efff7f7",
        "files": [
          "ChangeLog",
          "parse.y",
          "test/ruby/test_syntax.rb",
          "version.h"
        ],
        "message": "merge revision(s) 50402: [Backport #11107]\n\n\t* parse.y (lambda): push and reset cmdarg_stack in lambda body.\n\t  [ruby-core:69017] [Bug #11107]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50468 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "parse.y||parse.y",
          "test/ruby/test_syntax.rb||test/ruby/test_syntax.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "parse.y||parse.y": [
          "File: parse.y -> parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "3467:       {",
          "3468:    $<num>$ = ruby_sourceline;",
          "3469:       }",
          "3470:     lambda_body",
          "3471:       {",
          "3472:    lpar_beg = $<num>2;",
          "3475:    nd_set_line($$, $<num>4);",
          "3479:    dyna_pop($<vars>1);",
          "3480:       }",
          "",
          "[Removed Lines]",
          "3474:    $$ = NEW_LAMBDA($3, $5);",
          "3477:    $$ = dispatch2(lambda, $3, $5);",
          "",
          "[Added Lines]",
          "3470:       {",
          "3471:    $<val>$ = cmdarg_stack;",
          "3472:    cmdarg_stack = 0;",
          "3473:       }",
          "3477:    cmdarg_stack = $<val>5;",
          "3479:    $$ = NEW_LAMBDA($3, $6);",
          "3482:    $$ = dispatch2(lambda, $3, $6);",
          "",
          "---------------"
        ],
        "test/ruby/test_syntax.rb||test/ruby/test_syntax.rb": [
          "File: test/ruby/test_syntax.rb -> test/ruby/test_syntax.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "266:     assert_valid_syntax(\"bar def foo; self.each do end end\", bug9308)",
          "267:   end",
          "269:   def test_reserved_method_no_args",
          "270:     bug6403 = '[ruby-dev:45626]'",
          "271:     assert_valid_syntax(\"def self; :foo; end\", __FILE__, bug6403)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "269:   def test_do_block_in_lambda",
          "270:     bug11107 = '[ruby-core:69017] [Bug #11107]'",
          "271:     assert_valid_syntax('p ->() do a() do end end', bug11107)",
          "272:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-04-28\"",
          "3: #define RUBY_PATCHLEVEL 340",
          "6: #define RUBY_RELEASE_MONTH 4",
          "7: #define RUBY_RELEASE_DAY 28",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-05-11\"",
          "3: #define RUBY_PATCHLEVEL 341",
          "6: #define RUBY_RELEASE_MONTH 5",
          "7: #define RUBY_RELEASE_DAY 11",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "911ade36df679fbc816456d5d58b5fc8fb1e0db4",
      "candidate_info": {
        "commit_hash": "911ade36df679fbc816456d5d58b5fc8fb1e0db4",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/911ade36df679fbc816456d5d58b5fc8fb1e0db4",
        "files": [
          "ChangeLog",
          "ext/win32/lib/win32/registry.rb",
          "version.h"
        ],
        "message": "merge revision(s) 51575,51584: [Backport #11439]\n\n\t* ext/win32/lib/win32/registry.rb (API#SetValue): add terminator\n\t  size, not 1 byte.  [ruby-core:70365] [Bug #11439]\n\n\t* ext/win32/lib/win32/registry.rb (API#SetValue): data size should\n\t  be in bytes, not in chars.  [ruby-core:70365] [Bug #11439]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51620 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/win32/lib/win32/registry.rb||ext/win32/lib/win32/registry.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/win32/lib/win32/registry.rb||ext/win32/lib/win32/registry.rb": [
          "File: ext/win32/lib/win32/registry.rb -> ext/win32/lib/win32/registry.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "315:         case type",
          "316:         when REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ",
          "317:           data = data.encode(WCHAR)",
          "319:         end",
          "320:         check RegSetValueExW.call(hkey, make_wstr(name), 0, type, data, size)",
          "321:       end",
          "",
          "[Removed Lines]",
          "318:           size ||= data.size + 1",
          "",
          "[Added Lines]",
          "318:           size ||= data.bytesize + WCHAR_SIZE",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-08-17\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 8",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 398",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 399",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8aca3e79eeafd71f524bbd2b5aef1ac8feab35b1",
      "candidate_info": {
        "commit_hash": "8aca3e79eeafd71f524bbd2b5aef1ac8feab35b1",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/8aca3e79eeafd71f524bbd2b5aef1ac8feab35b1",
        "files": [
          "ChangeLog",
          "lib/mkmf.rb",
          "test/mkmf/base.rb",
          "test/mkmf/test_flags.rb",
          "version.h"
        ],
        "message": "merge revision(s) r49482,r49487: [Backport #10821]\n\n\t* lib/mkmf.rb (try_cppflags, try_cflags, try_ldflags): get rid of\n\t  interference by modifying global variables in have_devel? method.\n\t  [ruby-core:67962] [Bug #10821]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49993 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/mkmf.rb||lib/mkmf.rb",
          "test/mkmf/base.rb||test/mkmf/base.rb",
          "test/mkmf/test_flags.rb||test/mkmf/test_flags.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/mkmf.rb||lib/mkmf.rb": [
          "File: lib/mkmf.rb -> lib/mkmf.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "610:   end",
          "612:   def try_cppflags(flags)",
          "616:   end",
          "618:   def with_cflags(flags)",
          "",
          "[Removed Lines]",
          "613:     with_cppflags(flags) do",
          "614:       try_header(\"int main() {return 0;}\")",
          "615:     end",
          "",
          "[Added Lines]",
          "613:     try_header(MAIN_DOES_NOTHING, flags)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "624:   end",
          "626:   def try_cflags(flags)",
          "630:   end",
          "632:   def with_ldflags(flags)",
          "",
          "[Removed Lines]",
          "627:     with_cflags(flags) do",
          "628:       try_compile(\"int main() {return 0;}\")",
          "629:     end",
          "",
          "[Added Lines]",
          "625:     try_compile(MAIN_DOES_NOTHING, flags)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "638:   end",
          "640:   def try_ldflags(flags)",
          "644:   end",
          "646:   def try_static_assert(expr, headers = nil, opt = \"\", &b)",
          "",
          "[Removed Lines]",
          "641:     with_ldflags(flags) do",
          "642:       try_link(\"int main() {return 0;}\")",
          "643:     end",
          "",
          "[Added Lines]",
          "637:     try_link(MAIN_DOES_NOTHING, flags)",
          "",
          "---------------"
        ],
        "test/mkmf/base.rb||test/mkmf/base.rb": [
          "File: test/mkmf/base.rb -> test/mkmf/base.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: require 'test/unit'",
          "4: require 'mkmf'",
          "5: require 'tmpdir'",
          "7: $extout = '$(topdir)/'+RbConfig::CONFIG[\"EXTOUT\"]",
          "8: RbConfig::CONFIG['topdir'] = CONFIG['topdir'] = File.expand_path(CONFIG['topdir'])",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: require_relative '../ruby/envutil'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:       @buffer << s if @out",
          "50:     end",
          "51:   end",
          "53:   attr_reader :stdout",
          "55:   def mkmflog(msg)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53: end",
          "55: module TestMkmf::Base",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "84:     @tmpdir = Dir.mktmpdir",
          "85:     @curdir = Dir.pwd",
          "86:     @mkmfobj = Object.new",
          "88:     Dir.chdir(@tmpdir)",
          "89:     @quiet, Logging.quiet = Logging.quiet, true",
          "90:     init_mkmf",
          "",
          "[Removed Lines]",
          "87:     @stdout = Capture.new",
          "",
          "[Added Lines]",
          "90:     @stdout = TestMkmf::Capture.new",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "127:     nil",
          "128:   end",
          "129: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134: class TestMkmf",
          "135:   include TestMkmf::Base",
          "137:   def assert_separately(args, src, *rest)",
          "138:     super(args + [\"-r#{__FILE__}\"], \"extend TestMkmf::Base; setup\\n#{src}\", *rest)",
          "139:   end",
          "140: end",
          "",
          "---------------"
        ],
        "test/mkmf/test_flags.rb||test/mkmf/test_flags.rb": [
          "File: test/mkmf/test_flags.rb -> test/mkmf/test_flags.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:       $warnflags = warnflags",
          "32:       $extmk = val",
          "33:     end",
          "34:   end",
          "35: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:     def test_try_ldflag_invalid_opt",
          "36:       assert_separately([], <<-'end;') #do",
          "37:         assert(!try_ldflags(\"nosuch.c\"), TestMkmf::MKMFLOG)",
          "38:         assert(have_devel?, TestMkmf::MKMFLOG)",
          "39:       end;",
          "40:     end",
          "42:     def test_try_cflag_invalid_opt",
          "43:       assert_separately([], <<-'end;') #do",
          "44:         assert(!try_cflags(\"nosuch.c\"), TestMkmf::MKMFLOG)",
          "45:         assert(have_devel?, TestMkmf::MKMFLOG)",
          "46:       end;",
          "47:     end",
          "49:     def test_try_cppflag_invalid_opt",
          "50:       assert_separately([], <<-'end;') #do",
          "51:         assert(!try_cppflags(\"nosuch.c\"), TestMkmf::MKMFLOG)",
          "52:         assert(have_devel?, TestMkmf::MKMFLOG)",
          "53:       end;",
          "54:     end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-03-18\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 314",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 315",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d3fb88d09aea446e670eeab9864b333b22332451",
      "candidate_info": {
        "commit_hash": "d3fb88d09aea446e670eeab9864b333b22332451",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/d3fb88d09aea446e670eeab9864b333b22332451",
        "files": [
          "ChangeLog",
          "parse.y",
          "test/ruby/test_literal.rb",
          "version.h"
        ],
        "message": "merge revision(s) 51820: [Backport #11519]\n\n\t* parse.y (literal_concat_gen, evstr2dstr_gen): keep literal\n\t  encoding beginning with an interpolation same as the source file\n\t  encoding.  [ruby-core:70703] [Bug #11519]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51978 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "parse.y||parse.y",
          "test/ruby/test_literal.rb||test/ruby/test_literal.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "parse.y||parse.y": [
          "File: parse.y -> parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "8478:     htype = nd_type(head);",
          "8479:     if (htype == NODE_EVSTR) {",
          "8481:  head = list_append(node, head);",
          "8482:  htype = NODE_DSTR;",
          "8483:     }",
          "",
          "[Removed Lines]",
          "8480:  NODE *node = NEW_DSTR(Qnil);",
          "",
          "[Added Lines]",
          "8480:  NODE *node = NEW_DSTR(STR_NEW0());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8550: evstr2dstr_gen(struct parser_params *parser, NODE *node)",
          "8551: {",
          "8552:     if (nd_type(node) == NODE_EVSTR) {",
          "8554:     }",
          "8555:     return node;",
          "8556: }",
          "",
          "[Removed Lines]",
          "8553:  node = list_append(NEW_DSTR(Qnil), node);",
          "",
          "[Added Lines]",
          "8553:  node = list_append(NEW_DSTR(STR_NEW0()), node);",
          "",
          "---------------"
        ],
        "test/ruby/test_literal.rb||test/ruby/test_literal.rb": [
          "File: test/ruby/test_literal.rb -> test/ruby/test_literal.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:     assert_equal('FooBar', b, 'r3842')",
          "104:   end",
          "106:   def test_dsymbol",
          "107:     assert_equal :a3c, :\"a#{1+2}c\"",
          "108:   end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:   def test_dstring_encoding",
          "107:     bug11519 = '[ruby-core:70703] [Bug #11519]'",
          "108:     ['\"foo#{}\"', '\"#{}foo\"', '\"#{}\"'].each do |code|",
          "109:       a = eval(\"#-*- coding: utf-8 -*-\\n#{code}\")",
          "110:       assert_equal(Encoding::UTF_8, a.encoding,",
          "111:                    proc{\"#{bug11519}: #{code}.encoding\"})",
          "112:     end",
          "113:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-09-29\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 9",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 404",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 405",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb28e643423b08fb8b0b458cca7799992d8df156",
      "candidate_info": {
        "commit_hash": "fb28e643423b08fb8b0b458cca7799992d8df156",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/fb28e643423b08fb8b0b458cca7799992d8df156",
        "files": [
          "ChangeLog",
          "lib/net/ftp.rb",
          "test/net/ftp/test_ftp.rb",
          "version.h"
        ],
        "message": "merge revision(s) 53810: [Backport #12044]\n\n\t* net/ftp.rb: add NullSocket#closed? to fix closing not opened\n\t  connection.  [Fix GH-1232]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54277 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/net/ftp.rb||lib/net/ftp.rb",
          "test/net/ftp/test_ftp.rb||test/net/ftp/test_ftp.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/net/ftp.rb||lib/net/ftp.rb": [
          "File: lib/net/ftp.rb -> lib/net/ftp.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1070:       def read_timeout=(sec)",
          "1071:       end",
          "1073:       def close",
          "1074:       end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1073:       def closed?",
          "1074:         true",
          "1075:       end",
          "",
          "---------------"
        ],
        "test/net/ftp/test_ftp.rb||test/net/ftp/test_ftp.rb": [
          "File: test/net/ftp/test_ftp.rb -> test/net/ftp/test_ftp.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     end",
          "24:   end",
          "26:   def test_connect_fail",
          "27:     server = create_ftp_server { |sock|",
          "28:       sock.print(\"421 Service not available, closing control connection.\\r\\n\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:   def test_closed_when_not_connected",
          "27:     ftp = Net::FTP.new",
          "28:     assert_equal(true, ftp.closed?)",
          "29:     assert_nothing_raised(Net::FTPConnectionError) do",
          "30:       ftp.close",
          "31:     end",
          "32:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-03-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 474",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 475",
          "",
          "---------------"
        ]
      }
    }
  ]
}