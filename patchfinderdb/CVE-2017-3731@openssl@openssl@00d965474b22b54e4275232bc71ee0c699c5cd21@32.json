{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fad4832a121cde93a126a2a3f9b336c439d1749d",
      "candidate_info": {
        "commit_hash": "fad4832a121cde93a126a2a3f9b336c439d1749d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/fad4832a121cde93a126a2a3f9b336c439d1749d",
        "files": [
          "crypto/ui/ui_err.c",
          "crypto/ui/ui_openssl.c",
          "include/openssl/ui.h"
        ],
        "message": "VMS UI_OpenSSL: generate OpenSSL errors when things go wrong.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2063)\n(cherry picked from commit c922ebe23247ff9ee07310fa30647623c0547cd9)",
        "before_after_code_files": [
          "crypto/ui/ui_err.c||crypto/ui/ui_err.c",
          "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c",
          "include/openssl/ui.h||include/openssl/ui.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ui/ui_err.c||crypto/ui/ui_err.c": [
          "File: crypto/ui/ui_err.c -> crypto/ui/ui_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: # define ERR_REASON(reason) ERR_PACK(ERR_LIB_UI,0,reason)",
          "21: static ERR_STRING_DATA UI_str_functs[] = {",
          "22:     {ERR_FUNC(UI_F_GENERAL_ALLOCATE_BOOLEAN), \"general_allocate_boolean\"},",
          "23:     {ERR_FUNC(UI_F_GENERAL_ALLOCATE_PROMPT), \"general_allocate_prompt\"},",
          "24:     {ERR_FUNC(UI_F_OPEN_CONSOLE), \"open_console\"},",
          "25:     {ERR_FUNC(UI_F_UI_CREATE_METHOD), \"UI_create_method\"},",
          "26:     {ERR_FUNC(UI_F_UI_CTRL), \"UI_ctrl\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:     {ERR_FUNC(UI_F_CLOSE_CONSOLE), \"close_console\"},",
          "23:     {ERR_FUNC(UI_F_ECHO_CONSOLE), \"echo_console\"},",
          "26:     {ERR_FUNC(UI_F_NOECHO_CONSOLE), \"noecho_console\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:     {ERR_REASON(UI_R_PROCESSING_ERROR), \"processing error\"},",
          "46:     {ERR_REASON(UI_R_RESULT_TOO_LARGE), \"result too large\"},",
          "47:     {ERR_REASON(UI_R_RESULT_TOO_SMALL), \"result too small\"},",
          "48:     {ERR_REASON(UI_R_UNKNOWN_CONTROL_COMMAND), \"unknown control command\"},",
          "49:     {ERR_REASON(UI_R_UNKNOWN_TTYGET_ERRNO_VALUE),",
          "50:      \"unknown ttyget errno value\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:     {ERR_REASON(UI_R_SYSASSIGN_ERROR), \"sys$assign error\"},",
          "52:     {ERR_REASON(UI_R_SYSDASSGN_ERROR), \"sys$dassgn error\"},",
          "53:     {ERR_REASON(UI_R_SYSQIOW_ERROR), \"sys$qiow error\"},",
          "",
          "---------------"
        ],
        "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c": [
          "File: crypto/ui/ui_openssl.c -> crypto/ui/ui_openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "447:     status = sys$assign(&terminal, &channel, 0, 0);",
          "451:         return 0;",
          "453:     status = sys$qiow(0, channel, IO$_SENSEMODE, &iosb, 0, 0, tty_orig, 12,",
          "454:                       0, 0, 0, 0);",
          "",
          "[Removed Lines]",
          "450:     if (status != SS$_NORMAL)",
          "",
          "[Added Lines]",
          "450:     if (status != SS$_NORMAL) {",
          "451:         char tmp_num[12];",
          "453:         BIO_snprintf(tmp_num, sizeof(tmp_num) - 1, \"%%X%08X\", status);",
          "454:         UIerr(UI_F_OPEN_CONSOLE, UI_R_SYSASSIGN_ERROR);",
          "455:         ERR_add_error_data(2, \"status=\", tmp_num);",
          "457:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "478:         tty_new[2] = tty_orig[2];",
          "479:         status = sys$qiow(0, channel, IO$_SETMODE, &iosb, 0, 0, tty_new, 12,",
          "480:                           0, 0, 0, 0);",
          "482:             return 0;",
          "483:     }",
          "484: #endif",
          "485: #if defined(_WIN32) && !defined(_WIN32_WCE)",
          "",
          "[Removed Lines]",
          "481:         if ((status != SS$_NORMAL) || (iosb.iosb$w_value != SS$_NORMAL))",
          "",
          "[Added Lines]",
          "487:         if ((status != SS$_NORMAL) || (iosb.iosb$w_value != SS$_NORMAL)) {",
          "488:             char tmp_num[2][12];",
          "490:             BIO_snprintf(tmp_num[0], sizeof(tmp_num[0]) - 1, \"%%X%08X\",",
          "491:                          status);",
          "492:             BIO_snprintf(tmp_num[1], sizeof(tmp_num[1]) - 1, \"%%X%08X\",",
          "493:                          iosb.iosb$w_value);",
          "494:             UIerr(UI_F_NOECHO_CONSOLE, UI_R_SYSQIOW_ERROR);",
          "495:             ERR_add_error_data(5, \"status=\", tmp_num[0],",
          "496:                                \",\", \"iosb.iosb$w_value=\", tmp_num[1]);",
          "498:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "510:         tty_new[2] = tty_orig[2];",
          "511:         status = sys$qiow(0, channel, IO$_SETMODE, &iosb, 0, 0, tty_new, 12,",
          "512:                           0, 0, 0, 0);",
          "514:             return 0;",
          "515:     }",
          "516: #endif",
          "517: #if defined(_WIN32) && !defined(_WIN32_WCE)",
          "",
          "[Removed Lines]",
          "513:         if ((status != SS$_NORMAL) || (iosb.iosb$w_value != SS$_NORMAL))",
          "",
          "[Added Lines]",
          "529:         if ((status != SS$_NORMAL) || (iosb.iosb$w_value != SS$_NORMAL)) {",
          "530:             char tmp_num[2][12];",
          "532:             BIO_snprintf(tmp_num[0], sizeof(tmp_num[0]) - 1, \"%%X%08X\",",
          "533:                          status);",
          "534:             BIO_snprintf(tmp_num[1], sizeof(tmp_num[1]) - 1, \"%%X%08X\",",
          "535:                          iosb.iosb$w_value);",
          "536:             UIerr(UI_F_ECHO_CONSOLE, UI_R_SYSQIOW_ERROR);",
          "537:             ERR_add_error_data(5, \"status=\", tmp_num[0],",
          "538:                                \",\", \"iosb.iosb$w_value=\", tmp_num[1]);",
          "540:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "532:         fclose(tty_out);",
          "533: #ifdef OPENSSL_SYS_VMS",
          "534:     status = sys$dassgn(channel);",
          "536:         return 0;",
          "537: #endif",
          "538:     CRYPTO_THREAD_unlock(ui->lock);",
          "",
          "[Removed Lines]",
          "535:     if (status != SS$_NORMAL)",
          "",
          "[Added Lines]",
          "561:     if (status != SS$_NORMAL) {",
          "562:         char tmp_num[12];",
          "564:         BIO_snprintf(tmp_num, sizeof(tmp_num) - 1, \"%%X%08X\", status);",
          "565:         UIerr(UI_F_CLOSE_CONSOLE, UI_R_SYSDASSGN_ERROR);",
          "566:         ERR_add_error_data(2, \"status=\", tmp_num);",
          "568:     }",
          "",
          "---------------"
        ],
        "include/openssl/ui.h||include/openssl/ui.h": [
          "File: include/openssl/ui.h -> include/openssl/ui.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "342: # define UI_F_GENERAL_ALLOCATE_BOOLEAN                    108",
          "343: # define UI_F_GENERAL_ALLOCATE_PROMPT                     109",
          "344: # define UI_F_OPEN_CONSOLE                                114",
          "345: # define UI_F_UI_CREATE_METHOD                            112",
          "346: # define UI_F_UI_CTRL                                     111",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "342: # define UI_F_CLOSE_CONSOLE                               115",
          "343: # define UI_F_ECHO_CONSOLE                                116",
          "346: # define UI_F_NOECHO_CONSOLE                              117",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "362: # define UI_R_PROCESSING_ERROR                            107",
          "363: # define UI_R_RESULT_TOO_LARGE                            100",
          "364: # define UI_R_RESULT_TOO_SMALL                            101",
          "365: # define UI_R_UNKNOWN_CONTROL_COMMAND                     106",
          "366: # define UI_R_UNKNOWN_TTYGET_ERRNO_VALUE                  108",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "368: # define UI_R_SYSASSIGN_ERROR                             109",
          "369: # define UI_R_SYSDASSGN_ERROR                             110",
          "370: # define UI_R_SYSQIOW_ERROR                               111",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9c9d136156abf4741bddf04ee83807bbc013f353",
      "candidate_info": {
        "commit_hash": "9c9d136156abf4741bddf04ee83807bbc013f353",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9c9d136156abf4741bddf04ee83807bbc013f353",
        "files": [
          "include/openssl/ct.h"
        ],
        "message": "Remove obsolete error constant CT_F_CTLOG_NEW_NULL\n\nctlog_new_null() no longer exists.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit 333c2e43729a92cf37d4bd12d6a3531b4bd7e1da)",
        "before_after_code_files": [
          "include/openssl/ct.h||include/openssl/ct.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ct.h||include/openssl/ct.h": [
          "File: include/openssl/ct.h -> include/openssl/ct.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "482: # define CT_F_CTLOG_NEW                                   117",
          "483: # define CT_F_CTLOG_NEW_FROM_BASE64                       118",
          "484: # define CT_F_CTLOG_NEW_FROM_CONF                         119",
          "486: # define CT_F_CTLOG_STORE_LOAD_CTX_NEW                    122",
          "487: # define CT_F_CTLOG_STORE_LOAD_FILE                       123",
          "488: # define CT_F_CTLOG_STORE_LOAD_LOG                        130",
          "",
          "[Removed Lines]",
          "485: # define CT_F_CTLOG_NEW_NULL                              120",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f722f18e1a3560c13bd018711a30acca73c8d619",
      "candidate_info": {
        "commit_hash": "f722f18e1a3560c13bd018711a30acca73c8d619",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f722f18e1a3560c13bd018711a30acca73c8d619",
        "files": [
          "crypto/dso/dso_lib.c",
          "include/internal/dso.h",
          "util/libcrypto.num"
        ],
        "message": "Add a DSO_dsobyaddr() function\n\nThis works the same way as DSO_pathbyaddr() but instead returns a ptr to\nthe DSO that contains the provided symbol.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(cherry picked from commit b39eda7ee69a9277c722f8789736e00dc680cda6)",
        "before_after_code_files": [
          "crypto/dso/dso_lib.c||crypto/dso/dso_lib.c",
          "include/internal/dso.h||include/internal/dso.h",
          "util/libcrypto.num||util/libcrypto.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dso/dso_lib.c||crypto/dso/dso_lib.c": [
          "File: crypto/dso/dso_lib.c -> crypto/dso/dso_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:         return 1;",
          "74:     REF_ASSERT_ISNT(i < 0);",
          "79:     }",
          "81:     if ((dso->meth->finish != NULL) && !dso->meth->finish(dso)) {",
          "",
          "[Removed Lines]",
          "76:     if ((dso->meth->dso_unload != NULL) && !dso->meth->dso_unload(dso)) {",
          "77:         DSOerr(DSO_F_DSO_FREE, DSO_R_UNLOAD_FAILED);",
          "78:         return 0;",
          "",
          "[Added Lines]",
          "76:     if ((dso->flags & DSO_FLAG_NO_UNLOAD_ON_FREE) == 0) {",
          "77:         if ((dso->meth->dso_unload != NULL) && !dso->meth->dso_unload(dso)) {",
          "78:             DSOerr(DSO_F_DSO_FREE, DSO_R_UNLOAD_FAILED);",
          "79:             return 0;",
          "80:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "316:     return (*meth->pathbyaddr) (addr, path, sz);",
          "317: }",
          "319: void *DSO_global_lookup(const char *name)",
          "320: {",
          "321:     DSO_METHOD *meth = default_DSO_meth;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "321: DSO *DSO_dsobyaddr(void *addr, int flags)",
          "322: {",
          "323:     DSO *ret = NULL;",
          "324:     char *filename = NULL;",
          "325:     int len = DSO_pathbyaddr(addr, NULL, 0);",
          "327:     filename = OPENSSL_malloc(len);",
          "328:     if (filename != NULL",
          "329:             && DSO_pathbyaddr(addr, filename, len) == len)",
          "330:         ret = DSO_load(NULL, filename, NULL, flags);",
          "332:     OPENSSL_free(filename);",
          "333:     return ret;",
          "334: }",
          "",
          "---------------"
        ],
        "include/internal/dso.h||include/internal/dso.h": [
          "File: include/internal/dso.h -> include/internal/dso.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: # define DSO_FLAG_NAME_TRANSLATION_EXT_ONLY      0x02",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: # define DSO_FLAG_NO_UNLOAD_ON_FREE              0x04",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148: int DSO_pathbyaddr(void *addr, char *path, int sz);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158: DSO *DSO_dsobyaddr(void *addr, int flags);",
          "",
          "---------------"
        ],
        "util/libcrypto.num||util/libcrypto.num": [
          "File: util/libcrypto.num -> util/libcrypto.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "4207: OCSP_RESPID_set_by_key                  4158 1_1_0a EXIST::FUNCTION:OCSP",
          "4208: OCSP_RESPID_match                       4159 1_1_0a EXIST::FUNCTION:OCSP",
          "4209: DSO_pathbyaddr                          4170 1_1_0c EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4210: DSO_dsobyaddr                           4171 1_1_0c EXIST::FUNCTION:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75249be2ce76a75953869f9d249ef0ec8f701d94",
      "candidate_info": {
        "commit_hash": "75249be2ce76a75953869f9d249ef0ec8f701d94",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/75249be2ce76a75953869f9d249ef0ec8f701d94",
        "files": [
          "crypto/dh/dh_key.c"
        ],
        "message": "Fix error handling in compute_key, BN_CTX_get can return NULL\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2132)\n(cherry picked from commit 7928ee4d685b727619555bc1ec0aee805f6fc8c4)",
        "before_after_code_files": [
          "crypto/dh/dh_key.c||crypto/dh/dh_key.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dh/dh_key.c||crypto/dh/dh_key.c": [
          "File: crypto/dh/dh_key.c -> crypto/dh/dh_key.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:         goto err;",
          "160:     BN_CTX_start(ctx);",
          "161:     tmp = BN_CTX_get(ctx);",
          "163:     if (dh->priv_key == NULL) {",
          "164:         DHerr(DH_F_COMPUTE_KEY, DH_R_NO_PRIVATE_VALUE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:     if (tmp == NULL)",
          "163:         goto err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4944142b82d557799c2a73361202a07a54fd69d",
      "candidate_info": {
        "commit_hash": "f4944142b82d557799c2a73361202a07a54fd69d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f4944142b82d557799c2a73361202a07a54fd69d",
        "files": [
          "include/openssl/ec.h"
        ],
        "message": "Fix function documentation\n\nCLA: trivial\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2972)\n(cherry picked from commit f5fd3848fe5033534b92d2d18ed6fbd16741a0a2)",
        "before_after_code_files": [
          "include/openssl/ec.h||include/openssl/ec.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ec.h||include/openssl/ec.h": [
          "File: include/openssl/ec.h -> include/openssl/ec.h"
        ]
      }
    }
  ]
}