{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2dccebd4b829fbc53358568c348272f1e56522ba",
      "candidate_info": {
        "commit_hash": "2dccebd4b829fbc53358568c348272f1e56522ba",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2dccebd4b829fbc53358568c348272f1e56522ba",
        "files": [
          "tools/msvs/msi/product.wxs"
        ],
        "message": "windows msi: set icon for add/remove programs dialog",
        "before_after_code_files": [
          "tools/msvs/msi/product.wxs||tools/msvs/msi/product.wxs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/msvs/msi/product.wxs||tools/msvs/msi/product.wxs": [
          "File: tools/msvs/msi/product.wxs -> tools/msvs/msi/product.wxs",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     <MajorUpgrade AllowSameVersionUpgrades=\"yes\"",
          "24:                   DowngradeErrorMessage=\"A later version of node.js is already installed. Setup will now exit.\" />",
          "26:     <Directory Id=\"TARGETDIR\" Name=\"SourceDir\">",
          "28:       <Directory Id=\"ProgramMenuFolder\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:     <Icon Id=\"node.exe\" SourceFile=\"$(var.SourceDir)\\node.exe\"/>",
          "27:     <Property Id=\"ARPPRODUCTICON\" Value=\"node.exe\" />",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "285d8c658914d43cb39bacbde1ae62d8f6be25cf",
      "candidate_info": {
        "commit_hash": "285d8c658914d43cb39bacbde1ae62d8f6be25cf",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/285d8c658914d43cb39bacbde1ae62d8f6be25cf",
        "files": [
          "lib/buffer.js"
        ],
        "message": "buffer: align fast buffers on 8 byte boundary\n\nPrevents alignment issues when people create a typed array from a buffer.\nUnaligned loads or stores are less efficent and (on some architectures) unsafe.",
        "before_after_code_files": [
          "lib/buffer.js||libuffer.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/buffer.js||libuffer.js": [
          "File: lib/buffer.js -> libuffer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "250:       this.parent = pool;",
          "251:       this.offset = pool.used;",
          "252:       pool.used += this.length;",
          "253:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "57f785151aa68b1d01c6ca1b08be379fc5e8b538",
      "candidate_info": {
        "commit_hash": "57f785151aa68b1d01c6ca1b08be379fc5e8b538",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/57f785151aa68b1d01c6ca1b08be379fc5e8b538",
        "files": [
          "tools/install.py"
        ],
        "message": "install: install the \"wafadmin\" files into the correct directory\n\nBefore they were just being copied into \"lib/node/\".\nNow they go into \"lib/node/wafadmin/\".",
        "before_after_code_files": [
          "tools/install.py||tools/install.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/install.py||tools/install.py": [
          "File: tools/install.py -> tools/install.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:           'tools/wafadmin/Tools/xlc.py',",
          "126:           'tools/wafadmin/Tools/xlcxx.py',",
          "127:           'tools/wafadmin/Utils.py'],",
          "130: def update_shebang(path, shebang):",
          "131:   print 'updating shebang of %s' % path",
          "",
          "[Removed Lines]",
          "128:           'lib/node/')",
          "",
          "[Added Lines]",
          "128:           'lib/node/wafadmin/')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eaf13431003b92521e3277dd7fa5dd223407052f",
      "candidate_info": {
        "commit_hash": "eaf13431003b92521e3277dd7fa5dd223407052f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/eaf13431003b92521e3277dd7fa5dd223407052f",
        "files": [
          "src/node_crypto.cc"
        ],
        "message": "crypto: remove legacy openssl compatibility code\n\nRemove code that works around a padding bug in older versions of openssl, the\nbundled version of openssl contains the bug fix.",
        "before_after_code_files": [
          "src/node_crypto.cc||src/node_crypto.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2153: }",
          "2216: class Cipher : public ObjectWrap {",
          "2217:  public:",
          "2218:   static void Initialize (v8::Handle<v8::Object> target) {",
          "",
          "[Removed Lines]",
          "2159: int local_EVP_DecryptFinal_ex(EVP_CIPHER_CTX *ctx,",
          "2160:                               unsigned char *out,",
          "2161:                               int *outl) {",
          "2162:   int i,b;",
          "2163:   int n;",
          "2166:   b=ctx->cipher->block_size;",
          "2168:   if (ctx->flags & EVP_CIPH_NO_PADDING) {",
          "2169:     if(ctx->buf_len) {",
          "2170:       EVPerr(EVP_F_EVP_DECRYPTFINAL,EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH);",
          "2171:       return 0;",
          "2172:     }",
          "2174:     return 1;",
          "2175:   }",
          "2177:   if (b > 1) {",
          "2178:     if (ctx->buf_len || !ctx->final_used) {",
          "2179:       EVPerr(EVP_F_EVP_DECRYPTFINAL,EVP_R_WRONG_FINAL_BLOCK_LENGTH);",
          "2180:       return(0);",
          "2181:     }",
          "2183:     if (b > (int)(sizeof(ctx->final) / sizeof(ctx->final[0]))) {",
          "2184:       EVPerr(EVP_F_EVP_DECRYPTFINAL,EVP_R_BAD_DECRYPT);",
          "2185:       return(0);",
          "2186:     }",
          "2188:     n=ctx->final[b-1];",
          "2190:     if (n > b) {",
          "2191:       EVPerr(EVP_F_EVP_DECRYPTFINAL,EVP_R_BAD_DECRYPT);",
          "2192:       return(0);",
          "2193:     }",
          "2195:     for (i=0; i<n; i++) {",
          "2196:       if (ctx->final[--b] != n) {",
          "2197:         EVPerr(EVP_F_EVP_DECRYPTFINAL,EVP_R_BAD_DECRYPT);",
          "2198:         return(0);",
          "2199:       }",
          "2200:     }",
          "2202:     n=ctx->cipher->block_size-n;",
          "2204:     for (i=0; i<n; i++) {",
          "2205:       out[i]=ctx->final[i];",
          "2206:     }",
          "2208:   } else {",
          "2210:   }",
          "2212:   return(1);",
          "2213: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2618:     NODE_SET_PROTOTYPE_METHOD(t, \"init\", DecipherInit);",
          "2619:     NODE_SET_PROTOTYPE_METHOD(t, \"initiv\", DecipherInitIv);",
          "2620:     NODE_SET_PROTOTYPE_METHOD(t, \"update\", DecipherUpdate);",
          "2624:     NODE_SET_PROTOTYPE_METHOD(t, \"setAutoPadding\", SetAutoPadding);",
          "2626:     target->Set(String::NewSymbol(\"Decipher\"), t->GetFunction());",
          "",
          "[Removed Lines]",
          "2621:     NODE_SET_PROTOTYPE_METHOD(t, \"final\", DecipherFinal<false>);",
          "2623:     NODE_SET_PROTOTYPE_METHOD(t, \"finaltol\", DecipherFinal<true>);",
          "",
          "[Added Lines]",
          "2561:     NODE_SET_PROTOTYPE_METHOD(t, \"final\", DecipherFinal);",
          "2562:     NODE_SET_PROTOTYPE_METHOD(t, \"finaltol\", DecipherFinal); // remove someday",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2710:   }",
          "2714:   int DecipherFinal(unsigned char** out, int *out_len) {",
          "2715:     int r;",
          "",
          "[Removed Lines]",
          "2713:   template <bool TOLERATE_PADDING>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2721:     }",
          "2729:     EVP_CIPHER_CTX_cleanup(&ctx);",
          "2730:     initialised_ = false;",
          "2731:     return r;",
          "",
          "[Removed Lines]",
          "2724:     if (TOLERATE_PADDING) {",
          "2725:       r = local_EVP_DecryptFinal_ex(&ctx,*out,out_len);",
          "2726:     } else {",
          "2727:       r = EVP_CipherFinal_ex(&ctx,*out,out_len);",
          "2728:     }",
          "",
          "[Added Lines]",
          "2662:     r = EVP_CipherFinal_ex(&ctx,*out,out_len);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2975:     return Undefined();",
          "2976:   }",
          "2979:   static Handle<Value> DecipherFinal(const Arguments& args) {",
          "2980:     HandleScope scope;",
          "",
          "[Removed Lines]",
          "2978:   template <bool TOLERATE_PADDING>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2985:     int out_len = -1;",
          "2986:     Local<Value> outString;",
          "2990:     assert(out_value != NULL);",
          "2991:     assert(out_len != -1);",
          "",
          "[Removed Lines]",
          "2988:     int r = cipher->DecipherFinal<TOLERATE_PADDING>(&out_value, &out_len);",
          "",
          "[Added Lines]",
          "2921:     int r = cipher->DecipherFinal(&out_value, &out_len);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0385b17ce06b7c12ad3e4035477f6a0cf897580e",
      "candidate_info": {
        "commit_hash": "0385b17ce06b7c12ad3e4035477f6a0cf897580e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0385b17ce06b7c12ad3e4035477f6a0cf897580e",
        "files": [
          "lib/fs.js"
        ],
        "message": "fs: fix infinite loop in fs.readFileSync()\n\nFix an infinite loop in the case where the file got truncated by a concurrent\nwriter while fs.readFileSync() was busy reading in the file.",
        "before_after_code_files": [
          "lib/fs.js||lifs.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:     }",
          "223:     pos += bytesRead;",
          "230:   }",
          "232:   fs.closeSync(fd);",
          "",
          "[Removed Lines]",
          "225:     if (size !== 0) {",
          "226:       done = pos >= size;",
          "227:     } else {",
          "228:       done = bytesRead >= 0;",
          "229:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234:   if (size === 0) {",
          "236:     buffer = Buffer.concat(buffers, pos);",
          "237:   }",
          "239:   if (encoding) buffer = buffer.toString(encoding);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}