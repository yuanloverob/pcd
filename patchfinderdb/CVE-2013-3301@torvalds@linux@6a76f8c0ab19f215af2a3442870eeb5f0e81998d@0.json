{
  "cve_id": "CVE-2013-3301",
  "cve_desc": "The ftrace implementation in the Linux kernel before 3.8.8 allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by leveraging the CAP_SYS_ADMIN capability for write access to the (1) set_ftrace_pid or (2) set_graph_function file, and then making an lseek system call.",
  "repo": "torvalds/linux",
  "patch_hash": "6a76f8c0ab19f215af2a3442870eeb5f0e81998d",
  "patch_info": {
    "commit_hash": "6a76f8c0ab19f215af2a3442870eeb5f0e81998d",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/6a76f8c0ab19f215af2a3442870eeb5f0e81998d",
    "files": [
      "include/linux/ftrace.h",
      "kernel/trace/ftrace.c",
      "kernel/trace/trace_stack.c"
    ],
    "message": "tracing: Fix possible NULL pointer dereferences\n\nCurrently set_ftrace_pid and set_graph_function files use seq_lseek\nfor their fops.  However seq_open() is called only for FMODE_READ in\nthe fops->open() so that if an user tries to seek one of those file\nwhen she open it for writing, it sees NULL seq_file and then panic.\n\nIt can be easily reproduced with following command:\n\n  $ cd /sys/kernel/debug/tracing\n  $ echo 1234 | sudo tee -a set_ftrace_pid\n\nIn this example, GNU coreutils' tee opens the file with fopen(, \"a\")\nand then the fopen() internally calls lseek().\n\nLink: http://lkml.kernel.org/r/1365663302-2170-1-git-send-email-namhyung@kernel.org\n\nCc: Frederic Weisbecker <fweisbec@gmail.com>\nCc: Ingo Molnar <mingo@kernel.org>\nCc: Namhyung Kim <namhyung.kim@lge.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Namhyung Kim <namhyung@kernel.org>\nSigned-off-by: Steven Rostedt <rostedt@goodmis.org>",
    "before_after_code_files": [
      "include/linux/ftrace.h||include/linux/ftrace.h",
      "kernel/trace/ftrace.c||kernel/trace/ftrace.c",
      "kernel/trace/trace_stack.c||kernel/trace/trace_stack.c"
    ]
  },
  "patch_diff": {
    "include/linux/ftrace.h||include/linux/ftrace.h": [
      "File: include/linux/ftrace.h -> include/linux/ftrace.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "396:        size_t cnt, loff_t *ppos);",
      "397: ssize_t ftrace_notrace_write(struct file *file, const char __user *ubuf,",
      "398:         size_t cnt, loff_t *ppos);",
      "400: int ftrace_regex_release(struct inode *inode, struct file *file);",
      "402: void __init",
      "",
      "[Removed Lines]",
      "399: loff_t ftrace_regex_lseek(struct file *file, loff_t offset, int whence);",
      "",
      "[Added Lines]",
      "399: loff_t ftrace_filter_lseek(struct file *file, loff_t offset, int whence);",
      "",
      "---------------"
    ],
    "kernel/trace/ftrace.c||kernel/trace/ftrace.c": [
      "File: kernel/trace/ftrace.c -> kernel/trace/ftrace.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2697: }",
      "2699: loff_t",
      "2701: {",
      "2702:  loff_t ret;",
      "",
      "[Removed Lines]",
      "2700: ftrace_regex_lseek(struct file *file, loff_t offset, int whence)",
      "",
      "[Added Lines]",
      "2700: ftrace_filter_lseek(struct file *file, loff_t offset, int whence)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3570:  .open = ftrace_filter_open,",
      "3571:  .read = seq_read,",
      "3572:  .write = ftrace_filter_write,",
      "3574:  .release = ftrace_regex_release,",
      "3575: };",
      "",
      "[Removed Lines]",
      "3573:  .llseek = ftrace_regex_lseek,",
      "",
      "[Added Lines]",
      "3573:  .llseek = ftrace_filter_lseek,",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3578:  .open = ftrace_notrace_open,",
      "3579:  .read = seq_read,",
      "3580:  .write = ftrace_notrace_write,",
      "3582:  .release = ftrace_regex_release,",
      "3583: };",
      "",
      "[Removed Lines]",
      "3581:  .llseek = ftrace_regex_lseek,",
      "",
      "[Added Lines]",
      "3581:  .llseek = ftrace_filter_lseek,",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3783:  .open  = ftrace_graph_open,",
      "3784:  .read  = seq_read,",
      "3785:  .write  = ftrace_graph_write,",
      "3786:  .release = ftrace_graph_release,",
      "3788: };",
      "",
      "[Removed Lines]",
      "3787:  .llseek  = seq_lseek,",
      "",
      "[Added Lines]",
      "3786:  .llseek  = ftrace_filter_lseek,",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "4439:  .open  = ftrace_pid_open,",
      "4440:  .write  = ftrace_pid_write,",
      "4441:  .read  = seq_read,",
      "4443:  .release = ftrace_pid_release,",
      "4444: };",
      "",
      "[Removed Lines]",
      "4442:  .llseek  = seq_lseek,",
      "",
      "[Added Lines]",
      "4442:  .llseek  = ftrace_filter_lseek,",
      "",
      "---------------"
    ],
    "kernel/trace/trace_stack.c||kernel/trace/trace_stack.c": [
      "File: kernel/trace/trace_stack.c -> kernel/trace/trace_stack.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "322:  .open = stack_trace_filter_open,",
      "323:  .read = seq_read,",
      "324:  .write = ftrace_filter_write,",
      "326:  .release = ftrace_regex_release,",
      "327: };",
      "",
      "[Removed Lines]",
      "325:  .llseek = ftrace_regex_lseek,",
      "",
      "[Added Lines]",
      "325:  .llseek = ftrace_filter_lseek,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "098c879e1f2d6ee7afbfe959f6b04070065cec90",
      "candidate_info": {
        "commit_hash": "098c879e1f2d6ee7afbfe959f6b04070065cec90",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/098c879e1f2d6ee7afbfe959f6b04070065cec90",
        "files": [
          "include/linux/ftrace.h",
          "kernel/trace/ftrace.c",
          "kernel/trace/trace.c",
          "kernel/trace/trace.h",
          "kernel/trace/trace_events_trigger.c",
          "kernel/trace/trace_stack.c"
        ],
        "message": "tracing: Add generic tracing_lseek() function\n\nTrace event triggers added a lseek that uses the ftrace_filter_lseek()\nfunction. Unfortunately, when function tracing is not configured in\nthat function is not defined and the kernel fails to build.\n\nThis is the second time that function was added to a file ops and\nit broke the build due to requiring special config dependencies.\n\nMake a generic tracing_lseek() that all the tracing utilities may\nuse.\n\nAlso, modify the old ftrace_filter_lseek() to return 0 instead of\n1 on WRONLY. Not sure why it was a 1 as that does not make sense.\n\nThis also changes the old tracing_seek() to modify the file pos\npointer on WRONLY as well.\n\nReported-by: kbuild test robot <fengguang.wu@intel.com>\nTested-by: Tom Zanussi <tom.zanussi@linux.intel.com>\nAcked-by: Tom Zanussi <tom.zanussi@linux.intel.com>\nSigned-off-by: Steven Rostedt <rostedt@goodmis.org>",
        "before_after_code_files": [
          "include/linux/ftrace.h||include/linux/ftrace.h",
          "kernel/trace/ftrace.c||kernel/trace/ftrace.c",
          "kernel/trace/trace.c||kernel/trace/trace.c",
          "kernel/trace/trace.h||kernel/trace/trace.h",
          "kernel/trace/trace_events_trigger.c||kernel/trace/trace_events_trigger.c",
          "kernel/trace/trace_stack.c||kernel/trace/trace_stack.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/linux/ftrace.h||include/linux/ftrace.h",
            "kernel/trace/ftrace.c||kernel/trace/ftrace.c",
            "kernel/trace/trace_stack.c||kernel/trace/trace_stack.c"
          ],
          "candidate": [
            "include/linux/ftrace.h||include/linux/ftrace.h",
            "kernel/trace/ftrace.c||kernel/trace/ftrace.c",
            "kernel/trace/trace_stack.c||kernel/trace/trace_stack.c"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/ftrace.h||include/linux/ftrace.h": [
          "File: include/linux/ftrace.h -> include/linux/ftrace.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "570: ftrace_regex_release(struct inode *inode, struct file *file) { return -ENODEV; }",
          "576: void ftrace_kill(void);",
          "",
          "[Removed Lines]",
          "573: loff_t ftrace_filter_lseek(struct file *file, loff_t offset, int whence);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "kernel/trace/ftrace.c||kernel/trace/ftrace.c": [
          "File: kernel/trace/ftrace.c -> kernel/trace/ftrace.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1083: static struct pid * const ftrace_swapper_pid = &init_struct_pid;",
          "1098: #ifdef CONFIG_DYNAMIC_FTRACE",
          "1100: #ifndef CONFIG_FTRACE_MCOUNT_RECORD",
          "",
          "[Removed Lines]",
          "1085: loff_t",
          "1086: ftrace_filter_lseek(struct file *file, loff_t offset, int whence)",
          "1087: {",
          "1088:  loff_t ret;",
          "1090:  if (file->f_mode & FMODE_READ)",
          "1091:   ret = seq_lseek(file, offset, whence);",
          "1092:  else",
          "1093:   file->f_pos = ret = 1;",
          "1095:  return ret;",
          "1096: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3767:  .open = ftrace_filter_open,",
          "3768:  .read = seq_read,",
          "3769:  .write = ftrace_filter_write,",
          "3771:  .release = ftrace_regex_release,",
          "3772: };",
          "",
          "[Removed Lines]",
          "3770:  .llseek = ftrace_filter_lseek,",
          "",
          "[Added Lines]",
          "3757:  .llseek = tracing_lseek,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3775:  .open = ftrace_notrace_open,",
          "3776:  .read = seq_read,",
          "3777:  .write = ftrace_notrace_write,",
          "3779:  .release = ftrace_regex_release,",
          "3780: };",
          "",
          "[Removed Lines]",
          "3778:  .llseek = ftrace_filter_lseek,",
          "",
          "[Added Lines]",
          "3765:  .llseek = tracing_lseek,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4038:  .open  = ftrace_graph_open,",
          "4039:  .read  = seq_read,",
          "4040:  .write  = ftrace_graph_write,",
          "4042:  .release = ftrace_graph_release,",
          "4043: };",
          "",
          "[Removed Lines]",
          "4041:  .llseek  = ftrace_filter_lseek,",
          "",
          "[Added Lines]",
          "4028:  .llseek  = tracing_lseek,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4046:  .open  = ftrace_graph_notrace_open,",
          "4047:  .read  = seq_read,",
          "4048:  .write  = ftrace_graph_write,",
          "4050:  .release = ftrace_graph_release,",
          "4051: };",
          "",
          "[Removed Lines]",
          "4049:  .llseek  = ftrace_filter_lseek,",
          "",
          "[Added Lines]",
          "4036:  .llseek  = tracing_lseek,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4719:  .open  = ftrace_pid_open,",
          "4720:  .write  = ftrace_pid_write,",
          "4721:  .read  = seq_read,",
          "4723:  .release = ftrace_pid_release,",
          "4724: };",
          "",
          "[Removed Lines]",
          "4722:  .llseek  = ftrace_filter_lseek,",
          "",
          "[Added Lines]",
          "4709:  .llseek  = tracing_lseek,",
          "",
          "---------------"
        ],
        "kernel/trace/trace.c||kernel/trace/trace.c": [
          "File: kernel/trace/trace.c -> kernel/trace/trace.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3183:  return count;",
          "3184: }",
          "3187: {",
          "3188:  if (file->f_mode & FMODE_READ)",
          "3190:  else",
          "3192: }",
          "3194: static const struct file_operations tracing_fops = {",
          "3195:  .open  = tracing_open,",
          "3196:  .read  = seq_read,",
          "3197:  .write  = tracing_write_stub,",
          "3199:  .release = tracing_release,",
          "3200: };",
          "",
          "[Removed Lines]",
          "3186: static loff_t tracing_seek(struct file *file, loff_t offset, int origin)",
          "3189:   return seq_lseek(file, offset, origin);",
          "3191:   return 0;",
          "3198:  .llseek  = tracing_seek,",
          "",
          "[Added Lines]",
          "3186: loff_t tracing_lseek(struct file *file, loff_t offset, int whence)",
          "3188:  int ret;",
          "3191:   ret = seq_lseek(file, offset, whence);",
          "3193:   file->f_pos = ret = 0;",
          "3195:  return ret;",
          "3202:  .llseek  = tracing_lseek,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4940:  .open  = tracing_snapshot_open,",
          "4941:  .read  = seq_read,",
          "4942:  .write  = tracing_snapshot_write,",
          "4944:  .release = tracing_snapshot_release,",
          "4945: };",
          "",
          "[Removed Lines]",
          "4943:  .llseek  = tracing_seek,",
          "",
          "[Added Lines]",
          "4947:  .llseek  = tracing_lseek,",
          "",
          "---------------"
        ],
        "kernel/trace/trace.h||kernel/trace/trace.h": [
          "File: kernel/trace/trace.h -> kernel/trace/trace.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "588: int register_tracer(struct tracer *type);",
          "589: int is_tracing_stopped(void);",
          "591: extern cpumask_var_t __read_mostly tracing_buffer_mask;",
          "593: #define for_each_tracing_cpu(cpu) \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "591: loff_t tracing_lseek(struct file *file, loff_t offset, int whence);",
          "",
          "---------------"
        ],
        "kernel/trace/trace_events_trigger.c||kernel/trace/trace_events_trigger.c": [
          "File: kernel/trace/trace_events_trigger.c -> kernel/trace/trace_events_trigger.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "281:  .open = event_trigger_open,",
          "282:  .read = seq_read,",
          "283:  .write = event_trigger_write,",
          "285:  .release = event_trigger_release,",
          "286: };",
          "",
          "[Removed Lines]",
          "284:  .llseek = ftrace_filter_lseek,",
          "",
          "[Added Lines]",
          "284:  .llseek = tracing_lseek,",
          "",
          "---------------"
        ],
        "kernel/trace/trace_stack.c||kernel/trace/trace_stack.c": [
          "File: kernel/trace/trace_stack.c -> kernel/trace/trace_stack.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "382:  .open = stack_trace_filter_open,",
          "383:  .read = seq_read,",
          "384:  .write = ftrace_filter_write,",
          "386:  .release = ftrace_regex_release,",
          "387: };",
          "",
          "[Removed Lines]",
          "385:  .llseek = ftrace_filter_lseek,",
          "",
          "[Added Lines]",
          "385:  .llseek = tracing_lseek,",
          "",
          "---------------"
        ]
      }
    }
  ]
}