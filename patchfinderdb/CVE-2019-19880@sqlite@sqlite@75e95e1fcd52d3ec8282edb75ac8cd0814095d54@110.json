{
  "cve_id": "CVE-2019-19880",
  "cve_desc": "exprListAppendList in window.c in SQLite 3.30.1 allows attackers to trigger an invalid pointer dereference because constant integer values in ORDER BY clauses of window definitions are mishandled.",
  "repo": "sqlite/sqlite",
  "patch_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
  "patch_info": {
    "commit_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/window.c"
    ],
    "message": "When processing constant integer values in ORDER BY clauses of window definitions (see check-in [7e4809eadfe99ebf]) be sure to fully disable the constant value to avoid an invalid pointer dereference if the expression is ever duplicated. This fixes a crash report from Yongheng and Rui.\n\nFossilOrigin-Name: 1ca0bd982ab1183bbafce0d260e4dceda5eb766ed2e7793374a88d1ae0bdd2ca",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8223e79f987feda5c8e51ec52cec6798cca16d070b10558939e2888ca1a25b8e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "895:     int nInit = pList ? pList->nExpr : 0;",
      "896:     for(i=0; i<pAppend->nExpr; i++){",
      "897:       Expr *pDup = sqlite3ExprDup(pParse->db, pAppend->a[i].pExpr, 0);",
      "898:       if( bIntToNull && pDup && pDup->op==TK_INTEGER ){",
      "899:         pDup->op = TK_NULL;",
      "900:         pDup->flags &= ~(EP_IntValue|EP_IsTrue|EP_IsFalse);",
      "901:       }",
      "902:       pList = sqlite3ExprListAppend(pParse, pList, pDup);",
      "903:       if( pList ) pList->a[nInit+i].sortFlags = pAppend->a[i].sortFlags;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "898:       assert( pDup==0 || !ExprHasProperty(pDup, EP_MemToken) );",
      "902:         pDup->u.zToken = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "579d41dc8d938a936e3e8f19a114ed351b724dd0",
      "candidate_info": {
        "commit_hash": "579d41dc8d938a936e3e8f19a114ed351b724dd0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/579d41dc8d938a936e3e8f19a114ed351b724dd0",
        "files": [
          "Makefile.in",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix the checksymbols target in Makefile.in.\n\nFossilOrigin-Name: 1956eb348170a9a873878b522f377fa7303cdb3beca41f5515b6b9da1b1f544d",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1372: # releasetest.tcl script.",
          "1373: #",
          "1374: VALIDIDS=' sqlite3(changeset|changegroup|session)?_'",
          "1377:  echo '0 errors out of 1 tests'",
          "1379: # Build the amalgamation-autoconf package.  The amalamgation-tarball target builds",
          "",
          "[Removed Lines]",
          "1375: checksymbols: sqlite3.lo",
          "1376:  nm -g --defined-only sqlite3.lo | egrep -v $(VALIDIDS); test $$? -ne 0",
          "",
          "[Added Lines]",
          "1375: checksymbols: sqlite3.o",
          "1376:  nm -g --defined-only sqlite3.o",
          "1377:  nm -g --defined-only sqlite3.o | egrep -v $(VALIDIDS); test $$? -ne 0",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c47e53b4d0f29628bd20ba3daf7e759c4bfed07710d982c095445c01376d57f5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acf6e08d20a663de5d4012effba666675bd23fe9",
      "candidate_info": {
        "commit_hash": "acf6e08d20a663de5d4012effba666675bd23fe9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/acf6e08d20a663de5d4012effba666675bd23fe9",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/lemon.c"
        ],
        "message": "Fix typo for one instance of line number handling in the Lemon tool.\n\nFossilOrigin-Name: 980be1730dc1239c63a107923bf2e32b4ec7d4bc31b9190e711cc35f18cc2bb4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/lemon.c||tool/lemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a97804620a27acc30bebd2aaa04e38f2f36de48b0931038ca8bdc9cb0c36b8f4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/lemon.c||tool/lemon.c": [
          "File: tool/lemon.c -> tool/lemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4426:     }",
          "4427:     i++;",
          "4428:   }",
          "4430:   fprintf(out, \"};\\n\"); lineno++;",
          "",
          "[Removed Lines]",
          "4429:   if( j>0 ) fprintf(out, \"\\n\"); lineno++;",
          "",
          "[Added Lines]",
          "4429:   if( j>0 ){ fprintf(out, \"\\n\"); lineno++; }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71fddaf195df9848b95a96e20bc5401b8e267858",
      "candidate_info": {
        "commit_hash": "71fddaf195df9848b95a96e20bc5401b8e267858",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/71fddaf195df9848b95a96e20bc5401b8e267858",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/window8.tcl",
          "test/window8.test"
        ],
        "message": "Fix problems with \"RANGE ... ORDER BY <expr> DESC\" window frames.\n\nFossilOrigin-Name: e7bced731aa071c95bc398cdecd53c939841bf0c52fbcd06e47ba68f8c5cc35a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/window8.tcl||test/window8.tcl",
          "test/window8.test||test/window8.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/window.c||src/window.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/window.c||src/window.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ffc32b246d92d53c66094afe11950b53ffab6a1c230c602eebbfedafb2eb57f4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1559:   Vdbe *v = sqlite3GetVdbe(pParse);",
          "1560:   int reg1 = sqlite3GetTempReg(pParse);",
          "1561:   int reg2 = sqlite3GetTempReg(pParse);",
          "1562:   windowReadPeerValues(p, csr1, reg1);",
          "1563:   windowReadPeerValues(p, csr2, reg2);",
          "1565:   sqlite3VdbeAddOp3(v, op, reg2, lbl, reg1);",
          "1566:   sqlite3VdbeAddOp2(v, OP_Rowid, csr1, reg1);",
          "1567:   sqlite3VdbeAddOp2(v, OP_Rowid, csr2, reg2);",
          "1568:   sqlite3VdbeAddOp3(v, OP_Gt, reg2, lbl, reg1);",
          "1569:   sqlite3ReleaseTempReg(pParse, reg1);",
          "1570:   sqlite3ReleaseTempReg(pParse, reg2);",
          "1573: }",
          "1575: static int windowCodeOp(",
          "",
          "[Removed Lines]",
          "1564:   sqlite3VdbeAddOp3(v, OP_Add, reg1, regVal, reg1);",
          "1572:   assert( op==OP_Ge || op==OP_Gt || op==OP_Lt || op==OP_Le );",
          "",
          "[Added Lines]",
          "1562:   int arith = OP_Add;",
          "1564:   assert( op==OP_Ge || op==OP_Gt || op==OP_Le );",
          "1565:   assert( p->pMWin->pOrderBy && p->pMWin->pOrderBy->nExpr==1 );",
          "1566:   if( p->pMWin->pOrderBy->a[0].sortOrder ){",
          "1567:     switch( op ){",
          "1568:       case OP_Ge: op = OP_Le; break;",
          "1569:       case OP_Gt: op = OP_Lt; break;",
          "1570:       default: assert( op==OP_Le ); op = OP_Ge; break;",
          "1571:     }",
          "1572:     arith = OP_Subtract;",
          "1573:   }",
          "1577:   sqlite3VdbeAddOp3(v, arith, regVal, reg1, reg1);",
          "",
          "---------------"
        ],
        "test/window8.tcl||test/window8.tcl": [
          "File: test/window8.tcl -> test/window8.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:   DROP TABLE IF EXISTS t1;",
          "96:   CREATE TABLE t1(a INTEGER, b INTEGER);",
          "97:   INSERT INTO t1 VALUES",
          "99: }",
          "101: foreach {tn frame} {",
          "102:   1 { ORDER BY a RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING }",
          "103:   2 { ORDER BY a RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING }",
          "104:   3 { ORDER BY a RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING }",
          "105: } {",
          "106:   execsql_test 2.$tn \"SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ($frame)\"",
          "107: }",
          "",
          "[Removed Lines]",
          "98:       (13, 26), (15, 30);",
          "",
          "[Added Lines]",
          "98:       (5, 10), (10, 20), (13, 26), (13, 26),",
          "99:       (15, 30), (20, 40), (22,80), (30, 90);",
          "106:   4 { ORDER BY a DESC RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING }",
          "107:   5 { ORDER BY a DESC RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING }",
          "108:   6 { ORDER BY a DESC RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING }",
          "",
          "---------------"
        ],
        "test/window8.test||test/window8.test": [
          "File: test/window8.test -> test/window8.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "439:   DROP TABLE IF EXISTS t1;",
          "440:   CREATE TABLE t1(a INTEGER, b INTEGER);",
          "441:   INSERT INTO t1 VALUES",
          "443: } {}",
          "445: do_execsql_test 2.1 {",
          "446:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING )",
          "449: do_execsql_test 2.2 {",
          "450:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING )",
          "453: do_execsql_test 2.3 {",
          "454:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING )",
          "457: finish_test",
          "",
          "[Removed Lines]",
          "442:       (13, 26), (15, 30);",
          "447: } {13 56   15 56}",
          "451: } {13 {}   15 {}}",
          "455: } {13 30   15 {}}",
          "",
          "[Added Lines]",
          "442:       (5, 10), (10, 20), (13, 26), (13, 26),",
          "443:       (15, 30), (20, 40), (22,80), (30, 90);",
          "448: } {5 30   10 112   13 102   13 102   15 142   20 150   22 120   30 90}",
          "452: } {5 {}   10 10   13 10   13 10   15 30   20 102   22 82   30 120}",
          "456: } {5 {}   10 52   13 30   13 30   15 {}   20 80   22 {}   30 {}}",
          "458: do_execsql_test 2.4 {",
          "459:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 5 PRECEDING AND 5 FOLLOWING )",
          "460: } {30 90   22 120   20 150   15 142   13 102   13 102   10 112   5 30}",
          "462: do_execsql_test 2.5 {",
          "463:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 10 PRECEDING AND 5 PRECEDING )",
          "464: } {30 {}   22 90   20 90   15 120   13 120   13 120   10 70   5 102}",
          "466: do_execsql_test 2.6 {",
          "467:   SELECT a, sum(b) OVER win FROM t1 WINDOW win AS ( ORDER BY a DESC RANGE BETWEEN 2 FOLLOWING AND 3 FOLLOWING )",
          "468: } {30 {}   22 40   20 {}   15 52   13 20   13 20   10 {}   5 {}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "efb02281a4266251292590b5e77ad56be22d1af9",
      "candidate_info": {
        "commit_hash": "efb02281a4266251292590b5e77ad56be22d1af9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/efb02281a4266251292590b5e77ad56be22d1af9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "src/build.c",
          "src/expr.c"
        ],
        "message": "Change sqlite3SelectDup() to always return NULL if an OOM has occurred.\n\nFossilOrigin-Name: 01ba4641ab436c6065c8725908fc0913f2abded4ea62e004b7534e0116b9451a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "src/build.c||src/build.c",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1ca5ef84506aac3e2f08baa36095b3befdeedf2a3443fcd9154a277b55cbf64b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1416:   int i;",
          "1417:   RenameCtx *p = pWalker->u.pRename;",
          "1418:   SrcList *pSrc = pSelect->pSrc;",
          "1421:     return WRC_Abort;",
          "1422:   }",
          "1423:   for(i=0; i<pSrc->nSrc; i++){",
          "",
          "[Removed Lines]",
          "1419:   if( pSrc==0 ){",
          "1420:     assert( pWalker->pParse->db->mallocFailed );",
          "",
          "[Added Lines]",
          "1419:   if( NEVER(pSrc==0) ){",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4143: void sqlite3SrcListAssignCursors(Parse *pParse, SrcList *pList){",
          "4144:   int i;",
          "4145:   struct SrcList_item *pItem;",
          "4148:     for(i=0, pItem=pList->a; i<pList->nSrc; i++, pItem++){",
          "4149:       if( pItem->iCursor>=0 ) break;",
          "4150:       pItem->iCursor = pParse->nTab++;",
          "",
          "[Removed Lines]",
          "4146:   assert(pList || pParse->db->mallocFailed );",
          "4147:   if( pList ){",
          "",
          "[Added Lines]",
          "4146:   if( ALWAYS(pList) ){",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1530:     pNext = pNew;",
          "1531:   }",
          "1533:   return pRet;",
          "1534: }",
          "1535: #else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1533:   if( db->mallocFailed ){",
          "1534:     sqlite3SelectDelete(db, pRet);",
          "1535:     pRet = 0;",
          "1536:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8b47f5208247277ee6eaf532e547d4995f56114b",
      "candidate_info": {
        "commit_hash": "8b47f5208247277ee6eaf532e547d4995f56114b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8b47f5208247277ee6eaf532e547d4995f56114b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/window8.tcl",
          "test/window8.test"
        ],
        "message": "Fix a bug in RANGE window functions that use \"ORDER BY <expr> DESC NULLS FIRST\" as the window-frame ORDER BY clause.\n\nFossilOrigin-Name: 39b4cad4a51bb5116d62ffb16ac36d96a9280321b049eb2d008605392f52a459",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/window8.tcl||test/window8.tcl",
          "test/window8.test||test/window8.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/window.c||src/window.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/window.c||src/window.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: dd66134817ecbda01c59a05ad0d6ac44bee700ab10cd2119c869dd69af293fe2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1865: static void windowCodeRangeTest(",
          "1866:   WindowCodeArg *p,",
          "1872: ){",
          "1873:   Parse *pParse = p->pParse;",
          "1874:   Vdbe *v = sqlite3GetVdbe(pParse);",
          "1883:   assert( op==OP_Ge || op==OP_Gt || op==OP_Le );",
          "1884:   assert( pOrderBy && pOrderBy->nExpr==1 );",
          "",
          "[Removed Lines]",
          "1868:   int csr1,",
          "1869:   int regVal,",
          "1870:   int csr2,",
          "1871:   int lbl",
          "1875:   int reg1 = sqlite3GetTempReg(pParse);",
          "1876:   int reg2 = sqlite3GetTempReg(pParse);",
          "1877:   int arith = OP_Add;",
          "1878:   int addrGe;",
          "1879:   ExprList *pOrderBy = p->pMWin->pOrderBy;",
          "1881:   int regString = ++pParse->nMem;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1891:     arith = OP_Subtract;",
          "1892:   }",
          "1894:   windowReadPeerValues(p, csr1, reg1);",
          "1895:   windowReadPeerValues(p, csr2, reg2);",
          "1900:   sqlite3VdbeAddOp4(v, OP_String8, 0, regString, 0, \"\", P4_STATIC);",
          "1901:   addrGe = sqlite3VdbeAddOp3(v, OP_Ge, regString, 0, reg1);",
          "1902:   VdbeCoverage(v);",
          "1903:   sqlite3VdbeAddOp3(v, arith, regVal, reg1, reg1);",
          "1904:   sqlite3VdbeJumpHere(v, addrGe);",
          "1905:   if( pOrderBy->a[0].sortFlags & KEYINFO_ORDER_BIGNULL ){",
          "1908:     switch( op ){",
          "1910:       case OP_Gt:",
          "1911:         sqlite3VdbeAddOp2(v, OP_NotNull, reg2, lbl); VdbeCoverage(v);",
          "1912:         break;",
          "1915:         sqlite3VdbeAddOp2(v, OP_IsNull, reg2, lbl); VdbeCoverage(v);",
          "1916:         break;",
          "1917:     }",
          "1919:     sqlite3VdbeJumpHere(v, addr);",
          "1920:     sqlite3VdbeAddOp2(v, OP_IsNull, reg2, lbl); VdbeCoverage(v);",
          "1921:     if( op==OP_Gt || op==OP_Ge ){",
          "1922:       sqlite3VdbeChangeP2(v, -1, sqlite3VdbeCurrentAddr(v)+1);",
          "1923:     }",
          "1924:   }",
          "1925:   sqlite3VdbeAddOp3(v, op, reg2, lbl, reg1); VdbeCoverage(v);",
          "1926:   sqlite3VdbeChangeP5(v, SQLITE_NULLEQ);",
          "1927:   assert( op==OP_Ge || op==OP_Gt || op==OP_Lt || op==OP_Le );",
          "1928:   testcase(op==OP_Ge); VdbeCoverageIf(v, op==OP_Ge);",
          "1929:   testcase(op==OP_Lt); VdbeCoverageIf(v, op==OP_Lt);",
          "1930:   testcase(op==OP_Le); VdbeCoverageIf(v, op==OP_Le);",
          "1931:   testcase(op==OP_Gt); VdbeCoverageIf(v, op==OP_Gt);",
          "1933:   sqlite3ReleaseTempReg(pParse, reg1);",
          "1934:   sqlite3ReleaseTempReg(pParse, reg2);",
          "1935: }",
          "",
          "[Removed Lines]",
          "1906:     int addr;",
          "1907:     addr = sqlite3VdbeAddOp1(v, OP_NotNull, reg1); VdbeCoverage(v);",
          "1909:       case OP_Ge: sqlite3VdbeAddOp2(v, OP_Goto, 0, lbl); break;",
          "1913:       default:",
          "1914:         assert( op==OP_Le );",
          "1918:     sqlite3VdbeAddOp2(v, OP_Goto, 0, sqlite3VdbeCurrentAddr(v)+2);",
          "",
          "[Added Lines]",
          "1909:   VdbeModuleComment((v, \"CodeRangeTest: if( R%d %s R%d %s R%d ) goto lbl\",",
          "1910:       reg1, (arith==OP_Add ? \"+\" : \"-\"), regVal,",
          "1911:       ((op==OP_Ge) ? \">=\" : (op==OP_Le) ? \"<=\" : (op==OP_Gt) ? \">\" : \"<\"), reg2",
          "1912:   ));",
          "1954:     int addr = sqlite3VdbeAddOp1(v, OP_NotNull, reg1); VdbeCoverage(v);",
          "1956:       case OP_Ge:",
          "1957:         sqlite3VdbeAddOp2(v, OP_Goto, 0, lbl);",
          "1958:         break;",
          "1962:       default: assert( op==OP_Le );",
          "1966:     sqlite3VdbeAddOp2(v, OP_Goto, 0, sqlite3VdbeCurrentAddr(v)+3);",
          "1990:   VdbeModuleComment((v, \"CodeRangeTest: end\"));",
          "",
          "---------------"
        ],
        "test/window8.tcl||test/window8.tcl": [
          "File: test/window8.tcl -> test/window8.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "247:   ) FROM t1 ORDER BY 1 NULLS LAST;",
          "248: }",
          "250: ==========",
          "252: execsql_test 5.0 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "250: execsql_test 4.5.1 {",
          "251:   SELECT sum(b) OVER (",
          "252:     ORDER BY a ASC  NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING",
          "253:   ) FROM t1 ORDER BY 1 NULLS LAST;",
          "254: }",
          "255: execsql_test 4.5.2 {",
          "256:   SELECT sum(b) OVER (",
          "257:     ORDER BY a DESC NULLS FIRST RANGE",
          "258:     BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING",
          "259:   ) FROM t1 ORDER BY 1 NULLS LAST;",
          "260: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "329:   FROM t2",
          "330: }",
          "334: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "344: ==========",
          "",
          "---------------"
        ],
        "test/window8.test||test/window8.test": [
          "File: test/window8.test -> test/window8.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "3579:   ) FROM t1 ORDER BY 1 NULLS LAST;",
          "3580: } {5   6   8   9   10}",
          "3582: #==========================================================================",
          "3584: do_execsql_test 5.0 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3582: do_execsql_test 4.5.1 {",
          "3583:   SELECT sum(b) OVER (",
          "3584:     ORDER BY a ASC  NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING",
          "3585:   ) FROM t1 ORDER BY 1 NULLS LAST;",
          "3586: } {9   9   15   15   15}",
          "3588: do_execsql_test 4.5.2 {",
          "3589:   SELECT sum(b) OVER (",
          "3590:     ORDER BY a DESC NULLS FIRST RANGE",
          "3591:     BETWEEN UNBOUNDED PRECEDING AND 10 FOLLOWING",
          "3592:   ) FROM t1 ORDER BY 1 NULLS LAST;",
          "3593: } {6   6   6   15   15}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6190:   FROM t2",
          "6191: } {{}   A.B   A.B}",
          "6193: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6206: #==========================================================================",
          "",
          "---------------"
        ]
      }
    }
  ]
}