{
  "cve_id": "CVE-2021-29601",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. The TFLite implementation of concatenation is vulnerable to an integer overflow issue(https://github.com/tensorflow/tensorflow/blob/7b7352a724b690b11bfaae2cd54bc3907daf6285/tensorflow/lite/kernels/concatenation.cc#L70-L76). An attacker can craft a model such that the dimensions of one of the concatenation input overflow the values of `int`. TFLite uses `int` to represent tensor dimensions, whereas TF uses `int64`. Hence, valid TF models can trigger an integer overflow when converted to TFLite format. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "4253f96a58486ffe84b61c0415bb234a4632ee73",
  "patch_info": {
    "commit_hash": "4253f96a58486ffe84b61c0415bb234a4632ee73",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/4253f96a58486ffe84b61c0415bb234a4632ee73",
    "files": [
      "tensorflow/lite/kernels/concatenation.cc"
    ],
    "message": "Fix integer overflow in TFLite concat\n\nPiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29",
    "before_after_code_files": [
      "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc": [
      "File: tensorflow/lite/kernels/concatenation.cc -> tensorflow/lite/kernels/concatenation.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: #include <stdint.h>",
      "19: #include \"tensorflow/lite/c/builtin_op_data.h\"",
      "20: #include \"tensorflow/lite/c/common.h\"",
      "21: #include \"tensorflow/lite/kernels/internal/compatibility.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: #include <limits>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "69:     TF_LITE_ENSURE_EQ(context, t->type, input_type);",
      "70:     for (int d = 0; d < t0->dims->size; ++d) {",
      "71:       if (d == axis) {",
      "72:         sum_axis += t->dims->data[axis];",
      "73:       } else {",
      "74:         TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "75:         TF_LITE_ENSURE(context, t->dims->data[axis] >= 0);",
      "76:         TF_LITE_ENSURE(context, t->dims->data[axis] <=",
      "77:                                     std::numeric_limits<int>::max() - sum_axis);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "41f788cbeae8389d77df557a975fab73f43d29a6",
      "candidate_info": {
        "commit_hash": "41f788cbeae8389d77df557a975fab73f43d29a6",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/41f788cbeae8389d77df557a975fab73f43d29a6",
        "files": [
          "tensorflow/lite/kernels/concatenation.cc"
        ],
        "message": "Fix integer overflow in TFLite concat\n\nPiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29",
        "before_after_code_files": [
          "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc": [
          "File: tensorflow/lite/kernels/concatenation.cc -> tensorflow/lite/kernels/concatenation.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include <stdint.h>",
          "19: #include \"tensorflow/lite/c/builtin_op_data.h\"",
          "20: #include \"tensorflow/lite/c/common.h\"",
          "21: #include \"tensorflow/lite/kernels/internal/compatibility.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #include <limits>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:     TF_LITE_ENSURE_EQ(context, t->type, input_type);",
          "69:     for (int d = 0; d < t0->dims->size; ++d) {",
          "70:       if (d == axis) {",
          "71:         sum_axis += t->dims->data[axis];",
          "72:       } else {",
          "73:         TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:         TF_LITE_ENSURE(context, t->dims->data[axis] >= 0);",
          "75:         TF_LITE_ENSURE(context, t->dims->data[axis] <=",
          "76:                                     std::numeric_limits<int>::max() - sum_axis);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1fe3b7978813f0735f0d597bbeeb918912ea0afb",
      "candidate_info": {
        "commit_hash": "1fe3b7978813f0735f0d597bbeeb918912ea0afb",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/1fe3b7978813f0735f0d597bbeeb918912ea0afb",
        "files": [
          "tensorflow/lite/kernels/concatenation.cc"
        ],
        "message": "Fix integer overflow in TFLite concat\n\nPiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29",
        "before_after_code_files": [
          "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc": [
          "File: tensorflow/lite/kernels/concatenation.cc -> tensorflow/lite/kernels/concatenation.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <iostream>",
          "20: #include <limits>",
          "22: #include \"tensorflow/lite/c/builtin_op_data.h\"",
          "23: #include \"tensorflow/lite/c/common.h\"",
          "24: #include \"tensorflow/lite/kernels/internal/optimized/optimized_ops.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include <limits>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:     TF_LITE_ENSURE_EQ(context, t->type, input_type);",
          "70:     for (int d = 0; d < t0->dims->size; ++d) {",
          "71:       if (d == axis) {",
          "72:         sum_axis += t->dims->data[axis];",
          "73:       } else {",
          "74:         TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:         TF_LITE_ENSURE(context, t->dims->data[axis] >= 0);",
          "76:         TF_LITE_ENSURE(context, t->dims->data[axis] <=",
          "77:                                     std::numeric_limits<int>::max() - sum_axis);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9475fc132227f42e53a49442d80257e8e17ba2f0",
      "candidate_info": {
        "commit_hash": "9475fc132227f42e53a49442d80257e8e17ba2f0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/9475fc132227f42e53a49442d80257e8e17ba2f0",
        "files": [
          "tensorflow/lite/kernels/concatenation.cc"
        ],
        "message": "Fix integer overflow in TFLite concat\n\nPiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29",
        "before_after_code_files": [
          "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc": [
          "File: tensorflow/lite/kernels/concatenation.cc -> tensorflow/lite/kernels/concatenation.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <iostream>",
          "20: #include <limits>",
          "22: #include \"tensorflow/lite/c/builtin_op_data.h\"",
          "23: #include \"tensorflow/lite/c/c_api_internal.h\"",
          "24: #include \"tensorflow/lite/kernels/internal/optimized/optimized_ops.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include <limits>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:     TF_LITE_ENSURE_EQ(context, t->type, input_type);",
          "70:     for (int d = 0; d < t0->dims->size; ++d) {",
          "71:       if (d == axis) {",
          "72:         sum_axis += t->dims->data[axis];",
          "73:       } else {",
          "74:         TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:         TF_LITE_ENSURE(context, t->dims->data[axis] >= 0);",
          "76:         TF_LITE_ENSURE(context, t->dims->data[axis] <=",
          "77:                                     std::numeric_limits<int>::max() - sum_axis);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a93820c0bb10b752f3293de1c9443f505dffcc8b",
      "candidate_info": {
        "commit_hash": "a93820c0bb10b752f3293de1c9443f505dffcc8b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/a93820c0bb10b752f3293de1c9443f505dffcc8b",
        "files": [
          "tensorflow/lite/kernels/concatenation.cc"
        ],
        "message": "Fix integer overflow in TFLite concat\n\nPiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29",
        "before_after_code_files": [
          "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc": [
          "File: tensorflow/lite/kernels/concatenation.cc -> tensorflow/lite/kernels/concatenation.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include <stdint.h>",
          "19: #include \"tensorflow/lite/c/builtin_op_data.h\"",
          "20: #include \"tensorflow/lite/c/common.h\"",
          "21: #include \"tensorflow/lite/kernels/internal/compatibility.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #include <limits>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:     TF_LITE_ENSURE_EQ(context, t->type, input_type);",
          "70:     for (int d = 0; d < t0->dims->size; ++d) {",
          "71:       if (d == axis) {",
          "72:         sum_axis += t->dims->data[axis];",
          "73:       } else {",
          "74:         TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:         TF_LITE_ENSURE(context, t->dims->data[axis] >= 0);",
          "76:         TF_LITE_ENSURE(context, t->dims->data[axis] <=",
          "77:                                     std::numeric_limits<int>::max() - sum_axis);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f58cf80dee1ea26e4db9c419c5f01996f0e90cce",
      "candidate_info": {
        "commit_hash": "f58cf80dee1ea26e4db9c419c5f01996f0e90cce",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f58cf80dee1ea26e4db9c419c5f01996f0e90cce",
        "files": [
          "tensorflow/lite/kernels/concatenation.cc"
        ],
        "message": "Fix integer overflow in TFLite concat\n\nPiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29",
        "before_after_code_files": [
          "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/concatenation.cc||tensorflow/lite/kernels/concatenation.cc": [
          "File: tensorflow/lite/kernels/concatenation.cc -> tensorflow/lite/kernels/concatenation.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include <stdint.h>",
          "19: #include \"tensorflow/lite/c/builtin_op_data.h\"",
          "20: #include \"tensorflow/lite/c/common.h\"",
          "21: #include \"tensorflow/lite/kernels/internal/compatibility.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #include <limits>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:     TF_LITE_ENSURE_EQ(context, t->type, input_type);",
          "72:     for (int d = 0; d < t0->dims->size; ++d) {",
          "73:       if (d == axis) {",
          "74:         sum_axis += t->dims->data[axis];",
          "75:       } else {",
          "76:         TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:         TF_LITE_ENSURE(context, t->dims->data[axis] >= 0);",
          "78:         TF_LITE_ENSURE(context, t->dims->data[axis] <=",
          "79:                                     std::numeric_limits<int>::max() - sum_axis);",
          "",
          "---------------"
        ]
      }
    }
  ]
}