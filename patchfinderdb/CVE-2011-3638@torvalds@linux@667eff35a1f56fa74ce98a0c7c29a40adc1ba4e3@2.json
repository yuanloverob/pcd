{
  "cve_id": "CVE-2011-3638",
  "cve_desc": "fs/ext4/extents.c in the Linux kernel before 3.0 does not mark a modified extent as dirty in certain cases of extent splitting, which allows local users to cause a denial of service (system crash) via vectors involving ext4 umount and mount operations.",
  "repo": "torvalds/linux",
  "patch_hash": "667eff35a1f56fa74ce98a0c7c29a40adc1ba4e3",
  "patch_info": {
    "commit_hash": "667eff35a1f56fa74ce98a0c7c29a40adc1ba4e3",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/667eff35a1f56fa74ce98a0c7c29a40adc1ba4e3",
    "files": [
      "fs/ext4/extents.c"
    ],
    "message": "ext4: reimplement convert and split_unwritten\n\nReimplement ext4_ext_convert_to_initialized() and\next4_split_unwritten_extents() using ext4_split_extent()\n\nSigned-off-by: Yongqiang Yang <xiaoqiangnk@gmail.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>\nTested-by: Allison Henderson <achender@linux.vnet.ibm.com>",
    "before_after_code_files": [
      "fs/ext4/extents.c||fs/ext4/extents.c"
    ]
  },
  "patch_diff": {
    "fs/ext4/extents.c||fs/ext4/extents.c": [
      "File: fs/ext4/extents.c -> fs/ext4/extents.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2757:         struct ext4_map_blocks *map,",
      "2758:         struct ext4_ext_path *path)",
      "2759: {",
      "2765:  ext4_lblk_t ee_block, eof_block;",
      "2766:  unsigned int allocated, ee_len, depth;",
      "2768:  int err = 0;",
      "2772:  ext_debug(\"ext4_ext_convert_to_initialized: inode %lu, logical\"",
      "2773:   \"block %llu, max_blocks %u\\n\", inode->i_ino,",
      "",
      "[Removed Lines]",
      "2760:  struct ext4_extent *ex, newex, orig_ex;",
      "2761:  struct ext4_extent *ex1 = NULL;",
      "2762:  struct ext4_extent *ex2 = NULL;",
      "2763:  struct ext4_extent *ex3 = NULL;",
      "2764:  struct ext4_extent_header *eh;",
      "2767:  ext4_fsblk_t newblock;",
      "2769:  int ret = 0;",
      "2770:  int may_zeroout;",
      "",
      "[Added Lines]",
      "2760:  struct ext4_map_blocks split_map;",
      "2761:  struct ext4_extent zero_ex;",
      "2762:  struct ext4_extent *ex;",
      "2766:  int split_flag = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2779:   eof_block = map->m_lblk + map->m_len;",
      "2781:  depth = ext_depth(inode);",
      "2783:  ex = path[depth].p_ext;",
      "2784:  ee_block = le32_to_cpu(ex->ee_block);",
      "2785:  ee_len = ext4_ext_get_actual_len(ex);",
      "2786:  allocated = ee_len - (map->m_lblk - ee_block);",
      "2806:   if (err)",
      "2945:    goto out;",
      "2952:   err = ext4_ext_get_access(handle, inode, path + depth);",
      "2953:   if (err)",
      "2954:    goto out;",
      "3013:  }",
      "3023:    if (err)",
      "3024:     goto out;",
      "3025:   }",
      "3026:  }",
      "3045: out:",
      "3047:  return err ? err : allocated;",
      "3056: }",
      "",
      "[Removed Lines]",
      "2782:  eh = path[depth].p_hdr;",
      "2787:  newblock = map->m_lblk - ee_block + ext4_ext_pblock(ex);",
      "2789:  ex2 = ex;",
      "2790:  orig_ex.ee_block = ex->ee_block;",
      "2791:  orig_ex.ee_len   = cpu_to_le16(ee_len);",
      "2792:  ext4_ext_store_pblock(&orig_ex, ext4_ext_pblock(ex));",
      "2798:  may_zeroout = ee_block + ee_len <= eof_block;",
      "2800:  err = ext4_ext_get_access(handle, inode, path + depth);",
      "2801:  if (err)",
      "2802:   goto out;",
      "2804:  if (ee_len <= 2*EXT4_EXT_ZERO_LEN && may_zeroout) {",
      "2805:   err =  ext4_ext_zeroout(inode, &orig_ex);",
      "2807:    goto fix_extent_len;",
      "2809:   ex->ee_block = orig_ex.ee_block;",
      "2810:   ex->ee_len   = orig_ex.ee_len;",
      "2811:   ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
      "2812:   ext4_ext_dirty(handle, inode, path + depth);",
      "2814:   return allocated;",
      "2815:  }",
      "2818:  if (map->m_lblk > ee_block) {",
      "2819:   ex1 = ex;",
      "2820:   ex1->ee_len = cpu_to_le16(map->m_lblk - ee_block);",
      "2821:   ext4_ext_mark_uninitialized(ex1);",
      "2822:   ex2 = &newex;",
      "2823:  }",
      "2829:  if (!ex1 && allocated > map->m_len)",
      "2830:   ex2->ee_len = cpu_to_le16(map->m_len);",
      "2832:  if (allocated > map->m_len) {",
      "2833:   unsigned int newdepth;",
      "2835:   if (allocated <= EXT4_EXT_ZERO_LEN && may_zeroout) {",
      "2843:    ex->ee_block = orig_ex.ee_block;",
      "2844:    ex->ee_len   = cpu_to_le16(ee_len - allocated);",
      "2845:    ext4_ext_mark_uninitialized(ex);",
      "2846:    ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
      "2847:    ext4_ext_dirty(handle, inode, path + depth);",
      "2849:    ex3 = &newex;",
      "2850:    ex3->ee_block = cpu_to_le32(map->m_lblk);",
      "2851:    ext4_ext_store_pblock(ex3, newblock);",
      "2852:    ex3->ee_len = cpu_to_le16(allocated);",
      "2853:    err = ext4_ext_insert_extent(handle, inode, path,",
      "2854:        ex3, 0);",
      "2855:    if (err == -ENOSPC) {",
      "2856:     err =  ext4_ext_zeroout(inode, &orig_ex);",
      "2857:     if (err)",
      "2858:      goto fix_extent_len;",
      "2859:     ex->ee_block = orig_ex.ee_block;",
      "2860:     ex->ee_len   = orig_ex.ee_len;",
      "2861:     ext4_ext_store_pblock(ex,",
      "2862:      ext4_ext_pblock(&orig_ex));",
      "2863:     ext4_ext_dirty(handle, inode, path + depth);",
      "2865:     return allocated;",
      "2867:    } else if (err)",
      "2868:     goto fix_extent_len;",
      "2877:    err =  ext4_ext_zeroout(inode, ex3);",
      "2878:    if (err) {",
      "2884:     depth = ext_depth(inode);",
      "2885:     ext4_ext_drop_refs(path);",
      "2886:     path = ext4_ext_find_extent(inode, map->m_lblk,",
      "2887:            path);",
      "2888:     if (IS_ERR(path)) {",
      "2889:      err = PTR_ERR(path);",
      "2890:      return err;",
      "2891:     }",
      "2893:     ex = path[depth].p_ext;",
      "2894:     err = ext4_ext_get_access(handle, inode,",
      "2895:         path + depth);",
      "2896:     if (err)",
      "2897:      return err;",
      "2898:     ext4_ext_mark_uninitialized(ex);",
      "2899:     ext4_ext_dirty(handle, inode, path + depth);",
      "2900:     return err;",
      "2901:    }",
      "2904:    return allocated;",
      "2905:   }",
      "2906:   ex3 = &newex;",
      "2907:   ex3->ee_block = cpu_to_le32(map->m_lblk + map->m_len);",
      "2908:   ext4_ext_store_pblock(ex3, newblock + map->m_len);",
      "2909:   ex3->ee_len = cpu_to_le16(allocated - map->m_len);",
      "2910:   ext4_ext_mark_uninitialized(ex3);",
      "2911:   err = ext4_ext_insert_extent(handle, inode, path, ex3, 0);",
      "2912:   if (err == -ENOSPC && may_zeroout) {",
      "2913:    err =  ext4_ext_zeroout(inode, &orig_ex);",
      "2914:    if (err)",
      "2915:     goto fix_extent_len;",
      "2917:    ex->ee_block = orig_ex.ee_block;",
      "2918:    ex->ee_len   = orig_ex.ee_len;",
      "2919:    ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
      "2920:    ext4_ext_dirty(handle, inode, path + depth);",
      "2923:    return allocated;",
      "2925:   } else if (err)",
      "2926:    goto fix_extent_len;",
      "2931:   newdepth = ext_depth(inode);",
      "2936:   ee_len -= ext4_ext_get_actual_len(ex3);",
      "2937:   orig_ex.ee_len = cpu_to_le16(ee_len);",
      "2938:   may_zeroout = ee_block + ee_len <= eof_block;",
      "2940:   depth = newdepth;",
      "2941:   ext4_ext_drop_refs(path);",
      "2942:   path = ext4_ext_find_extent(inode, map->m_lblk, path);",
      "2943:   if (IS_ERR(path)) {",
      "2944:    err = PTR_ERR(path);",
      "2946:   }",
      "2947:   eh = path[depth].p_hdr;",
      "2948:   ex = path[depth].p_ext;",
      "2949:   if (ex2 != &newex)",
      "2950:    ex2 = ex;",
      "2956:   allocated = map->m_len;",
      "2962:   if (le16_to_cpu(orig_ex.ee_len) <= EXT4_EXT_ZERO_LEN &&",
      "2963:    map->m_lblk != ee_block && may_zeroout) {",
      "2964:    err =  ext4_ext_zeroout(inode, &orig_ex);",
      "2965:    if (err)",
      "2966:     goto fix_extent_len;",
      "2968:    ex->ee_block = orig_ex.ee_block;",
      "2969:    ex->ee_len   = orig_ex.ee_len;",
      "2970:    ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
      "2971:    ext4_ext_dirty(handle, inode, path + depth);",
      "2974:    return allocated;",
      "2975:   }",
      "2976:  }",
      "2982:  if (ex1 && ex1 != ex) {",
      "2983:   ex1 = ex;",
      "2984:   ex1->ee_len = cpu_to_le16(map->m_lblk - ee_block);",
      "2985:   ext4_ext_mark_uninitialized(ex1);",
      "2986:   ex2 = &newex;",
      "2987:  }",
      "2989:  ex2->ee_block = cpu_to_le32(map->m_lblk);",
      "2990:  ext4_ext_store_pblock(ex2, newblock);",
      "2991:  ex2->ee_len = cpu_to_le16(allocated);",
      "2992:  if (ex2 != ex)",
      "2993:   goto insert;",
      "3000:  if (ex2 > EXT_FIRST_EXTENT(eh)) {",
      "3005:   ret = ext4_ext_try_to_merge(inode, path, ex2 - 1);",
      "3006:   if (ret) {",
      "3007:    err = ext4_ext_correct_indexes(handle, inode, path);",
      "3008:    if (err)",
      "3009:     goto out;",
      "3010:    depth = ext_depth(inode);",
      "3011:    ex2--;",
      "3012:   }",
      "3019:  if (!ex3) {",
      "3020:   ret = ext4_ext_try_to_merge(inode, path, ex2);",
      "3021:   if (ret) {",
      "3022:    err = ext4_ext_correct_indexes(handle, inode, path);",
      "3028:  err = ext4_ext_dirty(handle, inode, path + depth);",
      "3029:  goto out;",
      "3030: insert:",
      "3031:  err = ext4_ext_insert_extent(handle, inode, path, &newex, 0);",
      "3032:  if (err == -ENOSPC && may_zeroout) {",
      "3033:   err =  ext4_ext_zeroout(inode, &orig_ex);",
      "3034:   if (err)",
      "3035:    goto fix_extent_len;",
      "3037:   ex->ee_block = orig_ex.ee_block;",
      "3038:   ex->ee_len   = orig_ex.ee_len;",
      "3039:   ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
      "3040:   ext4_ext_dirty(handle, inode, path + depth);",
      "3042:   return allocated;",
      "3043:  } else if (err)",
      "3044:   goto fix_extent_len;",
      "3046:  ext4_ext_show_leaf(inode, path);",
      "3049: fix_extent_len:",
      "3050:  ex->ee_block = orig_ex.ee_block;",
      "3051:  ex->ee_len   = orig_ex.ee_len;",
      "3052:  ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
      "3053:  ext4_ext_mark_uninitialized(ex);",
      "3054:  ext4_ext_dirty(handle, inode, path + depth);",
      "3055:  return err;",
      "",
      "[Added Lines]",
      "2783:  WARN_ON(map->m_lblk < ee_block);",
      "2788:  split_flag |= ee_block + ee_len <= eof_block ? EXT4_EXT_MAY_ZEROOUT : 0;",
      "2791:  if (ee_len <= 2*EXT4_EXT_ZERO_LEN &&",
      "2792:      (EXT4_EXT_MAY_ZEROOUT & split_flag)) {",
      "2793:   err = ext4_ext_zeroout(inode, ex);",
      "2800:   ext4_ext_mark_initialized(ex);",
      "2801:   ext4_ext_try_to_merge(inode, path, ex);",
      "2802:   err = ext4_ext_dirty(handle, inode, path + depth);",
      "2803:   goto out;",
      "2813:  split_map.m_lblk = map->m_lblk;",
      "2814:  split_map.m_len = map->m_len;",
      "2816:  if (allocated > map->m_len) {",
      "2817:   if (allocated <= EXT4_EXT_ZERO_LEN &&",
      "2818:       (EXT4_EXT_MAY_ZEROOUT & split_flag)) {",
      "2820:    zero_ex.ee_block =",
      "2821:       cpu_to_le32(map->m_lblk + map->m_len);",
      "2822:    zero_ex.ee_len = cpu_to_le16(allocated - map->m_len);",
      "2823:    ext4_ext_store_pblock(&zero_ex,",
      "2824:     ext4_ext_pblock(ex) + map->m_lblk - ee_block);",
      "2825:    err = ext4_ext_zeroout(inode, &zero_ex);",
      "2828:    split_map.m_lblk = map->m_lblk;",
      "2829:    split_map.m_len = allocated;",
      "2830:   } else if ((map->m_lblk - ee_block + map->m_len <",
      "2831:       EXT4_EXT_ZERO_LEN) &&",
      "2832:       (EXT4_EXT_MAY_ZEROOUT & split_flag)) {",
      "2834:    if (map->m_lblk != ee_block) {",
      "2835:     zero_ex.ee_block = ex->ee_block;",
      "2836:     zero_ex.ee_len = cpu_to_le16(map->m_lblk -",
      "2837:        ee_block);",
      "2838:     ext4_ext_store_pblock(&zero_ex,",
      "2839:             ext4_ext_pblock(ex));",
      "2840:     err = ext4_ext_zeroout(inode, &zero_ex);",
      "2841:     if (err)",
      "2842:      goto out;",
      "2843:    }",
      "2845:    allocated = map->m_lblk - ee_block + map->m_len;",
      "2847:    split_map.m_lblk = ee_block;",
      "2848:    split_map.m_len = allocated;",
      "2852:  allocated = ext4_split_extent(handle, inode, path,",
      "2853:            &split_map, split_flag, 0);",
      "2854:  if (allocated < 0)",
      "2855:   err = allocated;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3083:      struct ext4_ext_path *path,",
      "3084:      int flags)",
      "3085: {",
      "3096:  ext_debug(\"ext4_split_unwritten_extents: inode %lu, logical\"",
      "3097:   \"block %llu, max_blocks %u\\n\", inode->i_ino,",
      "",
      "[Removed Lines]",
      "3086:  struct ext4_extent *ex, newex, orig_ex;",
      "3087:  struct ext4_extent *ex1 = NULL;",
      "3088:  struct ext4_extent *ex2 = NULL;",
      "3089:  struct ext4_extent *ex3 = NULL;",
      "3090:  ext4_lblk_t ee_block, eof_block;",
      "3091:  unsigned int allocated, ee_len, depth;",
      "3092:  ext4_fsblk_t newblock;",
      "3093:  int err = 0;",
      "3094:  int may_zeroout;",
      "",
      "[Added Lines]",
      "2889:  ext4_lblk_t eof_block;",
      "2890:  ext4_lblk_t ee_block;",
      "2891:  struct ext4_extent *ex;",
      "2892:  unsigned int ee_len;",
      "2893:  int split_flag = 0, depth;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3101:   inode->i_sb->s_blocksize_bits;",
      "3102:  if (eof_block < map->m_lblk + map->m_len)",
      "3103:   eof_block = map->m_lblk + map->m_len;",
      "3253: }",
      "3255: static int ext4_convert_unwritten_extents_endio(handle_t *handle,",
      "",
      "[Removed Lines]",
      "3105:  depth = ext_depth(inode);",
      "3106:  ex = path[depth].p_ext;",
      "3107:  ee_block = le32_to_cpu(ex->ee_block);",
      "3108:  ee_len = ext4_ext_get_actual_len(ex);",
      "3109:  allocated = ee_len - (map->m_lblk - ee_block);",
      "3110:  newblock = map->m_lblk - ee_block + ext4_ext_pblock(ex);",
      "3112:  ex2 = ex;",
      "3113:  orig_ex.ee_block = ex->ee_block;",
      "3114:  orig_ex.ee_len   = cpu_to_le16(ee_len);",
      "3115:  ext4_ext_store_pblock(&orig_ex, ext4_ext_pblock(ex));",
      "3121:  may_zeroout = ee_block + ee_len <= eof_block;",
      "3128:  if ((map->m_lblk == ee_block) && (allocated <= map->m_len))",
      "3129:   return allocated;",
      "3131:  err = ext4_ext_get_access(handle, inode, path + depth);",
      "3132:  if (err)",
      "3133:   goto out;",
      "3135:  if (map->m_lblk > ee_block) {",
      "3136:   ex1 = ex;",
      "3137:   ex1->ee_len = cpu_to_le16(map->m_lblk - ee_block);",
      "3138:   ext4_ext_mark_uninitialized(ex1);",
      "3139:   ex2 = &newex;",
      "3140:  }",
      "3146:  if (!ex1 && allocated > map->m_len)",
      "3147:   ex2->ee_len = cpu_to_le16(map->m_len);",
      "3149:  if (allocated > map->m_len) {",
      "3150:   unsigned int newdepth;",
      "3151:   ex3 = &newex;",
      "3152:   ex3->ee_block = cpu_to_le32(map->m_lblk + map->m_len);",
      "3153:   ext4_ext_store_pblock(ex3, newblock + map->m_len);",
      "3154:   ex3->ee_len = cpu_to_le16(allocated - map->m_len);",
      "3155:   ext4_ext_mark_uninitialized(ex3);",
      "3156:   err = ext4_ext_insert_extent(handle, inode, path, ex3, flags);",
      "3157:   if (err == -ENOSPC && may_zeroout) {",
      "3158:    err =  ext4_ext_zeroout(inode, &orig_ex);",
      "3159:    if (err)",
      "3160:     goto fix_extent_len;",
      "3162:    ex->ee_block = orig_ex.ee_block;",
      "3163:    ex->ee_len   = orig_ex.ee_len;",
      "3164:    ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
      "3165:    ext4_ext_dirty(handle, inode, path + depth);",
      "3168:    return allocated;",
      "3170:   } else if (err)",
      "3171:    goto fix_extent_len;",
      "3176:   newdepth = ext_depth(inode);",
      "3181:   ee_len -= ext4_ext_get_actual_len(ex3);",
      "3182:   orig_ex.ee_len = cpu_to_le16(ee_len);",
      "3183:   may_zeroout = ee_block + ee_len <= eof_block;",
      "3185:   depth = newdepth;",
      "3186:   ext4_ext_drop_refs(path);",
      "3187:   path = ext4_ext_find_extent(inode, map->m_lblk, path);",
      "3188:   if (IS_ERR(path)) {",
      "3189:    err = PTR_ERR(path);",
      "3190:    goto out;",
      "3191:   }",
      "3192:   ex = path[depth].p_ext;",
      "3193:   if (ex2 != &newex)",
      "3194:    ex2 = ex;",
      "3196:   err = ext4_ext_get_access(handle, inode, path + depth);",
      "3197:   if (err)",
      "3198:    goto out;",
      "3200:   allocated = map->m_len;",
      "3201:  }",
      "3207:  if (ex1 && ex1 != ex) {",
      "3208:   ex1 = ex;",
      "3209:   ex1->ee_len = cpu_to_le16(map->m_lblk - ee_block);",
      "3210:   ext4_ext_mark_uninitialized(ex1);",
      "3211:   ex2 = &newex;",
      "3212:  }",
      "3217:  ex2->ee_block = cpu_to_le32(map->m_lblk);",
      "3218:  ext4_ext_store_pblock(ex2, newblock);",
      "3219:  ex2->ee_len = cpu_to_le16(allocated);",
      "3220:  ext4_ext_mark_uninitialized(ex2);",
      "3221:  if (ex2 != ex)",
      "3222:   goto insert;",
      "3224:  err = ext4_ext_dirty(handle, inode, path + depth);",
      "3225:  ext_debug(\"out here\\n\");",
      "3226:  goto out;",
      "3227: insert:",
      "3228:  err = ext4_ext_insert_extent(handle, inode, path, &newex, flags);",
      "3229:  if (err == -ENOSPC && may_zeroout) {",
      "3230:   err =  ext4_ext_zeroout(inode, &orig_ex);",
      "3231:   if (err)",
      "3232:    goto fix_extent_len;",
      "3234:   ex->ee_block = orig_ex.ee_block;",
      "3235:   ex->ee_len   = orig_ex.ee_len;",
      "3236:   ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
      "3237:   ext4_ext_dirty(handle, inode, path + depth);",
      "3239:   return allocated;",
      "3240:  } else if (err)",
      "3241:   goto fix_extent_len;",
      "3242: out:",
      "3243:  ext4_ext_show_leaf(inode, path);",
      "3244:  return err ? err : allocated;",
      "3246: fix_extent_len:",
      "3247:  ex->ee_block = orig_ex.ee_block;",
      "3248:  ex->ee_len   = orig_ex.ee_len;",
      "3249:  ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
      "3250:  ext4_ext_mark_uninitialized(ex);",
      "3251:  ext4_ext_dirty(handle, inode, path + depth);",
      "3252:  return err;",
      "",
      "[Added Lines]",
      "2907:  depth = ext_depth(inode);",
      "2908:  ex = path[depth].p_ext;",
      "2909:  ee_block = le32_to_cpu(ex->ee_block);",
      "2910:  ee_len = ext4_ext_get_actual_len(ex);",
      "2912:  split_flag |= ee_block + ee_len <= eof_block ? EXT4_EXT_MAY_ZEROOUT : 0;",
      "2913:  split_flag |= EXT4_EXT_MARK_UNINIT2;",
      "2915:  flags |= EXT4_GET_BLOCKS_PRE_IO;",
      "2916:  return ext4_split_extent(handle, inode, path, map, split_flag, flags);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "786ec7915e530936b9eb2e3d12274145cab7aa7d",
      "candidate_info": {
        "commit_hash": "786ec7915e530936b9eb2e3d12274145cab7aa7d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/786ec7915e530936b9eb2e3d12274145cab7aa7d",
        "files": [
          "fs/ext4/extents.c"
        ],
        "message": "ext4: Clear the EXT4_EOFBLOCKS_FL flag only when warranted\n\nDimitry Monakhov discovered an edge case where it was possible for the\nEXT4_EOFBLOCKS_FL flag could get cleared unnecessarily.  This is true;\nI have a test case that can be exercised via downloading and\ndecompressing the file:\n\nwget ftp://ftp.kernel.org/pub/linux/kernel/people/tytso/ext4-testcases/eofblocks-fl-test-case.img.bz2\nbunzip2 eofblocks-fl-test-case.img\ndd if=/dev/zero of=eofblocks-fl-test-case.img bs=1k seek=17925 bs=1k count=1 conv=notrunc\n\nHowever, triggering it in real life is highly unlikely since it\nrequires an extremely fragmented sparse file with a hole in exactly\nthe right place in the extent tree.  (It actually took quite a bit of\nwork to generate this test case.)  Still, it's nice to get even\nextreme corner cases to be correct, so this patch makes sure that we\ndon't clear the EXT4_EOFBLOCKS_FL incorrectly even in this corner\ncase.\n\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>",
        "before_after_code_files": [
          "fs/ext4/extents.c||fs/ext4/extents.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/ext4/extents.c||fs/ext4/extents.c"
          ],
          "candidate": [
            "fs/ext4/extents.c||fs/ext4/extents.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/ext4/extents.c||fs/ext4/extents.c": [
          "File: fs/ext4/extents.c -> fs/ext4/extents.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3319:  struct ext4_extent_header *eh;",
          "3320:  struct ext4_extent newex, *ex, *last_ex;",
          "3321:  ext4_fsblk_t newblock;",
          "3323:  unsigned int allocated = 0;",
          "3324:  struct ext4_allocation_request ar;",
          "3325:  ext4_io_end_t *io = EXT4_I(inode)->cur_aio_dio;",
          "",
          "[Removed Lines]",
          "3322:  int err = 0, depth, ret, cache_type;",
          "",
          "[Added Lines]",
          "3322:  int i, err = 0, depth, ret, cache_type;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3508:    goto out2;",
          "3509:   }",
          "3510:   last_ex = EXT_LAST_EXTENT(eh);",
          "3513:    ext4_clear_inode_flag(inode, EXT4_INODE_EOFBLOCKS);",
          "3514:  }",
          "3515:  err = ext4_ext_insert_extent(handle, inode, path, &newex, flags);",
          "",
          "[Removed Lines]",
          "3511:   if (map->m_lblk + ar.len > le32_to_cpu(last_ex->ee_block)",
          "3512:       + ext4_ext_get_actual_len(last_ex))",
          "",
          "[Added Lines]",
          "3518:   for (i = depth-1; i >= 0; i--) {",
          "3519:    if (path[i].p_idx != EXT_LAST_INDEX(path[i].p_hdr))",
          "3520:     break;",
          "3521:   }",
          "3522:   if ((i < 0) &&",
          "3523:       (map->m_lblk + ar.len > le32_to_cpu(last_ex->ee_block) +",
          "3524:        ext4_ext_get_actual_len(last_ex)))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b940f8e8c32456c8a6428fa4313a4bcca7b4fcb",
      "candidate_info": {
        "commit_hash": "9b940f8e8c32456c8a6428fa4313a4bcca7b4fcb",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/9b940f8e8c32456c8a6428fa4313a4bcca7b4fcb",
        "files": [
          "fs/ext4/extents.c"
        ],
        "message": "ext4: ext4_ext_convert_to_initialized bug found in extended FSX testing\n\nThis patch addresses bugs found while testing punch hole \nwith the fsx test.  The patch corrects the number of blocks\nthat are zeroed out while splitting an extent, and also corrects\nthe return value to return the number of blocks split out, instead\nof the number of blocks zeroed out.\n\nThis patch has been tested in addition to the following patches: \n[Ext4 punch hole v7]\n[XFS Tests Punch Hole 1/1 v2] Add Punch Hole Testing to FSX\n\nThe test ran successfully for 24 hours.\n\nSigned-off-by: Allison Henderson <achender@us.ibm.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>",
        "before_after_code_files": [
          "fs/ext4/extents.c||fs/ext4/extents.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/ext4/extents.c||fs/ext4/extents.c"
          ],
          "candidate": [
            "fs/ext4/extents.c||fs/ext4/extents.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/ext4/extents.c||fs/ext4/extents.c": [
          "File: fs/ext4/extents.c -> fs/ext4/extents.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2818:       (EXT4_EXT_MAY_ZEROOUT & split_flag)) {",
          "2820:    zero_ex.ee_block =",
          "2823:    ext4_ext_store_pblock(&zero_ex,",
          "2824:     ext4_ext_pblock(ex) + map->m_lblk - ee_block);",
          "2825:    err = ext4_ext_zeroout(inode, &zero_ex);",
          "",
          "[Removed Lines]",
          "2821:       cpu_to_le32(map->m_lblk + map->m_len);",
          "2822:    zero_ex.ee_len = cpu_to_le16(allocated - map->m_len);",
          "",
          "[Added Lines]",
          "2821:       cpu_to_le32(map->m_lblk);",
          "2822:    zero_ex.ee_len = cpu_to_le16(allocated);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2842:      goto out;",
          "2843:    }",
          "2847:    split_map.m_lblk = ee_block;",
          "2849:   }",
          "2850:  }",
          "",
          "[Removed Lines]",
          "2845:    allocated = map->m_lblk - ee_block + map->m_len;",
          "2848:    split_map.m_len = allocated;",
          "",
          "[Added Lines]",
          "2846:    split_map.m_len = map->m_lblk - ee_block + map->m_len;",
          "2847:    allocated = map->m_len;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf89d16f6ef5389f1b9d8046e838ec87b9b3f8b9",
      "candidate_info": {
        "commit_hash": "bf89d16f6ef5389f1b9d8046e838ec87b9b3f8b9",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/bf89d16f6ef5389f1b9d8046e838ec87b9b3f8b9",
        "files": [
          "fs/ext4/ext4_extents.h",
          "fs/ext4/extents.c",
          "fs/ext4/migrate.c",
          "fs/ext4/move_extent.c"
        ],
        "message": "ext4: rename {ext,idx}_pblock and inline small extent functions\n\nCleanup namespace leaks from fs/ext4 and the inline trivial functions\next4_{ext,idx}_pblock() and ext4_{ext,idx}_store_pblock() since the\ncode size actually shrinks when we make these functions inline,\nthey're so trivial.\n\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>",
        "before_after_code_files": [
          "fs/ext4/ext4_extents.h||fs/ext4/ext4_extents.h",
          "fs/ext4/extents.c||fs/ext4/extents.c",
          "fs/ext4/migrate.c||fs/ext4/migrate.c",
          "fs/ext4/move_extent.c||fs/ext4/move_extent.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/ext4/extents.c||fs/ext4/extents.c"
          ],
          "candidate": [
            "fs/ext4/extents.c||fs/ext4/extents.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/ext4/ext4_extents.h||fs/ext4/ext4_extents.h": [
          "File: fs/ext4/ext4_extents.h -> fs/ext4/ext4_extents.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "225:  ext->ee_len = cpu_to_le16(ext4_ext_get_actual_len(ext));",
          "226: }",
          "228: extern int ext4_ext_calc_metadata_amount(struct inode *inode,",
          "229:       sector_t lblocks);",
          "233: extern int ext4_extent_tree_init(handle_t *, struct inode *);",
          "234: extern int ext4_ext_calc_credits_for_single_extent(struct inode *inode,",
          "235:          int num,",
          "",
          "[Removed Lines]",
          "230: extern ext4_fsblk_t ext_pblock(struct ext4_extent *ex);",
          "231: extern ext4_fsblk_t idx_pblock(struct ext4_extent_idx *);",
          "232: extern void ext4_ext_store_pblock(struct ext4_extent *, ext4_fsblk_t);",
          "",
          "[Added Lines]",
          "232: static inline ext4_fsblk_t ext4_ext_pblock(struct ext4_extent *ex)",
          "233: {",
          "234:  ext4_fsblk_t block;",
          "236:  block = le32_to_cpu(ex->ee_start_lo);",
          "237:  block |= ((ext4_fsblk_t) le16_to_cpu(ex->ee_start_hi) << 31) << 1;",
          "238:  return block;",
          "239: }",
          "245: static inline ext4_fsblk_t ext4_idx_pblock(struct ext4_extent_idx *ix)",
          "246: {",
          "247:  ext4_fsblk_t block;",
          "249:  block = le32_to_cpu(ix->ei_leaf_lo);",
          "250:  block |= ((ext4_fsblk_t) le16_to_cpu(ix->ei_leaf_hi) << 31) << 1;",
          "251:  return block;",
          "252: }",
          "259: static inline void ext4_ext_store_pblock(struct ext4_extent *ex,",
          "260:       ext4_fsblk_t pb)",
          "261: {",
          "262:  ex->ee_start_lo = cpu_to_le32((unsigned long) (pb & 0xffffffff));",
          "263:  ex->ee_start_hi = cpu_to_le16((unsigned long) ((pb >> 31) >> 1) &",
          "264:           0xffff);",
          "265: }",
          "272: static inline void ext4_idx_store_pblock(struct ext4_extent_idx *ix,",
          "273:       ext4_fsblk_t pb)",
          "274: {",
          "275:  ix->ei_leaf_lo = cpu_to_le32((unsigned long) (pb & 0xffffffff));",
          "276:  ix->ei_leaf_hi = cpu_to_le16((unsigned long) ((pb >> 31) >> 1) &",
          "277:          0xffff);",
          "278: }",
          "",
          "---------------"
        ],
        "fs/ext4/extents.c||fs/ext4/extents.c": [
          "File: fs/ext4/extents.c -> fs/ext4/extents.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: #include \"ext4_jbd2.h\"",
          "45: #include \"ext4_extents.h\"",
          "96: static int ext4_ext_truncate_extend_restart(handle_t *handle,",
          "97:          struct inode *inode,",
          "98:          int needed)",
          "",
          "[Removed Lines]",
          "52: ext4_fsblk_t ext_pblock(struct ext4_extent *ex)",
          "53: {",
          "54:  ext4_fsblk_t block;",
          "56:  block = le32_to_cpu(ex->ee_start_lo);",
          "57:  block |= ((ext4_fsblk_t) le16_to_cpu(ex->ee_start_hi) << 31) << 1;",
          "58:  return block;",
          "59: }",
          "65: ext4_fsblk_t idx_pblock(struct ext4_extent_idx *ix)",
          "66: {",
          "67:  ext4_fsblk_t block;",
          "69:  block = le32_to_cpu(ix->ei_leaf_lo);",
          "70:  block |= ((ext4_fsblk_t) le16_to_cpu(ix->ei_leaf_hi) << 31) << 1;",
          "71:  return block;",
          "72: }",
          "79: void ext4_ext_store_pblock(struct ext4_extent *ex, ext4_fsblk_t pb)",
          "80: {",
          "81:  ex->ee_start_lo = cpu_to_le32((unsigned long) (pb & 0xffffffff));",
          "82:  ex->ee_start_hi = cpu_to_le16((unsigned long) ((pb >> 31) >> 1) & 0xffff);",
          "83: }",
          "90: static void ext4_idx_store_pblock(struct ext4_extent_idx *ix, ext4_fsblk_t pb)",
          "91: {",
          "92:  ix->ei_leaf_lo = cpu_to_le32((unsigned long) (pb & 0xffffffff));",
          "93:  ix->ei_leaf_hi = cpu_to_le16((unsigned long) ((pb >> 31) >> 1) & 0xffff);",
          "94: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "170:   ex = path[depth].p_ext;",
          "171:   if (ex)",
          "",
          "[Removed Lines]",
          "172:    return ext_pblock(ex)+(block-le32_to_cpu(ex->ee_block));",
          "",
          "[Added Lines]",
          "123:    return (ext4_ext_pblock(ex) +",
          "124:     (block - le32_to_cpu(ex->ee_block)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "355: static int ext4_valid_extent(struct inode *inode, struct ext4_extent *ext)",
          "356: {",
          "358:  int len = ext4_ext_get_actual_len(ext);",
          "360:  return ext4_data_block_valid(EXT4_SB(inode->i_sb), block, len);",
          "",
          "[Removed Lines]",
          "357:  ext4_fsblk_t block = ext_pblock(ext);",
          "",
          "[Added Lines]",
          "309:  ext4_fsblk_t block = ext4_ext_pblock(ext);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "363: static int ext4_valid_extent_idx(struct inode *inode,",
          "364:     struct ext4_extent_idx *ext_idx)",
          "365: {",
          "368:  return ext4_data_block_valid(EXT4_SB(inode->i_sb), block, 1);",
          "369: }",
          "",
          "[Removed Lines]",
          "366:  ext4_fsblk_t block = idx_pblock(ext_idx);",
          "",
          "[Added Lines]",
          "318:  ext4_fsblk_t block = ext4_idx_pblock(ext_idx);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "463:  for (k = 0; k <= l; k++, path++) {",
          "464:   if (path->p_idx) {",
          "465:     ext_debug(\"  %d->%llu\", le32_to_cpu(path->p_idx->ei_block),",
          "467:   } else if (path->p_ext) {",
          "468:    ext_debug(\"  %d:[%d]%d:%llu \",",
          "469:       le32_to_cpu(path->p_ext->ee_block),",
          "470:       ext4_ext_is_uninitialized(path->p_ext),",
          "471:       ext4_ext_get_actual_len(path->p_ext),",
          "473:   } else",
          "474:    ext_debug(\"  []\");",
          "475:  }",
          "",
          "[Removed Lines]",
          "466:        idx_pblock(path->p_idx));",
          "472:       ext_pblock(path->p_ext));",
          "",
          "[Added Lines]",
          "418:        ext4_idx_pblock(path->p_idx));",
          "424:       ext4_ext_pblock(path->p_ext));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "494:  for (i = 0; i < le16_to_cpu(eh->eh_entries); i++, ex++) {",
          "495:   ext_debug(\"%d:[%d]%d:%llu \", le32_to_cpu(ex->ee_block),",
          "496:      ext4_ext_is_uninitialized(ex),",
          "498:  }",
          "499:  ext_debug(\"\\n\");",
          "500: }",
          "",
          "[Removed Lines]",
          "497:      ext4_ext_get_actual_len(ex), ext_pblock(ex));",
          "",
          "[Added Lines]",
          "449:      ext4_ext_get_actual_len(ex), ext4_ext_pblock(ex));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "546:  path->p_idx = l - 1;",
          "547:  ext_debug(\"  -> %d->%lld \", le32_to_cpu(path->p_idx->ei_block),",
          "550: #ifdef CHECK_BINSEARCH",
          "551:  {",
          "",
          "[Removed Lines]",
          "548:     idx_pblock(path->p_idx));",
          "",
          "[Added Lines]",
          "500:     ext4_idx_pblock(path->p_idx));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "614:  path->p_ext = l - 1;",
          "615:  ext_debug(\"  -> %d:%llu:[%d]%d \",",
          "616:    le32_to_cpu(path->p_ext->ee_block),",
          "618:    ext4_ext_is_uninitialized(path->p_ext),",
          "619:    ext4_ext_get_actual_len(path->p_ext));",
          "",
          "[Removed Lines]",
          "617:    ext_pblock(path->p_ext),",
          "",
          "[Added Lines]",
          "569:    ext4_ext_pblock(path->p_ext),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "682:      ppos, le16_to_cpu(eh->eh_entries), le16_to_cpu(eh->eh_max));",
          "684:   ext4_ext_binsearch_idx(inode, path + ppos, block);",
          "686:   path[ppos].p_depth = i;",
          "687:   path[ppos].p_ext = NULL;",
          "",
          "[Removed Lines]",
          "685:   path[ppos].p_block = idx_pblock(path[ppos].p_idx);",
          "",
          "[Added Lines]",
          "637:   path[ppos].p_block = ext4_idx_pblock(path[ppos].p_idx);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "721:  ext4_ext_binsearch(inode, path + ppos, block);",
          "723:  if (path[ppos].p_ext)",
          "726:  ext4_ext_show_path(inode, path);",
          "",
          "[Removed Lines]",
          "724:   path[ppos].p_block = ext_pblock(path[ppos].p_ext);",
          "",
          "[Added Lines]",
          "676:   path[ppos].p_block = ext4_ext_pblock(path[ppos].p_ext);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "917:    EXT_MAX_EXTENT(path[depth].p_hdr)) {",
          "918:   ext_debug(\"move %d:%llu:[%d]%d in new leaf %llu\\n\",",
          "919:     le32_to_cpu(path[depth].p_ext->ee_block),",
          "921:     ext4_ext_is_uninitialized(path[depth].p_ext),",
          "922:     ext4_ext_get_actual_len(path[depth].p_ext),",
          "923:     newblock);",
          "",
          "[Removed Lines]",
          "920:     ext_pblock(path[depth].p_ext),",
          "",
          "[Added Lines]",
          "872:     ext4_ext_pblock(path[depth].p_ext),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1007:   while (path[i].p_idx <= EXT_MAX_INDEX(path[i].p_hdr)) {",
          "1008:    ext_debug(\"%d: move %d:%llu in new index %llu\\n\", i,",
          "1009:      le32_to_cpu(path[i].p_idx->ei_block),",
          "1011:      newblock);",
          "1013:      sizeof(struct ext4_extent_idx));",
          "",
          "[Removed Lines]",
          "1010:      idx_pblock(path[i].p_idx),",
          "",
          "[Added Lines]",
          "962:      ext4_idx_pblock(path[i].p_idx),",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1146:  ext_debug(\"new root: num %d(%d), lblock %d, ptr %llu\\n\",",
          "1147:     le16_to_cpu(neh->eh_entries), le16_to_cpu(neh->eh_max),",
          "1148:     le32_to_cpu(EXT_FIRST_INDEX(neh)->ei_block),",
          "1151:  neh->eh_depth = cpu_to_le16(path->p_depth + 1);",
          "1152:  err = ext4_ext_dirty(handle, inode, curp);",
          "",
          "[Removed Lines]",
          "1149:     idx_pblock(EXT_FIRST_INDEX(neh)));",
          "",
          "[Added Lines]",
          "1101:     ext4_idx_pblock(EXT_FIRST_INDEX(neh)));",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1378:  ix++;",
          "1380:  while (++depth < path->p_depth) {",
          "1381:   bh = sb_bread(inode->i_sb, block);",
          "1382:   if (bh == NULL)",
          "",
          "[Removed Lines]",
          "1379:  block = idx_pblock(ix);",
          "",
          "[Added Lines]",
          "1331:  block = ext4_idx_pblock(ix);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1388:    return -EIO;",
          "1389:   }",
          "1390:   ix = EXT_FIRST_INDEX(eh);",
          "1392:   put_bh(bh);",
          "1393:  }",
          "",
          "[Removed Lines]",
          "1391:   block = idx_pblock(ix);",
          "",
          "[Added Lines]",
          "1343:   block = ext4_idx_pblock(ix);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1573:   return 0;",
          "1574: #endif",
          "1577:   return 1;",
          "1578:  return 0;",
          "1579: }",
          "",
          "[Removed Lines]",
          "1576:  if (ext_pblock(ex1) + ext1_ee_len == ext_pblock(ex2))",
          "",
          "[Added Lines]",
          "1528:  if (ext4_ext_pblock(ex1) + ext1_ee_len == ext4_ext_pblock(ex2))",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1706:  if (ex && !(flag & EXT4_GET_BLOCKS_PRE_IO)",
          "1707:   && ext4_can_extents_be_merged(inode, ex, newext)) {",
          "1708:   ext_debug(\"append [%d]%d block to %d:[%d]%d (from %llu)\\n\",",
          "1714:   err = ext4_ext_get_access(handle, inode, path + depth);",
          "1715:   if (err)",
          "1716:    return err;",
          "",
          "[Removed Lines]",
          "1709:     ext4_ext_is_uninitialized(newext),",
          "1710:     ext4_ext_get_actual_len(newext),",
          "1711:     le32_to_cpu(ex->ee_block),",
          "1712:     ext4_ext_is_uninitialized(ex),",
          "1713:     ext4_ext_get_actual_len(ex), ext_pblock(ex));",
          "",
          "[Added Lines]",
          "1661:      ext4_ext_is_uninitialized(newext),",
          "1662:      ext4_ext_get_actual_len(newext),",
          "1663:      le32_to_cpu(ex->ee_block),",
          "1664:      ext4_ext_is_uninitialized(ex),",
          "1665:      ext4_ext_get_actual_len(ex),",
          "1666:      ext4_ext_pblock(ex));",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1781:   ext_debug(\"first extent in the leaf: %d:%llu:[%d]%d\\n\",",
          "1782:     le32_to_cpu(newext->ee_block),",
          "1784:     ext4_ext_is_uninitialized(newext),",
          "1785:     ext4_ext_get_actual_len(newext));",
          "1786:   path[depth].p_ext = EXT_FIRST_EXTENT(eh);",
          "",
          "[Removed Lines]",
          "1783:     ext_pblock(newext),",
          "",
          "[Added Lines]",
          "1736:     ext4_ext_pblock(newext),",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1794:    ext_debug(\"insert %d:%llu:[%d]%d after: nearest 0x%p, \"",
          "1795:      \"move %d from 0x%p to 0x%p\\n\",",
          "1796:      le32_to_cpu(newext->ee_block),",
          "1798:      ext4_ext_is_uninitialized(newext),",
          "1799:      ext4_ext_get_actual_len(newext),",
          "1800:      nearex, len, nearex + 1, nearex + 2);",
          "",
          "[Removed Lines]",
          "1797:      ext_pblock(newext),",
          "",
          "[Added Lines]",
          "1750:      ext4_ext_pblock(newext),",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1808:   ext_debug(\"insert %d:%llu:[%d]%d before: nearest 0x%p, \"",
          "1809:     \"move %d from 0x%p to 0x%p\\n\",",
          "1810:     le32_to_cpu(newext->ee_block),",
          "1812:     ext4_ext_is_uninitialized(newext),",
          "1813:     ext4_ext_get_actual_len(newext),",
          "1814:     nearex, len, nearex + 1, nearex + 2);",
          "",
          "[Removed Lines]",
          "1811:     ext_pblock(newext),",
          "",
          "[Added Lines]",
          "1764:     ext4_ext_pblock(newext),",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1819:  le16_add_cpu(&eh->eh_entries, 1);",
          "1820:  nearex = path[depth].p_ext;",
          "1821:  nearex->ee_block = newext->ee_block;",
          "1823:  nearex->ee_len = newext->ee_len;",
          "1825: merge:",
          "",
          "[Removed Lines]",
          "1822:  ext4_ext_store_pblock(nearex, ext_pblock(newext));",
          "",
          "[Added Lines]",
          "1775:  ext4_ext_store_pblock(nearex, ext4_ext_pblock(newext));",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1923:   } else {",
          "1924:    cbex.ec_block = le32_to_cpu(ex->ee_block);",
          "1925:    cbex.ec_len = ext4_ext_get_actual_len(ex);",
          "1927:    cbex.ec_type = EXT4_EXT_CACHE_EXTENT;",
          "1928:   }",
          "",
          "[Removed Lines]",
          "1926:    cbex.ec_start = ext_pblock(ex);",
          "",
          "[Added Lines]",
          "1879:    cbex.ec_start = ext4_ext_pblock(ex);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2075:  path--;",
          "2077:  if (unlikely(path->p_hdr->eh_entries == 0)) {",
          "2078:   EXT4_ERROR_INODE(inode, \"path->p_hdr->eh_entries == 0\");",
          "2079:   return -EIO;",
          "",
          "[Removed Lines]",
          "2076:  leaf = idx_pblock(path->p_idx);",
          "",
          "[Added Lines]",
          "2029:  leaf = ext4_idx_pblock(path->p_idx);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2181:   ext4_fsblk_t start;",
          "2183:   num = le32_to_cpu(ex->ee_block) + ee_len - from;",
          "2185:   ext_debug(\"free last %u blocks starting %llu\\n\", num, start);",
          "2186:   ext4_free_blocks(handle, inode, 0, start, num, flags);",
          "2187:  } else if (from == le32_to_cpu(ex->ee_block)",
          "",
          "[Removed Lines]",
          "2184:   start = ext_pblock(ex) + ee_len - num;",
          "",
          "[Added Lines]",
          "2137:   start = ext4_ext_pblock(ex) + ee_len - num;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2310:    goto out;",
          "2312:   ext_debug(\"new extent: %u:%u:%llu\\n\", block, num,",
          "2314:   ex--;",
          "2315:   ex_ee_block = le32_to_cpu(ex->ee_block);",
          "2316:   ex_ee_len = ext4_ext_get_actual_len(ex);",
          "",
          "[Removed Lines]",
          "2313:     ext_pblock(ex));",
          "",
          "[Added Lines]",
          "2266:     ext4_ext_pblock(ex));",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2421:    struct buffer_head *bh;",
          "2423:    ext_debug(\"move to level %d (block %llu)\\n\",",
          "2425:    memset(path + i + 1, 0, sizeof(*path));",
          "2427:    if (!bh) {",
          "2429:     err = -EIO;",
          "",
          "[Removed Lines]",
          "2424:       i + 1, idx_pblock(path[i].p_idx));",
          "2426:    bh = sb_bread(sb, idx_pblock(path[i].p_idx));",
          "",
          "[Added Lines]",
          "2377:       i + 1, ext4_idx_pblock(path[i].p_idx));",
          "2379:    bh = sb_bread(sb, ext4_idx_pblock(path[i].p_idx));",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2543:  int ret;",
          "2545:  ee_len    = ext4_ext_get_actual_len(ex);",
          "2548:  ret = sb_issue_zeroout(inode->i_sb, ee_pblock, ee_len,",
          "2549:           GFP_NOFS, BLKDEV_IFL_WAIT);",
          "",
          "[Removed Lines]",
          "2546:  ee_pblock = ext_pblock(ex);",
          "",
          "[Added Lines]",
          "2499:  ee_pblock = ext4_ext_pblock(ex);",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2596:  ee_block = le32_to_cpu(ex->ee_block);",
          "2597:  ee_len = ext4_ext_get_actual_len(ex);",
          "2598:  allocated = ee_len - (map->m_lblk - ee_block);",
          "2601:  ex2 = ex;",
          "2602:  orig_ex.ee_block = ex->ee_block;",
          "2603:  orig_ex.ee_len   = cpu_to_le16(ee_len);",
          "",
          "[Removed Lines]",
          "2599:  newblock = map->m_lblk - ee_block + ext_pblock(ex);",
          "2604:  ext4_ext_store_pblock(&orig_ex, ext_pblock(ex));",
          "",
          "[Added Lines]",
          "2552:  newblock = map->m_lblk - ee_block + ext4_ext_pblock(ex);",
          "2557:  ext4_ext_store_pblock(&orig_ex, ext4_ext_pblock(ex));",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2621:   ex->ee_block = orig_ex.ee_block;",
          "2622:   ex->ee_len   = orig_ex.ee_len;",
          "2624:   ext4_ext_dirty(handle, inode, path + depth);",
          "2626:   return allocated;",
          "",
          "[Removed Lines]",
          "2623:   ext4_ext_store_pblock(ex, ext_pblock(&orig_ex));",
          "",
          "[Added Lines]",
          "2576:   ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2655:    ex->ee_block = orig_ex.ee_block;",
          "2656:    ex->ee_len   = cpu_to_le16(ee_len - allocated);",
          "2657:    ext4_ext_mark_uninitialized(ex);",
          "2659:    ext4_ext_dirty(handle, inode, path + depth);",
          "2661:    ex3 = &newex;",
          "",
          "[Removed Lines]",
          "2658:    ext4_ext_store_pblock(ex, ext_pblock(&orig_ex));",
          "",
          "[Added Lines]",
          "2611:    ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2670:      goto fix_extent_len;",
          "2671:     ex->ee_block = orig_ex.ee_block;",
          "2672:     ex->ee_len   = orig_ex.ee_len;",
          "2674:     ext4_ext_dirty(handle, inode, path + depth);",
          "2676:     return allocated;",
          "",
          "[Removed Lines]",
          "2673:     ext4_ext_store_pblock(ex, ext_pblock(&orig_ex));",
          "",
          "[Added Lines]",
          "2626:     ext4_ext_store_pblock(ex,",
          "2627:      ext4_ext_pblock(&orig_ex));",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2728:    ex->ee_block = orig_ex.ee_block;",
          "2729:    ex->ee_len   = orig_ex.ee_len;",
          "2731:    ext4_ext_dirty(handle, inode, path + depth);",
          "",
          "[Removed Lines]",
          "2730:    ext4_ext_store_pblock(ex, ext_pblock(&orig_ex));",
          "",
          "[Added Lines]",
          "2684:    ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2779:    ex->ee_block = orig_ex.ee_block;",
          "2780:    ex->ee_len   = orig_ex.ee_len;",
          "2782:    ext4_ext_dirty(handle, inode, path + depth);",
          "",
          "[Removed Lines]",
          "2781:    ext4_ext_store_pblock(ex, ext_pblock(&orig_ex));",
          "",
          "[Added Lines]",
          "2735:    ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2848:   ex->ee_block = orig_ex.ee_block;",
          "2849:   ex->ee_len   = orig_ex.ee_len;",
          "2851:   ext4_ext_dirty(handle, inode, path + depth);",
          "2853:   return allocated;",
          "",
          "[Removed Lines]",
          "2850:   ext4_ext_store_pblock(ex, ext_pblock(&orig_ex));",
          "",
          "[Added Lines]",
          "2804:   ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2860: fix_extent_len:",
          "2861:  ex->ee_block = orig_ex.ee_block;",
          "2862:  ex->ee_len   = orig_ex.ee_len;",
          "2864:  ext4_ext_mark_uninitialized(ex);",
          "2865:  ext4_ext_dirty(handle, inode, path + depth);",
          "2866:  return err;",
          "",
          "[Removed Lines]",
          "2863:  ext4_ext_store_pblock(ex, ext_pblock(&orig_ex));",
          "",
          "[Added Lines]",
          "2817:  ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2918:  ee_block = le32_to_cpu(ex->ee_block);",
          "2919:  ee_len = ext4_ext_get_actual_len(ex);",
          "2920:  allocated = ee_len - (map->m_lblk - ee_block);",
          "2923:  ex2 = ex;",
          "2924:  orig_ex.ee_block = ex->ee_block;",
          "2925:  orig_ex.ee_len   = cpu_to_le16(ee_len);",
          "",
          "[Removed Lines]",
          "2921:  newblock = map->m_lblk - ee_block + ext_pblock(ex);",
          "2926:  ext4_ext_store_pblock(&orig_ex, ext_pblock(ex));",
          "",
          "[Added Lines]",
          "2875:  newblock = map->m_lblk - ee_block + ext4_ext_pblock(ex);",
          "2880:  ext4_ext_store_pblock(&orig_ex, ext4_ext_pblock(ex));",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2973:    ex->ee_block = orig_ex.ee_block;",
          "2974:    ex->ee_len   = orig_ex.ee_len;",
          "2976:    ext4_ext_dirty(handle, inode, path + depth);",
          "",
          "[Removed Lines]",
          "2975:    ext4_ext_store_pblock(ex, ext_pblock(&orig_ex));",
          "",
          "[Added Lines]",
          "2929:    ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "3045:   ex->ee_block = orig_ex.ee_block;",
          "3046:   ex->ee_len   = orig_ex.ee_len;",
          "3048:   ext4_ext_dirty(handle, inode, path + depth);",
          "3050:   return allocated;",
          "",
          "[Removed Lines]",
          "3047:   ext4_ext_store_pblock(ex, ext_pblock(&orig_ex));",
          "",
          "[Added Lines]",
          "3001:   ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "3057: fix_extent_len:",
          "3058:  ex->ee_block = orig_ex.ee_block;",
          "3059:  ex->ee_len   = orig_ex.ee_len;",
          "3061:  ext4_ext_mark_uninitialized(ex);",
          "3062:  ext4_ext_dirty(handle, inode, path + depth);",
          "3063:  return err;",
          "",
          "[Removed Lines]",
          "3060:  ext4_ext_store_pblock(ex, ext_pblock(&orig_ex));",
          "",
          "[Added Lines]",
          "3014:  ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex));",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "3348:    newblock = map->m_lblk",
          "3349:        - le32_to_cpu(newex.ee_block)",
          "3352:    allocated = ext4_ext_get_actual_len(&newex) -",
          "3353:     (map->m_lblk - le32_to_cpu(newex.ee_block));",
          "",
          "[Removed Lines]",
          "3350:        + ext_pblock(&newex);",
          "",
          "[Added Lines]",
          "3304:        + ext4_ext_pblock(&newex);",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "3385:  ex = path[depth].p_ext;",
          "3386:  if (ex) {",
          "3387:   ext4_lblk_t ee_block = le32_to_cpu(ex->ee_block);",
          "3389:   unsigned short ee_len;",
          "",
          "[Removed Lines]",
          "3388:   ext4_fsblk_t ee_start = ext_pblock(ex);",
          "",
          "[Added Lines]",
          "3342:   ext4_fsblk_t ee_start = ext4_ext_pblock(ex);",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "3515:   ext4_discard_preallocations(inode);",
          "3517:      ext4_ext_get_actual_len(&newex), 0);",
          "3518:   goto out2;",
          "3519:  }",
          "3523:  allocated = ext4_ext_get_actual_len(&newex);",
          "3524:  if (allocated > map->m_len)",
          "3525:   allocated = map->m_len;",
          "",
          "[Removed Lines]",
          "3516:   ext4_free_blocks(handle, inode, 0, ext_pblock(&newex),",
          "3522:  newblock = ext_pblock(&newex);",
          "",
          "[Added Lines]",
          "3470:   ext4_free_blocks(handle, inode, 0, ext4_ext_pblock(&newex),",
          "3476:  newblock = ext4_ext_pblock(&newex);",
          "",
          "---------------"
        ],
        "fs/ext4/migrate.c||fs/ext4/migrate.c": [
          "File: fs/ext4/migrate.c -> fs/ext4/migrate.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "412:  struct buffer_head *bh;",
          "413:  struct ext4_extent_header *eh;",
          "416:  bh = sb_bread(inode->i_sb, block);",
          "417:  if (!bh)",
          "418:   return -EIO;",
          "",
          "[Removed Lines]",
          "415:  block = idx_pblock(ix);",
          "",
          "[Added Lines]",
          "415:  block = ext4_idx_pblock(ix);",
          "",
          "---------------"
        ],
        "fs/ext4/move_extent.c||fs/ext4/move_extent.c": [
          "File: fs/ext4/move_extent.c -> fs/ext4/move_extent.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:  if (EXT_LAST_EXTENT(path[ppos].p_hdr) > path[ppos].p_ext) {",
          "89:   return 0;",
          "90:  }",
          "",
          "[Removed Lines]",
          "88:   path[ppos].p_block = ext_pblock(path[ppos].p_ext);",
          "",
          "[Added Lines]",
          "88:   path[ppos].p_block = ext4_ext_pblock(path[ppos].p_ext);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:    path[ppos].p_idx++;",
          "100:    if (path[ppos+1].p_bh)",
          "101:     brelse(path[ppos+1].p_bh);",
          "102:    path[ppos+1].p_bh =",
          "",
          "[Removed Lines]",
          "99:    path[ppos].p_block = idx_pblock(path[ppos].p_idx);",
          "",
          "[Added Lines]",
          "99:    path[ppos].p_block = ext4_idx_pblock(path[ppos].p_idx);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "111:     path[cur_ppos].p_idx =",
          "112:      EXT_FIRST_INDEX(path[cur_ppos].p_hdr);",
          "113:     path[cur_ppos].p_block =",
          "115:     if (path[cur_ppos+1].p_bh)",
          "116:      brelse(path[cur_ppos+1].p_bh);",
          "117:     path[cur_ppos+1].p_bh = sb_bread(inode->i_sb,",
          "",
          "[Removed Lines]",
          "114:      idx_pblock(path[cur_ppos].p_idx);",
          "",
          "[Added Lines]",
          "114:      ext4_idx_pblock(path[cur_ppos].p_idx);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "133:    path[leaf_ppos].p_ext = *extent =",
          "134:     EXT_FIRST_EXTENT(path[leaf_ppos].p_hdr);",
          "135:    path[leaf_ppos].p_block =",
          "137:    return 0;",
          "138:   }",
          "139:  }",
          "",
          "[Removed Lines]",
          "136:      ext_pblock(path[leaf_ppos].p_ext);",
          "",
          "[Added Lines]",
          "136:      ext4_ext_pblock(path[leaf_ppos].p_ext);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "250:    o_end->ee_block = end_ext->ee_block;",
          "251:    o_end->ee_len = end_ext->ee_len;",
          "253:   }",
          "255:   o_start->ee_len = start_ext->ee_len;",
          "",
          "[Removed Lines]",
          "252:    ext4_ext_store_pblock(o_end, ext_pblock(end_ext));",
          "",
          "[Added Lines]",
          "252:    ext4_ext_store_pblock(o_end, ext4_ext_pblock(end_ext));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "277:   o_end->ee_block = end_ext->ee_block;",
          "278:   o_end->ee_len = end_ext->ee_len;",
          "",
          "[Removed Lines]",
          "279:   ext4_ext_store_pblock(o_end, ext_pblock(end_ext));",
          "",
          "[Added Lines]",
          "279:   ext4_ext_store_pblock(o_end, ext4_ext_pblock(end_ext));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "362:  if (new_ext->ee_len) {",
          "363:   o_start[i] = *new_ext;",
          "365:  }",
          "",
          "[Removed Lines]",
          "364:   ext4_ext_store_pblock(&o_start[i++], ext_pblock(new_ext));",
          "",
          "[Added Lines]",
          "364:   ext4_ext_store_pblock(&o_start[i++], ext4_ext_pblock(new_ext));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "488:  start_ext.ee_len = end_ext.ee_len = 0;",
          "490:  new_ext.ee_block = cpu_to_le32(*from);",
          "492:  new_ext.ee_len = dext->ee_len;",
          "493:  new_ext_alen = ext4_ext_get_actual_len(&new_ext);",
          "494:  new_ext_end = le32_to_cpu(new_ext.ee_block) + new_ext_alen - 1;",
          "",
          "[Removed Lines]",
          "491:  ext4_ext_store_pblock(&new_ext, ext_pblock(dext));",
          "",
          "[Added Lines]",
          "491:  ext4_ext_store_pblock(&new_ext, ext4_ext_pblock(dext));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "553:   copy_extent_status(oext, &end_ext);",
          "554:   end_ext_alen = ext4_ext_get_actual_len(&end_ext);",
          "555:   ext4_ext_store_pblock(&end_ext,",
          "557:   end_ext.ee_block =",
          "558:    cpu_to_le32(le32_to_cpu(o_end->ee_block) +",
          "559:    oext_alen - end_ext_alen);",
          "",
          "[Removed Lines]",
          "556:    (ext_pblock(o_end) + oext_alen - end_ext_alen));",
          "",
          "[Added Lines]",
          "556:    (ext4_ext_pblock(o_end) + oext_alen - end_ext_alen));",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "605:  diff = donor_off - le32_to_cpu(tmp_dext->ee_block);",
          "608:  tmp_dext->ee_block =",
          "609:    cpu_to_le32(le32_to_cpu(tmp_dext->ee_block) + diff);",
          "610:  tmp_dext->ee_len = cpu_to_le16(le16_to_cpu(tmp_dext->ee_len) - diff);",
          "",
          "[Removed Lines]",
          "607:  ext4_ext_store_pblock(tmp_dext, ext_pblock(tmp_dext) + diff);",
          "",
          "[Added Lines]",
          "607:  ext4_ext_store_pblock(tmp_dext, ext4_ext_pblock(tmp_dext) + diff);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "613:   tmp_dext->ee_len = cpu_to_le16(max_count);",
          "615:  orig_diff = orig_off - le32_to_cpu(tmp_oext->ee_block);",
          "619:  if (ext4_ext_get_actual_len(tmp_dext) >",
          "",
          "[Removed Lines]",
          "616:  ext4_ext_store_pblock(tmp_oext, ext_pblock(tmp_oext) + orig_diff);",
          "",
          "[Added Lines]",
          "616:  ext4_ext_store_pblock(tmp_oext, ext4_ext_pblock(tmp_oext) + orig_diff);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a0790c2c4a18435759a70e1562450035d778339",
      "candidate_info": {
        "commit_hash": "5a0790c2c4a18435759a70e1562450035d778339",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/5a0790c2c4a18435759a70e1562450035d778339",
        "files": [
          "fs/ext4/extents.c",
          "fs/ext4/inode.c",
          "fs/ext4/mballoc.c",
          "fs/ext4/namei.c",
          "fs/ext4/resize.c",
          "fs/jbd2/journal.c",
          "fs/jbd2/recovery.c"
        ],
        "message": "ext4: remove initialized but not read variables\n\nNo real bugs found, just removed some dead code.\n\nFound by gcc 4.6's new warnings.\n\nSigned-off-by: Andi Kleen <ak@linux.intel.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>",
        "before_after_code_files": [
          "fs/ext4/extents.c||fs/ext4/extents.c",
          "fs/ext4/inode.c||fs/ext4/inode.c",
          "fs/ext4/mballoc.c||fs/ext4/mballoc.c",
          "fs/ext4/namei.c||fs/ext4/namei.c",
          "fs/ext4/resize.c||fs/ext4/resize.c",
          "fs/jbd2/journal.c||fs/jbd2/journal.c",
          "fs/jbd2/recovery.c||fs/jbd2/recovery.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/ext4/extents.c||fs/ext4/extents.c"
          ],
          "candidate": [
            "fs/ext4/extents.c||fs/ext4/extents.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/ext4/extents.c||fs/ext4/extents.c": [
          "File: fs/ext4/extents.c -> fs/ext4/extents.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1083: {",
          "1084:  struct ext4_ext_path *curp = path;",
          "1085:  struct ext4_extent_header *neh;",
          "1087:  struct buffer_head *bh;",
          "1088:  ext4_fsblk_t newblock;",
          "1089:  int err = 0;",
          "",
          "[Removed Lines]",
          "1086:  struct ext4_extent_idx *fidx;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1144:  ext4_idx_store_pblock(curp->p_idx, newblock);",
          "1146:  neh = ext_inode_hdr(inode);",
          "1148:  ext_debug(\"new root: num %d(%d), lblock %d, ptr %llu\\n\",",
          "1149:     le16_to_cpu(neh->eh_entries), le16_to_cpu(neh->eh_max),",
          "1152:  neh->eh_depth = cpu_to_le16(path->p_depth + 1);",
          "1153:  err = ext4_ext_dirty(handle, inode, curp);",
          "",
          "[Removed Lines]",
          "1147:  fidx = EXT_FIRST_INDEX(neh);",
          "1150:     le32_to_cpu(fidx->ei_block), idx_pblock(fidx));",
          "",
          "[Added Lines]",
          "1148:     le32_to_cpu(EXT_FIRST_INDEX(neh)->ei_block),",
          "1149:     idx_pblock(EXT_FIRST_INDEX(neh)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2954:  struct ext4_extent *ex1 = NULL;",
          "2955:  struct ext4_extent *ex2 = NULL;",
          "2956:  struct ext4_extent *ex3 = NULL;",
          "2958:  ext4_lblk_t ee_block, eof_block;",
          "2959:  unsigned int allocated, ee_len, depth;",
          "2960:  ext4_fsblk_t newblock;",
          "",
          "[Removed Lines]",
          "2957:  struct ext4_extent_header *eh;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2971:   eof_block = map->m_lblk + map->m_len;",
          "2973:  depth = ext_depth(inode);",
          "2975:  ex = path[depth].p_ext;",
          "2976:  ee_block = le32_to_cpu(ex->ee_block);",
          "2977:  ee_len = ext4_ext_get_actual_len(ex);",
          "",
          "[Removed Lines]",
          "2974:  eh = path[depth].p_hdr;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3058:    err = PTR_ERR(path);",
          "3059:    goto out;",
          "3060:   }",
          "3062:   ex = path[depth].p_ext;",
          "3063:   if (ex2 != &newex)",
          "3064:    ex2 = ex;",
          "",
          "[Removed Lines]",
          "3061:   eh = path[depth].p_hdr;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/ext4/inode.c||fs/ext4/inode.c": [
          "File: fs/ext4/inode.c -> fs/ext4/inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3146:  int ret, retries = 0;",
          "3147:  struct page *page;",
          "3148:  pgoff_t index;",
          "3150:  struct inode *inode = mapping->host;",
          "3151:  handle_t *handle;",
          "3153:  index = pos >> PAGE_CACHE_SHIFT;",
          "3157:  if (ext4_nonda_switch(inode->i_sb)) {",
          "",
          "[Removed Lines]",
          "3149:  unsigned from, to;",
          "3154:  from = pos & (PAGE_CACHE_SIZE - 1);",
          "3155:  to = from + len;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5754: {",
          "5755:  struct ext4_inode *raw_inode;",
          "5756:  struct ext4_xattr_ibody_header *header;",
          "5759:  if (EXT4_I(inode)->i_extra_isize >= new_extra_isize)",
          "5760:   return 0;",
          "",
          "[Removed Lines]",
          "5757:  struct ext4_xattr_entry *entry;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5762:  raw_inode = ext4_raw_inode(&iloc);",
          "5764:  header = IHDR(inode, raw_inode);",
          "5768:  if (!ext4_test_inode_state(inode, EXT4_STATE_XATTR) ||",
          "",
          "[Removed Lines]",
          "5765:  entry = IFIRST(header);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/ext4/mballoc.c||fs/ext4/mballoc.c": [
          "File: fs/ext4/mballoc.c -> fs/ext4/mballoc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1999:  ext4_group_t ngroups, group, i;",
          "2000:  int cr;",
          "2001:  int err = 0;",
          "2003:  struct ext4_sb_info *sbi;",
          "2004:  struct super_block *sb;",
          "2005:  struct ext4_buddy e4b;",
          "",
          "[Removed Lines]",
          "2002:  int bsbits;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2041:    ac->ac_2order = i - 1;",
          "2042:  }",
          "2047:  if (ac->ac_flags & EXT4_MB_STREAM_ALLOC) {",
          "",
          "[Removed Lines]",
          "2044:  bsbits = ac->ac_sb->s_blocksize_bits;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2712:     handle_t *handle, unsigned int reserv_blks)",
          "2713: {",
          "2714:  struct buffer_head *bitmap_bh = NULL;",
          "2716:  struct ext4_group_desc *gdp;",
          "2717:  struct buffer_head *gdp_bh;",
          "2718:  struct ext4_sb_info *sbi;",
          "",
          "[Removed Lines]",
          "2715:  struct ext4_super_block *es;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2726:  sb = ac->ac_sb;",
          "2727:  sbi = EXT4_SB(sb);",
          "2731:  err = -EIO;",
          "2732:  bitmap_bh = ext4_read_block_bitmap(sb, ac->ac_b_ex.fe_group);",
          "",
          "[Removed Lines]",
          "2728:  es = sbi->s_es;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2850:  int bsbits, max;",
          "2851:  ext4_lblk_t end;",
          "2852:  loff_t size, orig_size, start_off;",
          "2854:  struct ext4_inode_info *ei = EXT4_I(ac->ac_inode);",
          "2855:  struct ext4_prealloc_space *pa;",
          "",
          "[Removed Lines]",
          "2853:  ext4_lblk_t start, orig_start;",
          "",
          "[Added Lines]",
          "2847:  ext4_lblk_t start;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2881:  size = size << bsbits;",
          "2882:  if (size < i_size_read(ac->ac_inode))",
          "2883:   size = i_size_read(ac->ac_inode);",
          "2886:  max = 2 << bsbits;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2878:  orig_size = size;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2922:   start_off = (loff_t)ac->ac_o_ex.fe_logical << bsbits;",
          "2923:   size   = ac->ac_o_ex.fe_len << bsbits;",
          "2924:  }",
          "2929:  if (ar->pleft && start <= ar->lleft) {",
          "",
          "[Removed Lines]",
          "2925:  orig_size = size = size >> bsbits;",
          "2926:  orig_start = start = start_off >> bsbits;",
          "",
          "[Added Lines]",
          "2920:  size = size >> bsbits;",
          "2921:  start = start_off >> bsbits;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3547:  ext4_group_t group;",
          "3548:  ext4_grpblk_t bit;",
          "3549:  unsigned long long grp_blk_start;",
          "3551:  int err = 0;",
          "3552:  int free = 0;",
          "",
          "[Removed Lines]",
          "3550:  sector_t start;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3567:   if (bit >= end)",
          "3568:    break;",
          "3569:   next = mb_find_next_bit(bitmap_bh->b_data, end, bit);",
          "3571:   mb_debug(1, \"    free preallocated %u/%u in group %u\\n\",",
          "3574:   free += next - bit;",
          "3576:   if (ac) {",
          "",
          "[Removed Lines]",
          "3570:   start = ext4_group_first_block_no(sb, group) + bit;",
          "3572:     (unsigned) start, (unsigned) next - bit,",
          "3573:     (unsigned) group);",
          "",
          "[Added Lines]",
          "3565:     (unsigned) ext4_group_first_block_no(sb, group) + bit,",
          "3566:     (unsigned) next - bit, (unsigned) group);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4494:  struct super_block *sb = inode->i_sb;",
          "4495:  struct ext4_allocation_context *ac = NULL;",
          "4496:  struct ext4_group_desc *gdp;",
          "4498:  unsigned long freed = 0;",
          "4499:  unsigned int overflow;",
          "4500:  ext4_grpblk_t bit;",
          "",
          "[Removed Lines]",
          "4497:  struct ext4_super_block *es;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4513:  }",
          "4515:  sbi = EXT4_SB(sb);",
          "4517:  if (!(flags & EXT4_FREE_BLOCKS_VALIDATED) &&",
          "4518:      !ext4_data_block_valid(sbi, block, count)) {",
          "4519:   ext4_error(sb, \"Freeing blocks not in datazone - \"",
          "",
          "[Removed Lines]",
          "4516:  es = EXT4_SB(sb)->s_es;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/ext4/namei.c||fs/ext4/namei.c": [
          "File: fs/ext4/namei.c -> fs/ext4/namei.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1088: struct dentry *ext4_get_parent(struct dentry *child)",
          "1089: {",
          "1090:  __u32 ino;",
          "1092:  static const struct qstr dotdot = {",
          "1093:   .name = \"..\",",
          "1094:   .len = 2,",
          "",
          "[Removed Lines]",
          "1091:  struct inode *inode;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1097:  struct buffer_head *bh;",
          "1099:  bh = ext4_find_entry(child->d_inode, &dotdot, &de);",
          "1101:  if (!bh)",
          "1102:   return ERR_PTR(-ENOENT);",
          "1103:  ino = le32_to_cpu(de->inode);",
          "",
          "[Removed Lines]",
          "1100:  inode = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/ext4/resize.c||fs/ext4/resize.c": [
          "File: fs/ext4/resize.c -> fs/ext4/resize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "952:         ext4_fsblk_t n_blocks_count)",
          "953: {",
          "954:  ext4_fsblk_t o_blocks_count;",
          "956:  ext4_grpblk_t last;",
          "957:  ext4_grpblk_t add;",
          "958:  struct buffer_head *bh;",
          "",
          "[Removed Lines]",
          "955:  ext4_group_t o_groups_count;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "966:  o_blocks_count = ext4_blocks_count(es);",
          "969:  if (test_opt(sb, DEBUG))",
          "970:   printk(KERN_DEBUG \"EXT4-fs: extending last group from %llu uto %llu blocks\\n\",",
          "",
          "[Removed Lines]",
          "967:  o_groups_count = EXT4_SB(sb)->s_groups_count;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/jbd2/journal.c||fs/jbd2/journal.c": [
          "File: fs/jbd2/journal.c -> fs/jbd2/journal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1392: int jbd2_journal_check_available_features (journal_t *journal, unsigned long compat,",
          "1393:           unsigned long ro, unsigned long incompat)",
          "1394: {",
          "1397:  if (!compat && !ro && !incompat)",
          "1398:   return 1;",
          "",
          "[Removed Lines]",
          "1395:  journal_superblock_t *sb;",
          "1400:  sb = journal->j_superblock;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1619: int jbd2_journal_wipe(journal_t *journal, int write)",
          "1620: {",
          "1622:  int err = 0;",
          "1624:  J_ASSERT (!(journal->j_flags & JBD2_LOADED));",
          "",
          "[Removed Lines]",
          "1621:  journal_superblock_t *sb;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1627:  if (err)",
          "1628:   return err;",
          "1632:  if (!journal->j_tail)",
          "1633:   goto no_recovery;",
          "",
          "[Removed Lines]",
          "1630:  sb = journal->j_superblock;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2202: void jbd2_journal_release_jbd_inode(journal_t *journal,",
          "2203:         struct jbd2_inode *jinode)",
          "2204: {",
          "2207:  if (!journal)",
          "2208:   return;",
          "2209: restart:",
          "",
          "[Removed Lines]",
          "2205:  int writeout = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2220:   goto restart;",
          "2221:  }",
          "2226:  if (jinode->i_transaction) {",
          "2227:   list_del(&jinode->i_list);",
          "2228:   jinode->i_transaction = NULL;",
          "",
          "[Removed Lines]",
          "2224:  if (journal->j_committing_transaction == jinode->i_transaction)",
          "2225:   writeout = 1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "fs/jbd2/recovery.c||fs/jbd2/recovery.c": [
          "File: fs/jbd2/recovery.c -> fs/jbd2/recovery.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "285: int jbd2_journal_skip_recovery(journal_t *journal)",
          "286: {",
          "287:  int   err;",
          "290:  struct recovery_info info;",
          "292:  memset (&info, 0, sizeof(info));",
          "295:  err = do_one_pass(journal, &info, PASS_SCAN);",
          "",
          "[Removed Lines]",
          "288:  journal_superblock_t * sb;",
          "293:  sb = journal->j_superblock;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "299:   ++journal->j_transaction_sequence;",
          "300:  } else {",
          "301: #ifdef CONFIG_JBD2_DEBUG",
          "303: #endif",
          "304:   jbd_debug(1,",
          "305:      \"JBD: ignoring %d transaction%s from the journal.\\n\",",
          "",
          "[Removed Lines]",
          "302:   int dropped = info.end_transaction - be32_to_cpu(sb->s_sequence);",
          "",
          "[Added Lines]",
          "300:   int dropped = info.end_transaction -",
          "301:    be32_to_cpu(journal->j_superblock->s_sequence);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "365:  int   tag_bytes = journal_tag_bytes(journal);",
          "",
          "[Removed Lines]",
          "369:  int   MAX_BLOCKS_PER_DESC;",
          "370:  MAX_BLOCKS_PER_DESC = ((journal->j_blocksize-sizeof(journal_header_t))",
          "371:           / tag_bytes);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0562e0bad483d10e9651fbb8f21dc3d0bad57374",
      "candidate_info": {
        "commit_hash": "0562e0bad483d10e9651fbb8f21dc3d0bad57374",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0562e0bad483d10e9651fbb8f21dc3d0bad57374",
        "files": [
          "fs/ext4/balloc.c",
          "fs/ext4/extents.c",
          "fs/ext4/fsync.c",
          "fs/ext4/ialloc.c",
          "fs/ext4/inode.c",
          "fs/ext4/namei.c",
          "include/trace/events/ext4.h",
          "include/trace/events/jbd2.h"
        ],
        "message": "ext4: add more tracepoints and use dev_t in the trace buffer\n\n- Add more ext4 tracepoints.\n- Change ext4 tracepoints to use dev_t field with MAJOR/MINOR macros\nso that we can save 4 bytes in the ring buffer on some platforms.\n- Add sync_mode to ext4_da_writepages, ext4_da_write_pages, and\next4_da_writepages_result tracepoints. Also remove for_reclaim\nfield from ext4_da_writepages since it is usually not very useful.\n\nSigned-off-by: Jiaying Zhang <jiayingz@google.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>",
        "before_after_code_files": [
          "fs/ext4/balloc.c||fs/ext4/balloc.c",
          "fs/ext4/extents.c||fs/ext4/extents.c",
          "fs/ext4/fsync.c||fs/ext4/fsync.c",
          "fs/ext4/ialloc.c||fs/ext4/ialloc.c",
          "fs/ext4/inode.c||fs/ext4/inode.c",
          "fs/ext4/namei.c||fs/ext4/namei.c",
          "include/trace/events/ext4.h||include/trace/events/ext4.h",
          "include/trace/events/jbd2.h||include/trace/events/jbd2.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/ext4/extents.c||fs/ext4/extents.c"
          ],
          "candidate": [
            "fs/ext4/extents.c||fs/ext4/extents.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/ext4/balloc.c||fs/ext4/balloc.c": [
          "File: fs/ext4/balloc.c -> fs/ext4/balloc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include \"ext4_jbd2.h\"",
          "22: #include \"mballoc.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include <trace/events/ext4.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "345:  set_bitmap_uptodate(bh);",
          "346:  if (bh_submit_read(bh) < 0) {",
          "347:   put_bh(bh);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "347:  trace_ext4_read_block_bitmap_load(sb, block_group);",
          "",
          "---------------"
        ],
        "fs/ext4/extents.c||fs/ext4/extents.c": [
          "File: fs/ext4/extents.c -> fs/ext4/extents.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: #include \"ext4_jbd2.h\"",
          "45: #include \"ext4_extents.h\"",
          "47: static int ext4_ext_truncate_extend_restart(handle_t *handle,",
          "48:          struct inode *inode,",
          "49:          int needed)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: #include <trace/events/ext4.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "664:   if (unlikely(!bh))",
          "665:    goto err;",
          "666:   if (!bh_uptodate_or_lock(bh)) {",
          "667:    if (bh_submit_read(bh) < 0) {",
          "668:     put_bh(bh);",
          "669:     goto err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "669:    trace_ext4_ext_load_extent(inode, block,",
          "670:       path[ppos].p_block);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3297:  struct ext4_ext_path *path = NULL;",
          "3298:  struct ext4_extent_header *eh;",
          "3299:  struct ext4_extent newex, *ex;",
          "3301:  int err = 0, depth, ret;",
          "3302:  unsigned int allocated = 0;",
          "3303:  struct ext4_allocation_request ar;",
          "",
          "[Removed Lines]",
          "3300:  ext4_fsblk_t newblock;",
          "",
          "[Added Lines]",
          "3304:  ext4_fsblk_t newblock = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3306:  ext_debug(\"blocks %u/%u requested for inode %lu\\n\",",
          "3307:     map->m_lblk, map->m_len, inode->i_ino);",
          "3310:  if (ext4_ext_in_cache(inode, map->m_lblk, &newex)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3312:  trace_ext4_ext_map_blocks_enter(inode, map->m_lblk, map->m_len, flags);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3525:   ext4_ext_drop_refs(path);",
          "3526:   kfree(path);",
          "3527:  }",
          "3528:  return err ? err : allocated;",
          "3529: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3533:  trace_ext4_ext_map_blocks_exit(inode, map->m_lblk,",
          "3534:   newblock, map->m_len, err ? err : allocated);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3658:  if (!(ext4_test_inode_flag(inode, EXT4_INODE_EXTENTS)))",
          "3659:   return -EOPNOTSUPP;",
          "3661:  map.m_lblk = offset >> blkbits;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3668:  trace_ext4_fallocate_enter(inode, offset, len, mode);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3673:  ret = inode_newsize_ok(inode, (len + offset));",
          "3674:  if (ret) {",
          "3675:   mutex_unlock(&inode->i_mutex);",
          "3676:   return ret;",
          "3677:  }",
          "3678: retry:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3684:   trace_ext4_fallocate_exit(inode, offset, max_blocks, ret);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3717:   goto retry;",
          "3718:  }",
          "3719:  mutex_unlock(&inode->i_mutex);",
          "3720:  return ret > 0 ? ret2 : ret;",
          "3721: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3729:  trace_ext4_fallocate_exit(inode, offset, max_blocks,",
          "3730:     ret > 0 ? ret2 : ret);",
          "",
          "---------------"
        ],
        "fs/ext4/fsync.c||fs/ext4/fsync.c": [
          "File: fs/ext4/fsync.c -> fs/ext4/fsync.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:  J_ASSERT(ext4_journal_current_handle() == NULL);",
          "169:  if (inode->i_sb->s_flags & MS_RDONLY)",
          "170:   return 0;",
          "172:  ret = ext4_flush_completed_IO(inode);",
          "173:  if (ret < 0)",
          "176:  if (!journal) {",
          "177:   ret = generic_file_fsync(file, datasync);",
          "178:   if (!ret && !list_empty(&inode->i_dentry))",
          "179:    ext4_sync_parent(inode);",
          "181:  }",
          "",
          "[Removed Lines]",
          "167:  trace_ext4_sync_file(file, datasync);",
          "174:   return ret;",
          "180:   return ret;",
          "",
          "[Added Lines]",
          "167:  trace_ext4_sync_file_enter(file, datasync);",
          "174:   goto out;",
          "180:   goto out;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "200:  commit_tid = datasync ? ei->i_datasync_tid : ei->i_sync_tid;",
          "201:  if (jbd2_log_start_commit(journal, commit_tid)) {",
          "",
          "[Removed Lines]",
          "197:  if (ext4_should_journal_data(inode))",
          "198:   return ext4_force_commit(inode->i_sb);",
          "",
          "[Added Lines]",
          "197:  if (ext4_should_journal_data(inode)) {",
          "198:   ret = ext4_force_commit(inode->i_sb);",
          "199:   goto out;",
          "200:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "215:   ret = jbd2_log_wait_commit(journal, commit_tid);",
          "216:  } else if (journal->j_flags & JBD2_BARRIER)",
          "217:   blkdev_issue_flush(inode->i_sb->s_bdev, GFP_KERNEL, NULL);",
          "218:  return ret;",
          "219: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "220:  out:",
          "221:  trace_ext4_sync_file_exit(inode, ret);",
          "",
          "---------------"
        ],
        "fs/ext4/ialloc.c||fs/ext4/ialloc.c": [
          "File: fs/ext4/ialloc.c -> fs/ext4/ialloc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:  set_bitmap_uptodate(bh);",
          "156:  if (bh_submit_read(bh) < 0) {",
          "157:   put_bh(bh);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "155:  trace_ext4_load_inode_bitmap(sb, block_group);",
          "",
          "---------------"
        ],
        "fs/ext4/inode.c||fs/ext4/inode.c": [
          "File: fs/ext4/inode.c -> fs/ext4/inode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "973:  int count = 0;",
          "974:  ext4_fsblk_t first_block = 0;",
          "976:  J_ASSERT(!(ext4_test_inode_flag(inode, EXT4_INODE_EXTENTS)));",
          "977:  J_ASSERT(handle != NULL || (flags & EXT4_GET_BLOCKS_CREATE) == 0);",
          "978:  depth = ext4_block_to_path(inode, map->m_lblk, offsets,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "976:  trace_ext4_ind_map_blocks_enter(inode, map->m_lblk, map->m_len, flags);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1058:   partial--;",
          "1059:  }",
          "1060: out:",
          "1061:  return err;",
          "1062: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1062:  trace_ext4_ind_map_blocks_exit(inode, map->m_lblk,",
          "1063:     map->m_pblk, map->m_len, err);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3380: static int ext4_readpage(struct file *file, struct page *page)",
          "3381: {",
          "3382:  return mpage_readpage(page, ext4_get_block);",
          "3383: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3385:  trace_ext4_readpage(page);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3413: {",
          "3414:  journal_t *journal = EXT4_JOURNAL(page->mapping->host);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3420:  trace_ext4_invalidatepage(page, offset);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3434: {",
          "3435:  journal_t *journal = EXT4_JOURNAL(page->mapping->host);",
          "3437:  WARN_ON(PageChecked(page));",
          "3438:  if (!page_has_buffers(page))",
          "3439:   return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3443:  trace_ext4_releasepage(page);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3792: {",
          "3793:  struct file *file = iocb->ki_filp;",
          "3794:  struct inode *inode = file->f_mapping->host;",
          "3796:  if (ext4_test_inode_flag(inode, EXT4_INODE_EXTENTS))",
          "3800: }",
          "",
          "[Removed Lines]",
          "3797:   return ext4_ext_direct_IO(rw, iocb, iov, offset, nr_segs);",
          "3799:  return ext4_ind_direct_IO(rw, iocb, iov, offset, nr_segs);",
          "",
          "[Added Lines]",
          "3803:  ssize_t ret;",
          "3805:  trace_ext4_direct_IO_enter(inode, offset, iov_length(iov, nr_segs), rw);",
          "3807:   ret = ext4_ext_direct_IO(rw, iocb, iov, offset, nr_segs);",
          "3808:  else",
          "3809:   ret = ext4_ind_direct_IO(rw, iocb, iov, offset, nr_segs);",
          "3810:  trace_ext4_direct_IO_exit(inode, offset,",
          "3811:     iov_length(iov, nr_segs), rw, ret);",
          "3812:  return ret;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4425:  ext4_lblk_t last_block;",
          "4426:  unsigned blocksize = inode->i_sb->s_blocksize;",
          "4428:  if (!ext4_can_truncate(inode))",
          "4429:   return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4441:  trace_ext4_truncate_enter(inode);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4436:  if (ext4_test_inode_flag(inode, EXT4_INODE_EXTENTS)) {",
          "4437:   ext4_ext_truncate(inode);",
          "4438:   return;",
          "4439:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4453:   trace_ext4_truncate_exit(inode);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4564:   ext4_orphan_del(handle, inode);",
          "4566:  ext4_journal_stop(handle);",
          "4567: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4583:  trace_ext4_truncate_exit(inode);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4698:   get_bh(bh);",
          "4699:   bh->b_end_io = end_buffer_read_sync;",
          "4700:   submit_bh(READ_META, bh);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4715:   trace_ext4_load_inode(inode);",
          "",
          "---------------"
        ],
        "fs/ext4/namei.c||fs/ext4/namei.c": [
          "File: fs/ext4/namei.c -> fs/ext4/namei.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: #include \"xattr.h\"",
          "41: #include \"acl.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: #include <trace/events/ext4.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2183:  struct ext4_dir_entry_2 *de;",
          "2184:  handle_t *handle;",
          "2188:  dquot_initialize(dir);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2187:  trace_ext4_unlink_enter(dir, dentry);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2228: end_unlink:",
          "2229:  ext4_journal_stop(handle);",
          "2230:  brelse(bh);",
          "2231:  return retval;",
          "2232: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2233:  trace_ext4_unlink_exit(dentry, retval);",
          "",
          "---------------"
        ],
        "include/trace/events/ext4.h||include/trace/events/ext4.h": [
          "File: include/trace/events/ext4.h -> include/trace/events/ext4.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:  TP_ARGS(inode),",
          "23:  TP_STRUCT__entry(",
          "26:   __field( ino_t, ino   )",
          "27:   __field( umode_t, mode   )",
          "28:   __field( uid_t, uid   )",
          "",
          "[Removed Lines]",
          "24:   __field( int,   dev_major                )",
          "25:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "24:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:  ),",
          "33:  TP_fast_assign(",
          "36:   __entry->ino = inode->i_ino;",
          "37:   __entry->mode = inode->i_mode;",
          "38:   __entry->uid = inode->i_uid;",
          "",
          "[Removed Lines]",
          "34:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "35:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "33:   __entry->dev = inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "41:  ),",
          "43:  TP_printk(\"dev %d,%d ino %lu mode 0%o uid %u gid %u blocks %llu\",",
          "47:     (unsigned long long) __entry->blocks)",
          "48: );",
          "",
          "[Removed Lines]",
          "44:     __entry->dev_major, __entry->dev_minor,",
          "45:     (unsigned long) __entry->ino, __entry->mode,",
          "46:     __entry->uid, __entry->gid,",
          "",
          "[Added Lines]",
          "42:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "43:     (unsigned long) __entry->ino,",
          "44:     __entry->mode, __entry->uid, __entry->gid,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "53:  TP_ARGS(dir, mode),",
          "55:  TP_STRUCT__entry(",
          "58:   __field( ino_t, dir   )",
          "59:   __field( umode_t, mode   )",
          "60:  ),",
          "62:  TP_fast_assign(",
          "65:   __entry->dir = dir->i_ino;",
          "66:   __entry->mode = mode;",
          "67:  ),",
          "69:  TP_printk(\"dev %d,%d dir %lu mode 0%o\",",
          "71:     (unsigned long) __entry->dir, __entry->mode)",
          "72: );",
          "",
          "[Removed Lines]",
          "56:   __field( int,   dev_major                )",
          "57:   __field( int,   dev_minor                )",
          "63:   __entry->dev_major = MAJOR(dir->i_sb->s_dev);",
          "64:   __entry->dev_minor = MINOR(dir->i_sb->s_dev);",
          "70:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "54:   __field( dev_t, dev   )",
          "60:   __entry->dev = dir->i_sb->s_dev;",
          "66:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "77:  TP_ARGS(inode, dir, mode),",
          "79:  TP_STRUCT__entry(",
          "82:   __field( ino_t, ino   )",
          "83:   __field( ino_t, dir   )",
          "84:   __field( umode_t, mode   )",
          "85:  ),",
          "87:  TP_fast_assign(",
          "90:   __entry->ino = inode->i_ino;",
          "91:   __entry->dir = dir->i_ino;",
          "92:   __entry->mode = mode;",
          "93:  ),",
          "95:  TP_printk(\"dev %d,%d ino %lu dir %lu mode 0%o\",",
          "97:     (unsigned long) __entry->ino,",
          "98:     (unsigned long) __entry->dir, __entry->mode)",
          "99: );",
          "",
          "[Removed Lines]",
          "80:   __field( int,   dev_major                )",
          "81:   __field( int,   dev_minor                )",
          "88:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "89:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "96:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "76:   __field( dev_t, dev   )",
          "83:   __entry->dev = inode->i_sb->s_dev;",
          "90:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "104:  TP_ARGS(inode),",
          "106:  TP_STRUCT__entry(",
          "109:   __field( ino_t, ino   )",
          "110:   __field( int, nlink   )",
          "111:  ),",
          "113:  TP_fast_assign(",
          "116:   __entry->ino = inode->i_ino;",
          "117:   __entry->nlink = inode->i_nlink;",
          "118:  ),",
          "120:  TP_printk(\"dev %d,%d ino %lu nlink %d\",",
          "122:     (unsigned long) __entry->ino, __entry->nlink)",
          "123: );",
          "",
          "[Removed Lines]",
          "107:   __field( int,   dev_major                )",
          "108:   __field( int,   dev_minor                )",
          "114:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "115:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "121:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "101:   __field( dev_t, dev   )",
          "107:   __entry->dev = inode->i_sb->s_dev;",
          "113:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "128:  TP_ARGS(inode, drop),",
          "130:  TP_STRUCT__entry(",
          "133:   __field( ino_t, ino   )",
          "134:   __field( int, drop   )",
          "135:  ),",
          "137:  TP_fast_assign(",
          "140:   __entry->ino = inode->i_ino;",
          "141:   __entry->drop = drop;",
          "142:  ),",
          "144:  TP_printk(\"dev %d,%d ino %lu drop %d\",",
          "146:     (unsigned long) __entry->ino, __entry->drop)",
          "147: );",
          "",
          "[Removed Lines]",
          "131:   __field( int, dev_major  )",
          "132:   __field( int, dev_minor  )",
          "138:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "139:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "145:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "123:   __field( dev_t, dev   )",
          "129:   __entry->dev = inode->i_sb->s_dev;",
          "135:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "152:  TP_ARGS(inode, IP),",
          "154:  TP_STRUCT__entry(",
          "157:   __field( ino_t, ino   )",
          "158:   __field(unsigned long, ip   )",
          "159:  ),",
          "161:  TP_fast_assign(",
          "164:   __entry->ino = inode->i_ino;",
          "165:   __entry->ip = IP;",
          "166:  ),",
          "168:  TP_printk(\"dev %d,%d ino %lu caller %pF\",",
          "170:     (unsigned long) __entry->ino, (void *)__entry->ip)",
          "171: );",
          "",
          "[Removed Lines]",
          "155:   __field( int, dev_major  )",
          "156:   __field( int, dev_minor  )",
          "162:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "163:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "169:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "145:   __field( dev_t, dev   )",
          "151:   __entry->dev = inode->i_sb->s_dev;",
          "157:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "176:  TP_ARGS(inode, new_size),",
          "178:  TP_STRUCT__entry(",
          "181:   __field( ino_t, ino   )",
          "182:   __field( loff_t, new_size  )",
          "183:  ),",
          "185:  TP_fast_assign(",
          "188:   __entry->ino  = inode->i_ino;",
          "189:   __entry->new_size = new_size;",
          "190:  ),",
          "192:  TP_printk(\"dev %d,%d ino %lu new_size %lld\",",
          "194:     (unsigned long) __entry->ino,",
          "195:     (long long) __entry->new_size)",
          "196: );",
          "",
          "[Removed Lines]",
          "179:   __field( int, dev_major  )",
          "180:   __field( int, dev_minor  )",
          "186:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "187:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "193:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "167:   __field( dev_t, dev   )",
          "173:   __entry->dev  = inode->i_sb->s_dev;",
          "179:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "203:  TP_ARGS(inode, pos, len, flags),",
          "205:  TP_STRUCT__entry(",
          "208:   __field( ino_t, ino   )",
          "209:   __field( loff_t, pos   )",
          "210:   __field( unsigned int, len  )",
          "",
          "[Removed Lines]",
          "206:   __field( int,   dev_major                )",
          "207:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "192:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "212:  ),",
          "214:  TP_fast_assign(",
          "217:   __entry->ino = inode->i_ino;",
          "218:   __entry->pos = pos;",
          "219:   __entry->len = len;",
          "",
          "[Removed Lines]",
          "215:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "216:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "200:   __entry->dev = inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "221:  ),",
          "223:  TP_printk(\"dev %d,%d ino %lu pos %llu len %u flags %u\",",
          "225:     (unsigned long) __entry->ino,",
          "226:     __entry->pos, __entry->len, __entry->flags)",
          "227: );",
          "",
          "[Removed Lines]",
          "224:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "208:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "249:  TP_ARGS(inode, pos, len, copied),",
          "251:  TP_STRUCT__entry(",
          "254:   __field( ino_t, ino   )",
          "255:   __field( loff_t, pos   )",
          "256:   __field( unsigned int, len  )",
          "",
          "[Removed Lines]",
          "252:   __field( int,   dev_major                )",
          "253:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "236:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "258:  ),",
          "260:  TP_fast_assign(",
          "263:   __entry->ino = inode->i_ino;",
          "264:   __entry->pos = pos;",
          "265:   __entry->len = len;",
          "",
          "[Removed Lines]",
          "261:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "262:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "244:   __entry->dev = inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "267:  ),",
          "269:  TP_printk(\"dev %d,%d ino %lu pos %llu len %u copied %u\",",
          "273: );",
          "275: DEFINE_EVENT(ext4__write_end, ext4_ordered_write_end,",
          "",
          "[Removed Lines]",
          "270:     __entry->dev_major, __entry->dev_minor,",
          "271:     (unsigned long) __entry->ino, __entry->pos,",
          "272:     __entry->len, __entry->copied)",
          "",
          "[Added Lines]",
          "252:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "253:     (unsigned long) __entry->ino,",
          "254:     __entry->pos, __entry->len, __entry->copied)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "310:  TP_ARGS(inode, page),",
          "312:  TP_STRUCT__entry(",
          "315:   __field( ino_t, ino   )",
          "316:   __field( pgoff_t, index   )",
          "318:  ),",
          "320:  TP_fast_assign(",
          "323:   __entry->ino = inode->i_ino;",
          "324:   __entry->index = page->index;",
          "325:  ),",
          "327:  TP_printk(\"dev %d,%d ino %lu page_index %lu\",",
          "329:     (unsigned long) __entry->ino, __entry->index)",
          "330: );",
          "",
          "[Removed Lines]",
          "313:   __field( int,   dev_major                )",
          "314:   __field( int,   dev_minor                )",
          "321:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "322:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "328:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "295:   __field( dev_t, dev   )",
          "302:   __entry->dev = inode->i_sb->s_dev;",
          "308:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "335:  TP_ARGS(inode, wbc),",
          "337:  TP_STRUCT__entry(",
          "340:   __field( ino_t, ino   )",
          "341:   __field( long, nr_to_write  )",
          "342:   __field( long, pages_skipped  )",
          "343:   __field( loff_t, range_start  )",
          "344:   __field( loff_t, range_end  )",
          "345:   __field( char, for_kupdate  )",
          "347:   __field( char, range_cyclic  )",
          "348:   __field(       pgoff_t, writeback_index  )",
          "349:  ),",
          "351:  TP_fast_assign(",
          "354:   __entry->ino  = inode->i_ino;",
          "355:   __entry->nr_to_write = wbc->nr_to_write;",
          "356:   __entry->pages_skipped = wbc->pages_skipped;",
          "357:   __entry->range_start = wbc->range_start;",
          "358:   __entry->range_end = wbc->range_end;",
          "359:   __entry->for_kupdate = wbc->for_kupdate;",
          "361:   __entry->range_cyclic = wbc->range_cyclic;",
          "362:   __entry->writeback_index = inode->i_mapping->writeback_index;",
          "363:  ),",
          "365:  TP_printk(\"dev %d,%d ino %lu nr_to_write %ld pages_skipped %ld \"",
          "370:     (unsigned long) __entry->ino, __entry->nr_to_write,",
          "371:     __entry->pages_skipped, __entry->range_start,",
          "375:     (unsigned long) __entry->writeback_index)",
          "376: );",
          "",
          "[Removed Lines]",
          "338:   __field( int,   dev_major                )",
          "339:   __field( int,   dev_minor                )",
          "346:   __field( char, for_reclaim  )",
          "352:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "353:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "360:   __entry->for_reclaim = wbc->for_reclaim;",
          "366:     \"range_start %llu range_end %llu \"",
          "367:     \"for_kupdate %d for_reclaim %d \"",
          "368:     \"range_cyclic %d writeback_index %lu\",",
          "369:     __entry->dev_major, __entry->dev_minor,",
          "372:     __entry->range_end,",
          "373:     __entry->for_kupdate, __entry->for_reclaim,",
          "374:     __entry->range_cyclic,",
          "",
          "[Added Lines]",
          "318:   __field( dev_t, dev   )",
          "324:   __field( int, sync_mode  )",
          "331:   __entry->dev  = inode->i_sb->s_dev;",
          "337:   __entry->sync_mode = wbc->sync_mode;",
          "344:     \"range_start %llu range_end %llu sync_mode %d\"",
          "345:     \"for_kupdate %d range_cyclic %d writeback_index %lu\",",
          "346:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "349:     __entry->range_end, __entry->sync_mode,",
          "350:     __entry->for_kupdate, __entry->range_cyclic,",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "381:  TP_ARGS(inode, mpd),",
          "383:  TP_STRUCT__entry(",
          "386:   __field( ino_t, ino   )",
          "387:   __field( __u64, b_blocknr  )",
          "388:   __field( __u32, b_size   )",
          "",
          "[Removed Lines]",
          "384:   __field( int,   dev_major                )",
          "385:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "360:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "390:   __field( unsigned long, first_page )",
          "391:   __field( int, io_done   )",
          "392:   __field( int, pages_written  )",
          "393:  ),",
          "395:  TP_fast_assign(",
          "398:   __entry->ino  = inode->i_ino;",
          "399:   __entry->b_blocknr = mpd->b_blocknr;",
          "400:   __entry->b_size  = mpd->b_size;",
          "",
          "[Removed Lines]",
          "396:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "397:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "368:   __field( int, sync_mode  )",
          "372:   __entry->dev  = inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "402:   __entry->first_page = mpd->first_page;",
          "403:   __entry->io_done = mpd->io_done;",
          "404:   __entry->pages_written = mpd->pages_written;",
          "405:  ),",
          "409:     (unsigned long) __entry->ino,",
          "410:     __entry->b_blocknr, __entry->b_size,",
          "411:     __entry->b_state, __entry->first_page,",
          "413: );",
          "415: TRACE_EVENT(ext4_da_writepages_result,",
          "",
          "[Removed Lines]",
          "407:  TP_printk(\"dev %d,%d ino %lu b_blocknr %llu b_size %u b_state 0x%04x first_page %lu io_done %d pages_written %d\",",
          "408:     __entry->dev_major, __entry->dev_minor,",
          "412:     __entry->io_done, __entry->pages_written)",
          "",
          "[Added Lines]",
          "380:   __entry->sync_mode = mpd->wbc->sync_mode;",
          "383:  TP_printk(\"dev %d,%d ino %lu b_blocknr %llu b_size %u b_state 0x%04x \"",
          "384:     \"first_page %lu io_done %d pages_written %d sync_mode %d\",",
          "385:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "389:     __entry->io_done, __entry->pages_written,",
          "390:     __entry->sync_mode",
          "391:                   )",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "419:  TP_ARGS(inode, wbc, ret, pages_written),",
          "421:  TP_STRUCT__entry(",
          "424:   __field( ino_t, ino   )",
          "425:   __field( int, ret   )",
          "426:   __field( int, pages_written  )",
          "427:   __field( long, pages_skipped  )",
          "428:   __field( char, more_io   )",
          "429:   __field(       pgoff_t, writeback_index  )",
          "430:  ),",
          "432:  TP_fast_assign(",
          "435:   __entry->ino  = inode->i_ino;",
          "436:   __entry->ret  = ret;",
          "437:   __entry->pages_written = pages_written;",
          "438:   __entry->pages_skipped = wbc->pages_skipped;",
          "439:   __entry->more_io = wbc->more_io;",
          "440:   __entry->writeback_index = inode->i_mapping->writeback_index;",
          "441:  ),",
          "445:     (unsigned long) __entry->ino, __entry->ret,",
          "446:     __entry->pages_written, __entry->pages_skipped,",
          "448:     (unsigned long) __entry->writeback_index)",
          "449: );",
          "451: TRACE_EVENT(ext4_discard_blocks,",
          "452:  TP_PROTO(struct super_block *sb, unsigned long long blk,",
          "453:    unsigned long long count),",
          "",
          "[Removed Lines]",
          "422:   __field( int,   dev_major                )",
          "423:   __field( int,   dev_minor                )",
          "433:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "434:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "443:  TP_printk(\"dev %d,%d ino %lu ret %d pages_written %d pages_skipped %ld more_io %d writeback_index %lu\",",
          "444:     __entry->dev_major, __entry->dev_minor,",
          "447:     __entry->more_io,",
          "",
          "[Added Lines]",
          "401:   __field( dev_t, dev   )",
          "406:   __field( int, sync_mode  )",
          "412:   __entry->dev  = inode->i_sb->s_dev;",
          "417:   __entry->sync_mode = wbc->sync_mode;",
          "422:  TP_printk(\"dev %d,%d ino %lu ret %d pages_written %d pages_skipped %ld \"",
          "423:     \" more_io %d sync_mode %d writeback_index %lu\",",
          "424:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "427:     __entry->more_io, __entry->sync_mode,",
          "431: DECLARE_EVENT_CLASS(ext4__page_op,",
          "432:  TP_PROTO(struct page *page),",
          "434:  TP_ARGS(page),",
          "436:  TP_STRUCT__entry(",
          "437:   __field( pgoff_t, index   )",
          "438:   __field( ino_t, ino   )",
          "439:   __field( dev_t, dev   )",
          "441:  ),",
          "443:  TP_fast_assign(",
          "444:   __entry->index = page->index;",
          "445:   __entry->ino = page->mapping->host->i_ino;",
          "446:   __entry->dev = page->mapping->host->i_sb->s_dev;",
          "447:  ),",
          "449:  TP_printk(\"dev %d,%d ino %lu page_index %lu\",",
          "450:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "451:     (unsigned long) __entry->ino,",
          "452:     __entry->index)",
          "453: );",
          "455: DEFINE_EVENT(ext4__page_op, ext4_readpage,",
          "457:  TP_PROTO(struct page *page),",
          "459:  TP_ARGS(page)",
          "460: );",
          "462: DEFINE_EVENT(ext4__page_op, ext4_releasepage,",
          "464:  TP_PROTO(struct page *page),",
          "466:  TP_ARGS(page)",
          "467: );",
          "469: TRACE_EVENT(ext4_invalidatepage,",
          "470:  TP_PROTO(struct page *page, unsigned long offset),",
          "472:  TP_ARGS(page, offset),",
          "474:  TP_STRUCT__entry(",
          "475:   __field( pgoff_t, index   )",
          "476:   __field( unsigned long, offset  )",
          "477:   __field( ino_t, ino   )",
          "478:   __field( dev_t, dev   )",
          "480:  ),",
          "482:  TP_fast_assign(",
          "483:   __entry->index = page->index;",
          "484:   __entry->offset = offset;",
          "485:   __entry->ino = page->mapping->host->i_ino;",
          "486:   __entry->dev = page->mapping->host->i_sb->s_dev;",
          "487:  ),",
          "489:  TP_printk(\"dev %d,%d ino %lu page_index %lu offset %lu\",",
          "490:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "491:     (unsigned long) __entry->ino,",
          "492:     __entry->index, __entry->offset)",
          "493: );",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "455:  TP_ARGS(sb, blk, count),",
          "457:  TP_STRUCT__entry(",
          "460:   __field( __u64, blk   )",
          "461:   __field( __u64, count   )",
          "463:  ),",
          "465:  TP_fast_assign(",
          "468:   __entry->blk = blk;",
          "469:   __entry->count = count;",
          "470:  ),",
          "472:  TP_printk(\"dev %d,%d blk %llu count %llu\",",
          "474:     __entry->blk, __entry->count)",
          "475: );",
          "",
          "[Removed Lines]",
          "458:   __field( int,   dev_major                )",
          "459:   __field( int,   dev_minor                )",
          "466:   __entry->dev_major = MAJOR(sb->s_dev);",
          "467:   __entry->dev_minor = MINOR(sb->s_dev);",
          "473:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "502:   __field( dev_t, dev   )",
          "509:   __entry->dev = sb->s_dev;",
          "515:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "481:  TP_ARGS(ac, pa),",
          "483:  TP_STRUCT__entry(",
          "486:   __field( ino_t, ino   )",
          "487:   __field( __u64, pa_pstart  )",
          "488:   __field( __u32, pa_len   )",
          "",
          "[Removed Lines]",
          "484:   __field( int,   dev_major                )",
          "485:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "526:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "491:  ),",
          "493:  TP_fast_assign(",
          "496:   __entry->ino  = ac->ac_inode->i_ino;",
          "497:   __entry->pa_pstart = pa->pa_pstart;",
          "498:   __entry->pa_len  = pa->pa_len;",
          "",
          "[Removed Lines]",
          "494:   __entry->dev_major = MAJOR(ac->ac_sb->s_dev);",
          "495:   __entry->dev_minor = MINOR(ac->ac_sb->s_dev);",
          "",
          "[Added Lines]",
          "535:   __entry->dev  = ac->ac_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "500:  ),",
          "502:  TP_printk(\"dev %d,%d ino %lu pstart %llu len %u lstart %llu\",",
          "506: );",
          "508: DEFINE_EVENT(ext4__mb_new_pa, ext4_mb_new_inode_pa,",
          "",
          "[Removed Lines]",
          "503:     __entry->dev_major, __entry->dev_minor,",
          "504:     (unsigned long) __entry->ino, __entry->pa_pstart,",
          "505:     __entry->pa_len, __entry->pa_lstart)",
          "",
          "[Added Lines]",
          "543:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "544:     (unsigned long) __entry->ino,",
          "545:     __entry->pa_pstart, __entry->pa_len, __entry->pa_lstart)",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "530:  TP_ARGS(sb, inode, pa, block, count),",
          "532:  TP_STRUCT__entry(",
          "535:   __field( ino_t, ino   )",
          "536:   __field( __u64, block   )",
          "537:   __field( __u32, count   )",
          "",
          "[Removed Lines]",
          "533:   __field( int,   dev_major                )",
          "534:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "573:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "539:  ),",
          "541:  TP_fast_assign(",
          "544:   __entry->ino  = inode->i_ino;",
          "545:   __entry->block  = block;",
          "546:   __entry->count  = count;",
          "547:  ),",
          "549:  TP_printk(\"dev %d,%d ino %lu block %llu count %u\",",
          "552: );",
          "554: TRACE_EVENT(ext4_mb_release_group_pa,",
          "",
          "[Removed Lines]",
          "542:   __entry->dev_major = MAJOR(sb->s_dev);",
          "543:   __entry->dev_minor = MINOR(sb->s_dev);",
          "550:     __entry->dev_major, __entry->dev_minor,",
          "551:     (unsigned long) __entry->ino, __entry->block, __entry->count)",
          "",
          "[Added Lines]",
          "581:   __entry->dev  = sb->s_dev;",
          "588:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "589:     (unsigned long) __entry->ino,",
          "590:     __entry->block, __entry->count)",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "558:  TP_ARGS(sb, pa),",
          "560:  TP_STRUCT__entry(",
          "563:   __field( __u64, pa_pstart  )",
          "564:   __field( __u32, pa_len   )",
          "566:  ),",
          "568:  TP_fast_assign(",
          "571:   __entry->pa_pstart = pa->pa_pstart;",
          "572:   __entry->pa_len  = pa->pa_len;",
          "573:  ),",
          "575:  TP_printk(\"dev %d,%d pstart %llu len %u\",",
          "577:     __entry->pa_pstart, __entry->pa_len)",
          "578: );",
          "",
          "[Removed Lines]",
          "561:   __field( int,   dev_major                )",
          "562:   __field( int,   dev_minor                )",
          "569:   __entry->dev_major = MAJOR(sb->s_dev);",
          "570:   __entry->dev_minor = MINOR(sb->s_dev);",
          "576:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "600:   __field( dev_t, dev   )",
          "607:   __entry->dev  = sb->s_dev;",
          "613:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "583:  TP_ARGS(inode),",
          "585:  TP_STRUCT__entry(",
          "588:   __field( ino_t, ino   )",
          "590:  ),",
          "592:  TP_fast_assign(",
          "595:   __entry->ino = inode->i_ino;",
          "596:  ),",
          "598:  TP_printk(\"dev %d,%d ino %lu\",",
          "600:     (unsigned long) __entry->ino)",
          "601: );",
          "",
          "[Removed Lines]",
          "586:   __field( int,   dev_major                )",
          "587:   __field( int,   dev_minor                )",
          "593:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "594:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "599:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "623:   __field( dev_t, dev   )",
          "629:   __entry->dev = inode->i_sb->s_dev;",
          "634:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "606:  TP_ARGS(sb, needed),",
          "608:  TP_STRUCT__entry(",
          "611:   __field( int, needed   )",
          "613:  ),",
          "615:  TP_fast_assign(",
          "618:   __entry->needed = needed;",
          "619:  ),",
          "621:  TP_printk(\"dev %d,%d needed %d\",",
          "623: );",
          "625: TRACE_EVENT(ext4_request_blocks,",
          "",
          "[Removed Lines]",
          "609:   __field( int,   dev_major                )",
          "610:   __field( int,   dev_minor                )",
          "616:   __entry->dev_major = MAJOR(sb->s_dev);",
          "617:   __entry->dev_minor = MINOR(sb->s_dev);",
          "622:     __entry->dev_major, __entry->dev_minor, __entry->needed)",
          "",
          "[Added Lines]",
          "644:   __field( dev_t, dev   )",
          "650:   __entry->dev = sb->s_dev;",
          "655:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "656:     __entry->needed)",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "628:  TP_ARGS(ar),",
          "630:  TP_STRUCT__entry(",
          "633:   __field( ino_t, ino   )",
          "634:   __field( unsigned int, flags  )",
          "635:   __field( unsigned int, len  )",
          "",
          "[Removed Lines]",
          "631:   __field( int,   dev_major                )",
          "632:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "665:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "642:  ),",
          "644:  TP_fast_assign(",
          "647:   __entry->ino = ar->inode->i_ino;",
          "648:   __entry->flags = ar->flags;",
          "649:   __entry->len = ar->len;",
          "",
          "[Removed Lines]",
          "645:   __entry->dev_major = MAJOR(ar->inode->i_sb->s_dev);",
          "646:   __entry->dev_minor = MINOR(ar->inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "678:   __entry->dev = ar->inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "655:   __entry->pright = ar->pright;",
          "656:  ),",
          "660:     (unsigned long) __entry->ino,",
          "661:     __entry->flags, __entry->len,",
          "662:     (unsigned long long) __entry->logical,",
          "",
          "[Removed Lines]",
          "658:  TP_printk(\"dev %d,%d ino %lu flags %u len %u lblk %llu goal %llu lleft %llu lright %llu pleft %llu pright %llu \",",
          "659:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "690:  TP_printk(\"dev %d,%d ino %lu flags %u len %u lblk %llu goal %llu \"",
          "691:     \"lleft %llu lright %llu pleft %llu pright %llu \",",
          "692:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "673:  TP_ARGS(ar, block),",
          "675:  TP_STRUCT__entry(",
          "678:   __field( ino_t, ino   )",
          "679:   __field( __u64, block   )",
          "680:   __field( unsigned int, flags  )",
          "",
          "[Removed Lines]",
          "676:   __field( int,   dev_major                )",
          "677:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "709:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "688:  ),",
          "690:  TP_fast_assign(",
          "693:   __entry->ino = ar->inode->i_ino;",
          "694:   __entry->block = block;",
          "695:   __entry->flags = ar->flags;",
          "",
          "[Removed Lines]",
          "691:   __entry->dev_major = MAJOR(ar->inode->i_sb->s_dev);",
          "692:   __entry->dev_minor = MINOR(ar->inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "723:   __entry->dev = ar->inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "702:   __entry->pright = ar->pright;",
          "703:  ),",
          "709:     (unsigned long long) __entry->logical,",
          "710:     (unsigned long long) __entry->goal,",
          "711:     (unsigned long long) __entry->lleft,",
          "",
          "[Removed Lines]",
          "705:  TP_printk(\"dev %d,%d ino %lu flags %u len %u block %llu lblk %llu goal %llu lleft %llu lright %llu pleft %llu pright %llu \",",
          "706:     __entry->dev_major, __entry->dev_minor,",
          "707:     (unsigned long) __entry->ino, __entry->flags,",
          "708:     __entry->len, __entry->block,",
          "",
          "[Added Lines]",
          "736:  TP_printk(\"dev %d,%d ino %lu flags %u len %u block %llu lblk %llu \"",
          "737:     \"goal %llu lleft %llu lright %llu pleft %llu pright %llu\",",
          "738:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "739:     (unsigned long) __entry->ino,",
          "740:     __entry->flags, __entry->len, __entry->block,",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "721:  TP_ARGS(inode, block, count, flags),",
          "723:  TP_STRUCT__entry(",
          "726:   __field( ino_t, ino   )",
          "727:   __field(      umode_t, mode   )",
          "728:   __field( __u64, block   )",
          "",
          "[Removed Lines]",
          "724:   __field( int,   dev_major                )",
          "725:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "756:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "731:  ),",
          "733:  TP_fast_assign(",
          "736:   __entry->ino  = inode->i_ino;",
          "737:   __entry->mode  = inode->i_mode;",
          "738:   __entry->block  = block;",
          "",
          "[Removed Lines]",
          "734:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "735:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "765:   __entry->dev  = inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "741:  ),",
          "743:  TP_printk(\"dev %d,%d ino %lu mode 0%o block %llu count %lu flags %d\",",
          "745:     (unsigned long) __entry->ino,",
          "746:     __entry->mode, __entry->block, __entry->count,",
          "747:     __entry->flags)",
          "748: );",
          "751:  TP_PROTO(struct file *file, int datasync),",
          "753:  TP_ARGS(file, datasync),",
          "755:  TP_STRUCT__entry(",
          "758:   __field( ino_t, ino   )",
          "759:   __field( ino_t, parent   )",
          "760:   __field( int, datasync  )",
          "",
          "[Removed Lines]",
          "744:     __entry->dev_major, __entry->dev_minor,",
          "750: TRACE_EVENT(ext4_sync_file,",
          "756:   __field( int,   dev_major                )",
          "757:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "774:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "780: TRACE_EVENT(ext4_sync_file_enter,",
          "786:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "763:  TP_fast_assign(",
          "764:   struct dentry *dentry = file->f_path.dentry;",
          "768:   __entry->ino  = dentry->d_inode->i_ino;",
          "769:   __entry->datasync = datasync;",
          "770:   __entry->parent  = dentry->d_parent->d_inode->i_ino;",
          "771:  ),",
          "773:  TP_printk(\"dev %d,%d ino %ld parent %ld datasync %d \",",
          "775:     (unsigned long) __entry->ino,",
          "776:     (unsigned long) __entry->parent, __entry->datasync)",
          "777: );",
          "779: TRACE_EVENT(ext4_sync_fs,",
          "780:  TP_PROTO(struct super_block *sb, int wait),",
          "782:  TP_ARGS(sb, wait),",
          "784:  TP_STRUCT__entry(",
          "787:   __field( int, wait   )",
          "789:  ),",
          "791:  TP_fast_assign(",
          "794:   __entry->wait = wait;",
          "795:  ),",
          "799: );",
          "801: TRACE_EVENT(ext4_alloc_da_blocks,",
          "",
          "[Removed Lines]",
          "766:   __entry->dev_major = MAJOR(dentry->d_inode->i_sb->s_dev);",
          "767:   __entry->dev_minor = MINOR(dentry->d_inode->i_sb->s_dev);",
          "774:     __entry->dev_major, __entry->dev_minor,",
          "785:   __field( int,   dev_major                )",
          "786:   __field( int,   dev_minor                )",
          "792:   __entry->dev_major = MAJOR(sb->s_dev);",
          "793:   __entry->dev_minor = MINOR(sb->s_dev);",
          "797:  TP_printk(\"dev %d,%d wait %d\", __entry->dev_major,",
          "798:     __entry->dev_minor, __entry->wait)",
          "",
          "[Added Lines]",
          "795:   __entry->dev  = dentry->d_inode->i_sb->s_dev;",
          "802:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "807: TRACE_EVENT(ext4_sync_file_exit,",
          "808:  TP_PROTO(struct inode *inode, int ret),",
          "810:  TP_ARGS(inode, ret),",
          "812:  TP_STRUCT__entry(",
          "813:   __field( int, ret   )",
          "814:   __field( ino_t, ino   )",
          "815:   __field( dev_t, dev   )",
          "816:  ),",
          "818:  TP_fast_assign(",
          "819:   __entry->ret  = ret;",
          "820:   __entry->ino  = inode->i_ino;",
          "821:   __entry->dev  = inode->i_sb->s_dev;",
          "822:  ),",
          "824:  TP_printk(\"dev %d,%d ino %ld ret %d\",",
          "825:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "826:     (unsigned long) __entry->ino,",
          "827:     __entry->ret)",
          "828: );",
          "836:   __field( dev_t, dev   )",
          "842:   __entry->dev = sb->s_dev;",
          "846:  TP_printk(\"dev %d,%d wait %d\",",
          "847:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "848:     __entry->wait)",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "804:  TP_ARGS(inode),",
          "806:  TP_STRUCT__entry(",
          "809:   __field( ino_t, ino   )",
          "810:   __field( unsigned int, data_blocks )",
          "811:   __field( unsigned int, meta_blocks )",
          "812:  ),",
          "814:  TP_fast_assign(",
          "817:   __entry->ino = inode->i_ino;",
          "818:   __entry->data_blocks = EXT4_I(inode)->i_reserved_data_blocks;",
          "819:   __entry->meta_blocks = EXT4_I(inode)->i_reserved_meta_blocks;",
          "820:  ),",
          "822:  TP_printk(\"dev %d,%d ino %lu data_blocks %u meta_blocks %u\",",
          "824:     (unsigned long) __entry->ino,",
          "825:     __entry->data_blocks, __entry->meta_blocks)",
          "826: );",
          "",
          "[Removed Lines]",
          "807:   __field( int,   dev_major                )",
          "808:   __field( int,   dev_minor                )",
          "815:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "816:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "823:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "857:   __field( dev_t, dev   )",
          "864:   __entry->dev = inode->i_sb->s_dev;",
          "871:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "831:  TP_ARGS(ac),",
          "833:  TP_STRUCT__entry(",
          "836:   __field( ino_t, ino   )",
          "837:   __field( __u16, found   )",
          "838:   __field( __u16, groups   )",
          "",
          "[Removed Lines]",
          "834:   __field( int,   dev_major                )",
          "835:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "882:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "855:  ),",
          "857:  TP_fast_assign(",
          "860:   __entry->ino  = ac->ac_inode->i_ino;",
          "861:   __entry->found  = ac->ac_found;",
          "862:   __entry->flags  = ac->ac_flags;",
          "",
          "[Removed Lines]",
          "858:   __entry->dev_major = MAJOR(ac->ac_inode->i_sb->s_dev);",
          "859:   __entry->dev_minor = MINOR(ac->ac_inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "905:   __entry->dev  = ac->ac_inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "881:  TP_printk(\"dev %d,%d inode %lu orig %u/%d/%u@%u goal %u/%d/%u@%u \"",
          "882:     \"result %u/%d/%u@%u blks %u grps %u cr %u flags 0x%04x \"",
          "883:     \"tail %u broken %u\",",
          "885:     (unsigned long) __entry->ino,",
          "886:     __entry->orig_group, __entry->orig_start,",
          "887:     __entry->orig_len, __entry->orig_logical,",
          "",
          "[Removed Lines]",
          "884:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "930:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "900:  TP_ARGS(ac),",
          "902:  TP_STRUCT__entry(",
          "905:   __field( ino_t, ino   )",
          "906:   __field( __u32,  orig_logical  )",
          "907:   __field(   int, orig_start  )",
          "",
          "[Removed Lines]",
          "903:   __field( int,   dev_major                )",
          "904:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "949:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "914:  ),",
          "916:  TP_fast_assign(",
          "919:   __entry->ino  = ac->ac_inode->i_ino;",
          "920:   __entry->orig_logical = ac->ac_o_ex.fe_logical;",
          "921:   __entry->orig_start = ac->ac_o_ex.fe_start;",
          "",
          "[Removed Lines]",
          "917:   __entry->dev_major = MAJOR(ac->ac_inode->i_sb->s_dev);",
          "918:   __entry->dev_minor = MINOR(ac->ac_inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "962:   __entry->dev  = ac->ac_inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "928:  ),",
          "930:  TP_printk(\"dev %d,%d inode %lu orig %u/%d/%u@%u result %u/%d/%u@%u\",",
          "932:     (unsigned long) __entry->ino,",
          "933:     __entry->orig_group, __entry->orig_start,",
          "934:     __entry->orig_len, __entry->orig_logical,",
          "",
          "[Removed Lines]",
          "931:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "975:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "946:  TP_ARGS(sb, inode, group, start, len),",
          "948:  TP_STRUCT__entry(",
          "951:   __field( ino_t, ino   )",
          "952:   __field(   int, result_start  )",
          "953:   __field( __u32,  result_group  )",
          "",
          "[Removed Lines]",
          "949:   __field( int,   dev_major                )",
          "950:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "993:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "955:  ),",
          "957:  TP_fast_assign(",
          "960:   __entry->ino  = inode ? inode->i_ino : 0;",
          "961:   __entry->result_start = start;",
          "962:   __entry->result_group = group;",
          "",
          "[Removed Lines]",
          "958:   __entry->dev_major = MAJOR(sb->s_dev);",
          "959:   __entry->dev_minor = MINOR(sb->s_dev);",
          "",
          "[Added Lines]",
          "1001:   __entry->dev  = sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "964:  ),",
          "966:  TP_printk(\"dev %d,%d inode %lu extent %u/%d/%u \",",
          "968:     (unsigned long) __entry->ino,",
          "969:     __entry->result_group, __entry->result_start,",
          "970:     __entry->result_len)",
          "",
          "[Removed Lines]",
          "967:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "1009:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "998:  TP_ARGS(inode, is_metadata, block),",
          "1000:  TP_STRUCT__entry(",
          "1003:   __field( ino_t, ino   )",
          "1004:   __field( umode_t, mode   )",
          "1005:   __field( int, is_metadata  )",
          "",
          "[Removed Lines]",
          "1001:   __field( int,   dev_major                )",
          "1002:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "1043:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "1007:  ),",
          "1009:  TP_fast_assign(",
          "1012:   __entry->ino = inode->i_ino;",
          "1013:   __entry->mode = inode->i_mode;",
          "1014:   __entry->is_metadata = is_metadata;",
          "",
          "[Removed Lines]",
          "1010:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "1011:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "1051:   __entry->dev = inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "1016:  ),",
          "1018:  TP_printk(\"dev %d,%d ino %lu mode 0%o is_metadata %d block %llu\",",
          "1022: );",
          "1024: TRACE_EVENT(ext4_da_update_reserve_space,",
          "",
          "[Removed Lines]",
          "1019:     __entry->dev_major, __entry->dev_minor,",
          "1020:     (unsigned long) __entry->ino, __entry->mode,",
          "1021:     __entry->is_metadata, __entry->block)",
          "",
          "[Added Lines]",
          "1059:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1060:     (unsigned long) __entry->ino,",
          "1061:     __entry->mode, __entry->is_metadata, __entry->block)",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "1027:  TP_ARGS(inode, used_blocks),",
          "1029:  TP_STRUCT__entry(",
          "1032:   __field( ino_t, ino   )",
          "1033:   __field( umode_t, mode   )",
          "1034:   __field( __u64, i_blocks  )",
          "",
          "[Removed Lines]",
          "1030:   __field( int,   dev_major                )",
          "1031:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "1070:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "1039:  ),",
          "1041:  TP_fast_assign(",
          "1044:   __entry->ino = inode->i_ino;",
          "1045:   __entry->mode = inode->i_mode;",
          "1046:   __entry->i_blocks = inode->i_blocks;",
          "",
          "[Removed Lines]",
          "1042:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "1043:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "1081:   __entry->dev = inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "1050:   __entry->allocated_meta_blocks = EXT4_I(inode)->i_allocated_meta_blocks;",
          "1051:  ),",
          "1057:     __entry->used_blocks, __entry->reserved_data_blocks,",
          "1058:     __entry->reserved_meta_blocks, __entry->allocated_meta_blocks)",
          "1059: );",
          "",
          "[Removed Lines]",
          "1053:  TP_printk(\"dev %d,%d ino %lu mode 0%o i_blocks %llu used_blocks %d reserved_data_blocks %d reserved_meta_blocks %d allocated_meta_blocks %d\",",
          "1054:     __entry->dev_major, __entry->dev_minor,",
          "1055:     (unsigned long) __entry->ino, __entry->mode,",
          "1056:     (unsigned long long) __entry->i_blocks,",
          "",
          "[Added Lines]",
          "1091:  TP_printk(\"dev %d,%d ino %lu mode 0%o i_blocks %llu used_blocks %d \"",
          "1092:     \"reserved_data_blocks %d reserved_meta_blocks %d \"",
          "1093:     \"allocated_meta_blocks %d\",",
          "1094:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1095:     (unsigned long) __entry->ino,",
          "1096:     __entry->mode,  (unsigned long long) __entry->i_blocks,",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "1064:  TP_ARGS(inode, md_needed),",
          "1066:  TP_STRUCT__entry(",
          "1069:   __field( ino_t, ino   )",
          "1070:   __field( umode_t, mode   )",
          "1071:   __field( __u64, i_blocks  )",
          "",
          "[Removed Lines]",
          "1067:   __field( int,   dev_major                )",
          "1068:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "1107:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "1075:  ),",
          "1077:  TP_fast_assign(",
          "1080:   __entry->ino = inode->i_ino;",
          "1081:   __entry->mode = inode->i_mode;",
          "1082:   __entry->i_blocks = inode->i_blocks;",
          "",
          "[Removed Lines]",
          "1078:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "1079:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "1117:   __entry->dev = inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "1085:   __entry->reserved_meta_blocks = EXT4_I(inode)->i_reserved_meta_blocks;",
          "1086:  ),",
          "1090:     (unsigned long) __entry->ino,",
          "1091:     __entry->mode, (unsigned long long) __entry->i_blocks,",
          "1092:     __entry->md_needed, __entry->reserved_data_blocks,",
          "",
          "[Removed Lines]",
          "1088:  TP_printk(\"dev %d,%d ino %lu mode 0%o i_blocks %llu md_needed %d reserved_data_blocks %d reserved_meta_blocks %d\",",
          "1089:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "1126:  TP_printk(\"dev %d,%d ino %lu mode 0%o i_blocks %llu md_needed %d \"",
          "1127:     \"reserved_data_blocks %d reserved_meta_blocks %d\",",
          "1128:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "1099:  TP_ARGS(inode, freed_blocks),",
          "1101:  TP_STRUCT__entry(",
          "1104:   __field( ino_t, ino   )",
          "1105:   __field( umode_t, mode   )",
          "1106:   __field( __u64, i_blocks  )",
          "",
          "[Removed Lines]",
          "1102:   __field( int,   dev_major                )",
          "1103:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "1141:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "1111:  ),",
          "1113:  TP_fast_assign(",
          "1116:   __entry->ino = inode->i_ino;",
          "1117:   __entry->mode = inode->i_mode;",
          "1118:   __entry->i_blocks = inode->i_blocks;",
          "",
          "[Removed Lines]",
          "1114:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "1115:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "",
          "[Added Lines]",
          "1152:   __entry->dev = inode->i_sb->s_dev;",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "1122:   __entry->allocated_meta_blocks = EXT4_I(inode)->i_allocated_meta_blocks;",
          "1123:  ),",
          "1127:     (unsigned long) __entry->ino,",
          "1128:     __entry->mode, (unsigned long long) __entry->i_blocks,",
          "1129:     __entry->freed_blocks, __entry->reserved_data_blocks,",
          "",
          "[Removed Lines]",
          "1125:  TP_printk(\"dev %d,%d ino %lu mode 0%o i_blocks %llu freed_blocks %d reserved_data_blocks %d reserved_meta_blocks %d allocated_meta_blocks %d\",",
          "1126:     __entry->dev_major, __entry->dev_minor,",
          "",
          "[Added Lines]",
          "1162:  TP_printk(\"dev %d,%d ino %lu mode 0%o i_blocks %llu freed_blocks %d \"",
          "1163:     \"reserved_data_blocks %d reserved_meta_blocks %d \"",
          "1164:     \"allocated_meta_blocks %d\",",
          "1165:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "1136:  TP_ARGS(sb, group),",
          "1138:  TP_STRUCT__entry(",
          "1141:   __field( __u32, group   )",
          "1143:  ),",
          "1145:  TP_fast_assign(",
          "1148:   __entry->group = group;",
          "1149:  ),",
          "1151:  TP_printk(\"dev %d,%d group %u\",",
          "1153: );",
          "1155: DEFINE_EVENT(ext4__bitmap_load, ext4_mb_bitmap_load,",
          "",
          "[Removed Lines]",
          "1139:   __field( int,   dev_major                )",
          "1140:   __field( int,   dev_minor                )",
          "1146:   __entry->dev_major = MAJOR(sb->s_dev);",
          "1147:   __entry->dev_minor = MINOR(sb->s_dev);",
          "1152:     __entry->dev_major, __entry->dev_minor, __entry->group)",
          "",
          "[Added Lines]",
          "1178:   __field( dev_t, dev   )",
          "1184:   __entry->dev = sb->s_dev;",
          "1189:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1190:     __entry->group)",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "1166:  TP_ARGS(sb, group)",
          "1167: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1207: DEFINE_EVENT(ext4__bitmap_load, ext4_read_block_bitmap_load,",
          "1209:  TP_PROTO(struct super_block *sb, unsigned long group),",
          "1211:  TP_ARGS(sb, group)",
          "1212: );",
          "1214: DEFINE_EVENT(ext4__bitmap_load, ext4_load_inode_bitmap,",
          "1216:  TP_PROTO(struct super_block *sb, unsigned long group),",
          "1218:  TP_ARGS(sb, group)",
          "1219: );",
          "1221: TRACE_EVENT(ext4_direct_IO_enter,",
          "1222:  TP_PROTO(struct inode *inode, loff_t offset, unsigned long len, int rw),",
          "1224:  TP_ARGS(inode, offset, len, rw),",
          "1226:  TP_STRUCT__entry(",
          "1227:   __field( ino_t, ino   )",
          "1228:   __field( dev_t, dev   )",
          "1229:   __field( loff_t, pos   )",
          "1230:   __field( unsigned long, len  )",
          "1231:   __field( int, rw   )",
          "1232:  ),",
          "1234:  TP_fast_assign(",
          "1235:   __entry->ino = inode->i_ino;",
          "1236:   __entry->dev = inode->i_sb->s_dev;",
          "1237:   __entry->pos = offset;",
          "1238:   __entry->len = len;",
          "1239:   __entry->rw = rw;",
          "1240:  ),",
          "1242:  TP_printk(\"dev %d,%d ino %lu pos %llu len %lu rw %d\",",
          "1243:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1244:     (unsigned long) __entry->ino,",
          "1245:     (unsigned long long) __entry->pos, __entry->len, __entry->rw)",
          "1246: );",
          "1248: TRACE_EVENT(ext4_direct_IO_exit,",
          "1249:  TP_PROTO(struct inode *inode, loff_t offset, unsigned long len, int rw, int ret),",
          "1251:  TP_ARGS(inode, offset, len, rw, ret),",
          "1253:  TP_STRUCT__entry(",
          "1254:   __field( ino_t, ino   )",
          "1255:   __field( dev_t, dev   )",
          "1256:   __field( loff_t, pos   )",
          "1257:   __field( unsigned long, len  )",
          "1258:   __field( int, rw   )",
          "1259:   __field( int, ret   )",
          "1260:  ),",
          "1262:  TP_fast_assign(",
          "1263:   __entry->ino = inode->i_ino;",
          "1264:   __entry->dev = inode->i_sb->s_dev;",
          "1265:   __entry->pos = offset;",
          "1266:   __entry->len = len;",
          "1267:   __entry->rw = rw;",
          "1268:   __entry->ret = ret;",
          "1269:  ),",
          "1271:  TP_printk(\"dev %d,%d ino %lu pos %llu len %lu rw %d ret %d\",",
          "1272:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1273:     (unsigned long) __entry->ino,",
          "1274:     (unsigned long long) __entry->pos, __entry->len,",
          "1275:     __entry->rw, __entry->ret)",
          "1276: );",
          "1278: TRACE_EVENT(ext4_fallocate_enter,",
          "1279:  TP_PROTO(struct inode *inode, loff_t offset, loff_t len, int mode),",
          "1281:  TP_ARGS(inode, offset, len, mode),",
          "1283:  TP_STRUCT__entry(",
          "1284:   __field( ino_t, ino   )",
          "1285:   __field( dev_t, dev   )",
          "1286:   __field( loff_t, pos   )",
          "1287:   __field( loff_t, len   )",
          "1288:   __field( int, mode   )",
          "1289:  ),",
          "1291:  TP_fast_assign(",
          "1292:   __entry->ino = inode->i_ino;",
          "1293:   __entry->dev = inode->i_sb->s_dev;",
          "1294:   __entry->pos = offset;",
          "1295:   __entry->len = len;",
          "1296:   __entry->mode = mode;",
          "1297:  ),",
          "1299:  TP_printk(\"dev %d,%d ino %ld pos %llu len %llu mode %d\",",
          "1300:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1301:     (unsigned long) __entry->ino,",
          "1302:     (unsigned long long) __entry->pos,",
          "1303:     (unsigned long long) __entry->len, __entry->mode)",
          "1304: );",
          "1306: TRACE_EVENT(ext4_fallocate_exit,",
          "1307:  TP_PROTO(struct inode *inode, loff_t offset, unsigned int max_blocks, int ret),",
          "1309:  TP_ARGS(inode, offset, max_blocks, ret),",
          "1311:  TP_STRUCT__entry(",
          "1312:   __field( ino_t, ino   )",
          "1313:   __field( dev_t, dev   )",
          "1314:   __field( loff_t, pos   )",
          "1315:   __field( unsigned, blocks  )",
          "1316:   __field( int,  ret   )",
          "1317:  ),",
          "1319:  TP_fast_assign(",
          "1320:   __entry->ino = inode->i_ino;",
          "1321:   __entry->dev = inode->i_sb->s_dev;",
          "1322:   __entry->pos = offset;",
          "1323:   __entry->blocks = max_blocks;",
          "1324:   __entry->ret = ret;",
          "1325:  ),",
          "1327:  TP_printk(\"dev %d,%d ino %ld pos %llu blocks %d ret %d\",",
          "1328:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1329:     (unsigned long) __entry->ino,",
          "1330:     (unsigned long long) __entry->pos, __entry->blocks,",
          "1331:     __entry->ret)",
          "1332: );",
          "1334: TRACE_EVENT(ext4_unlink_enter,",
          "1335:  TP_PROTO(struct inode *parent, struct dentry *dentry),",
          "1337:  TP_ARGS(parent, dentry),",
          "1339:  TP_STRUCT__entry(",
          "1340:   __field( ino_t, parent   )",
          "1341:   __field( ino_t, ino   )",
          "1342:   __field( loff_t, size   )",
          "1343:   __field( dev_t, dev   )",
          "1344:  ),",
          "1346:  TP_fast_assign(",
          "1347:   __entry->parent  = parent->i_ino;",
          "1348:   __entry->ino  = dentry->d_inode->i_ino;",
          "1349:   __entry->size  = dentry->d_inode->i_size;",
          "1350:   __entry->dev  = dentry->d_inode->i_sb->s_dev;",
          "1351:  ),",
          "1353:  TP_printk(\"dev %d,%d ino %ld size %lld parent %ld\",",
          "1354:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1355:     (unsigned long) __entry->ino, __entry->size,",
          "1356:     (unsigned long) __entry->parent)",
          "1357: );",
          "1359: TRACE_EVENT(ext4_unlink_exit,",
          "1360:  TP_PROTO(struct dentry *dentry, int ret),",
          "1362:  TP_ARGS(dentry, ret),",
          "1364:  TP_STRUCT__entry(",
          "1365:   __field( ino_t, ino   )",
          "1366:   __field( dev_t, dev   )",
          "1367:   __field( int, ret   )",
          "1368:  ),",
          "1370:  TP_fast_assign(",
          "1371:   __entry->ino  = dentry->d_inode->i_ino;",
          "1372:   __entry->dev  = dentry->d_inode->i_sb->s_dev;",
          "1373:   __entry->ret  = ret;",
          "1374:  ),",
          "1376:  TP_printk(\"dev %d,%d ino %ld ret %d\",",
          "1377:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1378:     (unsigned long) __entry->ino,",
          "1379:     __entry->ret)",
          "1380: );",
          "1382: DECLARE_EVENT_CLASS(ext4__truncate,",
          "1383:  TP_PROTO(struct inode *inode),",
          "1385:  TP_ARGS(inode),",
          "1387:  TP_STRUCT__entry(",
          "1388:   __field( ino_t,   ino  )",
          "1389:   __field( dev_t,   dev  )",
          "1390:   __field( blkcnt_t, blocks  )",
          "1391:  ),",
          "1393:  TP_fast_assign(",
          "1394:   __entry->ino    = inode->i_ino;",
          "1395:   __entry->dev    = inode->i_sb->s_dev;",
          "1396:   __entry->blocks = inode->i_blocks;",
          "1397:  ),",
          "1399:  TP_printk(\"dev %d,%d ino %lu blocks %lu\",",
          "1400:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1401:     (unsigned long) __entry->ino, (unsigned long) __entry->blocks)",
          "1402: );",
          "1404: DEFINE_EVENT(ext4__truncate, ext4_truncate_enter,",
          "1406:  TP_PROTO(struct inode *inode),",
          "1408:  TP_ARGS(inode)",
          "1409: );",
          "1411: DEFINE_EVENT(ext4__truncate, ext4_truncate_exit,",
          "1413:  TP_PROTO(struct inode *inode),",
          "1415:  TP_ARGS(inode)",
          "1416: );",
          "1418: DECLARE_EVENT_CLASS(ext4__map_blocks_enter,",
          "1419:  TP_PROTO(struct inode *inode, ext4_lblk_t lblk,",
          "1420:    unsigned len, unsigned flags),",
          "1422:  TP_ARGS(inode, lblk, len, flags),",
          "1424:  TP_STRUCT__entry(",
          "1425:   __field( ino_t,   ino  )",
          "1426:   __field( dev_t,   dev  )",
          "1427:   __field( ext4_lblk_t, lblk  )",
          "1428:   __field( unsigned, len  )",
          "1429:   __field( unsigned, flags  )",
          "1430:  ),",
          "1432:  TP_fast_assign(",
          "1433:   __entry->ino    = inode->i_ino;",
          "1434:   __entry->dev    = inode->i_sb->s_dev;",
          "1435:   __entry->lblk = lblk;",
          "1436:   __entry->len = len;",
          "1437:   __entry->flags = flags;",
          "1438:  ),",
          "1440:  TP_printk(\"dev %d,%d ino %lu lblk %u len %u flags %u\",",
          "1441:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1442:     (unsigned long) __entry->ino,",
          "1443:     (unsigned) __entry->lblk, __entry->len, __entry->flags)",
          "1444: );",
          "1446: DEFINE_EVENT(ext4__map_blocks_enter, ext4_ext_map_blocks_enter,",
          "1447:  TP_PROTO(struct inode *inode, ext4_lblk_t lblk,",
          "1448:    unsigned len, unsigned flags),",
          "1450:  TP_ARGS(inode, lblk, len, flags)",
          "1451: );",
          "1453: DEFINE_EVENT(ext4__map_blocks_enter, ext4_ind_map_blocks_enter,",
          "1454:  TP_PROTO(struct inode *inode, ext4_lblk_t lblk,",
          "1455:    unsigned len, unsigned flags),",
          "1457:  TP_ARGS(inode, lblk, len, flags)",
          "1458: );",
          "1460: DECLARE_EVENT_CLASS(ext4__map_blocks_exit,",
          "1461:  TP_PROTO(struct inode *inode, ext4_lblk_t lblk,",
          "1462:    ext4_fsblk_t pblk, unsigned len, int ret),",
          "1464:  TP_ARGS(inode, lblk, pblk, len, ret),",
          "1466:  TP_STRUCT__entry(",
          "1467:   __field( ino_t,  ino  )",
          "1468:   __field( dev_t,  dev  )",
          "1469:   __field( ext4_lblk_t, lblk  )",
          "1470:   __field( ext4_fsblk_t, pblk  )",
          "1471:   __field( unsigned, len  )",
          "1472:   __field( int,  ret  )",
          "1473:  ),",
          "1475:  TP_fast_assign(",
          "1476:   __entry->ino    = inode->i_ino;",
          "1477:   __entry->dev    = inode->i_sb->s_dev;",
          "1478:   __entry->lblk = lblk;",
          "1479:   __entry->pblk = pblk;",
          "1480:   __entry->len = len;",
          "1481:   __entry->ret = ret;",
          "1482:  ),",
          "1484:  TP_printk(\"dev %d,%d ino %lu lblk %u pblk %llu len %u ret %d\",",
          "1485:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1486:     (unsigned long) __entry->ino,",
          "1487:     (unsigned) __entry->lblk, (unsigned long long) __entry->pblk,",
          "1488:     __entry->len, __entry->ret)",
          "1489: );",
          "1491: DEFINE_EVENT(ext4__map_blocks_exit, ext4_ext_map_blocks_exit,",
          "1492:  TP_PROTO(struct inode *inode, ext4_lblk_t lblk,",
          "1493:    ext4_fsblk_t pblk, unsigned len, int ret),",
          "1495:  TP_ARGS(inode, lblk, pblk, len, ret)",
          "1496: );",
          "1498: DEFINE_EVENT(ext4__map_blocks_exit, ext4_ind_map_blocks_exit,",
          "1499:  TP_PROTO(struct inode *inode, ext4_lblk_t lblk,",
          "1500:    ext4_fsblk_t pblk, unsigned len, int ret),",
          "1502:  TP_ARGS(inode, lblk, pblk, len, ret)",
          "1503: );",
          "1505: TRACE_EVENT(ext4_ext_load_extent,",
          "1506:  TP_PROTO(struct inode *inode, ext4_lblk_t lblk, ext4_fsblk_t pblk),",
          "1508:  TP_ARGS(inode, lblk, pblk),",
          "1510:  TP_STRUCT__entry(",
          "1511:   __field( ino_t,  ino  )",
          "1512:   __field( dev_t,  dev  )",
          "1513:   __field( ext4_lblk_t, lblk  )",
          "1514:   __field( ext4_fsblk_t, pblk  )",
          "1515:  ),",
          "1517:  TP_fast_assign(",
          "1518:   __entry->ino    = inode->i_ino;",
          "1519:   __entry->dev    = inode->i_sb->s_dev;",
          "1520:   __entry->lblk = lblk;",
          "1521:   __entry->pblk = pblk;",
          "1522:  ),",
          "1524:  TP_printk(\"dev %d,%d ino %lu lblk %u pblk %llu\",",
          "1525:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1526:     (unsigned long) __entry->ino,",
          "1527:     (unsigned) __entry->lblk, (unsigned long long) __entry->pblk)",
          "1528: );",
          "1530: TRACE_EVENT(ext4_load_inode,",
          "1531:  TP_PROTO(struct inode *inode),",
          "1533:  TP_ARGS(inode),",
          "1535:  TP_STRUCT__entry(",
          "1536:   __field( ino_t, ino  )",
          "1537:   __field( dev_t, dev  )",
          "1538:  ),",
          "1540:  TP_fast_assign(",
          "1541:   __entry->ino  = inode->i_ino;",
          "1542:   __entry->dev  = inode->i_sb->s_dev;",
          "1543:  ),",
          "1545:  TP_printk(\"dev %d,%d ino %ld\",",
          "1546:     MAJOR(__entry->dev), MINOR(__entry->dev),",
          "1547:     (unsigned long) __entry->ino)",
          "1548: );",
          "",
          "---------------"
        ],
        "include/trace/events/jbd2.h||include/trace/events/jbd2.h": [
          "File: include/trace/events/jbd2.h -> include/trace/events/jbd2.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:  TP_ARGS(journal, result),",
          "19:  TP_STRUCT__entry(",
          "22:   __field( int, result   )",
          "23:  ),",
          "25:  TP_fast_assign(",
          "28:   __entry->result  = result;",
          "29:  ),",
          "33: );",
          "35: DECLARE_EVENT_CLASS(jbd2_commit,",
          "",
          "[Removed Lines]",
          "20:   __field( int, dev_major  )",
          "21:   __field( int, dev_minor  )",
          "26:   __entry->dev_major = MAJOR(journal->j_fs_dev->bd_dev);",
          "27:   __entry->dev_minor = MINOR(journal->j_fs_dev->bd_dev);",
          "31:  TP_printk(\"dev %d,%d result %d\",",
          "32:     __entry->dev_major, __entry->dev_minor, __entry->result)",
          "",
          "[Added Lines]",
          "20:   __field( dev_t, dev   )",
          "25:   __entry->dev  = journal->j_fs_dev->bd_dev;",
          "29:  TP_printk(\"dev %s result %d\",",
          "30:     jbd2_dev_to_name(__entry->dev), __entry->result)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:  TP_ARGS(journal, commit_transaction),",
          "41:  TP_STRUCT__entry(",
          "44:   __field( char, sync_commit    )",
          "45:   __field( int, transaction    )",
          "46:  ),",
          "48:  TP_fast_assign(",
          "51:   __entry->sync_commit = commit_transaction->t_synchronous_commit;",
          "52:   __entry->transaction = commit_transaction->t_tid;",
          "53:  ),",
          "58: );",
          "60: DEFINE_EVENT(jbd2_commit, jbd2_start_commit,",
          "",
          "[Removed Lines]",
          "42:   __field( int,   dev_major                )",
          "43:   __field( int,   dev_minor                )",
          "49:   __entry->dev_major = MAJOR(journal->j_fs_dev->bd_dev);",
          "50:   __entry->dev_minor = MINOR(journal->j_fs_dev->bd_dev);",
          "55:  TP_printk(\"dev %d,%d transaction %d sync %d\",",
          "56:     __entry->dev_major, __entry->dev_minor,",
          "57:     __entry->transaction, __entry->sync_commit)",
          "",
          "[Added Lines]",
          "40:   __field( dev_t, dev   )",
          "46:   __entry->dev  = journal->j_fs_dev->bd_dev;",
          "51:  TP_printk(\"dev %s transaction %d sync %d\",",
          "52:     jbd2_dev_to_name(__entry->dev), __entry->transaction,",
          "53:     __entry->sync_commit)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:  TP_ARGS(journal, commit_transaction),",
          "93:  TP_STRUCT__entry(",
          "96:   __field( char, sync_commit    )",
          "97:   __field( int, transaction    )",
          "98:   __field( int, head       )",
          "99:  ),",
          "101:  TP_fast_assign(",
          "104:   __entry->sync_commit = commit_transaction->t_synchronous_commit;",
          "105:   __entry->transaction = commit_transaction->t_tid;",
          "106:   __entry->head  = journal->j_tail_sequence;",
          "107:  ),",
          "112: );",
          "114: TRACE_EVENT(jbd2_submit_inode_data,",
          "",
          "[Removed Lines]",
          "94:   __field( int,   dev_major                )",
          "95:   __field( int,   dev_minor                )",
          "102:   __entry->dev_major = MAJOR(journal->j_fs_dev->bd_dev);",
          "103:   __entry->dev_minor = MINOR(journal->j_fs_dev->bd_dev);",
          "109:  TP_printk(\"dev %d,%d transaction %d sync %d head %d\",",
          "110:     __entry->dev_major, __entry->dev_minor,",
          "111:     __entry->transaction, __entry->sync_commit, __entry->head)",
          "",
          "[Added Lines]",
          "90:   __field( dev_t, dev   )",
          "97:   __entry->dev  = journal->j_fs_dev->bd_dev;",
          "103:  TP_printk(\"dev %s transaction %d sync %d head %d\",",
          "104:     jbd2_dev_to_name(__entry->dev), __entry->transaction,",
          "105:     __entry->sync_commit, __entry->head)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "117:  TP_ARGS(inode),",
          "119:  TP_STRUCT__entry(",
          "122:   __field( ino_t, ino   )",
          "123:  ),",
          "125:  TP_fast_assign(",
          "128:   __entry->ino = inode->i_ino;",
          "129:  ),",
          "134: );",
          "136: TRACE_EVENT(jbd2_run_stats,",
          "",
          "[Removed Lines]",
          "120:   __field( int,   dev_major                )",
          "121:   __field( int,   dev_minor                )",
          "126:   __entry->dev_major = MAJOR(inode->i_sb->s_dev);",
          "127:   __entry->dev_minor = MINOR(inode->i_sb->s_dev);",
          "131:  TP_printk(\"dev %d,%d ino %lu\",",
          "132:     __entry->dev_major, __entry->dev_minor,",
          "133:     (unsigned long) __entry->ino)",
          "",
          "[Added Lines]",
          "114:   __field( dev_t, dev   )",
          "119:   __entry->dev = inode->i_sb->s_dev;",
          "123:  TP_printk(\"dev %s ino %lu\",",
          "124:     jbd2_dev_to_name(__entry->dev), (unsigned long) __entry->ino)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "140:  TP_ARGS(dev, tid, stats),",
          "142:  TP_STRUCT__entry(",
          "145:   __field( unsigned long, tid  )",
          "146:   __field( unsigned long, wait  )",
          "147:   __field( unsigned long, running  )",
          "",
          "[Removed Lines]",
          "143:   __field(    int, dev_major )",
          "144:   __field(    int, dev_minor )",
          "",
          "[Added Lines]",
          "134:   __field(  dev_t, dev  )",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "154:  ),",
          "156:  TP_fast_assign(",
          "159:   __entry->tid  = tid;",
          "160:   __entry->wait  = stats->rs_wait;",
          "161:   __entry->running = stats->rs_running;",
          "",
          "[Removed Lines]",
          "157:   __entry->dev_major = MAJOR(dev);",
          "158:   __entry->dev_minor = MINOR(dev);",
          "",
          "[Added Lines]",
          "147:   __entry->dev  = dev;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "167:   __entry->blocks_logged = stats->rs_blocks_logged;",
          "168:  ),",
          "171:     \"logging %u handle_count %u blocks %u blocks_logged %u\",",
          "173:     jiffies_to_msecs(__entry->wait),",
          "174:     jiffies_to_msecs(__entry->running),",
          "175:     jiffies_to_msecs(__entry->locked),",
          "",
          "[Removed Lines]",
          "170:  TP_printk(\"dev %d,%d tid %lu wait %u running %u locked %u flushing %u \"",
          "172:     __entry->dev_major, __entry->dev_minor, __entry->tid,",
          "",
          "[Added Lines]",
          "159:  TP_printk(\"dev %s tid %lu wait %u running %u locked %u flushing %u \"",
          "161:     jbd2_dev_to_name(__entry->dev), __entry->tid,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "186:  TP_ARGS(dev, tid, stats),",
          "188:  TP_STRUCT__entry(",
          "191:   __field( unsigned long, tid  )",
          "192:   __field( unsigned long, chp_time )",
          "193:   __field(  __u32, forced_to_close )",
          "",
          "[Removed Lines]",
          "189:   __field(    int, dev_major )",
          "190:   __field(    int, dev_minor )",
          "",
          "[Added Lines]",
          "178:   __field(  dev_t, dev  )",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "196:  ),",
          "198:  TP_fast_assign(",
          "201:   __entry->tid  = tid;",
          "202:   __entry->chp_time = stats->cs_chp_time;",
          "203:   __entry->forced_to_close= stats->cs_forced_to_close;",
          "",
          "[Removed Lines]",
          "199:   __entry->dev_major = MAJOR(dev);",
          "200:   __entry->dev_minor = MINOR(dev);",
          "",
          "[Added Lines]",
          "187:   __entry->dev  = dev;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "205:   __entry->dropped = stats->cs_dropped;",
          "206:  ),",
          "209:     \"written %u dropped %u\",",
          "211:     jiffies_to_msecs(__entry->chp_time),",
          "212:     __entry->forced_to_close, __entry->written, __entry->dropped)",
          "213: );",
          "",
          "[Removed Lines]",
          "208:  TP_printk(\"dev %d,%d tid %lu chp_time %u forced_to_close %u \"",
          "210:     __entry->dev_major, __entry->dev_minor, __entry->tid,",
          "",
          "[Added Lines]",
          "195:  TP_printk(\"dev %s tid %lu chp_time %u forced_to_close %u \"",
          "197:     jbd2_dev_to_name(__entry->dev), __entry->tid,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "220:  TP_ARGS(journal, first_tid, block_nr, freed),",
          "222:  TP_STRUCT__entry(",
          "225:   __field( tid_t, tail_sequence  )",
          "226:   __field( tid_t, first_tid  )",
          "227:   __field(unsigned long, block_nr  )",
          "",
          "[Removed Lines]",
          "223:   __field( int,   dev_major                )",
          "224:   __field( int,   dev_minor                )",
          "",
          "[Added Lines]",
          "210:   __field( dev_t, dev   )",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "229:  ),",
          "231:  TP_fast_assign(",
          "234:   __entry->tail_sequence = journal->j_tail_sequence;",
          "235:   __entry->first_tid = first_tid;",
          "236:   __entry->block_nr = block_nr;",
          "237:   __entry->freed  = freed;",
          "238:  ),",
          "244: );",
          "",
          "[Removed Lines]",
          "232:   __entry->dev_major = MAJOR(journal->j_fs_dev->bd_dev);",
          "233:   __entry->dev_minor = MINOR(journal->j_fs_dev->bd_dev);",
          "240:  TP_printk(\"dev %d,%d from %u to %u offset %lu freed %lu\",",
          "241:     __entry->dev_major, __entry->dev_minor,",
          "242:     __entry->tail_sequence, __entry->first_tid,",
          "243:     __entry->block_nr, __entry->freed)",
          "",
          "[Added Lines]",
          "218:   __entry->dev  = journal->j_fs_dev->bd_dev;",
          "225:  TP_printk(\"dev %s from %u to %u offset %lu freed %lu\",",
          "226:     jbd2_dev_to_name(__entry->dev), __entry->tail_sequence,",
          "227:     __entry->first_tid, __entry->block_nr, __entry->freed)",
          "",
          "---------------"
        ]
      }
    }
  ]
}