{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ade54d68ee770d74ff98716f3eae9ecb2512da54",
      "candidate_info": {
        "commit_hash": "ade54d68ee770d74ff98716f3eae9ecb2512da54",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ade54d68ee770d74ff98716f3eae9ecb2512da54",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/global.c",
          "src/main.c",
          "src/os.c",
          "src/shell.c.in",
          "src/sqlite.h.in",
          "src/sqliteInt.h",
          "src/test1.c"
        ],
        "message": "Add the SQLITE_TESTCTRL_PRNG_SEED test control.\n\nFossilOrigin-Name: 3ac5723164ae801e209ce525a5d94692767136f9d06be2a84883dcea677d02da",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/global.c||src/global.c",
          "src/main.c||src/main.c",
          "src/os.c||src/os.c",
          "src/shell.c.in||src/shell.c.in",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/test1.c||src/test1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: faaaae4940b5f4f70e4988ad5b45582410b381ace0031e6abcde0b9217c06796",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/global.c||src/global.c": [
          "File: src/global.c -> src/global.c"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3824:       break;",
          "3825:     }",
          "3834:       break;",
          "3835:     }",
          "",
          "[Removed Lines]",
          "3832:     case SQLITE_TESTCTRL_PRNG_RESET: {",
          "3833:       sqlite3_randomness(0,0);",
          "",
          "[Added Lines]",
          "3832:     case SQLITE_TESTCTRL_PRNG_SEED: {",
          "3833:       sqlite3Config.iPrngSeed = va_arg(ap, unsigned int);",
          "",
          "---------------"
        ],
        "src/os.c||src/os.c": [
          "File: src/os.c -> src/os.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "258: }",
          "260: int sqlite3OsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){",
          "262: }",
          "263: int sqlite3OsSleep(sqlite3_vfs *pVfs, int nMicro){",
          "264:   return pVfs->xSleep(pVfs, nMicro);",
          "",
          "[Removed Lines]",
          "261:   return pVfs->xRandomness(pVfs, nByte, zBufOut);",
          "",
          "[Added Lines]",
          "261:   if( sqlite3Config.iPrngSeed ){",
          "262:     memset(zBufOut, 0, nByte);",
          "263:     if( nByte>sizeof(unsigned) ) nByte = sizeof(unsigned int);",
          "264:     memcpy(zBufOut, &sqlite3Config.iPrngSeed, nByte);",
          "265:     return SQLITE_OK;",
          "266:   }else{",
          "267:     return pVfs->xRandomness(pVfs, nByte, zBufOut);",
          "268:   }",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "9150:       { \"parser_coverage\",    SQLITE_TESTCTRL_PARSER_COVERAGE, \"\"                 },",
          "9151: #endif",
          "9152:       { \"pending_byte\",       SQLITE_TESTCTRL_PENDING_BYTE,  \"OFFSET  \"           },",
          "9154:       { \"prng_restore\",       SQLITE_TESTCTRL_PRNG_RESTORE,  \"\"                   },",
          "9155:       { \"prng_save\",          SQLITE_TESTCTRL_PRNG_SAVE,     \"\"                   },",
          "9156:       { \"reserve\",            SQLITE_TESTCTRL_RESERVE,       \"BYTES-OF-RESERVE\"   },",
          "9157:     };",
          "9158:     int testctrl = -1;",
          "",
          "[Removed Lines]",
          "9153:       { \"prng_reset\",         SQLITE_TESTCTRL_PRNG_RESET,    \"\"                   },",
          "",
          "[Added Lines]",
          "9155:       { \"prng_seed\",          SQLITE_TESTCTRL_PRNG_SEED,     \"SEED\"               },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9229:         case SQLITE_TESTCTRL_PENDING_BYTE:",
          "9230:           if( nArg==3 ){",
          "9231:             unsigned int opt = (unsigned int)integerValue(azArg[2]);",
          "9232:             rc2 = sqlite3_test_control(testctrl, opt);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9230:         case SQLITE_TESTCTRL_PRNG_SEED:",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "7335: #define SQLITE_TESTCTRL_FIRST                    5",
          "7336: #define SQLITE_TESTCTRL_PRNG_SAVE                5",
          "7337: #define SQLITE_TESTCTRL_PRNG_RESTORE             6",
          "7339: #define SQLITE_TESTCTRL_BITVEC_TEST              8",
          "7340: #define SQLITE_TESTCTRL_FAULT_INSTALL            9",
          "7341: #define SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS     10",
          "",
          "[Removed Lines]",
          "7338: #define SQLITE_TESTCTRL_PRNG_RESET               7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7358: #define SQLITE_TESTCTRL_IMPOSTER                25",
          "7359: #define SQLITE_TESTCTRL_PARSER_COVERAGE         26",
          "7360: #define SQLITE_TESTCTRL_RESULT_INTREAL          27",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7361: #define SQLITE_TESTCTRL_PRNG_SEED               28",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/test1.c||src/test1.c": [
          "File: src/test1.c -> src/test1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6375: ){",
          "6377:   return TCL_OK;",
          "6378: }",
          "",
          "[Removed Lines]",
          "6376:   sqlite3_test_control(SQLITE_TESTCTRL_PRNG_RESET);",
          "",
          "[Added Lines]",
          "6376:   sqlite3_randomness(0,0);",
          "6377:   return TCL_OK;",
          "6378: }",
          "6384: static int SQLITE_TCLAPI prng_seed(",
          "6389: ){",
          "6390:   unsigned int i;",
          "6391:   if( objc!=2 ){",
          "6392:     Tcl_WrongNumArgs(interp, 1, objv, \"PRNG-SEED-TEXT\");",
          "6393:     return TCL_ERROR;",
          "6394:   }",
          "6395:   if( Tcl_GetIntFromObj(objv[0],&i) ) return TCL_ERROR;",
          "6396:   sqlite3_test_control(SQLITE_TESTCTRL_PRNG_SEED, (unsigned int)i);",
          "6397:   sqlite3_randomness(0,0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7923:      { \"save_prng_state\",               save_prng_state,    0 },",
          "7924:      { \"restore_prng_state\",            restore_prng_state, 0 },",
          "7925:      { \"reset_prng_state\",              reset_prng_state,   0 },",
          "7926:      { \"database_never_corrupt\",        database_never_corrupt, 0},",
          "7927:      { \"database_may_be_corrupt\",       database_may_be_corrupt, 0},",
          "7928:      { \"optimization_control\",          optimization_control,0},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7947:      { \"prng_seed\",                     prng_seed,          0 },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9889ede28dd20ca1a2093a125cb38160eeb2c01a",
      "candidate_info": {
        "commit_hash": "9889ede28dd20ca1a2093a125cb38160eeb2c01a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9889ede28dd20ca1a2093a125cb38160eeb2c01a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/window8.tcl",
          "test/window8.test"
        ],
        "message": "Add test case to window8.test. Also fix an error in a comment in window.c.\n\nFossilOrigin-Name: 2925bfa5971c8557ecaa6ac18df0825ebbbd1622017509e83451d90640146fa8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/window8.tcl||test/window8.tcl",
          "test/window8.test||test/window8.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 596ac2a4eab28b74f4050fb4eb71883f2a1421fdbccf302413e4653391bb52c9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c"
        ],
        "test/window8.tcl||test/window8.tcl": [
          "File: test/window8.tcl -> test/window8.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "344: ==========",
          "347: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346: execsql_test 7.0 {",
          "347:   DROP TABLE IF EXISTS t2;",
          "348:   CREATE TABLE t2(a INTEGER, b INTEGER);",
          "350:   INSERT INTO t2 VALUES(1, 65);",
          "351:   INSERT INTO t2 VALUES(2, NULL);",
          "352:   INSERT INTO t2 VALUES(3, NULL);",
          "353:   INSERT INTO t2 VALUES(4, NULL);",
          "354: }",
          "356: execsql_test 7.1 {",
          "357:   SELECT sum(a) OVER win FROM t2",
          "358:   WINDOW win AS (",
          "359:       ORDER BY b NULLS LAST RANGE BETWEEN 6 FOLLOWING AND UNBOUNDED FOLLOWING",
          "360:   );",
          "361: }",
          "",
          "---------------"
        ],
        "test/window8.test||test/window8.test": [
          "File: test/window8.test -> test/window8.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "6206: #==========================================================================",
          "6208: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6208: do_execsql_test 7.0 {",
          "6209:   DROP TABLE IF EXISTS t2;",
          "6210:   CREATE TABLE t2(a INTEGER, b INTEGER);",
          "6212:   INSERT INTO t2 VALUES(1, 65);",
          "6213:   INSERT INTO t2 VALUES(2, NULL);",
          "6214:   INSERT INTO t2 VALUES(3, NULL);",
          "6215:   INSERT INTO t2 VALUES(4, NULL);",
          "6216: } {}",
          "6218: do_execsql_test 7.1 {",
          "6219:   SELECT sum(a) OVER win FROM t2",
          "6220:   WINDOW win AS (",
          "6221:       ORDER BY b NULLS LAST RANGE BETWEEN 6 FOLLOWING AND UNBOUNDED FOLLOWING",
          "6222:   );",
          "6223: } {9   9   9   9}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e86974c61985d68676d2803dcf6cd3f3eaf82989",
      "candidate_info": {
        "commit_hash": "e86974c61985d68676d2803dcf6cd3f3eaf82989",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e86974c61985d68676d2803dcf6cd3f3eaf82989",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c"
        ],
        "message": "Fix a performance regression caused by the previous commit.\n\nFossilOrigin-Name: c4db0ad12d4f3d2800d36404f391b325cdc4aa7f8dcea93b2d63a489d9095ad4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3ef711d98fb239cf24472f124e7b36b0dde33355de5a2c9a3a978bbdd042a735",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "310:   return 0;",
          "311: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "319: static SQLITE_NOINLINE WhereTerm *whereScanInitIndexExpr(WhereScan *pScan){",
          "320:   pScan->idxaff = sqlite3ExprAffinity(pScan->pIdxExpr);",
          "321:   return whereScanNext(pScan);",
          "322: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "342:   pScan->pIdxExpr = 0;",
          "343:   pScan->idxaff = 0;",
          "344:   pScan->zCollName = 0;",
          "345:   if( pIdx ){",
          "346:     int j = iColumn;",
          "347:     iColumn = pIdx->aiColumn[j];",
          "348:     if( iColumn==XN_EXPR ){",
          "349:       pScan->pIdxExpr = pIdx->aColExpr->a[j].pExpr;",
          "350:       pScan->zCollName = pIdx->azColl[j];",
          "352:     }else if( iColumn==pIdx->pTable->iPKey ){",
          "353:       iColumn = XN_ROWID;",
          "354:     }else if( iColumn>=0 ){",
          "",
          "[Removed Lines]",
          "351:       pScan->idxaff = sqlite3ExprAffinity(pScan->pIdxExpr);",
          "",
          "[Added Lines]",
          "356:   pScan->opMask = opMask;",
          "357:   pScan->k = 0;",
          "358:   pScan->aiCur[0] = iCur;",
          "359:   pScan->nEquiv = 1;",
          "360:   pScan->iEquiv = 1;",
          "367:       pScan->aiColumn[0] = XN_EXPR;",
          "368:       return whereScanInitIndexExpr(pScan);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "358:   }else if( iColumn==XN_EXPR ){",
          "359:     return 0;",
          "360:   }",
          "364:   pScan->aiColumn[0] = iColumn;",
          "367:   return whereScanNext(pScan);",
          "368: }",
          "",
          "[Removed Lines]",
          "361:   pScan->opMask = opMask;",
          "362:   pScan->k = 0;",
          "363:   pScan->aiCur[0] = iCur;",
          "365:   pScan->nEquiv = 1;",
          "366:   pScan->iEquiv = 1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b4b36306576fcc053f3e7f9fcfd990340bdb96e8",
      "candidate_info": {
        "commit_hash": "b4b36306576fcc053f3e7f9fcfd990340bdb96e8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b4b36306576fcc053f3e7f9fcfd990340bdb96e8",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/window1.test"
        ],
        "message": "Remove a NEVER() that is no longer true. Fix for [36ffedcb9].\n\nFossilOrigin-Name: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e3b5fc05c00fc58be7a7c94ce1d97a5b05113f39aba03df64aab08364f85616b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5451: static int exprSrcCount(Walker *pWalker, Expr *pExpr){",
          "5458:     int i;",
          "5459:     struct SrcCount *p = pWalker->u.pSrcCount;",
          "5460:     SrcList *pSrc = p->pSrc;",
          "",
          "[Removed Lines]",
          "5457:   if( pExpr->op==TK_COLUMN || NEVER(pExpr->op==TK_AGG_COLUMN) ){",
          "",
          "[Added Lines]",
          "5458:   if( pExpr->op==TK_COLUMN || pExpr->op==TK_AGG_COLUMN ){",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1491:   SELECT a, 1+sum(b) OVER (ORDER BY a) AS abc FROM t1 ORDER BY (SELECT abc)",
          "1492: } {1 {misuse of aliased window function abc}}",
          "1494: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1494: #-------------------------------------------------------------------------",
          "1495: reset_db",
          "1496: do_execsql_test 44.1 {",
          "1497:   CREATE TABLE t0(c0);",
          "1498: }",
          "1500: do_catchsql_test 44.2.1 {",
          "1501:   SELECT ntile(0) OVER ();",
          "1502: } {1 {argument of ntile must be a positive integer}}",
          "1503: do_catchsql_test 44.2.2 {",
          "1504:   SELECT (0, 0) IN(SELECT MIN(c0), NTILE(0) OVER()) FROM t0;",
          "1505: } {1 {argument of ntile must be a positive integer}}",
          "1507: do_execsql_test 44.3.1 {",
          "1508:   SELECT ntile(1) OVER ();",
          "1509: } {1}",
          "1510: do_execsql_test 44.3.2 {",
          "1511:   SELECT (0, 0) IN(SELECT MIN(c0), NTILE(1) OVER()) FROM t0;",
          "1512: } {0}",
          "1514: do_execsql_test 44.4.2 {",
          "1515:   INSERT INTO t0 VALUES(2), (1), (0);",
          "1516:   SELECT (0, 1) IN(SELECT MIN(c0), NTILE(1) OVER()) FROM t0;",
          "1517: } {1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bde3a4f680b7c99ae918aa0477e81541ebdafbe5",
      "candidate_info": {
        "commit_hash": "bde3a4f680b7c99ae918aa0477e81541ebdafbe5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bde3a4f680b7c99ae918aa0477e81541ebdafbe5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wherecode.c"
        ],
        "message": "Minor simplification to the changes from check-in [36c11ad51f].\n\nFossilOrigin-Name: 7bc8205dd9c1657c736a9c6a1a90dd9dad442accfbb77d296eaae2c09ab46bd1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wherecode.c||src/wherecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 36c11ad51fe9ab1bde0b98d0ea9b8588e07d168cd8027486749372894941ad93",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1059:         x1 = pIdx->aiColumn[i];",
          "1060:         x2 = sqlite3TableColumnToStorage(pTab, x1);",
          "1061:         testcase( x1!=x2 );",
          "1063:       }",
          "1064:       sqlite3VdbeChangeP4(v, -1, (char*)ai, P4_INTARRAY);",
          "1065:     }",
          "",
          "[Removed Lines]",
          "1062:         if( pIdx->aiColumn[i]>=0 ) ai[x2+1] = i+1;",
          "",
          "[Added Lines]",
          "1062:         if( x1>=0 ) ai[x2+1] = i+1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}