{
  "cve_id": "CVE-2020-29660",
  "cve_desc": "A locking inconsistency issue was discovered in the tty subsystem of the Linux kernel through 5.9.13. drivers/tty/tty_io.c and drivers/tty/tty_jobctrl.c may allow a read-after-free attack against TIOCGSID, aka CID-c8bcd9c5be24.",
  "repo": "torvalds/linux",
  "patch_hash": "c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9",
  "patch_info": {
    "commit_hash": "c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/c8bcd9c5be24fb9e6132e97da5a35e55a83e36b9",
    "files": [
      "drivers/tty/tty_io.c",
      "drivers/tty/tty_jobctrl.c",
      "include/linux/tty.h"
    ],
    "message": "tty: Fix ->session locking\n\nCurrently, locking of ->session is very inconsistent; most places\nprotect it using the legacy tty mutex, but disassociate_ctty(),\n__do_SAK(), tiocspgrp() and tiocgsid() don't.\nTwo of the writers hold the ctrl_lock (because they already need it for\n->pgrp), but __proc_set_tty() doesn't do that yet.\n\nOn a PREEMPT=y system, an unprivileged user can theoretically abuse\nthis broken locking to read 4 bytes of freed memory via TIOCGSID if\ntiocgsid() is preempted long enough at the right point. (Other things\nmight also go wrong, especially if root-only ioctls are involved; I'm\nnot sure about that.)\n\nChange the locking on ->session such that:\n\n - tty_lock() is held by all writers: By making disassociate_ctty()\n   hold it. This should be fine because the same lock can already be\n   taken through the call to tty_vhangup_session().\n   The tricky part is that we need to shorten the area covered by\n   siglock to be able to take tty_lock() without ugly retry logic; as\n   far as I can tell, this should be fine, since nothing in the\n   signal_struct is touched in the `if (tty)` branch.\n - ctrl_lock is held by all writers: By changing __proc_set_tty() to\n   hold the lock a little longer.\n - All readers that aren't holding tty_lock() hold ctrl_lock: By\n   adding locking to tiocgsid() and __do_SAK(), and expanding the area\n   covered by ctrl_lock in tiocspgrp().\n\nCc: stable@kernel.org\nSigned-off-by: Jann Horn <jannh@google.com>\nReviewed-by: Jiri Slaby <jirislaby@kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "before_after_code_files": [
      "drivers/tty/tty_io.c||drivers/tty/tty_io.c",
      "drivers/tty/tty_jobctrl.c||drivers/tty/tty_jobctrl.c",
      "include/linux/tty.h||include/linux/tty.h"
    ]
  },
  "patch_diff": {
    "drivers/tty/tty_io.c||drivers/tty/tty_io.c": [
      "File: drivers/tty/tty_io.c -> drivers/tty/tty_io.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2897:  struct task_struct *g, *p;",
      "2898:  struct pid *session;",
      "2899:  int  i;",
      "2901:  if (!tty)",
      "2902:   return;",
      "2905:  tty_ldisc_flush(tty);",
      "",
      "[Removed Lines]",
      "2903:  session = tty->session;",
      "",
      "[Added Lines]",
      "2900:  unsigned long flags;",
      "2905:  spin_lock_irqsave(&tty->ctrl_lock, flags);",
      "2906:  session = get_pid(tty->session);",
      "2907:  spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2932:   task_unlock(p);",
      "2933:  } while_each_thread(g, p);",
      "2934:  read_unlock(&tasklist_lock);",
      "2935: #endif",
      "2936: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2939:  put_pid(session);",
      "",
      "---------------"
    ],
    "drivers/tty/tty_jobctrl.c||drivers/tty/tty_jobctrl.c": [
      "File: drivers/tty/tty_jobctrl.c -> drivers/tty/tty_jobctrl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "103:  put_pid(tty->session);",
      "104:  put_pid(tty->pgrp);",
      "105:  tty->pgrp = get_pid(task_pgrp(current));",
      "107:  tty->session = get_pid(task_session(current));",
      "108:  if (current->signal->tty) {",
      "109:   tty_debug(tty, \"current tty %s not NULL!!\\n\",",
      "110:      current->signal->tty->name);",
      "",
      "[Removed Lines]",
      "106:  spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
      "",
      "[Added Lines]",
      "107:  spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "293:  spin_lock_irq(&current->sighand->siglock);",
      "294:  put_pid(current->signal->tty_old_pgrp);",
      "295:  current->signal->tty_old_pgrp = NULL;",
      "297:  tty = tty_kref_get(current->signal->tty);",
      "298:  if (tty) {",
      "299:   unsigned long flags;",
      "300:   spin_lock_irqsave(&tty->ctrl_lock, flags);",
      "301:   put_pid(tty->session);",
      "302:   put_pid(tty->pgrp);",
      "303:   tty->session = NULL;",
      "304:   tty->pgrp = NULL;",
      "305:   spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
      "306:   tty_kref_put(tty);",
      "307:  }",
      "311:  read_lock(&tasklist_lock);",
      "312:  session_clear_tty(task_session(current));",
      "",
      "[Removed Lines]",
      "309:  spin_unlock_irq(&current->sighand->siglock);",
      "",
      "[Added Lines]",
      "297:  spin_unlock_irq(&current->sighand->siglock);",
      "302:   tty_lock(tty);",
      "309:   tty_unlock(tty);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "477:   return -ENOTTY;",
      "478:  if (retval)",
      "479:   return retval;",
      "484:  if (get_user(pgrp_nr, p))",
      "485:   return -EFAULT;",
      "486:  if (pgrp_nr < 0)",
      "487:   return -EINVAL;",
      "488:  rcu_read_lock();",
      "489:  pgrp = find_vpid(pgrp_nr);",
      "490:  retval = -ESRCH;",
      "",
      "[Removed Lines]",
      "480:  if (!current->signal->tty ||",
      "481:      (current->signal->tty != real_tty) ||",
      "482:      (real_tty->session != task_session(current)))",
      "483:   return -ENOTTY;",
      "",
      "[Added Lines]",
      "489:  spin_lock_irq(&real_tty->ctrl_lock);",
      "490:  if (!current->signal->tty ||",
      "491:      (current->signal->tty != real_tty) ||",
      "492:      (real_tty->session != task_session(current))) {",
      "493:   retval = -ENOTTY;",
      "494:   goto out_unlock_ctrl;",
      "495:  }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "494:  if (session_of_pgrp(pgrp) != task_session(current))",
      "495:   goto out_unlock;",
      "496:  retval = 0;",
      "498:  put_pid(real_tty->pgrp);",
      "499:  real_tty->pgrp = get_pid(pgrp);",
      "501: out_unlock:",
      "502:  rcu_read_unlock();",
      "503:  return retval;",
      "504: }",
      "",
      "[Removed Lines]",
      "497:  spin_lock_irq(&real_tty->ctrl_lock);",
      "500:  spin_unlock_irq(&real_tty->ctrl_lock);",
      "",
      "[Added Lines]",
      "509: out_unlock_ctrl:",
      "510:  spin_unlock_irq(&real_tty->ctrl_lock);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "517: static int tiocgsid(struct tty_struct *tty, struct tty_struct *real_tty, pid_t __user *p)",
      "518: {",
      "523:  if (tty == real_tty && current->signal->tty != real_tty)",
      "524:   return -ENOTTY;",
      "525:  if (!real_tty->session)",
      "528: }",
      "",
      "[Removed Lines]",
      "526:   return -ENOTTY;",
      "527:  return put_user(pid_vnr(real_tty->session), p);",
      "",
      "[Added Lines]",
      "525:  unsigned long flags;",
      "526:  pid_t sid;",
      "535:  spin_lock_irqsave(&real_tty->ctrl_lock, flags);",
      "537:   goto err;",
      "538:  sid = pid_vnr(real_tty->session);",
      "539:  spin_unlock_irqrestore(&real_tty->ctrl_lock, flags);",
      "541:  return put_user(sid, p);",
      "543: err:",
      "544:  spin_unlock_irqrestore(&real_tty->ctrl_lock, flags);",
      "545:  return -ENOTTY;",
      "",
      "---------------"
    ],
    "include/linux/tty.h||include/linux/tty.h": [
      "File: include/linux/tty.h -> include/linux/tty.h"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "64d608db38ffc0c7a25455387096e0aad9410397",
      "candidate_info": {
        "commit_hash": "64d608db38ffc0c7a25455387096e0aad9410397",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/64d608db38ffc0c7a25455387096e0aad9410397",
        "files": [
          "drivers/net/caif/caif_serial.c",
          "drivers/tty/n_tty.c",
          "drivers/tty/pty.c",
          "drivers/tty/tty_io.c",
          "drivers/tty/tty_jobctrl.c",
          "drivers/tty/vt/vt.c",
          "include/linux/tty.h"
        ],
        "message": "tty: cumulate and document tty_struct::ctrl* members\n\nGroup the ctrl members under a single struct called ctrl. The new struct\ncontains 'pgrp', 'session', 'pktstatus', and 'packet'. 'pktstatus' and\n'packet' used to be bits in a bitfield. The struct also contains the\nlock protecting them to share the same cache line.\n\nNote that commit c545b66c6922b (tty: Serialize tcflow() with other tty\nflow control changes) added a padding to the original bitfield. It was\nfor the bitfield to occupy a whole 64b word to avoid interferring stores\non Alpha (cannot we evaporate this arch with weird implications to C\ncode yet?). But it doesn't work as expected as the padding\n(tty_struct::ctrl_unused) is aligned to a 8B boundary too and occupies\nsome bytes from the next word.\n\nSo make it reliable by:\n1) setting __aligned of the struct -- that aligns the start, and\n2) making 'unsigned long unused[0]' as the last member of the struct --\n   pads the end.\n\nAdd a kerneldoc comment for this grouped members.\n\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nCc: \"David S. Miller\" <davem@davemloft.net>\nCc: Jakub Kicinski <kuba@kernel.org>\nCc: netdev@vger.kernel.org\nLink: https://lore.kernel.org/r/20210505091928.22010-14-jslaby@suse.cz\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
        "before_after_code_files": [
          "drivers/net/caif/caif_serial.c||drivers/net/caif/caif_serial.c",
          "drivers/tty/n_tty.c||drivers/tty/n_tty.c",
          "drivers/tty/pty.c||drivers/tty/pty.c",
          "drivers/tty/tty_io.c||drivers/tty/tty_io.c",
          "drivers/tty/tty_jobctrl.c||drivers/tty/tty_jobctrl.c",
          "drivers/tty/vt/vt.c||drivers/tty/vt/vt.c",
          "include/linux/tty.h||include/linux/tty.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/tty/tty_io.c||drivers/tty/tty_io.c",
            "drivers/tty/tty_jobctrl.c||drivers/tty/tty_jobctrl.c",
            "include/linux/tty.h||include/linux/tty.h"
          ],
          "candidate": [
            "drivers/tty/tty_io.c||drivers/tty/tty_io.c",
            "drivers/tty/tty_jobctrl.c||drivers/tty/tty_jobctrl.c",
            "include/linux/tty.h||include/linux/tty.h"
          ]
        }
      },
      "candidate_diff": {
        "drivers/net/caif/caif_serial.c||drivers/net/caif/caif_serial.c": [
          "File: drivers/net/caif/caif_serial.c -> drivers/net/caif/caif_serial.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:  ser->tty_status =",
          "90:   ser->tty->flow.stopped << 5 |",
          "91:   ser->tty->flow.tco_stopped << 3 |",
          "93: }",
          "94: static inline void debugfs_init(struct ser_device *ser, struct tty_struct *tty)",
          "95: {",
          "",
          "[Removed Lines]",
          "92:   ser->tty->packet << 2;",
          "",
          "[Added Lines]",
          "92:   ser->tty->ctrl.packet << 2;",
          "",
          "---------------"
        ],
        "drivers/tty/n_tty.c||drivers/tty/n_tty.c": [
          "File: drivers/tty/n_tty.c -> drivers/tty/n_tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "342: {",
          "343:  unsigned long flags;",
          "349:   wake_up_interruptible(&tty->link->read_wait);",
          "350:  }",
          "351: }",
          "",
          "[Removed Lines]",
          "345:  if (tty->link->packet) {",
          "346:   spin_lock_irqsave(&tty->ctrl_lock, flags);",
          "347:   tty->ctrl_status |= TIOCPKT_FLUSHREAD;",
          "348:   spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
          "",
          "[Added Lines]",
          "345:  if (tty->link->ctrl.packet) {",
          "346:   spin_lock_irqsave(&tty->ctrl.lock, flags);",
          "347:   tty->ctrl.pktstatus |= TIOCPKT_FLUSHREAD;",
          "348:   spin_unlock_irqrestore(&tty->ctrl.lock, flags);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2072:  int minimum, time;",
          "2073:  ssize_t retval = 0;",
          "2074:  long timeout;",
          "2076:  size_t tail;",
          "",
          "[Removed Lines]",
          "2075:  int packet;",
          "",
          "[Added Lines]",
          "2075:  bool packet;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2128:   }",
          "2129:  }",
          "2132:  tail = ldata->read_tail;",
          "2134:  add_wait_queue(&tty->read_wait, &wait);",
          "2135:  while (nr) {",
          "2138:    unsigned char cs;",
          "2139:    if (kb != kbuf)",
          "2140:     break;",
          "2146:    nr--;",
          "2147:    break;",
          "",
          "[Removed Lines]",
          "2131:  packet = tty->packet;",
          "2137:   if (packet && tty->link->ctrl_status) {",
          "2141:    spin_lock_irq(&tty->link->ctrl_lock);",
          "2142:    cs = tty->link->ctrl_status;",
          "2143:    tty->link->ctrl_status = 0;",
          "2144:    spin_unlock_irq(&tty->link->ctrl_lock);",
          "",
          "[Added Lines]",
          "2131:  packet = tty->ctrl.packet;",
          "2137:   if (packet && tty->link->ctrl.pktstatus) {",
          "2141:    spin_lock_irq(&tty->link->ctrl.lock);",
          "2142:    cs = tty->link->ctrl.pktstatus;",
          "2143:    tty->link->ctrl.pktstatus = 0;",
          "2144:    spin_unlock_irq(&tty->link->ctrl.lock);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2368:   if (input_available_p(tty, 1))",
          "2369:    mask |= EPOLLIN | EPOLLRDNORM;",
          "2370:  }",
          "2372:   mask |= EPOLLPRI | EPOLLIN | EPOLLRDNORM;",
          "2373:  if (test_bit(TTY_OTHER_CLOSED, &tty->flags))",
          "2374:   mask |= EPOLLHUP;",
          "",
          "[Removed Lines]",
          "2371:  if (tty->packet && tty->link->ctrl_status)",
          "",
          "[Added Lines]",
          "2371:  if (tty->ctrl.packet && tty->link->ctrl.pktstatus)",
          "",
          "---------------"
        ],
        "drivers/tty/pty.c||drivers/tty/pty.c": [
          "File: drivers/tty/pty.c -> drivers/tty/pty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:  set_bit(TTY_IO_ERROR, &tty->flags);",
          "58:  wake_up_interruptible(&tty->read_wait);",
          "59:  wake_up_interruptible(&tty->write_wait);",
          "64:  if (!tty->link)",
          "65:   return;",
          "",
          "[Removed Lines]",
          "60:  spin_lock_irq(&tty->ctrl_lock);",
          "61:  tty->packet = 0;",
          "62:  spin_unlock_irq(&tty->ctrl_lock);",
          "",
          "[Added Lines]",
          "60:  spin_lock_irq(&tty->ctrl.lock);",
          "61:  tty->ctrl.packet = false;",
          "62:  spin_unlock_irq(&tty->ctrl.lock);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "185:  if (get_user(pktmode, arg))",
          "186:   return -EFAULT;",
          "189:  if (pktmode) {",
          "192:    smp_mb();",
          "194:   }",
          "195:  } else",
          "199:  return 0;",
          "200: }",
          "",
          "[Removed Lines]",
          "188:  spin_lock_irq(&tty->ctrl_lock);",
          "190:   if (!tty->packet) {",
          "191:    tty->link->ctrl_status = 0;",
          "193:    tty->packet = 1;",
          "196:   tty->packet = 0;",
          "197:  spin_unlock_irq(&tty->ctrl_lock);",
          "",
          "[Added Lines]",
          "188:  spin_lock_irq(&tty->ctrl.lock);",
          "190:   if (!tty->ctrl.packet) {",
          "191:    tty->link->ctrl.pktstatus = 0;",
          "193:    tty->ctrl.packet = true;",
          "196:   tty->ctrl.packet = false;",
          "197:  spin_unlock_irq(&tty->ctrl.lock);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "203: static int pty_get_pktmode(struct tty_struct *tty, int __user *arg)",
          "204: {",
          "207:  return put_user(pktmode, arg);",
          "208: }",
          "",
          "[Removed Lines]",
          "205:  int pktmode = tty->packet;",
          "",
          "[Added Lines]",
          "205:  int pktmode = tty->ctrl.packet;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "232:   return;",
          "234:  tty_buffer_flush(to, NULL);",
          "238:   wake_up_interruptible(&to->read_wait);",
          "240:  }",
          "241: }",
          "",
          "[Removed Lines]",
          "235:  if (to->packet) {",
          "236:   spin_lock_irq(&tty->ctrl_lock);",
          "237:   tty->ctrl_status |= TIOCPKT_FLUSHWRITE;",
          "239:   spin_unlock_irq(&tty->ctrl_lock);",
          "",
          "[Added Lines]",
          "235:  if (to->ctrl.packet) {",
          "236:   spin_lock_irq(&tty->ctrl.lock);",
          "237:   tty->ctrl.pktstatus |= TIOCPKT_FLUSHWRITE;",
          "239:   spin_unlock_irq(&tty->ctrl.lock);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "266:      struct ktermios *old_termios)",
          "267: {",
          "270:   int extproc = (old_termios->c_lflag & EXTPROC) | L_EXTPROC(tty);",
          "271:   int old_flow = ((old_termios->c_iflag & IXON) &&",
          "272:     (old_termios->c_cc[VSTOP] == '\\023') &&",
          "",
          "[Removed Lines]",
          "269:  if (tty->link && tty->link->packet) {",
          "",
          "[Added Lines]",
          "269:  if (tty->link && tty->link->ctrl.packet) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "275:     STOP_CHAR(tty) == '\\023' &&",
          "276:     START_CHAR(tty) == '\\021');",
          "277:   if ((old_flow != new_flow) || extproc) {",
          "279:    if (old_flow != new_flow) {",
          "281:     if (new_flow)",
          "283:     else",
          "285:    }",
          "286:    if (extproc)",
          "289:    wake_up_interruptible(&tty->link->read_wait);",
          "290:   }",
          "291:  }",
          "",
          "[Removed Lines]",
          "278:    spin_lock_irq(&tty->ctrl_lock);",
          "280:     tty->ctrl_status &= ~(TIOCPKT_DOSTOP | TIOCPKT_NOSTOP);",
          "282:      tty->ctrl_status |= TIOCPKT_DOSTOP;",
          "284:      tty->ctrl_status |= TIOCPKT_NOSTOP;",
          "287:     tty->ctrl_status |= TIOCPKT_IOCTL;",
          "288:    spin_unlock_irq(&tty->ctrl_lock);",
          "",
          "[Added Lines]",
          "278:    spin_lock_irq(&tty->ctrl.lock);",
          "280:     tty->ctrl.pktstatus &= ~(TIOCPKT_DOSTOP | TIOCPKT_NOSTOP);",
          "282:      tty->ctrl.pktstatus |= TIOCPKT_DOSTOP;",
          "284:      tty->ctrl.pktstatus |= TIOCPKT_NOSTOP;",
          "287:     tty->ctrl.pktstatus |= TIOCPKT_IOCTL;",
          "288:    spin_unlock_irq(&tty->ctrl.lock);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "346: {",
          "347:  unsigned long flags;",
          "354:   wake_up_interruptible_poll(&tty->link->read_wait, EPOLLIN);",
          "355:  }",
          "356: }",
          "",
          "[Removed Lines]",
          "349:  if (tty->link && tty->link->packet) {",
          "350:   spin_lock_irqsave(&tty->ctrl_lock, flags);",
          "351:   tty->ctrl_status &= ~TIOCPKT_STOP;",
          "352:   tty->ctrl_status |= TIOCPKT_START;",
          "353:   spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
          "",
          "[Added Lines]",
          "349:  if (tty->link && tty->link->ctrl.packet) {",
          "350:   spin_lock_irqsave(&tty->ctrl.lock, flags);",
          "351:   tty->ctrl.pktstatus &= ~TIOCPKT_STOP;",
          "352:   tty->ctrl.pktstatus |= TIOCPKT_START;",
          "353:   spin_unlock_irqrestore(&tty->ctrl.lock, flags);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "359: {",
          "360:  unsigned long flags;",
          "367:   wake_up_interruptible_poll(&tty->link->read_wait, EPOLLIN);",
          "368:  }",
          "369: }",
          "",
          "[Removed Lines]",
          "362:  if (tty->link && tty->link->packet) {",
          "363:   spin_lock_irqsave(&tty->ctrl_lock, flags);",
          "364:   tty->ctrl_status &= ~TIOCPKT_START;",
          "365:   tty->ctrl_status |= TIOCPKT_STOP;",
          "366:   spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
          "",
          "[Added Lines]",
          "362:  if (tty->link && tty->link->ctrl.packet) {",
          "363:   spin_lock_irqsave(&tty->ctrl.lock, flags);",
          "364:   tty->ctrl.pktstatus &= ~TIOCPKT_START;",
          "365:   tty->ctrl.pktstatus |= TIOCPKT_STOP;",
          "366:   spin_unlock_irqrestore(&tty->ctrl.lock, flags);",
          "",
          "---------------"
        ],
        "drivers/tty/tty_io.c||drivers/tty/tty_io.c": [
          "File: drivers/tty/tty_io.c -> drivers/tty/tty_io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "639:  tty_ldisc_hangup(tty, cons_filp != NULL);",
          "642:  clear_bit(TTY_THROTTLED, &tty->flags);",
          "643:  clear_bit(TTY_DO_WRITE_WAKEUP, &tty->flags);",
          "",
          "[Removed Lines]",
          "641:  spin_lock_irq(&tty->ctrl_lock);",
          "644:  put_pid(tty->session);",
          "645:  put_pid(tty->pgrp);",
          "646:  tty->session = NULL;",
          "647:  tty->pgrp = NULL;",
          "648:  tty->ctrl_status = 0;",
          "649:  spin_unlock_irq(&tty->ctrl_lock);",
          "",
          "[Added Lines]",
          "641:  spin_lock_irq(&tty->ctrl.lock);",
          "644:  put_pid(tty->ctrl.session);",
          "645:  put_pid(tty->ctrl.pgrp);",
          "646:  tty->ctrl.session = NULL;",
          "647:  tty->ctrl.pgrp = NULL;",
          "648:  tty->ctrl.pktstatus = 0;",
          "649:  spin_unlock_irq(&tty->ctrl.lock);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1559:  list_del_init(&tty->tty_files);",
          "1560:  spin_unlock(&tty->files_lock);",
          "1564:  free_tty_struct(tty);",
          "1565: }",
          "",
          "[Removed Lines]",
          "1562:  put_pid(tty->pgrp);",
          "1563:  put_pid(tty->session);",
          "",
          "[Added Lines]",
          "1562:  put_pid(tty->ctrl.pgrp);",
          "1563:  put_pid(tty->ctrl.session);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1862:  if (!tty->count) {",
          "1863:   read_lock(&tasklist_lock);",
          "1865:   if (o_tty)",
          "1867:   read_unlock(&tasklist_lock);",
          "1868:  }",
          "",
          "[Removed Lines]",
          "1864:   session_clear_tty(tty->session);",
          "1866:    session_clear_tty(o_tty->session);",
          "",
          "[Added Lines]",
          "1864:   session_clear_tty(tty->ctrl.session);",
          "1866:    session_clear_tty(o_tty->ctrl.session);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2250:   enum pid_type type;",
          "2251:   struct pid *pid;",
          "2256:    type = PIDTYPE_PGID;",
          "2257:   } else {",
          "2258:    pid = task_pid(current);",
          "2259:    type = PIDTYPE_TGID;",
          "2260:   }",
          "2261:   get_pid(pid);",
          "2263:   __f_setown(filp, pid, type, 0);",
          "2264:   put_pid(pid);",
          "2265:   retval = 0;",
          "",
          "[Removed Lines]",
          "2253:   spin_lock_irqsave(&tty->ctrl_lock, flags);",
          "2254:   if (tty->pgrp) {",
          "2255:    pid = tty->pgrp;",
          "2262:   spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
          "",
          "[Added Lines]",
          "2253:   spin_lock_irqsave(&tty->ctrl.lock, flags);",
          "2254:   if (tty->ctrl.pgrp) {",
          "2255:    pid = tty->ctrl.pgrp;",
          "2262:   spin_unlock_irqrestore(&tty->ctrl.lock, flags);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3039:  if (!tty)",
          "3040:   return;",
          "3046:  tty_ldisc_flush(tty);",
          "",
          "[Removed Lines]",
          "3042:  spin_lock_irqsave(&tty->ctrl_lock, flags);",
          "3043:  session = get_pid(tty->session);",
          "3044:  spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
          "",
          "[Added Lines]",
          "3042:  spin_lock_irqsave(&tty->ctrl.lock, flags);",
          "3043:  session = get_pid(tty->ctrl.session);",
          "3044:  spin_unlock_irqrestore(&tty->ctrl.lock, flags);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3129:   kfree(tty);",
          "3130:   return NULL;",
          "3131:  }",
          "3134:  mutex_init(&tty->legacy_mutex);",
          "3135:  mutex_init(&tty->throttle_mutex);",
          "3136:  init_rwsem(&tty->termios_rwsem);",
          "",
          "[Removed Lines]",
          "3132:  tty->session = NULL;",
          "3133:  tty->pgrp = NULL;",
          "",
          "[Added Lines]",
          "3132:  tty->ctrl.session = NULL;",
          "3133:  tty->ctrl.pgrp = NULL;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3140:  init_waitqueue_head(&tty->read_wait);",
          "3141:  INIT_WORK(&tty->hangup_work, do_tty_hangup);",
          "3142:  mutex_init(&tty->atomic_write_lock);",
          "3144:  spin_lock_init(&tty->flow.lock);",
          "3145:  spin_lock_init(&tty->files_lock);",
          "3146:  INIT_LIST_HEAD(&tty->tty_files);",
          "",
          "[Removed Lines]",
          "3143:  spin_lock_init(&tty->ctrl_lock);",
          "",
          "[Added Lines]",
          "3143:  spin_lock_init(&tty->ctrl.lock);",
          "",
          "---------------"
        ],
        "drivers/tty/tty_jobctrl.c||drivers/tty/tty_jobctrl.c": [
          "File: drivers/tty/tty_jobctrl.c -> drivers/tty/tty_jobctrl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:  rcu_read_lock();",
          "43:  pgrp = task_pgrp(current);",
          "49:  if (tty_pgrp && pgrp != tty_pgrp) {",
          "50:   if (is_ignored(sig)) {",
          "",
          "[Removed Lines]",
          "45:  spin_lock_irqsave(&tty->ctrl_lock, flags);",
          "46:  tty_pgrp = tty->pgrp;",
          "47:  spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
          "",
          "[Added Lines]",
          "45:  spin_lock_irqsave(&tty->ctrl.lock, flags);",
          "46:  tty_pgrp = tty->ctrl.pgrp;",
          "47:  spin_unlock_irqrestore(&tty->ctrl.lock, flags);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99: {",
          "100:  unsigned long flags;",
          "112:  if (current->signal->tty) {",
          "113:   tty_debug(tty, \"current tty %s not NULL!!\\n\",",
          "114:      current->signal->tty->name);",
          "",
          "[Removed Lines]",
          "102:  spin_lock_irqsave(&tty->ctrl_lock, flags);",
          "107:  put_pid(tty->session);",
          "108:  put_pid(tty->pgrp);",
          "109:  tty->pgrp = get_pid(task_pgrp(current));",
          "110:  tty->session = get_pid(task_session(current));",
          "111:  spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
          "",
          "[Added Lines]",
          "102:  spin_lock_irqsave(&tty->ctrl.lock, flags);",
          "107:  put_pid(tty->ctrl.session);",
          "108:  put_pid(tty->ctrl.pgrp);",
          "109:  tty->ctrl.pgrp = get_pid(task_pgrp(current));",
          "110:  tty->ctrl.session = get_pid(task_session(current));",
          "111:  spin_unlock_irqrestore(&tty->ctrl.lock, flags);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "135:  spin_lock_irq(&current->sighand->siglock);",
          "136:  if (current->signal->leader &&",
          "137:      !current->signal->tty &&",
          "",
          "[Removed Lines]",
          "138:      tty->session == NULL) {",
          "",
          "[Added Lines]",
          "138:      tty->ctrl.session == NULL) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "200:  struct pid *tty_pgrp = NULL;",
          "202:  read_lock(&tasklist_lock);",
          "205:    spin_lock_irq(&p->sighand->siglock);",
          "206:    if (p->signal->tty == tty) {",
          "207:     p->signal->tty = NULL;",
          "",
          "[Removed Lines]",
          "203:  if (tty->session) {",
          "204:   do_each_pid_task(tty->session, PIDTYPE_SID, p) {",
          "",
          "[Added Lines]",
          "203:  if (tty->ctrl.session) {",
          "204:   do_each_pid_task(tty->ctrl.session, PIDTYPE_SID, p) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "218:    __group_send_sig_info(SIGHUP, SEND_SIG_PRIV, p);",
          "219:    __group_send_sig_info(SIGCONT, SEND_SIG_PRIV, p);",
          "226:    spin_unlock_irq(&p->sighand->siglock);",
          "228:  }",
          "229:  read_unlock(&tasklist_lock);",
          "",
          "[Removed Lines]",
          "221:    spin_lock(&tty->ctrl_lock);",
          "222:    tty_pgrp = get_pid(tty->pgrp);",
          "223:    if (tty->pgrp)",
          "224:     p->signal->tty_old_pgrp = get_pid(tty->pgrp);",
          "225:    spin_unlock(&tty->ctrl_lock);",
          "227:   } while_each_pid_task(tty->session, PIDTYPE_SID, p);",
          "",
          "[Added Lines]",
          "221:    spin_lock(&tty->ctrl.lock);",
          "222:    tty_pgrp = get_pid(tty->ctrl.pgrp);",
          "223:    if (tty->ctrl.pgrp)",
          "224:     p->signal->tty_old_pgrp =",
          "225:      get_pid(tty->ctrl.pgrp);",
          "226:    spin_unlock(&tty->ctrl.lock);",
          "228:   } while_each_pid_task(tty->ctrl.session, PIDTYPE_SID, p);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "309:   unsigned long flags;",
          "311:   tty_lock(tty);",
          "318:   tty_unlock(tty);",
          "319:   tty_kref_put(tty);",
          "320:  }",
          "",
          "[Removed Lines]",
          "312:   spin_lock_irqsave(&tty->ctrl_lock, flags);",
          "313:   put_pid(tty->session);",
          "314:   put_pid(tty->pgrp);",
          "315:   tty->session = NULL;",
          "316:   tty->pgrp = NULL;",
          "317:   spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
          "",
          "[Added Lines]",
          "313:   spin_lock_irqsave(&tty->ctrl.lock, flags);",
          "314:   put_pid(tty->ctrl.session);",
          "315:   put_pid(tty->ctrl.pgrp);",
          "316:   tty->ctrl.session = NULL;",
          "317:   tty->ctrl.pgrp = NULL;",
          "318:   spin_unlock_irqrestore(&tty->ctrl.lock, flags);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "363:  tty_lock(tty);",
          "364:  read_lock(&tasklist_lock);",
          "367:   goto unlock;",
          "",
          "[Removed Lines]",
          "366:  if (current->signal->leader && (task_session(current) == tty->session))",
          "",
          "[Added Lines]",
          "367:  if (current->signal->leader &&",
          "368:    task_session(current) == tty->ctrl.session)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "375:   goto unlock;",
          "376:  }",
          "",
          "[Removed Lines]",
          "378:  if (tty->session) {",
          "",
          "[Added Lines]",
          "380:  if (tty->ctrl.session) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "388:   } else {",
          "389:    ret = -EPERM;",
          "390:    goto unlock;",
          "",
          "[Removed Lines]",
          "387:    session_clear_tty(tty->session);",
          "",
          "[Added Lines]",
          "389:    session_clear_tty(tty->ctrl.session);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "416:  unsigned long flags;",
          "417:  struct pid *pgrp;",
          "423:  return pgrp;",
          "424: }",
          "",
          "[Removed Lines]",
          "419:  spin_lock_irqsave(&tty->ctrl_lock, flags);",
          "420:  pgrp = get_pid(tty->pgrp);",
          "421:  spin_unlock_irqrestore(&tty->ctrl_lock, flags);",
          "",
          "[Added Lines]",
          "421:  spin_lock_irqsave(&tty->ctrl.lock, flags);",
          "422:  pgrp = get_pid(tty->ctrl.pgrp);",
          "423:  spin_unlock_irqrestore(&tty->ctrl.lock, flags);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "499:  if (pgrp_nr < 0)",
          "500:   return -EINVAL;",
          "503:  if (!current->signal->tty ||",
          "504:      (current->signal->tty != real_tty) ||",
          "506:   retval = -ENOTTY;",
          "507:   goto out_unlock_ctrl;",
          "508:  }",
          "",
          "[Removed Lines]",
          "502:  spin_lock_irq(&real_tty->ctrl_lock);",
          "505:      (real_tty->session != task_session(current))) {",
          "",
          "[Added Lines]",
          "504:  spin_lock_irq(&real_tty->ctrl.lock);",
          "507:      (real_tty->ctrl.session != task_session(current))) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "515:  if (session_of_pgrp(pgrp) != task_session(current))",
          "516:   goto out_unlock;",
          "517:  retval = 0;",
          "520: out_unlock:",
          "521:  rcu_read_unlock();",
          "522: out_unlock_ctrl:",
          "524:  return retval;",
          "525: }",
          "",
          "[Removed Lines]",
          "518:  put_pid(real_tty->pgrp);",
          "519:  real_tty->pgrp = get_pid(pgrp);",
          "523:  spin_unlock_irq(&real_tty->ctrl_lock);",
          "",
          "[Added Lines]",
          "520:  put_pid(real_tty->ctrl.pgrp);",
          "521:  real_tty->ctrl.pgrp = get_pid(pgrp);",
          "525:  spin_unlock_irq(&real_tty->ctrl.lock);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "545:  if (tty == real_tty && current->signal->tty != real_tty)",
          "546:   return -ENOTTY;",
          "550:   goto err;",
          "554:  return put_user(sid, p);",
          "556: err:",
          "558:  return -ENOTTY;",
          "559: }",
          "",
          "[Removed Lines]",
          "548:  spin_lock_irqsave(&real_tty->ctrl_lock, flags);",
          "549:  if (!real_tty->session)",
          "551:  sid = pid_vnr(real_tty->session);",
          "552:  spin_unlock_irqrestore(&real_tty->ctrl_lock, flags);",
          "557:  spin_unlock_irqrestore(&real_tty->ctrl_lock, flags);",
          "",
          "[Added Lines]",
          "550:  spin_lock_irqsave(&real_tty->ctrl.lock, flags);",
          "551:  if (!real_tty->ctrl.session)",
          "553:  sid = pid_vnr(real_tty->ctrl.session);",
          "554:  spin_unlock_irqrestore(&real_tty->ctrl.lock, flags);",
          "559:  spin_unlock_irqrestore(&real_tty->ctrl.lock, flags);",
          "",
          "---------------"
        ],
        "drivers/tty/vt/vt.c||drivers/tty/vt/vt.c": [
          "File: drivers/tty/vt/vt.c -> drivers/tty/vt/vt.c"
        ],
        "include/linux/tty.h||include/linux/tty.h": [
          "File: include/linux/tty.h -> include/linux/tty.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:  struct mutex throttle_mutex;",
          "277:  struct rw_semaphore termios_rwsem;",
          "278:  struct mutex winsize_mutex;",
          "281:  struct ktermios termios, termios_locked;",
          "282:  char name[64];",
          "289:  unsigned long flags;",
          "290:  int count;",
          "",
          "[Removed Lines]",
          "279:  spinlock_t ctrl_lock;",
          "288:  struct pid *session;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "297:   unsigned long unused[0];",
          "298:  } __aligned(sizeof(unsigned long)) flow;",
          "300:  int hw_stopped;",
          "305:  int flow_change;",
          "",
          "[Removed Lines]",
          "302:         packet:1,",
          "303:         unused_ctrl:BITS_PER_LONG - 9;",
          "",
          "[Added Lines]",
          "300:  struct {",
          "301:   spinlock_t lock;",
          "302:   struct pid *pgrp;",
          "303:   struct pid *session;",
          "304:   unsigned char pktstatus;",
          "305:   bool packet;",
          "306:   unsigned long unused[0];",
          "307:  } __aligned(sizeof(unsigned long)) ctrl;",
          "",
          "---------------"
        ]
      }
    }
  ]
}