{
  "cve_id": "CVE-2020-13398",
  "cve_desc": "An issue was discovered in FreeRDP before 2.1.1. An out-of-bounds (OOB) write vulnerability has been detected in crypto_rsa_common in libfreerdp/crypto/crypto.c.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "8305349a943c68b1bc8c158f431dc607655aadea",
  "patch_info": {
    "commit_hash": "8305349a943c68b1bc8c158f431dc607655aadea",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/8305349a943c68b1bc8c158f431dc607655aadea",
    "files": [
      "libfreerdp/crypto/crypto.c"
    ],
    "message": "Fixed  GHSL-2020-102 heap overflow\n\n(cherry picked from commit 197b16cc15a12813c2e4fa2d6ae9cd9c4a57e581)",
    "before_after_code_files": [
      "libfreerdp/crypto/crypto.c||libfreerdp/crypto/crypto.c"
    ]
  },
  "patch_diff": {
    "libfreerdp/crypto/crypto.c||libfreerdp/crypto/crypto.c": [
      "File: libfreerdp/crypto/crypto.c -> libfreerdp/crypto/crypto.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "96: static int crypto_rsa_common(const BYTE* input, int length, UINT32 key_length, const BYTE* modulus,",
      "97:                              const BYTE* exponent, int exponent_size, BYTE* output)",
      "98: {",
      "100:  int output_length = -1;",
      "107:  if (!input_reverse)",
      "108:   return -1;",
      "",
      "[Removed Lines]",
      "99:  BN_CTX* ctx;",
      "101:  BYTE* input_reverse;",
      "102:  BYTE* modulus_reverse;",
      "103:  BYTE* exponent_reverse;",
      "104:  BIGNUM *mod, *exp, *x, *y;",
      "105:  input_reverse = (BYTE*)malloc(2 * key_length + exponent_size);",
      "",
      "[Added Lines]",
      "99:  BN_CTX* ctx = NULL;",
      "101:  BYTE* input_reverse = NULL;",
      "102:  BYTE* modulus_reverse = NULL;",
      "103:  BYTE* exponent_reverse = NULL;",
      "104:  BIGNUM* mod = NULL;",
      "105:  BIGNUM* exp = NULL;",
      "106:  BIGNUM* x = NULL;",
      "107:  BIGNUM* y = NULL;",
      "108:  size_t bufferSize = 2 * key_length + exponent_size;",
      "110:  if (!input || (length < 0) || (exponent_size < 0) || !modulus || !exponent || !output)",
      "111:   return -1;",
      "113:  if (length > bufferSize)",
      "114:   bufferSize = length;",
      "116:  input_reverse = (BYTE*)calloc(bufferSize, 1);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "131:  if (!(y = BN_new()))",
      "132:   goto fail_bn_y;",
      "138:  output_length = BN_bn2bin(y, output);",
      "139:  crypto_reverse(output, output_length);",
      "142:   memset(output + output_length, 0, key_length - output_length);",
      "144:  BN_free(y);",
      "145: fail_bn_y:",
      "146:  BN_clear_free(x);",
      "",
      "[Removed Lines]",
      "134:  BN_bin2bn(modulus_reverse, key_length, mod);",
      "135:  BN_bin2bn(exponent_reverse, exponent_size, exp);",
      "136:  BN_bin2bn(input_reverse, length, x);",
      "137:  BN_mod_exp(y, x, exp, mod, ctx);",
      "141:  if (output_length < (int)key_length)",
      "",
      "[Added Lines]",
      "145:  if (!BN_bin2bn(modulus_reverse, key_length, mod))",
      "146:   goto fail;",
      "148:  if (!BN_bin2bn(exponent_reverse, exponent_size, exp))",
      "149:   goto fail;",
      "150:  if (!BN_bin2bn(input_reverse, length, x))",
      "151:   goto fail;",
      "152:  if (BN_mod_exp(y, x, exp, mod, ctx) != 1)",
      "153:   goto fail;",
      "155:  if (output_length < 0)",
      "156:   goto fail;",
      "159:  if (output_length < key_length)",
      "162: fail:",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "442ac71ec73380af452f51d498aa7a4dfb624008",
      "candidate_info": {
        "commit_hash": "442ac71ec73380af452f51d498aa7a4dfb624008",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/442ac71ec73380af452f51d498aa7a4dfb624008",
        "files": [
          "libfreerdp/core/info.c"
        ],
        "message": "Renamed variable to avoid MSVC define collission\n\n(cherry picked from commit f9e1f21b0ce47d8eeea40314ce6b8b666964dc7d)",
        "before_after_code_files": [
          "libfreerdp/core/info.c||libfreerdp/core/info.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/info.c||libfreerdp/core/info.c": [
          "File: libfreerdp/core/info.c -> libfreerdp/core/info.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "536: static BOOL rdp_read_info_packet(rdpRdp* rdp, wStream* s, UINT16 tpktlength)",
          "537: {",
          "539:  UINT32 flags;",
          "540:  UINT16 cbDomain;",
          "541:  UINT16 cbUserName;",
          "",
          "[Removed Lines]",
          "538:  BOOL small = FALSE;",
          "",
          "[Added Lines]",
          "538:  BOOL smallsize = FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "573:  if (settings->RdpVersion < RDP_VERSION_5_PLUS)",
          "",
          "[Removed Lines]",
          "574:   small = TRUE;",
          "",
          "[Added Lines]",
          "574:   smallsize = TRUE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "583:   return FALSE;",
          "586:   return FALSE;",
          "589:   return FALSE;",
          "591:  if (!rdp_read_info_string(flags, s, cbAlternateShell, &settings->AlternateShell, 512))",
          "",
          "[Removed Lines]",
          "582:  if (!rdp_read_info_string(flags, s, cbDomain, &settings->Domain, small ? 52 : 512))",
          "585:  if (!rdp_read_info_string(flags, s, cbUserName, &settings->Username, small ? 44 : 512))",
          "588:  if (!rdp_read_info_string(flags, s, cbPassword, &settings->Password, small ? 32 : 512))",
          "",
          "[Added Lines]",
          "582:  if (!rdp_read_info_string(flags, s, cbDomain, &settings->Domain, smallsize ? 52 : 512))",
          "585:  if (!rdp_read_info_string(flags, s, cbUserName, &settings->Username, smallsize ? 44 : 512))",
          "588:  if (!rdp_read_info_string(flags, s, cbPassword, &settings->Password, smallsize ? 32 : 512))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "449b45e84055938bdcd7e31ae0c2d42aa576be12",
      "candidate_info": {
        "commit_hash": "449b45e84055938bdcd7e31ae0c2d42aa576be12",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/449b45e84055938bdcd7e31ae0c2d42aa576be12",
        "files": [
          "winpr/include/winpr/bitstream.h"
        ],
        "message": "Fixed BehaviorSantizer warnings.\n\n(cherry picked from commit 7a509fe27749e006a9a58854c4abb4522fc58c81)",
        "before_after_code_files": [
          "winpr/include/winpr/bitstream.h||winpr/include/winpr/bitstream.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "winpr/include/winpr/bitstream.h||winpr/include/winpr/bitstream.h": [
          "File: winpr/include/winpr/bitstream.h -> winpr/include/winpr/bitstream.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:  {",
          "53:   (_bs->prefetch) = 0;",
          "54:   if (((UINT32)(_bs->pointer - _bs->buffer) + 4) < (_bs->capacity))",
          "56:   if (((UINT32)(_bs->pointer - _bs->buffer) + 5) < (_bs->capacity))",
          "58:   if (((UINT32)(_bs->pointer - _bs->buffer) + 6) < (_bs->capacity))",
          "60:   if (((UINT32)(_bs->pointer - _bs->buffer) + 7) < (_bs->capacity))",
          "62:  }",
          "64:  static INLINE void BitStream_Fetch(wBitStream* _bs)",
          "65:  {",
          "66:   (_bs->accumulator) = 0;",
          "67:   if (((UINT32)(_bs->pointer - _bs->buffer) + 0) < (_bs->capacity))",
          "69:   if (((UINT32)(_bs->pointer - _bs->buffer) + 1) < (_bs->capacity))",
          "71:   if (((UINT32)(_bs->pointer - _bs->buffer) + 2) < (_bs->capacity))",
          "73:   if (((UINT32)(_bs->pointer - _bs->buffer) + 3) < (_bs->capacity))",
          "75:   BitStream_Prefetch(_bs);",
          "76:  }",
          "78:  static INLINE void BitStream_Flush(wBitStream* _bs)",
          "79:  {",
          "80:   if (((UINT32)(_bs->pointer - _bs->buffer) + 0) < (_bs->capacity))",
          "82:   if (((UINT32)(_bs->pointer - _bs->buffer) + 1) < (_bs->capacity))",
          "84:   if (((UINT32)(_bs->pointer - _bs->buffer) + 2) < (_bs->capacity))",
          "86:   if (((UINT32)(_bs->pointer - _bs->buffer) + 3) < (_bs->capacity))",
          "88:  }",
          "90:  static INLINE void BitStream_Shift(wBitStream* _bs, UINT32 _nbits)",
          "",
          "[Removed Lines]",
          "55:    (_bs->prefetch) |= (*(_bs->pointer + 4) << 24);",
          "57:    (_bs->prefetch) |= (*(_bs->pointer + 5) << 16);",
          "59:    (_bs->prefetch) |= (*(_bs->pointer + 6) << 8);",
          "61:    (_bs->prefetch) |= (*(_bs->pointer + 7) << 0);",
          "68:    (_bs->accumulator) |= (*(_bs->pointer + 0) << 24);",
          "70:    (_bs->accumulator) |= (*(_bs->pointer + 1) << 16);",
          "72:    (_bs->accumulator) |= (*(_bs->pointer + 2) << 8);",
          "74:    (_bs->accumulator) |= (*(_bs->pointer + 3) << 0);",
          "",
          "[Added Lines]",
          "55:    (_bs->prefetch) |= ((UINT32) * (_bs->pointer + 4) << 24);",
          "57:    (_bs->prefetch) |= ((UINT32) * (_bs->pointer + 5) << 16);",
          "59:    (_bs->prefetch) |= ((UINT32) * (_bs->pointer + 6) << 8);",
          "61:    (_bs->prefetch) |= ((UINT32) * (_bs->pointer + 7) << 0);",
          "68:    (_bs->accumulator) |= ((UINT32) * (_bs->pointer + 0) << 24);",
          "70:    (_bs->accumulator) |= ((UINT32) * (_bs->pointer + 1) << 16);",
          "72:    (_bs->accumulator) |= ((UINT32) * (_bs->pointer + 2) << 8);",
          "74:    (_bs->accumulator) |= ((UINT32) * (_bs->pointer + 3) << 0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:    _bs->offset += _nbits;",
          "100:    if (_bs->offset < 32)",
          "101:    {",
          "103:     _bs->accumulator |= ((_bs->prefetch >> (32 - _nbits)) & _bs->mask);",
          "104:     _bs->prefetch <<= _nbits;",
          "105:    }",
          "106:    else",
          "107:    {",
          "109:     _bs->accumulator |= ((_bs->prefetch >> (32 - _nbits)) & _bs->mask);",
          "110:     _bs->prefetch <<= _nbits;",
          "111:     _bs->offset -= 32;",
          "",
          "[Removed Lines]",
          "102:     _bs->mask = ((1 << _nbits) - 1);",
          "108:     _bs->mask = ((1 << _nbits) - 1);",
          "",
          "[Added Lines]",
          "102:     _bs->mask = ((1UL << _nbits) - 1);",
          "108:     _bs->mask = ((1UL << _nbits) - 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "113:     BitStream_Prefetch(_bs);",
          "114:     if (_bs->offset)",
          "115:     {",
          "117:      _bs->accumulator |= ((_bs->prefetch >> (32 - _bs->offset)) & _bs->mask);",
          "118:      _bs->prefetch <<= _bs->offset;",
          "119:     }",
          "",
          "[Removed Lines]",
          "116:      _bs->mask = ((1 << _bs->offset) - 1);",
          "",
          "[Added Lines]",
          "116:      _bs->mask = ((1UL << _bs->offset) - 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "149:    _bs->pointer += 4;",
          "150:    if (_bs->offset)",
          "151:    {",
          "153:     _bs->accumulator |= ((_bits & _bs->mask) << (32 - _bs->offset));",
          "154:    }",
          "155:   }",
          "",
          "[Removed Lines]",
          "152:     _bs->mask = ((1 << _bs->offset) - 1);",
          "",
          "[Added Lines]",
          "152:     _bs->mask = ((1UL << _bs->offset) - 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "228d16a8689e9e8c9ca0aacaa3d4acf607200c04",
      "candidate_info": {
        "commit_hash": "228d16a8689e9e8c9ca0aacaa3d4acf607200c04",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/228d16a8689e9e8c9ca0aacaa3d4acf607200c04",
        "files": [
          "server/proxy/freerdp_proxy.c"
        ],
        "message": "server: proxy: Register signal handler after modules finished loading.\n\nThis prevents a race where the signal handler free's structs that\nmodules use while initializing.\n\n(cherry picked from commit 42d99f4c6070a984afc43ec7e85650dc4e624af8)",
        "before_after_code_files": [
          "server/proxy/freerdp_proxy.c||server/proxy/freerdp_proxy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "server/proxy/freerdp_proxy.c||server/proxy/freerdp_proxy.c": [
          "File: server/proxy/freerdp_proxy.c -> server/proxy/freerdp_proxy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:  if (argc >= 2)",
          "95:   config_path = argv[1];",
          "99:  config = pf_server_config_load(config_path);",
          "100:  if (!config)",
          "101:   goto fail;",
          "",
          "[Removed Lines]",
          "97:  pf_server_register_signal_handlers();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:  if (!is_all_required_modules_loaded(config))",
          "114:   goto fail;",
          "116:  server = pf_server_new(config);",
          "117:  if (!server)",
          "118:   goto fail;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114:  pf_server_register_signal_handlers();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2d836cd94c79f14542ef8e7dec7aa969fbead08",
      "candidate_info": {
        "commit_hash": "f2d836cd94c79f14542ef8e7dec7aa969fbead08",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/f2d836cd94c79f14542ef8e7dec7aa969fbead08",
        "files": [
          "libfreerdp/core/test/TestConnect.c"
        ],
        "message": "Fixed memory leak in test\n\n(cherry picked from commit 2d630cccf7b1e566f99b74a224805fc25f85d6c1)",
        "before_after_code_files": [
          "libfreerdp/core/test/TestConnect.c||libfreerdp/core/test/TestConnect.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/test/TestConnect.c||libfreerdp/core/test/TestConnect.c": [
          "File: libfreerdp/core/test/TestConnect.c -> libfreerdp/core/test/TestConnect.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "181:  path = GetCombinedPath(exe, \"Sample\");",
          "182:  wpath = GetCombinedPath(wexe, \"Sample\");",
          "184:  if (!path || !wpath)",
          "185:   goto fail;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183:  free(exe);",
          "184:  exe = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "227: fail:",
          "228:  free(exe);",
          "229:  free(path);",
          "230:  free(wpath);",
          "231:  free(commandLine);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:  free(wexe);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "efecbf41a921e11f409789e2892e29e30bb225d2",
      "candidate_info": {
        "commit_hash": "efecbf41a921e11f409789e2892e29e30bb225d2",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/efecbf41a921e11f409789e2892e29e30bb225d2",
        "files": [
          "libfreerdp/core/gateway/http.c",
          "libfreerdp/core/proxy.c",
          "winpr/libwinpr/timezone/timezone.c"
        ],
        "message": "change use of strtok to strtok_s\n\n(cherry picked from commit 6013a96bff20affbb4c0a1780d35a751eafa4903)",
        "before_after_code_files": [
          "libfreerdp/core/gateway/http.c||libfreerdp/core/gateway/http.c",
          "libfreerdp/core/proxy.c||libfreerdp/core/proxy.c",
          "winpr/libwinpr/timezone/timezone.c||winpr/libwinpr/timezone/timezone.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/gateway/http.c||libfreerdp/core/gateway/http.c": [
          "File: libfreerdp/core/gateway/http.c -> libfreerdp/core/gateway/http.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "814:   size_t count = 0;",
          "815:   char* buffer = (char*)Stream_Buffer(response->data);",
          "816:   char* line = (char*)Stream_Buffer(response->data);",
          "818:   while ((line = string_strnstr(line, \"\\r\\n\", payloadOffset - (line - buffer) - 2UL)))",
          "819:   {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "817:   char* context = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "834:   buffer[payloadOffset - 1] = '\\0';",
          "835:   buffer[payloadOffset - 2] = '\\0';",
          "836:   count = 0;",
          "839:   while (line && (response->count > count))",
          "840:   {",
          "841:    response->lines[count] = line;",
          "843:    count++;",
          "844:   }",
          "",
          "[Removed Lines]",
          "837:   line = strtok(buffer, \"\\r\\n\");",
          "842:    line = strtok(NULL, \"\\r\\n\");",
          "",
          "[Added Lines]",
          "838:   line = strtok_s(buffer, \"\\r\\n\", &context);",
          "843:    line = strtok_s(NULL, \"\\r\\n\", &context);",
          "",
          "---------------"
        ],
        "libfreerdp/core/proxy.c||libfreerdp/core/proxy.c": [
          "File: libfreerdp/core/proxy.c -> libfreerdp/core/proxy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:  BOOL result = FALSE;",
          "145:  char* current;",
          "146:  char* copy;",
          "147:  size_t host_len;",
          "148:  struct sockaddr_in sa4;",
          "149:  struct sockaddr_in6 sa6;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:  char* context = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:  if (!copy)",
          "165:   return FALSE;",
          "169:  while (current && !result)",
          "170:  {",
          "",
          "[Removed Lines]",
          "167:  current = strtok(copy, delimiter);",
          "",
          "[Added Lines]",
          "168:  current = strtok_s(copy, delimiter, &context);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "243:    }",
          "244:   }",
          "247:  }",
          "249:  free(copy);",
          "",
          "[Removed Lines]",
          "246:   current = strtok(NULL, delimiter);",
          "",
          "[Added Lines]",
          "247:   current = strtok_s(NULL, delimiter, &context);",
          "",
          "---------------"
        ],
        "winpr/libwinpr/timezone/timezone.c||winpr/libwinpr/timezone/timezone.c": [
          "File: winpr/libwinpr/timezone/timezone.c -> winpr/libwinpr/timezone/timezone.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "248: {",
          "249:  char* p;",
          "250:  char* list_copy;",
          "251:  list_copy = _strdup(list);",
          "253:  if (!list_copy)",
          "254:   return FALSE;",
          "258:  while (p != NULL)",
          "259:  {",
          "",
          "[Removed Lines]",
          "256:  p = strtok(list_copy, \" \");",
          "",
          "[Added Lines]",
          "251:  char* context = NULL;",
          "258:  p = strtok_s(list_copy, \" \", &context);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "263:    return TRUE;",
          "264:   }",
          "267:  }",
          "269:  free(list_copy);",
          "",
          "[Removed Lines]",
          "266:   p = strtok(NULL, \" \");",
          "",
          "[Added Lines]",
          "268:   p = strtok_s(NULL, \" \", &context);",
          "",
          "---------------"
        ]
      }
    }
  ]
}