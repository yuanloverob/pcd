{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "106d241cba5b6e1d41851b778eb5ae5a57df12b9",
      "candidate_info": {
        "commit_hash": "106d241cba5b6e1d41851b778eb5ae5a57df12b9",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/106d241cba5b6e1d41851b778eb5ae5a57df12b9",
        "files": [
          "bindings/python/Makefile",
          "bindings/python/capstone/__init__.py",
          "bindings/python/setup.py",
          "bindings/python/setup_cython.py"
        ],
        "message": "Python setup: Clean up some merge failures, adapt for changes on next branch",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py",
          "bindings/python/setup.py||bindings/python/setup.py",
          "bindings/python/setup_cython.py||bindings/python/setup_cython.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "256:     try:",
          "257:         return ctypes.cdll.LoadLibrary(lib_file)",
          "258:     except OSError:",
          "260:         if lib_file.endswith('.so'):",
          "261:             try:",
          "263:             except OSError:",
          "264:                 return None",
          "265:         return None",
          "",
          "[Removed Lines]",
          "259:         # if we're on linux, try again with .so.3 extension",
          "262:                 return ctypes.cdll.LoadLibrary(lib_file + '.3')",
          "",
          "[Added Lines]",
          "259:         # if we're on linux, try again with .so.4 extension",
          "262:                 return ctypes.cdll.LoadLibrary(lib_file + '.4')",
          "",
          "---------------"
        ],
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:     os.mkdir(LIBS_DIR)",
          "87:     # copy public headers",
          "90:     os.chdir(BUILD_DIR)",
          "",
          "[Removed Lines]",
          "88:     shutil.copytree(os.path.join(BUILD_DIR, 'include'), os.path.join(HEADERS_DIR, 'capstone'))",
          "",
          "[Added Lines]",
          "88:     shutil.copytree(os.path.join(BUILD_DIR, 'include', 'capstone'), os.path.join(HEADERS_DIR, 'capstone'))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:     else:   # Unix incl. cygwin",
          "103:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh\")",
          "106:     if STATIC_LIBRARY_FILE: shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "107:     os.chdir(cwd)",
          "",
          "[Removed Lines]",
          "105:     shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "",
          "[Added Lines]",
          "105:     if LIBRARY_FILE.endswith('.so'):",
          "106:         shutil.copy(LIBRARY_FILE + '.4', os.path.join(LIBS_DIR, LIBRARY_FILE))",
          "107:     else:",
          "108:         shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "",
          "---------------"
        ],
        "bindings/python/setup_cython.py||bindings/python/setup_cython.py": [
          "File: bindings/python/setup_cython.py -> bindings/python/setup_cython.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: from distutils.core import setup",
          "2: from distutils.extension import Extension",
          "3: from distutils.command.build import build",
          "4: from Cython.Distutils import build_ext",
          "6: VERSION = '4.0'",
          "8: SYSTEM = sys.platform",
          "11: # adapted from commit e504b81 of Nguyen Tan Cong",
          "12: # Reference: https://docs.python.org/2/library/platform.html#cross-platform",
          "",
          "[Removed Lines]",
          "9: VERSION = '3.0.4'",
          "",
          "[Added Lines]",
          "1: import os",
          "2: import sys",
          "3: import shutil",
          "5: from distutils import log",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34: compile_args = ['-O3', '-fomit-frame-pointer', '-I' + HEADERS_DIR]",
          "35: link_args = ['-L' + LIBS_DIR]",
          "38: ext_modules = [Extension(\"capstone.ccapstone\",",
          "39:                          [\"pyx/ccapstone.pyx\"],",
          "40:                          libraries=[\"capstone\"],",
          "",
          "[Removed Lines]",
          "37: ext_module_names = ['arm', 'arm_const', 'arm64', 'arm64_const', 'mips', 'mips_const', 'ppc', 'ppc_const', 'x86', 'x86_const', 'sparc', 'sparc_const', 'systemz', 'sysz_const', 'xcore', 'xcore_const']",
          "",
          "[Added Lines]",
          "40: ext_module_names = ['arm', 'arm_const', 'arm64', 'arm64_const', 'm68k', 'm68k_const', 'mips', 'mips_const', 'ppc', 'ppc_const', 'x86', 'x86_const', 'sparc', 'sparc_const', 'systemz', 'sysz_const', 'xcore', 'xcore_const']",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73:     os.mkdir(LIBS_DIR)",
          "75:     # copy public headers",
          "78:     os.chdir(BUILD_DIR)",
          "",
          "[Removed Lines]",
          "76:     shutil.copytree(os.path.join(BUILD_DIR, 'include'), os.path.join(HEADERS_DIR, 'capstone'))",
          "",
          "[Added Lines]",
          "79:     shutil.copytree(os.path.join(BUILD_DIR, 'include', 'capstone'), os.path.join(HEADERS_DIR, 'capstone'))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "90:     else:   # Unix incl. cygwin",
          "91:         os.system(\"CAPSTONE_BUILD_CORE_ONLY=yes bash ./make.sh\")",
          "94:     if STATIC_LIBRARY_FILE: shutil.copy(STATIC_LIBRARY_FILE, LIBS_DIR)",
          "95:     os.chdir(cwd)",
          "",
          "[Removed Lines]",
          "93:     shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "",
          "[Added Lines]",
          "96:     if LIBRARY_FILE.endswith('.so'):",
          "97:         shutil.copy(LIBRARY_FILE + '.4', os.path.join(LIBS_DIR, LIBRARY_FILE))",
          "98:     else:",
          "99:         shutil.copy(LIBRARY_FILE, LIBS_DIR)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b585c161e5d9bddd54d195e3fdd791b8c4a21ed",
      "candidate_info": {
        "commit_hash": "1b585c161e5d9bddd54d195e3fdd791b8c4a21ed",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/1b585c161e5d9bddd54d195e3fdd791b8c4a21ed",
        "files": [
          "arch/X86/X86DisassemblerDecoder.c"
        ],
        "message": "x86: initialize eaDisplacement in 16-bit mode.  Fixes #656",
        "before_after_code_files": [
          "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86DisassemblerDecoder.c||arch/X86/X86DisassemblerDecoder.c": [
          "File: arch/X86/X86DisassemblerDecoder.c -> arch/X86/X86DisassemblerDecoder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1590:      break;",
          "1591:     case 0x3:",
          "1592:      insn->eaBase = (EABase)(insn->eaRegBase + rm);",
          "1593:      if (readDisplacement(insn))",
          "1594:       return -1;",
          "1595:      break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1593:      insn->eaDisplacement = EA_DISP_NONE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9bebb55b7b83e09ea2bae8ea06bf6be4e0008ffa",
      "candidate_info": {
        "commit_hash": "9bebb55b7b83e09ea2bae8ea06bf6be4e0008ffa",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9bebb55b7b83e09ea2bae8ea06bf6be4e0008ffa",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "Add X86_REG_EFLAGS for X86_STC and X86_STD",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45811:  {",
          "45812:   X86_STC, X86_INS_STC,",
          "45813: #ifndef CAPSTONE_DIET",
          "45815: #endif",
          "45816:  },",
          "45817:  {",
          "45818:   X86_STD, X86_INS_STD,",
          "45819: #ifndef CAPSTONE_DIET",
          "45821: #endif",
          "45822:  },",
          "45823:  {",
          "",
          "[Removed Lines]",
          "45814:   { 0 }, { 0 }, { 0 }, 0, 0",
          "45820:   { 0 }, { 0 }, { 0 }, 0, 0",
          "",
          "[Added Lines]",
          "45814:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "45820:   { 0 }, { X86_REG_EFLAGS, 0 }, { 0 }, 0, 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a4bdbc81575ff5d9e571237be09b30823cdde122",
      "candidate_info": {
        "commit_hash": "a4bdbc81575ff5d9e571237be09b30823cdde122",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/a4bdbc81575ff5d9e571237be09b30823cdde122",
        "files": [
          "arch/X86/X86IntelInstPrinter.c"
        ],
        "message": "x86: do not print LJMP/LCALL with ptr. this fixes issue #429",
        "before_after_code_files": [
          "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c": [
          "File: arch/X86/X86IntelInstPrinter.c -> arch/X86/X86IntelInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:   case X86_INS_LIDT:",
          "76:   case X86_INS_FXRSTOR:",
          "77:   case X86_INS_FXSAVE:",
          "79:    break;",
          "80:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:   case X86_INS_LJMP:",
          "79:   case X86_INS_LCALL:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e199eb9cfe903c018fc76eaf2d9e32f262392eaf",
      "candidate_info": {
        "commit_hash": "e199eb9cfe903c018fc76eaf2d9e32f262392eaf",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/e199eb9cfe903c018fc76eaf2d9e32f262392eaf",
        "files": [
          "bindings/python/setup.py"
        ],
        "message": "python-bindings: fix setup.py for wheel installation\n\nWhen the python bindings are installed using the new wheels\ninfrastructure, data_files are relative to the site-packages directory\neven if using absolute paths.\n\nThe following example demonstrates the bug fixed by this commit: (ran on archlinux)\n\n```bash\n$ pip install wheel       # if this package is installed, wheel installation is made the default\nCollecting wheel\n  Downloading wheel-0.29.0-py2.py3-none-any.whl (66kB)\n    100% |################################| 71kB 124kB/s\nInstalling collected packages: wheel\nSuccessfully installed wheel-0.29.0\n\n$ pip install capstone    # this will use the wheel installation method now\nCollecting capstone\n  Using cached capstone-3.0.4.tar.gz\nBuilding wheels for collected packages: capstone\n  Running setup.py bdist_wheel for capstone ... done\n  Stored in directory: /root/.cache/pip/wheels/7c/d1/d0/db6e2c5ef1063aabb9de2dd8b92b4c27ee6f9fd213240099b8\nSuccessfully built capstone\nInstalling collected packages: capstone\nSuccessfully installed capstone-3.0.4\n\n$ find /usr/lib/ -name \"libcapstone.so\"\n/usr/lib/python3.5/site-packages/usr/lib/python3.5/site-packages/capstone/libcapstone.so\n```\n\nSo the path `SITE_PACKAGES` in the `data_files` specification of the\nsetup.py file was interpreted relative to the python site-packages\ndirectory. The fix for this is simple: use `/capstone` instead of an\nabsolute path for `SITE_PACKAGES`.",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     except ImportError:",
          "34:         pass",
          "37: # adapted from commit e504b81 of Nguyen Tan Cong",
          "38: # Reference: https://docs.python.org/2/library/platform.html#cross-platform",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: # If building a wheel, the path listed in data_files is interpreted relative to",
          "37: # python's site-packages directory, even if it starts with a slash. So we need",
          "38: # to use only `/capstone` as path in this case.",
          "39: #",
          "40: # Note: using `capstone` does not work, since that for some reason is interpreted",
          "41: # relative to the the python installation prefix, not to the site-packages directory.",
          "42: if \"bdist_wheel\" in sys.argv:",
          "43:     SITE_PACKAGES = \"/capstone\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}