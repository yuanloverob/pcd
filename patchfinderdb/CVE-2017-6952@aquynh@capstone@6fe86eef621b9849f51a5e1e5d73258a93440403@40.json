{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "883c333f86ebc5c29b98cc48e0f513e566759849",
      "candidate_info": {
        "commit_hash": "883c333f86ebc5c29b98cc48e0f513e566759849",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/883c333f86ebc5c29b98cc48e0f513e566759849",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "Fix two missing register operands in X86 AT&T syntax (#791)\n\n* Bug fix: missing register operand in AT&T emitter for `movb %ax, imm`\n\n* Bug fix: missing register operand in AT&T emitter for `movb %al, imm`",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2686:  { X86_INSW, X86_REG_DX },",
          "2687:  { X86_INSL, X86_REG_DX },",
          "2692:  { X86_MOV16o16a, X86_REG_AX },",
          "2694:  { X86_PUSHCS32, X86_REG_CS },",
          "2695:  { X86_PUSHDS32, X86_REG_DS },",
          "",
          "[Removed Lines]",
          "2689:  { X86_MOV64o64a, X86_REG_RAX },",
          "2690:  { X86_MOV32o32a, X86_REG_EAX },",
          "2691:  { X86_MOV64o32a, X86_REG_EAX },",
          "",
          "[Added Lines]",
          "2689:  { X86_MOV8o16a, X86_REG_AL },",
          "2690:  { X86_MOV8o32a, X86_REG_AL },",
          "2691:  { X86_MOV8o64a, X86_REG_AL },",
          "2694:  { X86_MOV16o32a, X86_REG_AX },",
          "2695:  { X86_MOV16o64a, X86_REG_AX },",
          "2697:  { X86_MOV32o16a, X86_REG_EAX },",
          "2698:  { X86_MOV32o32a, X86_REG_EAX },",
          "2699:  { X86_MOV32o64a, X86_REG_EAX },",
          "2701:  { X86_MOV64o32a, X86_REG_RAX },",
          "2702:  { X86_MOV64o64a, X86_REG_RAX },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fef1c2920a86299b8d98233e591ce46e3e3542c5",
      "candidate_info": {
        "commit_hash": "fef1c2920a86299b8d98233e591ce46e3e3542c5",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/fef1c2920a86299b8d98233e591ce46e3e3542c5",
        "files": [
          "cstool/cstool.c"
        ],
        "message": "cstool: fix #975",
        "before_after_code_files": [
          "cstool/cstool.c||cstool/cstool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cstool/cstool.c||cstool/cstool.c": [
          "File: cstool/cstool.c -> cstool/cstool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:  uint8_t high, low;",
          "95:  uint8_t *result;",
          "97:  result = (uint8_t *)malloc(strlen(code));",
          "98:  if (result != NULL) {",
          "99:   while (code[i] != '\\0') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:  if (strlen(code) == 0)",
          "98:   return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "271:  mode = argv[optind];",
          "272:  assembly = preprocess(argv[optind + 1], &size);",
          "274:  if (args_left == 3) {",
          "275:   char *temp, *src = argv[optind + 2];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "276:  if (!assembly) {",
          "277:   usage(argv[0]);",
          "278:   return -1;",
          "279:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cbf5d3d4407d563ce6b3fecb414fe0f13af61ea4",
      "candidate_info": {
        "commit_hash": "cbf5d3d4407d563ce6b3fecb414fe0f13af61ea4",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/cbf5d3d4407d563ce6b3fecb414fe0f13af61ea4",
        "files": [
          "include/capstone/x86.h",
          "tests/test_x86.c"
        ],
        "message": "Remove never used cs_x86_op::fp",
        "before_after_code_files": [
          "include/capstone/x86.h||include/capstone/x86.h",
          "tests/test_x86.c||tests/test_x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/x86.h||include/capstone/x86.h": [
          "File: include/capstone/x86.h -> include/capstone/x86.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:  X86_OP_REG, // = CS_OP_REG (Register operand).",
          "124:  X86_OP_IMM, // = CS_OP_IMM (Immediate operand).",
          "125:  X86_OP_MEM, // = CS_OP_MEM (Memory operand).",
          "127: } x86_op_type;",
          "",
          "[Removed Lines]",
          "126:  X86_OP_FP,  //  = CS_OP_FP  (Floating-Point operand).",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "241:   union {",
          "242:    x86_reg reg;   // register value for REG operand",
          "243:    int64_t imm;  // immediate value for IMM operand",
          "245:    x86_op_mem mem;  // base/index/scale/disp value for MEM operand",
          "246:   };",
          "",
          "[Removed Lines]",
          "244:    double fp;  // floating point value for FP operand",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/test_x86.c||tests/test_x86.c": [
          "File: tests/test_x86.c -> tests/test_x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:    case X86_OP_IMM:",
          "215:     printf(\"\\t\\toperands[%u].type: IMM = 0x%\"PRIx64 \"\\n\", i, op->imm);",
          "216:     break;",
          "220:    case X86_OP_MEM:",
          "221:     printf(\"\\t\\toperands[%u].type: MEM\\n\", i);",
          "222:     if (op->mem.segment != X86_REG_INVALID)",
          "",
          "[Removed Lines]",
          "217:    case X86_OP_FP:",
          "218:     printf(\"\\t\\toperands[%u].type: FP = %f\\n\", i, op->fp);",
          "219:     break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6dad56669b1e2fb2f09484adfb5c494285204d18",
      "candidate_info": {
        "commit_hash": "6dad56669b1e2fb2f09484adfb5c494285204d18",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/6dad56669b1e2fb2f09484adfb5c494285204d18",
        "files": [
          "include/capstone.h",
          "tests/test_skipdata.c"
        ],
        "message": "Use CAPSTONE_API for cs_skipdata_cb_t",
        "before_after_code_files": [
          "include/capstone.h||include/capstone.h",
          "tests/test_skipdata.c||tests/test_skipdata.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone.h||include/capstone.h": [
          "File: include/capstone.h -> include/capstone.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:  @return: return number of bytes to skip, or 0 to immediately stop disassembling.",
          "178: typedef struct cs_opt_skipdata {",
          "",
          "[Removed Lines]",
          "175: typedef size_t (*cs_skipdata_cb_t)(const uint8_t *code, size_t code_size, size_t offset, void *user_data);",
          "",
          "[Added Lines]",
          "175: typedef size_t (CAPSTONE_API*cs_skipdata_cb_t)(const uint8_t *code, size_t code_size, size_t offset, void *user_data);",
          "",
          "---------------"
        ],
        "tests/test_skipdata.c||tests/test_skipdata.c": [
          "File: tests/test_skipdata.c -> tests/test_skipdata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  printf(\"\\n\");",
          "31: }",
          "34: {",
          "36:  return 2;",
          "",
          "[Removed Lines]",
          "33: static size_t mycallback(const uint8_t *buffer, size_t buffer_size, size_t offset, void *p)",
          "",
          "[Added Lines]",
          "33: static size_t CAPSTONE_API mycallback(const uint8_t *buffer, size_t buffer_size, size_t offset, void *p)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "88edace09cd94cac323cb757b77f5d520e3ffdae",
      "candidate_info": {
        "commit_hash": "88edace09cd94cac323cb757b77f5d520e3ffdae",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/88edace09cd94cac323cb757b77f5d520e3ffdae",
        "files": [
          "Makefile",
          "include/capstone.h",
          "make.sh"
        ],
        "message": "improve dependency on header files *.h, and remove clean from make.sh. see PR #793",
        "before_after_code_files": [
          "include/capstone.h||include/capstone.h",
          "make.sh||make.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone.h||include/capstone.h": [
          "File: include/capstone.h -> include/capstone.h"
        ],
        "make.sh||make.sh": [
          "File: make.sh -> make.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: # build iOS lib for all iDevices, or only specific device",
          "10: function build_iOS {",
          "12:  IOS_SDK=`xcrun --sdk iphoneos --show-sdk-path`",
          "13:  IOS_CC=`xcrun --sdk iphoneos -f clang`",
          "14:  IOS_CFLAGS=\"-Os -Wimplicit -isysroot $IOS_SDK\"",
          "",
          "[Removed Lines]",
          "11:  ${MAKE} clean",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:     TOOLCHAIN=\"$NDK/toolchains/$CROSS$GCCVER/prebuilt/$HOSTOS-$HOSTARCH\"",
          "56:     PLATFORM=\"$NDK/platforms/$APILEVEL/arch-$TARGARCH\"",
          "60:     CROSS=\"$TOOLCHAIN/bin/$CROSS\" CFLAGS=\"--sysroot=$PLATFORM\" LDFLAGS=\"--sysroot=$PLATFORM\" ${MAKE} $*",
          "61: }",
          "",
          "[Removed Lines]",
          "58:  ${MAKE} clean",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "66:   export LIBARCHS=\"i386 x86_64\"",
          "67:  fi",
          "71:  if [ -n \"$CC\" ]; then",
          "72:   ${MAKE} CC=\"$CC\" $*",
          "73:  else",
          "",
          "[Removed Lines]",
          "69:  ${MAKE} clean",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}