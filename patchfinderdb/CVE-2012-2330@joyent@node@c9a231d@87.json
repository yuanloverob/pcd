{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "33b7fc250f061af42b595decf6c0edf360c5aae9",
      "candidate_info": {
        "commit_hash": "33b7fc250f061af42b595decf6c0edf360c5aae9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/33b7fc250f061af42b595decf6c0edf360c5aae9",
        "files": [
          "lib/child_process.js",
          "test/simple/test-child-process-disconnect.js"
        ],
        "message": "child_process: do not disconnect on exit emit\n\nWhen using isolate the .fork would break because it had\nno .disconnect method. This remove the exit handler there\nwould call .disconnect since it was not required.\nIt also change .disconnect to throw if the channel is closed,\nthis was not possible before because .disconnect would be called\ntwice.",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js",
          "test/simple/test-child-process-disconnect.js||test/simple/test-child-process-disconnect.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:   target.connected = true;",
          "160:   target.disconnect = function() {",
          "164:       this.connected = false;",
          "",
          "[Removed Lines]",
          "161:       if (!this.connected) return;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232:   if (!options.thread) setupChannel(child, options.stdinStream);",
          "237:   return child;",
          "238: };",
          "",
          "[Removed Lines]",
          "235:   child.once('exit', child.disconnect.bind(child));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-child-process-disconnect.js||test/simple/test-child-process-disconnect.js": [
          "File: test/simple/test-child-process-disconnect.js -> test/simple/test-child-process-disconnect.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:         if (data === 'ready') {",
          "87:           child.disconnect();",
          "88:           return;",
          "89:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:           assert.throws(child.disconnect.bind(child), Error);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c96df0e37aed536867a41e8b6d3f0f523c37dfea",
      "candidate_info": {
        "commit_hash": "c96df0e37aed536867a41e8b6d3f0f523c37dfea",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c96df0e37aed536867a41e8b6d3f0f523c37dfea",
        "files": [
          "lib/stream.js"
        ],
        "message": "stream: don't call `cleanup` twice on `end` and `close`",
        "before_after_code_files": [
          "lib/stream.js||listream.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/stream.js||listream.js": [
          "File: lib/stream.js -> listream.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:     if (didOnEnd) return;",
          "64:     didOnEnd = true;",
          "69:     dest.end();",
          "70:   }",
          "",
          "[Removed Lines]",
          "67:     cleanup();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:     if (didOnEnd) return;",
          "75:     didOnEnd = true;",
          "80:     dest.destroy();",
          "81:   }",
          "",
          "[Removed Lines]",
          "78:     cleanup();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de16da532e4cff3574b2fe24d998e2dcf49fa2f0",
      "candidate_info": {
        "commit_hash": "de16da532e4cff3574b2fe24d998e2dcf49fa2f0",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/de16da532e4cff3574b2fe24d998e2dcf49fa2f0",
        "files": [
          "deps/npm/node_modules/mkdirp/.gitignore.orig",
          "deps/npm/node_modules/mkdirp/.gitignore.rej",
          "deps/npm/node_modules/mkdirp/examples/pow.js.orig",
          "deps/npm/node_modules/mkdirp/examples/pow.js.rej",
          "tools/blog/node_modules/mkdirp/.gitignore.orig",
          "tools/blog/node_modules/mkdirp/.gitignore.rej",
          "tools/blog/node_modules/mkdirp/examples/pow.js.orig",
          "tools/blog/node_modules/mkdirp/examples/pow.js.rej"
        ],
        "message": "deps, tools: remove stray reject files",
        "before_after_code_files": [
          "deps/npm/node_modules/mkdirp/.gitignore.orig||deps/npm/node_modules/mkdirp/.gitignore.orig",
          "deps/npm/node_modules/mkdirp/examples/pow.js.orig||deps/npm/node_modules/mkdirp/examples/pow.js.orig",
          "tools/blog/node_modules/mkdirp/.gitignore.orig||tools/blog/node_modules/mkdirp/.gitignore.orig",
          "tools/blog/node_modules/mkdirp/examples/pow.js.orig||tools/blog/node_modules/mkdirp/examples/pow.js.orig"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/npm/node_modules/mkdirp/.gitignore.orig||deps/npm/node_modules/mkdirp/.gitignore.orig": [
          "File: deps/npm/node_modules/mkdirp/.gitignore.orig -> deps/npm/node_modules/mkdirp/.gitignore.orig",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/npm/node_modules/mkdirp/examples/pow.js.orig||deps/npm/node_modules/mkdirp/examples/pow.js.orig": [
          "File: deps/npm/node_modules/mkdirp/examples/pow.js.orig -> deps/npm/node_modules/mkdirp/examples/pow.js.orig",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tools/blog/node_modules/mkdirp/.gitignore.orig||tools/blog/node_modules/mkdirp/.gitignore.orig": [
          "File: tools/blog/node_modules/mkdirp/.gitignore.orig -> tools/blog/node_modules/mkdirp/.gitignore.orig",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tools/blog/node_modules/mkdirp/examples/pow.js.orig||tools/blog/node_modules/mkdirp/examples/pow.js.orig": [
          "File: tools/blog/node_modules/mkdirp/examples/pow.js.orig -> tools/blog/node_modules/mkdirp/examples/pow.js.orig",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "90ce5b3d41a01bfd5793d1d634318fe607fa533c",
      "candidate_info": {
        "commit_hash": "90ce5b3d41a01bfd5793d1d634318fe607fa533c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/90ce5b3d41a01bfd5793d1d634318fe607fa533c",
        "files": [
          "doc/api/cluster.markdown",
          "lib/cluster.js",
          "test/simple/test-cluster-basic.js",
          "test/simple/test-cluster-http-pipe.js",
          "test/simple/test-cluster-message.js",
          "test/simple/test-cluster-worker-disconnect.js"
        ],
        "message": "cluster: Rename 'death' back to 'exit'",
        "before_after_code_files": [
          "lib/cluster.js||licluster.js",
          "test/simple/test-cluster-basic.js||test/simple/test-cluster-basic.js",
          "test/simple/test-cluster-http-pipe.js||test/simple/test-cluster-http-pipe.js",
          "test/simple/test-cluster-message.js||test/simple/test-cluster-message.js",
          "test/simple/test-cluster-worker-disconnect.js||test/simple/test-cluster-worker-disconnect.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/cluster.js||licluster.js": [
          "File: lib/cluster.js -> licluster.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "296:   this.process.on('internalMessage', handleMessage.bind(null, this));",
          "298:   this.process.on('disconnect',",
          "302:   this.process.on('message', this.emit.bind(this, 'message'));",
          "",
          "[Removed Lines]",
          "297:   this.process.on('exit', prepareDeath.bind(null, this, 'dead', 'death'));",
          "299:                   prepareDeath.bind(null, this, 'disconnected', 'disconnect'));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "306: util.inherits(Worker, EventEmitter);",
          "307: cluster.Worker = Worker;",
          "312:   worker.state = state;",
          "",
          "[Removed Lines]",
          "309: function prepareDeath(worker, state, eventName) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-basic.js||test/simple/test-cluster-basic.js": [
          "File: test/simple/test-cluster-basic.js -> test/simple/test-cluster-basic.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:         fork: false,",
          "50:         online: false,",
          "51:         listening: false,",
          "53:       },",
          "54:       equal: {",
          "55:         fork: false,",
          "56:         online: false,",
          "57:         listening: false,",
          "59:       }",
          "60:     },",
          "",
          "[Removed Lines]",
          "52:         death: false",
          "58:         death: false",
          "",
          "[Added Lines]",
          "52:         exit: false",
          "58:         exit: false",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:       events: {",
          "64:         online: false,",
          "65:         listening: false,",
          "67:       },",
          "68:       equal: {",
          "69:         online: false,",
          "70:         listening: false,",
          "72:       },",
          "73:       states: {",
          "74:         none: false,",
          "",
          "[Removed Lines]",
          "66:         death: false",
          "71:         death: false",
          "",
          "[Added Lines]",
          "66:         exit: false",
          "71:         exit: false",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "106:   });",
          "110:     process.exit(0);",
          "111:   });",
          "",
          "[Removed Lines]",
          "109:   cluster.on('death', function() {",
          "",
          "[Added Lines]",
          "109:   cluster.on('exit', function() {",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-http-pipe.js||test/simple/test-cluster-http-pipe.js": [
          "File: test/simple/test-cluster-http-pipe.js -> test/simple/test-cluster-http-pipe.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:     assert.equal(msg, 'DONE');",
          "32:     ok = true;",
          "33:   });",
          "35:     process.exit();",
          "36:   });",
          "37:   process.on('exit', function() {",
          "",
          "[Removed Lines]",
          "34:   worker.on('death', function() {",
          "",
          "[Added Lines]",
          "34:   worker.on('exit', function() {",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-message.js||test/simple/test-cluster-message.js": [
          "File: test/simple/test-cluster-message.js -> test/simple/test-cluster-message.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:       worker.destroy();",
          "115:     });",
          "118:       process.exit(0);",
          "119:     });",
          "",
          "[Removed Lines]",
          "117:     worker.on('death', function() {",
          "",
          "[Added Lines]",
          "117:     worker.on('exit', function() {",
          "",
          "---------------"
        ],
        "test/simple/test-cluster-worker-disconnect.js||test/simple/test-cluster-worker-disconnect.js": [
          "File: test/simple/test-cluster-worker-disconnect.js -> test/simple/test-cluster-worker-disconnect.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:   var checks = {",
          "36:     cluster: {",
          "37:       emitDisconnect: false,",
          "39:       callback: false",
          "40:     },",
          "41:     worker: {",
          "42:       emitDisconnect: false,",
          "44:       state: false,",
          "45:       suicideMode: false,",
          "46:       died: false",
          "",
          "[Removed Lines]",
          "38:       emitDeath: false,",
          "43:       emitDeath: false,",
          "",
          "[Added Lines]",
          "38:       emitExit: false,",
          "43:       emitExit: false,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:   cluster.once('disconnect', function() {",
          "70:     checks.cluster.emitDisconnect = true;",
          "71:   });",
          "74:   });",
          "",
          "[Removed Lines]",
          "72:   cluster.once('death', function() {",
          "73:     checks.cluster.emitDeath = true;",
          "",
          "[Added Lines]",
          "72:   cluster.once('exit', function() {",
          "73:     checks.cluster.emitExit = true;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "81:   });",
          "86:     checks.worker.died = !alive(worker.process.pid);",
          "87:     process.nextTick(function() {",
          "88:       process.exit(0);",
          "",
          "[Removed Lines]",
          "84:   worker.once('death', function() {",
          "85:     checks.worker.emitDeath = true;",
          "",
          "[Added Lines]",
          "84:   worker.once('exit', function() {",
          "85:     checks.worker.emitExit = true;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "98:     assert.ok(w.emitDisconnect, 'Disconnect event did not emit');",
          "99:     assert.ok(c.emitDisconnect, 'Disconnect event did not emit');",
          "104:     assert.equal(w.state, 'disconnected', 'The state property was not set');",
          "",
          "[Removed Lines]",
          "100:     assert.ok(w.emitDeath, 'Death event did not emit');",
          "101:     assert.ok(c.emitDeath, 'Death event did not emit');",
          "",
          "[Added Lines]",
          "100:     assert.ok(w.emitExit, 'Exit event did not emit');",
          "101:     assert.ok(c.emitExit, 'Exit event did not emit');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c68c85f182758132b1c07a9ab7da5119306a54b",
      "candidate_info": {
        "commit_hash": "3c68c85f182758132b1c07a9ab7da5119306a54b",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/3c68c85f182758132b1c07a9ab7da5119306a54b",
        "files": [
          "common.gypi"
        ],
        "message": "build: use -pthreads (not -pthread) on Solaris",
        "before_after_code_files": [
          "common.gypi||common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:             'cflags': [ '-ansi' ],",
          "140:             'ldflags': [ '-rdynamic' ],",
          "141:           }],",
          "142:         ],",
          "143:       }],",
          "144:       ['OS==\"mac\"', {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:           [ 'OS==\"solaris\"', {",
          "143:             'cflags': [ '-pthreads' ],",
          "144:             'ldflags': [ '-pthreads' ],",
          "145:             'cflags!': [ '-pthread' ],",
          "146:             'ldflags!': [ '-pthread' ],",
          "147:           }],",
          "",
          "---------------"
        ]
      }
    }
  ]
}