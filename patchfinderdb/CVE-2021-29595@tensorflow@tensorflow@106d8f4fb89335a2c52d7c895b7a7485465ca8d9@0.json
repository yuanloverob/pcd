{
  "cve_id": "CVE-2021-29595",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. The implementation of the `DepthToSpace` TFLite operator is vulnerable to a division by zero error(https://github.com/tensorflow/tensorflow/blob/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7/tensorflow/lite/kernels/depth_to_space.cc#L63-L69). An attacker can craft a model such that `params->block_size` is 0. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "106d8f4fb89335a2c52d7c895b7a7485465ca8d9",
  "patch_info": {
    "commit_hash": "106d8f4fb89335a2c52d7c895b7a7485465ca8d9",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/106d8f4fb89335a2c52d7c895b7a7485465ca8d9",
    "files": [
      "tensorflow/lite/kernels/depth_to_space.cc",
      "tensorflow/lite/kernels/depth_to_space_test.cc",
      "tensorflow/lite/micro/kernels/depth_to_space.cc"
    ],
    "message": "Prevent division by 0 in TFLite\n\nPiperOrigin-RevId: 370800311\nChange-Id: I21ccdbd31c30118acc67df8751807ee2e0b12f91",
    "before_after_code_files": [
      "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
      "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc",
      "tensorflow/lite/micro/kernels/depth_to_space.cc||tensorflow/lite/micro/kernels/depth_to_space.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc": [
      "File: tensorflow/lite/kernels/depth_to_space.cc -> tensorflow/lite/kernels/depth_to_space.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "61:   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);",
      "63:   const int block_size = params->block_size;",
      "64:   const int input_height = input->dims->data[1];",
      "65:   const int input_width = input->dims->data[2];",
      "66:   const int input_channels = input->dims->data[3];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "64:   TF_LITE_ENSURE(context, block_size > 0);",
      "",
      "---------------"
    ],
    "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc": [
      "File: tensorflow/lite/kernels/depth_to_space_test.cc -> tensorflow/lite/kernels/depth_to_space_test.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "60:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 4),",
      "61:                \"Cannot allocate tensors\");",
      "62: }",
      "63: #endif",
      "65: TEST(DepthToSpaceOpModel, Float32) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "64: TEST(DepthToSpaceOpModel, NoBlockSize) {",
      "65:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 0),",
      "66:                \"Cannot allocate tensors\");",
      "67: }",
      "",
      "---------------"
    ],
    "tensorflow/lite/micro/kernels/depth_to_space.cc||tensorflow/lite/micro/kernels/depth_to_space.cc": [
      "File: tensorflow/lite/micro/kernels/depth_to_space.cc -> tensorflow/lite/micro/kernels/depth_to_space.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "54:   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);",
      "56:   const int block_size = params->block_size;",
      "57:   const int input_height = input->dims->data[kHeightRank];",
      "58:   const int input_width = input->dims->data[kWidthRank];",
      "59:   const int input_channels = input->dims->data[kDepthRank];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "57:   TF_LITE_ENSURE(context, block_size > 0);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c73a74de9f4bbf9c0cee6bc318030c289514e415",
      "candidate_info": {
        "commit_hash": "c73a74de9f4bbf9c0cee6bc318030c289514e415",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c73a74de9f4bbf9c0cee6bc318030c289514e415",
        "files": [
          "tensorflow/lite/kernels/depth_to_space.cc",
          "tensorflow/lite/kernels/depth_to_space_test.cc"
        ],
        "message": "CherryPick2.3:Add depth_to_space TFLite op",
        "before_after_code_files": [
          "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
          "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
            "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
            "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc": [
          "File: tensorflow/lite/kernels/depth_to_space.cc -> tensorflow/lite/kernels/depth_to_space.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);",
          "60:   const int block_size = params->block_size;",
          "61:   const int input_height = input->dims->data[1];",
          "62:   const int input_width = input->dims->data[2];",
          "63:   const int input_channels = input->dims->data[3];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61:   TF_LITE_ENSURE(context, block_size > 0);",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc": [
          "File: tensorflow/lite/kernels/depth_to_space_test.cc -> tensorflow/lite/kernels/depth_to_space_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 4),",
          "61:                \"Cannot allocate tensors\");",
          "62: }",
          "63: #endif",
          "65: TEST(DepthToSpaceOpModel, Float32) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64: TEST(DepthToSpaceOpModel, NoBlockSize) {",
          "65:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 0),",
          "66:                \"Cannot allocate tensors\");",
          "67: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6cad656cb3efa5545ed6c7027e9458f5c6b523a0",
      "candidate_info": {
        "commit_hash": "6cad656cb3efa5545ed6c7027e9458f5c6b523a0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/6cad656cb3efa5545ed6c7027e9458f5c6b523a0",
        "files": [
          "tensorflow/lite/kernels/depth_to_space.cc",
          "tensorflow/lite/kernels/depth_to_space_test.cc"
        ],
        "message": "CherryPick2.2:Add depth_to_space TFLite op",
        "before_after_code_files": [
          "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
          "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
            "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
            "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc": [
          "File: tensorflow/lite/kernels/depth_to_space.cc -> tensorflow/lite/kernels/depth_to_space.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:   TF_LITE_ENSURE_EQ(context, input->type, output->type);",
          "57:   const int block_size = params->block_size;",
          "58:   const int input_height = input->dims->data[1];",
          "59:   const int input_width = input->dims->data[2];",
          "60:   const int input_channels = input->dims->data[3];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:   TF_LITE_ENSURE(context, block_size > 0);",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc": [
          "File: tensorflow/lite/kernels/depth_to_space_test.cc -> tensorflow/lite/kernels/depth_to_space_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 4),",
          "56:                \"Cannot allocate tensors\");",
          "57: }",
          "58: #endif",
          "60: TEST(DepthToSpaceOpModel, Float32) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: TEST(DepthToSpaceOpModel, NoBlockSize) {",
          "60:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 0),",
          "61:                \"Cannot allocate tensors\");",
          "62: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "706d6df0ce4917ead132531abdd53130610a7d2e",
      "candidate_info": {
        "commit_hash": "706d6df0ce4917ead132531abdd53130610a7d2e",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/706d6df0ce4917ead132531abdd53130610a7d2e",
        "files": [
          "tensorflow/lite/kernels/depth_to_space.cc",
          "tensorflow/lite/kernels/depth_to_space_test.cc"
        ],
        "message": "CherryPick2.1:Add depth_to_space TFLite op",
        "before_after_code_files": [
          "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
          "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
            "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
            "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc": [
          "File: tensorflow/lite/kernels/depth_to_space.cc -> tensorflow/lite/kernels/depth_to_space.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:   TF_LITE_ENSURE_EQ(context, input->type, output->type);",
          "57:   const int block_size = params->block_size;",
          "58:   const int input_height = input->dims->data[1];",
          "59:   const int input_width = input->dims->data[2];",
          "60:   const int input_channels = input->dims->data[3];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:   TF_LITE_ENSURE(context, block_size > 0);",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc": [
          "File: tensorflow/lite/kernels/depth_to_space_test.cc -> tensorflow/lite/kernels/depth_to_space_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 4),",
          "56:                \"Cannot allocate tensors\");",
          "57: }",
          "58: #endif",
          "60: TEST(DepthToSpaceOpModel, Float32) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: TEST(DepthToSpaceOpModel, NoBlockSize) {",
          "60:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 0),",
          "61:                \"Cannot allocate tensors\");",
          "62: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3249bef19f246d0443d35469a2920388042ad9f6",
      "candidate_info": {
        "commit_hash": "3249bef19f246d0443d35469a2920388042ad9f6",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/3249bef19f246d0443d35469a2920388042ad9f6",
        "files": [
          "tensorflow/lite/kernels/depth_to_space.cc",
          "tensorflow/lite/kernels/depth_to_space_test.cc",
          "tensorflow/lite/micro/kernels/depth_to_space.cc"
        ],
        "message": "[Cherrypick:2.5]Prevent division by 0 in TFLite",
        "before_after_code_files": [
          "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
          "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc",
          "tensorflow/lite/micro/kernels/depth_to_space.cc||tensorflow/lite/micro/kernels/depth_to_space.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
            "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc",
            "tensorflow/lite/micro/kernels/depth_to_space.cc||tensorflow/lite/micro/kernels/depth_to_space.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
            "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc",
            "tensorflow/lite/micro/kernels/depth_to_space.cc||tensorflow/lite/micro/kernels/depth_to_space.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc": [
          "File: tensorflow/lite/kernels/depth_to_space.cc -> tensorflow/lite/kernels/depth_to_space.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);",
          "63:   const int block_size = params->block_size;",
          "64:   const int input_height = input->dims->data[1];",
          "65:   const int input_width = input->dims->data[2];",
          "66:   const int input_channels = input->dims->data[3];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:   TF_LITE_ENSURE(context, block_size > 0);",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc": [
          "File: tensorflow/lite/kernels/depth_to_space_test.cc -> tensorflow/lite/kernels/depth_to_space_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 4),",
          "61:                \"Cannot allocate tensors\");",
          "62: }",
          "63: #endif",
          "65: TEST(DepthToSpaceOpModel, Float32) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64: TEST(DepthToSpaceOpModel, NoBlockSize) {",
          "65:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 0),",
          "66:                \"Cannot allocate tensors\");",
          "67: }",
          "",
          "---------------"
        ],
        "tensorflow/lite/micro/kernels/depth_to_space.cc||tensorflow/lite/micro/kernels/depth_to_space.cc": [
          "File: tensorflow/lite/micro/kernels/depth_to_space.cc -> tensorflow/lite/micro/kernels/depth_to_space.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);",
          "63:   const int block_size = params->block_size;",
          "64:   const int input_height = input->dims->data[1];",
          "65:   const int input_width = input->dims->data[2];",
          "66:   const int input_channels = input->dims->data[3];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:   TF_LITE_ENSURE(context, block_size > 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c5736e98e3f35575bd8ef2ab67da239c1a8829aa",
      "candidate_info": {
        "commit_hash": "c5736e98e3f35575bd8ef2ab67da239c1a8829aa",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c5736e98e3f35575bd8ef2ab67da239c1a8829aa",
        "files": [
          "tensorflow/lite/kernels/depth_to_space.cc",
          "tensorflow/lite/kernels/depth_to_space_test.cc"
        ],
        "message": "CherryPick2.4:Add depth_to_space TFLite op",
        "before_after_code_files": [
          "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
          "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
            "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc",
            "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/depth_to_space.cc||tensorflow/lite/kernels/depth_to_space.cc": [
          "File: tensorflow/lite/kernels/depth_to_space.cc -> tensorflow/lite/kernels/depth_to_space.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);",
          "63:   const int block_size = params->block_size;",
          "64:   const int input_height = input->dims->data[1];",
          "65:   const int input_width = input->dims->data[2];",
          "66:   const int input_channels = input->dims->data[3];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:   TF_LITE_ENSURE(context, block_size > 0);",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/depth_to_space_test.cc||tensorflow/lite/kernels/depth_to_space_test.cc": [
          "File: tensorflow/lite/kernels/depth_to_space_test.cc -> tensorflow/lite/kernels/depth_to_space_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 4),",
          "61:                \"Cannot allocate tensors\");",
          "62: }",
          "63: #endif",
          "65: TEST(DepthToSpaceOpModel, Float32) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64: TEST(DepthToSpaceOpModel, NoBlockSize) {",
          "65:   EXPECT_DEATH(DepthToSpaceOpModel({TensorType_FLOAT32, {1, 1, 1, 4}}, 0),",
          "66:                \"Cannot allocate tensors\");",
          "67: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}