{
  "cve_id": "CVE-2014-0207",
  "cve_desc": "The cdf_read_short_sector function in cdf.c in file before 5.19, as used in the Fileinfo component in PHP before 5.4.30 and 5.5.x before 5.5.14, allows remote attackers to cause a denial of service (assertion failure and application exit) via a crafted CDF file.",
  "repo": "file/file",
  "patch_hash": "6d209c1c489457397a5763bca4b28e43aac90391",
  "patch_info": {
    "commit_hash": "6d209c1c489457397a5763bca4b28e43aac90391",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/6d209c1c489457397a5763bca4b28e43aac90391",
    "files": [
      "src/cdf.c",
      "src/readcdf.c"
    ],
    "message": "Apply patches from file-CVE-2012-1571.patch From Francisco Alonso Espejo:     file < 5.18/git version can be made to crash when checking some     corrupt CDF files (Using an invalid cdf_read_short_sector size)     The problem I found here, is that in most situations (if     h_short_sec_size_p2 > 8) because the blocksize is 512 and normal     values are 06 which means reading 64 bytes.As long as the check     for the block size copy is not checked properly (there's an assert     that makes wrong/invalid assumptions)",
    "before_after_code_files": [
      "src/cdf.c||src/cdf.c",
      "src/readcdf.c||src/readcdf.c"
    ]
  },
  "patch_diff": {
    "src/cdf.c||src/cdf.c": [
      "File: src/cdf.c -> src/cdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include \"file.h\"",
      "37: #ifndef lint",
      "39: #endif",
      "41: #include <assert.h>",
      "",
      "[Removed Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.54 2014/02/25 20:52:02 christos Exp $\")",
      "",
      "[Added Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "352:  size_t ss = CDF_SHORT_SEC_SIZE(h);",
      "353:  size_t pos = CDF_SHORT_SEC_POS(h, id);",
      "354:  assert(ss == len);",
      "356:   DPRINTF((\"Out of bounds read %\" SIZE_T_FORMAT \"u > %\"",
      "357:       SIZE_T_FORMAT \"u\\n\",",
      "359:   return -1;",
      "360:  }",
      "361:  (void)memcpy(((char *)buf) + offs,",
      "",
      "[Removed Lines]",
      "355:  if (pos > CDF_SEC_SIZE(h) * sst->sst_len) {",
      "358:       pos, CDF_SEC_SIZE(h) * sst->sst_len));",
      "",
      "[Added Lines]",
      "355:  if (pos + len > CDF_SEC_SIZE(h) * sst->sst_len) {",
      "358:       pos + len, CDF_SEC_SIZE(h) * sst->sst_len));",
      "",
      "---------------"
    ],
    "src/readcdf.c||src/readcdf.c": [
      "File: src/readcdf.c -> src/readcdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #include \"file.h\"",
      "28: #ifndef lint",
      "30: #endif",
      "32: #include <assert.h>",
      "",
      "[Removed Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.39 2014/02/27 23:26:18 christos Exp $\")",
      "",
      "[Added Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.40 2014/03/06 15:23:33 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "121: private int",
      "122: cdf_file_property_info(struct magic_set *ms, const cdf_property_info_t *info,",
      "124: {",
      "125:         size_t i;",
      "126:         cdf_timestamp_t tp;",
      "",
      "[Removed Lines]",
      "123:     size_t count, const uint64_t clsid[2])",
      "",
      "[Added Lines]",
      "123:     size_t count, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "130:         const char *s;",
      "131:         int len;",
      "136:         for (i = 0; i < count; i++) {",
      "137:                 cdf_print_property_name(buf, sizeof(buf), info[i].pi_id);",
      "",
      "[Removed Lines]",
      "133:         if (!NOTMIME(ms))",
      "134:   str = cdf_clsid_to_mime(clsid, clsid2mime);",
      "",
      "[Added Lines]",
      "133:         if (!NOTMIME(ms) && root_storage)",
      "134:   str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2mime);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "237: private int",
      "238: cdf_file_summary_info(struct magic_set *ms, const cdf_header_t *h,",
      "240: {",
      "241:         cdf_summary_info_header_t si;",
      "242:         cdf_property_info_t *info;",
      "",
      "[Removed Lines]",
      "239:     const cdf_stream_t *sst, const uint64_t clsid[2])",
      "",
      "[Added Lines]",
      "239:     const cdf_stream_t *sst, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "276:                                 return -2;",
      "277:                         break;",
      "278:                 }",
      "286:         free(info);",
      "288:         return m == -1 ? -2 : m;",
      "",
      "[Removed Lines]",
      "279:   str = cdf_clsid_to_mime(clsid, clsid2desc);",
      "280:   if (str)",
      "281:                         if (file_printf(ms, \", %s\", str) == -1)",
      "282:     return -2;",
      "283:         }",
      "285:         m = cdf_file_property_info(ms, info, count, clsid);",
      "",
      "[Added Lines]",
      "279:   if (root_storage) {",
      "280:    str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2desc);",
      "281:    if (str)",
      "282:     if (file_printf(ms, \", %s\", str) == -1)",
      "283:      return -2;",
      "284:    }",
      "285:   }",
      "287:         m = cdf_file_property_info(ms, info, count, root_storage);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "381: #ifdef CDF_DEBUG",
      "382:         cdf_dump_summary_info(&h, &scn);",
      "383: #endif",
      "388:  if (i == 0) {",
      "389:   const char *str = NULL;",
      "",
      "[Removed Lines]",
      "384:         if ((i = cdf_file_summary_info(ms, &h, &scn,",
      "385:      root_storage->d_storage_uuid)) < 0)",
      "386:                 expn = \"Can't expand summary_info\";",
      "",
      "[Added Lines]",
      "386:         if ((i = cdf_file_summary_info(ms, &h, &scn, root_storage)) < 0)",
      "387:             expn = \"Can't expand summary_info\";",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8f0fcc2e7b999cb3a94d2aac6b47c9193da7e742",
      "candidate_info": {
        "commit_hash": "8f0fcc2e7b999cb3a94d2aac6b47c9193da7e742",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/8f0fcc2e7b999cb3a94d2aac6b47c9193da7e742",
        "files": [
          "src/cdf.c"
        ],
        "message": "make debugging code compile again",
        "before_after_code_files": [
          "src/cdf.c||src/cdf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/cdf.c||src/cdf.c"
          ],
          "candidate": [
            "src/cdf.c||src/cdf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/cdf.c||src/cdf.c": [
          "File: src/cdf.c -> src/cdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "39: #endif",
          "41: #include <assert.h>",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.73 2015/01/11 16:58:25 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.74 2015/01/11 17:00:23 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1483:   else",
          "1484:    cdf_dump_summary_info(&h, &scn);",
          "1485: #endif",
          "1488:    warn(\"Cannot read catalog\");",
          "1489: #ifdef CDF_DEBUG",
          "1490:   else",
          "",
          "[Removed Lines]",
          "1486:   if (cdf_read_catalog(&info, &h, &sat, &ssat, &sst, &dir,",
          "1487:       &scn) == -1)",
          "",
          "[Added Lines]",
          "1486:   if (cdf_read_user_stream(&info, &h, &sat, &ssat, &sst,",
          "1487:       &dir, \"Catalog\", &scn) <= 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f28fbb947e3aa55fc40b09820f59ebff6f66f213",
      "candidate_info": {
        "commit_hash": "f28fbb947e3aa55fc40b09820f59ebff6f66f213",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/f28fbb947e3aa55fc40b09820f59ebff6f66f213",
        "files": [
          "src/readcdf.c"
        ],
        "message": "Fix coredump in clang caused by missing array terminator element.",
        "before_after_code_files": [
          "src/readcdf.c||src/readcdf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readcdf.c||src/readcdf.c"
          ],
          "candidate": [
            "src/readcdf.c||src/readcdf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readcdf.c||src/readcdf.c": [
          "File: src/readcdf.c -> src/readcdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"file.h\"",
          "28: #ifndef lint",
          "30: #endif",
          "32: #include <assert.h>",
          "",
          "[Removed Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.41 2014/05/05 16:11:21 christos Exp $\")",
          "",
          "[Added Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.42 2014/05/07 10:13:12 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:  const char *mime;",
          "76: } clsid2mime[] = {",
          "77:  {",
          "79:   \"x-msi\",",
          "81: }, clsid2desc[] = {",
          "82:  {",
          "84:   \"MSI Installer\",",
          "85:  },",
          "86: };",
          "88: private const char *",
          "",
          "[Removed Lines]",
          "78:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
          "80:  }",
          "83:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
          "",
          "[Added Lines]",
          "78:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU  },",
          "80:  },",
          "81:  { { 0,    0   },",
          "82:   NULL,",
          "83:  },",
          "86:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU  },",
          "89:  { { 0,    0   },",
          "90:   NULL,",
          "91:  },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "40bade80cbe2af1d0b2cd0420cebd5d5905a2382",
      "candidate_info": {
        "commit_hash": "40bade80cbe2af1d0b2cd0420cebd5d5905a2382",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/40bade80cbe2af1d0b2cd0420cebd5d5905a2382",
        "files": [
          "src/cdf.c"
        ],
        "message": "Fix incorrect bounds check for sector count. (Francisco Alonso and Jan Kaluza at RedHat)",
        "before_after_code_files": [
          "src/cdf.c||src/cdf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/cdf.c||src/cdf.c"
          ],
          "candidate": [
            "src/cdf.c||src/cdf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/cdf.c||src/cdf.c": [
          "File: src/cdf.c -> src/cdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "39: #endif",
          "41: #include <assert.h>",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.59 2014/05/14 23:22:48 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.60 2014/05/21 13:04:38 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "455: cdf_count_chain(const cdf_sat_t *sat, cdf_secid_t sid, size_t size)",
          "456: {",
          "457:  size_t i, j;",
          "460:  DPRINTF((\"Chain:\"));",
          "461:  for (j = i = 0; sid >= 0; i++, j++) {",
          "",
          "[Removed Lines]",
          "458:  cdf_secid_t maxsector = (cdf_secid_t)(sat->sat_len * size);",
          "",
          "[Added Lines]",
          "458:  cdf_secid_t maxsector = (cdf_secid_t)((sat->sat_len * size)",
          "459:      / sizeof(maxsector));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "465:    errno = EFTYPE;",
          "466:    return (size_t)-1;",
          "467:   }",
          "470:    errno = EFTYPE;",
          "471:    return (size_t)-1;",
          "472:   }",
          "",
          "[Removed Lines]",
          "468:   if (sid > maxsector) {",
          "469:    DPRINTF((\"Sector %d > %d\\n\", sid, maxsector));",
          "",
          "[Added Lines]",
          "469:   if (sid >= maxsector) {",
          "470:    DPRINTF((\"Sector %d >= %d\\n\", sid, maxsector));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c397fb230f70cfa1dc8f3d387f4df8ebec6c1a63",
      "candidate_info": {
        "commit_hash": "c397fb230f70cfa1dc8f3d387f4df8ebec6c1a63",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/c397fb230f70cfa1dc8f3d387f4df8ebec6c1a63",
        "files": [
          "ChangeLog",
          "src/funcs.c",
          "src/readcdf.c",
          "src/softmagic.c"
        ],
        "message": "Cache old LC_CTYPE locale for restoring it later.\n\nCache old LC_CTYPE locale before setting it to \"C\", so\nwe can use it to restore LC_CTYPE instead of asking\nsetlocale() to scan the environment variables.",
        "before_after_code_files": [
          "src/funcs.c||src/funcs.c",
          "src/readcdf.c||src/readcdf.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readcdf.c||src/readcdf.c"
          ],
          "candidate": [
            "src/readcdf.c||src/readcdf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "34: #include <stdarg.h>",
          "35: #include <stdlib.h>",
          "36: #include <string.h>",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.66 2014/01/07 03:15:09 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.67 2014/02/12 23:20:53 christos Exp $\")",
          "34: #include <assert.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "442: {",
          "443:  regex_t rx;",
          "444:  int rc, rv = -1;",
          "446:  (void)setlocale(LC_CTYPE, \"C\");",
          "447:  rc = regcomp(&rx, pat, REG_EXTENDED);",
          "448:  if (rc) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "446:  char *old_lc_ctype;",
          "448:  old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "449:  assert(old_lc_ctype != NULL);",
          "450:  old_lc_ctype = strdup(old_lc_ctype);",
          "451:  assert(old_lc_ctype != NULL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "463:   rv = nm;",
          "464:  }",
          "465: out:",
          "467:  return rv;",
          "468: }",
          "",
          "[Removed Lines]",
          "466:  (void)setlocale(LC_CTYPE, \"\");",
          "",
          "[Added Lines]",
          "472:  (void)setlocale(LC_CTYPE, old_lc_ctype);",
          "473:  free(old_lc_ctype);",
          "",
          "---------------"
        ],
        "src/readcdf.c||src/readcdf.c": [
          "File: src/readcdf.c -> src/readcdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"file.h\"",
          "28: #ifndef lint",
          "30: #endif",
          "32: #include <stdlib.h>",
          "33: #include <unistd.h>",
          "34: #include <string.h>",
          "",
          "[Removed Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.36 2013/12/05 17:02:34 christos Exp $\")",
          "",
          "[Added Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
          "32: #include <assert.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74: {",
          "75:  size_t i;",
          "76:  const char *rv = NULL;",
          "78:  (void)setlocale(LC_CTYPE, \"C\");",
          "79:  for (i = 0; nv[i].pattern != NULL; i++)",
          "80:   if (strcasestr(vbuf, nv[i].pattern) != NULL) {",
          "81:    rv = nv[i].mime;",
          "82:    break;",
          "83:   }",
          "85:  return rv;",
          "86: }",
          "",
          "[Removed Lines]",
          "84:  (void)setlocale(LC_CTYPE, \"\");",
          "",
          "[Added Lines]",
          "78:  char *old_lc_ctype;",
          "80:  old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "81:  assert(old_lc_ctype != NULL);",
          "82:  old_lc_ctype = strdup(old_lc_ctype);",
          "83:  assert(old_lc_ctype != NULL);",
          "90:  (void)setlocale(LC_CTYPE, old_lc_ctype);",
          "91:  free(old_lc_ctype);",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.173 2014/02/11 15:41:25 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.174 2014/02/12 23:20:53 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42: #else",
          "43: #define F(a, b) (a)",
          "44: #endif",
          "45: #include <string.h>",
          "46: #include <ctype.h>",
          "47: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: #include <assert.h>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352: {",
          "353:  regex_t rx;",
          "354:  int rc, rv = -1;",
          "356:  if (strchr(m->desc, '%') == NULL)",
          "357:   return 0;",
          "359:  (void)setlocale(LC_CTYPE, \"C\");",
          "360:  rc = regcomp(&rx, \"%[-0-9\\\\.]*s\", REG_EXTENDED|REG_NOSUB);",
          "361:  if (rc) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "356:  char *old_lc_ctype;",
          "361:  old_lc_ctype = setlocale(LC_CTYPE, NULL);",
          "362:  assert(old_lc_ctype != NULL);",
          "363:  old_lc_ctype = strdup(old_lc_ctype);",
          "364:  assert(old_lc_ctype != NULL);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "367:   regfree(&rx);",
          "368:   rv = !rc;",
          "369:  }",
          "371:  return rv;",
          "372: }",
          "",
          "[Removed Lines]",
          "370:  (void)setlocale(LC_CTYPE, \"\");",
          "",
          "[Added Lines]",
          "376:  (void)setlocale(LC_CTYPE, old_lc_ctype);",
          "377:  free(old_lc_ctype);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3d27f499e5735de91fc6e8228047e81b1f1e159d",
      "candidate_info": {
        "commit_hash": "3d27f499e5735de91fc6e8228047e81b1f1e159d",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/3d27f499e5735de91fc6e8228047e81b1f1e159d",
        "files": [
          "src/readcdf.c"
        ],
        "message": "remove debugging printf",
        "before_after_code_files": [
          "src/readcdf.c||src/readcdf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readcdf.c||src/readcdf.c"
          ],
          "candidate": [
            "src/readcdf.c||src/readcdf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readcdf.c||src/readcdf.c": [
          "File: src/readcdf.c -> src/readcdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"file.h\"",
          "28: #ifndef lint",
          "30: #endif",
          "32: #include <assert.h>",
          "",
          "[Removed Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.38 2014/02/18 11:09:31 kim Exp $\")",
          "",
          "[Added Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.39 2014/02/27 23:26:18 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90: {",
          "91:  size_t i;",
          "92:  for (i = 0; cv[i].mime != NULL; i++) {",
          "95:   if (clsid[0] == cv[i].clsid[0] && clsid[1] == cv[i].clsid[1])",
          "96:    return cv[i].mime;",
          "97:  }",
          "",
          "[Removed Lines]",
          "93:  printf(\"%llx %llx %llx %llx\\n\",",
          "94:   clsid[0], cv[i].clsid[0], clsid[1], cv[i].clsid[1]);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}