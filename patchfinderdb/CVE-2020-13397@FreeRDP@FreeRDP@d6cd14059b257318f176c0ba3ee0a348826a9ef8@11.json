{
  "cve_id": "CVE-2020-13397",
  "cve_desc": "An issue was discovered in FreeRDP before 2.1.1. An out-of-bounds (OOB) read vulnerability has been detected in security_fips_decrypt in libfreerdp/core/security.c due to an uninitialized value.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "d6cd14059b257318f176c0ba3ee0a348826a9ef8",
  "patch_info": {
    "commit_hash": "d6cd14059b257318f176c0ba3ee0a348826a9ef8",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/d6cd14059b257318f176c0ba3ee0a348826a9ef8",
    "files": [
      "libfreerdp/core/security.c"
    ],
    "message": "Fixed GHSL-2020-101 missing NULL check\n\n(cherry picked from commit b207dbba35c505bbc3ad5aadc10b34980c6b7e8e)",
    "before_after_code_files": [
      "libfreerdp/core/security.c||libfreerdp/core/security.c"
    ]
  },
  "patch_diff": {
    "libfreerdp/core/security.c||libfreerdp/core/security.c": [
      "File: libfreerdp/core/security.c -> libfreerdp/core/security.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "816: {",
      "817:  size_t olen;",
      "819:  if (!winpr_Cipher_Update(rdp->fips_decrypt, data, length, data, &olen))",
      "820:   return FALSE;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "819:  if (!rdp || !rdp->fips_decrypt)",
      "820:   return FALSE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8d9464fbc5d6f4de0e401d0d189d8566cc47227a",
      "candidate_info": {
        "commit_hash": "8d9464fbc5d6f4de0e401d0d189d8566cc47227a",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/8d9464fbc5d6f4de0e401d0d189d8566cc47227a",
        "files": [
          "client/common/file.c"
        ],
        "message": "Fixed BehaviourSanitizer warning in rdp parser\n\n(cherry picked from commit 771332c04e2dbad964d0cb11a86ff561e792bc35)",
        "before_after_code_files": [
          "client/common/file.c||client/common/file.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "client/common/file.c||client/common/file.c": [
          "File: client/common/file.c -> client/common/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:  DWORD flags;",
          "204: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "206: static void freerdp_client_file_string_check_free(LPSTR str);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "841:  return status;",
          "842: }",
          "853:  } while (0)",
          "855: BOOL freerdp_client_populate_rdp_file_from_settings(rdpFile* file, const rdpSettings* settings)",
          "",
          "[Removed Lines]",
          "844: #define FILE_POPULATE_STRING(_target, _setting) \\",
          "845:  do                                          \\",
          "846:  {                                           \\",
          "847:   if (_setting)                           \\",
          "848:   {                                       \\",
          "849:    _target = _strdup(_setting);        \\",
          "850:    if (!_target)                       \\",
          "851:     return FALSE;                   \\",
          "852:   }                                       \\",
          "",
          "[Added Lines]",
          "845: #define FILE_POPULATE_STRING(_target, _setting)             \\",
          "846:  do                                                      \\",
          "847:  {                                                       \\",
          "848:   if (_setting)                                       \\",
          "849:   {                                                   \\",
          "850:    freerdp_client_file_string_check_free(_target); \\",
          "851:    _target = _strdup(_setting);                    \\",
          "852:    if (!_target)                                   \\",
          "853:     return FALSE;                               \\",
          "854:   }                                                   \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a58129346d20dcc0b9728a67eee6c8ebbd57d0b0",
      "candidate_info": {
        "commit_hash": "a58129346d20dcc0b9728a67eee6c8ebbd57d0b0",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/a58129346d20dcc0b9728a67eee6c8ebbd57d0b0",
        "files": [
          "libfreerdp/core/info.c"
        ],
        "message": "Fixed extended info packet alignment.\n\n(cherry picked from commit 03ebaf2dc1547c75f8693dd5087ce2e8dc17765a)",
        "before_after_code_files": [
          "libfreerdp/core/info.c||libfreerdp/core/info.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/info.c||libfreerdp/core/info.c": [
          "File: libfreerdp/core/info.c -> libfreerdp/core/info.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:  { INFO_HIDEF_RAIL_SUPPORTED, \"INFO_HIDEF_RAIL_SUPPORTED\" },",
          "68: };",
          "70: static char* rdp_info_package_flags_description(UINT32 flags)",
          "71: {",
          "72:  char* result;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: static BOOL rdp_read_info_null_string(UINT32 flags, wStream* s, size_t cbLen, CHAR** dst,",
          "71:                                       size_t max)",
          "72: {",
          "73:  CHAR* ret = NULL;",
          "75:  const BOOL unicode = flags & INFO_UNICODE;",
          "76:  const size_t nullSize = unicode ? sizeof(WCHAR) : sizeof(CHAR);",
          "78:  if (Stream_GetRemainingLength(s) < (size_t)(cbLen))",
          "79:   return FALSE;",
          "81:  if (cbLen > 0)",
          "82:  {",
          "83:   WCHAR domain[512 / sizeof(WCHAR) + sizeof(WCHAR)] = { 0 };",
          "88:   if ((cbLen % 2) || (cbLen > (max - nullSize)))",
          "89:   {",
          "90:    WLog_ERR(TAG, \"protocol error: invalid value: %\" PRIuz \"\", cbLen);",
          "91:    return FALSE;",
          "92:   }",
          "94:   Stream_Read(s, domain, cbLen);",
          "96:   if (unicode)",
          "97:   {",
          "98:    if (ConvertFromUnicode(CP_UTF8, 0, domain, cbLen, &ret, 0, NULL, NULL) < 1)",
          "99:    {",
          "100:     WLog_ERR(TAG, \"failed to convert Domain string\");",
          "101:     return FALSE;",
          "102:    }",
          "103:   }",
          "104:   else",
          "105:   {",
          "106:    ret = calloc(cbLen + 1, nullSize);",
          "107:    if (!ret)",
          "108:     return FALSE;",
          "109:    memcpy(ret, domain, cbLen);",
          "110:   }",
          "111:  }",
          "113:  free(*dst);",
          "115:  return TRUE;",
          "116: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "245:  UINT16 cbClientDir;",
          "246:  UINT16 cbAutoReconnectLen;",
          "247:  rdpSettings* settings = rdp->settings;",
          "253:  if (Stream_GetRemainingLength(s) < 4)",
          "254:   return FALSE;",
          "",
          "[Removed Lines]",
          "248:  union {",
          "249:   BYTE* bp;",
          "250:   WCHAR* wp;",
          "251:  } ptrconv;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "275:  if (Stream_GetRemainingLength(s) < cbClientAddress)",
          "276:   return FALSE;",
          "306:  if (Stream_GetRemainingLength(s) < 2)",
          "307:   return FALSE;",
          "",
          "[Removed Lines]",
          "278:  if (settings->ClientAddress)",
          "279:  {",
          "280:   free(settings->ClientAddress);",
          "281:   settings->ClientAddress = NULL;",
          "282:  }",
          "284:  if (cbClientAddress)",
          "285:  {",
          "286:   ptrconv.bp = Stream_Pointer(s);",
          "288:   if ((cbClientAddress < sizeof(WCHAR)) || (ptrconv.bp[cbClientAddress - 1]) ||",
          "289:       (ptrconv.bp[cbClientAddress - 2]))",
          "290:   {",
          "291:    WLog_ERR(TAG, \"protocol error: clientAddress must be null terminated\");",
          "292:    return FALSE;",
          "293:   }",
          "295:   if (ConvertFromUnicode(CP_UTF8, 0, ptrconv.wp, -1, &settings->ClientAddress, 0, NULL,",
          "296:                          NULL) < 1)",
          "297:   {",
          "298:    WLog_ERR(TAG, \"failed to convert client address\");",
          "299:    return FALSE;",
          "300:   }",
          "302:   Stream_Seek(s, cbClientAddress);",
          "303:   WLog_DBG(TAG, \"rdp client address: [%s]\", settings->ClientAddress);",
          "304:  }",
          "",
          "[Added Lines]",
          "322:  if (!rdp_read_info_null_string(INFO_UNICODE, s, cbClientAddress, &settings->ClientAddress,",
          "323:                                 (settings->RdpVersion < RDP_VERSION_10_0) ? 64 : 80))",
          "324:   return FALSE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "322:   return FALSE;",
          "",
          "[Removed Lines]",
          "319:  if ((cbClientDir % 2) || cbClientDir > 512)",
          "320:  {",
          "321:   WLog_ERR(TAG, \"protocol error: invalid cbClientDir value: %\" PRIu16 \"\", cbClientDir);",
          "323:  }",
          "325:  if (Stream_GetRemainingLength(s) < cbClientDir)",
          "326:   return FALSE;",
          "328:  if (settings->ClientDir)",
          "329:  {",
          "330:   free(settings->ClientDir);",
          "331:   settings->ClientDir = NULL;",
          "332:  }",
          "334:  if (cbClientDir)",
          "335:  {",
          "336:   ptrconv.bp = Stream_Pointer(s);",
          "338:   if ((cbClientDir < sizeof(WCHAR)) || (ptrconv.bp[cbClientDir - 1]) ||",
          "339:       (ptrconv.bp[cbClientDir - 2]))",
          "340:   {",
          "341:    WLog_ERR(TAG, \"protocol error: clientDir must be null terminated\");",
          "342:    return FALSE;",
          "343:   }",
          "345:   if (ConvertFromUnicode(CP_UTF8, 0, ptrconv.wp, -1, &settings->ClientDir, 0, NULL, NULL) < 1)",
          "346:   {",
          "347:    WLog_ERR(TAG, \"failed to convert client directory\");",
          "348:    return FALSE;",
          "349:   }",
          "351:   Stream_Seek(s, cbClientDir);",
          "352:   WLog_DBG(TAG, \"rdp client dir: [%s]\", settings->ClientDir);",
          "353:  }",
          "",
          "[Added Lines]",
          "339:  if (!rdp_read_info_null_string(INFO_UNICODE, s, cbClientDir, &settings->ClientDir, 512))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5fc0ddeff5c81c592c467c2ecea2491309bd669c",
      "candidate_info": {
        "commit_hash": "5fc0ddeff5c81c592c467c2ecea2491309bd669c",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/5fc0ddeff5c81c592c467c2ecea2491309bd669c",
        "files": [
          "libfreerdp/core/rdp.c",
          "libfreerdp/core/rdp.h",
          "libfreerdp/core/security.c"
        ],
        "message": "Fixed #6156: Enforce synchronized encrypt count\n\nOld style RDP encryption uses a counter, synchronize this for\npackets send from different threads.\n\n(cherry picked from commit 873a9bef42017ff694659538f70909f679eb1eac)",
        "before_after_code_files": [
          "libfreerdp/core/rdp.c||libfreerdp/core/rdp.c",
          "libfreerdp/core/rdp.h||libfreerdp/core/rdp.h",
          "libfreerdp/core/security.c||libfreerdp/core/security.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [
            "libfreerdp/core/security.c||libfreerdp/core/security.c"
          ],
          "candidate": [
            "libfreerdp/core/security.c||libfreerdp/core/security.c"
          ]
        }
      },
      "candidate_diff": {
        "libfreerdp/core/rdp.c||libfreerdp/core/rdp.c": [
          "File: libfreerdp/core/rdp.c -> libfreerdp/core/rdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1751:  if (!rdp)",
          "1752:   return NULL;",
          "1754:  rdp->context = context;",
          "1755:  rdp->instance = context->instance;",
          "1756:  flags = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1754:  InitializeCriticalSection(&rdp->critical);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1763:   context->settings = freerdp_settings_new(flags);",
          "1765:   if (!context->settings)",
          "1768:   newSettings = TRUE;",
          "1769:  }",
          "",
          "[Removed Lines]",
          "1766:    goto out_free;",
          "",
          "[Added Lines]",
          "1767:    goto fail;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1784:  rdp->transport = transport_new(context);",
          "1786:  if (!rdp->transport)",
          "1789:  rdp->license = license_new(rdp);",
          "1791:  if (!rdp->license)",
          "1794:  rdp->input = input_new(rdp);",
          "1796:  if (!rdp->input)",
          "1799:  rdp->update = update_new(rdp);",
          "1801:  if (!rdp->update)",
          "1804:  rdp->fastpath = fastpath_new(rdp);",
          "1806:  if (!rdp->fastpath)",
          "1809:  rdp->nego = nego_new(rdp->transport);",
          "1811:  if (!rdp->nego)",
          "1814:  rdp->mcs = mcs_new(rdp->transport);",
          "1816:  if (!rdp->mcs)",
          "1819:  rdp->redirection = redirection_new();",
          "1821:  if (!rdp->redirection)",
          "1824:  rdp->autodetect = autodetect_new();",
          "1826:  if (!rdp->autodetect)",
          "1829:  rdp->heartbeat = heartbeat_new();",
          "1831:  if (!rdp->heartbeat)",
          "1834:  rdp->multitransport = multitransport_new();",
          "1836:  if (!rdp->multitransport)",
          "1839:  rdp->bulk = bulk_new(context);",
          "1841:  if (!rdp->bulk)",
          "1844:  return rdp;",
          "1874:  return NULL;",
          "1875: }",
          "",
          "[Removed Lines]",
          "1787:   goto out_free_settings;",
          "1792:   goto out_free_transport;",
          "1797:   goto out_free_license;",
          "1802:   goto out_free_input;",
          "1807:   goto out_free_update;",
          "1812:   goto out_free_fastpath;",
          "1817:   goto out_free_nego;",
          "1822:   goto out_free_mcs;",
          "1827:   goto out_free_redirection;",
          "1832:   goto out_free_autodetect;",
          "1837:   goto out_free_heartbeat;",
          "1842:   goto out_free_multitransport;",
          "1845: out_free_multitransport:",
          "1846:  multitransport_free(rdp->multitransport);",
          "1847: out_free_heartbeat:",
          "1848:  heartbeat_free(rdp->heartbeat);",
          "1849: out_free_autodetect:",
          "1850:  autodetect_free(rdp->autodetect);",
          "1851: out_free_redirection:",
          "1852:  redirection_free(rdp->redirection);",
          "1853: out_free_mcs:",
          "1854:  mcs_free(rdp->mcs);",
          "1855: out_free_nego:",
          "1856:  nego_free(rdp->nego);",
          "1857: out_free_fastpath:",
          "1858:  fastpath_free(rdp->fastpath);",
          "1859: out_free_update:",
          "1860:  update_free(rdp->update);",
          "1861: out_free_input:",
          "1862:  input_free(rdp->input);",
          "1863: out_free_license:",
          "1864:  license_free(rdp->license);",
          "1865: out_free_transport:",
          "1866:  transport_free(rdp->transport);",
          "1867: out_free_settings:",
          "1869:  if (newSettings)",
          "1870:   freerdp_settings_free(rdp->settings);",
          "1872: out_free:",
          "1873:  free(rdp);",
          "",
          "[Added Lines]",
          "1788:   goto fail;",
          "1793:   goto fail;",
          "1798:   goto fail;",
          "1803:   goto fail;",
          "1808:   goto fail;",
          "1813:   goto fail;",
          "1818:   goto fail;",
          "1823:   goto fail;",
          "1828:   goto fail;",
          "1833:   goto fail;",
          "1838:   goto fail;",
          "1843:   goto fail;",
          "1847: fail:",
          "1848:  rdp_free(rdp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1950: {",
          "1951:  if (rdp)",
          "1952:  {",
          "1953:   winpr_RC4_Free(rdp->rc4_decrypt_key);",
          "1954:   winpr_RC4_Free(rdp->rc4_encrypt_key);",
          "1955:   winpr_Cipher_Free(rdp->fips_encrypt);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1928:   DeleteCriticalSection(&rdp->critical);",
          "",
          "---------------"
        ],
        "libfreerdp/core/rdp.h||libfreerdp/core/rdp.h": [
          "File: libfreerdp/core/rdp.h -> libfreerdp/core/rdp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:  UINT64 inPackets;",
          "180:  UINT64 outBytes;",
          "181:  UINT64 outPackets;",
          "182: };",
          "184: FREERDP_LOCAL BOOL rdp_read_security_header(wStream* s, UINT16* flags, UINT16* length);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:  CRITICAL_SECTION critical;",
          "",
          "---------------"
        ],
        "libfreerdp/core/security.c||libfreerdp/core/security.c": [
          "File: libfreerdp/core/security.c -> libfreerdp/core/security.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "713: BOOL security_encrypt(BYTE* data, size_t length, rdpRdp* rdp)",
          "714: {",
          "715:  if (rdp->encrypt_use_count >= 4096)",
          "716:  {",
          "717:   if (!security_key_update(rdp->encrypt_key, rdp->encrypt_update_key, rdp->rc4_key_len, rdp))",
          "720:   winpr_RC4_Free(rdp->rc4_encrypt_key);",
          "721:   rdp->rc4_encrypt_key = winpr_RC4_New(rdp->encrypt_key, rdp->rc4_key_len);",
          "723:   if (!rdp->rc4_encrypt_key)",
          "726:   rdp->encrypt_use_count = 0;",
          "727:  }",
          "729:  if (!winpr_RC4_Update(rdp->rc4_encrypt_key, length, data, data))",
          "732:  rdp->encrypt_use_count++;",
          "733:  rdp->encrypt_checksum_use_count++;",
          "735: }",
          "737: BOOL security_decrypt(BYTE* data, size_t length, rdpRdp* rdp)",
          "",
          "[Removed Lines]",
          "718:    return FALSE;",
          "724:    return FALSE;",
          "730:   return FALSE;",
          "734:  return TRUE;",
          "",
          "[Added Lines]",
          "715:  BOOL rc = FALSE;",
          "716:  EnterCriticalSection(&rdp->critical);",
          "720:    goto fail;",
          "726:    goto fail;",
          "732:   goto fail;",
          "736:  rc = TRUE;",
          "737: fail:",
          "738:  LeaveCriticalSection(&rdp->critical);",
          "739:  return rc;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "794: BOOL security_fips_encrypt(BYTE* data, size_t length, rdpRdp* rdp)",
          "795: {",
          "796:  size_t olen;",
          "798:  if (!winpr_Cipher_Update(rdp->fips_encrypt, data, length, data, &olen))",
          "801:  rdp->encrypt_use_count++;",
          "803: }",
          "805: BOOL security_fips_decrypt(BYTE* data, size_t length, rdpRdp* rdp)",
          "",
          "[Removed Lines]",
          "799:   return FALSE;",
          "802:  return TRUE;",
          "",
          "[Added Lines]",
          "801:  BOOL rc = FALSE;",
          "804:  EnterCriticalSection(&rdp->critical);",
          "806:   goto fail;",
          "809:  rc = TRUE;",
          "810: fail:",
          "811:  LeaveCriticalSection(&rdp->critical);",
          "812:  return rc;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c2dde246a654240d517d280a184860f680be9f9",
      "candidate_info": {
        "commit_hash": "2c2dde246a654240d517d280a184860f680be9f9",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/2c2dde246a654240d517d280a184860f680be9f9",
        "files": [
          "winpr/libwinpr/utils/collections/StreamPool.c"
        ],
        "message": "Fixed missing label",
        "before_after_code_files": [
          "winpr/libwinpr/utils/collections/StreamPool.c||winpr/libwinpr/utils/collections/StreamPool.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "winpr/libwinpr/utils/collections/StreamPool.c||winpr/libwinpr/utils/collections/StreamPool.c": [
          "File: winpr/libwinpr/utils/collections/StreamPool.c -> winpr/libwinpr/utils/collections/StreamPool.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:  pool->aArray[(pool->aSize)++] = s;",
          "233:  StreamPool_RemoveUsed(pool, s);",
          "235:  if (pool->synchronized)",
          "236:   LeaveCriticalSection(&pool->lock);",
          "237: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "235: out_fail:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b8311a15a0fecbbade96c03a1f3a09ada9a2fb3",
      "candidate_info": {
        "commit_hash": "6b8311a15a0fecbbade96c03a1f3a09ada9a2fb3",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/6b8311a15a0fecbbade96c03a1f3a09ada9a2fb3",
        "files": [
          "winpr/libwinpr/utils/lodepng/lodepng.c"
        ],
        "message": "Fixed BehaviorSanitizer warnings.\n\n(cherry picked from commit b5dfc15183b752a5d9c6da01225ed281b20001cf)",
        "before_after_code_files": [
          "winpr/libwinpr/utils/lodepng/lodepng.c||winpr/libwinpr/utils/lodepng/lodepng.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "winpr/libwinpr/utils/lodepng/lodepng.c||winpr/libwinpr/utils/lodepng/lodepng.c": [
          "File: winpr/libwinpr/utils/lodepng/lodepng.c -> winpr/libwinpr/utils/lodepng/lodepng.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "328: static unsigned lodepng_read32bitInt(const unsigned char* buffer)",
          "329: {",
          "331: }",
          "333: #if defined(LODEPNG_COMPILE_PNG) || defined(LODEPNG_COMPILE_ENCODER)",
          "",
          "[Removed Lines]",
          "330:  return (unsigned)((buffer[0] << 24) | (buffer[1] << 16) | (buffer[2] << 8) | buffer[3]);",
          "",
          "[Added Lines]",
          "330:  return (unsigned)(((unsigned)buffer[0] << 24) | ((unsigned)buffer[1] << 16) |",
          "331:                    ((unsigned)buffer[2] << 8) | buffer[3]);",
          "",
          "---------------"
        ]
      }
    }
  ]
}