{
  "cve_id": "CVE-2017-1000494",
  "cve_desc": "Uninitialized stack variable vulnerability in NameValueParserEndElt (upnpreplyparse.c) in miniupnpd < 2.0 allows an attacker to cause Denial of Service (Segmentation fault and Memory Corruption) or possibly have unspecified other impact",
  "repo": "miniupnp/miniupnp",
  "patch_hash": "7aeb624b44f86d335841242ff427433190e7168a",
  "patch_info": {
    "commit_hash": "7aeb624b44f86d335841242ff427433190e7168a",
    "repo": "miniupnp/miniupnp",
    "commit_url": "https://github.com/miniupnp/miniupnp/commit/7aeb624b44f86d335841242ff427433190e7168a",
    "files": [
      "miniupnpc/upnpreplyparse.c",
      "miniupnpd/upnpreplyparse.c"
    ],
    "message": "properly initialize data structure for SOAP parsing in ParseNameValue()\n\ntopelt field was not properly initialized.\n\nshould fix #268",
    "before_after_code_files": [
      "miniupnpc/upnpreplyparse.c||miniupnpc/upnpreplyparse.c",
      "miniupnpd/upnpreplyparse.c||miniupnpd/upnpreplyparse.c"
    ]
  },
  "patch_diff": {
    "miniupnpc/upnpreplyparse.c||miniupnpc/upnpreplyparse.c": [
      "File: miniupnpc/upnpreplyparse.c -> miniupnpc/upnpreplyparse.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "104:                struct NameValueParserData * data)",
      "105: {",
      "106:  struct xmlparser parser;",
      "111:  parser.xmlstart = buffer;",
      "112:  parser.xmlsize = bufsize;",
      "",
      "[Removed Lines]",
      "107:  data->l_head = NULL;",
      "108:  data->portListing = NULL;",
      "109:  data->portListingLength = 0;",
      "",
      "[Added Lines]",
      "108:  memset(data, 0, sizeof(struct NameValueParserData));",
      "",
      "---------------"
    ],
    "miniupnpd/upnpreplyparse.c||miniupnpd/upnpreplyparse.c": [
      "File: miniupnpd/upnpreplyparse.c -> miniupnpd/upnpreplyparse.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "104:                struct NameValueParserData * data)",
      "105: {",
      "106:  struct xmlparser parser;",
      "111:  parser.xmlstart = buffer;",
      "112:  parser.xmlsize = bufsize;",
      "",
      "[Removed Lines]",
      "107:  data->l_head = NULL;",
      "108:  data->portListing = NULL;",
      "109:  data->portListingLength = 0;",
      "",
      "[Added Lines]",
      "108:  memset(data, 0, sizeof(struct NameValueParserData));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a0573e251817ec090a8c9f9f41b56d720c835a6c",
      "candidate_info": {
        "commit_hash": "a0573e251817ec090a8c9f9f41b56d720c835a6c",
        "repo": "miniupnp/miniupnp",
        "commit_url": "https://github.com/miniupnp/miniupnp/commit/a0573e251817ec090a8c9f9f41b56d720c835a6c",
        "files": [
          "miniupnpc/minixml.c",
          "miniupnpd/minixml.c"
        ],
        "message": "minixml.c: fix heap buffer overflow\n\nshould fix #268",
        "before_after_code_files": [
          "miniupnpc/minixml.c||miniupnpc/minixml.c",
          "miniupnpd/minixml.c||miniupnpd/minixml.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "miniupnpc/minixml.c||miniupnpc/minixml.c": [
          "File: miniupnpc/minixml.c -> miniupnpc/minixml.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: All rights reserved.",
          "10: Redistribution and use in source and binary forms, with or without",
          "",
          "[Removed Lines]",
          "7: Copyright (c) 2005-2014, Thomas BERNARD",
          "",
          "[Added Lines]",
          "8: Copyright (c) 2005-2017, Thomas BERNARD",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:       if (p->xml >= p->xmlend)",
          "162:        return;",
          "163:      }",
          "165:      {",
          "167:       p->xml += 9;",
          "",
          "[Removed Lines]",
          "164:      if(memcmp(p->xml, \"<![CDATA[\", 9) == 0)",
          "",
          "[Added Lines]",
          "166:      if((p->xmlend >= (p->xml + (9 + 3))) && (memcmp(p->xml, \"<![CDATA[\", 9) == 0))",
          "",
          "---------------"
        ],
        "miniupnpd/minixml.c||miniupnpd/minixml.c": [
          "File: miniupnpd/minixml.c -> miniupnpd/minixml.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: All rights reserved.",
          "10: Redistribution and use in source and binary forms, with or without",
          "",
          "[Removed Lines]",
          "7: Copyright (c) 2005-2014, Thomas BERNARD",
          "",
          "[Added Lines]",
          "8: Copyright (c) 2005-2017, Thomas BERNARD",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:       if (p->xml >= p->xmlend)",
          "162:        return;",
          "163:      }",
          "165:      {",
          "167:       p->xml += 9;",
          "",
          "[Removed Lines]",
          "164:      if(memcmp(p->xml, \"<![CDATA[\", 9) == 0)",
          "",
          "[Added Lines]",
          "166:      if((p->xmlend >= (p->xml + (9 + 3))) && (memcmp(p->xml, \"<![CDATA[\", 9) == 0))",
          "",
          "---------------"
        ]
      }
    }
  ]
}