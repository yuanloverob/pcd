{
  "cve_id": "CVE-2015-4643",
  "cve_desc": "Integer overflow in the ftp_genlist function in ext/ftp/ftp.c in PHP before 5.4.42, 5.5.x before 5.5.26, and 5.6.x before 5.6.10 allows remote FTP servers to execute arbitrary code via a long reply to a LIST command, leading to a heap-based buffer overflow.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-4022.",
  "repo": "php/php-src",
  "patch_hash": "0765623d6991b62ffcd93ddb6be8a5203a2fa7e2",
  "patch_info": {
    "commit_hash": "0765623d6991b62ffcd93ddb6be8a5203a2fa7e2",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/0765623d6991b62ffcd93ddb6be8a5203a2fa7e2",
    "files": [
      "NEWS",
      "ext/ftp/ftp.c"
    ],
    "message": "improve fix for Bug #69545",
    "before_after_code_files": [
      "ext/ftp/ftp.c||ext/ftp/ftp.c"
    ]
  },
  "patch_diff": {
    "ext/ftp/ftp.c||ext/ftp/ftp.c": [
      "File: ext/ftp/ftp.c -> ext/ftp/ftp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1668:   for (ptr = data->buf; rcvd; rcvd--, ptr++) {",
      "1669:    if (*ptr == '\\n' && lastch == '\\r') {",
      "1670:     lines++;",
      "1673:    }",
      "1674:    lastch = *ptr;",
      "1675:   }",
      "",
      "[Removed Lines]",
      "1671:    } else {",
      "1672:     size++;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ac2832935435556dc593784cd0087b5e576bbe4d",
      "candidate_info": {
        "commit_hash": "ac2832935435556dc593784cd0087b5e576bbe4d",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/ac2832935435556dc593784cd0087b5e576bbe4d",
        "files": [
          "ext/ftp/ftp.c"
        ],
        "message": "Fix bug #69545 - avoid overflow when reading list",
        "before_after_code_files": [
          "ext/ftp/ftp.c||ext/ftp/ftp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "ext/ftp/ftp.c||ext/ftp/ftp.c"
          ],
          "candidate": [
            "ext/ftp/ftp.c||ext/ftp/ftp.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/ftp/ftp.c||ext/ftp/ftp.c": [
          "File: ext/ftp/ftp.c -> ext/ftp/ftp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:    SSL_shutdown(ftp->ssl_handle);",
          "189:    SSL_free(ftp->ssl_handle);",
          "190:   }",
          "192:   closesocket(ftp->fd);",
          "194:  ftp_gc(ftp);",
          "195:  efree(ftp);",
          "196:  return NULL;",
          "",
          "[Removed Lines]",
          "191: #endif",
          "193:  }",
          "",
          "[Added Lines]",
          "191: #endif",
          "193:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "325:    if (!ftp_getresp(ftp)) {",
          "326:     return 0;",
          "327:    }",
          "330:   }",
          "331:  }",
          "332: #endif",
          "",
          "[Removed Lines]",
          "329:    ftp->use_ssl_for_data = (ftp->resp >= 200 && ftp->resp <=299);",
          "",
          "[Added Lines]",
          "329:    ftp->use_ssl_for_data = (ftp->resp >= 200 && ftp->resp <=299);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "360: {",
          "361:  if (ftp == NULL) {",
          "362:   return 0;",
          "365:  ftp_gc(ftp);",
          "",
          "[Removed Lines]",
          "363:  }",
          "",
          "[Added Lines]",
          "363:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "395:  if (!ftp_putcmd(ftp, \"SYST\", NULL)) {",
          "396:   return NULL;",
          "397:  }",
          "399:   return NULL;",
          "400:  }",
          "401:  syst = ftp->inbuf;",
          "",
          "[Removed Lines]",
          "398:  if (!ftp_getresp(ftp) || ftp->resp != 215) {",
          "",
          "[Added Lines]",
          "398:  if (!ftp_getresp(ftp) || ftp->resp != 215) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "431:  if (!ftp_putcmd(ftp, \"PWD\", NULL)) {",
          "432:   return NULL;",
          "433:  }",
          "435:   return NULL;",
          "436:  }",
          "439:   return NULL;",
          "440:  }",
          "442:   return NULL;",
          "443:  }",
          "444:  ftp->pwd = estrndup(pwd, end - pwd);",
          "",
          "[Removed Lines]",
          "434:  if (!ftp_getresp(ftp) || ftp->resp != 257) {",
          "438:  if ((pwd = strchr(ftp->inbuf, '\"')) == NULL) {",
          "441:  if ((end = strrchr(++pwd, '\"')) == NULL) {",
          "",
          "[Added Lines]",
          "434:  if (!ftp_getresp(ftp) || ftp->resp != 257) {",
          "438:  if ((pwd = strchr(ftp->inbuf, '\"')) == NULL) {",
          "441:  if ((end = strrchr(++pwd, '\"')) == NULL) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "642:   return 0;",
          "643:  }",
          "646: }",
          "",
          "[Removed Lines]",
          "645:  return 1;",
          "",
          "[Added Lines]",
          "645:  return 1;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "674:  if (ftp == NULL) {",
          "675:   return 0;",
          "676:  }",
          "678:   return 1;",
          "679:  }",
          "680:  if (type == FTPTYPE_ASCII) {",
          "",
          "[Removed Lines]",
          "677:  if (type == ftp->type) {",
          "",
          "[Added Lines]",
          "677:  if (type == ftp->type) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "765:  if (!ftp_putcmd(ftp, \"PASV\", NULL)) {",
          "766:   return 0;",
          "767:  }",
          "769:   return 0;",
          "770:  }",
          "",
          "[Removed Lines]",
          "768:  if (!ftp_getresp(ftp) || ftp->resp != 227) {",
          "",
          "[Added Lines]",
          "768:  if (!ftp_getresp(ftp) || ftp->resp != 227) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "902:  if ((data = ftp_getdata(ftp TSRMLS_CC)) == NULL) {",
          "903:   goto bail;",
          "904:  }",
          "907:  if (startpos > 0) {",
          "908:   snprintf(arg, sizeof(arg), \"%ld\", startpos);",
          "",
          "[Removed Lines]",
          "905:  ftp->data = data;",
          "",
          "[Added Lines]",
          "905:  ftp->data = data;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1104:  if (strpbrk(cmd, \"\\r\\n\")) {",
          "1105:   return 0;",
          "1108:  if (args && args[0]) {",
          "",
          "[Removed Lines]",
          "1106:  }",
          "",
          "[Added Lines]",
          "1106:  }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1252: #if HAVE_OPENSSL_EXT",
          "1253:   if (ftp->use_ssl && ftp->fd == s && ftp->ssl_active) {",
          "1254:    sent = SSL_write(ftp->ssl_handle, buf, size);",
          "1256:    sent = SSL_write(ftp->data->ssl_handle, buf, size);",
          "1257:   } else {",
          "1258: #endif",
          "",
          "[Removed Lines]",
          "1255:   } else if (ftp->use_ssl && ftp->fd != s && ftp->use_ssl_for_data && ftp->data->ssl_active) {",
          "",
          "[Added Lines]",
          "1255:   } else if (ftp->use_ssl && ftp->fd != s && ftp->use_ssl_for_data && ftp->data->ssl_active) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1292: #if HAVE_OPENSSL_EXT",
          "1293:  if (ftp->use_ssl && ftp->fd == s && ftp->ssl_active) {",
          "1294:   nr_bytes = SSL_read(ftp->ssl_handle, buf, len);",
          "1296:   nr_bytes = SSL_read(ftp->data->ssl_handle, buf, len);",
          "1297:  } else {",
          "1298: #endif",
          "1299:   nr_bytes = recv(s, buf, len, 0);",
          "1300: #if HAVE_OPENSSL_EXT",
          "1301:  }",
          "1303:  return (nr_bytes);",
          "1304: }",
          "",
          "[Removed Lines]",
          "1295:  } else if (ftp->use_ssl && ftp->fd != s && ftp->use_ssl_for_data && ftp->data->ssl_active) {",
          "1302: #endif",
          "",
          "[Added Lines]",
          "1295:  } else if (ftp->use_ssl && ftp->fd != s && ftp->use_ssl_for_data && ftp->data->ssl_active) {",
          "1302: #endif",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1536:    SSL_CTX_free(ctx);",
          "1537:    return 0;",
          "1538:   }",
          "1541:   SSL_set_fd(data->ssl_handle, data->fd);",
          "1543:   if (ftp->old_ssl) {",
          "1544:    SSL_copy_session_id(data->ssl_handle, ftp->ssl_handle);",
          "1545:   }",
          "1547:   if (SSL_connect(data->ssl_handle) <= 0) {",
          "1548:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"data_accept: SSL/TLS handshake failed\");",
          "1549:    SSL_shutdown(data->ssl_handle);",
          "1550:    SSL_free(data->ssl_handle);",
          "1551:    return 0;",
          "1552:   }",
          "1554:   data->ssl_active = 1;",
          "1557: #endif",
          "",
          "[Removed Lines]",
          "1555:  }",
          "",
          "[Added Lines]",
          "1555:  }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1567: {",
          "1568: #if HAVE_OPENSSL_EXT",
          "1569:  SSL_CTX  *ctx;",
          "1571:  if (data == NULL) {",
          "1572:   return NULL;",
          "1573:  }",
          "1574:  if (data->listener != -1) {",
          "1575: #if HAVE_OPENSSL_EXT",
          "1576:   if (data->ssl_active) {",
          "1578:    ctx = SSL_get_SSL_CTX(data->ssl_handle);",
          "1579:    SSL_CTX_free(ctx);",
          "",
          "[Removed Lines]",
          "1570: #endif",
          "",
          "[Added Lines]",
          "1570: #endif",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1582:    SSL_free(data->ssl_handle);",
          "1583:    data->ssl_active = 0;",
          "1584:   }",
          "1586:   closesocket(data->listener);",
          "1588:  if (data->fd != -1) {",
          "1589: #if HAVE_OPENSSL_EXT",
          "1590:   if (data->ssl_active) {",
          "",
          "[Removed Lines]",
          "1585: #endif",
          "1587:  }",
          "",
          "[Added Lines]",
          "1585: #endif",
          "1587:  }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1595:    SSL_free(data->ssl_handle);",
          "1596:    data->ssl_active = 0;",
          "1597:   }",
          "1599:   closesocket(data->fd);",
          "1601:  if (ftp) {",
          "1602:   ftp->data = NULL;",
          "1603:  }",
          "",
          "[Removed Lines]",
          "1598: #endif",
          "1600:  }",
          "",
          "[Added Lines]",
          "1598: #endif",
          "1600:  }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1615:  databuf_t *data = NULL;",
          "1616:  char  *ptr;",
          "1617:  int  ch, lastch;",
          "1620:  char  **ret = NULL;",
          "1621:  char  **entry;",
          "1622:  char  *text;",
          "",
          "[Removed Lines]",
          "1618:  int  size, rcvd;",
          "1619:  int  lines;",
          "",
          "[Added Lines]",
          "1618:  size_t  size, rcvd;",
          "1619:  size_t  lines;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1634:  if ((data = ftp_getdata(ftp TSRMLS_CC)) == NULL) {",
          "1635:   goto bail;",
          "1636:  }",
          "1639:  if (!ftp_putcmd(ftp, cmd, path)) {",
          "1640:   goto bail;",
          "",
          "[Removed Lines]",
          "1637:  ftp->data = data;",
          "",
          "[Added Lines]",
          "1637:  ftp->data = data;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1658:  lines = 0;",
          "1659:  lastch = 0;",
          "1660:  while ((rcvd = my_recv(ftp, data->fd, data->buf, FTP_BUFSIZE))) {",
          "1662:    goto bail;",
          "1663:   }",
          "",
          "[Removed Lines]",
          "1661:   if (rcvd == -1) {",
          "",
          "[Added Lines]",
          "1661:   if (rcvd == -1 || rcvd > ((size_t)(-1))-size) {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1863:  if (!ftp_getresp(ftp) || (ftp->resp != 150 && ftp->resp != 125)) {",
          "1864:   goto bail;",
          "1865:  }",
          "1867:   goto bail;",
          "1868:  }",
          "1869:  ftp->data = data;",
          "",
          "[Removed Lines]",
          "1866:  if ((data = data_accept(data, ftp TSRMLS_CC)) == NULL) {",
          "",
          "[Added Lines]",
          "1866:  if ((data = data_accept(data, ftp TSRMLS_CC)) == NULL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "08d148c5c3997c6d8ffa69f7a472fff4b405d24a",
      "candidate_info": {
        "commit_hash": "08d148c5c3997c6d8ffa69f7a472fff4b405d24a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/08d148c5c3997c6d8ffa69f7a472fff4b405d24a",
        "files": [
          "ext/ftp/ftp.c"
        ],
        "message": "improve fix for Bug #69545",
        "before_after_code_files": [
          "ext/ftp/ftp.c||ext/ftp/ftp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/ftp/ftp.c||ext/ftp/ftp.c"
          ],
          "candidate": [
            "ext/ftp/ftp.c||ext/ftp/ftp.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/ftp/ftp.c||ext/ftp/ftp.c": [
          "File: ext/ftp/ftp.c -> ext/ftp/ftp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1663:   for (ptr = data->buf; rcvd; rcvd--, ptr++) {",
          "1664:    if (*ptr == '\\n' && lastch == '\\r') {",
          "1665:     lines++;",
          "1668:    }",
          "1669:    lastch = *ptr;",
          "1670:   }",
          "",
          "[Removed Lines]",
          "1666:    } else {",
          "1667:     size++;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8b7149636a9a3fb344ff7a970ef13c5a672fa08a",
      "candidate_info": {
        "commit_hash": "8b7149636a9a3fb344ff7a970ef13c5a672fa08a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/8b7149636a9a3fb344ff7a970ef13c5a672fa08a",
        "files": [
          "ext/ftp/ftp.c"
        ],
        "message": "improve fix for Bug #69545",
        "before_after_code_files": [
          "ext/ftp/ftp.c||ext/ftp/ftp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/ftp/ftp.c||ext/ftp/ftp.c"
          ],
          "candidate": [
            "ext/ftp/ftp.c||ext/ftp/ftp.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/ftp/ftp.c||ext/ftp/ftp.c": [
          "File: ext/ftp/ftp.c -> ext/ftp/ftp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1663:   for (ptr = data->buf; rcvd; rcvd--, ptr++) {",
          "1664:    if (*ptr == '\\n' && lastch == '\\r') {",
          "1665:     lines++;",
          "1668:    }",
          "1669:    lastch = *ptr;",
          "1670:   }",
          "",
          "[Removed Lines]",
          "1666:    } else {",
          "1667:     size++;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}