{
  "cve_id": "CVE-2020-11089",
  "cve_desc": "In FreeRDP before 2.1.0, there is an out-of-bound read in irp functions (parallel_process_irp_create, serial_process_irp_create, drive_process_irp_write, printer_process_irp_write, rdpei_recv_pdu, serial_process_irp_write). This has been fixed in 2.1.0.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "795842f4096501fcefc1a7f535ccc8132feb31d7",
  "patch_info": {
    "commit_hash": "795842f4096501fcefc1a7f535ccc8132feb31d7",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/795842f4096501fcefc1a7f535ccc8132feb31d7",
    "files": [
      "channels/parallel/client/parallel_main.c"
    ],
    "message": "Fixed oob read in parallel_process_irp_create",
    "before_after_code_files": [
      "channels/parallel/client/parallel_main.c||channels/parallel/client/parallel_main.c"
    ]
  },
  "patch_diff": {
    "channels/parallel/client/parallel_main.c||channels/parallel/client/parallel_main.c": [
      "File: channels/parallel/client/parallel_main.c -> channels/parallel/client/parallel_main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "83: {",
      "84:  char* path = NULL;",
      "85:  int status;",
      "86:  UINT32 PathLength;",
      "90:  Stream_Read_UINT32(irp->input, PathLength);",
      "94:  if (status < 1)",
      "95:   if (!(path = (char*)calloc(1, 1)))",
      "",
      "[Removed Lines]",
      "87:  Stream_Seek(irp->input, 28);",
      "91:  status = ConvertFromUnicode(CP_UTF8, 0, (WCHAR*)Stream_Pointer(irp->input), PathLength / 2,",
      "92:                              &path, 0, NULL, NULL);",
      "",
      "[Added Lines]",
      "86:  WCHAR* ptr;",
      "88:  if (!Stream_SafeSeek(irp->input, 28))",
      "89:   return ERROR_INVALID_DATA;",
      "92:  if (Stream_GetRemainingLength(irp->input) < 4)",
      "93:   return ERROR_INVALID_DATA;",
      "95:  ptr = (WCHAR*)Stream_Pointer(irp->input);",
      "96:  if (!Stream_SafeSeek(irp->input, PathLength))",
      "97:   return ERROR_INVALID_DATA;",
      "98:  status = ConvertFromUnicode(CP_UTF8, 0, ptr, PathLength / 2, &path, 0, NULL, NULL);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b375d84ed6ea37387d21bd1d0ddc897e0e71de5a",
      "candidate_info": {
        "commit_hash": "b375d84ed6ea37387d21bd1d0ddc897e0e71de5a",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/b375d84ed6ea37387d21bd1d0ddc897e0e71de5a",
        "files": [
          "channels/parallel/client/parallel_main.c"
        ],
        "message": "Fixed oob read in parallel_process_irp_create",
        "before_after_code_files": [
          "channels/parallel/client/parallel_main.c||channels/parallel/client/parallel_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "channels/parallel/client/parallel_main.c||channels/parallel/client/parallel_main.c"
          ],
          "candidate": [
            "channels/parallel/client/parallel_main.c||channels/parallel/client/parallel_main.c"
          ]
        }
      },
      "candidate_diff": {
        "channels/parallel/client/parallel_main.c||channels/parallel/client/parallel_main.c": [
          "File: channels/parallel/client/parallel_main.c -> channels/parallel/client/parallel_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: {",
          "84:  char* path = NULL;",
          "85:  int status;",
          "86:  UINT32 PathLength;",
          "90:  Stream_Read_UINT32(irp->input, PathLength);",
          "94:  if (status < 1)",
          "95:   if (!(path = (char*)calloc(1, 1)))",
          "",
          "[Removed Lines]",
          "87:  Stream_Seek(irp->input, 28);",
          "91:  status = ConvertFromUnicode(CP_UTF8, 0, (WCHAR*)Stream_Pointer(irp->input), PathLength / 2,",
          "92:                              &path, 0, NULL, NULL);",
          "",
          "[Added Lines]",
          "86:  WCHAR* ptr;",
          "88:  if (!Stream_SafeSeek(irp->input, 28))",
          "89:   return ERROR_INVALID_DATA;",
          "92:  if (Stream_GetRemainingLength(irp->input) < 4)",
          "93:   return ERROR_INVALID_DATA;",
          "95:  ptr = (WCHAR*)Stream_Pointer(irp->input);",
          "96:  if (!Stream_SafeSeek(irp->input, PathLength))",
          "97:   return ERROR_INVALID_DATA;",
          "98:  status = ConvertFromUnicode(CP_UTF8, 0, ptr, PathLength / 2, &path, 0, NULL, NULL);",
          "",
          "---------------"
        ]
      }
    }
  ]
}