{
  "cve_id": "CVE-2015-0204",
  "cve_desc": "The ssl3_get_key_exchange function in s3_clnt.c in OpenSSL before 0.9.8zd, 1.0.0 before 1.0.0p, and 1.0.1 before 1.0.1k allows remote SSL servers to conduct RSA-to-EXPORT_RSA downgrade attacks and facilitate brute-force decryption by offering a weak ephemeral RSA key in a noncompliant role, related to the \"FREAK\" issue.  NOTE: the scope of this CVE is only client code based on OpenSSL, not EXPORT_RSA issues associated with servers or other TLS implementations.",
  "repo": "openssl/openssl",
  "patch_hash": "ce325c60c74b0fa784f5872404b722e120e5cab0",
  "patch_info": {
    "commit_hash": "ce325c60c74b0fa784f5872404b722e120e5cab0",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/ce325c60c74b0fa784f5872404b722e120e5cab0",
    "files": [
      "CHANGES",
      "doc/ssl/SSL_CTX_set_options.pod",
      "doc/ssl/SSL_CTX_set_tmp_rsa_callback.pod",
      "ssl/d1_srvr.c",
      "ssl/s3_clnt.c",
      "ssl/s3_srvr.c",
      "ssl/ssl.h"
    ],
    "message": "Only allow ephemeral RSA keys in export ciphersuites.\n\nOpenSSL clients would tolerate temporary RSA keys in non-export\nciphersuites. It also had an option SSL_OP_EPHEMERAL_RSA which\nenabled this server side. Remove both options as they are a\nprotocol violation.\n\nThanks to Karthikeyan Bhargavan for reporting this issue.\n(CVE-2015-0204)\nReviewed-by: Matt Caswell <matt@openssl.org>",
    "before_after_code_files": [
      "ssl/d1_srvr.c||ssl/d1_srvr.c",
      "ssl/s3_clnt.c||ssl/s3_clnt.c",
      "ssl/s3_srvr.c||ssl/s3_srvr.c",
      "ssl/ssl.h||ssl/ssl.h"
    ]
  },
  "patch_diff": {
    "ssl/d1_srvr.c||ssl/d1_srvr.c": [
      "File: ssl/d1_srvr.c -> ssl/d1_srvr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "472:   case SSL3_ST_SW_KEY_EXCH_B:",
      "473:    alg_k = s->s3->tmp.new_cipher->algorithm_mkey;",
      "495: #ifndef OPENSSL_NO_PSK",
      "",
      "[Removed Lines]",
      "477:    if ((s->options & SSL_OP_EPHEMERAL_RSA)",
      "478: #ifndef OPENSSL_NO_KRB5",
      "479:     && !(alg_k & SSL_kKRB5)",
      "481:     )",
      "486:     s->s3->tmp.use_rsa_tmp=1;",
      "487:    else",
      "488:     s->s3->tmp.use_rsa_tmp=0;",
      "492:    if (s->s3->tmp.use_rsa_tmp",
      "",
      "[Added Lines]",
      "479:    s->s3->tmp.use_rsa_tmp=0;",
      "483:    if (",
      "",
      "---------------"
    ],
    "ssl/s3_clnt.c||ssl/s3_clnt.c": [
      "File: ssl/s3_clnt.c -> ssl/s3_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1636: #ifndef OPENSSL_NO_RSA",
      "1637:  if (alg_k & SSL_kRSA)",
      "1638:   {",
      "1639:   if ((rsa=RSA_new()) == NULL)",
      "1640:    {",
      "1641:    SSLerr(SSL_F_SSL3_GET_KEY_EXCHANGE,ERR_R_MALLOC_FAILURE);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1640:   if (!SSL_C_IS_EXPORT(s->s3->tmp.new_cipher))",
      "1641:    {",
      "1642:    al=SSL_AD_UNEXPECTED_MESSAGE;",
      "1643:    SSLerr(SSL_F_SSL3_GET_SERVER_CERTIFICATE,SSL_R_UNEXPECTED_MESSAGE);",
      "1644:    goto f_err;",
      "1645:    }",
      "",
      "---------------"
    ],
    "ssl/s3_srvr.c||ssl/s3_srvr.c": [
      "File: ssl/s3_srvr.c -> ssl/s3_srvr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "453:   case SSL3_ST_SW_KEY_EXCH_B:",
      "454:    alg_k = s->s3->tmp.new_cipher->algorithm_mkey;",
      "",
      "[Removed Lines]",
      "458:    if ((s->options & SSL_OP_EPHEMERAL_RSA)",
      "459: #ifndef OPENSSL_NO_KRB5",
      "460:     && !(alg_k & SSL_kKRB5)",
      "462:     )",
      "467:     s->s3->tmp.use_rsa_tmp=1;",
      "468:    else",
      "469:     s->s3->tmp.use_rsa_tmp=0;",
      "",
      "[Added Lines]",
      "460:    s->s3->tmp.use_rsa_tmp=0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "486: #ifndef OPENSSL_NO_PSK",
      "",
      "[Removed Lines]",
      "483:    if (s->s3->tmp.use_rsa_tmp",
      "",
      "[Added Lines]",
      "474:    if (",
      "",
      "---------------"
    ],
    "ssl/ssl.h||ssl/ssl.h": [
      "File: ssl/ssl.h -> ssl/ssl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "606: #define SSL_OP_SINGLE_ECDH_USE    0x00080000L",
      "608: #define SSL_OP_SINGLE_DH_USE    0x00100000L",
      "614: #define SSL_OP_CIPHER_SERVER_PREFERENCE   0x00400000L",
      "",
      "[Removed Lines]",
      "611: #define SSL_OP_EPHEMERAL_RSA    0x00200000L",
      "",
      "[Added Lines]",
      "610: #define SSL_OP_EPHEMERAL_RSA    0x0",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "72f181539118828ca966a0f8d03f6428e2bcf0d6",
      "candidate_info": {
        "commit_hash": "72f181539118828ca966a0f8d03f6428e2bcf0d6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/72f181539118828ca966a0f8d03f6428e2bcf0d6",
        "files": [
          "CHANGES",
          "doc/ssl/SSL_CTX_set_options.pod",
          "doc/ssl/SSL_CTX_set_tmp_rsa_callback.pod",
          "ssl/d1_srvr.c",
          "ssl/s3_clnt.c",
          "ssl/s3_srvr.c",
          "ssl/ssl.h"
        ],
        "message": "Only allow ephemeral RSA keys in export ciphersuites.\n\nOpenSSL clients would tolerate temporary RSA keys in non-export\nciphersuites. It also had an option SSL_OP_EPHEMERAL_RSA which\nenabled this server side. Remove both options as they are a\nprotocol violation.\n\nThanks to Karthikeyan Bhargavan for reporting this issue.\n(CVE-2015-0204)\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Tim Hudson <tjh@openssl.org>\n\n(cherry picked from commit 4b4c1fcc88aec8c9e001b0a0077d3cd4de1ed0e6)\n\nConflicts:\n\tCHANGES\n\tdoc/ssl/SSL_CTX_set_options.pod\n\tssl/d1_srvr.c\n\tssl/s3_srvr.c",
        "before_after_code_files": [
          "ssl/d1_srvr.c||ssl/d1_srvr.c",
          "ssl/s3_clnt.c||ssl/s3_clnt.c",
          "ssl/s3_srvr.c||ssl/s3_srvr.c",
          "ssl/ssl.h||ssl/ssl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/d1_srvr.c||ssl/d1_srvr.c",
            "ssl/s3_clnt.c||ssl/s3_clnt.c",
            "ssl/s3_srvr.c||ssl/s3_srvr.c",
            "ssl/ssl.h||ssl/ssl.h"
          ],
          "candidate": [
            "ssl/d1_srvr.c||ssl/d1_srvr.c",
            "ssl/s3_clnt.c||ssl/s3_clnt.c",
            "ssl/s3_srvr.c||ssl/s3_srvr.c",
            "ssl/ssl.h||ssl/ssl.h"
          ]
        }
      },
      "candidate_diff": {
        "ssl/d1_srvr.c||ssl/d1_srvr.c": [
          "File: ssl/d1_srvr.c -> ssl/d1_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "391:        || ((l & SSL_kRSA)",
          "392:     && (s->cert->pkeys[SSL_PKEY_RSA_ENC].privatekey == NULL",
          "393:         || (SSL_C_IS_EXPORT(s->s3->tmp.new_cipher)",
          "",
          "[Removed Lines]",
          "374:    if ((s->options & SSL_OP_EPHEMERAL_RSA)",
          "375: #ifndef OPENSSL_NO_KRB5",
          "376:     && !(l & SSL_KRB5)",
          "378:     )",
          "383:     s->s3->tmp.use_rsa_tmp=1;",
          "384:    else",
          "385:     s->s3->tmp.use_rsa_tmp=0;",
          "389:    if (s->s3->tmp.use_rsa_tmp",
          "390:        || (l & (SSL_DH|SSL_kFZA))",
          "",
          "[Added Lines]",
          "374:    s->s3->tmp.use_rsa_tmp=0;",
          "378:    if ((l & (SSL_DH|SSL_kFZA))",
          "",
          "---------------"
        ],
        "ssl/s3_clnt.c||ssl/s3_clnt.c": [
          "File: ssl/s3_clnt.c -> ssl/s3_clnt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1180: #ifndef OPENSSL_NO_RSA",
          "1181:  if (alg & SSL_kRSA)",
          "1182:   {",
          "1183:   if ((rsa=RSA_new()) == NULL)",
          "1184:    {",
          "1185:    SSLerr(SSL_F_SSL3_GET_KEY_EXCHANGE,ERR_R_MALLOC_FAILURE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1184:   if (!SSL_C_IS_EXPORT(s->s3->tmp.new_cipher))",
          "1185:    {",
          "1186:    al=SSL_AD_UNEXPECTED_MESSAGE;",
          "1187:    SSLerr(SSL_F_SSL3_GET_SERVER_CERTIFICATE,SSL_R_UNEXPECTED_MESSAGE);",
          "1188:    goto f_err;",
          "1189:    }",
          "",
          "---------------"
        ],
        "ssl/s3_srvr.c||ssl/s3_srvr.c": [
          "File: ssl/s3_srvr.c -> ssl/s3_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "358:    if ((s->options & SSL_OP_EPHEMERAL_RSA)",
          "359: #ifndef OPENSSL_NO_KRB5",
          "360:     && !(l & SSL_KRB5)",
          "362:     )",
          "367:     s->s3->tmp.use_rsa_tmp=1;",
          "368:    else",
          "369:     s->s3->tmp.use_rsa_tmp=0;",
          "",
          "[Added Lines]",
          "358:    s->s3->tmp.use_rsa_tmp=0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "383:        || (l & (SSL_DH|SSL_kFZA))",
          "384:        || ((l & SSL_kRSA)",
          "385:     && (s->cert->pkeys[SSL_PKEY_RSA_ENC].privatekey == NULL",
          "",
          "[Removed Lines]",
          "381:    if (s->s3->tmp.use_rsa_tmp",
          "382:        || (l & SSL_kECDHE)",
          "",
          "[Added Lines]",
          "370:    if ((l & SSL_kECDHE)",
          "",
          "---------------"
        ],
        "ssl/ssl.h||ssl/ssl.h": [
          "File: ssl/ssl.h -> ssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "526: #define SSL_OP_SINGLE_ECDH_USE    0x00080000L",
          "528: #define SSL_OP_SINGLE_DH_USE    0x00100000L",
          "534: #define SSL_OP_CIPHER_SERVER_PREFERENCE   0x00400000L",
          "",
          "[Removed Lines]",
          "531: #define SSL_OP_EPHEMERAL_RSA    0x00200000L",
          "",
          "[Added Lines]",
          "530: #define SSL_OP_EPHEMERAL_RSA    0x0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37580f43b5a39f5f4e920d17273fab9713d3a744",
      "candidate_info": {
        "commit_hash": "37580f43b5a39f5f4e920d17273fab9713d3a744",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/37580f43b5a39f5f4e920d17273fab9713d3a744",
        "files": [
          "CHANGES",
          "doc/ssl/SSL_CTX_set_options.pod",
          "doc/ssl/SSL_CTX_set_tmp_rsa_callback.pod",
          "ssl/d1_srvr.c",
          "ssl/s3_clnt.c",
          "ssl/s3_srvr.c",
          "ssl/ssl.h"
        ],
        "message": "Only allow ephemeral RSA keys in export ciphersuites.\n\nOpenSSL clients would tolerate temporary RSA keys in non-export\nciphersuites. It also had an option SSL_OP_EPHEMERAL_RSA which\nenabled this server side. Remove both options as they are a\nprotocol violation.\n\nThanks to Karthikeyan Bhargavan for reporting this issue.\n(CVE-2015-0204)\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Tim Hudson <tjh@openssl.org>\n\n(cherry picked from commit 4b4c1fcc88aec8c9e001b0a0077d3cd4de1ed0e6)\n\nConflicts:\n\tdoc/ssl/SSL_CTX_set_options.pod",
        "before_after_code_files": [
          "ssl/d1_srvr.c||ssl/d1_srvr.c",
          "ssl/s3_clnt.c||ssl/s3_clnt.c",
          "ssl/s3_srvr.c||ssl/s3_srvr.c",
          "ssl/ssl.h||ssl/ssl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ssl/d1_srvr.c||ssl/d1_srvr.c",
            "ssl/s3_clnt.c||ssl/s3_clnt.c",
            "ssl/s3_srvr.c||ssl/s3_srvr.c",
            "ssl/ssl.h||ssl/ssl.h"
          ],
          "candidate": [
            "ssl/d1_srvr.c||ssl/d1_srvr.c",
            "ssl/s3_clnt.c||ssl/s3_clnt.c",
            "ssl/s3_srvr.c||ssl/s3_srvr.c",
            "ssl/ssl.h||ssl/ssl.h"
          ]
        }
      },
      "candidate_diff": {
        "ssl/d1_srvr.c||ssl/d1_srvr.c": [
          "File: ssl/d1_srvr.c -> ssl/d1_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "454:   case SSL3_ST_SW_KEY_EXCH_B:",
          "455:    alg_k = s->s3->tmp.new_cipher->algorithm_mkey;",
          "477: #ifndef OPENSSL_NO_PSK",
          "",
          "[Removed Lines]",
          "459:    if ((s->options & SSL_OP_EPHEMERAL_RSA)",
          "460: #ifndef OPENSSL_NO_KRB5",
          "461:     && !(alg_k & SSL_kKRB5)",
          "463:     )",
          "468:     s->s3->tmp.use_rsa_tmp=1;",
          "469:    else",
          "470:     s->s3->tmp.use_rsa_tmp=0;",
          "474:    if (s->s3->tmp.use_rsa_tmp",
          "",
          "[Added Lines]",
          "461:    s->s3->tmp.use_rsa_tmp=0;",
          "465:    if (0",
          "",
          "---------------"
        ],
        "ssl/s3_clnt.c||ssl/s3_clnt.c": [
          "File: ssl/s3_clnt.c -> ssl/s3_clnt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1537: #ifndef OPENSSL_NO_RSA",
          "1538:  if (alg_k & SSL_kRSA)",
          "1539:   {",
          "1540:   if ((rsa=RSA_new()) == NULL)",
          "1541:    {",
          "1542:    SSLerr(SSL_F_SSL3_GET_KEY_EXCHANGE,ERR_R_MALLOC_FAILURE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1541:   if (!SSL_C_IS_EXPORT(s->s3->tmp.new_cipher))",
          "1542:    {",
          "1543:    al=SSL_AD_UNEXPECTED_MESSAGE;",
          "1544:    SSLerr(SSL_F_SSL3_GET_SERVER_CERTIFICATE,SSL_R_UNEXPECTED_MESSAGE);",
          "1545:    goto f_err;",
          "1546:    }",
          "",
          "---------------"
        ],
        "ssl/s3_srvr.c||ssl/s3_srvr.c": [
          "File: ssl/s3_srvr.c -> ssl/s3_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "447:   case SSL3_ST_SW_KEY_EXCH_B:",
          "448:    alg_k = s->s3->tmp.new_cipher->algorithm_mkey;",
          "",
          "[Removed Lines]",
          "452:    if ((s->options & SSL_OP_EPHEMERAL_RSA)",
          "453: #ifndef OPENSSL_NO_KRB5",
          "454:     && !(alg_k & SSL_kKRB5)",
          "456:     )",
          "461:     s->s3->tmp.use_rsa_tmp=1;",
          "462:    else",
          "463:     s->s3->tmp.use_rsa_tmp=0;",
          "",
          "[Added Lines]",
          "454:    s->s3->tmp.use_rsa_tmp=0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "480: #ifndef OPENSSL_NO_PSK",
          "",
          "[Removed Lines]",
          "477:    if (s->s3->tmp.use_rsa_tmp",
          "",
          "[Added Lines]",
          "468:    if (0",
          "",
          "---------------"
        ],
        "ssl/ssl.h||ssl/ssl.h": [
          "File: ssl/ssl.h -> ssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "596: #define SSL_OP_SINGLE_ECDH_USE    0x00080000L",
          "598: #define SSL_OP_SINGLE_DH_USE    0x00100000L",
          "604: #define SSL_OP_CIPHER_SERVER_PREFERENCE   0x00400000L",
          "",
          "[Removed Lines]",
          "601: #define SSL_OP_EPHEMERAL_RSA    0x00200000L",
          "",
          "[Added Lines]",
          "600: #define SSL_OP_EPHEMERAL_RSA    0x0",
          "",
          "---------------"
        ]
      }
    }
  ]
}