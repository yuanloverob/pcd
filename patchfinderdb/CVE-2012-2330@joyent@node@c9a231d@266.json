{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5871c81181bc339e2265e56e1ba58bf3be73708d",
      "candidate_info": {
        "commit_hash": "5871c81181bc339e2265e56e1ba58bf3be73708d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5871c81181bc339e2265e56e1ba58bf3be73708d",
        "files": [
          "lib/http.js"
        ],
        "message": "Add HTTP Status codes from RFC 6585\n\nSee: http://tools.ietf.org/html/rfc6585",
        "before_after_code_files": [
          "lib/http.js||lihttp.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:   424 : 'Failed Dependency',          // RFC 4918",
          "222:   425 : 'Unordered Collection',       // RFC 4918",
          "223:   426 : 'Upgrade Required',           // RFC 2817",
          "224:   500 : 'Internal Server Error',",
          "225:   501 : 'Not Implemented',",
          "226:   502 : 'Bad Gateway',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230:   506 : 'Variant Also Negotiates',    // RFC 2295",
          "231:   507 : 'Insufficient Storage',       // RFC 4918",
          "232:   509 : 'Bandwidth Limit Exceeded',",
          "234: };",
          "",
          "[Removed Lines]",
          "233:   510 : 'Not Extended'                // RFC 2774",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f62441367fbe23116faf800848d73036ad0b5ffd",
      "candidate_info": {
        "commit_hash": "f62441367fbe23116faf800848d73036ad0b5ffd",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f62441367fbe23116faf800848d73036ad0b5ffd",
        "files": [
          "common.gypi"
        ],
        "message": "x64 target should always pass -m64",
        "before_after_code_files": [
          "common.gypi||common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:             'cflags': [ '-m32' ],",
          "146:             'ldflags': [ '-m32' ],",
          "147:           }],",
          "148:           [ 'OS==\"linux\"', {",
          "149:             'ldflags': [ '-rdynamic' ],",
          "150:           }],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:           [ 'target_arch==\"x64\"', {",
          "149:             'cflags': [ '-m64' ],",
          "150:             'ldflags': [ '-m64' ],",
          "151:           }],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c781f17742170f2e127f9ee6652c56b406c30586",
      "candidate_info": {
        "commit_hash": "c781f17742170f2e127f9ee6652c56b406c30586",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c781f17742170f2e127f9ee6652c56b406c30586",
        "files": [
          "src/node.js"
        ],
        "message": "debug: Wait 50ms before running the main module",
        "before_after_code_files": [
          "src/node.js||src/node.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:       }",
          "91:       var Module = NativeModule.require('module');",
          "97:     } else {",
          "98:       var Module = NativeModule.require('module');",
          "",
          "[Removed Lines]",
          "95:       process.nextTick(Module.runMain);",
          "",
          "[Added Lines]",
          "93:       if (global.v8debug &&",
          "94:           process.execArgv.some(function(arg) {",
          "95:             return arg.match(/^--debug-brk(=[0-9]*)?$/);",
          "96:           })) {",
          "109:         setTimeout(Module.runMain, 50);",
          "111:       } else {",
          "115:         process.nextTick(Module.runMain);",
          "116:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb47a337ba20239973b41d17b894f29543596054",
      "candidate_info": {
        "commit_hash": "fb47a337ba20239973b41d17b894f29543596054",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/fb47a337ba20239973b41d17b894f29543596054",
        "files": [
          "test/common.js"
        ],
        "message": "test: changed instances of == to ===",
        "before_after_code_files": [
          "test/common.js||test/common.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/common.js||test/common.js": [
          "File: test/common.js -> test/common.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: exports.tmpDir = path.join(exports.testDir, 'tmp');",
          "29: exports.PORT = 12346;",
          "32:   exports.PIPE = '\\\\\\\\.\\\\pipe\\\\libuv-test';",
          "33: } else {",
          "34:   exports.PIPE = exports.tmpDir + '/test.sock';",
          "",
          "[Removed Lines]",
          "31: if (process.platform == 'win32') {",
          "",
          "[Added Lines]",
          "31: if (process.platform === 'win32') {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55: exports.ddCommand = function(filename, kilobytes) {",
          "57:     var p = path.resolve(exports.fixturesDir, 'create-file.js');",
          "58:     return '\"' + process.argv[0] + '\" \"' + p + '\" \"' +",
          "59:            filename + '\" ' + (kilobytes * 1024);",
          "",
          "[Removed Lines]",
          "56:   if (process.platform == 'win32') {",
          "",
          "[Added Lines]",
          "56:   if (process.platform === 'win32') {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "66: exports.spawnPwd = function(options) {",
          "67:   var spawn = require('child_process').spawn;",
          "70:     return spawn('cmd.exe', ['/c', 'cd'], options);",
          "71:   } else {",
          "72:     return spawn('pwd', [], options);",
          "",
          "[Removed Lines]",
          "69:   if (process.platform == 'win32') {",
          "",
          "[Added Lines]",
          "69:   if (process.platform === 'win32') {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2cdf427dce90d258d162eb308a0685e94ea78a73",
      "candidate_info": {
        "commit_hash": "2cdf427dce90d258d162eb308a0685e94ea78a73",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2cdf427dce90d258d162eb308a0685e94ea78a73",
        "files": [
          "src/signal_wrap.cc"
        ],
        "message": "signal_wrap: fix unused variable compiler warning",
        "before_after_code_files": [
          "src/signal_wrap.cc||src/signal_wrap.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/signal_wrap.cc||src/signal_wrap.cc": [
          "File: src/signal_wrap.cc -> src/signal_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:     assert(args.IsConstructCall());",
          "74:     HandleScope scope;",
          "77:     return scope.Close(args.This());",
          "78:   }",
          "",
          "[Removed Lines]",
          "75:     SignalWrap* wrap = new SignalWrap(args.This());",
          "",
          "[Added Lines]",
          "75:     new SignalWrap(args.This());",
          "",
          "---------------"
        ]
      }
    }
  ]
}