{
  "cve_id": "CVE-2015-3814",
  "cve_desc": "The (1) dissect_tfs_request and (2) dissect_tfs_response functions in epan/dissectors/packet-ieee80211.c in the IEEE 802.11 dissector in Wireshark 1.10.x before 1.10.14 and 1.12.x before 1.12.5 interpret a zero value as a length rather than an error condition, which allows remote attackers to cause a denial of service (infinite loop) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "e243b0041328980a9bbd43bb8a8166d7422f9096",
  "patch_info": {
    "commit_hash": "e243b0041328980a9bbd43bb8a8166d7422f9096",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/e243b0041328980a9bbd43bb8a8166d7422f9096",
    "files": [
      "epan/dissectors/packet-ieee80211.c"
    ],
    "message": "[IEEE 802.11] fix two potential endless loops\n\nadd_tagged_field() may return 0 if the tag length is not what is\nexpected for this particular tag\n\nBug: 11110\n\nChange-Id: Ia2fd6635613fb6d8e1264147d2ddd44162484887\nReviewed-on: https://code.wireshark.org/review/7989\nReviewed-by: Martin Kaiser <wireshark@kaiser.cx>",
    "before_after_code_files": [
      "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c": [
      "File: epan/dissectors/packet-ieee80211.c -> epan/dissectors/packet-ieee80211.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "12290:       s_end = offset + len;",
      "12291:       while (s_offset < s_end) {",
      "12292:         int tlen = add_tagged_field(pinfo, tree, tvb, s_offset, ftype);",
      "12293:         s_offset += tlen;",
      "12294:       }",
      "12295:       break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12293:         if (tlen==0)",
      "12294:           break;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "12357:       s_end = offset + len;",
      "12358:       while (s_offset < s_end) {",
      "12359:         int tlen = add_tagged_field(pinfo, tree, tvb, s_offset, ftype);",
      "12360:         s_offset += tlen;",
      "12361:       }",
      "12362:       break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12362:         if (tlen==0)",
      "12363:           break;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5c9e65849137ec812318b9d42fac4aa7d1a89fe1",
      "candidate_info": {
        "commit_hash": "5c9e65849137ec812318b9d42fac4aa7d1a89fe1",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/5c9e65849137ec812318b9d42fac4aa7d1a89fe1",
        "files": [
          "epan/dissectors/packet-ieee80211.c"
        ],
        "message": "[IEEE 802.11] fix two potential endless loops\n\nadd_tagged_field() may return 0 if the tag length is not what is\nexpected for this particular tag\n\nBug: 11110\n\nChange-Id: Ia2fd6635613fb6d8e1264147d2ddd44162484887\nReviewed-on: https://code.wireshark.org/review/7989\nReviewed-by: Martin Kaiser <wireshark@kaiser.cx>\n(cherry picked from commit e243b0041328980a9bbd43bb8a8166d7422f9096)\nReviewed-on: https://code.wireshark.org/review/7991\nReviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>\n(cherry picked from commit c3bee6101770e79b7b08d9c27aefbfa154ee4ba9)\nReviewed-on: https://code.wireshark.org/review/8639\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c": [
          "File: epan/dissectors/packet-ieee80211.c -> epan/dissectors/packet-ieee80211.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "11604:       s_end = offset + len;",
          "11605:       while (s_offset < s_end) {",
          "11606:         int tlen = add_tagged_field(pinfo, tree, tvb, s_offset, ftype);",
          "11607:         s_offset += tlen;",
          "11608:       }",
          "11609:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11607:         if (tlen==0)",
          "11608:           break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11673:       s_end = offset + len;",
          "11674:       while (s_offset < s_end) {",
          "11675:         int tlen = add_tagged_field(pinfo, tree, tvb, s_offset, ftype);",
          "11676:         s_offset += tlen;",
          "11677:       }",
          "11678:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11678:         if (tlen==0)",
          "11679:           break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c3bee6101770e79b7b08d9c27aefbfa154ee4ba9",
      "candidate_info": {
        "commit_hash": "c3bee6101770e79b7b08d9c27aefbfa154ee4ba9",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/c3bee6101770e79b7b08d9c27aefbfa154ee4ba9",
        "files": [
          "epan/dissectors/packet-ieee80211.c"
        ],
        "message": "[IEEE 802.11] fix two potential endless loops\n\nadd_tagged_field() may return 0 if the tag length is not what is\nexpected for this particular tag\n\nBug: 11110\n\nChange-Id: Ia2fd6635613fb6d8e1264147d2ddd44162484887\nReviewed-on: https://code.wireshark.org/review/7989\nReviewed-by: Martin Kaiser <wireshark@kaiser.cx>\n(cherry picked from commit e243b0041328980a9bbd43bb8a8166d7422f9096)\nReviewed-on: https://code.wireshark.org/review/7991\nReviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c": [
          "File: epan/dissectors/packet-ieee80211.c -> epan/dissectors/packet-ieee80211.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "11604:       s_end = offset + len;",
          "11605:       while (s_offset < s_end) {",
          "11606:         int tlen = add_tagged_field(pinfo, tree, tvb, s_offset, ftype);",
          "11607:         s_offset += tlen;",
          "11608:       }",
          "11609:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11607:         if (tlen==0)",
          "11608:           break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11673:       s_end = offset + len;",
          "11674:       while (s_offset < s_end) {",
          "11675:         int tlen = add_tagged_field(pinfo, tree, tvb, s_offset, ftype);",
          "11676:         s_offset += tlen;",
          "11677:       }",
          "11678:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11678:         if (tlen==0)",
          "11679:           break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd4dd9a1f5f58e0aad16e3e129e063e6df5599b1",
      "candidate_info": {
        "commit_hash": "cd4dd9a1f5f58e0aad16e3e129e063e6df5599b1",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/cd4dd9a1f5f58e0aad16e3e129e063e6df5599b1",
        "files": [
          "epan/dissectors/packet-ieee80211.c"
        ],
        "message": "[IEEE 802.11] fix two potential endless loops\n\nadd_tagged_field() may return 0 if the tag length is not what is\nexpected for this particular tag\n\nBug: 11110\n\nChange-Id: Ia2fd6635613fb6d8e1264147d2ddd44162484887\nReviewed-on: https://code.wireshark.org/review/7989\nReviewed-by: Martin Kaiser <wireshark@kaiser.cx>\n(cherry picked from commit e243b0041328980a9bbd43bb8a8166d7422f9096)\nReviewed-on: https://code.wireshark.org/review/7992\nReviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c"
          ],
          "candidate": [
            "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-ieee80211.c||epan/dissectors/packet-ieee80211.c": [
          "File: epan/dissectors/packet-ieee80211.c -> epan/dissectors/packet-ieee80211.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9599:       s_end = offset + len;",
          "9600:       while (s_offset < s_end) {",
          "9601:         int tlen = add_tagged_field(pinfo, tree, tvb, s_offset, ftype);",
          "9602:         s_offset += tlen;",
          "9603:       }",
          "9604:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9602:         if (tlen==0)",
          "9603:           break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9668:       s_end = offset + len;",
          "9669:       while (s_offset < s_end) {",
          "9670:         int tlen = add_tagged_field(pinfo, tree, tvb, s_offset, ftype);",
          "9671:         s_offset += tlen;",
          "9672:       }",
          "9673:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9673:         if (tlen==0)",
          "9674:           break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}