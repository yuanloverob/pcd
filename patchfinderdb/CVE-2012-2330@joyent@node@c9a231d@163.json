{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ff40253566089cd5b89c1e6efca32d3b5772dbcb",
      "candidate_info": {
        "commit_hash": "ff40253566089cd5b89c1e6efca32d3b5772dbcb",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ff40253566089cd5b89c1e6efca32d3b5772dbcb",
        "files": [
          "deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h",
          "deps/uv/src/unix/core.c",
          "deps/uv/src/unix/error.c",
          "deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/kqueue.c",
          "deps/uv/src/unix/linux.c",
          "deps/uv/src/unix/stream.c",
          "deps/uv/src/unix/sunos.c",
          "deps/uv/src/win/internal.h",
          "deps/uv/src/win/pipe.c",
          "deps/uv/src/win/stream.c",
          "deps/uv/src/win/tcp.c",
          "deps/uv/test/test-list.h",
          "deps/uv/uv.gyp"
        ],
        "message": "upgrade uv to 812e410772",
        "before_after_code_files": [
          "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c",
          "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c",
          "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/kqueue.c||deps/uv/src/unix/kqueue.c",
          "deps/uv/src/unix/linux.c||deps/uv/src/unix/linux.c",
          "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c",
          "deps/uv/src/unix/sunos.c||deps/uv/src/unix/sunos.c",
          "deps/uv/src/win/internal.h||deps/uv/src/win/internal.h",
          "deps/uv/src/win/pipe.c||deps/uv/src/win/pipe.c",
          "deps/uv/src/win/stream.c||deps/uv/src/win/stream.c",
          "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/uv.gyp||deps/uv/uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h": [
          "File: deps/uv/include/uv-private/uv-unix.h -> deps/uv/include/uv-private/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:   struct termios orig_termios; \\",
          "193:   int mode;",
          "196: #if defined(__linux__)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195: #define UV_STREAM_INFO_PRIVATE_FIELDS \\",
          "196:   int fd;",
          "",
          "---------------"
        ],
        "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h": [
          "File: deps/uv/include/uv-private/uv-win.h -> deps/uv/include/uv-private/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "450:   wchar_t* dirw;                          \\",
          "451:   char* buffer;",
          "453: int uv_utf16_to_utf8(const wchar_t* utf16Buffer, size_t utf16Size,",
          "454:     char* utf8Buffer, size_t utf8Size);",
          "455: int uv_utf8_to_utf16(const char* utf8Buffer, wchar_t* utf16Buffer,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "453: #define UV_STREAM_INFO_PRIVATE_FIELDS     \\",
          "454:   union {                                 \\",
          "455:     WSAPROTOCOL_INFOW socket_info;        \\",
          "456:   };",
          "",
          "---------------"
        ],
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "180: typedef struct uv_counters_s uv_counters_t;",
          "181: typedef struct uv_cpu_info_s uv_cpu_info_t;",
          "182: typedef struct uv_interface_address_s uv_interface_address_t;",
          "184: typedef struct uv_req_s uv_req_t;",
          "185: typedef struct uv_shutdown_s uv_shutdown_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183: typedef struct uv_stream_info_s uv_stream_info_t;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "530: UV_EXTERN int uv_tcp_getpeername(uv_tcp_t* handle, struct sockaddr* name,",
          "531:     int* namelen);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "539: struct uv_stream_info_s {",
          "540:   uv_handle_type type;",
          "541:   UV_STREAM_INFO_PRIVATE_FIELDS",
          "542: };",
          "548: UV_EXTERN int uv_export(uv_stream_t* stream, uv_stream_info_t* info);",
          "554: UV_EXTERN int uv_import(uv_stream_t* stream, uv_stream_info_t* info);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/core.c||deps/uv/src/unix/core.c": [
          "File: deps/uv/src/unix/core.c -> deps/uv/src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "825: }",
          "829: size_t uv__strlcpy(char* dst, const char* src, size_t size) {",
          "830:   const char *org;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "831: int uv__dup(int fd) {",
          "832:   fd = dup(fd);",
          "834:   if (fd == -1)",
          "835:     return -1;",
          "837:   if (uv__cloexec(fd, 1)) {",
          "838:     SAVE_ERRNO(uv__close(fd));",
          "839:     return -1;",
          "840:   }",
          "842:   return fd;",
          "843: }",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c": [
          "File: deps/uv/src/unix/error.c -> deps/uv/src/unix/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:     case ETIMEDOUT: return UV_ETIMEDOUT;",
          "87:     default: return UV_UNKNOWN;",
          "88:   }",
          "92: }",
          "",
          "[Removed Lines]",
          "90:   assert(0 && \"unreachable\");",
          "91:   return -1;",
          "",
          "[Added Lines]",
          "89:   UNREACHABLE();",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h": [
          "File: deps/uv/src/unix/internal.h -> deps/uv/src/unix/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include \"uv-common.h\"",
          "26: #include \"uv-eio.h\"",
          "30: #if __STRICT_ANSI__",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #include <assert.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133: #define container_of(ptr, type, member) \\",
          "134:   ((type *) ((char *) (ptr) - offsetof(type, member)))",
          "145: enum {",
          "",
          "[Removed Lines]",
          "136: #define SAVE_ERRNO(block) \\",
          "137:   do { \\",
          "138:     int _saved_errno = errno; \\",
          "139:     do { block; } while (0); \\",
          "140:     errno = _saved_errno; \\",
          "141:   } \\",
          "142:   while (0);",
          "",
          "[Added Lines]",
          "138: #define UNREACHABLE()                                                         \\",
          "139:   do {                                                                        \\",
          "140:     assert(0 && \"unreachable code\");                                          \\",
          "141:     abort();                                                                  \\",
          "142:   }                                                                           \\",
          "143:   while (0)",
          "145: #define SAVE_ERRNO(block)                                                     \\",
          "146:   do {                                                                        \\",
          "147:     int _saved_errno = errno;                                                 \\",
          "148:     do { block; } while (0);                                                  \\",
          "149:     errno = _saved_errno;                                                     \\",
          "150:   }                                                                           \\",
          "151:   while (0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "159: int uv__nonblock(int fd, int set) __attribute__((unused));",
          "160: int uv__cloexec(int fd, int set) __attribute__((unused));",
          "161: int uv__socket(int domain, int type, int protocol);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "171: int uv__dup(int fd);",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/kqueue.c||deps/uv/src/unix/kqueue.c": [
          "File: deps/uv/src/unix/kqueue.c -> deps/uv/src/unix/kqueue.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "143: void uv__fs_event_destroy(uv_fs_event_t* handle) {",
          "145: }",
          "149: void uv__kqueue_hack(EV_P_ int fflags, ev_io *w) {",
          "151: }",
          "",
          "[Removed Lines]",
          "144:   assert(0 && \"unreachable\");",
          "150:   assert(0 && \"unreachable\");",
          "",
          "[Added Lines]",
          "144:   UNREACHABLE();",
          "150:   UNREACHABLE();",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/linux.c||deps/uv/src/unix/linux.c": [
          "File: deps/uv/src/unix/linux.c -> deps/uv/src/unix/linux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "681: void uv__fs_event_destroy(uv_fs_event_t* handle) {",
          "684: }",
          "",
          "[Removed Lines]",
          "682:   assert(0 && \"unreachable\");",
          "683:   abort();",
          "",
          "[Added Lines]",
          "682:   UNREACHABLE();",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c": [
          "File: deps/uv/src/unix/stream.c -> deps/uv/src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "966: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "969: int uv_export(uv_stream_t* stream, uv_stream_info_t* info) {",
          "970:   int fd;",
          "972:   if (stream->type != UV_TCP) {",
          "973:     uv__set_artificial_error(stream->loop, UV_EINVAL);",
          "974:     return -1;",
          "975:   }",
          "977:   fd = uv__dup(stream->fd);",
          "979:   if (fd == -1) {",
          "980:     uv__set_sys_error(stream->loop, errno);",
          "981:     return -1;",
          "982:   }",
          "984:   info->type = stream->type;",
          "985:   info->fd = fd;",
          "987:   return 0;",
          "988: }",
          "991: int uv_import(uv_stream_t* stream, uv_stream_info_t* info) {",
          "992:   if (info->type != UV_TCP) {",
          "993:     uv__set_artificial_error(stream->loop, UV_EINVAL);",
          "994:     return -1;",
          "995:   }",
          "997:   if (stream->fd != -1) {",
          "998:     uv__set_artificial_error(stream->loop, UV_EALREADY);",
          "999:     return -1;",
          "1000:   }",
          "1002:   stream->fd = info->fd;",
          "1004:   return 0;",
          "1005: }",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/sunos.c||deps/uv/src/unix/sunos.c": [
          "File: deps/uv/src/unix/sunos.c -> deps/uv/src/unix/sunos.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "216: void uv__fs_event_destroy(uv_fs_event_t* handle) {",
          "218: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "217:   UNREACHABLE();",
          "",
          "---------------"
        ],
        "deps/uv/src/win/internal.h||deps/uv/src/win/internal.h": [
          "File: deps/uv/src/win/internal.h -> deps/uv/src/win/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "144: void uv_tcp_endgame(uv_loop_t* loop, uv_tcp_t* handle);",
          "148: int uv_tcp_duplicate_socket(uv_tcp_t* handle, int pid,",
          "149:     LPWSAPROTOCOL_INFOW protocol_info);",
          "",
          "[Removed Lines]",
          "146: int uv_tcp_import(uv_tcp_t* tcp, WSAPROTOCOL_INFOW* socket_protocol_info);",
          "",
          "[Added Lines]",
          "146: int uv__tcp_import(uv_tcp_t* tcp, WSAPROTOCOL_INFOW* socket_protocol_info);",
          "151: int uv_tcp_export(uv_tcp_t* tcp, uv_stream_info_t* info);",
          "152: int uv_tcp_import(uv_tcp_t* tcp, uv_stream_info_t* info);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/pipe.c||deps/uv/src/win/pipe.c": [
          "File: deps/uv/src/win/pipe.c -> deps/uv/src/win/pipe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "649:       return -1;",
          "650:     }",
          "653:   } else {",
          "654:     pipe_client = (uv_pipe_t*)client;",
          "",
          "[Removed Lines]",
          "652:     return uv_tcp_import((uv_tcp_t*)client, server->pending_socket_info);",
          "",
          "[Added Lines]",
          "652:     return uv__tcp_import((uv_tcp_t*)client, server->pending_socket_info);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/stream.c||deps/uv/src/win/stream.c": [
          "File: deps/uv/src/win/stream.c -> deps/uv/src/win/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:   return bytes;",
          "188: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191: int uv_export(uv_stream_t* stream, uv_stream_info_t* info) {",
          "192:   switch (stream->type) {",
          "193:     case UV_TCP:",
          "194:       return uv_tcp_export((uv_tcp_t*)stream, info);",
          "195:     default:",
          "196:       assert(0);",
          "197:       uv__set_sys_error(stream->loop, WSAEINVAL);",
          "198:       return -1;",
          "199:   }",
          "200: }",
          "203: int uv_import(uv_stream_t* stream, uv_stream_info_t* info) {",
          "204:   switch (stream->type) {",
          "205:     case UV_TCP:",
          "206:       return uv_tcp_import((uv_tcp_t*)stream, info);",
          "207:     default:",
          "208:       assert(0);",
          "209:       uv__set_sys_error(stream->loop, WSAEINVAL);",
          "210:       return -1;",
          "211:   }",
          "212: }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c": [
          "File: deps/uv/src/win/tcp.c -> deps/uv/src/win/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1019: }",
          "1023:   SOCKET socket = WSASocketW(AF_INET,",
          "1024:                              SOCK_STREAM,",
          "1025:                              IPPROTO_IP,",
          "",
          "[Removed Lines]",
          "1022: int uv_tcp_import(uv_tcp_t* tcp, WSAPROTOCOL_INFOW* socket_protocol_info) {",
          "",
          "[Added Lines]",
          "1022: int uv__tcp_import(uv_tcp_t* tcp, WSAPROTOCOL_INFOW* socket_protocol_info) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1140:   }",
          "1142:   return 0;",
          "",
          "[Removed Lines]",
          "1143: }",
          "",
          "[Added Lines]",
          "1146: int uv_tcp_export(uv_tcp_t* tcp, uv_stream_info_t* info) {",
          "1147:   if (uv_tcp_duplicate_socket(tcp, GetCurrentProcessId(),",
          "1148:       &info->socket_info) == -1) {",
          "1149:     return -1;",
          "1150:   }",
          "1152:   info->type = UV_TCP;",
          "1153:   return 0;",
          "1154: }",
          "1157: int uv_tcp_import(uv_tcp_t* tcp, uv_stream_info_t* info) {",
          "1158:   if (info->type != UV_TCP) {",
          "1159:     uv__set_sys_error(tcp->loop, WSAEINVAL);",
          "1160:     return -1;",
          "1161:   }",
          "1163:   return uv__tcp_import(tcp, &info->socket_info);",
          "1164: }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: TEST_DECLARE   (stdio_over_pipes)",
          "25: TEST_DECLARE   (ipc_listen_before_write)",
          "26: TEST_DECLARE   (ipc_listen_after_write)",
          "27: TEST_DECLARE   (tcp_ping_pong)",
          "28: TEST_DECLARE   (tcp_ping_pong_v6)",
          "29: TEST_DECLARE   (pipe_ping_pong)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: TEST_DECLARE   (ipc_threads_listen_after_write)",
          "28: TEST_DECLARE   (ipc_threads_listen_before_write)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:   TEST_ENTRY  (stdio_over_pipes)",
          "162:   TEST_ENTRY  (ipc_listen_before_write)",
          "163:   TEST_ENTRY  (ipc_listen_after_write)",
          "165:   TEST_ENTRY  (tcp_ping_pong)",
          "166:   TEST_HELPER (tcp_ping_pong, tcp4_echo_server)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:   TEST_ENTRY  (ipc_threads_listen_after_write)",
          "167:   TEST_ENTRY  (ipc_threads_listen_before_write)",
          "",
          "---------------"
        ],
        "deps/uv/uv.gyp||deps/uv/uv.gyp": [
          "File: deps/uv/uv.gyp -> deps/uv/uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:         'test/test-hrtime.c',",
          "302:         'test/test-idle.c',",
          "303:         'test/test-ipc.c',",
          "304:         'test/test-list.h',",
          "305:         'test/test-loop-handles.c',",
          "306:         'test/test-multiple-listen.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "304:         'test/test-ipc-threads.c',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "362189a5d35e7e17d4bcbb85e2296dae6579065e",
      "candidate_info": {
        "commit_hash": "362189a5d35e7e17d4bcbb85e2296dae6579065e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/362189a5d35e7e17d4bcbb85e2296dae6579065e",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.8.10",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #define NODE_MAJOR_VERSION 0",
          "26: #define NODE_MINOR_VERSION 8",
          "30: #ifndef NODE_STRINGIFY",
          "31: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "27: #define NODE_PATCH_VERSION 9",
          "28: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "27: #define NODE_PATCH_VERSION 10",
          "28: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "99ad0561c04a8b255f6049f494fe15cb56e0b382",
      "candidate_info": {
        "commit_hash": "99ad0561c04a8b255f6049f494fe15cb56e0b382",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/99ad0561c04a8b255f6049f494fe15cb56e0b382",
        "files": [
          "test/message/eval_messages.out",
          "test/message/stdin_messages.out",
          "test/message/testcfg.py"
        ],
        "message": "test-message: fix message output\n\n1. The net changes add a stack frame to stdin errors.\n2. The error line numbers were overly strict in many places.",
        "before_after_code_files": [
          "test/message/testcfg.py||test/message/testcfg.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/message/testcfg.py||test/message/testcfg.py": [
          "File: test/message/testcfg.py -> test/message/testcfg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:   def IgnoreLine(self, str):",
          "45:     \"\"\"Ignore empty lines and valgrind output.\"\"\"",
          "47:     else: return str.startswith('==') or str.startswith('**')",
          "49:   def IsFailureOutput(self, output):",
          "",
          "[Removed Lines]",
          "46:     if not str: return True",
          "",
          "[Added Lines]",
          "46:     if not str.strip(): return True",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:     raw_lines = (output.stdout + output.stderr).split('\\n')",
          "67:     outlines = [ s for s in raw_lines if not self.IgnoreLine(s) ]",
          "68:     if len(outlines) != len(patterns):",
          "69:       return True",
          "70:     for i in xrange(len(patterns)):",
          "71:       if not re.match(patterns[i], outlines[i]):",
          "72:         return True",
          "73:     return False",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:       print \"length differs.\"",
          "70:       print \"expect=%d\" % len(patterns)",
          "71:       print \"actual=%d\" % len(outlines)",
          "72:       print \"patterns:\"",
          "73:       for i in xrange(len(patterns)):",
          "74:         print \"pattern = %s\" % patterns[i]",
          "75:       print \"outlines:\"",
          "76:       for i in xrange(len(outlines)):",
          "77:         print \"outline = %s\" % outlines[i]",
          "81:         print \"match failed\"",
          "82:         print \"line=%d\" % i",
          "83:         print \"expect=%s\" % patterns[i]",
          "84:         print \"actual=%s\" % outlines[i]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e7065eaa93466c090d3f3d13f67ed64aab5363a9",
      "candidate_info": {
        "commit_hash": "e7065eaa93466c090d3f3d13f67ed64aab5363a9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e7065eaa93466c090d3f3d13f67ed64aab5363a9",
        "files": [
          "lib/repl.js"
        ],
        "message": "repl: ensure that 'repl.useGlobal' is a boolean",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:   var self = this;",
          "106:   self.eval = eval || function(code, context, file, cb) {",
          "107:     var err, result;",
          "108:     try {",
          "110:         result = vm.runInThisContext(code, file);",
          "111:       } else {",
          "112:         result = vm.runInContext(code, context, file);",
          "",
          "[Removed Lines]",
          "104:   self.useGlobal = useGlobal;",
          "109:       if (useGlobal) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0dba28b5c29201a026a86e1d73b3c3c88a163b7d",
      "candidate_info": {
        "commit_hash": "0dba28b5c29201a026a86e1d73b3c3c88a163b7d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0dba28b5c29201a026a86e1d73b3c3c88a163b7d",
        "files": [
          "lib/readline.js"
        ],
        "message": "readline: fix for unicode prompts\n\nprompt length is char length, not byte length",
        "before_after_code_files": [
          "lib/readline.js||lireadline.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:   } else {",
          "137:     var lines = prompt.split(/[\\r\\n]/);",
          "138:     var lastLine = lines[lines.length - 1];",
          "140:   }",
          "141: };",
          "",
          "[Removed Lines]",
          "139:     this._promptLength = Buffer.byteLength(lastLine);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}