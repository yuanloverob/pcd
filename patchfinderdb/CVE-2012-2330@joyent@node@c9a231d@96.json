{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1109c8fc4ec32d67a52334604473ceea2e0b00c9",
      "candidate_info": {
        "commit_hash": "1109c8fc4ec32d67a52334604473ceea2e0b00c9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1109c8fc4ec32d67a52334604473ceea2e0b00c9",
        "files": [
          "src/node.js"
        ],
        "message": "startup: move `EventEmitter` closer to the lookup\n\nThis makes startup faster by ~0.2 ms on my computer.",
        "before_after_code_files": [
          "src/node.js||src/node.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: (function(process) {",
          "28:   global = this;",
          "32:   function startup() {",
          "34:     process.__proto__ = EventEmitter.prototype;",
          "35:     process.EventEmitter = EventEmitter; // process.EventEmitter is deprecated",
          "",
          "[Removed Lines]",
          "30:   var EventEmitter;",
          "33:     EventEmitter = NativeModule.require('events').EventEmitter;",
          "",
          "[Added Lines]",
          "31:     var EventEmitter = NativeModule.require('events').EventEmitter;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d18cebaf8a7ac701dabd71a3aa4eb0571db6a645",
      "candidate_info": {
        "commit_hash": "d18cebaf8a7ac701dabd71a3aa4eb0571db6a645",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d18cebaf8a7ac701dabd71a3aa4eb0571db6a645",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "doc/index.html",
          "doc/logos/index.html",
          "doc/template.html",
          "src/node_version.h"
        ],
        "message": "2012.01.19, Version 0.6.8 (stable)\n\n* Update V8 to 3.6.6.19\n\n* Numeric key hash collision fix for V8 (Erik Corry, Fedor Indutny)\n\n* Add missing TTY key translations for F1-F5 on Windows (Brandon Benvie)\n\n* path.extname bugfix with . and .. paths (Bert Belder)\n\n* cluster: don't always kill the master on uncaughtException (Ben\n* Noordhuis)\n\n* Update npm to 1.1.0-2 (isaacs)\n\n* typed arrays: set class name (Ben Noordhuis)\n\n* zlib binding cleanup (isaacs, Bert Belder)\n\n* dgram: use slab memory allocator (Michael Bernstein)\n\n* fix segfault #2473",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 6",
          "31: #define NODE_PATCH_VERSION 8",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed103409c4248296c2757fdbfc7a4b3a1f54bfcd",
      "candidate_info": {
        "commit_hash": "ed103409c4248296c2757fdbfc7a4b3a1f54bfcd",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ed103409c4248296c2757fdbfc7a4b3a1f54bfcd",
        "files": [
          "deps/uv/include/uv-private/uv-bsd.h",
          "deps/uv/src/win/tcp.c",
          "deps/uv/test/test-spawn.c"
        ],
        "message": "uv: upgrade to 5eb1d19",
        "before_after_code_files": [
          "deps/uv/include/uv-private/uv-bsd.h||deps/uv/include/uv-private/uv-bsd.h",
          "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c",
          "deps/uv/test/test-spawn.c||deps/uv/test/test-spawn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv-private/uv-bsd.h||deps/uv/include/uv-private/uv-bsd.h": [
          "File: deps/uv/include/uv-private/uv-bsd.h -> deps/uv/include/uv-private/uv-bsd.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #define UV_BSD_H",
          "25: #define UV_PLATFORM_FS_EVENT_FIELDS                                           \\",
          "27:   int fflags;                                                                 \\",
          "28:   int fd;                                                                     \\",
          "",
          "[Removed Lines]",
          "26:   uv__io_t event_watcher;                                                     \\",
          "",
          "[Added Lines]",
          "26:   ev_io event_watcher;                                                        \\",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c": [
          "File: deps/uv/src/win/tcp.c -> deps/uv/src/win/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "541:   if(!handle->accept_reqs) {",
          "542:     handle->accept_reqs = (uv_tcp_accept_t*)",
          "544:     if (!handle->accept_reqs) {",
          "545:       uv_fatal_error(ERROR_OUTOFMEMORY, \"malloc\");",
          "546:     }",
          "",
          "[Removed Lines]",
          "543:       malloc(simultaneous_accepts * sizeof(uv_tcp_accept_t));",
          "",
          "[Added Lines]",
          "543:       malloc(uv_simultaneous_server_accepts * sizeof(uv_tcp_accept_t));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "565:       uv_tcp_queue_accept(handle, req);",
          "566:     }",
          "567:   }",
          "569:   return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "571:     for (i = simultaneous_accepts; i < uv_simultaneous_server_accepts; i++) {",
          "572:       req = &handle->accept_reqs[i];",
          "573:       uv_req_init(loop, (uv_req_t*) req);",
          "574:       req->type = UV_ACCEPT;",
          "575:       req->accept_socket = INVALID_SOCKET;",
          "576:       req->data = handle;",
          "577:       req->wait_handle = INVALID_HANDLE_VALUE;",
          "578:     }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-spawn.c||deps/uv/test/test-spawn.c": [
          "File: deps/uv/test/test-spawn.c -> deps/uv/test/test-spawn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "667:   return 0;",
          "668: }",
          "672: TEST_IMPL(environment_creation) {",
          "673:   int i;",
          "",
          "[Removed Lines]",
          "670: WCHAR* make_program_env(char** env_block);",
          "",
          "[Added Lines]",
          "670: uv_err_t make_program_env(char** env_block, WCHAR** dst_ptr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "683:   WCHAR expected[512];",
          "684:   WCHAR* ptr = expected;",
          "686:   WCHAR* str;",
          "688:   for (i = 0; i < sizeof(environment) / sizeof(environment[0]) - 1; i++) {",
          "689:     ptr += uv_utf8_to_utf16(environment[i], ptr, expected + sizeof(expected) - ptr);",
          "",
          "[Removed Lines]",
          "685:   WCHAR* result;",
          "",
          "[Added Lines]",
          "685:   uv_err_t result;",
          "687:   WCHAR* env;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "700:   ++ptr;",
          "706:     wprintf(L\"%s\\n\", str);",
          "707:   }",
          "711:   return 0;",
          "712: }",
          "",
          "[Removed Lines]",
          "703:   result = make_program_env(environment);",
          "705:   for (str = result; *str; str += wcslen(str) + 1) {",
          "709:   ASSERT(wcscmp(expected, result) == 0);",
          "",
          "[Added Lines]",
          "704:   result = make_program_env(environment, &env);",
          "705:   ASSERT(result.code == UV_OK);",
          "707:   for (str = env; *str; str += wcslen(str) + 1) {",
          "711:   ASSERT(wcscmp(expected, env) == 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9a79bb694e52ea83fd09904f0684e9f7a1c39150",
      "candidate_info": {
        "commit_hash": "9a79bb694e52ea83fd09904f0684e9f7a1c39150",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9a79bb694e52ea83fd09904f0684e9f7a1c39150",
        "files": [
          "src/node.cc"
        ],
        "message": "Avoid unnecessary buffer to string conversion.\n\nSpeeds up the benchmark below by about 680% (0.5s versus 3.4s on my Core 2 Duo).\n\n    var crypto = require('crypto');\n    var hash = crypto.createHash('sha1');\n    var data = new Buffer(1024);\n    for (var i = 0; i < 128 * 1024; ++i) hash.update(data);\n\nFixes #2494.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1046:     return -1;",
          "1047:   }",
          "1049:   Local<String> str = val->ToString();",
          "1051:   if (encoding == UTF8) return str->Utf8Length();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1049:   if (encoding == BINARY && Buffer::HasInstance(val)) {",
          "1050:     return Buffer::Length(val->ToObject());",
          "1051:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "44e703327970be080877ad7c02f57f0713b553b8",
      "candidate_info": {
        "commit_hash": "44e703327970be080877ad7c02f57f0713b553b8",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/44e703327970be080877ad7c02f57f0713b553b8",
        "files": [
          "src/node.cc",
          "src/node_vars.h"
        ],
        "message": "fixed debugger segfaults",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "src/node_vars.h||src/node_vars.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "122: #define use_npn NODE_VAR(use_npn)",
          "123: #define use_sni NODE_VAR(use_sni)",
          "124: #define uncaught_exception_counter NODE_VAR(uncaught_exception_counter)",
          "126: #define binding_cache NODE_VAR(binding_cache)",
          "127: #define module_load_list NODE_VAR(module_load_list)",
          "128: #define node_isolate NODE_VAR(node_isolate)",
          "",
          "[Removed Lines]",
          "125: #define debug_watcher NODE_VAR(debug_watcher)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1783: }",
          "1801: static void DebugBreakMessageHandler(const v8::Debug::Message& message) {",
          "",
          "[Removed Lines]",
          "1786: static void DebugMessageCallback(uv_async_t* watcher, int status) {",
          "1787:   HandleScope scope;",
          "1788:   assert(watcher == &debug_watcher);",
          "1789:   v8::Debug::ProcessDebugMessages();",
          "1790: }",
          "1792: static void DebugMessageDispatch(void) {",
          "1798:   uv_async_send(&debug_watcher);",
          "1799: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2637:   V8::SetFatalErrorHandler(node::OnFatalError);",
          "2653:   node_isolate = v8::Isolate::GetCurrent();",
          "",
          "[Removed Lines]",
          "2641:   v8::Debug::SetDebugMessageDispatchHandler(node::DebugMessageDispatch);",
          "2647:   uv_async_init(loop, &debug_watcher, node::DebugMessageCallback);",
          "2649:   uv_unref(loop);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/node_vars.h||src/node_vars.h": [
          "File: src/node_vars.h -> src/node_vars.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:   int64_t tick_times[RPM_SAMPLES];",
          "59:   int tick_time_head;",
          "60:   int uncaught_exception_counter;",
          "62:   v8::Persistent<v8::Object> binding_cache;",
          "63:   v8::Persistent<v8::Array> module_load_list;",
          "64:   v8::Isolate* node_isolate;",
          "",
          "[Removed Lines]",
          "61:   uv_async_t debug_watcher;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}