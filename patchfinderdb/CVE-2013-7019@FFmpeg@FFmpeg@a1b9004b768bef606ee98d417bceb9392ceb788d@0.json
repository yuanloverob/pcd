{
  "cve_id": "CVE-2013-7019",
  "cve_desc": "The get_cox function in libavcodec/jpeg2000dec.c in FFmpeg before 2.1 does not properly validate the reduction factor, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted JPEG2000 data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "a1b9004b768bef606ee98d417bceb9392ceb788d",
  "patch_info": {
    "commit_hash": "a1b9004b768bef606ee98d417bceb9392ceb788d",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/a1b9004b768bef606ee98d417bceb9392ceb788d",
    "files": [
      "libavcodec/jpeg2000dec.c"
    ],
    "message": "avcodec/jpeg2000dec: fix context consistency with too large lowres\n\nFixes out of array accesses\nFixes Ticket2898\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
      "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "370:         return AVERROR_INVALIDDATA;",
      "371:     }",
      "379:     c->log2_cblk_width  = (bytestream2_get_byteu(&s->g) & 15) + 2; // cblk width",
      "380:     c->log2_cblk_height = (bytestream2_get_byteu(&s->g) & 15) + 2; // cblk height",
      "",
      "[Removed Lines]",
      "374:     if (c->nreslevels < s->reduction_factor)",
      "375:         c->nreslevels2decode = 1;",
      "376:     else",
      "377:         c->nreslevels2decode = c->nreslevels - s->reduction_factor;",
      "",
      "[Added Lines]",
      "373:     if (c->nreslevels <= s->reduction_factor) {",
      "375:            not compatible with this bitstream, and as we might have used it",
      "376:            already in setup earlier we have to fail this frame until",
      "378:         av_log(s->avctx, AV_LOG_ERROR, \"reduction_factor too large for this bitstream, max is %d\\n\", c->nreslevels - 1);",
      "379:         s->reduction_factor = c->nreslevels - 1;",
      "380:         return AVERROR(EINVAL);",
      "381:     }",
      "384:     c->nreslevels2decode = c->nreslevels - s->reduction_factor;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "47f8497837ebbb6877ab9d199f66f655017b769c",
      "candidate_info": {
        "commit_hash": "47f8497837ebbb6877ab9d199f66f655017b769c",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/47f8497837ebbb6877ab9d199f66f655017b769c",
        "files": [
          "libavcodec/jpeg2000dec.c"
        ],
        "message": "avcodec/jpeg2000dec: fix context consistency with too large lowres\n\nFixes out of array accesses\nFixes Ticket2898\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit a1b9004b768bef606ee98d417bceb9392ceb788d)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ],
          "candidate": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
          "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "369:         return AVERROR_INVALIDDATA;",
          "370:     }",
          "378:     c->log2_cblk_width  = (bytestream2_get_byteu(&s->g) & 15) + 2; // cblk width",
          "379:     c->log2_cblk_height = (bytestream2_get_byteu(&s->g) & 15) + 2; // cblk height",
          "",
          "[Removed Lines]",
          "373:     if (c->nreslevels < s->reduction_factor)",
          "374:         c->nreslevels2decode = 1;",
          "375:     else",
          "376:         c->nreslevels2decode = c->nreslevels - s->reduction_factor;",
          "",
          "[Added Lines]",
          "372:     if (c->nreslevels <= s->reduction_factor) {",
          "374:            not compatible with this bitstream, and as we might have used it",
          "375:            already in setup earlier we have to fail this frame until",
          "377:         av_log(s->avctx, AV_LOG_ERROR, \"reduction_factor too large for this bitstream, max is %d\\n\", c->nreslevels - 1);",
          "378:         s->reduction_factor = c->nreslevels - 1;",
          "379:         return AVERROR(EINVAL);",
          "380:     }",
          "383:     c->nreslevels2decode = c->nreslevels - s->reduction_factor;",
          "",
          "---------------"
        ]
      }
    }
  ]
}