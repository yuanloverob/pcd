{
  "cve_id": "CVE-2014-9621",
  "cve_desc": "The ELF parser in file 5.16 through 5.21 allows remote attackers to cause a denial of service via a long string.",
  "repo": "file/file",
  "patch_hash": "65437cee25199dbd385fb35901bc0011e164276c",
  "patch_info": {
    "commit_hash": "65437cee25199dbd385fb35901bc0011e164276c",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/65437cee25199dbd385fb35901bc0011e164276c",
    "files": [
      "src/readelf.c"
    ],
    "message": "Limit string printing to 100 chars, and add flags I forgot in the previous commit.",
    "before_after_code_files": [
      "src/readelf.c||src/readelf.c"
    ]
  },
  "patch_diff": {
    "src/readelf.c||src/readelf.c": [
      "File: src/readelf.c -> src/readelf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "31: #endif",
      "33: #ifdef BUILTIN_ELF",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.115 2014/12/16 20:53:05 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.116 2014/12/16 23:18:40 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "900:  }",
      "902:  if (namesz == 7 && strcmp((char *)&nbuf[noff], \"NetBSD\") == 0) {",
      "903:   switch (xnh_type) {",
      "904:       case NT_NETBSD_VERSION:",
      "905:    return size;",
      "906:   case NT_NETBSD_MARCH:",
      "907:    if (*flags & FLAGS_DID_NETBSD_MARCH)",
      "908:     return size;",
      "911:     return size;",
      "912:    break;",
      "913:   case NT_NETBSD_CMODEL:",
      "914:    if (*flags & FLAGS_DID_NETBSD_CMODEL)",
      "915:     return size;",
      "916:    if (file_printf(ms, \", compiler model: %.*s\",",
      "917:        (int)descsz, (const char *)&nbuf[doff]) == -1)",
      "918:     return size;",
      "",
      "[Removed Lines]",
      "909:    if (file_printf(ms, \", compiled for: %.*s\", (int)descsz,",
      "910:        (const char *)&nbuf[doff]) == -1)",
      "",
      "[Added Lines]",
      "903:   if (descsz > 100)",
      "904:    descsz = 100;",
      "912:    if (file_printf(ms, \", compiled for: %.*s\",",
      "913:        (int)descsz, (const char *)&nbuf[doff]) == -1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "023d2dfe3021658f38a321a62ee171337faa35f5",
      "candidate_info": {
        "commit_hash": "023d2dfe3021658f38a321a62ee171337faa35f5",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/023d2dfe3021658f38a321a62ee171337faa35f5",
        "files": [
          "src/readelf.c",
          "src/readelf.h"
        ],
        "message": "- Update the a_type type to be 64 bits since this is what Linux wants. - Handle incomplete reads since the filename might be the last thing on the   section. (Jan Kaluza)",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c",
          "src/readelf.h||src/readelf.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.124 2015/11/05 16:58:31 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.125 2015/11/11 21:20:18 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "840: {",
          "841:  Elf32_Phdr ph32;",
          "842:  Elf64_Phdr ph64;",
          "",
          "[Removed Lines]",
          "843:  size_t prev_vaddr = 0;",
          "844:  size_t prev_off = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "859:    continue;",
          "860:   }",
          "873:  }",
          "874:  return 0;",
          "875: }",
          "",
          "[Removed Lines]",
          "862:   if (virtaddr >= prev_vaddr && virtaddr < xph_vaddr) {",
          "867:    return prev_off + (virtaddr - prev_vaddr);",
          "868:   }",
          "870:   prev_vaddr = xph_vaddr;",
          "871:   prev_off = xph_offset;",
          "",
          "[Added Lines]",
          "860:   if (virtaddr >= xph_vaddr && virtaddr < xph_vaddr + xph_filesz)",
          "861:    return xph_offset + (virtaddr - xph_vaddr);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "888:  offset = get_offset_from_virtaddr(ms, swap, clazz, fd, ph_off, ph_num,",
          "889:      fsize, virtaddr);",
          "891:   file_badread(ms);",
          "892:   return 0;",
          "893:  }",
          "",
          "[Removed Lines]",
          "890:  if (pread(fd, buf, buflen, offset) != buflen) {",
          "",
          "[Added Lines]",
          "879:  if ((buflen = pread(fd, buf, buflen, offset)) <= 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "919:  size_t elsize = xauxv_sizeof;",
          "920:  const char *tag;",
          "921:  int is_string;",
          "923:  size_t nval;",
          "925:  if (type != NT_AUXV || (*flags & FLAGS_IS_CORE) == 0)",
          "",
          "[Removed Lines]",
          "922:  uint32_t val[30];",
          "",
          "[Added Lines]",
          "911:  uint64_t val[30];",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "931:  for (size_t off = 0; off + elsize <= descsz; off += elsize) {",
          "932:   (void)memcpy(xauxv_addr, &nbuf[doff + off], xauxv_sizeof);",
          "933:   for (size_t i = 0; i < nval; i++)",
          "937:     return 1;",
          "938:    }",
          "939:   if (nval >= __arraycount(val)) {",
          "940:    file_error(ms, 0, \"Too many ELF Auxv elements\");",
          "941:    return 1;",
          "942:   }",
          "945:   switch(xauxv_type) {",
          "946:   case AT_LINUX_EXECFN:",
          "",
          "[Removed Lines]",
          "934:    if (val[i] == (uint32_t)xauxv_type) {",
          "935:     file_error(ms, 0, \"Repeated ELF Auxv type %u\",",
          "936:         val[i]);",
          "943:   val[nval++] = (uint32_t)xauxv_type;",
          "",
          "[Added Lines]",
          "923:    if (val[i] == (uint64_t)xauxv_type) {",
          "924:     file_error(ms, 0, \"Repeated ELF Auxv type %ju\",",
          "925:         (uintmax_t)val[i]);",
          "932:   val[nval++] = (uint64_t)xauxv_type;",
          "",
          "---------------"
        ],
        "src/readelf.h||src/readelf.h": [
          "File: src/readelf.h -> src/readelf.h"
        ]
      }
    },
    {
      "candidate_hash": "9190a18d09f25fb0ca6abe1fcbdba780f5077e45",
      "candidate_info": {
        "commit_hash": "9190a18d09f25fb0ca6abe1fcbdba780f5077e45",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/9190a18d09f25fb0ca6abe1fcbdba780f5077e45",
        "files": [
          "ChangeLog",
          "TODO",
          "doc/file.man",
          "doc/libmagic.man",
          "magic/Magdir/jpeg",
          "magic/Magdir/mathematica",
          "src/apprentice.c",
          "src/ascmagic.c",
          "src/file.c",
          "src/file.h",
          "src/file_opts.h",
          "src/fsmagic.c",
          "src/is_tar.c",
          "src/readcdf.c",
          "src/readelf.c",
          "src/softmagic.c"
        ],
        "message": "Add --extension",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/ascmagic.c||src/ascmagic.c",
          "src/file.c||src/file.c",
          "src/file.h||src/file.h",
          "src/file_opts.h||src/file_opts.h",
          "src/fsmagic.c||src/fsmagic.c",
          "src/is_tar.c||src/is_tar.c",
          "src/readcdf.c||src/readcdf.c",
          "src/readelf.c||src/readelf.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.230 2015/01/02 21:29:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.231 2015/02/06 17:08:58 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "149: private int parse_mime(struct magic_set *, struct magic_entry *, const char *);",
          "150: private int parse_strength(struct magic_set *, struct magic_entry *, const char *);",
          "151: private int parse_apple(struct magic_set *, struct magic_entry *, const char *);",
          "154: private size_t magicsize = sizeof(struct magic);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "152: private int parse_ext(struct magic_set *, struct magic_entry *, const char *);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "163: #define DECLARE_FIELD(name) { # name, sizeof(# name) - 1, parse_ ## name }",
          "164:  DECLARE_FIELD(mime),",
          "165:  DECLARE_FIELD(apple),",
          "166:  DECLARE_FIELD(strength),",
          "167: #undef DECLARE_FIELD",
          "168:  { NULL, 0, NULL }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:  DECLARE_FIELD(ext),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2254:      sizeof(m->apple), \"APPLE\", \"!+-./\", 0);",
          "2255: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2262: private int",
          "2263: parse_ext(struct magic_set *ms, struct magic_entry *me, const char *line)",
          "2264: {",
          "2265:  struct magic *m = &me->mp[0];",
          "2267:  return parse_extra(ms, me, line,",
          "2268:      CAST(off_t, offsetof(struct magic, ext)),",
          "2269:      sizeof(m->ext), \"EXTENSION\", \",!+-/\", 0);",
          "2270: }",
          "",
          "---------------"
        ],
        "src/ascmagic.c||src/ascmagic.c": [
          "File: src/ascmagic.c -> src/ascmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.90 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.91 2014/11/28 02:46:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:  const char *code_mime = NULL;",
          "80:  const char *type = NULL;",
          "83:   return 0;",
          "85:  nbytes = trim_nuls(buf, nbytes);",
          "",
          "[Removed Lines]",
          "82:  if (ms->flags & MAGIC_APPLE)",
          "",
          "[Added Lines]",
          "82:  if (ms->flags & (MAGIC_APPLE|MAGIC_EXTENSION))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "123:  size_t last_line_end = (size_t)-1;",
          "124:  int has_long_lines = 0;",
          "127:   return 0;",
          "129:  nbytes = trim_nuls(buf, nbytes);",
          "",
          "[Removed Lines]",
          "126:  if (ms->flags & MAGIC_APPLE)",
          "",
          "[Added Lines]",
          "126:  if (ms->flags & (MAGIC_APPLE|MAGIC_EXTENSION))",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.161 2015/01/02 21:29:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.162 2015/02/09 20:15:50 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76: # define USAGE  \\",
          "77:     \"Usage: %s [\" FILE_FLAGS \\",
          "79:     \"            [-e testname] [-F separator] [-f namefile] [-m magicfiles] \" \\",
          "80:     \"file ...\\n\" \\",
          "81:     \"       %s -C [-m magicfiles]\\n\" \\",
          "",
          "[Removed Lines]",
          "78:  \"] [--apple] [--mime-encoding] [--mime-type]\\n\" \\",
          "",
          "[Added Lines]",
          "78:  \"] [--apple] [--extension] [--mime-encoding] [--mime-type]\\n\" \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "191:     flags |= MAGIC_APPLE;",
          "192:     break;",
          "193:    case 11:",
          "195:     break;",
          "196:    case 12:",
          "197:     flags |= MAGIC_MIME_ENCODING;",
          "198:     break;",
          "199:    }",
          "",
          "[Removed Lines]",
          "194:     flags |= MAGIC_MIME_TYPE;",
          "",
          "[Added Lines]",
          "194:     flags |= MAGIC_EXTENSION;",
          "197:     flags |= MAGIC_MIME_TYPE;",
          "198:     break;",
          "199:    case 13:",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "137: #define MAGICNO  0xF11E041C",
          "141: #define FILE_LOAD 0",
          "142: #define FILE_CHECK 1",
          "",
          "[Removed Lines]",
          "138: #define VERSIONNO 12",
          "139: #define FILE_MAGICSIZE 248",
          "",
          "[Added Lines]",
          "138: #define VERSIONNO 13",
          "139: #define FILE_MAGICSIZE 312",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "311: };",
          "313: #define BIT(A)   (1 << (A))",
          "",
          "[Removed Lines]",
          "310:  char apple[8];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/file_opts.h||src/file_opts.h": [
          "File: src/file_opts.h -> src/file_opts.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: OPT('i', \"mime\", 0, \"                 output MIME type strings (--mime-type and\\n\"",
          "30:     \"                               --mime-encoding)\\n\")",
          "31: OPT_LONGONLY(\"apple\", 0, \"                output the Apple CREATOR/TYPE\\n\")",
          "32: OPT_LONGONLY(\"mime-type\", 0, \"            output the MIME type\\n\")",
          "33: OPT_LONGONLY(\"mime-encoding\", 0, \"        output the MIME encoding\\n\")",
          "34: OPT('k', \"keep-going\", 0, \"           don't stop at the first match\\n\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: OPT_LONGONLY(\"extension\", 0, \"            output a comma-separated list of extnsions\\n\")",
          "",
          "---------------"
        ],
        "src/fsmagic.c||src/fsmagic.c": [
          "File: src/fsmagic.c -> src/fsmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: fsmagic.c,v 1.74 2014/10/13 20:21:49 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: fsmagic.c,v 1.75 2014/12/04 15:56:46 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110:  struct stat tstatbuf;",
          "111: #endif",
          "114:   return 0;",
          "115:  if (fn == NULL)",
          "116:   return 0;",
          "",
          "[Removed Lines]",
          "113:  if (ms->flags & MAGIC_APPLE)",
          "",
          "[Added Lines]",
          "113:  if (ms->flags & (MAGIC_APPLE|MAGIC_EXTENSION))",
          "",
          "---------------"
        ],
        "src/is_tar.c||src/is_tar.c": [
          "File: src/is_tar.c -> src/is_tar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: #include \"file.h\"",
          "42: #ifndef lint",
          "44: #endif",
          "46: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "43: FILE_RCSID(\"@(#)$File: is_tar.c,v 1.36 2009/02/03 20:27:51 christos Exp $\")",
          "",
          "[Added Lines]",
          "43: FILE_RCSID(\"@(#)$File: is_tar.c,v 1.37 2010/11/30 14:58:53 rrt Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:  int tar;",
          "70:  int mime = ms->flags & MAGIC_MIME;",
          "73:   return 0;",
          "75:  tar = is_tar(buf, nbytes);",
          "",
          "[Removed Lines]",
          "72:  if ((ms->flags & MAGIC_APPLE) != 0)",
          "",
          "[Added Lines]",
          "72:  if ((ms->flags & (MAGIC_APPLE|MAGIC_EXTENSION)) != 0)",
          "",
          "---------------"
        ],
        "src/readcdf.c||src/readcdf.c": [
          "File: src/readcdf.c -> src/readcdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"file.h\"",
          "28: #ifndef lint",
          "30: #endif",
          "32: #include <assert.h>",
          "",
          "[Removed Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.51 2015/01/11 16:58:25 christos Exp $\")",
          "",
          "[Added Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.52 2015/02/27 21:16:38 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "454:         info.i_fd = fd;",
          "455:         info.i_buf = buf;",
          "456:         info.i_len = nbytes;",
          "458:                 return 0;",
          "459:         if (cdf_read_header(&info, &h) == -1)",
          "460:                 return 0;",
          "",
          "[Removed Lines]",
          "457:         if (ms->flags & MAGIC_APPLE)",
          "",
          "[Added Lines]",
          "457:         if (ms->flags & (MAGIC_APPLE|MAGIC_EXTENSION))",
          "",
          "---------------"
        ],
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.117 2014/12/16 23:29:42 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.118 2015/01/02 21:29:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1353:  Elf64_Ehdr elf64hdr;",
          "1354:  uint16_t type, phnum, shnum, notecount;",
          "1357:   return 0;",
          "",
          "[Removed Lines]",
          "1356:  if (ms->flags & (MAGIC_MIME|MAGIC_APPLE))",
          "",
          "[Added Lines]",
          "1356:  if (ms->flags & (MAGIC_MIME|MAGIC_APPLE|MAGIC_EXTENSION))",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.212 2015/01/24 22:11:25 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.213 2015/02/14 18:43:12 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:  unsigned int cont_level = 0;",
          "152:  if (returnval == NULL)",
          "153:   returnval = &returnvalv;",
          "",
          "[Removed Lines]",
          "150:  int print = (ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0;",
          "",
          "[Added Lines]",
          "150:  int print = (ms->flags & (MAGIC_MIME|MAGIC_APPLE|MAGIC_EXTENSION)) == 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1674:    return -1;",
          "1676:   if (rv == 1) {",
          "1678:        file_printf(ms, F(ms, m, \"%u\"), offset) == -1) {",
          "1679:     free(rbuf);",
          "1680:     return -1;",
          "",
          "[Removed Lines]",
          "1677:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0 &&",
          "",
          "[Added Lines]",
          "1677:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE|MAGIC_EXTENSION)) == 0 &&",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2136:    return -1;",
          "2137:   return 1;",
          "2138:  }",
          "2139:  if ((ms->flags & MAGIC_MIME_TYPE) && m->mimetype[0]) {",
          "2140:   if (file_printf(ms, \"%s\", m->mimetype) == -1)",
          "2141:    return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2139:  if (ms->flags & MAGIC_EXTENSION) {",
          "2140:   if (file_printf(ms, \"%s\", m->ext) == -1)",
          "2141:    return -1;",
          "2142:   return 1;",
          "2143:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4f2c3a679da0d6eef33ecd6f77d472930c407fc8",
      "candidate_info": {
        "commit_hash": "4f2c3a679da0d6eef33ecd6f77d472930c407fc8",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/4f2c3a679da0d6eef33ecd6f77d472930c407fc8",
        "files": [
          "src/readelf.c"
        ],
        "message": "handle more empty interpreters.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.112 2014/12/11 12:34:24 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.113 2014/12/11 14:10:53 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1225:   switch (xph_type) {",
          "1226:   case PT_INTERP:",
          "1228:     nbuf[bufsize - 1] = '\\0';",
          "1229:     interp = (const char *)nbuf;",
          "1230:    } else",
          "",
          "[Removed Lines]",
          "1227:    if (bufsize) {",
          "",
          "[Added Lines]",
          "1227:    if (bufsize && nbuf[0]) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "445c8fb0ebff85195be94cd9f7e1df89cade5c7f",
      "candidate_info": {
        "commit_hash": "445c8fb0ebff85195be94cd9f7e1df89cade5c7f",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/445c8fb0ebff85195be94cd9f7e1df89cade5c7f",
        "files": [
          "src/readelf.c"
        ],
        "message": "Bail out on partial reads, from Alexander Cherepanov",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.113 2014/12/11 14:10:53 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.114 2014/12/11 14:19:36 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "321:  for ( ; num; num--) {",
          "323:    file_badread(ms);",
          "324:    return -1;",
          "325:   }",
          "",
          "[Removed Lines]",
          "322:   if (pread(fd, xph_addr, xph_sizeof, off) == -1) {",
          "",
          "[Added Lines]",
          "322:   if (pread(fd, xph_addr, xph_sizeof, off) < (ssize_t)xph_sizeof) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "930:  char name[50];",
          "932:  if (size != xsh_sizeof) {",
          "933:   if (file_printf(ms, \", corrupted section header size\") == -1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "931:  ssize_t namesize;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "936:  }",
          "940:   file_badread(ms);",
          "941:   return -1;",
          "942:  }",
          "",
          "[Removed Lines]",
          "939:  if (pread(fd, xsh_addr, xsh_sizeof, off + size * strtab) == -1) {",
          "",
          "[Added Lines]",
          "940:  if (pread(fd, xsh_addr, xsh_sizeof, off + size * strtab) < (ssize_t)xsh_sizeof) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "945:  for ( ; num; num--) {",
          "948:    file_badread(ms);",
          "949:    return -1;",
          "950:   }",
          "952:   if (strcmp(name, \".debug_info\") == 0)",
          "953:    stripped = 0;",
          "956:    file_badread(ms);",
          "957:    return -1;",
          "958:   }",
          "",
          "[Removed Lines]",
          "947:   if (pread(fd, name, sizeof(name), name_off + xsh_name) == -1) {",
          "951:   name[sizeof(name) - 1] = '\\0';",
          "955:   if (pread(fd, xsh_addr, xsh_sizeof, off) == -1) {",
          "",
          "[Added Lines]",
          "948:   if ((namesize = pread(fd, name, sizeof(name) - 1, name_off + xsh_name)) == -1) {",
          "952:   name[namesize] = '\\0';",
          "956:   if (pread(fd, xsh_addr, xsh_sizeof, off) < (ssize_t)xsh_sizeof) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "982:         \" for note\");",
          "983:     return -1;",
          "984:    }",
          "986:     file_badread(ms);",
          "987:     free(nbuf);",
          "988:     return -1;",
          "",
          "[Removed Lines]",
          "985:    if (pread(fd, nbuf, xsh_size, xsh_offset) == -1) {",
          "",
          "[Added Lines]",
          "986:    if (pread(fd, nbuf, xsh_size, xsh_offset) < (ssize_t)xsh_size) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1178:  }",
          "1180:    for ( ; num; num--) {",
          "1182:    file_badread(ms);",
          "1183:    return -1;",
          "1184:   }",
          "",
          "[Removed Lines]",
          "1181:   if (pread(fd, xph_addr, xph_sizeof, off) == -1) {",
          "",
          "[Added Lines]",
          "1182:   if (pread(fd, xph_addr, xph_sizeof, off) < (ssize_t)xph_sizeof) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d9e70c212540b39ff1b48b6599345ffedf6fd1f3",
      "candidate_info": {
        "commit_hash": "d9e70c212540b39ff1b48b6599345ffedf6fd1f3",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/d9e70c212540b39ff1b48b6599345ffedf6fd1f3",
        "files": [
          "src/readelf.c"
        ],
        "message": "rename the \"from\" tag in the auxv to \"execfn\".",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.123 2015/10/09 14:38:47 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.124 2015/11/05 16:58:31 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "945:   switch(xauxv_type) {",
          "946:   case AT_LINUX_EXECFN:",
          "947:    is_string = 1;",
          "949:    break;",
          "950:   case AT_LINUX_PLATFORM:",
          "951:    is_string = 1;",
          "",
          "[Removed Lines]",
          "948:    tag = \"from\";",
          "",
          "[Added Lines]",
          "948:    tag = \"execfn\";",
          "",
          "---------------"
        ]
      }
    }
  ]
}