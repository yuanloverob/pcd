{
  "cve_id": "CVE-2018-8799",
  "cve_desc": "rdesktop versions up to and including v1.8.3 contain an Out-Of-Bounds Read in function process_secondary_order() that results in a Denial of Service (segfault).",
  "repo": "rdesktop/rdesktop",
  "patch_hash": "4dca546d04321a610c1835010b5dad85163b65e1",
  "patch_info": {
    "commit_hash": "4dca546d04321a610c1835010b5dad85163b65e1",
    "repo": "rdesktop/rdesktop",
    "commit_url": "https://github.com/rdesktop/rdesktop/commit/4dca546d04321a610c1835010b5dad85163b65e1",
    "files": [
      "asn.c",
      "bitmap.c",
      "cliprdr.c",
      "constants.h",
      "cssp.c",
      "lspci.c",
      "mcs.c",
      "orders.c",
      "proto.h",
      "rdp.c",
      "rdpdr.c",
      "rdpsnd.c",
      "seamless.c",
      "secure.c",
      "stream.h",
      "types.h"
    ],
    "message": "Malicious RDP server security fixes\n\nThis commit includes fixes for a set of 21 vulnerabilities in\nrdesktop when a malicious RDP server is used.\n\nAll vulnerabilities was identified and reported by Eyal Itkin.\n\n * Add rdp_protocol_error function that is used in several fixes\n * Refactor of process_bitmap_updates\n * Fix possible integer overflow in s_check_rem() on 32bit arch\n * Fix memory corruption in process_bitmap_data - CVE-2018-8794\n * Fix remote code execution in process_bitmap_data - CVE-2018-8795\n * Fix remote code execution in process_plane - CVE-2018-8797\n * Fix Denial of Service in mcs_recv_connect_response - CVE-2018-20175\n * Fix Denial of Service in mcs_parse_domain_params - CVE-2018-20175\n * Fix Denial of Service in sec_parse_crypt_info - CVE-2018-20176\n * Fix Denial of Service in sec_recv - CVE-2018-20176\n * Fix minor information leak in rdpdr_process - CVE-2018-8791\n * Fix Denial of Service in cssp_read_tsrequest - CVE-2018-8792\n * Fix remote code execution in cssp_read_tsrequest - CVE-2018-8793\n * Fix Denial of Service in process_bitmap_data - CVE-2018-8796\n * Fix minor information leak in rdpsnd_process_ping - CVE-2018-8798\n * Fix Denial of Service in process_secondary_order - CVE-2018-8799\n * Fix remote code execution in in ui_clip_handle_data - CVE-2018-8800\n * Fix major information leak in ui_clip_handle_data - CVE-2018-20174\n * Fix memory corruption in rdp_in_unistr - CVE-2018-20177\n * Fix Denial of Service in process_demand_active - CVE-2018-20178\n * Fix remote code execution in lspci_process - CVE-2018-20179\n * Fix remote code execution in rdpsnddbg_process - CVE-2018-20180\n * Fix remote code execution in seamless_process - CVE-2018-20181\n * Fix remote code execution in seamless_process_line - CVE-2018-20182",
    "before_after_code_files": [
      "asn.c||asn.c",
      "bitmap.c||bitmap.c",
      "cliprdr.c||cliprdr.c",
      "constants.h||constants.h",
      "cssp.c||cssp.c",
      "lspci.c||lspci.c",
      "mcs.c||mcs.c",
      "orders.c||orders.c",
      "proto.h||proto.h",
      "rdp.c||rdp.c",
      "rdpdr.c||rdpdr.c",
      "rdpsnd.c||rdpsnd.c",
      "seamless.c||seamless.c",
      "secure.c||secure.c",
      "stream.h||stream.h",
      "types.h||types.h"
    ]
  },
  "patch_diff": {
    "asn.c||asn.c": [
      "File: asn.c -> asn.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "24: RD_BOOL",
      "26: {",
      "27:  int tag, len;",
      "",
      "[Removed Lines]",
      "25: ber_parse_header(STREAM s, int tagval, int *length)",
      "",
      "[Added Lines]",
      "25: ber_parse_header(STREAM s, int tagval, uint32 *length)",
      "",
      "---------------"
    ],
    "bitmap.c||bitmap.c": [
      "File: bitmap.c -> bitmap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "794:      replen = revcode;",
      "795:      collen = 0;",
      "796:     }",
      "798:     {",
      "799:      color = CVAL(in);",
      "",
      "[Removed Lines]",
      "797:     while (collen > 0)",
      "",
      "[Added Lines]",
      "797:     while (indexw < width && collen > 0)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "802:      indexw++;",
      "803:      collen--;",
      "804:     }",
      "806:     {",
      "808:      out += 4;",
      "",
      "[Removed Lines]",
      "805:     while (replen > 0)",
      "",
      "[Added Lines]",
      "805:     while (indexw < width && replen > 0)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "824:      replen = revcode;",
      "825:      collen = 0;",
      "826:     }",
      "828:     {",
      "829:      x = CVAL(in);",
      "830:      if (x & 1)",
      "",
      "[Removed Lines]",
      "827:     while (collen > 0)",
      "",
      "[Added Lines]",
      "827:     while (indexw < width && collen > 0)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "844:      indexw++;",
      "845:      collen--;",
      "846:     }",
      "848:     {",
      "849:      x = last_line[indexw * 4] + color;",
      "",
      "[Removed Lines]",
      "847:     while (replen > 0)",
      "",
      "[Added Lines]",
      "847:     while (indexw < width && replen > 0)",
      "",
      "---------------"
    ],
    "cliprdr.c||cliprdr.c": [
      "File: cliprdr.c -> cliprdr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "118:  uint16 type, status;",
      "119:  uint32 length, format;",
      "120:  uint8 *data;",
      "122:  in_uint16_le(s, type);",
      "123:  in_uint16_le(s, status);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "121:  struct stream packet = *s;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "127:  logger(Clipboard, Debug, \"cliprdr_process(), type=%d, status=%d, length=%d\", type, status,",
      "128:         length);",
      "130:  if (status == CLIPRDR_ERROR)",
      "131:  {",
      "132:   switch (type)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "131:  if (!s_check_rem(s, length))",
      "132:  {",
      "133:   rdp_protocol_error(\"cliprdr_process(), consume of packet from stream would overrun\", &packet);",
      "134:  }",
      "",
      "---------------"
    ],
    "constants.h||constants.h": [
      "File: constants.h -> constants.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "751: #define ENC_SALTED_CHECKSUM  0x0010",
      "752: #define NO_BITMAP_COMPRESSION_HDR 0x0400",
      "755: #define NEGOTIATEORDERSUPPORT 0x0002",
      "756: #define ZEROBOUNDSDELTASSUPPORT 0x0008",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "755: #define BITMAP_COMPRESSION              0x0001",
      "",
      "---------------"
    ],
    "cssp.c||cssp.c": [
      "File: cssp.c -> cssp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "595:  STREAM s;",
      "596:  int length;",
      "597:  int tagval;",
      "599:  s = tcp_recv(NULL, 4);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "598:  struct stream packet;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "624:  s = tcp_recv(s, length);",
      "627:  if (!ber_in_header(s, &tagval, &length) ||",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "626:  packet = *s;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "632:  if (!ber_in_header(s, &tagval, &length) ||",
      "633:      tagval != (BER_TAG_CTXT_SPECIFIC | BER_TAG_CONSTRUCTED | 0))",
      "634:   return False;",
      "635:  in_uint8s(s, length);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "638:  if (!s_check_rem(s, length))",
      "639:  {",
      "640:    rdp_protocol_error(\"cssp_read_tsrequest(), consume of version from stream would overrun\",",
      "641:         &packet);",
      "642:  }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "653:   if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)",
      "654:    return False;",
      "657:   out_uint8p(token, s->p, length);",
      "658:   s_mark_end(token);",
      "659:  }",
      "",
      "[Removed Lines]",
      "656:   token->end = token->p = token->data;",
      "",
      "[Added Lines]",
      "664:   if (!s_check_rem(s, length))",
      "665:   {",
      "666:    rdp_protocol_error(\"cssp_read_tsrequest(), consume of token from stream would overrun\",",
      "667:         &packet);",
      "668:   }",
      "670:   s_realloc(token, length);",
      "671:   s_reset(token);",
      "",
      "---------------"
    ],
    "lspci.c||lspci.c": [
      "File: lspci.c -> lspci.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2:    rdesktop: A Remote Desktop Protocol client.",
      "3:    Support for the Matrox \"lspci\" channel",
      "6:    This program is free software: you can redistribute it and/or modify",
      "7:    it under the terms of the GNU General Public License as published by",
      "",
      "[Removed Lines]",
      "4:    Copyright (C) 2005 Matrox Graphics Inc.",
      "",
      "[Added Lines]",
      "4:    Copyright (C) 2005 Matrox Graphics Inc.",
      "5:    Copyright 2018 Henrik Andersson <hean01@cendio.se> for Cendio AB",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "134:  unsigned int pkglen;",
      "135:  static char *rest = NULL;",
      "136:  char *buf;",
      "138:  pkglen = s->end - s->p;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "138:  struct stream packet = *s;",
      "140:  if (!s_check(s))",
      "141:  {",
      "142:   rdp_protocol_error(\"lspci_process(), stream is in unstable state\", &packet);",
      "143:  }",
      "",
      "---------------"
    ],
    "mcs.c||mcs.c": [
      "File: mcs.c -> mcs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "45: static RD_BOOL",
      "46: mcs_parse_domain_params(STREAM s)",
      "47: {",
      "50:  ber_parse_header(s, MCS_TAG_DOMAIN_PARAMS, &length);",
      "51:  in_uint8s(s, length);",
      "53:  return s_check(s);",
      "",
      "[Removed Lines]",
      "48:  int length;",
      "",
      "[Added Lines]",
      "48:  uint32 length;",
      "49:  struct stream packet = *s;",
      "53:  if (!s_check_rem(s, length))",
      "54:  {",
      "55:   rdp_protocol_error(\"mcs_parse_domain_params(), consume domain params from stream would overrun\", &packet);",
      "56:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "89: {",
      "90:  UNUSED(mcs_data);",
      "91:  uint8 result;",
      "93:  STREAM s;",
      "94:  RD_BOOL is_fastpath;",
      "95:  uint8 fastpath_hdr;",
      "",
      "[Removed Lines]",
      "92:  int length;",
      "",
      "[Added Lines]",
      "99:  uint32 length;",
      "101:  struct stream packet;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "100:  if (s == NULL)",
      "101:   return False;",
      "103:  ber_parse_header(s, MCS_CONNECT_RESPONSE, &length);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "111:  packet = *s;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "113:  ber_parse_header(s, BER_TAG_INTEGER, &length);",
      "115:  mcs_parse_domain_params(s);",
      "117:  ber_parse_header(s, BER_TAG_OCTET_STRING, &length);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "126:  if (!s_check_rem(s, length))",
      "127:  {",
      "128:   rdp_protocol_error(\"mcs_recv_connect_response(), consume connect id from stream would overrun\", &packet);",
      "129:  }",
      "",
      "---------------"
    ],
    "orders.c||orders.c": [
      "File: orders.c -> orders.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1259:  uint16 flags;",
      "1260:  uint8 type;",
      "1261:  uint8 *next_order;",
      "1263:  in_uint16_le(s, length);",
      "1265:  in_uint8(s, type);",
      "1267:  next_order = s->p + (sint16) length + 7;",
      "1269:  switch (type)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1262:  struct stream packet = *s;",
      "1268:  if (!s_check_rem(s, length + 7))",
      "1269:  {",
      "1270:   rdp_protocol_error(\"process_secondary_order(), next order pointer would overrun stream\", &packet);",
      "1271:  }",
      "",
      "---------------"
    ],
    "proto.h||proto.h": [
      "File: proto.h -> proto.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "164:       char *directory, RD_BOOL reconnect);",
      "165: void rdp_reset_state(void);",
      "166: void rdp_disconnect(void);",
      "168: int get_device_index(RD_NTHANDLE handle);",
      "169: void convert_to_unix_filename(char *filename);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "167: void rdp_protocol_error(const char *message, STREAM s);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "225: RD_BOOL ber_in_header(STREAM s, int *tagval, int *length);",
      "226: void ber_out_header(STREAM s, int tagval, int length);",
      "228: void ber_out_integer(STREAM s, int value);",
      "229: void ber_out_sequence(STREAM s, STREAM contents);",
      "",
      "[Removed Lines]",
      "227: RD_BOOL ber_parse_header(STREAM s, int tagval, int *length);",
      "",
      "[Added Lines]",
      "228: RD_BOOL ber_parse_header(STREAM s, int tagval, uint32 *length);",
      "",
      "---------------"
    ],
    "rdp.c||rdp.c": [
      "File: rdp.c -> rdp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "285:  size_t ibl, obl;",
      "286:  char *pin, *pout;",
      "289:  if (!icv_utf16_to_local)",
      "290:  {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "288:  struct stream packet = *s;",
      "290:  if ((in_len < 0) || ((uint32)in_len >= (RD_UINT32_MAX / 2)))",
      "291:  {",
      "292:   logger(Protocol, Error, \"rdp_in_unistr(), length of unicode data is out of bounds.\");",
      "293:   abort();",
      "294:  }",
      "296:  if (!s_check_rem(s, in_len))",
      "297:  {",
      "298:   rdp_protocol_error(\"rdp_in_unistr(), consume of unicode data from stream would overrun\", &packet);",
      "299:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1211: {",
      "1212:  uint8 type;",
      "1213:  uint16 len_src_descriptor, len_combined_caps;",
      "1216:  rd_create_ui();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1227:  struct stream packet = *s;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1218:  in_uint32_le(s, g_rdp_shareid);",
      "1219:  in_uint16_le(s, len_src_descriptor);",
      "1220:  in_uint16_le(s, len_combined_caps);",
      "1221:  in_uint8s(s, len_src_descriptor);",
      "1223:  logger(Protocol, Debug, \"process_demand_active(), shareid=0x%x\", g_rdp_shareid);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1236:  if (!s_check_rem(s, len_src_descriptor))",
      "1237:  {",
      "1238:   rdp_protocol_error(\"rdp_demand_active(), consume of source descriptor from stream would overrun\", &packet);",
      "1239:  }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1390:  }",
      "1391: }",
      "1396: {",
      "1398:  uint16 left, top, right, bottom, width, height;",
      "1400:  uint8 *data, *bmpdata;",
      "1403:  logger(Protocol, Debug, \"%s()\", __func__);",
      "1453:   bmpdata = (uint8 *) xmalloc(width * height * Bpp);",
      "1455:   {",
      "1457:   }",
      "1464:   xfree(bmpdata);",
      "1465:  }",
      "1466: }",
      "",
      "[Removed Lines]",
      "1394: void",
      "1395: process_bitmap_updates(STREAM s)",
      "1397:  uint16 num_updates;",
      "1399:  uint16 cx, cy, bpp, Bpp, compress, bufsize, size;",
      "1401:  int i;",
      "1405:  in_uint16_le(s, num_updates);",
      "1407:  for (i = 0; i < num_updates; i++)",
      "1408:  {",
      "1409:   in_uint16_le(s, left);",
      "1410:   in_uint16_le(s, top);",
      "1411:   in_uint16_le(s, right);",
      "1412:   in_uint16_le(s, bottom);",
      "1413:   in_uint16_le(s, width);",
      "1414:   in_uint16_le(s, height);",
      "1415:   in_uint16_le(s, bpp);",
      "1416:   Bpp = (bpp + 7) / 8;",
      "1417:   in_uint16_le(s, compress);",
      "1418:   in_uint16_le(s, bufsize);",
      "1420:   cx = right - left + 1;",
      "1421:   cy = bottom - top + 1;",
      "1423:   logger(Graphics, Debug,",
      "1424:          \"process_bitmap_updates(), [%d,%d,%d,%d], [%d,%d], bpp=%d, compression=%d\",",
      "1425:          left, top, right, bottom, width, height, Bpp, compress);",
      "1427:   if (!compress)",
      "1428:   {",
      "1429:    int y;",
      "1430:    bmpdata = (uint8 *) xmalloc(width * height * Bpp);",
      "1431:    for (y = 0; y < height; y++)",
      "1432:    {",
      "1433:     in_uint8a(s, &bmpdata[(height - y - 1) * (width * Bpp)],",
      "1434:        width * Bpp);",
      "1435:    }",
      "1436:    ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);",
      "1437:    xfree(bmpdata);",
      "1438:    continue;",
      "1439:   }",
      "1442:   if (compress & 0x400)",
      "1443:   {",
      "1444:    size = bufsize;",
      "1445:   }",
      "1446:   else",
      "1447:   {",
      "1449:    in_uint16_le(s, size);",
      "1451:   }",
      "1452:   in_uint8p(s, data, size);",
      "1454:   if (bitmap_decompress(bmpdata, width, height, data, size, Bpp))",
      "1456:    ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);",
      "1458:   else",
      "1459:   {",
      "1460:    logger(Graphics, Warning,",
      "1461:           \"process_bitmap_updates(), failed to decompress bitmap\");",
      "1462:   }",
      "",
      "[Added Lines]",
      "1413: static void",
      "1414: process_bitmap_data(STREAM s)",
      "1417:  uint16 cx, cy, bpp, Bpp, flags, bufsize, size;",
      "1422:  struct stream packet = *s;",
      "1431:  Bpp = (bpp + 7) / 8;",
      "1435:  cx = right - left + 1;",
      "1436:  cy = bottom - top + 1;",
      "1439:   this code. The value of bpp is not passed to",
      "1440:   ui_paint_bitmap() which relies on g_server_bpp for drawing",
      "1441:   the bitmap data.",
      "1443:   Does this means that we can sanity check bpp with g_server_bpp ?",
      "1446:  if (Bpp == 0 || width == 0 || height == 0)",
      "1447:  {",
      "1448:         logger(Protocol, Warning, \"%s(), [%d,%d,%d,%d], [%d,%d], bpp=%d, flags=%x\", __func__,",
      "1449:     left, top, right, bottom, width, height, bpp, flags);",
      "1450:   rdp_protocol_error(\"TS_BITMAP_DATA, unsafe size of bitmap data received from server\", &packet);",
      "1451:  }",
      "1453:  if ((RD_UINT32_MAX / Bpp) <= (width * height))",
      "1454:  {",
      "1455:   logger(Protocol, Warning, \"%s(), [%d,%d,%d,%d], [%d,%d], bpp=%d, flags=%x\", __func__,",
      "1456:     left, top, right, bottom, width, height, bpp, flags);",
      "1457:   rdp_protocol_error(\"TS_BITMAP_DATA, unsafe size of bitmap data received from server\", &packet);",
      "1458:  }",
      "1460:  if (flags == 0)",
      "1461:  {",
      "1463:   int y;",
      "1465:   for (y = 0; y < height; y++)",
      "1467:    in_uint8a(s, &bmpdata[(height - y - 1) * (width * Bpp)], width * Bpp);",
      "1470:   ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);",
      "1472:   return;",
      "1473:  }",
      "1475:  if (flags & NO_BITMAP_COMPRESSION_HDR)",
      "1476:  {",
      "1477:   size = bufsize;",
      "1478:  }",
      "1479:  else",
      "1480:  {",
      "1486:  }",
      "1489:  if (!s_check_rem(s, size))",
      "1490:  {",
      "1491:   rdp_protocol_error(\"process_bitmap_data(), consume of bitmap data from stream would overrun\", &packet);",
      "1492:  }",
      "1493:  in_uint8p(s, data, size);",
      "1494:  bmpdata = (uint8 *) xmalloc(width * height * Bpp);",
      "1495:  if (bitmap_decompress(bmpdata, width, height, data, size, Bpp))",
      "1496:  {",
      "1497:   ui_paint_bitmap(left, top, cx, cy, width, height, bmpdata);",
      "1498:  }",
      "1499:  else",
      "1500:  {",
      "1501:   logger(Protocol, Warning, \"%s(), failed to decompress bitmap\", __func__);",
      "1502:  }",
      "1504:  xfree(bmpdata);",
      "1505: }",
      "1508: void",
      "1509: process_bitmap_updates(STREAM s)",
      "1510: {",
      "1511:  int i;",
      "1512:  uint16 num_updates;",
      "1516:  for (i = 0; i < num_updates; i++)",
      "1517:  {",
      "1518:   process_bitmap_data(s);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2013:  logger(Protocol, Debug, \"%s()\", __func__);",
      "2014:  sec_disconnect();",
      "2015: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2073:    A protocol error is defined as:",
      "2075:     - A value is outside specified range for example;",
      "2076:       bpp for a bitmap is not allowed to be greater than the",
      "2077:       value 32 but is represented by a byte in protocol.",
      "2080: void",
      "2081: rdp_protocol_error(const char *message, STREAM s)",
      "2082: {",
      "2083:  logger(Protocol, Error, \"%s(), %s\", __func__, message);",
      "2084:  if (s)",
      "2085:   hexdump(s->p, s_length(s));",
      "2086:  exit(0);",
      "2087: }",
      "",
      "---------------"
    ],
    "rdpdr.c||rdpdr.c": [
      "File: rdpdr.c -> rdpdr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "854:  uint16 vmin;",
      "855:  uint16 component;",
      "856:  uint16 pakid;",
      "858:  logger(Protocol, Debug, \"rdpdr_process()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "857:  struct stream packet = *s;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "880:     if (vmin < 0x000c)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "881:        so lets check that we actually got",
      "882:        valid data from stream to prevent",
      "884:     if (!s_check(s))",
      "885:     {",
      "886:      rdp_protocol_error(\"rdpdr_process(), consume of g_client_id from stream did overrun\", &packet);",
      "887:     }",
      "",
      "---------------"
    ],
    "rdpsnd.c||rdpsnd.c": [
      "File: rdpsnd.c -> rdpsnd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "269:  uint16 tick;",
      "270:  uint16 packsize;",
      "271:  STREAM out;",
      "273:  in_uint16_le(in, tick);",
      "274:  in_uint16_le(in, packsize);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "272:  struct stream packet = *in;",
      "274:  if (!s_check_rem(in, 4))",
      "275:  {",
      "276:   rdp_protocol_error(\"rdpsnd_process_training(), consume of training data from stream would overrun\", &packet);",
      "277:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "445:  static char *rest = NULL;",
      "446:  char *buf;",
      "448:  pkglen = s->end - s->p;",
      "450:  buf = (char *) xmalloc(pkglen + 1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "454:  if (!s_check(s))",
      "455:  {",
      "456:   rdp_protocol_error(\"rdpsnddbg_process(), stream is in unstable state\", s);",
      "457:  }",
      "",
      "---------------"
    ],
    "seamless.c||seamless.c": [
      "File: seamless.c -> seamless.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "169:    icon_buf[len] = strtol(byte, NULL, 16);",
      "170:    len++;",
      "171:   }",
      "173:   ui_seamless_seticon(id, tok5, width, height, chunk, icon_buf, len);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "172:    if ((size_t)len >= sizeof(icon_buf))",
      "173:    {",
      "174:     logger(Protocol, Warning, \"seamless_process_line(), icon data would overrun icon_buf\");",
      "175:     break;",
      "176:    }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "370: {",
      "371:  unsigned int pkglen;",
      "372:  char *buf;",
      "374:  pkglen = s->end - s->p;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "379:  struct stream packet = *s;",
      "381:  if (!s_check(s))",
      "382:  {",
      "383:   rdp_protocol_error(\"seamless_process(), stream is in unstable state\", &packet);",
      "384:  }",
      "",
      "---------------"
    ],
    "secure.c||secure.c": [
      "File: secure.c -> secure.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "296: void",
      "297: sec_decrypt(uint8 * data, int length)",
      "298: {",
      "299:  if (g_sec_decrypt_use_count == 4096)",
      "300:  {",
      "301:   sec_update(g_sec_decrypt_key, g_sec_decrypt_update_key);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "299:  if (length <= 0)",
      "300:   return;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "848:  uint16 sec_flags;",
      "849:  uint16 channel;",
      "850:  STREAM s;",
      "852:  while ((s = mcs_recv(&channel, is_fastpath, &fastpath_hdr)) != NULL)",
      "853:  {",
      "854:   if (*is_fastpath == True)",
      "855:   {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "854:  struct stream packet;",
      "858:   packet = *s;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "859:    fastpath_flags = (fastpath_hdr & 0xC0) >> 6;",
      "860:    if (fastpath_flags & FASTPATH_OUTPUT_ENCRYPTED)",
      "861:    {",
      "863:     sec_decrypt(s->p, s->end - s->p);",
      "864:    }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "867:     if (!s_check_rem(s, 8)) {",
      "868:      rdp_protocol_error(\"sec_recv(), consume fastpath signature from stream would overrun\", &packet);",
      "869:     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "875:    {",
      "876:     if (sec_flags & SEC_ENCRYPT)",
      "877:     {",
      "879:      sec_decrypt(s->p, s->end - s->p);",
      "880:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "887:      if (!s_check_rem(s, 8)) {",
      "888:       rdp_protocol_error(\"sec_recv(), consume encrypt signature from stream would overrun\", &packet);",
      "889:      }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "889:     {",
      "890:      uint8 swapbyte;",
      "893:      sec_decrypt(s->p, s->end - s->p);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "905:      if (!s_check_rem(s, 8)) {",
      "906:       rdp_protocol_error(\"sec_recv(), consume redirect signature from stream would overrun\", &packet);",
      "907:      }",
      "",
      "---------------"
    ],
    "stream.h||stream.h": [
      "File: stream.h -> stream.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "54: #define s_pop_layer(s,h) (s)->p = (s)->h;",
      "55: #define s_mark_end(s)  (s)->end = (s)->p;",
      "56: #define s_check(s)  ((s)->p <= (s)->end)",
      "58: #define s_check_end(s)  ((s)->p == (s)->end)",
      "59: #define s_length(s)  ((s)->end - (s)->data)",
      "60: #define s_left(s)               ((s)->size - ((s)->p - (s)->data))",
      "",
      "[Removed Lines]",
      "57: #define s_check_rem(s,n) ((s)->p + n <= (s)->end)",
      "",
      "[Added Lines]",
      "57: #define s_check_rem(s,n) (s_check(s) && (n <= (s)->end - (s)->p))",
      "",
      "---------------"
    ],
    "types.h||types.h": [
      "File: types.h -> types.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "43: typedef unsigned int uint32;",
      "44: typedef signed int sint32;",
      "46: typedef void *RD_HBITMAP;",
      "47: typedef void *RD_HGLYPH;",
      "48: typedef void *RD_HCOLOURMAP;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "46: #define RD_UINT32_MAX (uint32)(-1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6249a5fec33c4d66113416d882c69cf6d7cff37b",
      "candidate_info": {
        "commit_hash": "6249a5fec33c4d66113416d882c69cf6d7cff37b",
        "repo": "rdesktop/rdesktop",
        "commit_url": "https://github.com/rdesktop/rdesktop/commit/6249a5fec33c4d66113416d882c69cf6d7cff37b",
        "files": [
          "orders.c"
        ],
        "message": "Fix checking the length of remaining data in stream for very compact orders.",
        "before_after_code_files": [
          "orders.c||orders.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "orders.c||orders.c"
          ],
          "candidate": [
            "orders.c||orders.c"
          ]
        }
      },
      "candidate_diff": {
        "orders.c||orders.c": [
          "File: orders.c -> orders.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1266:  in_uint8(s, type);",
          "1269:  {",
          "1270:   rdp_protocol_error(\"process_secondary_order(), next order pointer would overrun stream\", &packet);",
          "1271:  }",
          "",
          "[Removed Lines]",
          "1268:  if (!s_check_rem(s, length + 7))",
          "",
          "[Added Lines]",
          "1268:  if (!s_check_rem(s, (sint16) length + 7))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "489c43f3827a9796972f4052ce3248d0c9191f07",
      "candidate_info": {
        "commit_hash": "489c43f3827a9796972f4052ce3248d0c9191f07",
        "repo": "rdesktop/rdesktop",
        "commit_url": "https://github.com/rdesktop/rdesktop/commit/489c43f3827a9796972f4052ce3248d0c9191f07",
        "files": [
          "cssp.c",
          "proto.h",
          "rdpsnd.c",
          "rdpsnd.h",
          "rdpsnd_alsa.c",
          "rdpsnd_dsp.c",
          "rdpsnd_libao.c",
          "rdpsnd_oss.c",
          "rdpsnd_pulse.c",
          "rdpsnd_sgi.c",
          "stream.c",
          "stream.h",
          "tcp.c"
        ],
        "message": "Return STREAM objects from data generating functions\n\nUse a consistent style of returning a new STREAM object from functions\nthat output data, rather than requiring an existing structure to be\npassed in. This generally makes the memory management more straight\nforward and allows us to do more proper bounds checking of everything.\n\nThis also adds some new STREAM macros to make it easier to manage\nthem without poking around in the internal structure.",
        "before_after_code_files": [
          "cssp.c||cssp.c",
          "proto.h||proto.h",
          "rdpsnd.c||rdpsnd.c",
          "rdpsnd.h||rdpsnd.h",
          "rdpsnd_alsa.c||rdpsnd_alsa.c",
          "rdpsnd_dsp.c||rdpsnd_dsp.c",
          "rdpsnd_libao.c||rdpsnd_libao.c",
          "rdpsnd_oss.c||rdpsnd_oss.c",
          "rdpsnd_pulse.c||rdpsnd_pulse.c",
          "rdpsnd_sgi.c||rdpsnd_sgi.c",
          "stream.c||stream.c",
          "stream.h||stream.h",
          "tcp.c||tcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "cssp.c||cssp.c",
            "proto.h||proto.h",
            "rdpsnd.c||rdpsnd.c",
            "stream.h||stream.h"
          ],
          "candidate": [
            "cssp.c||cssp.c",
            "proto.h||proto.h",
            "rdpsnd.c||rdpsnd.c",
            "stream.h||stream.h"
          ]
        }
      },
      "candidate_diff": {
        "cssp.c||cssp.c": [
          "File: cssp.c -> cssp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "140: }",
          "144: {",
          "145:  int conf_state;",
          "146:  OM_uint32 major_status;",
          "147:  OM_uint32 minor_status;",
          "148:  gss_buffer_desc inbuf, outbuf;",
          "150:  inbuf.value = in->data;",
          "151:  inbuf.length = s_length(in);",
          "",
          "[Removed Lines]",
          "142: static RD_BOOL",
          "143: cssp_gss_wrap(gss_ctx_id_t ctx, STREAM in, STREAM out)",
          "",
          "[Added Lines]",
          "142: static STREAM",
          "143: cssp_gss_wrap(gss_ctx_id_t ctx, STREAM in)",
          "149:  STREAM out;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:  {",
          "158:   cssp_gss_report_error(GSS_C_GSS_CODE, \"Failed to encrypt and sign message\",",
          "159:           major_status, minor_status);",
          "161:  }",
          "163:  if (!conf_state)",
          "164:  {",
          "165:   logger(Core, Error,",
          "166:          \"cssp_gss_wrap(), GSS Confidentiality failed, no encryption of message performed.\");",
          "168:  }",
          "173:  out_uint8a(out, outbuf.value, outbuf.length);",
          "174:  s_mark_end(out);",
          "176:  gss_release_buffer(&minor_status, &outbuf);",
          "179: }",
          "183: {",
          "184:  OM_uint32 major_status;",
          "185:  OM_uint32 minor_status;",
          "186:  gss_qop_t qop_state;",
          "187:  gss_buffer_desc inbuf, outbuf;",
          "188:  int conf_state;",
          "190:  inbuf.value = in->data;",
          "191:  inbuf.length = s_length(in);",
          "",
          "[Removed Lines]",
          "160:   return False;",
          "167:   return False;",
          "171:  out->data = out->p = xmalloc(outbuf.length);",
          "172:  out->size = outbuf.length;",
          "178:  return True;",
          "181: static RD_BOOL",
          "182: cssp_gss_unwrap(gss_ctx_id_t ctx, STREAM in, STREAM out)",
          "",
          "[Added Lines]",
          "161:   return NULL;",
          "168:   return NULL;",
          "172:  out = s_alloc(outbuf.length);",
          "175:  s_seek(out, 0);",
          "179:  return out;",
          "182: static STREAM",
          "183: cssp_gss_unwrap(gss_ctx_id_t ctx, STREAM in)",
          "190:  STREAM out;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "196:  {",
          "197:   cssp_gss_report_error(GSS_C_GSS_CODE, \"Failed to decrypt message\",",
          "198:           major_status, minor_status);",
          "200:  }",
          "204:  out_uint8a(out, outbuf.value, outbuf.length);",
          "205:  s_mark_end(out);",
          "207:  gss_release_buffer(&minor_status, &outbuf);",
          "210: }",
          "",
          "[Removed Lines]",
          "199:   return False;",
          "202:  out->data = out->p = xmalloc(outbuf.length);",
          "203:  out->size = outbuf.length;",
          "209:  return True;",
          "",
          "[Added Lines]",
          "201:   return NULL;",
          "204:  out = s_alloc(outbuf.length);",
          "207:  s_seek(out, 0);",
          "211:  return out;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "585: }",
          "590: {",
          "592:  int length;",
          "593:  int tagval;",
          "594:  struct stream packet;",
          "",
          "[Removed Lines]",
          "588: RD_BOOL",
          "589: cssp_read_tsrequest(STREAM token, STREAM pubkey)",
          "591:  STREAM s;",
          "",
          "[Added Lines]",
          "590: STREAM",
          "591: cssp_read_tsrequest(RD_BOOL pubkey)",
          "593:  STREAM s, out;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "596:  s = tcp_recv(NULL, 4);",
          "598:  if (s == NULL)",
          "602:  if (s->p[0] != (BER_TAG_SEQUENCE | BER_TAG_CONSTRUCTED))",
          "",
          "[Removed Lines]",
          "599:   return False;",
          "",
          "[Added Lines]",
          "601:   return NULL;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "604:   logger(Protocol, Error,",
          "605:          \"cssp_read_tsrequest(), expected BER_TAG_SEQUENCE|BER_TAG_CONSTRUCTED, got %x\",",
          "606:          s->p[0]);",
          "608:  }",
          "",
          "[Removed Lines]",
          "607:   return False;",
          "",
          "[Added Lines]",
          "609:   return NULL;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "615:  else if (s->p[1] == 0x82)",
          "616:   length = (s->p[2] << 8) | s->p[3];",
          "617:  else",
          "621:  s = tcp_recv(s, length);",
          "",
          "[Removed Lines]",
          "618:   return False;",
          "",
          "[Added Lines]",
          "620:   return NULL;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "625:  if (!ber_in_header(s, &tagval, &length) ||",
          "626:      tagval != (BER_TAG_SEQUENCE | BER_TAG_CONSTRUCTED))",
          "630:  if (!ber_in_header(s, &tagval, &length) ||",
          "631:      tagval != (BER_TAG_CTXT_SPECIFIC | BER_TAG_CONSTRUCTED | 0))",
          "634:  if (!s_check_rem(s, length))",
          "635:  {",
          "",
          "[Removed Lines]",
          "627:   return False;",
          "632:   return False;",
          "",
          "[Added Lines]",
          "629:   return NULL;",
          "634:   return NULL;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "639:  in_uint8s(s, length);",
          "643:  {",
          "644:   if (!ber_in_header(s, &tagval, &length)",
          "645:       || tagval != (BER_TAG_CTXT_SPECIFIC | BER_TAG_CONSTRUCTED | 1))",
          "647:   if (!ber_in_header(s, &tagval, &length)",
          "648:       || tagval != (BER_TAG_SEQUENCE | BER_TAG_CONSTRUCTED))",
          "650:   if (!ber_in_header(s, &tagval, &length)",
          "651:       || tagval != (BER_TAG_SEQUENCE | BER_TAG_CONSTRUCTED))",
          "653:   if (!ber_in_header(s, &tagval, &length)",
          "654:       || tagval != (BER_TAG_CTXT_SPECIFIC | BER_TAG_CONSTRUCTED | 0))",
          "657:   if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)",
          "660:   if (!s_check_rem(s, length))",
          "661:   {",
          "",
          "[Removed Lines]",
          "642:  if (token)",
          "646:    return False;",
          "649:    return False;",
          "652:    return False;",
          "655:    return False;",
          "658:    return False;",
          "",
          "[Added Lines]",
          "644:  if (!pubkey)",
          "648:    return NULL;",
          "651:    return NULL;",
          "654:    return NULL;",
          "657:    return NULL;",
          "660:    return NULL;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "663:         &packet);",
          "664:   }",
          "670:  }",
          "674:  {",
          "675:   if (!ber_in_header(s, &tagval, &length)",
          "676:       || tagval != (BER_TAG_CTXT_SPECIFIC | BER_TAG_CONSTRUCTED | 3))",
          "679:   if (!ber_in_header(s, &tagval, &length) || tagval != BER_TAG_OCTET_STRING)",
          "685:  }",
          "689: }",
          "691: RD_BOOL",
          "",
          "[Removed Lines]",
          "666:   s_realloc(token, length);",
          "667:   s_reset(token);",
          "668:   out_uint8a(token, s->p, length);",
          "669:   s_mark_end(token);",
          "673:  if (pubkey)",
          "677:    return False;",
          "680:    return False;",
          "682:   pubkey->data = pubkey->p = s->p;",
          "683:   pubkey->end = pubkey->data + length;",
          "684:   pubkey->size = length;",
          "688:  return True;",
          "",
          "[Added Lines]",
          "668:   out = s_alloc(length);",
          "669:   out_uint8a(out, s->p, length);",
          "670:   s_mark_end(out);",
          "671:   s_seek(out, 0);",
          "674:  else",
          "678:    return NULL;",
          "681:    return NULL;",
          "683:   out = s_alloc(length);",
          "684:   out_uint8a(out, s->p, length);",
          "685:   s_mark_end(out);",
          "686:   s_seek(out, 0);",
          "690:  return out;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "702:  gss_OID desired_mech = &_gss_spnego_krb5_mechanism_oid_desc;",
          "704:  STREAM ts_creds;",
          "710:  if (!cssp_gss_mech_available(desired_mech))",
          "",
          "[Removed Lines]",
          "705:  struct stream token = { 0 };",
          "706:  struct stream pubkey = { 0 };",
          "707:  struct stream pubkey_cmp = { 0 };",
          "",
          "[Added Lines]",
          "707:  STREAM token;",
          "708:  STREAM pubkey, pubkey_cmp;",
          "709:  unsigned char *pubkey_data;",
          "710:  unsigned char *pubkey_cmp_data;",
          "711:  unsigned char first_byte;",
          "713:  RD_BOOL ret;",
          "714:  STREAM blob;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "728:   return False;",
          "729:  }",
          "734:  OM_uint32 actual_services;",
          "735:  gss_OID actual_mech;",
          "738:  gss_ctx = GSS_C_NO_CONTEXT;",
          "739:  cred = GSS_C_NO_CREDENTIAL;",
          "741:  input_tok.length = 0;",
          "742:  output_tok.length = 0;",
          "743:  minor_status = 0;",
          "",
          "[Removed Lines]",
          "731:  tcp_tls_get_server_pubkey(&pubkey);",
          "736:  struct stream blob = { 0 };",
          "",
          "[Added Lines]",
          "738:  pubkey = tcp_tls_get_server_pubkey();",
          "739:  if (pubkey == NULL)",
          "740:   return False;",
          "741:  pubkey_cmp = NULL;",
          "750:  token = NULL;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "758:           &actual_mech,",
          "759:           &output_tok, &actual_services, &actual_time);",
          "761:   if (GSS_ERROR(major_status))",
          "762:   {",
          "763:    if (i == 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "773:   s_free(token);",
          "774:   token = NULL;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "783:   if (output_tok.length != 0)",
          "784:   {",
          "795:    (void) gss_release_buffer(&minor_status, &output_tok);",
          "796:   }",
          "799:   if (major_status & GSS_S_CONTINUE_NEEDED)",
          "800:   {",
          "804:     goto bail_out;",
          "808:   }",
          "809:   else",
          "810:   {",
          "812:    context_established = 1;",
          "815:     goto bail_out;",
          "818:     goto bail_out;",
          "820:    context_established = 1;",
          "",
          "[Removed Lines]",
          "785:    if (output_tok.length > token.size)",
          "786:     s_realloc(&token, output_tok.length);",
          "787:    s_reset(&token);",
          "789:    out_uint8a(&token, output_tok.value, output_tok.length);",
          "790:    s_mark_end(&token);",
          "792:    if (!cssp_send_tsrequest(&token, NULL, NULL))",
          "793:     goto bail_out;",
          "801:    (void) gss_release_buffer(&minor_status, &input_tok);",
          "803:    if (!cssp_read_tsrequest(&token, NULL))",
          "806:    input_tok.value = token.data;",
          "807:    input_tok.length = s_length(&token);",
          "814:    if (!cssp_gss_wrap(gss_ctx, &pubkey, &blob))",
          "817:    if (!cssp_send_tsrequest(NULL, NULL, &blob))",
          "",
          "[Added Lines]",
          "800:    token = s_alloc(output_tok.length);",
          "801:    out_uint8a(token, output_tok.value, output_tok.length);",
          "802:    s_mark_end(token);",
          "804:    ret = cssp_send_tsrequest(token, NULL, NULL);",
          "806:    s_free(token);",
          "807:    token = NULL;",
          "810:    if (!ret)",
          "811:     goto bail_out;",
          "817:    token = cssp_read_tsrequest(False);",
          "818:    if (token == NULL)",
          "821:    input_tok.length = s_length(token);",
          "822:    in_uint8p(token, input_tok.value, input_tok.length);",
          "829:    blob = cssp_gss_wrap(gss_ctx, pubkey);",
          "830:    if (blob == NULL)",
          "833:    ret = cssp_send_tsrequest(NULL, NULL, blob);",
          "835:    s_free(blob);",
          "837:    if (!ret)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "825:  }",
          "826:  while (!context_established);",
          "830:   goto bail_out;",
          "833:   goto bail_out;",
          "839:  {",
          "840:   logger(Core, Error,",
          "841:          \"cssp_connect(), public key mismatch, cannot guarantee integrity of server connection\");",
          "842:   goto bail_out;",
          "843:  }",
          "846:  ts_creds = cssp_encode_tscredentials(user, password, domain);",
          "851:  s_free(ts_creds);",
          "854:   goto bail_out;",
          "856:  return True;",
          "858:       bail_out:",
          "860:  return False;",
          "861: }",
          "",
          "[Removed Lines]",
          "829:  if (!cssp_read_tsrequest(NULL, &blob))",
          "832:  if (!cssp_gss_unwrap(gss_ctx, &blob, &pubkey_cmp))",
          "835:  pubkey_cmp.data[0] -= 1;",
          "838:  if (memcmp(pubkey.data, pubkey_cmp.data, s_length(&pubkey)) != 0)",
          "848:  if (!cssp_gss_wrap(gss_ctx, ts_creds, &blob))",
          "849:   goto bail_out;",
          "853:  if (!cssp_send_tsrequest(NULL, &blob, NULL))",
          "859:  xfree(token.data);",
          "",
          "[Added Lines]",
          "848:  s_free(token);",
          "851:  blob = cssp_read_tsrequest(True);",
          "852:  if (blob == NULL)",
          "855:  pubkey_cmp = cssp_gss_unwrap(gss_ctx, blob);",
          "856:  s_free(blob);",
          "857:  if (pubkey_cmp == NULL)",
          "863:  in_uint8(pubkey_cmp, first_byte);",
          "864:  s_seek(pubkey_cmp, 0);",
          "865:  out_uint8(pubkey_cmp, first_byte - 1);",
          "866:  s_seek(pubkey_cmp, 0);",
          "869:  in_uint8p(pubkey, pubkey_data, s_length(pubkey));",
          "870:  in_uint8p(pubkey_cmp, pubkey_cmp_data, s_length(pubkey_cmp));",
          "871:  if ((s_length(pubkey) != s_length(pubkey_cmp)) ||",
          "872:      (memcmp(pubkey_data, pubkey_cmp_data, s_length(pubkey)) != 0))",
          "879:  s_free(pubkey);",
          "880:  s_free(pubkey_cmp);",
          "885:  blob = cssp_gss_wrap(gss_ctx, ts_creds);",
          "889:  if (blob == NULL)",
          "890:   goto bail_out;",
          "892:  ret = cssp_send_tsrequest(NULL, blob, NULL);",
          "894:  s_free(blob);",
          "896:  if (!ret)",
          "902:  s_free(token);",
          "903:  s_free(pubkey);",
          "904:  s_free(pubkey_cmp);",
          "",
          "---------------"
        ],
        "proto.h||proto.h": [
          "File: proto.h -> proto.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "227: RD_BOOL tcp_is_connected(void);",
          "228: void tcp_reset_state(void);",
          "229: RD_BOOL tcp_tls_connect(void);",
          "231: void tcp_run_ui(RD_BOOL run);",
          "",
          "[Removed Lines]",
          "230: RD_BOOL tcp_tls_get_server_pubkey(STREAM s);",
          "",
          "[Added Lines]",
          "230: STREAM tcp_tls_get_server_pubkey();",
          "",
          "---------------"
        ],
        "rdpsnd.c||rdpsnd.c": [
          "File: rdpsnd.c -> rdpsnd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "642:  queue_hi = next_hi;",
          "645:  packet->tick = tick;",
          "646:  packet->index = index;",
          "",
          "[Removed Lines]",
          "644:  packet->s = *s;",
          "",
          "[Added Lines]",
          "644:  packet->s = s;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "675:  while (queue_pending != queue_hi)",
          "676:  {",
          "677:   packet = &packet_queue[queue_pending];",
          "679:   queue_pending = (queue_pending + 1) % MAX_QUEUE;",
          "680:  }",
          "",
          "[Removed Lines]",
          "678:   xfree(packet->s.data);",
          "",
          "[Added Lines]",
          "678:   s_free(packet->s);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "740:    (packet->completion_tv.tv_usec - packet->arrive_tv.tv_usec);",
          "741:   elapsed /= 1000;",
          "744:   rdpsnd_send_waveconfirm((packet->tick + elapsed) % 65536, packet->index);",
          "745:   queue_pending = (queue_pending + 1) % MAX_QUEUE;",
          "746:  }",
          "",
          "[Removed Lines]",
          "743:   xfree(packet->s.data);",
          "",
          "[Added Lines]",
          "743:   s_free(packet->s);",
          "",
          "---------------"
        ],
        "rdpsnd.h||rdpsnd.h": [
          "File: rdpsnd.h -> rdpsnd.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: struct audio_packet",
          "21: {",
          "23:  uint16 tick;",
          "24:  uint8 index;",
          "",
          "[Removed Lines]",
          "22:  struct stream s;",
          "",
          "[Added Lines]",
          "22:  STREAM s;",
          "",
          "---------------"
        ],
        "rdpsnd_alsa.c||rdpsnd_alsa.c": [
          "File: rdpsnd_alsa.c -> rdpsnd_alsa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "376:   return;",
          "378:  packet = rdpsnd_queue_current_packet();",
          "381:  next_tick = rdpsnd_queue_next_tick();",
          "",
          "[Removed Lines]",
          "379:  out = &packet->s;",
          "",
          "[Added Lines]",
          "379:  out = packet->s;",
          "",
          "---------------"
        ],
        "rdpsnd_dsp.c||rdpsnd_dsp.c": [
          "File: rdpsnd_dsp.c -> rdpsnd_dsp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:  return True;",
          "176: }",
          "180:       RD_WAVEFORMATEX * format, RD_BOOL stream_be)",
          "181: {",
          "182:  UNUSED(stream_be);",
          "",
          "[Removed Lines]",
          "178: uint32",
          "179: rdpsnd_dsp_resample(unsigned char **out, unsigned char *in, unsigned int size,",
          "",
          "[Added Lines]",
          "178: STREAM",
          "179: rdpsnd_dsp_resample(unsigned char *in, unsigned int size,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "190:  int innum, outnum;",
          "191:  unsigned char *tmpdata = NULL, *tmp = NULL;",
          "192:  int samplewidth = format->wBitsPerSample / 8;",
          "193:  int outsize = 0;",
          "194:  int i;",
          "196:  if ((resample_to_bitspersample == format->wBitsPerSample) &&",
          "197:      (resample_to_channels == format->nChannels) &&",
          "198:      (resample_to_srate == format->nSamplesPerSec))",
          "201: #ifdef B_ENDIAN",
          "202:  if (!stream_be)",
          "",
          "[Removed Lines]",
          "199:   return 0;",
          "",
          "[Added Lines]",
          "193:  STREAM out;",
          "195:  unsigned char *data;",
          "201:   return NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "260:  {",
          "261:   logger(Sound, Warning,",
          "262:          \"rdpsndp_dsp_resample_set(), no sample rate converter available\");",
          "264:  }",
          "266:  outnum = ((float) innum * ((float) resample_to_srate / (float) format->nSamplesPerSec)) + 1;",
          "",
          "[Removed Lines]",
          "263:   return 0;",
          "",
          "[Added Lines]",
          "265:   return NULL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "285:  xfree(infloat);",
          "287:  outsize = resample_data.output_frames_gen * resample_to_channels * samplewidth;",
          "290:      resample_data.output_frames_gen * resample_to_channels);",
          "291:  xfree(outfloat);",
          "",
          "[Removed Lines]",
          "289:  src_float_to_short_array(outfloat, (short *) *out,",
          "",
          "[Added Lines]",
          "290:  out = s_alloc(outsize);",
          "291:  out_uint8p(out, data, outsize);",
          "292:  src_float_to_short_array(outfloat, (short *) data,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "302:  outnum = (innum * ratio1k) / 1000;",
          "304:  outsize = outnum * samplewidth;",
          "308:  for (i = 0; i < outsize / (resample_to_channels * samplewidth); i++)",
          "309:  {",
          "",
          "[Removed Lines]",
          "306:  bzero(*out, outsize);",
          "",
          "[Added Lines]",
          "308:  out = s_alloc(outsize);",
          "309:  out_uint8p(out, data, outsize);",
          "310:  bzero(data, outsize);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "332:     cval1 += (sint8) (cval2 * part) / 100;",
          "335:            (samplewidth * j), &cval1, samplewidth);",
          "336:    }",
          "337:   }",
          "",
          "[Removed Lines]",
          "334:     memcpy(*out + (i * resample_to_channels * samplewidth) +",
          "",
          "[Added Lines]",
          "338:     memcpy(data + (i * resample_to_channels * samplewidth) +",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "350:     sval1 += (sint16) (sval2 * part) / 100;",
          "353:            (samplewidth * j), &sval1, samplewidth);",
          "354:    }",
          "355:   }",
          "357:   for (j = 0; j < resample_to_channels; j++)",
          "358:   {",
          "360:           in + (source * resample_to_channels * samplewidth) +",
          "361:           (samplewidth * j), samplewidth);",
          "362:   }",
          "",
          "[Removed Lines]",
          "352:     memcpy(*out + (i * resample_to_channels * samplewidth) +",
          "359:    memcpy(*out + (i * resample_to_channels * samplewidth) + (samplewidth * j),",
          "",
          "[Added Lines]",
          "356:     memcpy(data + (i * resample_to_channels * samplewidth) +",
          "363:    memcpy(out + (i * resample_to_channels * samplewidth) + (samplewidth * j),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "378:   {",
          "379:    for (i = 0; i < outsize; i++)",
          "380:    {",
          "382:    }",
          "383:    outsize /= 2;",
          "384:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "385:     data[i] = data[i * 2];",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "387: #ifdef B_ENDIAN",
          "388:  if (!stream_be)",
          "390: #endif",
          "392: }",
          "394: STREAM",
          "395: rdpsnd_dsp_process(unsigned char *data, unsigned int size, struct audio_driver * current_driver,",
          "396:      RD_WAVEFORMATEX * format)",
          "397: {",
          "399:  RD_BOOL stream_be = False;",
          "",
          "[Removed Lines]",
          "389:   rdpsnd_dsp_swapbytes(*out, outsize, format);",
          "391:  return outsize;",
          "398:  static struct stream out;",
          "",
          "[Added Lines]",
          "393:   rdpsnd_dsp_swapbytes(data, outsize, format);",
          "396:  return out;",
          "403:  STREAM out;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "411:  }",
          "412: #endif",
          "416:  if (current_driver->need_resampling)",
          "420:  {",
          "424:  }",
          "430: }",
          "",
          "[Removed Lines]",
          "414:  out.data = NULL;",
          "417:   out.size = rdpsnd_dsp_resample(&out.data, data, size, format, stream_be);",
          "419:  if (out.data == NULL)",
          "421:   out.data = (unsigned char *) xmalloc(size);",
          "422:   memcpy(out.data, data, size);",
          "423:   out.size = size;",
          "426:  out.p = out.data;",
          "427:  out.end = out.p + out.size;",
          "429:  return &out;",
          "",
          "[Added Lines]",
          "419:  out = NULL;",
          "422:   out = rdpsnd_dsp_resample(data, size, format, stream_be);",
          "424:  if (out == NULL)",
          "426:   out = s_alloc(size);",
          "427:   out_uint8a(out, data, size);",
          "430:  s_mark_end(out);",
          "431:  s_seek(out, 0);",
          "433:  return out;",
          "",
          "---------------"
        ],
        "rdpsnd_libao.c||rdpsnd_libao.c": [
          "File: rdpsnd_libao.c -> rdpsnd_libao.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:   return;",
          "169:  packet = rdpsnd_queue_current_packet();",
          "172:  next_tick = rdpsnd_queue_next_tick();",
          "",
          "[Removed Lines]",
          "170:  out = &packet->s;",
          "",
          "[Added Lines]",
          "170:  out = packet->s;",
          "",
          "---------------"
        ],
        "rdpsnd_oss.c||rdpsnd_oss.c": [
          "File: rdpsnd_oss.c -> rdpsnd_oss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "410:   return;",
          "412:  packet = rdpsnd_queue_current_packet();",
          "415:  len = s_remaining(out);",
          "",
          "[Removed Lines]",
          "413:  out = &packet->s;",
          "",
          "[Added Lines]",
          "413:  out = packet->s;",
          "",
          "---------------"
        ],
        "rdpsnd_pulse.c||rdpsnd_pulse.c": [
          "File: rdpsnd_pulse.c -> rdpsnd_pulse.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1154:  do",
          "1155:  {",
          "1156:   packet = rdpsnd_queue_current_packet();",
          "1159:   ti = pa_stream_get_timing_info(playback_stream);",
          "1160:   if (ti == NULL)",
          "",
          "[Removed Lines]",
          "1157:   out = &packet->s;",
          "",
          "[Added Lines]",
          "1157:   out = packet->s;",
          "",
          "---------------"
        ],
        "rdpsnd_sgi.c||rdpsnd_sgi.c": [
          "File: rdpsnd_sgi.c -> rdpsnd_sgi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:    return;",
          "256:   packet = rdpsnd_queue_current_packet();",
          "259:   len = s_remaining(out);",
          "",
          "[Removed Lines]",
          "257:   out = (STREAM) (void *) &(packet->s);",
          "",
          "[Added Lines]",
          "257:   out = packet->s;",
          "",
          "---------------"
        ],
        "stream.c||stream.c": [
          "File: stream.c -> stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:  return s;",
          "38: }",
          "40: void",
          "41: s_realloc(STREAM s, unsigned int size)",
          "42: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: STREAM",
          "41: s_inherit(unsigned char *data, unsigned int size)",
          "42: {",
          "43:  STREAM s;",
          "45:  s = xmalloc(sizeof(struct stream));",
          "46:  memset(s, 0, sizeof(struct stream));",
          "47:  s->p = s->data = data;",
          "48:  s->size = size;",
          "50:  return s;",
          "51: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71: void",
          "72: s_free(STREAM s)",
          "73: {",
          "74:  free(s->data);",
          "75:  free(s);",
          "76: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:  if (s == NULL)",
          "88:   return;",
          "",
          "---------------"
        ],
        "stream.h||stream.h": [
          "File: stream.h -> stream.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: STREAM s_alloc(unsigned int size);",
          "47: void s_realloc(STREAM s, unsigned int size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: STREAM s_inherit(unsigned char *data, unsigned int size);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60: #define s_push_layer(s,h,n) { (s)->h = (s)->p; (s)->p += n; }",
          "61: #define s_pop_layer(s,h) (s)->p = (s)->h;",
          "62: #define s_mark_end(s)  (s)->end = (s)->p;",
          "64: #define s_remaining(s)  (size_t)((s)->end - (s)->p)",
          "65: #define s_check_rem(s,n) (((s)->p <= (s)->end) && ((size_t)n <= s_remaining(s)))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: #define s_tell(s)  (size_t)((s)->p - (s)->data)",
          "68: #define s_seek(s,o)  (s)->p = (s)->data; s_assert_r(s,o); (s)->p += o;",
          "",
          "---------------"
        ],
        "tcp.c||tcp.c": [
          "File: tcp.c -> tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "399: }",
          "404: {",
          "405:  int ret;",
          "406:  unsigned int list_size;",
          "",
          "[Removed Lines]",
          "402: RD_BOOL",
          "403: tcp_tls_get_server_pubkey(STREAM s)",
          "",
          "[Added Lines]",
          "402: STREAM",
          "403: tcp_tls_get_server_pubkey()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "413:  int pk_size;",
          "414:  uint8_t pk_data[1024];",
          "419:  cert_list = gnutls_certificate_get_peers(g_tls_session, &list_size);",
          "",
          "[Removed Lines]",
          "416:  s->data = s->p = NULL;",
          "417:  s->size = 0;",
          "",
          "[Added Lines]",
          "416:  STREAM s = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "466:    goto out;",
          "467:  }",
          "475: out:",
          "476:  if ((e.size != 0) && (e.data)) {",
          "",
          "[Removed Lines]",
          "469:  s->size = pk_size;",
          "470:  s->data = s->p = xmalloc(s->size);",
          "471:  memcpy((void *)s->data, (void *)pk_data, pk_size);",
          "472:  s->p = s->data;",
          "473:  s->end = s->p + s->size;",
          "",
          "[Added Lines]",
          "468:  s = s_alloc(pk_size);",
          "469:  out_uint8a(s, pk_data, pk_size);",
          "470:  s_mark_end(s);",
          "471:  s_seek(s, 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "481:   free(m.data);",
          "482:  }",
          "485: }",
          "",
          "[Removed Lines]",
          "484:  return (s->size != 0);",
          "",
          "[Added Lines]",
          "482:  return s;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e099d79879fa3662384d661a25593c661db4f823",
      "candidate_info": {
        "commit_hash": "e099d79879fa3662384d661a25593c661db4f823",
        "repo": "rdesktop/rdesktop",
        "commit_url": "https://github.com/rdesktop/rdesktop/commit/e099d79879fa3662384d661a25593c661db4f823",
        "files": [
          "asn.c",
          "lspci.c",
          "mcs.c",
          "orders.c",
          "rdp.c",
          "rdp5.c",
          "rdpdr.c",
          "rdpsnd.c",
          "seamless.c",
          "secure.c",
          "stream.h"
        ],
        "message": "Remove dangerous s_check()\n\nThis macro checks if a pointer is valid _after_ we've already used\nthat pointer. So it will only trigger if we're already performed some\nfor of buffer overflow. As such, it provides little to no value and\ncan only server to encourage broken behaviour.\n\nLet's remove it and replace it with proper bounds checking before\naccess instead.",
        "before_after_code_files": [
          "asn.c||asn.c",
          "lspci.c||lspci.c",
          "mcs.c||mcs.c",
          "orders.c||orders.c",
          "rdp.c||rdp.c",
          "rdp5.c||rdp5.c",
          "rdpdr.c||rdpdr.c",
          "rdpsnd.c||rdpsnd.c",
          "seamless.c||seamless.c",
          "secure.c||secure.c",
          "stream.h||stream.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "asn.c||asn.c",
            "lspci.c||lspci.c",
            "mcs.c||mcs.c",
            "orders.c||orders.c",
            "rdp.c||rdp.c",
            "rdpdr.c||rdpdr.c",
            "rdpsnd.c||rdpsnd.c",
            "seamless.c||seamless.c",
            "secure.c||secure.c",
            "stream.h||stream.h"
          ],
          "candidate": [
            "asn.c||asn.c",
            "lspci.c||lspci.c",
            "mcs.c||mcs.c",
            "orders.c||orders.c",
            "rdp.c||rdp.c",
            "rdpdr.c||rdpdr.c",
            "rdpsnd.c||rdpsnd.c",
            "seamless.c||seamless.c",
            "secure.c||secure.c",
            "stream.h||stream.h"
          ]
        }
      },
      "candidate_diff": {
        "asn.c||asn.c": [
          "File: asn.c -> asn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:  if (tagval > 0xff)",
          "43:  {",
          "44:   in_uint16_be(s, tag);",
          "45:  }",
          "46:  else",
          "47:  {",
          "48:   in_uint8(s, tag);",
          "49:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   if (!s_check_rem(s, 2)) {",
          "45:    return False;",
          "46:   }",
          "51:   if (!s_check_rem(s, 1)) {",
          "52:    return False;",
          "53:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:   return False;",
          "55:  }",
          "57:  in_uint8(s, len);",
          "59:  if (len & 0x80)",
          "60:  {",
          "61:   len &= ~0x80;",
          "63:   while (len--)",
          "64:    next_be(s, *length);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:  if (!s_check_rem(s, 1)) {",
          "64:   return False;",
          "65:  }",
          "71:   if (!s_check_rem(s, len)) {",
          "72:    return False;",
          "73:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "66:  else",
          "70: }",
          "72: void",
          "",
          "[Removed Lines]",
          "69:  return s_check(s);",
          "",
          "[Added Lines]",
          "81:  return True;",
          "",
          "---------------"
        ],
        "lspci.c||lspci.c": [
          "File: lspci.c -> lspci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:  unsigned int pkglen;",
          "136:  static char *rest = NULL;",
          "137:  char *buf;",
          "145:  pkglen = s->end - s->p;",
          "",
          "[Removed Lines]",
          "138:  struct stream packet = *s;",
          "140:  if (!s_check(s))",
          "141:  {",
          "142:   rdp_protocol_error(\"lspci_process(), stream is in unstable state\", &packet);",
          "143:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mcs.c||mcs.c": [
          "File: mcs.c -> mcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: }",
          "46: mcs_parse_domain_params(STREAM s)",
          "47: {",
          "48:  uint32 length;",
          "",
          "[Removed Lines]",
          "45: static RD_BOOL",
          "",
          "[Added Lines]",
          "45: static void",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:  }",
          "58:  in_uint8s(s, length);",
          "61: }",
          "",
          "[Removed Lines]",
          "60:  return s_check(s);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "orders.c||orders.c": [
          "File: orders.c -> orders.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "101: }",
          "105: rdp_parse_bounds(STREAM s, BOUNDS * bounds)",
          "106: {",
          "107:  uint8 present;",
          "",
          "[Removed Lines]",
          "104: static RD_BOOL",
          "",
          "[Added Lines]",
          "104: static void",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:   rdp_in_coord(s, &bounds->bottom, False);",
          "128:  else if (present & 128)",
          "129:   rdp_in_coord(s, &bounds->bottom, True);",
          "132: }",
          "136: rdp_parse_pen(STREAM s, PEN * pen, uint32 present)",
          "137: {",
          "138:  if (present & 1)",
          "",
          "[Removed Lines]",
          "131:  return s_check(s);",
          "135: static RD_BOOL",
          "",
          "[Added Lines]",
          "133: static void",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "144:  if (present & 4)",
          "145:   rdp_in_colour(s, &pen->colour);",
          "148: }",
          "150: static void",
          "",
          "[Removed Lines]",
          "147:  return s_check(s);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "176: }",
          "180: rdp_parse_brush(STREAM s, BRUSH * brush, uint32 present)",
          "181: {",
          "182:  if (present & 1)",
          "",
          "[Removed Lines]",
          "179: static RD_BOOL",
          "",
          "[Added Lines]",
          "175: static void",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "194:  if (present & 16)",
          "195:   in_uint8a(s, &brush->pattern[1], 7);",
          "198: }",
          "",
          "[Removed Lines]",
          "197:  return s_check(s);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "rdp.c||rdp.c": [
          "File: rdp.c -> rdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1417:   case RDP_POINTER_MOVE:",
          "1418:    in_uint16_le(s, x);",
          "1419:    in_uint16_le(s, y);",
          "1422:    break;",
          "1424:   case RDP_POINTER_COLOR:",
          "",
          "[Removed Lines]",
          "1420:    if (s_check(s))",
          "1421:     ui_move_pointer(x, y);",
          "",
          "[Added Lines]",
          "1420:    ui_move_pointer(x, y);",
          "",
          "---------------"
        ],
        "rdp5.c||rdp5.c": [
          "File: rdp5.c -> rdp5.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:   case FASTPATH_UPDATETYPE_PTR_POSITION:",
          "57:    in_uint16_le(s, x);",
          "58:    in_uint16_le(s, y);",
          "61:    break;",
          "62:   case FASTPATH_UPDATETYPE_COLOR:",
          "63:    process_colour_pointer_pdu(s);",
          "",
          "[Removed Lines]",
          "59:    if (s_check(s))",
          "60:     ui_move_pointer(x, y);",
          "",
          "[Added Lines]",
          "59:    ui_move_pointer(x, y);",
          "",
          "---------------"
        ],
        "rdpdr.c||rdpdr.c": [
          "File: rdpdr.c -> rdpdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "877:  uint16 vmin;",
          "878:  uint16 component;",
          "879:  uint16 pakid;",
          "882:  logger(Protocol, Debug, \"rdpdr_process()\");",
          "",
          "[Removed Lines]",
          "880:  struct stream packet = *s;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "914:     if (vmin < 0x000c)",
          "",
          "[Removed Lines]",
          "904:        so lets check that we actually got",
          "905:        valid data from stream to prevent",
          "907:     if (!s_check(s))",
          "908:     {",
          "909:      rdp_protocol_error(\"rdpdr_process(), consume of g_client_id from stream did overrun\", &packet);",
          "910:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "rdpsnd.c||rdpsnd.c": [
          "File: rdpsnd.c -> rdpsnd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "451:  static char *rest = NULL;",
          "452:  char *buf;",
          "459:  pkglen = s->end - s->p;",
          "461:  buf = (char *) xmalloc(pkglen + 1);",
          "",
          "[Removed Lines]",
          "454:  if (!s_check(s))",
          "455:  {",
          "456:   rdp_protocol_error(\"rdpsnddbg_process(), stream is in unstable state\", s);",
          "457:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "seamless.c||seamless.c": [
          "File: seamless.c -> seamless.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "376: {",
          "377:  unsigned int pkglen;",
          "378:  char *buf;",
          "386:  pkglen = s->end - s->p;",
          "",
          "[Removed Lines]",
          "379:  struct stream packet = *s;",
          "381:  if (!s_check(s))",
          "382:  {",
          "383:   rdp_protocol_error(\"seamless_process(), stream is in unstable state\", &packet);",
          "384:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "secure.c||secure.c": [
          "File: secure.c -> secure.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "523: {",
          "524:  uint32 magic, modulus_len;",
          "526:  in_uint32_le(s, magic);",
          "527:  if (magic != SEC_RSA_MAGIC)",
          "528:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "526:  if (!s_check_rem(s, 8)) {",
          "527:   return False;",
          "528:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "541:   return False;",
          "542:  }",
          "545:  in_uint8a(s, exponent, SEC_EXPONENT_SIZE);",
          "546:  in_uint8a(s, modulus, modulus_len);",
          "547:  in_uint8s(s, SEC_PADDING_SIZE);",
          "548:  g_server_public_key_len = modulus_len;",
          "551: }",
          "",
          "[Removed Lines]",
          "550:  return s_check(s);",
          "",
          "[Added Lines]",
          "548:  if (!s_check_rem(s, 1 + SEC_EXPONENT_SIZE + modulus_len + SEC_PADDING_SIZE)) {",
          "549:   return False;",
          "550:  }",
          "558:  return True;",
          "",
          "---------------"
        ],
        "stream.h||stream.h": [
          "File: stream.h -> stream.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: #define s_push_layer(s,h,n) { (s)->h = (s)->p; (s)->p += n; }",
          "56: #define s_pop_layer(s,h) (s)->p = (s)->h;",
          "57: #define s_mark_end(s)  (s)->end = (s)->p;",
          "60: #define s_check_end(s)  ((s)->p == (s)->end)",
          "61: #define s_length(s)  ((s)->end - (s)->data)",
          "62: #define s_left(s)               ((s)->size - ((s)->p - (s)->data))",
          "",
          "[Removed Lines]",
          "58: #define s_check(s)  ((s)->p <= (s)->end)",
          "59: #define s_check_rem(s,n) (s_check(s) && (n <= (s)->end - (s)->p))",
          "",
          "[Added Lines]",
          "58: #define s_check_rem(s,n) (((s)->p <= (s)->end) && (n <= (s)->end - (s)->p))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6268b44f0681995562f9e29f1f21b13a96ea6e14",
      "candidate_info": {
        "commit_hash": "6268b44f0681995562f9e29f1f21b13a96ea6e14",
        "repo": "rdesktop/rdesktop",
        "commit_url": "https://github.com/rdesktop/rdesktop/commit/6268b44f0681995562f9e29f1f21b13a96ea6e14",
        "files": [
          "channels.c",
          "iso.c",
          "lspci.c",
          "mcs.c",
          "rdp.c",
          "rdpdr.c",
          "rdpsnd.c",
          "rdpsnd_alsa.c",
          "rdpsnd_libao.c",
          "rdpsnd_oss.c",
          "rdpsnd_pulse.c",
          "rdpsnd_sgi.c",
          "rdpsnd_sun.c",
          "seamless.c",
          "secure.c",
          "stream.h"
        ],
        "message": "Add macro to check remaining length of STREAM\n\nAvoids poking around in the internals, and also makes the code\neasier to read.",
        "before_after_code_files": [
          "channels.c||channels.c",
          "iso.c||iso.c",
          "lspci.c||lspci.c",
          "mcs.c||mcs.c",
          "rdp.c||rdp.c",
          "rdpdr.c||rdpdr.c",
          "rdpsnd.c||rdpsnd.c",
          "rdpsnd_alsa.c||rdpsnd_alsa.c",
          "rdpsnd_libao.c||rdpsnd_libao.c",
          "rdpsnd_oss.c||rdpsnd_oss.c",
          "rdpsnd_pulse.c||rdpsnd_pulse.c",
          "rdpsnd_sgi.c||rdpsnd_sgi.c",
          "rdpsnd_sun.c||rdpsnd_sun.c",
          "seamless.c||seamless.c",
          "secure.c||secure.c",
          "stream.h||stream.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lspci.c||lspci.c",
            "mcs.c||mcs.c",
            "rdp.c||rdp.c",
            "rdpdr.c||rdpdr.c",
            "rdpsnd.c||rdpsnd.c",
            "seamless.c||seamless.c",
            "secure.c||secure.c",
            "stream.h||stream.h"
          ],
          "candidate": [
            "lspci.c||lspci.c",
            "mcs.c||mcs.c",
            "rdp.c||rdp.c",
            "rdpdr.c||rdpdr.c",
            "rdpsnd.c||rdpsnd.c",
            "seamless.c||seamless.c",
            "secure.c||secure.c",
            "stream.h||stream.h"
          ]
        }
      },
      "candidate_diff": {
        "channels.c||channels.c": [
          "File: channels.c -> channels.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:  s_pop_layer(s, channel_hdr);",
          "98:  logger(Protocol, Debug, \"channel_send(), channel = %d, length = %d\", channel->mcs_id,",
          "99:         length);",
          "",
          "[Removed Lines]",
          "96:  length = s->end - s->p - 8;",
          "",
          "[Added Lines]",
          "96:  length = s_remaining(s) - 8;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186:    in->p = in->data;",
          "187:   }",
          "190:   memcpy(in->p, s->p, thislength);",
          "191:   in->p += thislength;",
          "",
          "[Removed Lines]",
          "189:   thislength = MIN(s->end - s->p, in->data + in->size - in->p);",
          "",
          "[Added Lines]",
          "189:   thislength = MIN(s_remaining(s), in->data + in->size - in->p);",
          "",
          "---------------"
        ],
        "iso.c||iso.c": [
          "File: iso.c -> iso.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:  uint16 length;",
          "179:  s_pop_layer(s, iso_hdr);",
          "",
          "[Removed Lines]",
          "180:  length = s->end - s->p;",
          "",
          "[Added Lines]",
          "180:  length = s_remaining(s);",
          "",
          "---------------"
        ],
        "lspci.c||lspci.c": [
          "File: lspci.c -> lspci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:  static char *rest = NULL;",
          "137:  char *buf;",
          "141:  buf = xmalloc(pkglen + 1);",
          "142:  STRNCPY(buf, (char *) s->p, pkglen + 1);",
          "",
          "[Removed Lines]",
          "139:  pkglen = s->end - s->p;",
          "",
          "[Added Lines]",
          "139:  pkglen = s_remaining(s);",
          "",
          "---------------"
        ],
        "mcs.c||mcs.c": [
          "File: mcs.c -> mcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "306:  uint16 length;",
          "308:  s_pop_layer(s, mcs_hdr);",
          "310:  length |= 0x8000;",
          "312:  out_uint8(s, (MCS_SDRQ << 2));",
          "",
          "[Removed Lines]",
          "309:  length = s->end - s->p - 8;",
          "",
          "[Added Lines]",
          "309:  length = s_remaining(s) - 8;",
          "",
          "---------------"
        ],
        "rdp.c||rdp.c": [
          "File: rdp.c -> rdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:  uint16 length;",
          "196:  s_pop_layer(s, rdp_hdr);",
          "199:  out_uint16_le(s, length);",
          "200:  out_uint16_le(s, (RDP_PDU_DATA | 0x10));",
          "",
          "[Removed Lines]",
          "197:  length = s->end - s->p;",
          "",
          "[Added Lines]",
          "197:  length = s_remaining(s);",
          "",
          "---------------"
        ],
        "rdpdr.c||rdpdr.c": [
          "File: rdpdr.c -> rdpdr.c"
        ],
        "rdpsnd.c||rdpsnd.c": [
          "File: rdpsnd.c -> rdpsnd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "343:    }",
          "345:    rdpsnd_queue_write(rdpsnd_dsp_process",
          "347:          &formats[current_format]), tick, packet_index);",
          "348:    return;",
          "349:    break;",
          "",
          "[Removed Lines]",
          "346:         (s->p, s->end - s->p, current_driver,",
          "",
          "[Added Lines]",
          "346:         (s->p, s_remaining(s), current_driver,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "387:   if (packet.size == 0)",
          "388:   {",
          "390:    {",
          "391:     logger(Sound, Error,",
          "392:            \"rdpsnd_process(), split at packet header, things will go south from here...\");",
          "",
          "[Removed Lines]",
          "389:    if ((s->end - s->p) < 4)",
          "",
          "[Added Lines]",
          "389:    if (!s_check_rem(s, 4))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "405:   }",
          "406:   else",
          "407:   {",
          "411:    if (packet_opcode == SNDC_WAVE)",
          "",
          "[Removed Lines]",
          "408:    len = MIN(s->end - s->p, packet.end - packet.p);",
          "",
          "[Added Lines]",
          "408:    len = MIN(s_remaining(s), s_remaining(&packet));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "451:  static char *rest = NULL;",
          "452:  char *buf;",
          "456:  buf = (char *) xmalloc(pkglen + 1);",
          "457:  STRNCPY(buf, (char *) s->p, pkglen + 1);",
          "",
          "[Removed Lines]",
          "454:  pkglen = s->end - s->p;",
          "",
          "[Added Lines]",
          "454:  pkglen = s_remaining(s);",
          "",
          "---------------"
        ],
        "rdpsnd_alsa.c||rdpsnd_alsa.c": [
          "File: rdpsnd_alsa.c -> rdpsnd_alsa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:  next_tick = rdpsnd_queue_next_tick();",
          "384:  if ((len = snd_pcm_writei(out_handle, out->p, ((MAX_FRAMES < len) ? MAX_FRAMES : len))) < 0)",
          "385:  {",
          "386:   snd_pcm_prepare(out_handle);",
          "",
          "[Removed Lines]",
          "383:  len = (out->end - out->p) / (samplewidth_out * audiochannels_out);",
          "",
          "[Added Lines]",
          "383:  len = s_remaining(out) / (samplewidth_out * audiochannels_out);",
          "",
          "---------------"
        ],
        "rdpsnd_libao.c||rdpsnd_libao.c": [
          "File: rdpsnd_libao.c -> rdpsnd_libao.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "172:  next_tick = rdpsnd_queue_next_tick();",
          "175:  ao_play(o_device, (char *) out->p, len);",
          "176:  out->p += len;",
          "",
          "[Removed Lines]",
          "174:  len = (WAVEOUTLEN > (out->end - out->p)) ? (out->end - out->p) : WAVEOUTLEN;",
          "",
          "[Added Lines]",
          "174:  len = MIN(WAVEOUTLEN, s_remaining(out));",
          "",
          "---------------"
        ],
        "rdpsnd_oss.c||rdpsnd_oss.c": [
          "File: rdpsnd_oss.c -> rdpsnd_oss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "412:  packet = rdpsnd_queue_current_packet();",
          "413:  out = &packet->s;",
          "417:  len = write(dsp_fd, out->p, (len > MAX_LEN) ? MAX_LEN : len);",
          "418:  if (len == -1)",
          "",
          "[Removed Lines]",
          "415:  len = out->end - out->p;",
          "",
          "[Added Lines]",
          "415:  len = s_remaining(out);",
          "",
          "---------------"
        ],
        "rdpsnd_pulse.c||rdpsnd_pulse.c": [
          "File: rdpsnd_pulse.c -> rdpsnd_pulse.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1192:    playback_seek = PA_SEEK_RELATIVE;",
          "1194:   avail_space = pa_stream_writable_size(playback_stream);",
          "1196:   if (audio_size)",
          "1197:   {",
          "1198:    if (pa_stream_write",
          "",
          "[Removed Lines]",
          "1195:   audio_size = out->end - out->p <= avail_space ? out->end - out->p : avail_space;",
          "",
          "[Added Lines]",
          "1195:   audio_size = MIN(s_remaining(out), avail_space);",
          "",
          "---------------"
        ],
        "rdpsnd_sgi.c||rdpsnd_sgi.c": [
          "File: rdpsnd_sgi.c -> rdpsnd_sgi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "256:   packet = rdpsnd_queue_current_packet();",
          "257:   out = (STREAM) (void *) &(packet->s);",
          "261:   alWriteFrames(output_port, out->p, len / combinedFrameSize);",
          "",
          "[Removed Lines]",
          "259:   len = out->end - out->p;",
          "",
          "[Added Lines]",
          "259:   len = s_remaining(out);",
          "",
          "---------------"
        ],
        "rdpsnd_sun.c||rdpsnd_sun.c": [
          "File: rdpsnd_sun.c -> rdpsnd_sun.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "419:  packet = rdpsnd_queue_current_packet();",
          "420:  out = &packet->s;",
          "424:  len = write(dsp_fd, out->p, (len > MAX_LEN) ? MAX_LEN : len);",
          "425:  if (len == -1)",
          "",
          "[Removed Lines]",
          "422:  len = out->end - out->p;",
          "",
          "[Added Lines]",
          "422:  len = s_remaining(out);",
          "",
          "---------------"
        ],
        "seamless.c||seamless.c": [
          "File: seamless.c -> seamless.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "377:  unsigned int pkglen;",
          "378:  char *buf;",
          "382:  buf = xmalloc(pkglen + 1);",
          "383:  STRNCPY(buf, (char *) s->p, pkglen + 1);",
          "",
          "[Removed Lines]",
          "380:  pkglen = s->end - s->p;",
          "",
          "[Added Lines]",
          "380:  pkglen = s_remaining(s);",
          "",
          "---------------"
        ],
        "secure.c||secure.c": [
          "File: secure.c -> secure.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "352:  if (flags & SEC_ENCRYPT)",
          "353:  {",
          "354:   flags &= ~SEC_ENCRYPT;",
          "356:   sec_sign(s->p, 8, g_sec_sign_key, g_rc4_key_len, s->p + 8, datalen);",
          "357:   sec_encrypt(s->p + 8, datalen);",
          "358:  }",
          "",
          "[Removed Lines]",
          "355:   datalen = s->end - s->p - 8;",
          "",
          "[Added Lines]",
          "355:   datalen = s_remaining(s) - 8;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "885:     }",
          "889:    }",
          "890:    return s;",
          "891:   }",
          "",
          "[Removed Lines]",
          "888:     sec_decrypt(s->p, s->end - s->p);",
          "",
          "[Added Lines]",
          "888:     sec_decrypt(s->p, s_remaining(s));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "905:      }",
          "909:     }",
          "911:     if (sec_flags & SEC_LICENSE_PKT)",
          "",
          "[Removed Lines]",
          "908:      sec_decrypt(s->p, s->end - s->p);",
          "",
          "[Added Lines]",
          "908:      sec_decrypt(s->p, s_remaining(s));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "923:      }",
          "929:      if (s->p[0] == 0 && s->p[1] == 4)",
          "",
          "[Removed Lines]",
          "926:      sec_decrypt(s->p, s->end - s->p);",
          "",
          "[Added Lines]",
          "926:      sec_decrypt(s->p, s_remaining(s));",
          "",
          "---------------"
        ],
        "stream.h||stream.h": [
          "File: stream.h -> stream.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: #define s_push_layer(s,h,n) { (s)->h = (s)->p; (s)->p += n; }",
          "61: #define s_pop_layer(s,h) (s)->p = (s)->h;",
          "62: #define s_mark_end(s)  (s)->end = (s)->p;",
          "64: #define s_check_end(s)  ((s)->p == (s)->end)",
          "65: #define s_length(s)  ((s)->end - (s)->data)",
          "66: #define s_left(s)  ((s)->size - (size_t)((s)->p - (s)->data))",
          "",
          "[Removed Lines]",
          "63: #define s_check_rem(s,n) (((s)->p <= (s)->end) && ((size_t)n <= (size_t)((s)->end - (s)->p)))",
          "",
          "[Added Lines]",
          "64: #define s_remaining(s)  (size_t)((s)->end - (s)->p)",
          "65: #define s_check_rem(s,n) (((s)->p <= (s)->end) && ((size_t)n <= s_remaining(s)))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de59a100ead9eadc5a2a925124cfb82707ed0360",
      "candidate_info": {
        "commit_hash": "de59a100ead9eadc5a2a925124cfb82707ed0360",
        "repo": "rdesktop/rdesktop",
        "commit_url": "https://github.com/rdesktop/rdesktop/commit/de59a100ead9eadc5a2a925124cfb82707ed0360",
        "files": [
          "proto.h"
        ],
        "message": "Mark rd_protocol_error() as \"noreturn\"\n\nThis allows the compiler to optimize things better and give better\nwarnings as it knows it will never return from this function.",
        "before_after_code_files": [
          "proto.h||proto.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "proto.h||proto.h"
          ],
          "candidate": [
            "proto.h||proto.h"
          ]
        }
      },
      "candidate_diff": {
        "proto.h||proto.h": [
          "File: proto.h -> proto.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #endif",
          "27: #define UNUSED(param) ((void)param)",
          "29: RD_BOOL bitmap_decompress(uint8 * output, int width, int height, uint8 * input, int size, int Bpp);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #ifdef __GNUC__",
          "29: #  define NORETURN __attribute__((noreturn))",
          "30: #else",
          "31: #  define NORETURN",
          "32: #endif // __GNUC__",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "167: void rdp_disconnect(void);",
          "168: #define rdp_protocol_error(m, s) _rdp_protocol_error(__FILE__, __LINE__, __func__, m, s)",
          "169: void _rdp_protocol_error(const char *file, int line, const char *func,",
          "172: int get_device_index(RD_NTHANDLE handle);",
          "173: void convert_to_unix_filename(char *filename);",
          "",
          "[Removed Lines]",
          "170:     const char *message, STREAM s);",
          "",
          "[Added Lines]",
          "175:     const char *message, STREAM s) NORETURN;",
          "",
          "---------------"
        ]
      }
    }
  ]
}