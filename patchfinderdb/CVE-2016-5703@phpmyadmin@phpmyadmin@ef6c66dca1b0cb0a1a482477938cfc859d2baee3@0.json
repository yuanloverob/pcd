{
  "cve_id": "CVE-2016-5703",
  "cve_desc": "SQL injection vulnerability in libraries/central_columns.lib.php in phpMyAdmin 4.4.x before 4.4.15.7 and 4.6.x before 4.6.3 allows remote attackers to execute arbitrary SQL commands via a crafted database name that is mishandled in a central column query.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "ef6c66dca1b0cb0a1a482477938cfc859d2baee3",
  "patch_info": {
    "commit_hash": "ef6c66dca1b0cb0a1a482477938cfc859d2baee3",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/ef6c66dca1b0cb0a1a482477938cfc859d2baee3",
    "files": [
      "libraries/central_columns.lib.php"
    ],
    "message": "Properly escape database name in central column queries\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
    "before_after_code_files": [
      "libraries/central_columns.lib.php||libraries/central_columns.lib.php"
    ]
  },
  "patch_diff": {
    "libraries/central_columns.lib.php||libraries/central_columns.lib.php": [
      "File: libraries/central_columns.lib.php -> libraries/central_columns.lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "61:     if ($num == 0) {",
      "62:         $query = 'SELECT * FROM ' . Util::backquote($central_list_table) . ' '",
      "64:     } else {",
      "65:         $query = 'SELECT * FROM ' . Util::backquote($central_list_table) . ' '",
      "67:             . 'LIMIT ' . $from . ', ' . $num . ';';",
      "68:     }",
      "69:     $has_list = (array) $GLOBALS['dbi']->fetchResult(",
      "",
      "[Removed Lines]",
      "63:             . 'WHERE db_name = \\'' . $db . '\\';';",
      "66:             . 'WHERE db_name = \\'' . $db . '\\' '",
      "",
      "[Added Lines]",
      "63:             . 'WHERE db_name = \\'' . Util::sqlAddSlashes($db) . '\\';';",
      "66:             . 'WHERE db_name = \\'' . Util::sqlAddSlashes($db) . '\\' '",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "91:     $central_list_table = $cfgCentralColumns['table'];",
      "92:     $query = 'SELECT count(db_name) FROM ' .",
      "93:         Util::backquote($central_list_table) . ' '",
      "95:     $res = $GLOBALS['dbi']->fetchResult(",
      "96:         $query, null, null, $GLOBALS['controllink']",
      "97:     );",
      "",
      "[Removed Lines]",
      "94:         . 'WHERE db_name = \\'' . $db . '\\';';",
      "",
      "[Added Lines]",
      "94:         . 'WHERE db_name = \\'' . Util::sqlAddSlashes($db) . '\\';';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "122:     $central_list_table = $cfgCentralColumns['table'];",
      "123:     if ($allFields) {",
      "124:         $query = 'SELECT * FROM ' . Util::backquote($central_list_table) . ' '",
      "126:         $has_list = (array) $GLOBALS['dbi']->fetchResult(",
      "127:             $query, null, null, $GLOBALS['controllink']",
      "128:         );",
      "",
      "[Removed Lines]",
      "125:             . 'WHERE db_name = \\'' . $db . '\\' AND col_name IN (' . $cols . ');';",
      "",
      "[Added Lines]",
      "125:             . 'WHERE db_name = \\'' . Util::sqlAddSlashes($db) . '\\' AND col_name IN (' . $cols . ');';",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "130:     } else {",
      "131:         $query = 'SELECT col_name FROM '",
      "132:             . Util::backquote($central_list_table) . ' '",
      "134:         $has_list = (array) $GLOBALS['dbi']->fetchResult(",
      "135:             $query, null, null, $GLOBALS['controllink']",
      "136:         );",
      "",
      "[Removed Lines]",
      "133:             . 'WHERE db_name = \\'' . $db . '\\' AND col_name IN (' . $cols . ');';",
      "",
      "[Added Lines]",
      "133:             . 'WHERE db_name = \\'' . Util::sqlAddSlashes($db) . '\\' AND col_name IN (' . $cols . ');';",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "376:     $GLOBALS['dbi']->selectDb($pmadb, $GLOBALS['controllink']);",
      "378:     $query = 'DELETE FROM ' . Util::backquote($central_list_table) . ' '",
      "381:     if (!$GLOBALS['dbi']->tryQuery($query, $GLOBALS['controllink'])) {",
      "382:         $message = Message::error(__('Could not remove columns!'));",
      "",
      "[Removed Lines]",
      "379:         . 'WHERE db_name = \\'' . $db . '\\' AND col_name IN (' . $cols . ');';",
      "",
      "[Added Lines]",
      "379:         . 'WHERE db_name = \\'' . Util::sqlAddSlashes($db) . '\\' AND col_name IN (' . $cols . ');';",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1147:     $centralTable = $cfgCentralColumns['table'];",
      "1148:     if (empty($table) || $table == '') {",
      "1149:         $query = 'SELECT * FROM ' . Util::backquote($centralTable) . ' '",
      "1151:     } else {",
      "1152:         $GLOBALS['dbi']->selectDb($db, $GLOBALS['userlink']);",
      "1153:         $columns = (array) $GLOBALS['dbi']->getColumnNames(",
      "",
      "[Removed Lines]",
      "1150:             . 'WHERE db_name = \\'' . $db . '\\';';",
      "",
      "[Added Lines]",
      "1150:             . 'WHERE db_name = \\'' . Util::sqlAddSlashes($db) . '\\';';",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1159:         }",
      "1160:         $cols = trim($cols, ',');",
      "1161:         $query = 'SELECT * FROM ' . Util::backquote($centralTable) . ' '",
      "1163:         if ($cols) {",
      "1164:             $query .= ' AND col_name NOT IN (' . $cols . ')';",
      "1165:         }",
      "",
      "[Removed Lines]",
      "1162:             . 'WHERE db_name = \\'' . $db . '\\'';",
      "",
      "[Added Lines]",
      "1162:             . 'WHERE db_name = \\'' . Util::sqlAddSlashes($db) . '\\'';",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8a0705008b9b79c9579d1b23ce3fb323b33ea32f",
      "candidate_info": {
        "commit_hash": "8a0705008b9b79c9579d1b23ce3fb323b33ea32f",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/8a0705008b9b79c9579d1b23ce3fb323b33ea32f",
        "files": [
          "libraries/central_columns.lib.php"
        ],
        "message": "Properly escape database name in central column queries\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "libraries/central_columns.lib.php||libraries/central_columns.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libraries/central_columns.lib.php||libraries/central_columns.lib.php"
          ],
          "candidate": [
            "libraries/central_columns.lib.php||libraries/central_columns.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/central_columns.lib.php||libraries/central_columns.lib.php": [
          "File: libraries/central_columns.lib.php -> libraries/central_columns.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:     if ($num == 0) {",
          "65:         $query = 'SELECT * FROM ' . PMA_Util::backquote($central_list_table) . ' '",
          "67:     } else {",
          "68:         $query = 'SELECT * FROM ' . PMA_Util::backquote($central_list_table) . ' '",
          "70:             . 'LIMIT ' . $from . ', ' . $num . ';';",
          "71:     }",
          "72:     $has_list = (array) $GLOBALS['dbi']->fetchResult(",
          "",
          "[Removed Lines]",
          "66:             . 'WHERE db_name = \\'' . $db . '\\';';",
          "69:             . 'WHERE db_name = \\'' . $db . '\\' '",
          "",
          "[Added Lines]",
          "66:             . 'WHERE db_name = \\'' . PMA_Util::sqlAddSlashes($db) . '\\';';",
          "69:             . 'WHERE db_name = \\'' . PMA_Util::sqlAddSlashes($db) . '\\' '",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:     $central_list_table = $cfgCentralColumns['table'];",
          "95:     $query = 'SELECT count(db_name) FROM ' .",
          "96:                PMA_Util::backquote($central_list_table) . ' '",
          "98:     $res = $GLOBALS['dbi']->fetchResult(",
          "99:         $query, null, null, $GLOBALS['controllink']",
          "100:     );",
          "",
          "[Removed Lines]",
          "97:             . 'WHERE db_name = \\'' . $db . '\\';';",
          "",
          "[Added Lines]",
          "97:             . 'WHERE db_name = \\'' . PMA_Util::sqlAddSlashes($db) . '\\';';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "125:     $central_list_table = $cfgCentralColumns['table'];",
          "126:     if ($allFields) {",
          "127:         $query = 'SELECT * FROM ' . PMA_Util::backquote($central_list_table) . ' '",
          "129:         $has_list = (array) $GLOBALS['dbi']->fetchResult(",
          "130:             $query, null, null, $GLOBALS['controllink']",
          "131:         );",
          "",
          "[Removed Lines]",
          "128:             . 'WHERE db_name = \\'' . $db . '\\' AND col_name IN (' . $cols . ');';",
          "",
          "[Added Lines]",
          "128:             . 'WHERE db_name = \\'' . PMA_Util::sqlAddSlashes($db) . '\\' AND col_name IN (' . $cols . ');';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "133:     } else {",
          "134:         $query = 'SELECT col_name FROM '",
          "135:             . PMA_Util::backquote($central_list_table) . ' '",
          "137:         $has_list = (array) $GLOBALS['dbi']->fetchResult(",
          "138:             $query, null, null, $GLOBALS['controllink']",
          "139:         );",
          "",
          "[Removed Lines]",
          "136:             . 'WHERE db_name = \\'' . $db . '\\' AND col_name IN (' . $cols . ');';",
          "",
          "[Added Lines]",
          "136:             . 'WHERE db_name = \\'' . PMA_Util::sqlAddSlashes($db) . '\\' AND col_name IN (' . $cols . ');';",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "379:     $GLOBALS['dbi']->selectDb($pmadb, $GLOBALS['controllink']);",
          "381:     $query = 'DELETE FROM ' . PMA_Util::backquote($central_list_table) . ' '",
          "384:     if (!$GLOBALS['dbi']->tryQuery($query, $GLOBALS['controllink'])) {",
          "385:         $message = PMA_Message::error(__('Could not remove columns!'));",
          "",
          "[Removed Lines]",
          "382:                 . 'WHERE db_name = \\'' . $db . '\\' AND col_name IN (' . $cols . ');';",
          "",
          "[Added Lines]",
          "382:                 . 'WHERE db_name = \\'' . PMA_Util::sqlAddSlashes($db) . '\\' AND col_name IN (' . $cols . ');';",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "885:     $centralTable = $cfgCentralColumns['table'];",
          "886:     if (empty($table) || $table == '') {",
          "887:         $query = 'SELECT * FROM ' . PMA_Util::backquote($centralTable) . ' '",
          "889:     } else {",
          "890:         $GLOBALS['dbi']->selectDb($db, $GLOBALS['userlink']);",
          "891:         $columns = (array) $GLOBALS['dbi']->getColumnNames(",
          "",
          "[Removed Lines]",
          "888:                 . 'WHERE db_name = \\'' . $db . '\\';';",
          "",
          "[Added Lines]",
          "888:                 . 'WHERE db_name = \\'' . PMA_Util::sqlAddSlashes($db) . '\\';';",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "897:         }",
          "898:         $cols = trim($cols, ',');",
          "899:         $query = 'SELECT * FROM ' . PMA_Util::backquote($centralTable) . ' '",
          "901:         if ($cols) {",
          "902:             $query .= ' AND col_name NOT IN (' . $cols . ')';",
          "903:         }",
          "",
          "[Removed Lines]",
          "900:             . 'WHERE db_name = \\'' . $db . '\\'';",
          "",
          "[Added Lines]",
          "900:             . 'WHERE db_name = \\'' . PMA_Util::sqlAddSlashes($db) . '\\'';",
          "",
          "---------------"
        ]
      }
    }
  ]
}