{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "93d496a4ec029d13928e19aada428d2ef462e5ae",
      "candidate_info": {
        "commit_hash": "93d496a4ec029d13928e19aada428d2ef462e5ae",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/93d496a4ec029d13928e19aada428d2ef462e5ae",
        "files": [
          "lib/tls.js",
          "test/simple/test-tls-sni-server-client.js"
        ],
        "message": "tls: revert accidental API change\n\nsocket.authorizationError should always be string. Also make sni test\npass.",
        "before_after_code_files": [
          "lib/tls.js||litls.js",
          "test/simple/test-tls-sni-server-client.js||test/simple/test-tls-sni-server-client.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1089:       } else {",
          "1090:         var verifyError = pair.ssl.verifyError();",
          "1091:         if (verifyError) {",
          "1094:           if (self.rejectUnauthorized) {",
          "1095:             socket.destroy();",
          "",
          "[Removed Lines]",
          "1092:           pair.cleartext.authorizationError = verifyError;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-tls-sni-server-client.js||test/simple/test-tls-sni-server-client.js": [
          "File: test/simple/test-tls-sni-server-client.js -> test/simple/test-tls-sni-server-client.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "94: function startTest() {",
          "95:   function connectClient(options, callback) {",
          "96:     var client = tls.connect(options, function() {",
          "98:       client.destroy();",
          "100:       callback();",
          "",
          "[Removed Lines]",
          "97:       clientResults.push(client.authorized);",
          "",
          "[Added Lines]",
          "97:       clientResults.push(",
          "98:         client.authorizationError &&",
          "99:         /Hostname\\/IP doesn't/.test(client.authorizationError));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa9aa1c961125f5c5527c7b5e3720eadf84a979f",
      "candidate_info": {
        "commit_hash": "fa9aa1c961125f5c5527c7b5e3720eadf84a979f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/fa9aa1c961125f5c5527c7b5e3720eadf84a979f",
        "files": [
          "lib/net.js",
          "test/simple/test-net-server-close.js"
        ],
        "message": "net: fix 'close' event emit order\n\nThe server 'close' event was emitted before the last client 'close' event. Not\nexactly fatal but potentially confusing.\n\nBefore this commit the order looked something like [client, server, client],\nnow it looks like [client, client, server].\n\nSee #3340 for more details.",
        "before_after_code_files": [
          "lib/net.js||linet.js",
          "test/simple/test-net-server-close.js||test/simple/test-net-server-close.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "343:   timers.unenroll(this);",
          "350:   debug('close');",
          "351:   if (this._handle) {",
          "352:     this._handle.close();",
          "",
          "[Removed Lines]",
          "345:   if (this.server) {",
          "346:     this.server._connections--;",
          "347:     this.server._emitCloseIfDrained();",
          "348:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:   });",
          "363:   this.destroyed = true;",
          "364: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-net-server-close.js||test/simple/test-net-server-close.js": [
          "File: test/simple/test-net-server-close.js -> test/simple/test-net-server-close.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: var common = require('../common');",
          "26: var assert = require('assert');",
          "27: var net = require('net');",
          "35:   });",
          "36: });",
          "38: server.listen(common.PORT, function() {",
          "39:   net.createConnection(common.PORT);",
          "",
          "[Removed Lines]",
          "29: var server = net.createServer(function(socket) {",
          "30:   server.close(function() {",
          "31:     assert.equal(server.connections, 0);",
          "32:   });",
          "33:   process.nextTick(function() {",
          "34:     socket.destroy();",
          "40: });",
          "",
          "[Added Lines]",
          "26: var events = [];",
          "27: var sockets = [];",
          "29: process.on('exit', function() {",
          "30:   assert.equal(server.connections, 0);",
          "31:   assert.deepEqual(events, 'client client server'.split(' '));",
          "32: });",
          "34: var server = net.createServer(function(c) {",
          "35:   c.on('close', function() {",
          "36:     events.push('client');",
          "39:   sockets.push(c);",
          "41:   if (sockets.length === 2) {",
          "42:     server.close();",
          "43:     sockets.forEach(function(c) { c.destroy() });",
          "44:   }",
          "45: });",
          "47: server.on('close', function() {",
          "48:   events.push('server');",
          "54: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b75eee364230a6e08f4e7ada0735af1d1a25bc4",
      "candidate_info": {
        "commit_hash": "0b75eee364230a6e08f4e7ada0735af1d1a25bc4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0b75eee364230a6e08f4e7ada0735af1d1a25bc4",
        "files": [
          "deps/uv/src/win/process.c",
          "deps/uv/test/test-spawn.c"
        ],
        "message": "uv: upgrade to d41cc9118d",
        "before_after_code_files": [
          "deps/uv/src/win/process.c||deps/uv/src/win/process.c",
          "deps/uv/test/test-spawn.c||deps/uv/test/test-spawn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/win/process.c||deps/uv/src/win/process.c": [
          "File: deps/uv/src/win/process.c -> deps/uv/src/win/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "873:   PROCESS_INFORMATION info;",
          "875:   if (options.flags & (UV_PROCESS_SETGID | UV_PROCESS_SETUID)) {",
          "877:     return -1;",
          "878:   }",
          "",
          "[Removed Lines]",
          "876:     uv__set_sys_error(loop, UV_ENOTSUP);",
          "",
          "[Added Lines]",
          "876:     uv__set_artificial_error(loop, UV_ENOTSUP);",
          "",
          "---------------"
        ],
        "deps/uv/test/test-spawn.c||deps/uv/test/test-spawn.c": [
          "File: deps/uv/test/test-spawn.c -> deps/uv/test/test-spawn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "611:   r = uv_spawn2(uv_default_loop(), &process, options2);",
          "612:   ASSERT(r == -1);",
          "614:   r = uv_run(uv_default_loop());",
          "615:   ASSERT(r == 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "613:   ASSERT(uv_last_error(uv_default_loop()).code == UV_ENOTSUP);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "631:   r = uv_spawn2(uv_default_loop(), &process, options2);",
          "632:   ASSERT(r == -1);",
          "634:   r = uv_run(uv_default_loop());",
          "635:   ASSERT(r == 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "634:   ASSERT(uv_last_error(uv_default_loop()).code == UV_ENOTSUP);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bfe9cdb7f2f9b90c95a221dcdce29263f0da5c75",
      "candidate_info": {
        "commit_hash": "bfe9cdb7f2f9b90c95a221dcdce29263f0da5c75",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/bfe9cdb7f2f9b90c95a221dcdce29263f0da5c75",
        "files": [
          "lib/http.js"
        ],
        "message": "Null references to request object on socket errors.\n\nRegarding #3199 and #3179 and issues seen in production.\nHopefully this fixes them.",
        "before_after_code_files": [
          "lib/http.js||lihttp.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1210:         req.emit('error', createHangUpError());",
          "1211:       }",
          "1212:     }",
          "1213:     socket.on('close', closeListener);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b021a3541770ae64a415760339bdd3223fdf602",
      "candidate_info": {
        "commit_hash": "4b021a3541770ae64a415760339bdd3223fdf602",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4b021a3541770ae64a415760339bdd3223fdf602",
        "files": [
          "doc/api/child_process.markdown",
          "lib/child_process.js",
          "src/process_wrap.cc",
          "test/fixtures/child-process-persistent.js",
          "test/simple/test-child-process-detached.js"
        ],
        "message": "child_process: expose UV_PROCESS_DETACHED as options.detached",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js",
          "src/process_wrap.cc||src/process_wrap.cc",
          "test/fixtures/child-process-persistent.js||test/fixtures/child-process-persistent.js",
          "test/simple/test-child-process-detached.js||test/simple/test-child-process-detached.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "602:     args: args,",
          "603:     cwd: options ? options.cwd : null,",
          "604:     windowsVerbatimArguments: !!(options && options.windowsVerbatimArguments),",
          "605:     envPairs: envPairs,",
          "606:     stdio: options ? options.stdio : null,",
          "607:     uid: options ? options.uid : null,",
          "608:     gid: options ? options.gid : null",
          "609:   });",
          "611:   return child;",
          "612: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/process_wrap.cc||src/process_wrap.cc": [
          "File: src/process_wrap.cc -> src/process_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "236:       options.flags |= UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS;",
          "237:     }",
          "239:     int r = uv_spawn(uv_default_loop(), &wrap->process_, options);",
          "241:     if (r) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "240:     if (js_options->Get(String::NewSymbol(\"detached\"))->IsTrue()) {",
          "241:       options.flags |= UV_PROCESS_DETACHED;",
          "242:     }",
          "",
          "---------------"
        ],
        "test/fixtures/child-process-persistent.js||test/fixtures/child-process-persistent.js": [
          "File: test/fixtures/child-process-persistent.js -> test/fixtures/child-process-persistent.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: setInterval(function () {}, 500);",
          "",
          "---------------"
        ],
        "test/simple/test-child-process-detached.js||test/simple/test-child-process-detached.js": [
          "File: test/simple/test-child-process-detached.js -> test/simple/test-child-process-detached.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var path = require('path');",
          "26: var spawn = require('child_process').spawn;",
          "27: var childPath = path.join(__dirname, '..', 'fixtures', 'child-process-persistent.js');",
          "29: var child = spawn(process.execPath, [ childPath ], {",
          "30:   detached: true,",
          "31:   stdio: 'ignore'",
          "32: });",
          "34: process.on('exit', function () {",
          "35:   process.kill(child.pid);",
          "36:   assert.throws(process.kill(child.pid), Error);",
          "37: });",
          "",
          "---------------"
        ]
      }
    }
  ]
}