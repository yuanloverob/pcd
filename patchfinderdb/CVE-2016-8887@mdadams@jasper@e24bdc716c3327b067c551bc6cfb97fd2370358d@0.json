{
  "cve_id": "CVE-2016-8887",
  "cve_desc": "The jp2_colr_destroy function in libjasper/jp2/jp2_cod.c in JasPer before 1.900.10 allows remote attackers to cause a denial of service (NULL pointer dereference).",
  "repo": "mdadams/jasper",
  "patch_hash": "e24bdc716c3327b067c551bc6cfb97fd2370358d",
  "patch_info": {
    "commit_hash": "e24bdc716c3327b067c551bc6cfb97fd2370358d",
    "repo": "mdadams/jasper",
    "commit_url": "https://github.com/mdadams/jasper/commit/e24bdc716c3327b067c551bc6cfb97fd2370358d",
    "files": [
      "src/libjasper/jp2/jp2_cod.c",
      "src/libjasper/jp2/jp2_dec.c"
    ],
    "message": "Fixed a bug that resulted in the destruction of JP2 box data that had never been constructed in the first place.",
    "before_after_code_files": [
      "src/libjasper/jp2/jp2_cod.c||src/libjasper/jp2/jp2_cod.c",
      "src/libjasper/jp2/jp2_dec.c||src/libjasper/jp2/jp2_dec.c"
    ]
  },
  "patch_diff": {
    "src/libjasper/jp2/jp2_cod.c||src/libjasper/jp2/jp2_cod.c": [
      "File: src/libjasper/jp2/jp2_cod.c -> src/libjasper/jp2/jp2_cod.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "258:  box->info = boxinfo;",
      "259:  box->ops = &boxinfo->ops;",
      "260:  box->len = len;",
      "261:  if (box->len == 1) {",
      "262:   if (jp2_getuint64(in, &extlen)) {",
      "263:    goto error;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "261:  JAS_DBGLOG(10, (",
      "262:    \"preliminary processing of JP2 box: type=%c%s%c (0x%08x); length=%d\\n\",",
      "263:    '\"', boxinfo->name, '\"', box->type, box->len",
      "264:    ));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "282:    goto error;",
      "283:   }",
      "284:   if (jas_stream_copy(tmpstream, in, box->datalen)) {",
      "285:    jas_eprintf(\"cannot copy box data\\n\");",
      "286:    goto error;",
      "287:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "291:    box->ops = &jp2_boxinfo_unk.ops;",
      "",
      "---------------"
    ],
    "src/libjasper/jp2/jp2_dec.c||src/libjasper/jp2/jp2_dec.c": [
      "File: src/libjasper/jp2/jp2_dec.c -> src/libjasper/jp2/jp2_dec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "155:  found = 0;",
      "156:  while ((box = jp2_box_get(in))) {",
      "157:   if (jas_getdbglevel() >= 1) {",
      "159:   }",
      "160:   switch (box->type) {",
      "161:   case JP2_BOX_JP2C:",
      "",
      "[Removed Lines]",
      "158:    jas_eprintf(\"box type %s\\n\", box->info->name);",
      "",
      "[Added Lines]",
      "158:    jas_eprintf(\"got box type %s\\n\", box->info->name);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d",
      "candidate_info": {
        "commit_hash": "e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d",
        "repo": "mdadams/jasper",
        "commit_url": "https://github.com/mdadams/jasper/commit/e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d",
        "files": [
          "src/libjasper/base/jas_stream.c",
          "src/libjasper/jp2/jp2_cod.c"
        ],
        "message": "Fixed bugs due to uninitialized data in the JP2 decoder. Also, added some comments marking I/O stream interfaces that probably need to be changed (in the long term) to fix integer overflow problems.",
        "before_after_code_files": [
          "src/libjasper/base/jas_stream.c||src/libjasper/base/jas_stream.c",
          "src/libjasper/jp2/jp2_cod.c||src/libjasper/jp2/jp2_cod.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/libjasper/jp2/jp2_cod.c||src/libjasper/jp2/jp2_cod.c"
          ],
          "candidate": [
            "src/libjasper/jp2/jp2_cod.c||src/libjasper/jp2/jp2_cod.c"
          ]
        }
      },
      "candidate_diff": {
        "src/libjasper/base/jas_stream.c||src/libjasper/base/jas_stream.c": [
          "File: src/libjasper/base/jas_stream.c -> src/libjasper/base/jas_stream.c"
        ],
        "src/libjasper/jp2/jp2_cod.c||src/libjasper/jp2/jp2_cod.c": [
          "File: src/libjasper/jp2/jp2_cod.c -> src/libjasper/jp2/jp2_cod.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "187: {",
          "188:  jp2_box_t *box;",
          "191:  if (!(box = jas_malloc(sizeof(jp2_box_t)))) {",
          "192:   return 0;",
          "193:  }",
          "194:  memset(box, 0, sizeof(jp2_box_t));",
          "195:  box->type = type;",
          "196:  box->len = 0;",
          "197:  if (!(boxinfo = jp2_boxinfolookup(type))) {",
          "",
          "[Removed Lines]",
          "186: jp2_box_t *jp2_box_create(int type)",
          "189:  jp2_boxinfo_t *boxinfo;",
          "",
          "[Added Lines]",
          "186: jp2_box_t *jp2_box_create0()",
          "193:  box->type = 0;",
          "194:  box->len = 0;",
          "197:  box->ops = &jp2_boxinfo_unk.ops;",
          "198:  return box;",
          "199: }",
          "201: jp2_box_t *jp2_box_create(int type)",
          "202: {",
          "203:  jp2_box_t *box;",
          "204:  jp2_boxinfo_t *boxinfo;",
          "205:  if (!(box = jp2_box_create0())) {",
          "206:   return 0;",
          "207:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248:  box = 0;",
          "249:  tmpstream = 0;",
          "252:   goto error;",
          "253:  }",
          "259:  if (jp2_getuint32(in, &len) || jp2_getuint32(in, &box->type)) {",
          "260:   goto error;",
          "261:  }",
          "",
          "[Removed Lines]",
          "251:  if (!(box = jas_malloc(sizeof(jp2_box_t)))) {",
          "257:  box->ops = &jp2_boxinfo_unk.ops;",
          "",
          "[Added Lines]",
          "264:  if (!(box = jp2_box_create0())) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "263:  box->info = boxinfo;",
          "264:  box->len = len;",
          "265:  JAS_DBGLOG(10, (",
          "267:    '\"', boxinfo->name, '\"', box->type, box->len",
          "268:    ));",
          "269:  if (box->len == 1) {",
          "270:   if (jp2_getuint64(in, &extlen)) {",
          "271:    goto error;",
          "272:   }",
          "",
          "[Removed Lines]",
          "266:    \"preliminary processing of JP2 box: type=%c%s%c (0x%08x); length=%d\\n\",",
          "",
          "[Added Lines]",
          "274:    \"preliminary processing of JP2 box: \"",
          "275:    \"type=%c%s%c (0x%08x); length=%\"PRIuFAST32\"\\n\",",
          "279:   JAS_DBGLOG(10, (\"big length\\n\"));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "382: {",
          "383:  jp2_bpcc_t *bpcc = &box->data.bpcc;",
          "384:  unsigned int i;",
          "385:  bpcc->numcmpts = box->datalen;",
          "386:  if (!(bpcc->bpcs = jas_alloc2(bpcc->numcmpts, sizeof(uint_fast8_t)))) {",
          "387:   return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "395:  bpcc->bpcs = 0;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "462:  jp2_cdef_t *cdef = &box->data.cdef;",
          "463:  jp2_cdefchan_t *chan;",
          "464:  unsigned int channo;",
          "465:  if (jp2_getuint16(in, &cdef->numchans)) {",
          "466:   return -1;",
          "467:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "476:  cdef->ents = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "518:  }",
          "520:  if (dataflag) {",
          "522:    goto error;",
          "523:   }",
          "524:   jas_stream_close(tmpstream);",
          "",
          "[Removed Lines]",
          "521:   if (jas_stream_copy(out, tmpstream, box->len - JP2_BOX_HDRLEN(false))) {",
          "",
          "[Added Lines]",
          "533:   if (jas_stream_copy(out, tmpstream, box->len -",
          "534:     JP2_BOX_HDRLEN(false))) {",
          "535:    jas_eprintf(\"cannot copy box data\\n\");",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "777:  jp2_cmap_t *cmap = &box->data.cmap;",
          "778:  jp2_cmapent_t *ent;",
          "779:  unsigned int i;",
          "781:  cmap->numchans = (box->datalen) / 4;",
          "782:  if (!(cmap->ents = jas_alloc2(cmap->numchans, sizeof(jp2_cmapent_t)))) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "794:  cmap->ents = 0;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "835:  int_fast32_t x;",
          "837:  pclr->lutdata = 0;",
          "839:  if (jp2_getuint16(in, &pclr->numlutents) ||",
          "840:    jp2_getuint8(in, &pclr->numchans)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "853:  pclr->bpc = 0;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "869: #if 0",
          "870:  jp2_pclr_t *pclr = &box->data.pclr;",
          "871: #endif",
          "875:  return -1;",
          "876: }",
          "",
          "[Removed Lines]",
          "873: box = 0;",
          "874: out = 0;",
          "",
          "[Added Lines]",
          "889:  box = 0;",
          "890:  out = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}