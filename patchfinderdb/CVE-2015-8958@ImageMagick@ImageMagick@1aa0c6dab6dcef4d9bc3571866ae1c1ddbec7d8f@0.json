{
  "cve_id": "CVE-2015-8958",
  "cve_desc": "coders/sun.c in ImageMagick before 6.9.0-4 Beta allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted SUN file.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "1aa0c6dab6dcef4d9bc3571866ae1c1ddbec7d8f",
  "patch_info": {
    "commit_hash": "1aa0c6dab6dcef4d9bc3571866ae1c1ddbec7d8f",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/1aa0c6dab6dcef4d9bc3571866ae1c1ddbec7d8f",
    "files": [
      "coders/sun.c"
    ],
    "message": "",
    "before_after_code_files": [
      "coders/sun.c||coders/sun.c"
    ]
  },
  "patch_diff": {
    "coders/sun.c||coders/sun.c": [
      "File: coders/sun.c -> coders/sun.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "255:     x;",
      "257:   register unsigned char",
      "260:   size_t",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "420:     bytes_per_line=sun_info.width*sun_info.depth;",
      "421:     sun_data=(unsigned char *) AcquireQuantumMemory((size_t) MagickMax(",
      "422:       sun_info.length,bytes_per_line*sun_info.width),sizeof(*sun_data));",
      "425:     count=(ssize_t) ReadBlob(image,sun_info.length,sun_data);",
      "450:           ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "451:         (void) DecodeImage(sun_data,sun_info.length,sun_pixels,bytes_per_line*",
      "452:           height);",
      "",
      "[Removed Lines]",
      "423:     if (sun_data == (unsigned char *) NULL)",
      "424:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "426:     if (count != (ssize_t) sun_info.length)",
      "427:       ThrowReaderException(CorruptImageError,\"UnableToReadImageData\");",
      "428:     sun_pixels=sun_data;",
      "429:     bytes_per_line=0;",
      "430:     if (sun_info.type == RT_ENCODED)",
      "431:       {",
      "432:         size_t",
      "433:           height;",
      "436:           Read run-length encoded raster pixels.",
      "438:         height=sun_info.height;",
      "439:         if ((height == 0) || (sun_info.width == 0) || (sun_info.depth == 0) ||",
      "440:             ((bytes_per_line/sun_info.depth) != sun_info.width))",
      "441:           ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "442:         bytes_per_line+=15;",
      "443:         bytes_per_line<<=1;",
      "444:         if ((bytes_per_line >> 1) != (sun_info.width*sun_info.depth+15))",
      "445:           ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "446:         bytes_per_line>>=4;",
      "447:         sun_pixels=(unsigned char *) AcquireQuantumMemory(height,",
      "448:           bytes_per_line*sizeof(*sun_pixels));",
      "449:         if (sun_pixels == (unsigned char *) NULL)",
      "",
      "[Added Lines]",
      "424:     if (sun_data == (unsigned char *) NULL)",
      "425:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "426:     count=(ssize_t) ReadBlob(image,sun_info.length,sun_data);",
      "427:     if (count != (ssize_t) sun_info.length)",
      "428:       ThrowReaderException(CorruptImageError,\"UnableToReadImageData\");",
      "429:     height=sun_info.height;",
      "430:     if ((height == 0) || (sun_info.width == 0) || (sun_info.depth == 0) ||",
      "431:         ((bytes_per_line/sun_info.depth) != sun_info.width))",
      "432:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "433:     bytes_per_line+=15;",
      "434:     bytes_per_line<<=1;",
      "435:     if ((bytes_per_line >> 1) != (sun_info.width*sun_info.depth+15))",
      "436:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "438:     sun_pixels=(unsigned char *) AcquireQuantumMemory(height,",
      "439:       bytes_per_line*sizeof(*sun_pixels));",
      "440:     if (sun_pixels == (unsigned char *) NULL)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6b4aff0f117b978502ee5bcd6e753c17aec5a961",
      "candidate_info": {
        "commit_hash": "6b4aff0f117b978502ee5bcd6e753c17aec5a961",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/6b4aff0f117b978502ee5bcd6e753c17aec5a961",
        "files": [
          "coders/sun.c"
        ],
        "message": "",
        "before_after_code_files": [
          "coders/sun.c||coders/sun.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/sun.c||coders/sun.c"
          ],
          "candidate": [
            "coders/sun.c||coders/sun.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/sun.c||coders/sun.c": [
          "File: coders/sun.c -> coders/sun.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "408:         (void) CloseBlob(image);",
          "409:         return(GetFirstImageInList(image));",
          "410:       }",
          "412:     if (status == MagickFalse)",
          "413:       return(DestroyImageList(image));",
          "414:     if ((sun_info.length*sizeof(*sun_data))/sizeof(*sun_data) !=",
          "",
          "[Removed Lines]",
          "411:     status=SetImageExtent(image,image->columns,image->rows,exception);",
          "",
          "[Added Lines]",
          "411:     status=SetImageExtent(image,image->columns,image->rows,exception);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "424:     if (sun_data == (unsigned char *) NULL)",
          "425:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "426:     count=(ssize_t) ReadBlob(image,sun_info.length,sun_data);",
          "428:       ThrowReaderException(CorruptImageError,\"UnableToReadImageData\");",
          "429:     height=sun_info.height;",
          "430:     if ((height == 0) || (sun_info.width == 0) || (sun_info.depth == 0) ||",
          "432:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "433:     bytes_per_line+=15;",
          "434:     bytes_per_line<<=1;",
          "",
          "[Removed Lines]",
          "427:     if (count != (ssize_t) sun_info.length)",
          "431:         ((bytes_per_line/sun_info.depth) != sun_info.width))",
          "",
          "[Added Lines]",
          "427:     if (count != (ssize_t) sun_info.length)",
          "431:         ((bytes_per_line/sun_info.depth) != sun_info.width))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "437:     bytes_per_line>>=4;",
          "438:     sun_pixels=(unsigned char *) AcquireQuantumMemory(height,",
          "439:       bytes_per_line*sizeof(*sun_pixels));",
          "440:     if (sun_pixels == (unsigned char *) NULL)",
          "441:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "442:     if (sun_info.type == RT_ENCODED)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "440:     if (sun_pixels == (unsigned char *) NULL)",
          "441:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "442:     if (sun_info.type == RT_ENCODED)",
          "443:       (void) DecodeImage(sun_data,sun_info.length,sun_pixels,bytes_per_line*",
          "444:         height);",
          "445:     else",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8ea44b48a182dd46d018f4b4f09a5e2ee9638105",
      "candidate_info": {
        "commit_hash": "8ea44b48a182dd46d018f4b4f09a5e2ee9638105",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/8ea44b48a182dd46d018f4b4f09a5e2ee9638105",
        "files": [
          "coders/sun.c"
        ],
        "message": "",
        "before_after_code_files": [
          "coders/sun.c||coders/sun.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/sun.c||coders/sun.c"
          ],
          "candidate": [
            "coders/sun.c||coders/sun.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/sun.c||coders/sun.c": [
          "File: coders/sun.c -> coders/sun.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:     x;",
          "257:   register unsigned char",
          "260:   size_t",
          "261:     bytes_per_line,",
          "262:     extent,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "489:               image->rows);",
          "490:             if (status == MagickFalse)",
          "491:               break;",
          "499:           length=image->rows*(image->columns+image->columns % 2);",
          "500:           if (((sun_info.type == RT_ENCODED) &&",
          "501:                (length > (bytes_per_line*image->rows))) ||",
          "",
          "[Removed Lines]",
          "492:           }",
          "493:       }",
          "494:     else",
          "495:       if (image->storage_class == PseudoClass)",
          "496:         {",
          "497:           if (bytes_per_line == 0)",
          "498:             bytes_per_line=image->columns;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "529:           size_t",
          "530:             bytes_per_pixel;",
          "537:           length=image->rows*(bytes_per_line+bytes_per_line % 2);",
          "538:           if (((sun_info.type == RT_ENCODED) &&",
          "539:                (length > (bytes_per_line*image->rows))) ||",
          "",
          "[Removed Lines]",
          "532:           bytes_per_pixel=3;",
          "533:           if (image->alpha_trait != UndefinedPixelTrait)",
          "534:             bytes_per_pixel++;",
          "535:           if (bytes_per_line == 0)",
          "536:             bytes_per_line=bytes_per_pixel*image->columns;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}