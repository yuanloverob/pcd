{
  "cve_id": "CVE-2015-0214",
  "cve_desc": "message/externallib.php in Moodle through 2.5.9, 2.6.x before 2.6.7, 2.7.x before 2.7.4, and 2.8.x before 2.8.2 allows remote authenticated users to bypass a messaging-disabled setting via a web-services request, as demonstrated by a people-search request.",
  "repo": "moodle/moodle",
  "patch_hash": "436bbf8975f0daef329c6483ec595dbf9b39ee56",
  "patch_info": {
    "commit_hash": "436bbf8975f0daef329c6483ec595dbf9b39ee56",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/436bbf8975f0daef329c6483ec595dbf9b39ee56",
    "files": [
      "message/externallib.php"
    ],
    "message": "MDL-48329 core_message: Checking that messaging system is enabled",
    "before_after_code_files": [
      "message/externallib.php||message/externallib.php"
    ]
  },
  "patch_diff": {
    "message/externallib.php||message/externallib.php": [
      "File: message/externallib.php -> message/externallib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "212:     public static function create_contacts($userids) {",
      "213:         $params = array('userids' => $userids);",
      "214:         $params = self::validate_parameters(self::create_contacts_parameters(), $params);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "213:         global $CFG;",
      "216:         if (!$CFG->messaging) {",
      "217:             throw new moodle_exception('disabled', 'message');",
      "218:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "264:     public static function delete_contacts($userids) {",
      "265:         $params = array('userids' => $userids);",
      "266:         $params = self::validate_parameters(self::delete_contacts_parameters(), $params);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "272:         global $CFG;",
      "275:         if (!$CFG->messaging) {",
      "276:             throw new moodle_exception('disabled', 'message');",
      "277:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "309:     public static function block_contacts($userids) {",
      "310:         $params = array('userids' => $userids);",
      "311:         $params = self::validate_parameters(self::block_contacts_parameters(), $params);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "324:         global $CFG;",
      "327:         if (!$CFG->messaging) {",
      "328:             throw new moodle_exception('disabled', 'message');",
      "329:         }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "361:     public static function unblock_contacts($userids) {",
      "362:         $params = array('userids' => $userids);",
      "363:         $params = self::validate_parameters(self::unblock_contacts_parameters(), $params);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         global $CFG;",
      "386:         if (!$CFG->messaging) {",
      "387:             throw new moodle_exception('disabled', 'message');",
      "388:         }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "399:     public static function get_contacts() {",
      "400:         global $CFG;",
      "401:         require_once($CFG->dirroot . '/user/lib.php');",
      "403:         list($online, $offline, $strangers) = message_get_contacts();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "431:         if (!$CFG->messaging) {",
      "432:             throw new moodle_exception('disabled', 'message');",
      "433:         }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "499:     public static function search_contacts($searchtext, $onlymycourses = false) {",
      "500:         global $CFG, $USER;",
      "501:         require_once($CFG->libdir . '/enrollib.php');",
      "503:         $params = array('searchtext' => $searchtext, 'onlymycourses' => $onlymycourses);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "537:         if (!$CFG->messaging) {",
      "538:             throw new moodle_exception('disabled', 'message');",
      "539:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e72516ccdee9fd3f7cf4055df4b4f5d3ed26509c",
      "candidate_info": {
        "commit_hash": "e72516ccdee9fd3f7cf4055df4b4f5d3ed26509c",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/e72516ccdee9fd3f7cf4055df4b4f5d3ed26509c",
        "files": [
          "message/externallib.php"
        ],
        "message": "MDL-48329 core_message: Checking that messaging system is enabled",
        "before_after_code_files": [
          "message/externallib.php||message/externallib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "message/externallib.php||message/externallib.php"
          ],
          "candidate": [
            "message/externallib.php||message/externallib.php"
          ]
        }
      },
      "candidate_diff": {
        "message/externallib.php||message/externallib.php": [
          "File: message/externallib.php -> message/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "212:     public static function create_contacts($userids) {",
          "213:         $params = array('userids' => $userids);",
          "214:         $params = self::validate_parameters(self::create_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213:         global $CFG;",
          "216:         if (!$CFG->messaging) {",
          "217:             throw new moodle_exception('disabled', 'message');",
          "218:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "264:     public static function delete_contacts($userids) {",
          "265:         $params = array('userids' => $userids);",
          "266:         $params = self::validate_parameters(self::delete_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272:         global $CFG;",
          "275:         if (!$CFG->messaging) {",
          "276:             throw new moodle_exception('disabled', 'message');",
          "277:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "309:     public static function block_contacts($userids) {",
          "310:         $params = array('userids' => $userids);",
          "311:         $params = self::validate_parameters(self::block_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "324:         global $CFG;",
          "327:         if (!$CFG->messaging) {",
          "328:             throw new moodle_exception('disabled', 'message');",
          "329:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "361:     public static function unblock_contacts($userids) {",
          "362:         $params = array('userids' => $userids);",
          "363:         $params = self::validate_parameters(self::unblock_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "383:         global $CFG;",
          "386:         if (!$CFG->messaging) {",
          "387:             throw new moodle_exception('disabled', 'message');",
          "388:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "399:     public static function get_contacts() {",
          "400:         global $CFG;",
          "401:         require_once($CFG->dirroot . '/user/lib.php');",
          "403:         list($online, $offline, $strangers) = message_get_contacts();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "431:         if (!$CFG->messaging) {",
          "432:             throw new moodle_exception('disabled', 'message');",
          "433:         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "499:     public static function search_contacts($searchtext, $onlymycourses = false) {",
          "500:         global $CFG, $USER;",
          "501:         require_once($CFG->libdir . '/enrollib.php');",
          "503:         $params = array('searchtext' => $searchtext, 'onlymycourses' => $onlymycourses);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "537:         if (!$CFG->messaging) {",
          "538:             throw new moodle_exception('disabled', 'message');",
          "539:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "051f3e4db7ad351f92c8a2203ce62e4bdcdbcdef",
      "candidate_info": {
        "commit_hash": "051f3e4db7ad351f92c8a2203ce62e4bdcdbcdef",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/051f3e4db7ad351f92c8a2203ce62e4bdcdbcdef",
        "files": [
          "message/externallib.php"
        ],
        "message": "MDL-48329 core_message: Checking that messaging system is enabled",
        "before_after_code_files": [
          "message/externallib.php||message/externallib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "message/externallib.php||message/externallib.php"
          ],
          "candidate": [
            "message/externallib.php||message/externallib.php"
          ]
        }
      },
      "candidate_diff": {
        "message/externallib.php||message/externallib.php": [
          "File: message/externallib.php -> message/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "212:     public static function create_contacts($userids) {",
          "213:         $params = array('userids' => $userids);",
          "214:         $params = self::validate_parameters(self::create_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213:         global $CFG;",
          "216:         if (!$CFG->messaging) {",
          "217:             throw new moodle_exception('disabled', 'message');",
          "218:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "264:     public static function delete_contacts($userids) {",
          "265:         $params = array('userids' => $userids);",
          "266:         $params = self::validate_parameters(self::delete_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272:         global $CFG;",
          "275:         if (!$CFG->messaging) {",
          "276:             throw new moodle_exception('disabled', 'message');",
          "277:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "309:     public static function block_contacts($userids) {",
          "310:         $params = array('userids' => $userids);",
          "311:         $params = self::validate_parameters(self::block_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "324:         global $CFG;",
          "327:         if (!$CFG->messaging) {",
          "328:             throw new moodle_exception('disabled', 'message');",
          "329:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "361:     public static function unblock_contacts($userids) {",
          "362:         $params = array('userids' => $userids);",
          "363:         $params = self::validate_parameters(self::unblock_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "383:         global $CFG;",
          "386:         if (!$CFG->messaging) {",
          "387:             throw new moodle_exception('disabled', 'message');",
          "388:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "399:     public static function get_contacts() {",
          "400:         global $CFG;",
          "401:         require_once($CFG->dirroot . '/user/lib.php');",
          "403:         list($online, $offline, $strangers) = message_get_contacts();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "431:         if (!$CFG->messaging) {",
          "432:             throw new moodle_exception('disabled', 'message');",
          "433:         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "499:     public static function search_contacts($searchtext, $onlymycourses = false) {",
          "500:         global $CFG, $USER;",
          "501:         require_once($CFG->libdir . '/enrollib.php');",
          "503:         $params = array('searchtext' => $searchtext, 'onlymycourses' => $onlymycourses);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "537:         if (!$CFG->messaging) {",
          "538:             throw new moodle_exception('disabled', 'message');",
          "539:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9fa67f7cba63fc1191eba691569b11dd6736430",
      "candidate_info": {
        "commit_hash": "c9fa67f7cba63fc1191eba691569b11dd6736430",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/c9fa67f7cba63fc1191eba691569b11dd6736430",
        "files": [
          "message/externallib.php"
        ],
        "message": "MDL-48329 core_message: Checking that messaging system is enabled",
        "before_after_code_files": [
          "message/externallib.php||message/externallib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "message/externallib.php||message/externallib.php"
          ],
          "candidate": [
            "message/externallib.php||message/externallib.php"
          ]
        }
      },
      "candidate_diff": {
        "message/externallib.php||message/externallib.php": [
          "File: message/externallib.php -> message/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "212:     public static function create_contacts($userids) {",
          "213:         $params = array('userids' => $userids);",
          "214:         $params = self::validate_parameters(self::create_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213:         global $CFG;",
          "216:         if (!$CFG->messaging) {",
          "217:             throw new moodle_exception('disabled', 'message');",
          "218:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "264:     public static function delete_contacts($userids) {",
          "265:         $params = array('userids' => $userids);",
          "266:         $params = self::validate_parameters(self::delete_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272:         global $CFG;",
          "275:         if (!$CFG->messaging) {",
          "276:             throw new moodle_exception('disabled', 'message');",
          "277:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "309:     public static function block_contacts($userids) {",
          "310:         $params = array('userids' => $userids);",
          "311:         $params = self::validate_parameters(self::block_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "324:         global $CFG;",
          "327:         if (!$CFG->messaging) {",
          "328:             throw new moodle_exception('disabled', 'message');",
          "329:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "361:     public static function unblock_contacts($userids) {",
          "362:         $params = array('userids' => $userids);",
          "363:         $params = self::validate_parameters(self::unblock_contacts_parameters(), $params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "383:         global $CFG;",
          "386:         if (!$CFG->messaging) {",
          "387:             throw new moodle_exception('disabled', 'message');",
          "388:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "399:     public static function get_contacts() {",
          "400:         global $CFG;",
          "401:         require_once($CFG->dirroot . '/user/lib.php');",
          "403:         list($online, $offline, $strangers) = message_get_contacts();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "431:         if (!$CFG->messaging) {",
          "432:             throw new moodle_exception('disabled', 'message');",
          "433:         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "499:     public static function search_contacts($searchtext, $onlymycourses = false) {",
          "500:         global $CFG, $USER;",
          "501:         require_once($CFG->libdir . '/enrollib.php');",
          "503:         $params = array('searchtext' => $searchtext, 'onlymycourses' => $onlymycourses);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "537:         if (!$CFG->messaging) {",
          "538:             throw new moodle_exception('disabled', 'message');",
          "539:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}