{
  "cve_id": "CVE-2020-11869",
  "cve_desc": "An integer overflow was found in QEMU 4.0.1 through 4.2.0 in the way it implemented ATI VGA emulation. This flaw occurs in the ati_2d_blt() routine in hw/display/ati-2d.c while handling MMIO write operations through the ati_mm_write() callback. A malicious guest could abuse this flaw to crash the QEMU process, resulting in a denial of service.",
  "repo": "qemu/qemu",
  "patch_hash": "ac2071c3791b67fc7af78b8ceb320c01ca1b5df7",
  "patch_info": {
    "commit_hash": "ac2071c3791b67fc7af78b8ceb320c01ca1b5df7",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/ac2071c3791b67fc7af78b8ceb320c01ca1b5df7",
    "files": [
      "hw/display/ati_2d.c"
    ],
    "message": "ati-vga: Fix checks in ati_2d_blt() to avoid crash\n\nIn some corner cases (that never happen during normal operation but a\nmalicious guest could program wrong values) pixman functions were\ncalled with parameters that result in a crash. Fix this and add more\nchecks to disallow such cases.\n\nReported-by: Ziming Zhang <ezrakiez@gmail.com>\nSigned-off-by: BALATON Zoltan <balaton@eik.bme.hu>\nMessage-id: 20200406204029.19559747D5D@zero.eik.bme.hu\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>",
    "before_after_code_files": [
      "hw/display/ati_2d.c||hw/display/ati_2d.c"
    ]
  },
  "patch_diff": {
    "hw/display/ati_2d.c||hw/display/ati_2d.c": [
      "File: hw/display/ati_2d.c -> hw/display/ati_2d.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:             s->vga.vbe_start_addr, surface_data(ds), surface_stride(ds),",
      "54:             surface_bits_per_pixel(ds),",
      "55:             (s->regs.dp_mix & GMC_ROP3_MASK) >> 16);",
      "60:     int bpp = ati_bpp_from_datatype(s);",
      "61:     int dst_stride = DEFAULT_CNTL ? s->regs.dst_pitch : s->regs.default_pitch;",
      "62:     uint8_t *dst_bits = s->vga.vram_ptr + (DEFAULT_CNTL ?",
      "63:                         s->regs.dst_offset : s->regs.default_offset);",
      "",
      "[Removed Lines]",
      "56:     int dst_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
      "57:                  s->regs.dst_x : s->regs.dst_x + 1 - s->regs.dst_width);",
      "58:     int dst_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
      "59:                  s->regs.dst_y : s->regs.dst_y + 1 - s->regs.dst_height);",
      "",
      "[Added Lines]",
      "56:     unsigned dst_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
      "57:                       s->regs.dst_x : s->regs.dst_x + 1 - s->regs.dst_width);",
      "58:     unsigned dst_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
      "59:                       s->regs.dst_y : s->regs.dst_y + 1 - s->regs.dst_height);",
      "61:     if (!bpp) {",
      "62:         qemu_log_mask(LOG_GUEST_ERROR, \"Invalid bpp\\n\");",
      "63:         return;",
      "64:     }",
      "66:     if (!dst_stride) {",
      "67:         qemu_log_mask(LOG_GUEST_ERROR, \"Zero dest pitch\\n\");",
      "68:         return;",
      "69:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "82:     switch (s->regs.dp_mix & GMC_ROP3_MASK) {",
      "83:     case ROP3_SRCCOPY:",
      "84:     {",
      "89:         int src_stride = DEFAULT_CNTL ?",
      "90:                          s->regs.src_pitch : s->regs.default_pitch;",
      "91:         uint8_t *src_bits = s->vga.vram_ptr + (DEFAULT_CNTL ?",
      "92:                             s->regs.src_offset : s->regs.default_offset);",
      "",
      "[Removed Lines]",
      "85:         int src_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
      "86:                      s->regs.src_x : s->regs.src_x + 1 - s->regs.dst_width);",
      "87:         int src_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
      "88:                      s->regs.src_y : s->regs.src_y + 1 - s->regs.dst_height);",
      "",
      "[Added Lines]",
      "93:         unsigned src_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
      "94:                        s->regs.src_x : s->regs.src_x + 1 - s->regs.dst_width);",
      "95:         unsigned src_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
      "96:                        s->regs.src_y : s->regs.src_y + 1 - s->regs.dst_height);",
      "99:         if (!src_stride) {",
      "100:             qemu_log_mask(LOG_GUEST_ERROR, \"Zero source pitch\\n\");",
      "101:             return;",
      "102:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "137:                                     dst_y * surface_stride(ds),",
      "138:                                     s->regs.dst_height * surface_stride(ds));",
      "139:         }",
      "142:         break;",
      "143:     }",
      "144:     case ROP3_PATCOPY:",
      "",
      "[Removed Lines]",
      "140:         s->regs.dst_x += s->regs.dst_width;",
      "141:         s->regs.dst_y += s->regs.dst_height;",
      "",
      "[Added Lines]",
      "152:         s->regs.dst_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
      "153:                          dst_x + s->regs.dst_width : dst_x);",
      "154:         s->regs.dst_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
      "155:                          dst_y + s->regs.dst_height : dst_y);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "179:                                     dst_y * surface_stride(ds),",
      "180:                                     s->regs.dst_height * surface_stride(ds));",
      "181:         }",
      "183:         break;",
      "184:     }",
      "185:     default:",
      "",
      "[Removed Lines]",
      "182:         s->regs.dst_y += s->regs.dst_height;",
      "",
      "[Added Lines]",
      "196:         s->regs.dst_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
      "197:                          dst_y + s->regs.dst_height : dst_y);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "01392ae31a38294c1771eeed0dada1e224493492",
      "candidate_info": {
        "commit_hash": "01392ae31a38294c1771eeed0dada1e224493492",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/01392ae31a38294c1771eeed0dada1e224493492",
        "files": [
          "hw/display/ati_2d.c"
        ],
        "message": "ati-vga: Fix checks in ati_2d_blt() to avoid crash\n\nIn some corner cases (that never happen during normal operation but a\nmalicious guest could program wrong values) pixman functions were\ncalled with parameters that result in a crash. Fix this and add more\nchecks to disallow such cases.\n\nReported-by: Ziming Zhang <ezrakiez@gmail.com>\nSigned-off-by: BALATON Zoltan <balaton@eik.bme.hu>\nMessage-id: 20200406204029.19559747D5D@zero.eik.bme.hu\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>\n(cherry picked from commit ac2071c3791b67fc7af78b8ceb320c01ca1b5df7)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/display/ati_2d.c||hw/display/ati_2d.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/display/ati_2d.c||hw/display/ati_2d.c"
          ],
          "candidate": [
            "hw/display/ati_2d.c||hw/display/ati_2d.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/display/ati_2d.c||hw/display/ati_2d.c": [
          "File: hw/display/ati_2d.c -> hw/display/ati_2d.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:             s->vga.vbe_start_addr, surface_data(ds), surface_stride(ds),",
          "54:             surface_bits_per_pixel(ds),",
          "55:             (s->regs.dp_mix & GMC_ROP3_MASK) >> 16);",
          "60:     int bpp = ati_bpp_from_datatype(s);",
          "61:     int dst_stride = DEFAULT_CNTL ? s->regs.dst_pitch : s->regs.default_pitch;",
          "62:     uint8_t *dst_bits = s->vga.vram_ptr + (DEFAULT_CNTL ?",
          "63:                         s->regs.dst_offset : s->regs.default_offset);",
          "",
          "[Removed Lines]",
          "56:     int dst_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
          "57:                  s->regs.dst_x : s->regs.dst_x + 1 - s->regs.dst_width);",
          "58:     int dst_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
          "59:                  s->regs.dst_y : s->regs.dst_y + 1 - s->regs.dst_height);",
          "",
          "[Added Lines]",
          "56:     unsigned dst_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
          "57:                       s->regs.dst_x : s->regs.dst_x + 1 - s->regs.dst_width);",
          "58:     unsigned dst_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
          "59:                       s->regs.dst_y : s->regs.dst_y + 1 - s->regs.dst_height);",
          "61:     if (!bpp) {",
          "62:         qemu_log_mask(LOG_GUEST_ERROR, \"Invalid bpp\\n\");",
          "63:         return;",
          "64:     }",
          "66:     if (!dst_stride) {",
          "67:         qemu_log_mask(LOG_GUEST_ERROR, \"Zero dest pitch\\n\");",
          "68:         return;",
          "69:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:     switch (s->regs.dp_mix & GMC_ROP3_MASK) {",
          "83:     case ROP3_SRCCOPY:",
          "84:     {",
          "89:         int src_stride = DEFAULT_CNTL ?",
          "90:                          s->regs.src_pitch : s->regs.default_pitch;",
          "91:         uint8_t *src_bits = s->vga.vram_ptr + (DEFAULT_CNTL ?",
          "92:                             s->regs.src_offset : s->regs.default_offset);",
          "",
          "[Removed Lines]",
          "85:         int src_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
          "86:                      s->regs.src_x : s->regs.src_x + 1 - s->regs.dst_width);",
          "87:         int src_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
          "88:                      s->regs.src_y : s->regs.src_y + 1 - s->regs.dst_height);",
          "",
          "[Added Lines]",
          "93:         unsigned src_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
          "94:                        s->regs.src_x : s->regs.src_x + 1 - s->regs.dst_width);",
          "95:         unsigned src_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
          "96:                        s->regs.src_y : s->regs.src_y + 1 - s->regs.dst_height);",
          "99:         if (!src_stride) {",
          "100:             qemu_log_mask(LOG_GUEST_ERROR, \"Zero source pitch\\n\");",
          "101:             return;",
          "102:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "137:                                     dst_y * surface_stride(ds),",
          "138:                                     s->regs.dst_height * surface_stride(ds));",
          "139:         }",
          "142:         break;",
          "143:     }",
          "144:     case ROP3_PATCOPY:",
          "",
          "[Removed Lines]",
          "140:         s->regs.dst_x += s->regs.dst_width;",
          "141:         s->regs.dst_y += s->regs.dst_height;",
          "",
          "[Added Lines]",
          "152:         s->regs.dst_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
          "153:                          dst_x + s->regs.dst_width : dst_x);",
          "154:         s->regs.dst_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
          "155:                          dst_y + s->regs.dst_height : dst_y);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "179:                                     dst_y * surface_stride(ds),",
          "180:                                     s->regs.dst_height * surface_stride(ds));",
          "181:         }",
          "183:         break;",
          "184:     }",
          "185:     default:",
          "",
          "[Removed Lines]",
          "182:         s->regs.dst_y += s->regs.dst_height;",
          "",
          "[Added Lines]",
          "196:         s->regs.dst_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
          "197:                          dst_y + s->regs.dst_height : dst_y);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "584acf34cb05f16e13a46d666196a7583d232616",
      "candidate_info": {
        "commit_hash": "584acf34cb05f16e13a46d666196a7583d232616",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/584acf34cb05f16e13a46d666196a7583d232616",
        "files": [
          "hw/display/ati_2d.c"
        ],
        "message": "ati-vga: Fix reverse bit blts\n\nThe pixman library only supports blts with left to right, top to\nbottom order but the ATI VGA engine can also do different directions.\nFix support for these via a temporary buffer for now. This fixes\nrendering issues related to such blts (such as moving windows) but\nsome other glitches still remain.\n\nSigned-off-by: BALATON Zoltan <balaton@eik.bme.hu>\nMessage-id: e21855faaeb30d7b1771f084f283f6a30bedb1a3.1562227303.git.balaton@eik.bme.hu\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>",
        "before_after_code_files": [
          "hw/display/ati_2d.c||hw/display/ati_2d.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/display/ati_2d.c||hw/display/ati_2d.c"
          ],
          "candidate": [
            "hw/display/ati_2d.c||hw/display/ati_2d.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/display/ati_2d.c||hw/display/ati_2d.c": [
          "File: hw/display/ati_2d.c -> hw/display/ati_2d.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:             s->vga.vbe_start_addr, surface_data(ds), surface_stride(ds),",
          "54:             surface_bits_per_pixel(ds),",
          "55:             (s->regs.dp_mix & GMC_ROP3_MASK) >> 16);",
          "56:     int bpp = ati_bpp_from_datatype(s);",
          "57:     int dst_stride = DEFAULT_CNTL ? s->regs.dst_pitch : s->regs.default_pitch;",
          "58:     uint8_t *dst_bits = s->vga.vram_ptr + (DEFAULT_CNTL ?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:     int dst_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
          "57:                  s->regs.dst_x : s->regs.dst_x + 1 - s->regs.dst_width);",
          "58:     int dst_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
          "59:                  s->regs.dst_y : s->regs.dst_y + 1 - s->regs.dst_height);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:         dst_stride *= bpp;",
          "64:     }",
          "65:     uint8_t *end = s->vga.vram_ptr + s->vga.vram_size;",
          "68:         dst_stride >= end) {",
          "69:         qemu_log_mask(LOG_UNIMP, \"blt outside vram not implemented\\n\");",
          "70:         return;",
          "71:     }",
          "73:             s->regs.src_offset, s->regs.dst_offset, s->regs.default_offset,",
          "74:             s->regs.src_pitch, s->regs.dst_pitch, s->regs.default_pitch,",
          "75:             s->regs.src_x, s->regs.src_y, s->regs.dst_x, s->regs.dst_y,",
          "77:     switch (s->regs.dp_mix & GMC_ROP3_MASK) {",
          "78:     case ROP3_SRCCOPY:",
          "79:     {",
          "80:         int src_stride = DEFAULT_CNTL ?",
          "81:                          s->regs.src_pitch : s->regs.default_pitch;",
          "82:         uint8_t *src_bits = s->vga.vram_ptr + (DEFAULT_CNTL ?",
          "",
          "[Removed Lines]",
          "66:     if (dst_bits >= end ||",
          "67:         dst_bits + s->regs.dst_x + (s->regs.dst_y + s->regs.dst_height) *",
          "72:     DPRINTF(\"%d %d %d, %d %d %d, (%d,%d) -> (%d,%d) %dx%d\\n\",",
          "76:             s->regs.dst_width, s->regs.dst_height);",
          "",
          "[Added Lines]",
          "70:     if (dst_bits >= end || dst_bits + dst_x + (dst_y + s->regs.dst_height) *",
          "75:     DPRINTF(\"%d %d %d, %d %d %d, (%d,%d) -> (%d,%d) %dx%d %c %c\\n\",",
          "79:             s->regs.dst_width, s->regs.dst_height,",
          "80:             (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ? '>' : '<'),",
          "81:             (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ? 'v' : '^'));",
          "85:         int src_x = (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT ?",
          "86:                      s->regs.src_x : s->regs.src_x + 1 - s->regs.dst_width);",
          "87:         int src_y = (s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM ?",
          "88:                      s->regs.src_y : s->regs.src_y + 1 - s->regs.dst_height);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "86:             src_bits += s->regs.crtc_offset & 0x07ffffff;",
          "87:             src_stride *= bpp;",
          "88:         }",
          "92:             qemu_log_mask(LOG_UNIMP, \"blt outside vram not implemented\\n\");",
          "93:             return;",
          "94:         }",
          "",
          "[Removed Lines]",
          "89:         if (src_bits >= end ||",
          "90:             src_bits + s->regs.src_x + (s->regs.src_y + s->regs.dst_height) *",
          "91:             src_stride >= end) {",
          "",
          "[Added Lines]",
          "98:         if (src_bits >= end || src_bits + src_x +",
          "99:             (src_y + s->regs.dst_height) * src_stride >= end) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "97:         dst_stride /= sizeof(uint32_t);",
          "98:         DPRINTF(\"pixman_blt(%p, %p, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d)\\n\",",
          "99:                 src_bits, dst_bits, src_stride, dst_stride, bpp, bpp,",
          "101:                 s->regs.dst_width, s->regs.dst_height);",
          "107:         if (dst_bits >= s->vga.vram_ptr + s->vga.vbe_start_addr &&",
          "108:             dst_bits < s->vga.vram_ptr + s->vga.vbe_start_addr +",
          "109:             s->vga.vbe_regs[VBE_DISPI_INDEX_YRES] * s->vga.vbe_line_offset) {",
          "110:             memory_region_set_dirty(&s->vga.vram, s->vga.vbe_start_addr +",
          "111:                                     s->regs.dst_offset +",
          "113:                                     s->regs.dst_height * surface_stride(ds));",
          "114:         }",
          "115:         s->regs.dst_x += s->regs.dst_width;",
          "",
          "[Removed Lines]",
          "100:                 s->regs.src_x, s->regs.src_y, s->regs.dst_x, s->regs.dst_y,",
          "102:         pixman_blt((uint32_t *)src_bits, (uint32_t *)dst_bits,",
          "103:                    src_stride, dst_stride, bpp, bpp,",
          "104:                    s->regs.src_x, s->regs.src_y,",
          "105:                    s->regs.dst_x, s->regs.dst_y,",
          "106:                    s->regs.dst_width, s->regs.dst_height);",
          "112:                                     s->regs.dst_y * surface_stride(ds),",
          "",
          "[Added Lines]",
          "108:                 src_x, src_y, dst_x, dst_y,",
          "110:         if (s->regs.dp_cntl & DST_X_LEFT_TO_RIGHT &&",
          "111:             s->regs.dp_cntl & DST_Y_TOP_TO_BOTTOM) {",
          "112:             pixman_blt((uint32_t *)src_bits, (uint32_t *)dst_bits,",
          "113:                        src_stride, dst_stride, bpp, bpp,",
          "114:                        src_x, src_y, dst_x, dst_y,",
          "115:                        s->regs.dst_width, s->regs.dst_height);",
          "116:         } else {",
          "118:             int llb = s->regs.dst_width * (bpp / 8);",
          "119:             int tmp_stride = DIV_ROUND_UP(llb, sizeof(uint32_t));",
          "120:             uint32_t *tmp = g_malloc(tmp_stride * sizeof(uint32_t) *",
          "121:                                      s->regs.dst_height);",
          "122:             pixman_blt((uint32_t *)src_bits, tmp,",
          "123:                        src_stride, tmp_stride, bpp, bpp,",
          "124:                        src_x, src_y, 0, 0,",
          "125:                        s->regs.dst_width, s->regs.dst_height);",
          "126:             pixman_blt(tmp, (uint32_t *)dst_bits,",
          "127:                        tmp_stride, dst_stride, bpp, bpp,",
          "128:                        0, 0, dst_x, dst_y,",
          "129:                        s->regs.dst_width, s->regs.dst_height);",
          "130:             g_free(tmp);",
          "131:         }",
          "137:                                     dst_y * surface_stride(ds),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "151:             s->vga.vbe_regs[VBE_DISPI_INDEX_YRES] * s->vga.vbe_line_offset) {",
          "152:             memory_region_set_dirty(&s->vga.vram, s->vga.vbe_start_addr +",
          "153:                                     s->regs.dst_offset +",
          "155:                                     s->regs.dst_height * surface_stride(ds));",
          "156:         }",
          "157:         s->regs.dst_y += s->regs.dst_height;",
          "",
          "[Removed Lines]",
          "154:                                     s->regs.dst_y * surface_stride(ds),",
          "",
          "[Added Lines]",
          "179:                                     dst_y * surface_stride(ds),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "866ad5f5ff620078f88183aa254f7b02727e6aa3",
      "candidate_info": {
        "commit_hash": "866ad5f5ff620078f88183aa254f7b02727e6aa3",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/866ad5f5ff620078f88183aa254f7b02727e6aa3",
        "files": [
          "hw/display/ati.c",
          "hw/display/ati_2d.c",
          "hw/display/ati_int.h",
          "hw/display/ati_regs.h"
        ],
        "message": "ati-vga: Fixes to offset and pitch registers\n\nFix bit masks of registers for offset and pitch and also handle\ndefault values for both R128P and RV100. This improves picture a bit\nbut does not resolve all problems yet so there might be some more bugs\nsomewhere.\n\nSigned-off-by: BALATON Zoltan <balaton@eik.bme.hu>\nMessage-id: 20190624100005.7A1CA746395@zero.eik.bme.hu\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>",
        "before_after_code_files": [
          "hw/display/ati.c||hw/display/ati.c",
          "hw/display/ati_2d.c||hw/display/ati_2d.c",
          "hw/display/ati_int.h||hw/display/ati_int.h",
          "hw/display/ati_regs.h||hw/display/ati_regs.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/display/ati_2d.c||hw/display/ati_2d.c"
          ],
          "candidate": [
            "hw/display/ati_2d.c||hw/display/ati_2d.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/display/ati.c||hw/display/ati.c": [
          "File: hw/display/ati.c -> hw/display/ati.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "419:         break;",
          "420:     case DEFAULT_OFFSET:",
          "421:         val = s->regs.default_offset;",
          "422:         break;",
          "423:     case DEFAULT_PITCH:",
          "424:         val = s->regs.default_pitch;",
          "425:         break;",
          "426:     case DEFAULT_SC_BOTTOM_RIGHT:",
          "427:         val = s->regs.default_sc_bottom_right;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "422:         if (s->dev_id != PCI_DEVICE_ID_ATI_RAGE128_PF) {",
          "423:             val >>= 10;",
          "424:             val |= s->regs.default_pitch << 16;",
          "425:             val |= s->regs.default_tile << 30;",
          "426:         }",
          "430:         val |= s->regs.default_tile << 16;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "682:         break;",
          "683:     case SRC_PITCH_OFFSET:",
          "684:         if (s->dev_id == PCI_DEVICE_ID_ATI_RAGE128_PF) {",
          "687:             s->regs.src_tile = data >> 31;",
          "688:         } else {",
          "690:             s->regs.src_pitch = (data & 0x3fc00000) >> 16;",
          "691:             s->regs.src_tile = (data >> 30) & 1;",
          "692:         }",
          "693:         break;",
          "694:     case DST_PITCH_OFFSET:",
          "695:         if (s->dev_id == PCI_DEVICE_ID_ATI_RAGE128_PF) {",
          "698:             s->regs.dst_tile = data >> 31;",
          "699:         } else {",
          "701:             s->regs.dst_pitch = (data & 0x3fc00000) >> 16;",
          "702:             s->regs.dst_tile = data >> 30;",
          "703:         }",
          "",
          "[Removed Lines]",
          "685:             s->regs.src_offset = (data & 0x1fffff) << 5;",
          "686:             s->regs.src_pitch = (data >> 21) & 0x3ff;",
          "689:             s->regs.src_offset = (data & 0x3fffff) << 11;",
          "696:             s->regs.dst_offset = (data & 0x1fffff) << 5;",
          "697:             s->regs.dst_pitch = (data >> 21) & 0x3ff;",
          "700:             s->regs.dst_offset = (data & 0x3fffff) << 11;",
          "",
          "[Added Lines]",
          "691:             s->regs.src_offset = (data & 0x1fffff) << 4;",
          "692:             s->regs.src_pitch = (data & 0x7fe00000) >> 21;",
          "695:             s->regs.src_offset = (data & 0x3fffff) << 10;",
          "702:             s->regs.dst_offset = (data & 0x1fffff) << 4;",
          "703:             s->regs.dst_pitch = (data & 0x7fe00000) >> 21;",
          "706:             s->regs.dst_offset = (data & 0x3fffff) << 10;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "777:         s->regs.dp_write_mask = data;",
          "778:         break;",
          "779:     case DEFAULT_OFFSET:",
          "783:         break;",
          "784:     case DEFAULT_PITCH:",
          "785:         if (s->dev_id == PCI_DEVICE_ID_ATI_RAGE128_PF) {",
          "787:         }",
          "788:         break;",
          "789:     case DEFAULT_SC_BOTTOM_RIGHT:",
          "",
          "[Removed Lines]",
          "780:         data &= (s->dev_id == PCI_DEVICE_ID_ATI_RAGE128_PF ?",
          "781:                  0x03fffc00 : 0xfffffc00);",
          "782:         s->regs.default_offset = data;",
          "786:             s->regs.default_pitch = data & 0x103ff;",
          "",
          "[Added Lines]",
          "786:         if (s->dev_id == PCI_DEVICE_ID_ATI_RAGE128_PF) {",
          "787:             s->regs.default_offset = data & 0xfffffff0;",
          "788:         } else {",
          "790:             s->regs.default_offset = (data & 0x3fffff) << 10;",
          "791:             s->regs.default_pitch = (data & 0x3fc00000) >> 16;",
          "792:             s->regs.default_tile = data >> 30;",
          "793:         }",
          "797:             s->regs.default_pitch = data & 0x3fff;",
          "798:             s->regs.default_tile = (data >> 16) & 1;",
          "",
          "---------------"
        ],
        "hw/display/ati_2d.c||hw/display/ati_2d.c": [
          "File: hw/display/ati_2d.c -> hw/display/ati_2d.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:             s->vga.vbe_start_addr, surface_data(ds), surface_stride(ds),",
          "52:             surface_bits_per_pixel(ds),",
          "53:             (s->regs.dp_mix & GMC_ROP3_MASK) >> 16);",
          "56:             s->regs.src_x, s->regs.src_y, s->regs.dst_x, s->regs.dst_y,",
          "57:             s->regs.dst_width, s->regs.dst_height);",
          "58:     switch (s->regs.dp_mix & GMC_ROP3_MASK) {",
          "",
          "[Removed Lines]",
          "54:     DPRINTF(\"%d %d, %d %d, (%d,%d) -> (%d,%d) %dx%d\\n\", s->regs.src_offset,",
          "55:             s->regs.dst_offset, s->regs.src_pitch, s->regs.dst_pitch,",
          "",
          "[Added Lines]",
          "54:     DPRINTF(\"%d %d %d, %d %d %d, (%d,%d) -> (%d,%d) %dx%d\\n\",",
          "55:             s->regs.src_offset, s->regs.dst_offset, s->regs.default_offset,",
          "56:             s->regs.src_pitch, s->regs.dst_pitch, s->regs.default_pitch,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:     {",
          "61:         uint8_t *src_bits, *dst_bits, *end;",
          "62:         int src_stride, dst_stride, bpp = ati_bpp_from_datatype(s);",
          "68:         if (s->dev_id == PCI_DEVICE_ID_ATI_RAGE128_PF) {",
          "69:             src_bits += s->regs.crtc_offset & 0x07ffffff;",
          "",
          "[Removed Lines]",
          "63:         src_bits = s->vga.vram_ptr + s->regs.src_offset;",
          "64:         dst_bits = s->vga.vram_ptr + s->regs.dst_offset;",
          "65:         src_stride = s->regs.src_pitch;",
          "66:         dst_stride = s->regs.dst_pitch;",
          "",
          "[Added Lines]",
          "64:         src_bits = s->vga.vram_ptr +",
          "65:                    (s->regs.dp_gui_master_cntl & GMC_SRC_PITCH_OFFSET_CNTL ?",
          "66:                     s->regs.src_offset : s->regs.default_offset);",
          "67:         dst_bits = s->vga.vram_ptr +",
          "68:                    (s->regs.dp_gui_master_cntl & GMC_DST_PITCH_OFFSET_CNTL ?",
          "69:                     s->regs.dst_offset : s->regs.default_offset);",
          "70:         src_stride = (s->regs.dp_gui_master_cntl & GMC_SRC_PITCH_OFFSET_CNTL ?",
          "71:                       s->regs.src_pitch : s->regs.default_pitch);",
          "72:         dst_stride = (s->regs.dp_gui_master_cntl & GMC_DST_PITCH_OFFSET_CNTL ?",
          "73:                       s->regs.dst_pitch : s->regs.default_pitch);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "111:         uint8_t *dst_bits, *end;",
          "112:         int dst_stride, bpp = ati_bpp_from_datatype(s);",
          "113:         uint32_t filler = 0;",
          "117:         if (s->dev_id == PCI_DEVICE_ID_ATI_RAGE128_PF) {",
          "118:             dst_bits += s->regs.crtc_offset & 0x07ffffff;",
          "",
          "[Removed Lines]",
          "114:         dst_bits = s->vga.vram_ptr + s->regs.dst_offset;",
          "115:         dst_stride = s->regs.dst_pitch;",
          "",
          "[Added Lines]",
          "121:         dst_bits = s->vga.vram_ptr +",
          "122:                    (s->regs.dp_gui_master_cntl & GMC_DST_PITCH_OFFSET_CNTL ?",
          "123:                     s->regs.dst_offset : s->regs.default_offset);",
          "124:         dst_stride = (s->regs.dp_gui_master_cntl & GMC_DST_PITCH_OFFSET_CNTL ?",
          "125:                       s->regs.dst_pitch : s->regs.default_pitch);",
          "",
          "---------------"
        ],
        "hw/display/ati_int.h||hw/display/ati_int.h": [
          "File: hw/display/ati_int.h -> hw/display/ati_int.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     uint32_t dp_write_mask;",
          "75:     uint32_t default_offset;",
          "76:     uint32_t default_pitch;",
          "77:     uint32_t default_sc_bottom_right;",
          "78: } ATIVGARegs;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     uint32_t default_tile;",
          "",
          "---------------"
        ],
        "hw/display/ati_regs.h||hw/display/ati_regs.h": [
          "File: hw/display/ati_regs.h -> hw/display/ati_regs.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "370: #define BRUSH_SOLIDCOLOR                        0x00000d00",
          "375: #define GMC_SRC_CLIP_DEFAULT                    0x00000000",
          "376: #define GMC_DST_CLIP_DEFAULT                    0x00000000",
          "377: #define GMC_BRUSH_SOLIDCOLOR                    0x000000d0",
          "",
          "[Removed Lines]",
          "373: #define GMC_SRC_PITCH_OFFSET_DEFAULT            0x00000000",
          "374: #define GMC_DST_PITCH_OFFSET_DEFAULT            0x00000000",
          "",
          "[Added Lines]",
          "373: #define GMC_SRC_PITCH_OFFSET_CNTL               0x00000001",
          "374: #define GMC_DST_PITCH_OFFSET_CNTL               0x00000002",
          "",
          "---------------"
        ]
      }
    }
  ]
}