{
  "cve_id": "CVE-2019-9718",
  "cve_desc": "In FFmpeg 3.2 and 4.1, a denial of service in the subtitle decoder allows attackers to hog the CPU via a crafted video file in Matroska format, because ff_htmlmarkup_to_ass in libavcodec/htmlsubtitles.c has a complex format argument to sscanf.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "23ccf3cabb4baf6e8af4b1af3fcc59c904736f21",
  "patch_info": {
    "commit_hash": "23ccf3cabb4baf6e8af4b1af3fcc59c904736f21",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/23ccf3cabb4baf6e8af4b1af3fcc59c904736f21",
    "files": [
      "libavcodec/htmlsubtitles.c"
    ],
    "message": "avcodec/htmlsubtitles: Fixes denial of service due to use of sscanf in inner loop for tag scaning\n\nFixes: [Semmle Security Reports #19438]\nFixes: dos_sscanf1.mkv\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 1f00c97bc3475c477f3c468cf2d924d5761d0982)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
    ]
  },
  "patch_diff": {
    "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c": [
      "File: libavcodec/htmlsubtitles.c -> libavcodec/htmlsubtitles.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "51:             buf->str[--buf->len] = 0;",
      "52: }",
      "54: int ff_htmlmarkup_to_ass(void *log_ctx, AVBPrint *dst, const char *in)",
      "55: {",
      "56:     char *param, buffer[128], tmp[128];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "60: static int scantag(const char* in, char* buffer, int* lenp) {",
      "61:     int len;",
      "63:     for (len = 0; len < 128; len++) {",
      "64:         const char c = *in++;",
      "65:         switch (c) {",
      "66:         case '\\0':",
      "67:             return 0;",
      "68:         case '<':",
      "69:             return 0;",
      "70:         case '>':",
      "71:             buffer[len] = '\\0';",
      "73:             return 1;",
      "74:         default:",
      "75:             break;",
      "76:         }",
      "77:         buffer[len] = c;",
      "78:     }",
      "79:     return 0;",
      "80: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "102:         case '<':",
      "103:             tag_close = in[1] == '/';",
      "104:             len = 0;",
      "106:                 const char *tagname = buffer;",
      "107:                 while (*tagname == ' ')",
      "108:                     tagname++;",
      "",
      "[Removed Lines]",
      "105:             if (sscanf(in+tag_close+1, \"%127[^<>]>%n\", buffer, &len) >= 1 && len > 0) {",
      "",
      "[Added Lines]",
      "133:             if (scantag(in+tag_close+1, buffer, &len) && len > 0) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1f00c97bc3475c477f3c468cf2d924d5761d0982",
      "candidate_info": {
        "commit_hash": "1f00c97bc3475c477f3c468cf2d924d5761d0982",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/1f00c97bc3475c477f3c468cf2d924d5761d0982",
        "files": [
          "libavcodec/htmlsubtitles.c"
        ],
        "message": "avcodec/htmlsubtitles: Fixes denial of service due to use of sscanf in inner loop for tag scaning\n\nFixes: [Semmle Security Reports #19438]\nFixes: dos_sscanf1.mkv\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
          ],
          "candidate": [
            "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c": [
          "File: libavcodec/htmlsubtitles.c -> libavcodec/htmlsubtitles.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     uint32_t color;",
          "75: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83: static int scantag(const char* in, char* buffer, int* lenp) {",
          "84:     int len;",
          "86:     for (len = 0; len < 128; len++) {",
          "87:         const char c = *in++;",
          "88:         switch (c) {",
          "89:         case '\\0':",
          "90:             return 0;",
          "91:         case '<':",
          "92:             return 0;",
          "93:         case '>':",
          "94:             buffer[len] = '\\0';",
          "96:             return 1;",
          "97:         default:",
          "98:             break;",
          "99:         }",
          "100:         buffer[len] = c;",
          "101:     }",
          "102:     return 0;",
          "103: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156:             len = 0;",
          "159:                 const int skip = len + tag_close;",
          "160:                 const char *tagname = buffer;",
          "161:                 while (*tagname == ' ') {",
          "",
          "[Removed Lines]",
          "158:             if (sscanf(in+tag_close+1, \"%127[^<>]>%n\", buffer, &len) >= 1 && len > 0) {",
          "",
          "[Added Lines]",
          "186:             if (scantag(in+tag_close+1, buffer, &len) && len > 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc5361ed18ab0f69cfbead7afc88fb81ed4b36ae",
      "candidate_info": {
        "commit_hash": "cc5361ed18ab0f69cfbead7afc88fb81ed4b36ae",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/cc5361ed18ab0f69cfbead7afc88fb81ed4b36ae",
        "files": [
          "libavcodec/htmlsubtitles.c"
        ],
        "message": "avcodec/htmlsubtitles: Fixes denial of service due to use of sscanf in inner loop for tag scaning\n\nFixes: [Semmle Security Reports #19438]\nFixes: dos_sscanf1.mkv\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 1f00c97bc3475c477f3c468cf2d924d5761d0982)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
          ],
          "candidate": [
            "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c": [
          "File: libavcodec/htmlsubtitles.c -> libavcodec/htmlsubtitles.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     uint32_t color;",
          "75: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83: static int scantag(const char* in, char* buffer, int* lenp) {",
          "84:     int len;",
          "86:     for (len = 0; len < 128; len++) {",
          "87:         const char c = *in++;",
          "88:         switch (c) {",
          "89:         case '\\0':",
          "90:             return 0;",
          "91:         case '<':",
          "92:             return 0;",
          "93:         case '>':",
          "94:             buffer[len] = '\\0';",
          "96:             return 1;",
          "97:         default:",
          "98:             break;",
          "99:         }",
          "100:         buffer[len] = c;",
          "101:     }",
          "102:     return 0;",
          "103: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156:             len = 0;",
          "159:                 const int skip = len + tag_close;",
          "160:                 const char *tagname = buffer;",
          "161:                 while (*tagname == ' ') {",
          "",
          "[Removed Lines]",
          "158:             if (sscanf(in+tag_close+1, \"%127[^<>]>%n\", buffer, &len) >= 1 && len > 0) {",
          "",
          "[Added Lines]",
          "186:             if (scantag(in+tag_close+1, buffer, &len) && len > 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9191218d11684a5a283fcf387fc85af62ceef9bb",
      "candidate_info": {
        "commit_hash": "9191218d11684a5a283fcf387fc85af62ceef9bb",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/9191218d11684a5a283fcf387fc85af62ceef9bb",
        "files": [
          "libavcodec/htmlsubtitles.c"
        ],
        "message": "avcodec/htmlsubtitles: Fixes denial of service due to use of sscanf in inner loop for tag scaning\n\nFixes: [Semmle Security Reports #19438]\nFixes: dos_sscanf1.mkv\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 1f00c97bc3475c477f3c468cf2d924d5761d0982)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
          ],
          "candidate": [
            "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c": [
          "File: libavcodec/htmlsubtitles.c -> libavcodec/htmlsubtitles.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     uint32_t color;",
          "75: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83: static int scantag(const char* in, char* buffer, int* lenp) {",
          "84:     int len;",
          "86:     for (len = 0; len < 128; len++) {",
          "87:         const char c = *in++;",
          "88:         switch (c) {",
          "89:         case '\\0':",
          "90:             return 0;",
          "91:         case '<':",
          "92:             return 0;",
          "93:         case '>':",
          "94:             buffer[len] = '\\0';",
          "96:             return 1;",
          "97:         default:",
          "98:             break;",
          "99:         }",
          "100:         buffer[len] = c;",
          "101:     }",
          "102:     return 0;",
          "103: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156:             len = 0;",
          "159:                 const int skip = len + tag_close;",
          "160:                 const char *tagname = buffer;",
          "161:                 while (*tagname == ' ') {",
          "",
          "[Removed Lines]",
          "158:             if (sscanf(in+tag_close+1, \"%127[^<>]>%n\", buffer, &len) >= 1 && len > 0) {",
          "",
          "[Added Lines]",
          "186:             if (scantag(in+tag_close+1, buffer, &len) && len > 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "381fa4a29d38e4ddef2a83876fb8f76e96f45a5d",
      "candidate_info": {
        "commit_hash": "381fa4a29d38e4ddef2a83876fb8f76e96f45a5d",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/381fa4a29d38e4ddef2a83876fb8f76e96f45a5d",
        "files": [
          "libavcodec/htmlsubtitles.c"
        ],
        "message": "avcodec/htmlsubtitles: Fixes denial of service due to use of sscanf in inner loop for tag scaning\n\nFixes: [Semmle Security Reports #19438]\nFixes: dos_sscanf1.mkv\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 1f00c97bc3475c477f3c468cf2d924d5761d0982)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
          ],
          "candidate": [
            "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/htmlsubtitles.c||libavcodec/htmlsubtitles.c": [
          "File: libavcodec/htmlsubtitles.c -> libavcodec/htmlsubtitles.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     uint32_t color;",
          "75: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83: static int scantag(const char* in, char* buffer, int* lenp) {",
          "84:     int len;",
          "86:     for (len = 0; len < 128; len++) {",
          "87:         const char c = *in++;",
          "88:         switch (c) {",
          "89:         case '\\0':",
          "90:             return 0;",
          "91:         case '<':",
          "92:             return 0;",
          "93:         case '>':",
          "94:             buffer[len] = '\\0';",
          "96:             return 1;",
          "97:         default:",
          "98:             break;",
          "99:         }",
          "100:         buffer[len] = c;",
          "101:     }",
          "102:     return 0;",
          "103: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156:             len = 0;",
          "159:                 const int skip = len + tag_close;",
          "160:                 const char *tagname = buffer;",
          "161:                 while (*tagname == ' ') {",
          "",
          "[Removed Lines]",
          "158:             if (sscanf(in+tag_close+1, \"%127[^<>]>%n\", buffer, &len) >= 1 && len > 0) {",
          "",
          "[Added Lines]",
          "186:             if (scantag(in+tag_close+1, buffer, &len) && len > 0) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}