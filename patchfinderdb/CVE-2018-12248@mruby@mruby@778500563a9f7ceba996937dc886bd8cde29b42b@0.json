{
  "cve_id": "CVE-2018-12248",
  "cve_desc": "An issue was discovered in mruby 1.4.1. There is a heap-based buffer over-read associated with OP_ENTER because mrbgems/mruby-fiber/src/fiber.c does not extend the stack in cases of many arguments to fiber.",
  "repo": "mruby/mruby",
  "patch_hash": "778500563a9f7ceba996937dc886bd8cde29b42b",
  "patch_info": {
    "commit_hash": "778500563a9f7ceba996937dc886bd8cde29b42b",
    "repo": "mruby/mruby",
    "commit_url": "https://github.com/mruby/mruby/commit/778500563a9f7ceba996937dc886bd8cde29b42b",
    "files": [
      "mrbgems/mruby-fiber/src/fiber.c"
    ],
    "message": "Extend stack when pushing arguments that does not fit in; fix #4038",
    "before_after_code_files": [
      "mrbgems/mruby-fiber/src/fiber.c||mrbgems/mruby-fiber/src/fiber.c"
    ]
  },
  "patch_diff": {
    "mrbgems/mruby-fiber/src/fiber.c||mrbgems/mruby-fiber/src/fiber.c": [
      "File: mrbgems/mruby-fiber/src/fiber.c -> mrbgems/mruby-fiber/src/fiber.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "184: {",
      "185:   struct mrb_context *c = fiber_check(mrb, self);",
      "186:   struct mrb_context *old_c = mrb->c;",
      "187:   mrb_value value;",
      "189:   fiber_check_cfunc(mrb, c);",
      "191:     mrb_raise(mrb, E_FIBER_ERROR, \"resuming transferred fiber\");",
      "192:   }",
      "194:     mrb_raise(mrb, E_FIBER_ERROR, \"double resume (fib)\");",
      "195:   }",
      "197:     mrb_raise(mrb, E_FIBER_ERROR, \"resuming dead fiber\");",
      "198:   }",
      "200:   c->prev = resume ? mrb->c : (c->prev ? c->prev : mrb->root_c);",
      "202:     mrb_value *b, *e;",
      "207:     b = c->stack+1;",
      "208:     e = b + len;",
      "209:     while (b<e) {",
      "",
      "[Removed Lines]",
      "190:   if (resume && c->status == MRB_FIBER_TRANSFERRED) {",
      "193:   if (c->status == MRB_FIBER_RUNNING || c->status == MRB_FIBER_RESUMED) {",
      "196:   if (c->status == MRB_FIBER_TERMINATED) {",
      "199:   mrb->c->status = resume ? MRB_FIBER_RESUMED : MRB_FIBER_TRANSFERRED;",
      "201:   if (c->status == MRB_FIBER_CREATED) {",
      "204:     if (len >= c->stend - c->stack) {",
      "205:       mrb_raise(mrb, E_FIBER_ERROR, \"too many arguments to fiber\");",
      "206:     }",
      "",
      "[Added Lines]",
      "187:   enum mrb_fiber_state status;",
      "191:   status = c->status;",
      "192:   if (resume && status == MRB_FIBER_TRANSFERRED) {",
      "195:   if (status == MRB_FIBER_RUNNING || status == MRB_FIBER_RESUMED) {",
      "198:   if (status == MRB_FIBER_TERMINATED) {",
      "201:   old_c->status = resume ? MRB_FIBER_RESUMED : MRB_FIBER_TRANSFERRED;",
      "203:   fiber_switch_context(mrb, c);",
      "204:   if (status == MRB_FIBER_CREATED) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "215:   else {",
      "216:     value = fiber_result(mrb, a, len);",
      "217:   }",
      "220:   if (vmexec) {",
      "221:     c->vmexec = TRUE;",
      "",
      "[Removed Lines]",
      "218:   fiber_switch_context(mrb, c);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ff0a4f78674308b7643db1da9b9dc591f25c21d0",
      "candidate_info": {
        "commit_hash": "ff0a4f78674308b7643db1da9b9dc591f25c21d0",
        "repo": "mruby/mruby",
        "commit_url": "https://github.com/mruby/mruby/commit/ff0a4f78674308b7643db1da9b9dc591f25c21d0",
        "files": [
          "include/mruby.h",
          "src/vm.c"
        ],
        "message": "Export `stack_extend` function (renamed `mrb_stack_extend`); fix #3219\n\nThis change is required to support #4038.",
        "before_after_code_files": [
          "include/mruby.h||include/mruby.h",
          "src/vm.c||src/vm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/mruby.h||include/mruby.h": [
          "File: include/mruby.h -> include/mruby.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1237: #define E_FIBER_ERROR (mrb_exc_get(mrb, \"FiberError\"))",
          "1240: typedef struct mrb_pool mrb_pool;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1238: MRB_API void mrb_stack_extend(mrb_state*, int);",
          "",
          "---------------"
        ],
        "src/vm.c||src/vm.c": [
          "File: src/vm.c -> src/vm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:   }",
          "218: }",
          "222: {",
          "223:   if (mrb->c->stack + room >= mrb->c->stend) {",
          "224:     stack_extend_alloc(mrb, room);",
          "",
          "[Removed Lines]",
          "220: static inline void",
          "221: stack_extend(mrb_state *mrb, int room)",
          "",
          "[Added Lines]",
          "220: MRB_API void",
          "221: mrb_stack_extend(mrb_state *mrb, int room)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "446:         mrb_method_missing(mrb, mid, self, args);",
          "447:       }",
          "448:       mrb_ary_unshift(mrb, args, mrb_symbol_value(mid));",
          "450:       mrb->c->stack[n+1] = args;",
          "451:       argc = -1;",
          "452:     }",
          "",
          "[Removed Lines]",
          "449:       stack_extend(mrb, n+2);",
          "",
          "[Added Lines]",
          "449:       mrb_stack_extend(mrb, n+2);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "464:     }",
          "465:     if (MRB_METHOD_CFUNC_P(m)) {",
          "466:       ci->nregs = (int)(argc + 2);",
          "468:     }",
          "469:     else if (argc >= CALL_MAXARGS) {",
          "470:       mrb_value args = mrb_ary_new_from_values(mrb, argc, argv);",
          "472:       mrb->c->stack[1] = args;",
          "473:       ci->argc = -1;",
          "474:       argc = 1;",
          "",
          "[Removed Lines]",
          "467:       stack_extend(mrb, ci->nregs);",
          "471:       stack_extend(mrb, ci->nregs+2);",
          "",
          "[Added Lines]",
          "467:       mrb_stack_extend(mrb, ci->nregs);",
          "471:       mrb_stack_extend(mrb, ci->nregs+2);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "478:       ci->proc = p;",
          "479:       if (argc < 0) argc = 1;",
          "480:       ci->nregs = (int)(p->body.irep->nregs + argc);",
          "482:     }",
          "483:     if (voff >= 0) {",
          "484:       argv = mrb->c->stbase + voff;",
          "",
          "[Removed Lines]",
          "481:       stack_extend(mrb, ci->nregs);",
          "",
          "[Added Lines]",
          "481:       mrb_stack_extend(mrb, ci->nregs);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "533:   if (ci->argc < 0) keep = 3;",
          "534:   else keep = ci->argc + 2;",
          "535:   if (ci->nregs < keep) {",
          "537:   }",
          "538:   else {",
          "540:     stack_clear(mrb->c->stack+keep, ci->nregs-keep);",
          "541:   }",
          "",
          "[Removed Lines]",
          "536:     stack_extend(mrb, keep);",
          "539:     stack_extend(mrb, ci->nregs);",
          "",
          "[Added Lines]",
          "536:     mrb_stack_extend(mrb, keep);",
          "539:     mrb_stack_extend(mrb, ci->nregs);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "635:   ci->argc = 1;",
          "636:   ci->mid = ci[-1].mid;",
          "637:   if (MRB_PROC_CFUNC_P(p)) {",
          "639:     mrb->c->stack[0] = self;",
          "640:     mrb->c->stack[1] = self;",
          "641:     mrb->c->stack[2] = mrb_nil_value();",
          "642:     return MRB_PROC_CFUNC(p)(mrb, self);",
          "643:   }",
          "644:   ci->nregs = p->body.irep->nregs;",
          "646:   mrb->c->stack[0] = self;",
          "647:   mrb->c->stack[1] = self;",
          "648:   mrb->c->stack[2] = mrb_nil_value();",
          "",
          "[Removed Lines]",
          "638:     stack_extend(mrb, 3);",
          "645:   stack_extend(mrb, (ci->nregs < 3) ? 3 : ci->nregs);",
          "",
          "[Added Lines]",
          "638:     mrb_stack_extend(mrb, 3);",
          "645:   mrb_stack_extend(mrb, (ci->nregs < 3) ? 3 : ci->nregs);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "749:   ci->acc = CI_ACC_SKIP;",
          "750:   mrb->c->stack = mrb->c->stack + n;",
          "751:   ci->nregs = MRB_PROC_CFUNC_P(p) ? (int)(argc+2) : p->body.irep->nregs;",
          "754:   mrb->c->stack[0] = self;",
          "755:   if (argc > 0) {",
          "",
          "[Removed Lines]",
          "752:   stack_extend(mrb, ci->nregs);",
          "",
          "[Added Lines]",
          "752:   mrb_stack_extend(mrb, ci->nregs);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "800:   p = mrb_proc_ptr(b);",
          "801:   ci = mrb->c->ci;",
          "804:   mrb->c->stack[1] = mrb_ary_new_from_values(mrb, argc, argv);",
          "805:   mrb->c->stack[2] = mrb_nil_value();",
          "806:   ci->argc = -1;",
          "",
          "[Removed Lines]",
          "803:   stack_extend(mrb, 3);",
          "",
          "[Added Lines]",
          "803:   mrb_stack_extend(mrb, 3);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "944:   }",
          "945:   if (stack_keep > nregs)",
          "946:     nregs = stack_keep;",
          "948:   stack_clear(c->stack + stack_keep, nregs - stack_keep);",
          "949:   c->stack[0] = self;",
          "950:   result = mrb_vm_exec(mrb, proc, irep->iseq);",
          "",
          "[Removed Lines]",
          "947:   stack_extend(mrb, nregs);",
          "",
          "[Added Lines]",
          "947:   mrb_stack_extend(mrb, nregs);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1373:         ci->pc = pc;",
          "1374:         ci->acc = ci[-1].nregs;",
          "1375:         mrb->c->stack += ci->acc;",
          "1377:         regs[0] = self;",
          "1378:         pc = irep->iseq;",
          "1379:       }",
          "",
          "[Removed Lines]",
          "1376:         stack_extend(mrb, ci->nregs);",
          "",
          "[Added Lines]",
          "1376:         mrb_stack_extend(mrb, ci->nregs);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1437:         }",
          "1438:         if (argc >= 0) {",
          "1439:           if (a+2 >= irep->nregs) {",
          "1441:           }",
          "1442:           regs[a+1] = mrb_ary_new_from_values(mrb, n, regs+a+1);",
          "1443:           regs[a+2] = blk;",
          "",
          "[Removed Lines]",
          "1440:             stack_extend(mrb, a+3);",
          "",
          "[Added Lines]",
          "1440:             mrb_stack_extend(mrb, a+3);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1510:         pool = irep->pool;",
          "1511:         syms = irep->syms;",
          "1512:         ci->nregs = irep->nregs;",
          "1514:         pc = irep->iseq;",
          "1515:         JUMP;",
          "1516:       }",
          "",
          "[Removed Lines]",
          "1513:         stack_extend(mrb, (argc < 0 && ci->nregs < 3) ? 3 : ci->nregs);",
          "",
          "[Added Lines]",
          "1513:         mrb_stack_extend(mrb, (argc < 0 && ci->nregs < 3) ? 3 : ci->nregs);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1571:         pool = irep->pool;",
          "1572:         syms = irep->syms;",
          "1573:         ci->nregs = irep->nregs;",
          "1575:         if (ci->argc < 0) {",
          "1576:           if (irep->nregs > 3) {",
          "1577:             stack_clear(regs+3, irep->nregs-3);",
          "",
          "[Removed Lines]",
          "1574:         stack_extend(mrb, ci->nregs);",
          "",
          "[Added Lines]",
          "1574:         mrb_stack_extend(mrb, ci->nregs);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1648:         mid = missing;",
          "1649:         if (argc >= 0) {",
          "1650:           if (a+2 >= ci->nregs) {",
          "1652:           }",
          "1653:           regs[a+1] = mrb_ary_new_from_values(mrb, n, regs+a+1);",
          "1654:           regs[a+2] = blk;",
          "",
          "[Removed Lines]",
          "1651:             stack_extend(mrb, a+3);",
          "",
          "[Added Lines]",
          "1651:             mrb_stack_extend(mrb, a+3);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1709:         pool = irep->pool;",
          "1710:         syms = irep->syms;",
          "1711:         ci->nregs = irep->nregs;",
          "1713:         pc = irep->iseq;",
          "1714:         JUMP;",
          "1715:       }",
          "",
          "[Removed Lines]",
          "1712:         stack_extend(mrb, (argc < 0 && ci->nregs < 3) ? 3 : ci->nregs);",
          "",
          "[Added Lines]",
          "1712:         mrb_stack_extend(mrb, (argc < 0 && ci->nregs < 3) ? 3 : ci->nregs);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1967:         if (ci < ci0) {",
          "1968:           mrb->c->stack = ci[1].stackent;",
          "1969:         }",
          "1971:         pc = mrb->c->rescue[--ci->ridx];",
          "1972:       }",
          "1973:       else {",
          "",
          "[Removed Lines]",
          "1970:         stack_extend(mrb, irep->nregs);",
          "",
          "[Added Lines]",
          "1970:         mrb_stack_extend(mrb, irep->nregs);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2200:         pool = irep->pool;",
          "2201:         syms = irep->syms;",
          "2202:         if (ci->argc < 0) {",
          "2204:         }",
          "2205:         else {",
          "2207:         }",
          "2208:         pc = irep->iseq;",
          "2209:       }",
          "",
          "[Removed Lines]",
          "2203:           stack_extend(mrb, (irep->nregs < 3) ? 3 : irep->nregs);",
          "2206:           stack_extend(mrb, irep->nregs);",
          "",
          "[Added Lines]",
          "2203:           mrb_stack_extend(mrb, (irep->nregs < 3) ? 3 : irep->nregs);",
          "2206:           mrb_stack_extend(mrb, irep->nregs);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2877:       pool = irep->pool;",
          "2878:       syms = irep->syms;",
          "2879:       ci->nregs = irep->nregs;",
          "2881:       stack_clear(regs+1, ci->nregs-1);",
          "2882:       pc = irep->iseq;",
          "2883:       JUMP;",
          "",
          "[Removed Lines]",
          "2880:       stack_extend(mrb, ci->nregs);",
          "",
          "[Added Lines]",
          "2880:       mrb_stack_extend(mrb, ci->nregs);",
          "",
          "---------------"
        ]
      }
    }
  ]
}