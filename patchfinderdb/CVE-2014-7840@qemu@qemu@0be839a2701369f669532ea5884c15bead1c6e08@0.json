{
  "cve_id": "CVE-2014-7840",
  "cve_desc": "The host_from_stream_offset function in arch_init.c in QEMU, when loading RAM during migration, allows remote attackers to execute arbitrary code via a crafted (1) offset or (2) length value in savevm data.",
  "repo": "qemu/qemu",
  "patch_hash": "0be839a2701369f669532ea5884c15bead1c6e08",
  "patch_info": {
    "commit_hash": "0be839a2701369f669532ea5884c15bead1c6e08",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/0be839a2701369f669532ea5884c15bead1c6e08",
    "files": [
      "arch_init.c"
    ],
    "message": "migration: fix parameter validation on ram load\n\nDuring migration, the values read from migration stream during ram load\nare not validated. Especially offset in host_from_stream_offset() and\nalso the length of the writes in the callers of said function.\n\nTo fix this, we need to make sure that the [offset, offset + length]\nrange fits into one of the allocated memory regions.\n\nValidating addr < len should be sufficient since data seems to always be\nmanaged in TARGET_PAGE_SIZE chunks.\n\nFixes: CVE-2014-7840\n\nNote: follow-up patches add extra checks on each block->host access.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>\nReviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>\nSigned-off-by: Amit Shah <amit.shah@redhat.com>",
    "before_after_code_files": [
      "arch_init.c||arch_init.c"
    ]
  },
  "patch_diff": {
    "arch_init.c||arch_init.c": [
      "File: arch_init.c -> arch_init.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1006:     uint8_t len;",
      "1008:     if (flags & RAM_SAVE_FLAG_CONTINUE) {",
      "1010:             error_report(\"Ack, bad migration stream!\");",
      "1011:             return NULL;",
      "1012:         }",
      "",
      "[Removed Lines]",
      "1009:         if (!block) {",
      "",
      "[Added Lines]",
      "1009:         if (!block || block->length <= offset) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1019:     id[len] = 0;",
      "1021:     QTAILQ_FOREACH(block, &ram_list.blocks, next) {",
      "1023:             return memory_region_get_ram_ptr(block->mr) + offset;",
      "1024:     }",
      "1026:     error_report(\"Can't find block %s!\", id);",
      "",
      "[Removed Lines]",
      "1022:         if (!strncmp(id, block->idstr, sizeof(id)))",
      "",
      "[Added Lines]",
      "1022:         if (!strncmp(id, block->idstr, sizeof(id)) && block->length > offset) {",
      "1024:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9b8424d5735278ca382f11adc7c63072b632ab83",
      "candidate_info": {
        "commit_hash": "9b8424d5735278ca382f11adc7c63072b632ab83",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/9b8424d5735278ca382f11adc7c63072b632ab83",
        "files": [
          "arch_init.c",
          "exec.c",
          "include/exec/cpu-all.h"
        ],
        "message": "exec: split length -> used_length/max_length\n\nThis patch allows us to distinguish between two\nlength values for each block:\n    max_length - length of memory block that was allocated\n    used_length - length of block used by QEMU/guest\n\nCurrently, we set used_length - max_length, unconditionally.\nFollow-up patches allow used_length <= max_length.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>",
        "before_after_code_files": [
          "arch_init.c||arch_init.c",
          "exec.c||exec.c",
          "include/exec/cpu-all.h||include/exec/cpu-all.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "arch_init.c||arch_init.c"
          ],
          "candidate": [
            "arch_init.c||arch_init.c"
          ]
        }
      },
      "candidate_diff": {
        "arch_init.c||arch_init.c": [
          "File: arch_init.c -> arch_init.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "522:     address_space_sync_dirty_bitmap(&address_space_memory);",
          "524:     QTAILQ_FOREACH(block, &ram_list.blocks, next) {",
          "526:     }",
          "527:     trace_migration_bitmap_sync_end(migration_dirty_pages",
          "528:                                     - num_dirty_pages_init);",
          "",
          "[Removed Lines]",
          "525:         migration_bitmap_sync_range(block->mr->ram_addr, block->length);",
          "",
          "[Added Lines]",
          "525:         migration_bitmap_sync_range(block->mr->ram_addr, block->used_length);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "668:             offset >= last_offset) {",
          "669:             break;",
          "670:         }",
          "672:             offset = 0;",
          "673:             block = QTAILQ_NEXT(block, next);",
          "674:             if (!block) {",
          "",
          "[Removed Lines]",
          "671:         if (offset >= block->length) {",
          "",
          "[Added Lines]",
          "671:         if (offset >= block->used_length) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "727:     uint64_t total = 0;",
          "729:     QTAILQ_FOREACH(block, &ram_list.blocks, next)",
          "732:     return total;",
          "733: }",
          "",
          "[Removed Lines]",
          "730:         total += block->length;",
          "",
          "[Added Lines]",
          "730:         total += block->used_length;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "831:     QTAILQ_FOREACH(block, &ram_list.blocks, next) {",
          "832:         uint64_t block_pages;",
          "835:         migration_dirty_pages += block_pages;",
          "836:     }",
          "",
          "[Removed Lines]",
          "834:         block_pages = block->length >> TARGET_PAGE_BITS;",
          "",
          "[Added Lines]",
          "834:         block_pages = block->used_length >> TARGET_PAGE_BITS;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "844:     QTAILQ_FOREACH(block, &ram_list.blocks, next) {",
          "845:         qemu_put_byte(f, strlen(block->idstr));",
          "846:         qemu_put_buffer(f, (uint8_t *)block->idstr, strlen(block->idstr));",
          "848:     }",
          "850:     qemu_mutex_unlock_ramlist();",
          "",
          "[Removed Lines]",
          "847:         qemu_put_be64(f, block->length);",
          "",
          "[Added Lines]",
          "847:         qemu_put_be64(f, block->used_length);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1015:     uint8_t len;",
          "1017:     if (flags & RAM_SAVE_FLAG_CONTINUE) {",
          "1019:             error_report(\"Ack, bad migration stream!\");",
          "1020:             return NULL;",
          "1021:         }",
          "",
          "[Removed Lines]",
          "1018:         if (!block || block->length <= offset) {",
          "",
          "[Added Lines]",
          "1018:         if (!block || block->max_length <= offset) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1028:     id[len] = 0;",
          "1030:     QTAILQ_FOREACH(block, &ram_list.blocks, next) {",
          "1032:             return memory_region_get_ram_ptr(block->mr) + offset;",
          "1033:         }",
          "1034:     }",
          "",
          "[Removed Lines]",
          "1031:         if (!strncmp(id, block->idstr, sizeof(id)) && block->length > offset) {",
          "",
          "[Added Lines]",
          "1031:         if (!strncmp(id, block->idstr, sizeof(id)) &&",
          "1032:             block->max_length > offset) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1086:                 QTAILQ_FOREACH(block, &ram_list.blocks, next) {",
          "1087:                     if (!strncmp(id, block->idstr, sizeof(id))) {",
          "1089:                             error_report(\"Length mismatch: %s: 0x\" RAM_ADDR_FMT",
          "1090:                                          \" in != 0x\" RAM_ADDR_FMT, id, length,",
          "1092:                             ret =  -EINVAL;",
          "1093:                         }",
          "1094:                         break;",
          "",
          "[Removed Lines]",
          "1088:                         if (block->length != length) {",
          "1091:                                          block->length);",
          "",
          "[Added Lines]",
          "1089:                         if (block->used_length != length) {",
          "1092:                                          block->used_length);",
          "",
          "---------------"
        ],
        "exec.c||exec.c": [
          "File: exec.c -> exec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "814:     block = ram_list.mru_block;",
          "816:         goto found;",
          "817:     }",
          "818:     QTAILQ_FOREACH(block, &ram_list.blocks, next) {",
          "820:             goto found;",
          "821:         }",
          "822:     }",
          "",
          "[Removed Lines]",
          "815:     if (block && addr - block->offset < block->length) {",
          "819:         if (addr - block->offset < block->length) {",
          "",
          "[Added Lines]",
          "815:     if (block && addr - block->offset < block->max_length) {",
          "819:         if (addr - block->offset < block->max_length) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1307:     qemu_mutex_lock_ramlist();",
          "1310:     if (!new_block->host) {",
          "1311:         if (xen_enabled()) {",
          "1313:         } else {",
          "1315:                                              &new_block->mr->align);",
          "1316:             if (!new_block->host) {",
          "1317:                 error_setg_errno(errp, errno,",
          "",
          "[Removed Lines]",
          "1308:     new_block->offset = find_ram_offset(new_block->length);",
          "1312:             xen_ram_alloc(new_block->offset, new_block->length, new_block->mr);",
          "1314:             new_block->host = phys_mem_alloc(new_block->length,",
          "",
          "[Added Lines]",
          "1308:     new_block->offset = find_ram_offset(new_block->max_length);",
          "1312:             xen_ram_alloc(new_block->offset, new_block->max_length,",
          "1313:                           new_block->mr);",
          "1315:             new_block->host = phys_mem_alloc(new_block->max_length,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1320:                 qemu_mutex_unlock_ramlist();",
          "1321:                 return -1;",
          "1322:             }",
          "1324:         }",
          "1325:     }",
          "1328:     QTAILQ_FOREACH(block, &ram_list.blocks, next) {",
          "1330:             break;",
          "1331:         }",
          "1332:     }",
          "",
          "[Removed Lines]",
          "1323:             memory_try_enable_merging(new_block->host, new_block->length);",
          "1329:         if (block->length < new_block->length) {",
          "",
          "[Added Lines]",
          "1324:             memory_try_enable_merging(new_block->host, new_block->max_length);",
          "1330:         if (block->max_length < new_block->max_length) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1350:                                    old_ram_size, new_ram_size);",
          "1351:        }",
          "1352:     }",
          "1359:     if (kvm_enabled()) {",
          "1361:     }",
          "1363:     return new_block->offset;",
          "",
          "[Removed Lines]",
          "1353:     cpu_physical_memory_set_dirty_range(new_block->offset, new_block->length);",
          "1355:     qemu_ram_setup_dump(new_block->host, new_block->length);",
          "1356:     qemu_madvise(new_block->host, new_block->length, QEMU_MADV_HUGEPAGE);",
          "1357:     qemu_madvise(new_block->host, new_block->length, QEMU_MADV_DONTFORK);",
          "1360:         kvm_setup_guest_memory(new_block->host, new_block->length);",
          "",
          "[Added Lines]",
          "1354:     cpu_physical_memory_set_dirty_range(new_block->offset,",
          "1355:                                         new_block->used_length);",
          "1357:     qemu_ram_setup_dump(new_block->host, new_block->max_length);",
          "1358:     qemu_madvise(new_block->host, new_block->max_length, QEMU_MADV_HUGEPAGE);",
          "1359:     qemu_madvise(new_block->host, new_block->max_length, QEMU_MADV_DONTFORK);",
          "1362:         kvm_setup_guest_memory(new_block->host, new_block->max_length);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1391:     size = TARGET_PAGE_ALIGN(size);",
          "1392:     new_block = g_malloc0(sizeof(*new_block));",
          "1393:     new_block->mr = mr;",
          "1395:     new_block->flags = share ? RAM_SHARED : 0;",
          "1396:     new_block->host = file_ram_alloc(new_block, size,",
          "1397:                                      mem_path, errp);",
          "",
          "[Removed Lines]",
          "1394:     new_block->length = size;",
          "",
          "[Added Lines]",
          "1396:     new_block->used_length = size;",
          "1397:     new_block->max_length = size;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1420:     size = TARGET_PAGE_ALIGN(size);",
          "1421:     new_block = g_malloc0(sizeof(*new_block));",
          "1422:     new_block->mr = mr;",
          "1424:     new_block->fd = -1;",
          "1425:     new_block->host = host;",
          "1426:     if (host) {",
          "",
          "[Removed Lines]",
          "1423:     new_block->length = size;",
          "",
          "[Added Lines]",
          "1426:     new_block->used_length = size;",
          "1427:     new_block->max_length = max_size;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1475:                 xen_invalidate_map_cache_entry(block->host);",
          "1476: #ifndef _WIN32",
          "1477:             } else if (block->fd >= 0) {",
          "1479:                 close(block->fd);",
          "1480: #endif",
          "1481:             } else {",
          "1483:             }",
          "1484:             g_free(block);",
          "1485:             break;",
          "",
          "[Removed Lines]",
          "1478:                 munmap(block->host, block->length);",
          "1482:                 qemu_anon_ram_free(block->host, block->length);",
          "",
          "[Added Lines]",
          "1482:                 munmap(block->host, block->max_length);",
          "1486:                 qemu_anon_ram_free(block->host, block->max_length);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1500:     QTAILQ_FOREACH(block, &ram_list.blocks, next) {",
          "1501:         offset = addr - block->offset;",
          "1503:             vaddr = ramblock_ptr(block, offset);",
          "1504:             if (block->flags & RAM_PREALLOC) {",
          "1505:                 ;",
          "",
          "[Removed Lines]",
          "1502:         if (offset < block->length) {",
          "",
          "[Added Lines]",
          "1506:         if (offset < block->max_length) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1575:             return xen_map_cache(addr, 0, 0);",
          "1576:         } else if (block->host == NULL) {",
          "1577:             block->host =",
          "1579:         }",
          "1580:     }",
          "1581:     return ramblock_ptr(block, addr - block->offset);",
          "",
          "[Removed Lines]",
          "1578:                 xen_map_cache(block->offset, block->length, 1);",
          "",
          "[Added Lines]",
          "1582:                 xen_map_cache(block->offset, block->max_length, 1);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1594:         RAMBlock *block;",
          "1596:         QTAILQ_FOREACH(block, &ram_list.blocks, next) {",
          "1600:                 return ramblock_ptr(block, addr - block->offset);",
          "1601:             }",
          "1602:         }",
          "",
          "[Removed Lines]",
          "1597:             if (addr - block->offset < block->length) {",
          "1598:                 if (addr - block->offset + *size > block->length)",
          "",
          "[Added Lines]",
          "1601:             if (addr - block->offset < block->max_length) {",
          "1602:                 if (addr - block->offset + *size > block->max_length)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1619:     }",
          "1621:     block = ram_list.mru_block;",
          "1623:         goto found;",
          "1624:     }",
          "",
          "[Removed Lines]",
          "1622:     if (block && block->host && host - block->host < block->length) {",
          "",
          "[Added Lines]",
          "1626:     if (block && block->host && host - block->host < block->max_length) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1628:         if (block->host == NULL) {",
          "1629:             continue;",
          "1630:         }",
          "1632:             goto found;",
          "1633:         }",
          "1634:     }",
          "",
          "[Removed Lines]",
          "1631:         if (host - block->host < block->length) {",
          "",
          "[Added Lines]",
          "1635:         if (host - block->host < block->max_length) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2873:     RAMBlock *block;",
          "2875:     QTAILQ_FOREACH(block, &ram_list.blocks, next) {",
          "2877:     }",
          "2878: }",
          "2879: #endif",
          "",
          "[Removed Lines]",
          "2876:         func(block->host, block->offset, block->length, opaque);",
          "",
          "[Added Lines]",
          "2880:         func(block->host, block->offset, block->used_length, opaque);",
          "",
          "---------------"
        ],
        "include/exec/cpu-all.h||include/exec/cpu-all.h": [
          "File: include/exec/cpu-all.h -> include/exec/cpu-all.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "303:     struct MemoryRegion *mr;",
          "304:     uint8_t *host;",
          "305:     ram_addr_t offset;",
          "307:     uint32_t flags;",
          "308:     char idstr[256];",
          "",
          "[Removed Lines]",
          "306:     ram_addr_t length;",
          "",
          "[Added Lines]",
          "306:     ram_addr_t used_length;",
          "307:     ram_addr_t max_length;",
          "",
          "---------------"
        ]
      }
    }
  ]
}