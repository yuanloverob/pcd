{
  "cve_id": "CVE-2013-2058",
  "cve_desc": "The host_start function in drivers/usb/chipidea/host.c in the Linux kernel before 3.7.4 does not properly support a certain non-streaming option, which allows local users to cause a denial of service (system crash) by sending a large amount of network traffic through a USB/Ethernet adapter.",
  "repo": "torvalds/linux",
  "patch_hash": "929473ea05db455ad88cdc081f2adc556b8dc48f",
  "patch_info": {
    "commit_hash": "929473ea05db455ad88cdc081f2adc556b8dc48f",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/929473ea05db455ad88cdc081f2adc556b8dc48f",
    "files": [
      "drivers/usb/chipidea/host.c"
    ],
    "message": "usb: chipidea: Allow disabling streaming not only in udc mode\n\nWhen running a scp transfer using a USB/Ethernet adapter the following crash\nhappens:\n\n$ scp test.tar.gz fabio@192.168.1.100:/home/fabio\nfabio@192.168.1.100's password:\ntest.tar.gz                                      0%    0     0.0KB/s   --:-- ETA\n------------[ cut here ]------------\nWARNING: at net/sched/sch_generic.c:255 dev_watchdog+0x2cc/0x2f0()\nNETDEV WATCHDOG: eth0 (asix): transmit queue 0 timed out\nModules linked in:\nBacktrace:\n[<80011c94>] (dump_backtrace+0x0/0x10c) from [<804d3a5c>] (dump_stack+0x18/0x1c)\n r6:000000ff r5:80412388 r4:80685dc0 r3:80696cc0\n[<804d3a44>] (dump_stack+0x0/0x1c) from [<80021868>]\n(warn_slowpath_common+0x54/0x6c)\n[<80021814>] (warn_slowpath_common+0x0/0x6c) from [<80021924>]\n(warn_slowpath_fmt+0x38/0x40)\n...\n\nSetting SDIS (Stream Disable Mode- bit 4 of USBMODE register) fixes the problem.\n\nHowever, in current code CI13XXX_DISABLE_STREAMING flag is only set in udc mode,\nso allow disabling streaming also in host mode.\n\nTested on a mx6qsabrelite board.\n\nSuggested-by: Peter Chen <peter.chen@freescale.com>\nSigned-off-by: Fabio Estevam <fabio.estevam@freescale.com>\nReviewed-by: Peter Chen <peter.chen@freescale.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "before_after_code_files": [
      "drivers/usb/chipidehost.c||drivers/uschipidea/host.c"
    ]
  },
  "patch_diff": {
    "drivers/usb/chipidehost.c||drivers/uschipidea/host.c": [
      "File: drivers/usb/chipidehost.c -> drivers/uschipidea/host.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8e22978c57087aac4d88693278db1cc3e94f1253",
      "candidate_info": {
        "commit_hash": "8e22978c57087aac4d88693278db1cc3e94f1253",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/8e22978c57087aac4d88693278db1cc3e94f1253",
        "files": [
          "drivers/usb/chipidea/Makefile",
          "drivers/usb/chipidea/ci.h",
          "drivers/usb/chipidea/ci_hdrc_imx.c",
          "drivers/usb/chipidea/ci_hdrc_imx.h",
          "drivers/usb/chipidea/ci_hdrc_msm.c",
          "drivers/usb/chipidea/ci_hdrc_pci.c",
          "drivers/usb/chipidea/core.c",
          "drivers/usb/chipidea/debug.c",
          "drivers/usb/chipidea/debug.h",
          "drivers/usb/chipidea/host.c",
          "drivers/usb/chipidea/host.h",
          "drivers/usb/chipidea/udc.c",
          "drivers/usb/chipidea/udc.h",
          "drivers/usb/chipidea/usbmisc_imx.c",
          "include/linux/usb/chipidea.h"
        ],
        "message": "usb: chipidea: drop \"13xxx\" infix\n\n\"ci13xxx\" is bad for at least the following reasons:\n  * people often mistype it\n  * it doesn't add any informational value to the names it's used in\n  * it needlessly attracts mail filters\n\nThis patch replaces it with \"ci_hdrc\", \"ci_udc\" or \"ci_hw\", depending\non the situation. Modules with ci13xxx prefix are also renamed accordingly\nand aliases are added for compatibility. Otherwise, no functional changes.\n\nSigned-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
        "before_after_code_files": [
          "drivers/usb/chipidea/ci.h||drivers/usb/chipidea/ci.h",
          "drivers/usb/chipidea/ci13xxx_imx.c||drivers/usb/chipidea/ci_hdrc_imx.c",
          "drivers/usb/chipidea/ci13xxx_msm.c||drivers/usb/chipidea/ci_hdrc_msm.c",
          "drivers/usb/chipidea/ci13xxx_pci.c||drivers/usb/chipidea/ci_hdrc_pci.c",
          "drivers/usb/chipidea/core.c||drivers/usb/chipidea/core.c",
          "drivers/usb/chipidea/debug.c||drivers/usb/chipidea/debug.c",
          "drivers/usb/chipidea/debug.h||drivers/usb/chipidea/debug.h",
          "drivers/usb/chipidea/host.c||drivers/usb/chipidea/host.c",
          "drivers/usb/chipidea/host.h||drivers/usb/chipidea/host.h",
          "drivers/usb/chipidea/udc.c||drivers/usb/chipidea/udc.c",
          "drivers/usb/chipidea/udc.h||drivers/usb/chipidea/udc.h",
          "drivers/usb/chipidea/usbmisc_imx.c||drivers/usb/chipidea/usbmisc_imx.c",
          "include/linux/usb/chipidea.h||include/linux/usb/chipidea.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/usb/chipidea/ci.h||drivers/usb/chipidea/ci.h": [
          "File: drivers/usb/chipidea/ci.h -> drivers/usb/chipidea/ci.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:  struct usb_ep    ep;",
          "46:  u8     dir;",
          "47:  u8     num;",
          "",
          "[Removed Lines]",
          "44: struct ci13xxx_ep {",
          "",
          "[Added Lines]",
          "44: struct ci_hw_ep {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:  char     name[16];",
          "50:  struct {",
          "51:   struct list_head queue;",
          "53:   dma_addr_t  dma;",
          "54:  }     qh;",
          "55:  int     wedge;",
          "59:  spinlock_t    *lock;",
          "60:  struct dma_pool    *td_pool;",
          "61:  struct td_node    *pending_td;",
          "",
          "[Removed Lines]",
          "52:   struct ci13xxx_qh *ptr;",
          "58:  struct ci13xxx    *ci;",
          "",
          "[Added Lines]",
          "52:   struct ci_hw_qh  *ptr;",
          "58:  struct ci_hdrc    *ci;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77: struct ci_role_driver {",
          "81:  const char *name;",
          "82: };",
          "",
          "[Removed Lines]",
          "78:  int  (*start)(struct ci13xxx *);",
          "79:  void  (*stop)(struct ci13xxx *);",
          "80:  irqreturn_t (*irq)(struct ci13xxx *);",
          "",
          "[Added Lines]",
          "78:  int  (*start)(struct ci_hdrc *);",
          "79:  void  (*stop)(struct ci_hdrc *);",
          "80:  irqreturn_t (*irq)(struct ci_hdrc *);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "137:  struct device   *dev;",
          "138:  spinlock_t   lock;",
          "139:  struct hw_bank   hw_bank;",
          "",
          "[Removed Lines]",
          "136: struct ci13xxx {",
          "",
          "[Added Lines]",
          "136: struct ci_hdrc {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "150:  struct usb_gadget  gadget;",
          "151:  struct usb_gadget_driver *driver;",
          "152:  unsigned   hw_ep_max;",
          "154:  u32    ep0_dir;",
          "157:  struct usb_request  *status;",
          "158:  bool    setaddr;",
          "",
          "[Removed Lines]",
          "153:  struct ci13xxx_ep  ci13xxx_ep[ENDPT_MAX];",
          "155:  struct ci13xxx_ep  *ep0out, *ep0in;",
          "",
          "[Added Lines]",
          "153:  struct ci_hw_ep   ci_hw_ep[ENDPT_MAX];",
          "155:  struct ci_hw_ep   *ep0out, *ep0in;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "161:  u8    suspended;",
          "162:  u8    test_mode;",
          "165:  int    vbus_active;",
          "167:  bool    global_phy;",
          "",
          "[Removed Lines]",
          "164:  struct ci13xxx_platform_data *platdata;",
          "",
          "[Added Lines]",
          "164:  struct ci_hdrc_platform_data *platdata;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "170:  struct dentry   *debugfs;",
          "171: };",
          "174: {",
          "175:  BUG_ON(ci->role >= CI_ROLE_END || !ci->roles[ci->role]);",
          "176:  return ci->roles[ci->role];",
          "177: }",
          "180: {",
          "181:  int ret;",
          "",
          "[Removed Lines]",
          "173: static inline struct ci_role_driver *ci_role(struct ci13xxx *ci)",
          "179: static inline int ci_role_start(struct ci13xxx *ci, enum ci_role role)",
          "",
          "[Added Lines]",
          "173: static inline struct ci_role_driver *ci_role(struct ci_hdrc *ci)",
          "179: static inline int ci_role_start(struct ci_hdrc *ci, enum ci_role role)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "192:  return ret;",
          "193: }",
          "196: {",
          "197:  enum ci_role role = ci->role;",
          "",
          "[Removed Lines]",
          "195: static inline void ci_role_stop(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "195: static inline void ci_role_stop(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "211: #define REG_BITS   (32)",
          "215:  CAP_CAPLENGTH,",
          "216:  CAP_HCCPARAMS,",
          "217:  CAP_DCCPARAMS,",
          "",
          "[Removed Lines]",
          "214: enum ci13xxx_regs {",
          "",
          "[Added Lines]",
          "214: enum ci_hw_regs {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "247: {",
          "248:  return ioread32(ci->hw_bank.regmap[reg]) & mask;",
          "249: }",
          "",
          "[Removed Lines]",
          "246: static inline u32 hw_read(struct ci13xxx *ci, enum ci13xxx_regs reg, u32 mask)",
          "",
          "[Added Lines]",
          "246: static inline u32 hw_read(struct ci_hdrc *ci, enum ci_hw_regs reg, u32 mask)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "258:        u32 mask, u32 data)",
          "259: {",
          "260:  if (~mask)",
          "",
          "[Removed Lines]",
          "257: static inline void hw_write(struct ci13xxx *ci, enum ci13xxx_regs reg,",
          "",
          "[Added Lines]",
          "257: static inline void hw_write(struct ci_hdrc *ci, enum ci_hw_regs reg,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "275:         u32 mask)",
          "276: {",
          "277:  u32 val = ioread32(ci->hw_bank.regmap[reg]) & mask;",
          "",
          "[Removed Lines]",
          "274: static inline u32 hw_test_and_clear(struct ci13xxx *ci, enum ci13xxx_regs reg,",
          "",
          "[Added Lines]",
          "274: static inline u32 hw_test_and_clear(struct ci_hdrc *ci, enum ci_hw_regs reg,",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "292:         u32 mask, u32 data)",
          "293: {",
          "294:  u32 val = hw_read(ci, reg, ~0);",
          "",
          "[Removed Lines]",
          "291: static inline u32 hw_test_and_write(struct ci13xxx *ci, enum ci13xxx_regs reg,",
          "",
          "[Added Lines]",
          "291: static inline u32 hw_test_and_write(struct ci_hdrc *ci, enum ci_hw_regs reg,",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "297:  return (val & mask) >> __ffs(mask);",
          "298: }",
          "",
          "[Removed Lines]",
          "300: int hw_device_reset(struct ci13xxx *ci, u32 mode);",
          "302: int hw_port_test_set(struct ci13xxx *ci, u8 mode);",
          "304: u8 hw_port_test_get(struct ci13xxx *ci);",
          "",
          "[Added Lines]",
          "300: int hw_device_reset(struct ci_hdrc *ci, u32 mode);",
          "302: int hw_port_test_set(struct ci_hdrc *ci, u8 mode);",
          "304: u8 hw_port_test_get(struct ci_hdrc *ci);",
          "",
          "---------------"
        ],
        "drivers/usb/chipidea/ci13xxx_imx.c||drivers/usb/chipidea/ci_hdrc_imx.c": [
          "File: drivers/usb/chipidea/ci13xxx_imx.c -> drivers/usb/chipidea/ci_hdrc_imx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <linux/regulator/consumer.h>",
          "24: #include \"ci.h\"",
          "27: #define pdev_to_phy(pdev) \\",
          "28:  ((struct usb_phy *)platform_get_drvdata(pdev))",
          "31:  struct usb_phy *phy;",
          "32:  struct platform_device *ci_pdev;",
          "33:  struct clk *clk;",
          "",
          "[Removed Lines]",
          "25: #include \"ci13xxx_imx.h\"",
          "30: struct ci13xxx_imx_data {",
          "",
          "[Added Lines]",
          "25: #include \"ci_hdrc_imx.h\"",
          "30: struct ci_hdrc_imx_data {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90: {",
          "94:   .capoffset = DEF_CAPOFFSET,",
          "98:  };",
          "99:  struct resource *res;",
          "100:  int ret;",
          "",
          "[Removed Lines]",
          "89: static int ci13xxx_imx_probe(struct platform_device *pdev)",
          "91:  struct ci13xxx_imx_data *data;",
          "92:  struct ci13xxx_platform_data pdata = {",
          "93:   .name  = \"ci13xxx_imx\",",
          "95:   .flags  = CI13XXX_REQUIRE_TRANSCEIVER |",
          "96:       CI13XXX_PULLUP_ON_VBUS |",
          "97:       CI13XXX_DISABLE_STREAMING,",
          "",
          "[Added Lines]",
          "89: static int ci_hdrc_imx_probe(struct platform_device *pdev)",
          "91:  struct ci_hdrc_imx_data *data;",
          "92:  struct ci_hdrc_platform_data pdata = {",
          "93:   .name  = \"ci_hdrc_imx\",",
          "95:   .flags  = CI_HDRC_REQUIRE_TRANSCEIVER |",
          "96:       CI_HDRC_PULLUP_ON_VBUS |",
          "97:       CI_HDRC_DISABLE_STREAMING,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107:  data = devm_kzalloc(&pdev->dev, sizeof(*data), GFP_KERNEL);",
          "108:  if (!data) {",
          "110:   return -ENOMEM;",
          "111:  }",
          "",
          "[Removed Lines]",
          "109:   dev_err(&pdev->dev, \"Failed to allocate CI13xxx-IMX data!\\n\");",
          "",
          "[Added Lines]",
          "109:   dev_err(&pdev->dev, \"Failed to allocate ci_hdrc-imx data!\\n\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "172:   }",
          "173:  }",
          "176:     pdev->resource, pdev->num_resources,",
          "177:     &pdata);",
          "178:  if (IS_ERR(data->ci_pdev)) {",
          "",
          "[Removed Lines]",
          "175:  data->ci_pdev = ci13xxx_add_device(&pdev->dev,",
          "",
          "[Added Lines]",
          "175:  data->ci_pdev = ci_hdrc_add_device(&pdev->dev,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "200:  return 0;",
          "202: disable_device:",
          "204: err:",
          "205:  if (data->reg_vbus)",
          "206:   regulator_disable(data->reg_vbus);",
          "",
          "[Removed Lines]",
          "203:  ci13xxx_remove_device(data->ci_pdev);",
          "",
          "[Added Lines]",
          "203:  ci_hdrc_remove_device(data->ci_pdev);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "209:  return ret;",
          "210: }",
          "213: {",
          "216:  pm_runtime_disable(&pdev->dev);",
          "219:  if (data->reg_vbus)",
          "220:   regulator_disable(data->reg_vbus);",
          "",
          "[Removed Lines]",
          "212: static int ci13xxx_imx_remove(struct platform_device *pdev)",
          "214:  struct ci13xxx_imx_data *data = platform_get_drvdata(pdev);",
          "217:  ci13xxx_remove_device(data->ci_pdev);",
          "",
          "[Added Lines]",
          "212: static int ci_hdrc_imx_remove(struct platform_device *pdev)",
          "214:  struct ci_hdrc_imx_data *data = platform_get_drvdata(pdev);",
          "217:  ci_hdrc_remove_device(data->ci_pdev);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "229:  return 0;",
          "230: }",
          "233:  { .compatible = \"fsl,imx27-usb\", },",
          "234:  { /* sentinel */ }",
          "235: };",
          "241:  .driver = {",
          "242:   .name = \"imx_usb\",",
          "243:   .owner = THIS_MODULE,",
          "245:   },",
          "246: };",
          "250: MODULE_ALIAS(\"platform:imx-usb\");",
          "251: MODULE_LICENSE(\"GPL v2\");",
          "253: MODULE_AUTHOR(\"Marek Vasut <marex@denx.de>\");",
          "254: MODULE_AUTHOR(\"Richard Zhao <richard.zhao@freescale.com>\");",
          "",
          "[Removed Lines]",
          "232: static const struct of_device_id ci13xxx_imx_dt_ids[] = {",
          "236: MODULE_DEVICE_TABLE(of, ci13xxx_imx_dt_ids);",
          "238: static struct platform_driver ci13xxx_imx_driver = {",
          "239:  .probe = ci13xxx_imx_probe,",
          "240:  .remove = ci13xxx_imx_remove,",
          "244:   .of_match_table = ci13xxx_imx_dt_ids,",
          "248: module_platform_driver(ci13xxx_imx_driver);",
          "252: MODULE_DESCRIPTION(\"CI13xxx i.MX USB binding\");",
          "",
          "[Added Lines]",
          "232: static const struct of_device_id ci_hdrc_imx_dt_ids[] = {",
          "236: MODULE_DEVICE_TABLE(of, ci_hdrc_imx_dt_ids);",
          "238: static struct platform_driver ci_hdrc_imx_driver = {",
          "239:  .probe = ci_hdrc_imx_probe,",
          "240:  .remove = ci_hdrc_imx_remove,",
          "244:   .of_match_table = ci_hdrc_imx_dt_ids,",
          "248: module_platform_driver(ci_hdrc_imx_driver);",
          "252: MODULE_DESCRIPTION(\"CI HDRC i.MX USB binding\");",
          "",
          "---------------"
        ],
        "drivers/usb/chipidea/ci13xxx_msm.c||drivers/usb/chipidea/ci_hdrc_msm.c": [
          "File: drivers/usb/chipidea/ci13xxx_msm.c -> drivers/usb/chipidea/ci_hdrc_msm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #define MSM_USB_BASE (ci->hw_bank.abs)",
          "21: {",
          "22:  struct device *dev = ci->gadget.dev.parent;",
          "23:  int val;",
          "25:  switch (event) {",
          "28:   writel(0, USB_AHBBURST);",
          "29:   writel(0, USB_AHBMODE);",
          "30:   break;",
          "",
          "[Removed Lines]",
          "20: static void ci13xxx_msm_notify_event(struct ci13xxx *ci, unsigned event)",
          "26:  case CI13XXX_CONTROLLER_RESET_EVENT:",
          "27:   dev_dbg(dev, \"CI13XXX_CONTROLLER_RESET_EVENT received\\n\");",
          "31:  case CI13XXX_CONTROLLER_STOPPED_EVENT:",
          "32:   dev_dbg(dev, \"CI13XXX_CONTROLLER_STOPPED_EVENT received\\n\");",
          "",
          "[Added Lines]",
          "20: static void ci_hdrc_msm_notify_event(struct ci_hdrc *ci, unsigned event)",
          "26:  case CI_HDRC_CONTROLLER_RESET_EVENT:",
          "27:   dev_dbg(dev, \"CI_HDRC_CONTROLLER_RESET_EVENT received\\n\");",
          "31:  case CI_HDRC_CONTROLLER_STOPPED_EVENT:",
          "32:   dev_dbg(dev, \"CI_HDRC_CONTROLLER_STOPPED_EVENT received\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:   usb_phy_io_write(ci->transceiver, val, ULPI_FUNC_CTRL);",
          "41:   break;",
          "42:  default:",
          "44:   break;",
          "45:  }",
          "46: }",
          "56: };",
          "59: {",
          "60:  struct platform_device *plat_ci;",
          "65:     pdev->resource, pdev->num_resources,",
          "67:  if (IS_ERR(plat_ci)) {",
          "69:   return PTR_ERR(plat_ci);",
          "70:  }",
          "",
          "[Removed Lines]",
          "43:   dev_dbg(dev, \"unknown ci13xxx event\\n\");",
          "48: static struct ci13xxx_platform_data ci13xxx_msm_platdata = {",
          "49:  .name   = \"ci13xxx_msm\",",
          "50:  .flags   = CI13XXX_REGS_SHARED |",
          "51:       CI13XXX_REQUIRE_TRANSCEIVER |",
          "52:       CI13XXX_PULLUP_ON_VBUS |",
          "53:       CI13XXX_DISABLE_STREAMING,",
          "55:  .notify_event  = ci13xxx_msm_notify_event,",
          "58: static int ci13xxx_msm_probe(struct platform_device *pdev)",
          "62:  dev_dbg(&pdev->dev, \"ci13xxx_msm_probe\\n\");",
          "64:  plat_ci = ci13xxx_add_device(&pdev->dev,",
          "66:     &ci13xxx_msm_platdata);",
          "68:   dev_err(&pdev->dev, \"ci13xxx_add_device failed!\\n\");",
          "",
          "[Added Lines]",
          "43:   dev_dbg(dev, \"unknown ci_hdrc event\\n\");",
          "48: static struct ci_hdrc_platform_data ci_hdrc_msm_platdata = {",
          "49:  .name   = \"ci_hdrc_msm\",",
          "50:  .flags   = CI_HDRC_REGS_SHARED |",
          "51:       CI_HDRC_REQUIRE_TRANSCEIVER |",
          "52:       CI_HDRC_PULLUP_ON_VBUS |",
          "53:       CI_HDRC_DISABLE_STREAMING,",
          "55:  .notify_event  = ci_hdrc_msm_notify_event,",
          "58: static int ci_hdrc_msm_probe(struct platform_device *pdev)",
          "62:  dev_dbg(&pdev->dev, \"ci_hdrc_msm_probe\\n\");",
          "64:  plat_ci = ci_hdrc_add_device(&pdev->dev,",
          "66:     &ci_hdrc_msm_platdata);",
          "68:   dev_err(&pdev->dev, \"ci_hdrc_add_device failed!\\n\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:  return 0;",
          "78: }",
          "81: {",
          "82:  struct platform_device *plat_ci = platform_get_drvdata(pdev);",
          "84:  pm_runtime_disable(&pdev->dev);",
          "87:  return 0;",
          "88: }",
          "93:  .driver = { .name = \"msm_hsusb\", },",
          "94: };",
          "98: MODULE_ALIAS(\"platform:msm_hsusb\");",
          "99: MODULE_LICENSE(\"GPL v2\");",
          "",
          "[Removed Lines]",
          "80: static int ci13xxx_msm_remove(struct platform_device *pdev)",
          "85:  ci13xxx_remove_device(plat_ci);",
          "90: static struct platform_driver ci13xxx_msm_driver = {",
          "91:  .probe = ci13xxx_msm_probe,",
          "92:  .remove = ci13xxx_msm_remove,",
          "96: module_platform_driver(ci13xxx_msm_driver);",
          "",
          "[Added Lines]",
          "80: static int ci_hdrc_msm_remove(struct platform_device *pdev)",
          "85:  ci_hdrc_remove_device(plat_ci);",
          "90: static struct platform_driver ci_hdrc_msm_driver = {",
          "91:  .probe = ci_hdrc_msm_probe,",
          "92:  .remove = ci_hdrc_msm_remove,",
          "96: module_platform_driver(ci_hdrc_msm_driver);",
          "99: MODULE_ALIAS(\"platform:ci13xxx_msm\");",
          "",
          "---------------"
        ],
        "drivers/usb/chipidea/ci13xxx_pci.c||drivers/usb/chipidea/ci_hdrc_pci.c": [
          "File: drivers/usb/chipidea/ci13xxx_pci.c -> drivers/usb/chipidea/ci_hdrc_pci.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include <linux/usb/chipidea.h>",
          "27:  .name  = UDC_DRIVER_NAME,",
          "28:  .capoffset = DEF_CAPOFFSET,",
          "29: };",
          "32:  .name  = UDC_DRIVER_NAME,",
          "33:  .capoffset = 0,",
          "34: };",
          "37:  .name  = UDC_DRIVER_NAME,",
          "38:  .capoffset = 0,",
          "39:  .power_budget = 200,",
          "40: };",
          "",
          "[Removed Lines]",
          "21: #define UDC_DRIVER_NAME   \"ci13xxx_pci\"",
          "26: static struct ci13xxx_platform_data pci_platdata = {",
          "31: static struct ci13xxx_platform_data langwell_pci_platdata = {",
          "36: static struct ci13xxx_platform_data penwell_pci_platdata = {",
          "",
          "[Added Lines]",
          "21: #define UDC_DRIVER_NAME   \"ci_hdrc_pci\"",
          "26: static struct ci_hdrc_platform_data pci_platdata = {",
          "31: static struct ci_hdrc_platform_data langwell_pci_platdata = {",
          "36: static struct ci_hdrc_platform_data penwell_pci_platdata = {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:            const struct pci_device_id *id)",
          "53: {",
          "55:  struct platform_device *plat_ci;",
          "56:  struct resource res[3];",
          "57:  int retval = 0, nres = 2;",
          "",
          "[Removed Lines]",
          "51: static int ci13xxx_pci_probe(struct pci_dev *pdev,",
          "54:  struct ci13xxx_platform_data *platdata = (void *)id->driver_data;",
          "",
          "[Added Lines]",
          "51: static int ci_hdrc_pci_probe(struct pci_dev *pdev,",
          "54:  struct ci_hdrc_platform_data *platdata = (void *)id->driver_data;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "80:  res[1].start = pdev->irq;",
          "81:  res[1].flags = IORESOURCE_IRQ;",
          "84:  if (IS_ERR(plat_ci)) {",
          "86:   return PTR_ERR(plat_ci);",
          "87:  }",
          "",
          "[Removed Lines]",
          "83:  plat_ci = ci13xxx_add_device(&pdev->dev, res, nres, platdata);",
          "85:   dev_err(&pdev->dev, \"ci13xxx_add_device failed!\\n\");",
          "",
          "[Added Lines]",
          "83:  plat_ci = ci_hdrc_add_device(&pdev->dev, res, nres, platdata);",
          "85:   dev_err(&pdev->dev, \"ci_hdrc_add_device failed!\\n\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "92: }",
          "103: {",
          "104:  struct platform_device *plat_ci = pci_get_drvdata(pdev);",
          "107: }",
          "",
          "[Removed Lines]",
          "102: static void ci13xxx_pci_remove(struct pci_dev *pdev)",
          "106:  ci13xxx_remove_device(plat_ci);",
          "",
          "[Added Lines]",
          "102: static void ci_hdrc_pci_remove(struct pci_dev *pdev)",
          "106:  ci_hdrc_remove_device(plat_ci);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "116:  {",
          "117:   PCI_DEVICE(0x153F, 0x1004),",
          "118:   .driver_data = (kernel_ulong_t)&pci_platdata,",
          "",
          "[Removed Lines]",
          "115: static DEFINE_PCI_DEVICE_TABLE(ci13xxx_pci_id_table) = {",
          "",
          "[Added Lines]",
          "115: static DEFINE_PCI_DEVICE_TABLE(ci_hdrc_pci_id_table) = {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "131:  },",
          "132:  { 0, 0, 0, 0, 0, 0, 0 /* end: all zeroes */ }",
          "133: };",
          "137:  .name         = UDC_DRIVER_NAME,",
          "141: };",
          "145: MODULE_AUTHOR(\"MIPS - David Lopo <dlopo@chipidea.mips.com>\");",
          "146: MODULE_DESCRIPTION(\"MIPS CI13XXX USB Peripheral Controller\");",
          "147: MODULE_LICENSE(\"GPL\");",
          "148: MODULE_VERSION(\"June 2008\");",
          "",
          "[Removed Lines]",
          "134: MODULE_DEVICE_TABLE(pci, ci13xxx_pci_id_table);",
          "136: static struct pci_driver ci13xxx_pci_driver = {",
          "138:  .id_table     = ci13xxx_pci_id_table,",
          "139:  .probe        = ci13xxx_pci_probe,",
          "140:  .remove       = ci13xxx_pci_remove,",
          "143: module_pci_driver(ci13xxx_pci_driver);",
          "",
          "[Added Lines]",
          "134: MODULE_DEVICE_TABLE(pci, ci_hdrc_pci_id_table);",
          "136: static struct pci_driver ci_hdrc_pci_driver = {",
          "138:  .id_table     = ci_hdrc_pci_id_table,",
          "139:  .probe        = ci_hdrc_pci_probe,",
          "140:  .remove       = ci_hdrc_pci_remove,",
          "143: module_pci_driver(ci_hdrc_pci_driver);",
          "149: MODULE_ALIAS(\"platform:ci13xxx_pci\");",
          "",
          "---------------"
        ],
        "drivers/usb/chipidea/core.c||drivers/usb/chipidea/core.c": [
          "File: drivers/usb/chipidea/core.c -> drivers/usb/chipidea/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:  [OP_ENDPTCTRL]  = 0x0ECUL,",
          "118: };",
          "121: {",
          "122:  int i;",
          "",
          "[Removed Lines]",
          "120: static int hw_alloc_regmap(struct ci13xxx *ci, bool is_lpm)",
          "",
          "[Added Lines]",
          "120: static int hw_alloc_regmap(struct ci_hdrc *ci, bool is_lpm)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153: {",
          "154:  const u8 TEST_MODE_MAX = 7;",
          "",
          "[Removed Lines]",
          "152: int hw_port_test_set(struct ci13xxx *ci, u8 mode)",
          "",
          "[Added Lines]",
          "152: int hw_port_test_set(struct ci_hdrc *ci, u8 mode)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "169: {",
          "170:  return hw_read(ci, OP_PORTSC, PORTSC_PTC) >> __ffs(PORTSC_PTC);",
          "171: }",
          "174: {",
          "175:  u32 reg;",
          "",
          "[Removed Lines]",
          "168: u8 hw_port_test_get(struct ci13xxx *ci)",
          "173: static int hw_device_init(struct ci13xxx *ci, void __iomem *base)",
          "",
          "[Added Lines]",
          "168: u8 hw_port_test_get(struct ci_hdrc *ci)",
          "173: static int hw_device_init(struct ci_hdrc *ci, void __iomem *base)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "209:  return 0;",
          "210: }",
          "213: {",
          "214:  u32 portsc, lpm, sts;",
          "",
          "[Removed Lines]",
          "212: static void hw_phymode_configure(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "212: static void hw_phymode_configure(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "258: {",
          "260:  hw_write(ci, OP_ENDPTFLUSH, ~0, ~0);",
          "",
          "[Removed Lines]",
          "257: int hw_device_reset(struct ci13xxx *ci, u32 mode)",
          "",
          "[Added Lines]",
          "257: int hw_device_reset(struct ci_hdrc *ci, u32 mode)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "269:  if (ci->platdata->notify_event)",
          "270:   ci->platdata->notify_event(ci,",
          "274:   hw_write(ci, OP_USBMODE, USBMODE_CI_SDIS, USBMODE_CI_SDIS);",
          "",
          "[Removed Lines]",
          "271:    CI13XXX_CONTROLLER_RESET_EVENT);",
          "273:  if (ci->platdata->flags & CI13XXX_DISABLE_STREAMING)",
          "",
          "[Added Lines]",
          "271:    CI_HDRC_CONTROLLER_RESET_EVENT);",
          "273:  if (ci->platdata->flags & CI_HDRC_DISABLE_STREAMING)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "296: {",
          "297:  u32 sts = hw_read(ci, OP_OTGSC, ~0);",
          "298:  enum ci_role role = sts & OTGSC_ID",
          "",
          "[Removed Lines]",
          "295: static enum ci_role ci_otg_role(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "295: static enum ci_role ci_otg_role(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "309: static void ci_role_work(struct work_struct *work)",
          "310: {",
          "312:  enum ci_role role = ci_otg_role(ci);",
          "314:  if (role != ci->role) {",
          "",
          "[Removed Lines]",
          "311:  struct ci13xxx *ci = container_of(work, struct ci13xxx, work);",
          "",
          "[Added Lines]",
          "311:  struct ci_hdrc *ci = container_of(work, struct ci_hdrc, work);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "325: static irqreturn_t ci_irq(int irq, void *data)",
          "326: {",
          "328:  irqreturn_t ret = IRQ_NONE;",
          "329:  u32 otgsc = 0;",
          "",
          "[Removed Lines]",
          "327:  struct ci13xxx *ci = data;",
          "",
          "[Added Lines]",
          "327:  struct ci_hdrc *ci = data;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "347: static DEFINE_IDA(ci_ida);",
          "350:    struct resource *res, int nres,",
          "352: {",
          "353:  struct platform_device *pdev;",
          "354:  int id, ret;",
          "",
          "[Removed Lines]",
          "349: struct platform_device *ci13xxx_add_device(struct device *dev,",
          "351:    struct ci13xxx_platform_data *platdata)",
          "",
          "[Added Lines]",
          "349: struct platform_device *ci_hdrc_add_device(struct device *dev,",
          "351:    struct ci_hdrc_platform_data *platdata)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "388:  ida_simple_remove(&ci_ida, id);",
          "389:  return ERR_PTR(ret);",
          "390: }",
          "394: {",
          "395:  int id = pdev->id;",
          "396:  platform_device_unregister(pdev);",
          "397:  ida_simple_remove(&ci_ida, id);",
          "398: }",
          "401: static int ci_hdrc_probe(struct platform_device *pdev)",
          "402: {",
          "403:  struct device *dev = &pdev->dev;",
          "405:  struct resource *res;",
          "406:  void __iomem *base;",
          "407:  int  ret;",
          "",
          "[Removed Lines]",
          "391: EXPORT_SYMBOL_GPL(ci13xxx_add_device);",
          "393: void ci13xxx_remove_device(struct platform_device *pdev)",
          "399: EXPORT_SYMBOL_GPL(ci13xxx_remove_device);",
          "404:  struct ci13xxx *ci;",
          "",
          "[Added Lines]",
          "391: EXPORT_SYMBOL_GPL(ci_hdrc_add_device);",
          "393: void ci_hdrc_remove_device(struct platform_device *pdev)",
          "399: EXPORT_SYMBOL_GPL(ci_hdrc_remove_device);",
          "404:  struct ci_hdrc *ci;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "527: static int ci_hdrc_remove(struct platform_device *pdev)",
          "528: {",
          "531:  dbg_remove_files(ci);",
          "532:  flush_workqueue(ci->wq);",
          "",
          "[Removed Lines]",
          "529:  struct ci13xxx *ci = platform_get_drvdata(pdev);",
          "",
          "[Added Lines]",
          "529:  struct ci_hdrc *ci = platform_get_drvdata(pdev);",
          "",
          "---------------"
        ],
        "drivers/usb/chipidea/debug.c||drivers/usb/chipidea/debug.c": [
          "File: drivers/usb/chipidea/debug.c -> drivers/usb/chipidea/debug.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: static int ci_device_show(struct seq_file *s, void *data)",
          "20: {",
          "22:  struct usb_gadget *gadget = &ci->gadget;",
          "24:  seq_printf(s, \"speed             = %d\\n\", gadget->speed);",
          "",
          "[Removed Lines]",
          "21:  struct ci13xxx *ci = s->private;",
          "",
          "[Added Lines]",
          "21:  struct ci_hdrc *ci = s->private;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59: static int ci_port_test_show(struct seq_file *s, void *data)",
          "60: {",
          "62:  unsigned long flags;",
          "63:  unsigned mode;",
          "",
          "[Removed Lines]",
          "61:  struct ci13xxx *ci = s->private;",
          "",
          "[Added Lines]",
          "61:  struct ci_hdrc *ci = s->private;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "78:       size_t count, loff_t *ppos)",
          "79: {",
          "80:  struct seq_file *s = file->private_data;",
          "82:  unsigned long flags;",
          "83:  unsigned mode;",
          "84:  char buf[32];",
          "",
          "[Removed Lines]",
          "81:  struct ci13xxx *ci = s->private;",
          "",
          "[Added Lines]",
          "81:  struct ci_hdrc *ci = s->private;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "116: static int ci_qheads_show(struct seq_file *s, void *data)",
          "117: {",
          "119:  unsigned long flags;",
          "120:  unsigned i, j;",
          "",
          "[Removed Lines]",
          "118:  struct ci13xxx *ci = s->private;",
          "",
          "[Added Lines]",
          "118:  struct ci_hdrc *ci = s->private;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "127:  spin_lock_irqsave(&ci->lock, flags);",
          "128:  for (i = 0; i < ci->hw_ep_max/2; i++) {",
          "132:   seq_printf(s, \"EP=%02i: RX=%08X TX=%08X\\n\",",
          "133:       i, (u32)hweprx->qh.dma, (u32)hweptx->qh.dma);",
          "135:    seq_printf(s, \" %04X:    %08X    %08X\\n\", j,",
          "",
          "[Removed Lines]",
          "129:   struct ci13xxx_ep *hweprx = &ci->ci13xxx_ep[i];",
          "130:   struct ci13xxx_ep *hweptx =",
          "131:    &ci->ci13xxx_ep[i + ci->hw_ep_max/2];",
          "134:   for (j = 0; j < (sizeof(struct ci13xxx_qh)/sizeof(u32)); j++)",
          "",
          "[Added Lines]",
          "129:   struct ci_hw_ep *hweprx = &ci->ci_hw_ep[i];",
          "130:   struct ci_hw_ep *hweptx =",
          "131:    &ci->ci_hw_ep[i + ci->hw_ep_max/2];",
          "134:   for (j = 0; j < (sizeof(struct ci_hw_qh)/sizeof(u32)); j++)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "159: static int ci_requests_show(struct seq_file *s, void *data)",
          "160: {",
          "162:  unsigned long flags;",
          "163:  struct list_head   *ptr = NULL;",
          "165:  struct td_node *node, *tmpnode;",
          "168:  if (ci->role != CI_ROLE_GADGET) {",
          "169:   seq_printf(s, \"not in gadget mode\\n\");",
          "",
          "[Removed Lines]",
          "161:  struct ci13xxx *ci = s->private;",
          "164:  struct ci13xxx_req *req = NULL;",
          "166:  unsigned i, j, qsize = sizeof(struct ci13xxx_td)/sizeof(u32);",
          "",
          "[Added Lines]",
          "161:  struct ci_hdrc *ci = s->private;",
          "164:  struct ci_hw_req *req = NULL;",
          "166:  unsigned i, j, qsize = sizeof(struct ci_hw_td)/sizeof(u32);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "173:  spin_lock_irqsave(&ci->lock, flags);",
          "174:  for (i = 0; i < ci->hw_ep_max; i++)",
          "178:    list_for_each_entry_safe(node, tmpnode, &req->tds, td) {",
          "179:     seq_printf(s, \"EP=%02i: TD=%08X %s\\n\",",
          "",
          "[Removed Lines]",
          "175:   list_for_each(ptr, &ci->ci13xxx_ep[i].qh.queue) {",
          "176:    req = list_entry(ptr, struct ci13xxx_req, queue);",
          "",
          "[Added Lines]",
          "175:   list_for_each(ptr, &ci->ci_hw_ep[i].qh.queue) {",
          "176:    req = list_entry(ptr, struct ci_hw_req, queue);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "207: static int ci_role_show(struct seq_file *s, void *data)",
          "208: {",
          "211:  seq_printf(s, \"%s\\n\", ci_role(ci)->name);",
          "",
          "[Removed Lines]",
          "209:  struct ci13xxx *ci = s->private;",
          "",
          "[Added Lines]",
          "209:  struct ci_hdrc *ci = s->private;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "217:         size_t count, loff_t *ppos)",
          "218: {",
          "219:  struct seq_file *s = file->private_data;",
          "221:  enum ci_role role;",
          "222:  char buf[8];",
          "223:  int ret;",
          "",
          "[Removed Lines]",
          "220:  struct ci13xxx *ci = s->private;",
          "",
          "[Added Lines]",
          "220:  struct ci_hdrc *ci = s->private;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "263: {",
          "264:  struct dentry *dent;",
          "",
          "[Removed Lines]",
          "262: int dbg_create_files(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "262: int dbg_create_files(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "304: {",
          "305:  debugfs_remove_recursive(ci->debugfs);",
          "306: }",
          "",
          "[Removed Lines]",
          "303: void dbg_remove_files(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "303: void dbg_remove_files(struct ci_hdrc *ci)",
          "",
          "---------------"
        ],
        "drivers/usb/chipidea/debug.h||drivers/usb/chipidea/debug.h": [
          "File: drivers/usb/chipidea/debug.h -> drivers/usb/chipidea/debug.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: #define __DRIVERS_USB_CHIPIDEA_DEBUG_H",
          "16: #ifdef CONFIG_USB_CHIPIDEA_DEBUG",
          "19: #else",
          "21: {",
          "22:  return 0;",
          "23: }",
          "26: {",
          "27: }",
          "28: #endif",
          "",
          "[Removed Lines]",
          "17: int dbg_create_files(struct ci13xxx *ci);",
          "18: void dbg_remove_files(struct ci13xxx *ci);",
          "20: static inline int dbg_create_files(struct ci13xxx *ci)",
          "25: static inline void dbg_remove_files(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "17: int dbg_create_files(struct ci_hdrc *ci);",
          "18: void dbg_remove_files(struct ci_hdrc *ci);",
          "20: static inline int dbg_create_files(struct ci_hdrc *ci)",
          "25: static inline void dbg_remove_files(struct ci_hdrc *ci)",
          "",
          "---------------"
        ],
        "drivers/usb/chipidea/host.c||drivers/usb/chipidea/host.c": [
          "File: drivers/usb/chipidea/host.c -> drivers/usb/chipidea/host.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: static struct hc_driver __read_mostly ci_ehci_hc_driver;",
          "37: {",
          "38:  return usb_hcd_irq(ci->irq, ci->hcd);",
          "39: }",
          "42: {",
          "43:  struct usb_hcd *hcd;",
          "44:  struct ehci_hcd *ehci;",
          "",
          "[Removed Lines]",
          "36: static irqreturn_t host_irq(struct ci13xxx *ci)",
          "41: static int host_start(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "36: static irqreturn_t host_irq(struct ci_hdrc *ci)",
          "41: static int host_start(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:  else",
          "71:   ci->hcd = hcd;",
          "74:   hw_write(ci, OP_USBMODE, USBMODE_CI_SDIS, USBMODE_CI_SDIS);",
          "76:  return ret;",
          "77: }",
          "80: {",
          "81:  struct usb_hcd *hcd = ci->hcd;",
          "",
          "[Removed Lines]",
          "73:  if (ci->platdata->flags & CI13XXX_DISABLE_STREAMING)",
          "79: static void host_stop(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "73:  if (ci->platdata->flags & CI_HDRC_DISABLE_STREAMING)",
          "79: static void host_stop(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "84:  usb_put_hcd(hcd);",
          "85: }",
          "88: {",
          "89:  struct ci_role_driver *rdrv;",
          "",
          "[Removed Lines]",
          "87: int ci_hdrc_host_init(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "87: int ci_hdrc_host_init(struct ci_hdrc *ci)",
          "",
          "---------------"
        ],
        "drivers/usb/chipidea/host.h||drivers/usb/chipidea/host.h": [
          "File: drivers/usb/chipidea/host.h -> drivers/usb/chipidea/host.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: #ifdef CONFIG_USB_CHIPIDEA_HOST",
          "8: #else",
          "11: {",
          "12:  return -ENXIO;",
          "13: }",
          "",
          "[Removed Lines]",
          "6: int ci_hdrc_host_init(struct ci13xxx *ci);",
          "10: static inline int ci_hdrc_host_init(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "6: int ci_hdrc_host_init(struct ci_hdrc *ci);",
          "10: static inline int ci_hdrc_host_init(struct ci_hdrc *ci)",
          "",
          "---------------"
        ],
        "drivers/usb/chipidea/udc.c||drivers/usb/chipidea/udc.c": [
          "File: drivers/usb/chipidea/udc.c -> drivers/usb/chipidea/udc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:  return num + (dir ? 16 : 0);",
          "62: }",
          "65: {",
          "66:  int fill = 16 - ci->hw_ep_max / 2;",
          "",
          "[Removed Lines]",
          "64: static inline int ep_to_bit(struct ci13xxx *ci, int n)",
          "",
          "[Added Lines]",
          "64: static inline int ep_to_bit(struct ci_hdrc *ci, int n)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81: {",
          "82:  if (dma) {",
          "83:   hw_write(ci, OP_ENDPTLISTADDR, ~0, dma);",
          "",
          "[Removed Lines]",
          "80: static int hw_device_state(struct ci13xxx *ci, u32 dma)",
          "",
          "[Added Lines]",
          "80: static int hw_device_state(struct ci_hdrc *ci, u32 dma)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101: {",
          "102:  int n = hw_ep_bit(num, dir);",
          "",
          "[Removed Lines]",
          "100: static int hw_ep_flush(struct ci13xxx *ci, int num, int dir)",
          "",
          "[Added Lines]",
          "100: static int hw_ep_flush(struct ci_hdrc *ci, int num, int dir)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "122: {",
          "123:  hw_ep_flush(ci, num, dir);",
          "124:  hw_write(ci, OP_ENDPTCTRL + num,",
          "",
          "[Removed Lines]",
          "121: static int hw_ep_disable(struct ci13xxx *ci, int num, int dir)",
          "",
          "[Added Lines]",
          "121: static int hw_ep_disable(struct ci_hdrc *ci, int num, int dir)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "138: {",
          "139:  u32 mask, data;",
          "",
          "[Removed Lines]",
          "137: static int hw_ep_enable(struct ci13xxx *ci, int num, int dir, int type)",
          "",
          "[Added Lines]",
          "137: static int hw_ep_enable(struct ci_hdrc *ci, int num, int dir, int type)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "172: {",
          "173:  u32 mask = dir ? ENDPTCTRL_TXS : ENDPTCTRL_RXS;",
          "",
          "[Removed Lines]",
          "171: static int hw_ep_get_halt(struct ci13xxx *ci, int num, int dir)",
          "",
          "[Added Lines]",
          "171: static int hw_ep_get_halt(struct ci_hdrc *ci, int num, int dir)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "186: {",
          "187:  n = ep_to_bit(ci, n);",
          "188:  return hw_test_and_clear(ci, OP_ENDPTSETUPSTAT, BIT(n));",
          "",
          "[Removed Lines]",
          "185: static int hw_test_and_clear_setup_status(struct ci13xxx *ci, int n)",
          "",
          "[Added Lines]",
          "185: static int hw_test_and_clear_setup_status(struct ci_hdrc *ci, int n)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "200: {",
          "201:  int n = hw_ep_bit(num, dir);",
          "",
          "[Removed Lines]",
          "199: static int hw_ep_prime(struct ci13xxx *ci, int num, int dir, int is_ctrl)",
          "",
          "[Added Lines]",
          "199: static int hw_ep_prime(struct ci_hdrc *ci, int num, int dir, int is_ctrl)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "227: {",
          "228:  if (value != 0 && value != 1)",
          "229:   return -EINVAL;",
          "231:  do {",
          "233:   u32 mask_xs = dir ? ENDPTCTRL_TXS : ENDPTCTRL_RXS;",
          "234:   u32 mask_xr = dir ? ENDPTCTRL_TXR : ENDPTCTRL_RXR;",
          "",
          "[Removed Lines]",
          "226: static int hw_ep_set_halt(struct ci13xxx *ci, int num, int dir, int value)",
          "232:   enum ci13xxx_regs reg = OP_ENDPTCTRL + num;",
          "",
          "[Added Lines]",
          "226: static int hw_ep_set_halt(struct ci_hdrc *ci, int num, int dir, int value)",
          "232:   enum ci_hw_regs reg = OP_ENDPTCTRL + num;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "250: {",
          "251:  return ci->hw_bank.lpm ? hw_read(ci, OP_DEVLC, DEVLC_PSPD) :",
          "252:   hw_read(ci, OP_PORTSC, PORTSC_HSP);",
          "",
          "[Removed Lines]",
          "249: static int hw_port_is_high_speed(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "249: static int hw_port_is_high_speed(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "261: {",
          "262:  return hw_read(ci, OP_USBINTR, ~0);",
          "263: }",
          "",
          "[Removed Lines]",
          "260: static u32 hw_read_intr_enable(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "260: static u32 hw_read_intr_enable(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "271: {",
          "272:  return hw_read(ci, OP_USBSTS, ~0);",
          "273: }",
          "",
          "[Removed Lines]",
          "270: static u32 hw_read_intr_status(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "270: static u32 hw_read_intr_status(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "283: {",
          "284:  n = ep_to_bit(ci, n);",
          "285:  return hw_test_and_clear(ci, OP_ENDPTCOMPLETE, BIT(n));",
          "",
          "[Removed Lines]",
          "282: static int hw_test_and_clear_complete(struct ci13xxx *ci, int n)",
          "",
          "[Added Lines]",
          "282: static int hw_test_and_clear_complete(struct ci_hdrc *ci, int n)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "295: {",
          "296:  u32 reg = hw_read_intr_status(ci) & hw_read_intr_enable(ci);",
          "",
          "[Removed Lines]",
          "294: static u32 hw_test_and_clear_intr_active(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "294: static u32 hw_test_and_clear_intr_active(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "309: {",
          "310:  return hw_test_and_write(ci, OP_USBCMD, USBCMD_SUTW, 0);",
          "311: }",
          "",
          "[Removed Lines]",
          "308: static int hw_test_and_clear_setup_guard(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "308: static int hw_test_and_clear_setup_guard(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "320: {",
          "321:  return hw_test_and_write(ci, OP_USBCMD, USBCMD_SUTW, USBCMD_SUTW);",
          "322: }",
          "",
          "[Removed Lines]",
          "319: static int hw_test_and_set_setup_guard(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "319: static int hw_test_and_set_setup_guard(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "332: {",
          "333:  hw_write(ci, OP_DEVICEADDR, DEVICEADDR_USBADR,",
          "334:    value << __ffs(DEVICEADDR_USBADR));",
          "",
          "[Removed Lines]",
          "331: static void hw_usb_set_address(struct ci13xxx *ci, u8 value)",
          "",
          "[Added Lines]",
          "331: static void hw_usb_set_address(struct ci_hdrc *ci, u8 value)",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "344: {",
          "345:  hw_usb_set_address(ci, 0);",
          "",
          "[Removed Lines]",
          "343: static int hw_usb_reset(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "343: static int hw_usb_reset(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "373:      unsigned length)",
          "374: {",
          "375:  int i;",
          "",
          "[Removed Lines]",
          "372: static int add_td_to_list(struct ci13xxx_ep *hwep, struct ci13xxx_req *hwreq,",
          "",
          "[Added Lines]",
          "372: static int add_td_to_list(struct ci_hw_ep *hwep, struct ci_hw_req *hwreq,",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "387:   return -ENOMEM;",
          "388:  }",
          "391:  node->ptr->token = cpu_to_le32(length << __ffs(TD_TOTAL_BYTES));",
          "392:  node->ptr->token &= cpu_to_le32(TD_TOTAL_BYTES);",
          "393:  node->ptr->token |= cpu_to_le32(TD_STATUS_ACTIVE);",
          "",
          "[Removed Lines]",
          "390:  memset(node->ptr, 0, sizeof(struct ci13xxx_td));",
          "",
          "[Added Lines]",
          "390:  memset(node->ptr, 0, sizeof(struct ci_hw_td));",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "396:  if (length) {",
          "397:   node->ptr->page[0] = cpu_to_le32(temp);",
          "398:   for (i = 1; i < TD_PAGE_COUNT; i++) {",
          "400:    page &= ~TD_RESERVED_MASK;",
          "401:    node->ptr->page[i] = cpu_to_le32(page);",
          "402:   }",
          "",
          "[Removed Lines]",
          "399:    u32 page = temp + i * CI13XXX_PAGE_SIZE;",
          "",
          "[Added Lines]",
          "399:    u32 page = temp + i * CI_HDRC_PAGE_SIZE;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "425: {",
          "426:  return ((ep->dir == TX) ? USB_ENDPOINT_DIR_MASK : 0) | ep->num;",
          "427: }",
          "",
          "[Removed Lines]",
          "424: static inline u8 _usb_addr(struct ci13xxx_ep *ep)",
          "",
          "[Added Lines]",
          "424: static inline u8 _usb_addr(struct ci_hw_ep *ep)",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "437: {",
          "439:  int ret = 0;",
          "440:  unsigned rest = hwreq->req.length;",
          "441:  int pages = TD_PAGE_COUNT;",
          "",
          "[Removed Lines]",
          "436: static int _hardware_enqueue(struct ci13xxx_ep *hwep, struct ci13xxx_req *hwreq)",
          "438:  struct ci13xxx *ci = hwep->ci;",
          "",
          "[Added Lines]",
          "436: static int _hardware_enqueue(struct ci_hw_ep *hwep, struct ci_hw_req *hwreq)",
          "438:  struct ci_hdrc *ci = hwep->ci;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "464:  while (rest > 0) {",
          "465:   unsigned count = min(hwreq->req.length - hwreq->req.actual,",
          "467:   add_td_to_list(hwep, hwreq, count);",
          "468:   rest -= count;",
          "469:  }",
          "",
          "[Removed Lines]",
          "466:      (unsigned)(pages * CI13XXX_PAGE_SIZE));",
          "",
          "[Added Lines]",
          "466:      (unsigned)(pages * CI_HDRC_PAGE_SIZE));",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "485:  hwreq->req.actual = 0;",
          "486:  if (!list_empty(&hwep->qh.queue)) {",
          "488:   int n = hw_ep_bit(hwep->num, hwep->dir);",
          "489:   int tmp_stat;",
          "490:   struct td_node *prevlastnode;",
          "491:   u32 next = firstnode->dma & TD_ADDR_MASK;",
          "493:   hwreqprev = list_entry(hwep->qh.queue.prev,",
          "495:   prevlastnode = list_entry(hwreqprev->tds.prev,",
          "496:     struct td_node, td);",
          "",
          "[Removed Lines]",
          "487:   struct ci13xxx_req *hwreqprev;",
          "494:     struct ci13xxx_req, queue);",
          "",
          "[Added Lines]",
          "487:   struct ci_hw_req *hwreqprev;",
          "494:     struct ci_hw_req, queue);",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "537: {",
          "538:  struct td_node *pending = hwep->pending_td;",
          "",
          "[Removed Lines]",
          "536: static void free_pending_td(struct ci13xxx_ep *hwep)",
          "",
          "[Added Lines]",
          "536: static void free_pending_td(struct ci_hw_ep *hwep)",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "553: {",
          "554:  u32 tmptoken;",
          "555:  struct td_node *node, *tmpnode;",
          "",
          "[Removed Lines]",
          "552: static int _hardware_dequeue(struct ci13xxx_ep *hwep, struct ci13xxx_req *hwreq)",
          "",
          "[Added Lines]",
          "552: static int _hardware_dequeue(struct ci_hw_ep *hwep, struct ci_hw_req *hwreq)",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "623: __releases(hwep->lock)",
          "624: __acquires(hwep->lock)",
          "625: {",
          "",
          "[Removed Lines]",
          "622: static int _ep_nuke(struct ci13xxx_ep *hwep)",
          "",
          "[Added Lines]",
          "622: static int _ep_nuke(struct ci_hw_ep *hwep)",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "632:  while (!list_empty(&hwep->qh.queue)) {",
          "639:   list_for_each_entry_safe(node, tmpnode, &hwreq->tds, td) {",
          "640:    dma_pool_free(hwep->td_pool, node->ptr, node->dma);",
          "",
          "[Removed Lines]",
          "635:   struct ci13xxx_req *hwreq = list_entry(hwep->qh.queue.next,",
          "636:              struct ci13xxx_req,",
          "637:              queue);",
          "",
          "[Added Lines]",
          "635:   struct ci_hw_req *hwreq = list_entry(hwep->qh.queue.next,",
          "636:            struct ci_hw_req, queue);",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "668: static int _gadget_stop_activity(struct usb_gadget *gadget)",
          "669: {",
          "670:  struct usb_ep *ep;",
          "672:  unsigned long flags;",
          "674:  spin_lock_irqsave(&ci->lock, flags);",
          "",
          "[Removed Lines]",
          "671:  struct ci13xxx    *ci = container_of(gadget, struct ci13xxx, gadget);",
          "",
          "[Added Lines]",
          "670:  struct ci_hdrc    *ci = container_of(gadget, struct ci_hdrc, gadget);",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "713: __releases(ci->lock)",
          "714: __acquires(ci->lock)",
          "715: {",
          "",
          "[Removed Lines]",
          "712: static void isr_reset_handler(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "711: static void isr_reset_handler(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "759: static int _ep_queue(struct usb_ep *ep, struct usb_request *req,",
          "760:       gfp_t __maybe_unused gfp_flags)",
          "761: {",
          "765:  int retval = 0;",
          "767:  if (ep == NULL || req == NULL || hwep->ep.desc == NULL)",
          "",
          "[Removed Lines]",
          "762:  struct ci13xxx_ep  *hwep  = container_of(ep,  struct ci13xxx_ep, ep);",
          "763:  struct ci13xxx_req *hwreq = container_of(req, struct ci13xxx_req, req);",
          "764:  struct ci13xxx *ci = hwep->ci;",
          "",
          "[Added Lines]",
          "761:  struct ci_hw_ep  *hwep  = container_of(ep,  struct ci_hw_ep, ep);",
          "762:  struct ci_hw_req *hwreq = container_of(req, struct ci_hw_req, req);",
          "763:  struct ci_hdrc *ci = hwep->ci;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "816:        struct usb_ctrlrequest *setup)",
          "817: __releases(hwep->lock)",
          "818: __acquires(hwep->lock)",
          "819: {",
          "821:  struct usb_request *req = NULL;",
          "822:  gfp_t gfp_flags = GFP_ATOMIC;",
          "823:  int dir, num, retval;",
          "",
          "[Removed Lines]",
          "815: static int isr_get_status_response(struct ci13xxx *ci,",
          "820:  struct ci13xxx_ep *hwep = ci->ep0in;",
          "",
          "[Added Lines]",
          "814: static int isr_get_status_response(struct ci_hdrc *ci,",
          "819:  struct ci_hw_ep *hwep = ci->ep0in;",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "878: static void",
          "879: isr_setup_status_complete(struct usb_ep *ep, struct usb_request *req)",
          "880: {",
          "882:  unsigned long flags;",
          "884:  if (ci->setaddr) {",
          "",
          "[Removed Lines]",
          "881:  struct ci13xxx *ci = req->context;",
          "",
          "[Added Lines]",
          "880:  struct ci_hdrc *ci = req->context;",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "902: {",
          "903:  int retval;",
          "906:  hwep = (ci->ep0_dir == TX) ? ci->ep0out : ci->ep0in;",
          "907:  ci->status->context = ci;",
          "",
          "[Removed Lines]",
          "901: static int isr_setup_status_phase(struct ci13xxx *ci)",
          "904:  struct ci13xxx_ep *hwep;",
          "",
          "[Added Lines]",
          "900: static int isr_setup_status_phase(struct ci_hdrc *ci)",
          "903:  struct ci_hw_ep *hwep;",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "923: __releases(hwep->lock)",
          "924: __acquires(hwep->lock)",
          "925: {",
          "928:  int retval = 0;",
          "930:  list_for_each_entry_safe(hwreq, hwreqtemp, &hwep->qh.queue,",
          "",
          "[Removed Lines]",
          "922: static int isr_tr_complete_low(struct ci13xxx_ep *hwep)",
          "926:  struct ci13xxx_req *hwreq, *hwreqtemp;",
          "927:  struct ci13xxx_ep *hweptemp = hwep;",
          "",
          "[Added Lines]",
          "921: static int isr_tr_complete_low(struct ci_hw_ep *hwep)",
          "925:  struct ci_hw_req *hwreq, *hwreqtemp;",
          "926:  struct ci_hw_ep *hweptemp = hwep;",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "959: __releases(ci->lock)",
          "960: __acquires(ci->lock)",
          "961: {",
          "",
          "[Removed Lines]",
          "958: static void isr_tr_complete_handler(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "957: static void isr_tr_complete_handler(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "963:  u8 tmode = 0;",
          "965:  for (i = 0; i < ci->hw_ep_max; i++) {",
          "967:   int type, num, dir, err = -EINVAL;",
          "968:   struct usb_ctrlrequest req;",
          "",
          "[Removed Lines]",
          "966:   struct ci13xxx_ep *hwep  = &ci->ci13xxx_ep[i];",
          "",
          "[Added Lines]",
          "965:   struct ci_hw_ep *hwep  = &ci->ci_hw_ep[i];",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1023:     num &= USB_ENDPOINT_NUMBER_MASK;",
          "1025:      num += ci->hw_ep_max/2;",
          "1027:      spin_unlock(&ci->lock);",
          "1028:      err = usb_ep_clear_halt(",
          "1030:      spin_lock(&ci->lock);",
          "1031:      if (err)",
          "1032:       break;",
          "",
          "[Removed Lines]",
          "1026:     if (!ci->ci13xxx_ep[num].wedge) {",
          "1029:       &ci->ci13xxx_ep[num].ep);",
          "",
          "[Added Lines]",
          "1025:     if (!ci->ci_hw_ep[num].wedge) {",
          "1028:       &ci->ci_hw_ep[num].ep);",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1076:      num += ci->hw_ep_max/2;",
          "1078:     spin_unlock(&ci->lock);",
          "1080:     spin_lock(&ci->lock);",
          "1081:     if (!err)",
          "1082:      isr_setup_status_phase(ci);",
          "",
          "[Removed Lines]",
          "1079:     err = usb_ep_set_halt(&ci->ci13xxx_ep[num].ep);",
          "",
          "[Added Lines]",
          "1078:     err = usb_ep_set_halt(&ci->ci_hw_ep[num].ep);",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1141: static int ep_enable(struct usb_ep *ep,",
          "1142:        const struct usb_endpoint_descriptor *desc)",
          "1143: {",
          "1145:  int retval = 0;",
          "1146:  unsigned long flags;",
          "1147:  u32 cap = 0;",
          "",
          "[Removed Lines]",
          "1144:  struct ci13xxx_ep *hwep = container_of(ep, struct ci13xxx_ep, ep);",
          "",
          "[Added Lines]",
          "1143:  struct ci_hw_ep *hwep = container_of(ep, struct ci_hw_ep, ep);",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1195: static int ep_disable(struct usb_ep *ep)",
          "1196: {",
          "1198:  int direction, retval = 0;",
          "1199:  unsigned long flags;",
          "",
          "[Removed Lines]",
          "1197:  struct ci13xxx_ep *hwep = container_of(ep, struct ci13xxx_ep, ep);",
          "",
          "[Added Lines]",
          "1196:  struct ci_hw_ep *hwep = container_of(ep, struct ci_hw_ep, ep);",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1231: static struct usb_request *ep_alloc_request(struct usb_ep *ep, gfp_t gfp_flags)",
          "1232: {",
          "1235:  if (ep == NULL)",
          "1236:   return NULL;",
          "1239:  if (hwreq != NULL) {",
          "1240:   INIT_LIST_HEAD(&hwreq->queue);",
          "1241:   INIT_LIST_HEAD(&hwreq->tds);",
          "",
          "[Removed Lines]",
          "1233:  struct ci13xxx_req *hwreq = NULL;",
          "1238:  hwreq = kzalloc(sizeof(struct ci13xxx_req), gfp_flags);",
          "",
          "[Added Lines]",
          "1232:  struct ci_hw_req *hwreq = NULL;",
          "1237:  hwreq = kzalloc(sizeof(struct ci_hw_req), gfp_flags);",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1252: static void ep_free_request(struct usb_ep *ep, struct usb_request *req)",
          "1253: {",
          "1256:  struct td_node *node, *tmpnode;",
          "1257:  unsigned long flags;",
          "",
          "[Removed Lines]",
          "1254:  struct ci13xxx_ep  *hwep  = container_of(ep,  struct ci13xxx_ep, ep);",
          "1255:  struct ci13xxx_req *hwreq = container_of(req, struct ci13xxx_req, req);",
          "",
          "[Added Lines]",
          "1253:  struct ci_hw_ep  *hwep  = container_of(ep,  struct ci_hw_ep, ep);",
          "1254:  struct ci_hw_req *hwreq = container_of(req, struct ci_hw_req, req);",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1285: static int ep_queue(struct usb_ep *ep, struct usb_request *req,",
          "1286:       gfp_t __maybe_unused gfp_flags)",
          "1287: {",
          "1289:  int retval = 0;",
          "1290:  unsigned long flags;",
          "",
          "[Removed Lines]",
          "1288:  struct ci13xxx_ep  *hwep  = container_of(ep,  struct ci13xxx_ep, ep);",
          "",
          "[Added Lines]",
          "1287:  struct ci_hw_ep  *hwep  = container_of(ep,  struct ci_hw_ep, ep);",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1306: static int ep_dequeue(struct usb_ep *ep, struct usb_request *req)",
          "1307: {",
          "1310:  unsigned long flags;",
          "1312:  if (ep == NULL || req == NULL || hwreq->req.status != -EALREADY ||",
          "",
          "[Removed Lines]",
          "1308:  struct ci13xxx_ep  *hwep  = container_of(ep,  struct ci13xxx_ep, ep);",
          "1309:  struct ci13xxx_req *hwreq = container_of(req, struct ci13xxx_req, req);",
          "",
          "[Added Lines]",
          "1307:  struct ci_hw_ep  *hwep  = container_of(ep,  struct ci_hw_ep, ep);",
          "1308:  struct ci_hw_req *hwreq = container_of(req, struct ci_hw_req, req);",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "1343: static int ep_set_halt(struct usb_ep *ep, int value)",
          "1344: {",
          "1346:  int direction, retval = 0;",
          "1347:  unsigned long flags;",
          "",
          "[Removed Lines]",
          "1345:  struct ci13xxx_ep *hwep = container_of(ep, struct ci13xxx_ep, ep);",
          "",
          "[Added Lines]",
          "1344:  struct ci_hw_ep *hwep = container_of(ep, struct ci_hw_ep, ep);",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "1387: static int ep_set_wedge(struct usb_ep *ep)",
          "1388: {",
          "1390:  unsigned long flags;",
          "1392:  if (ep == NULL || hwep->ep.desc == NULL)",
          "",
          "[Removed Lines]",
          "1389:  struct ci13xxx_ep *hwep = container_of(ep, struct ci13xxx_ep, ep);",
          "",
          "[Added Lines]",
          "1388:  struct ci_hw_ep *hwep = container_of(ep, struct ci_hw_ep, ep);",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "1407: static void ep_fifo_flush(struct usb_ep *ep)",
          "1408: {",
          "1410:  unsigned long flags;",
          "1412:  if (ep == NULL) {",
          "",
          "[Removed Lines]",
          "1409:  struct ci13xxx_ep *hwep = container_of(ep, struct ci13xxx_ep, ep);",
          "",
          "[Added Lines]",
          "1408:  struct ci_hw_ep *hwep = container_of(ep, struct ci_hw_ep, ep);",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "1444: {",
          "1446:  unsigned long flags;",
          "1447:  int gadget_ready = 0;",
          "1450:   return -EOPNOTSUPP;",
          "1452:  spin_lock_irqsave(&ci->lock, flags);",
          "",
          "[Removed Lines]",
          "1443: static int ci13xxx_vbus_session(struct usb_gadget *_gadget, int is_active)",
          "1445:  struct ci13xxx *ci = container_of(_gadget, struct ci13xxx, gadget);",
          "1449:  if (!(ci->platdata->flags & CI13XXX_PULLUP_ON_VBUS))",
          "",
          "[Added Lines]",
          "1442: static int ci_udc_vbus_session(struct usb_gadget *_gadget, int is_active)",
          "1444:  struct ci_hdrc *ci = container_of(_gadget, struct ci_hdrc, gadget);",
          "1448:  if (!(ci->platdata->flags & CI_HDRC_PULLUP_ON_VBUS))",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "1464:    hw_device_state(ci, 0);",
          "1465:    if (ci->platdata->notify_event)",
          "1466:     ci->platdata->notify_event(ci,",
          "1468:    _gadget_stop_activity(&ci->gadget);",
          "1469:    pm_runtime_put_sync(&_gadget->dev);",
          "1470:   }",
          "",
          "[Removed Lines]",
          "1467:     CI13XXX_CONTROLLER_STOPPED_EVENT);",
          "",
          "[Added Lines]",
          "1466:     CI_HDRC_CONTROLLER_STOPPED_EVENT);",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "1473:  return 0;",
          "1474: }",
          "1477: {",
          "1479:  unsigned long flags;",
          "1480:  int ret = 0;",
          "",
          "[Removed Lines]",
          "1476: static int ci13xxx_wakeup(struct usb_gadget *_gadget)",
          "1478:  struct ci13xxx *ci = container_of(_gadget, struct ci13xxx, gadget);",
          "",
          "[Added Lines]",
          "1475: static int ci_udc_wakeup(struct usb_gadget *_gadget)",
          "1477:  struct ci_hdrc *ci = container_of(_gadget, struct ci_hdrc, gadget);",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "1494:  return ret;",
          "1495: }",
          "1498: {",
          "1501:  if (ci->transceiver)",
          "1502:   return usb_phy_set_power(ci->transceiver, ma);",
          "",
          "[Removed Lines]",
          "1497: static int ci13xxx_vbus_draw(struct usb_gadget *_gadget, unsigned ma)",
          "1499:  struct ci13xxx *ci = container_of(_gadget, struct ci13xxx, gadget);",
          "",
          "[Added Lines]",
          "1496: static int ci_udc_vbus_draw(struct usb_gadget *_gadget, unsigned ma)",
          "1498:  struct ci_hdrc *ci = container_of(_gadget, struct ci_hdrc, gadget);",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "1510: {",
          "1513:  if (is_on)",
          "1514:   hw_write(ci, OP_USBCMD, USBCMD_RS, USBCMD_RS);",
          "",
          "[Removed Lines]",
          "1509: static int ci13xxx_pullup(struct usb_gadget *_gadget, int is_on)",
          "1511:  struct ci13xxx *ci = container_of(_gadget, struct ci13xxx, gadget);",
          "",
          "[Added Lines]",
          "1508: static int ci_udc_pullup(struct usb_gadget *_gadget, int is_on)",
          "1510:  struct ci_hdrc *ci = container_of(_gadget, struct ci_hdrc, gadget);",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "1518:  return 0;",
          "1519: }",
          "1522:     struct usb_gadget_driver *driver);",
          "1524:    struct usb_gadget_driver *driver);",
          "",
          "[Removed Lines]",
          "1521: static int ci13xxx_start(struct usb_gadget *gadget,",
          "1523: static int ci13xxx_stop(struct usb_gadget *gadget,",
          "",
          "[Added Lines]",
          "1520: static int ci_udc_start(struct usb_gadget *gadget,",
          "1522: static int ci_udc_stop(struct usb_gadget *gadget,",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "1530: static const struct usb_gadget_ops usb_gadget_ops = {",
          "1537: };",
          "1540: {",
          "1541:  int retval = 0, i, j;",
          "1543:  for (i = 0; i < ci->hw_ep_max/2; i++)",
          "1544:   for (j = RX; j <= TX; j++) {",
          "1545:    int k = i + j * ci->hw_ep_max/2;",
          "1548:    scnprintf(hwep->name, sizeof(hwep->name), \"ep%i%s\", i,",
          "1549:      (j == TX)  ? \"in\" : \"out\");",
          "",
          "[Removed Lines]",
          "1531:  .vbus_session = ci13xxx_vbus_session,",
          "1532:  .wakeup  = ci13xxx_wakeup,",
          "1533:  .pullup  = ci13xxx_pullup,",
          "1534:  .vbus_draw = ci13xxx_vbus_draw,",
          "1535:  .udc_start = ci13xxx_start,",
          "1536:  .udc_stop = ci13xxx_stop,",
          "1539: static int init_eps(struct ci13xxx *ci)",
          "1546:    struct ci13xxx_ep *hwep = &ci->ci13xxx_ep[k];",
          "",
          "[Added Lines]",
          "1530:  .vbus_session = ci_udc_vbus_session,",
          "1531:  .wakeup  = ci_udc_wakeup,",
          "1532:  .pullup  = ci_udc_pullup,",
          "1533:  .vbus_draw = ci_udc_vbus_draw,",
          "1534:  .udc_start = ci_udc_start,",
          "1535:  .udc_stop = ci_udc_stop,",
          "1538: static int init_eps(struct ci_hdrc *ci)",
          "1545:    struct ci_hw_ep *hwep = &ci->ci_hw_ep[k];",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "1589:  return retval;",
          "1590: }",
          "1593: {",
          "1594:  int i;",
          "1596:  for (i = 0; i < ci->hw_ep_max; i++) {",
          "1599:   dma_pool_free(ci->qh_pool, hwep->qh.ptr, hwep->qh.dma);",
          "1600:  }",
          "1601: }",
          "1611:     struct usb_gadget_driver *driver)",
          "1612: {",
          "1614:  unsigned long flags;",
          "1615:  int retval = -ENOMEM;",
          "",
          "[Removed Lines]",
          "1592: static void destroy_eps(struct ci13xxx *ci)",
          "1597:   struct ci13xxx_ep *hwep = &ci->ci13xxx_ep[i];",
          "1610: static int ci13xxx_start(struct usb_gadget *gadget,",
          "1613:  struct ci13xxx *ci = container_of(gadget, struct ci13xxx, gadget);",
          "",
          "[Added Lines]",
          "1591: static void destroy_eps(struct ci_hdrc *ci)",
          "1596:   struct ci_hw_ep *hwep = &ci->ci_hw_ep[i];",
          "1609: static int ci_udc_start(struct usb_gadget *gadget,",
          "1612:  struct ci_hdrc *ci = container_of(gadget, struct ci_hdrc, gadget);",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "1632:  ci->driver = driver;",
          "1633:  pm_runtime_get_sync(&ci->gadget.dev);",
          "1635:   if (ci->vbus_active) {",
          "1637:     hw_device_reset(ci, USBMODE_CM_DC);",
          "1638:   } else {",
          "1639:    pm_runtime_put_sync(&ci->gadget.dev);",
          "",
          "[Removed Lines]",
          "1634:  if (ci->platdata->flags & CI13XXX_PULLUP_ON_VBUS) {",
          "1636:    if (ci->platdata->flags & CI13XXX_REGS_SHARED)",
          "",
          "[Added Lines]",
          "1633:  if (ci->platdata->flags & CI_HDRC_PULLUP_ON_VBUS) {",
          "1635:    if (ci->platdata->flags & CI_HDRC_REGS_SHARED)",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "1651: }",
          "1657:    struct usb_gadget_driver *driver)",
          "1658: {",
          "1660:  unsigned long flags;",
          "1662:  spin_lock_irqsave(&ci->lock, flags);",
          "1665:    ci->vbus_active) {",
          "1666:   hw_device_state(ci, 0);",
          "1667:   if (ci->platdata->notify_event)",
          "1668:    ci->platdata->notify_event(ci,",
          "1670:   ci->driver = NULL;",
          "1671:   spin_unlock_irqrestore(&ci->lock, flags);",
          "1672:   _gadget_stop_activity(&ci->gadget);",
          "",
          "[Removed Lines]",
          "1656: static int ci13xxx_stop(struct usb_gadget *gadget,",
          "1659:  struct ci13xxx *ci = container_of(gadget, struct ci13xxx, gadget);",
          "1664:  if (!(ci->platdata->flags & CI13XXX_PULLUP_ON_VBUS) ||",
          "1669:    CI13XXX_CONTROLLER_STOPPED_EVENT);",
          "",
          "[Added Lines]",
          "1655: static int ci_udc_stop(struct usb_gadget *gadget,",
          "1658:  struct ci_hdrc *ci = container_of(gadget, struct ci_hdrc, gadget);",
          "1663:  if (!(ci->platdata->flags & CI_HDRC_PULLUP_ON_VBUS) ||",
          "1668:    CI_HDRC_CONTROLLER_STOPPED_EVENT);",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "1692: {",
          "1693:  irqreturn_t retval;",
          "1694:  u32 intr;",
          "",
          "[Removed Lines]",
          "1691: static irqreturn_t udc_irq(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "1690: static irqreturn_t udc_irq(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "1699:  spin_lock(&ci->lock);",
          "1702:   if (hw_read(ci, OP_USBMODE, USBMODE_CM) !=",
          "1703:     USBMODE_CM_DC) {",
          "1704:    spin_unlock(&ci->lock);",
          "",
          "[Removed Lines]",
          "1701:  if (ci->platdata->flags & CI13XXX_REGS_SHARED) {",
          "",
          "[Added Lines]",
          "1700:  if (ci->platdata->flags & CI_HDRC_REGS_SHARED) {",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "1752: {",
          "1753:  struct device *dev = ci->dev;",
          "1754:  int retval = 0;",
          "",
          "[Removed Lines]",
          "1751: static int udc_start(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "1750: static int udc_start(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "1764:  INIT_LIST_HEAD(&ci->gadget.ep_list);",
          "1770:  if (ci->qh_pool == NULL)",
          "1771:   return -ENOMEM;",
          "1776:  if (ci->td_pool == NULL) {",
          "1777:   retval = -ENOMEM;",
          "1778:   goto free_qh_pool;",
          "",
          "[Removed Lines]",
          "1767:  ci->qh_pool = dma_pool_create(\"ci13xxx_qh\", dev,",
          "1768:            sizeof(struct ci13xxx_qh),",
          "1769:            64, CI13XXX_PAGE_SIZE);",
          "1773:  ci->td_pool = dma_pool_create(\"ci13xxx_td\", dev,",
          "1774:            sizeof(struct ci13xxx_td),",
          "1775:            64, CI13XXX_PAGE_SIZE);",
          "",
          "[Added Lines]",
          "1766:  ci->qh_pool = dma_pool_create(\"ci_hw_qh\", dev,",
          "1767:            sizeof(struct ci_hw_qh),",
          "1768:            64, CI_HDRC_PAGE_SIZE);",
          "1772:  ci->td_pool = dma_pool_create(\"ci_hw_td\", dev,",
          "1773:            sizeof(struct ci_hw_td),",
          "1774:            64, CI_HDRC_PAGE_SIZE);",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "1790:    ci->transceiver = NULL;",
          "1791:  }",
          "1794:   if (ci->transceiver == NULL) {",
          "1795:    retval = -ENODEV;",
          "1796:    goto destroy_eps;",
          "1797:   }",
          "1798:  }",
          "1801:   retval = hw_device_reset(ci, USBMODE_CM_DC);",
          "1802:   if (retval)",
          "1803:    goto put_transceiver;",
          "",
          "[Removed Lines]",
          "1793:  if (ci->platdata->flags & CI13XXX_REQUIRE_TRANSCEIVER) {",
          "1800:  if (!(ci->platdata->flags & CI13XXX_REGS_SHARED)) {",
          "",
          "[Added Lines]",
          "1792:  if (ci->platdata->flags & CI_HDRC_REQUIRE_TRANSCEIVER) {",
          "1799:  if (!(ci->platdata->flags & CI_HDRC_REGS_SHARED)) {",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "1848: {",
          "1849:  if (ci == NULL)",
          "1850:   return;",
          "",
          "[Removed Lines]",
          "1847: static void udc_stop(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "1846: static void udc_stop(struct ci_hdrc *ci)",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "1875: {",
          "1876:  struct ci_role_driver *rdrv;",
          "",
          "[Removed Lines]",
          "1874: int ci_hdrc_gadget_init(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "1873: int ci_hdrc_gadget_init(struct ci_hdrc *ci)",
          "",
          "---------------"
        ],
        "drivers/usb/chipidea/udc.h||drivers/usb/chipidea/udc.h": [
          "File: drivers/usb/chipidea/udc.h -> drivers/usb/chipidea/udc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  u32 next;",
          "26: #define TD_TERMINATE          BIT(0)",
          "",
          "[Removed Lines]",
          "23: struct ci13xxx_td {",
          "",
          "[Added Lines]",
          "23: struct ci_hw_td {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: } __attribute__ ((packed, aligned(4)));",
          "48:  u32 cap;",
          "49: #define QH_IOS                BIT(15)",
          "",
          "[Removed Lines]",
          "46: struct ci13xxx_qh {",
          "",
          "[Added Lines]",
          "46: struct ci_hw_qh {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "55:  u32 curr;",
          "59:  u32 RESERVED;",
          "60:  struct usb_ctrlrequest   setup;",
          "",
          "[Removed Lines]",
          "57:  struct ci13xxx_td        td;",
          "",
          "[Added Lines]",
          "57:  struct ci_hw_td  td;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "63: struct td_node {",
          "64:  struct list_head td;",
          "65:  dma_addr_t  dma;",
          "67: };",
          "",
          "[Removed Lines]",
          "66:  struct ci13xxx_td *ptr;",
          "",
          "[Added Lines]",
          "66:  struct ci_hw_td  *ptr;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "79:  struct usb_request req;",
          "80:  struct list_head queue;",
          "81:  struct list_head tds;",
          "",
          "[Removed Lines]",
          "78: struct ci13xxx_req {",
          "",
          "[Added Lines]",
          "78: struct ci_hw_req {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "84: #ifdef CONFIG_USB_CHIPIDEA_UDC",
          "88: #else",
          "91: {",
          "92:  return -ENXIO;",
          "93: }",
          "",
          "[Removed Lines]",
          "86: int ci_hdrc_gadget_init(struct ci13xxx *ci);",
          "90: static inline int ci_hdrc_gadget_init(struct ci13xxx *ci)",
          "",
          "[Added Lines]",
          "86: int ci_hdrc_gadget_init(struct ci_hdrc *ci);",
          "90: static inline int ci_hdrc_gadget_init(struct ci_hdrc *ci)",
          "",
          "---------------"
        ],
        "drivers/usb/chipidea/usbmisc_imx.c||drivers/usb/chipidea/usbmisc_imx.c": [
          "File: drivers/usb/chipidea/usbmisc_imx.c -> drivers/usb/chipidea/usbmisc_imx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <linux/io.h>",
          "17: #include <linux/delay.h>",
          "21: #define USB_DEV_MAX 4",
          "",
          "[Removed Lines]",
          "19: #include \"ci13xxx_imx.h\"",
          "",
          "[Added Lines]",
          "19: #include \"ci_hdrc_imx.h\"",
          "",
          "---------------"
        ],
        "include/linux/usb/chipidea.h||include/linux/usb/chipidea.h": [
          "File: include/linux/usb/chipidea.h -> include/linux/usb/chipidea.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #include <linux/usb/otg.h>",
          "12:  const char *name;",
          "14:  uintptr_t  capoffset;",
          "",
          "[Removed Lines]",
          "10: struct ci13xxx;",
          "11: struct ci13xxx_platform_data {",
          "",
          "[Added Lines]",
          "10: struct ci_hdrc;",
          "11: struct ci_hdrc_platform_data {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:  struct usb_phy *phy;",
          "17:  enum usb_phy_interface phy_mode;",
          "18:  unsigned long  flags;",
          "23:  enum usb_dr_mode dr_mode;",
          "27: };",
          "30: #define DEF_CAPOFFSET  0x100",
          "34:    struct resource *res, int nres,",
          "39: #endif",
          "",
          "[Removed Lines]",
          "19: #define CI13XXX_REGS_SHARED  BIT(0)",
          "20: #define CI13XXX_REQUIRE_TRANSCEIVER BIT(1)",
          "21: #define CI13XXX_PULLUP_ON_VBUS  BIT(2)",
          "22: #define CI13XXX_DISABLE_STREAMING BIT(3)",
          "24: #define CI13XXX_CONTROLLER_RESET_EVENT  0",
          "25: #define CI13XXX_CONTROLLER_STOPPED_EVENT 1",
          "26:  void (*notify_event) (struct ci13xxx *ci, unsigned event);",
          "33: struct platform_device *ci13xxx_add_device(struct device *dev,",
          "35:    struct ci13xxx_platform_data *platdata);",
          "37: void ci13xxx_remove_device(struct platform_device *pdev);",
          "",
          "[Added Lines]",
          "19: #define CI_HDRC_REGS_SHARED  BIT(0)",
          "20: #define CI_HDRC_REQUIRE_TRANSCEIVER BIT(1)",
          "21: #define CI_HDRC_PULLUP_ON_VBUS  BIT(2)",
          "22: #define CI_HDRC_DISABLE_STREAMING BIT(3)",
          "24: #define CI_HDRC_CONTROLLER_RESET_EVENT  0",
          "25: #define CI_HDRC_CONTROLLER_STOPPED_EVENT 1",
          "26:  void (*notify_event) (struct ci_hdrc *ci, unsigned event);",
          "33: struct platform_device *ci_hdrc_add_device(struct device *dev,",
          "35:    struct ci_hdrc_platform_data *platdata);",
          "37: void ci_hdrc_remove_device(struct platform_device *pdev);",
          "",
          "---------------"
        ]
      }
    }
  ]
}