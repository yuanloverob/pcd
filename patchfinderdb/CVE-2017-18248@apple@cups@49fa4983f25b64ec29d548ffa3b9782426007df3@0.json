{
  "cve_id": "CVE-2017-18248",
  "cve_desc": "The add_job function in scheduler/ipp.c in CUPS before 2.2.6, when D-Bus support is enabled, can be crashed by remote attackers by sending print jobs with an invalid username, related to a D-Bus notification.",
  "repo": "apple/cups",
  "patch_hash": "49fa4983f25b64ec29d548ffa3b9782426007df3",
  "patch_info": {
    "commit_hash": "49fa4983f25b64ec29d548ffa3b9782426007df3",
    "repo": "apple/cups",
    "commit_url": "https://github.com/apple/cups/commit/49fa4983f25b64ec29d548ffa3b9782426007df3",
    "files": [
      "CHANGES.md",
      "scheduler/ipp.c"
    ],
    "message": "DBUS notifications could crash the scheduler (Issue #5143)\n\n- scheduler/ipp.c: Make sure requesting-user-name string is valid UTF-8.",
    "before_after_code_files": [
      "scheduler/ipp.c||scheduler/ipp.c"
    ]
  },
  "patch_diff": {
    "scheduler/ipp.c||scheduler/ipp.c": [
      "File: scheduler/ipp.c -> scheduler/ipp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1597:     return (NULL);",
      "1598:   }",
      "1600:   if ((job = cupsdAddJob(priority, printer->name)) == NULL)",
      "1601:   {",
      "1602:     send_ipp_status(con, IPP_INTERNAL_ERROR,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1600:   attr = ippFindAttribute(con->request, \"requesting-user-name\", IPP_TAG_NAME);",
      "1602:   if (attr && !ippValidateAttribute(attr))",
      "1603:   {",
      "1604:     send_ipp_status(con, IPP_ATTRIBUTES, _(\"Bad requesting-user-name value: %s\"), cupsLastErrorString());",
      "1605:     if ((attr = ippCopyAttribute(con->response, attr, 0)) != NULL)",
      "1606:       attr->group_tag = IPP_TAG_UNSUPPORTED_GROUP;",
      "1607:     return (NULL);",
      "1608:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1615:   add_job_uuid(job);",
      "1616:   apply_printer_defaults(printer, job);",
      "1620:   if (con->username[0])",
      "1621:   {",
      "1622:     cupsdSetString(&job->username, con->username);",
      "",
      "[Removed Lines]",
      "1618:   attr = ippFindAttribute(job->attrs, \"requesting-user-name\", IPP_TAG_NAME);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0e4593c0be9cc615a6c585c8a17deb6f45097316",
      "candidate_info": {
        "commit_hash": "0e4593c0be9cc615a6c585c8a17deb6f45097316",
        "repo": "apple/cups",
        "commit_url": "https://github.com/apple/cups/commit/0e4593c0be9cc615a6c585c8a17deb6f45097316",
        "files": [
          "scheduler/ipp.c"
        ],
        "message": "Fix typo (Issue #5190)",
        "before_after_code_files": [
          "scheduler/ipp.c||scheduler/ipp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "scheduler/ipp.c||scheduler/ipp.c"
          ],
          "candidate": [
            "scheduler/ipp.c||scheduler/ipp.c"
          ]
        }
      },
      "candidate_diff": {
        "scheduler/ipp.c||scheduler/ipp.c": [
          "File: scheduler/ipp.c -> scheduler/ipp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1626:     ippDeleteAttribute(con->request, attr);",
          "1629:   }",
          "1631:   if ((job = cupsdAddJob(priority, printer->name)) == NULL)",
          "",
          "[Removed Lines]",
          "1628:     attr = ippAddString(con->request, IPP_TAG_JOB, IPP_TAG_NAME, \"reqeusting-user-name\", NULL, \"anonymous\");",
          "",
          "[Added Lines]",
          "1628:     attr = ippAddString(con->request, IPP_TAG_JOB, IPP_TAG_NAME, \"requesting-user-name\", NULL, \"anonymous\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d14c1bbc690ff302842e6a65aeb4685ef3796c2",
      "candidate_info": {
        "commit_hash": "6d14c1bbc690ff302842e6a65aeb4685ef3796c2",
        "repo": "apple/cups",
        "commit_url": "https://github.com/apple/cups/commit/6d14c1bbc690ff302842e6a65aeb4685ef3796c2",
        "files": [
          "CHANGES.md",
          "scheduler/ipp.c"
        ],
        "message": "The scheduler now substitutes default values for invalid job attributes when running in \"relaxed conformance\" mode (Issue #5186)",
        "before_after_code_files": [
          "scheduler/ipp.c||scheduler/ipp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "scheduler/ipp.c||scheduler/ipp.c"
          ],
          "candidate": [
            "scheduler/ipp.c||scheduler/ipp.c"
          ]
        }
      },
      "candidate_diff": {
        "scheduler/ipp.c||scheduler/ipp.c": [
          "File: scheduler/ipp.c -> scheduler/ipp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1584:                     _(\"Bad job-name value: Wrong type or count.\"));",
          "1585:     if ((attr = ippCopyAttribute(con->response, attr, 0)) != NULL)",
          "1586:       attr->group_tag = IPP_TAG_UNSUPPORTED_GROUP;",
          "1588:   }",
          "1589:   else if (!ippValidateAttribute(attr))",
          "1590:   {",
          "1591:     send_ipp_status(con, IPP_ATTRIBUTES, _(\"Bad job-name value: %s\"),",
          "1592:                     cupsLastErrorString());",
          "1593:     if ((attr = ippCopyAttribute(con->response, attr, 0)) != NULL)",
          "1594:       attr->group_tag = IPP_TAG_UNSUPPORTED_GROUP;",
          "1596:   }",
          "1598:   attr = ippFindAttribute(con->request, \"requesting-user-name\", IPP_TAG_NAME);",
          "",
          "[Removed Lines]",
          "1587:     return (NULL);",
          "1595:     return (NULL);",
          "",
          "[Added Lines]",
          "1588:     if (StrictConformance)",
          "1589:       return (NULL);",
          "1592:     ippDeleteAttribute(con->request, attr);",
          "1594:     ippAddString(con->request, IPP_TAG_JOB, IPP_TAG_NAME, \"job-name\", NULL, \"Untitled\");",
          "1604:     if (StrictConformance)",
          "1605:       return (NULL);",
          "1608:     ippDeleteAttribute(con->request, attr);",
          "1610:     ippAddString(con->request, IPP_TAG_JOB, IPP_TAG_NAME, \"job-name\", NULL, \"Untitled\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1600:   if (attr && !ippValidateAttribute(attr))",
          "1601:   {",
          "1602:     send_ipp_status(con, IPP_ATTRIBUTES, _(\"Bad requesting-user-name value: %s\"), cupsLastErrorString());",
          "1603:     if ((attr = ippCopyAttribute(con->response, attr, 0)) != NULL)",
          "1604:       attr->group_tag = IPP_TAG_UNSUPPORTED_GROUP;",
          "1606:   }",
          "1608:   if ((job = cupsdAddJob(priority, printer->name)) == NULL)",
          "",
          "[Removed Lines]",
          "1605:     return (NULL);",
          "",
          "[Added Lines]",
          "1622:     if (StrictConformance)",
          "1623:       return (NULL);",
          "1626:     ippDeleteAttribute(con->request, attr);",
          "1628:     attr = ippAddString(con->request, IPP_TAG_JOB, IPP_TAG_NAME, \"reqeusting-user-name\", NULL, \"anonymous\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aefefc3539b847c4f19f72e2461bc3fa11f57bc6",
      "candidate_info": {
        "commit_hash": "aefefc3539b847c4f19f72e2461bc3fa11f57bc6",
        "repo": "apple/cups",
        "commit_url": "https://github.com/apple/cups/commit/aefefc3539b847c4f19f72e2461bc3fa11f57bc6",
        "files": [
          "scheduler/ipp.c"
        ],
        "message": "Backport changes for attribute substitution (Issue #5229)",
        "before_after_code_files": [
          "scheduler/ipp.c||scheduler/ipp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "scheduler/ipp.c||scheduler/ipp.c"
          ],
          "candidate": [
            "scheduler/ipp.c||scheduler/ipp.c"
          ]
        }
      },
      "candidate_diff": {
        "scheduler/ipp.c||scheduler/ipp.c": [
          "File: scheduler/ipp.c -> scheduler/ipp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "184:   con->response = ippNew();",
          "199:   {",
          "214:   }",
          "215:   else if (con->request->request.any.request_id < 1)",
          "216:   {",
          "",
          "[Removed Lines]",
          "186:   con->response->request.status.version[0] =",
          "187:       con->request->request.op.version[0];",
          "188:   con->response->request.status.version[1] =",
          "189:       con->request->request.op.version[1];",
          "190:   con->response->request.status.request_id =",
          "191:       con->request->request.op.request_id;",
          "197:   if (con->request->request.any.version[0] != 1 &&",
          "198:       con->request->request.any.version[0] != 2)",
          "204:     cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL,",
          "205:                   \"%04X %s Bad request version number %d.%d\",",
          "206:     IPP_VERSION_NOT_SUPPORTED, con->http->hostname,",
          "207:                   con->request->request.any.version[0],",
          "208:            con->request->request.any.version[1]);",
          "210:     send_ipp_status(con, IPP_VERSION_NOT_SUPPORTED,",
          "211:                     _(\"Bad request version number %d.%d.\"),",
          "212:       con->request->request.any.version[0],",
          "213:              con->request->request.any.version[1]);",
          "",
          "[Added Lines]",
          "187:   con->response->request.status.version[0] = con->request->request.op.version[0];",
          "188:   con->response->request.status.version[1] = con->request->request.op.version[1];",
          "189:   con->response->request.status.request_id = con->request->request.op.request_id;",
          "195:   if (con->request->request.any.version[0] != 1 && con->request->request.any.version[0] != 2)",
          "201:     cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s Bad request version number %d.%d.\", IPP_STATUS_ERROR_VERSION_NOT_SUPPORTED, con->http->hostname, con->request->request.any.version[0], con->request->request.any.version[1]);",
          "203:     send_ipp_status(con, IPP_STATUS_ERROR_VERSION_NOT_SUPPORTED, _(\"Bad request version number %d.%d.\"), con->request->request.any.version[0], con->request->request.any.version[1]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "228:   }",
          "229:   else if (!con->request->attrs)",
          "230:   {",
          "236:   }",
          "237:   else",
          "238:   {",
          "",
          "[Removed Lines]",
          "221:     cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL,",
          "222:                   \"%04X %s Bad request ID %d\",",
          "223:     IPP_BAD_REQUEST, con->http->hostname,",
          "224:                   con->request->request.any.request_id);",
          "226:     send_ipp_status(con, IPP_BAD_REQUEST, _(\"Bad request ID %d.\"),",
          "227:       con->request->request.any.request_id);",
          "231:     cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL,",
          "232:                   \"%04X %s No attributes in request\",",
          "233:     IPP_BAD_REQUEST, con->http->hostname);",
          "235:     send_ipp_status(con, IPP_BAD_REQUEST, _(\"No attributes in request.\"));",
          "",
          "[Added Lines]",
          "211:     cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s Bad request ID %d.\", IPP_STATUS_ERROR_BAD_REQUEST, con->http->hostname, con->request->request.any.request_id);",
          "213:     send_ipp_status(con, IPP_STATUS_ERROR_BAD_REQUEST, _(\"Bad request ID %d.\"), con->request->request.any.request_id);",
          "217:     cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s No attributes in request.\", IPP_STATUS_ERROR_BAD_REQUEST, con->http->hostname);",
          "219:     send_ipp_status(con, IPP_STATUS_ERROR_BAD_REQUEST, _(\"No attributes in request.\"));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "260:  break;",
          "261:       }",
          "262:       else",
          "",
          "[Removed Lines]",
          "253:  cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL,",
          "254:                       \"%04X %s Attribute groups are out of order\",",
          "255:         IPP_BAD_REQUEST, con->http->hostname);",
          "257:  send_ipp_status(con, IPP_BAD_REQUEST,",
          "258:                  _(\"Attribute groups are out of order (%x < %x).\"),",
          "259:    attr->group_tag, group);",
          "",
          "[Added Lines]",
          "237:  cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s Attribute groups are out of order\", IPP_STATUS_ERROR_BAD_REQUEST, con->http->hostname);",
          "239:  send_ipp_status(con, IPP_STATUS_ERROR_BAD_REQUEST, _(\"Attribute groups are out of order (%x < %x).\"), attr->group_tag, group);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "275:       attr = con->request->attrs;",
          "279:  charset = attr;",
          "280:       else",
          "281:  charset = NULL;",
          "",
          "[Removed Lines]",
          "276:       if (attr && attr->name &&",
          "277:           !strcmp(attr->name, \"attributes-charset\") &&",
          "278:    (attr->value_tag & IPP_TAG_MASK) == IPP_TAG_CHARSET)",
          "",
          "[Added Lines]",
          "256:       if (attr && attr->name && !strcmp(attr->name, \"attributes-charset\") && (attr->value_tag & IPP_TAG_MASK) == IPP_TAG_CHARSET)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "283:       if (attr)",
          "284:         attr = attr->next;",
          "289:       {",
          "290:  language = attr;",
          "",
          "[Removed Lines]",
          "286:       if (attr && attr->name &&",
          "287:           !strcmp(attr->name, \"attributes-natural-language\") &&",
          "288:    (attr->value_tag & IPP_TAG_MASK) == IPP_TAG_LANGUAGE)",
          "",
          "[Added Lines]",
          "264:       if (attr && attr->name && !strcmp(attr->name, \"attributes-natural-language\") && (attr->value_tag & IPP_TAG_MASK) == IPP_TAG_LANGUAGE)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "303:       else",
          "304:  language = NULL;",
          "308:  uri = attr;",
          "311:  uri = attr;",
          "312:       else if (con->request->request.op.operation_id == CUPS_GET_PPD)",
          "313:         uri = ippFindAttribute(con->request, \"ppd-name\", IPP_TAG_NAME);",
          "",
          "[Removed Lines]",
          "306:       if ((attr = ippFindAttribute(con->request, \"printer-uri\",",
          "307:                                    IPP_TAG_URI)) != NULL)",
          "309:       else if ((attr = ippFindAttribute(con->request, \"job-uri\",",
          "310:                                         IPP_TAG_URI)) != NULL)",
          "",
          "[Added Lines]",
          "282:       if ((attr = ippFindAttribute(con->request, \"printer-uri\", IPP_TAG_URI)) != NULL)",
          "284:       else if ((attr = ippFindAttribute(con->request, \"job-uri\", IPP_TAG_URI)) != NULL)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "315:  uri = NULL;",
          "317:       if (charset)",
          "321:       else",
          "325:       if (language)",
          "329:       else",
          "336:       {",
          "",
          "[Removed Lines]",
          "318:  ippAddString(con->response, IPP_TAG_OPERATION, IPP_TAG_CHARSET,",
          "319:               \"attributes-charset\", NULL,",
          "320:        charset->values[0].string.text);",
          "322:  ippAddString(con->response, IPP_TAG_OPERATION, IPP_TAG_CHARSET,",
          "323:               \"attributes-charset\", NULL, \"utf-8\");",
          "326:  ippAddString(con->response, IPP_TAG_OPERATION, IPP_TAG_LANGUAGE,",
          "327:                      \"attributes-natural-language\", NULL,",
          "328:        language->values[0].string.text);",
          "330:  ippAddString(con->response, IPP_TAG_OPERATION, IPP_TAG_LANGUAGE,",
          "331:                      \"attributes-natural-language\", NULL, DefaultLanguage);",
          "333:       if (charset &&",
          "334:           _cups_strcasecmp(charset->values[0].string.text, \"us-ascii\") &&",
          "335:           _cups_strcasecmp(charset->values[0].string.text, \"utf-8\"))",
          "",
          "[Added Lines]",
          "292:  ippAddString(con->response, IPP_TAG_OPERATION, IPP_TAG_CHARSET, \"attributes-charset\", NULL, charset->values[0].string.text);",
          "294:  ippAddString(con->response, IPP_TAG_OPERATION, IPP_TAG_CHARSET, \"attributes-charset\", NULL, \"utf-8\");",
          "297:  ippAddString(con->response, IPP_TAG_OPERATION, IPP_TAG_LANGUAGE, \"attributes-natural-language\", NULL, language->values[0].string.text);",
          "299:  ippAddString(con->response, IPP_TAG_OPERATION, IPP_TAG_LANGUAGE, \"attributes-natural-language\", NULL, DefaultLanguage);",
          "301:       if (charset && _cups_strcasecmp(charset->values[0].string.text, \"us-ascii\") && _cups_strcasecmp(charset->values[0].string.text, \"utf-8\"))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "341:         cupsdLogMessage(CUPSD_LOG_ERROR, \"Unsupported character set \\\"%s\\\"\",",
          "342:                  charset->values[0].string.text);",
          "350:       }",
          "351:       else if (!charset || !language ||",
          "352:         (!uri &&",
          "",
          "[Removed Lines]",
          "343:  cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL,",
          "344:         \"%04X %s Unsupported attributes-charset value \\\"%s\\\"\",",
          "345:         IPP_CHARSET, con->http->hostname,",
          "346:         charset->values[0].string.text);",
          "347:  send_ipp_status(con, IPP_BAD_REQUEST,",
          "348:                  _(\"Unsupported character set \\\"%s\\\".\"),",
          "349:                  charset->values[0].string.text);",
          "",
          "[Added Lines]",
          "309:  cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s Unsupported attributes-charset value \\\"%s\\\".\", IPP_STATUS_ERROR_CHARSET, con->http->hostname, charset->values[0].string.text);",
          "310:  send_ipp_status(con, IPP_STATUS_ERROR_CHARSET, _(\"Unsupported character set \\\"%s\\\".\"), charset->values[0].string.text);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "365:         if (!charset)",
          "366:  {",
          "373:         }",
          "375:         if (!language)",
          "376:  {",
          "377:    cupsdLogMessage(CUPSD_LOG_ERROR,",
          "383:         }",
          "385:         if (!uri)",
          "386:  {",
          "394:         }",
          "396:  cupsdLogMessage(CUPSD_LOG_DEBUG, \"Request attributes follow...\");",
          "",
          "[Removed Lines]",
          "367:    cupsdLogMessage(CUPSD_LOG_ERROR,",
          "368:                    \"Missing attributes-charset attribute\");",
          "370:    cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL,",
          "371:                  \"%04X %s Missing attributes-charset attribute\",",
          "372:    IPP_BAD_REQUEST, con->http->hostname);",
          "378:                    \"Missing attributes-natural-language attribute\");",
          "380:    cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL,",
          "381:                  \"%04X %s Missing attributes-natural-language attribute\",",
          "382:    IPP_BAD_REQUEST, con->http->hostname);",
          "387:    cupsdLogMessage(CUPSD_LOG_ERROR,",
          "388:                    \"Missing printer-uri, job-uri, or ppd-name \"",
          "389:      \"attribute\");",
          "391:    cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL,",
          "392:                  \"%04X %s Missing printer-uri, job-uri, or ppd-name \"",
          "393:    \"attribute\", IPP_BAD_REQUEST, con->http->hostname);",
          "",
          "[Added Lines]",
          "328:    cupsdLogMessage(CUPSD_LOG_ERROR, \"Missing attributes-charset attribute.\");",
          "330:    cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s Missing attributes-charset attribute.\", IPP_STATUS_ERROR_BAD_REQUEST, con->http->hostname);",
          "336:                    \"Missing attributes-natural-language attribute.\");",
          "338:    cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s Missing attributes-natural-language attribute.\", IPP_STATUS_ERROR_BAD_REQUEST, con->http->hostname);",
          "343:    cupsdLogMessage(CUPSD_LOG_ERROR, \"Missing printer-uri, job-uri, or ppd-name attribute.\");",
          "345:    cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s Missing printer-uri, job-uri, or ppd-name attribute.\", IPP_STATUS_ERROR_BAD_REQUEST, con->http->hostname);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "409:       else",
          "410:       {",
          "426:    {",
          "",
          "[Removed Lines]",
          "416:         if ((username = ippFindAttribute(con->request, \"requesting-user-name\",",
          "417:                                   IPP_TAG_NAME)) != NULL)",
          "418:  {",
          "423:    if (!strcmp(username->values[0].string.text, \"root\") &&",
          "424:        _cups_strcasecmp(con->http->hostname, \"localhost\") &&",
          "425:        strcmp(con->username, \"root\"))",
          "",
          "[Added Lines]",
          "368:         if ((username = ippFindAttribute(con->request, \"requesting-user-name\", IPP_TAG_ZERO)) != NULL)",
          "369:         {",
          "374:           if (username->group_tag != IPP_TAG_OPERATION && StrictConformance)",
          "375:           {",
          "376:      cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s \\\"requesting-user-name\\\" attribute in wrong group.\", IPP_STATUS_ERROR_BAD_REQUEST, con->http->hostname);",
          "377:      send_ipp_status(con, IPP_STATUS_ERROR_BAD_REQUEST, _(\"\\\"requesting-user-name\\\" attribute in wrong group.\"));",
          "378:      valid = 0;",
          "379:           }",
          "380:           else if (username->value_tag != IPP_TAG_NAME && username->value_tag != IPP_TAG_NAMELANG)",
          "381:           {",
          "382:      cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s \\\"requesting-user-name\\\" attribute with wrong syntax.\", IPP_STATUS_ERROR_ATTRIBUTES_OR_VALUES, con->http->hostname);",
          "383:      send_ipp_status(con, IPP_STATUS_ERROR_ATTRIBUTES_OR_VALUES, _(\"\\\"requesting-user-name\\\" attribute with wrong syntax.\"));",
          "384:      if ((attr = ippCopyAttribute(con->response, username, 0)) != NULL)",
          "385:        attr->group_tag = IPP_TAG_UNSUPPORTED_GROUP;",
          "386:      valid = 0;",
          "387:           }",
          "388:           else if (!ippValidateAttribute(username))",
          "389:           {",
          "390:      cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s \\\"requesting-user-name\\\" attribute with bad value.\", IPP_STATUS_ERROR_ATTRIBUTES_OR_VALUES, con->http->hostname);",
          "392:             if (StrictConformance)",
          "393:             {",
          "398:        send_ipp_status(con, IPP_STATUS_ERROR_ATTRIBUTES_OR_VALUES, _(\"\\\"requesting-user-name\\\" attribute with wrong syntax.\"));",
          "399:               if ((attr = ippCopyAttribute(con->response, username, 0)) != NULL)",
          "400:                 attr->group_tag = IPP_TAG_UNSUPPORTED_GROUP;",
          "401:        valid = 0;",
          "402:      }",
          "403:      else",
          "404:      {",
          "409:               ippSetString(con->request, &username, 0, \"anonymous\");",
          "410:      }",
          "411:           }",
          "412:           else if (!strcmp(username->values[0].string.text, \"root\") && _cups_strcasecmp(con->http->hostname, \"localhost\") && strcmp(con->username, \"root\"))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "432:    }",
          "433:  }",
          "437:    sub_id = attr->values[0].integer;",
          "438:  else",
          "439:    sub_id = 0;",
          "644:  }",
          "645:       }",
          "646:     }",
          "",
          "[Removed Lines]",
          "435:         if ((attr = ippFindAttribute(con->request, \"notify-subscription-id\",",
          "436:                               IPP_TAG_INTEGER)) != NULL)",
          "445:         if (uri)",
          "446:    cupsdLogMessage(CUPSD_LOG_DEBUG, \"%s %s\",",
          "447:                    ippOpString(con->request->request.op.operation_id),",
          "448:      uri->values[0].string.text);",
          "449:         else",
          "450:    cupsdLogMessage(CUPSD_LOG_DEBUG, \"%s\",",
          "451:                    ippOpString(con->request->request.op.operation_id));",
          "453:  switch (con->request->request.op.operation_id)",
          "454:  {",
          "455:    case IPP_OP_PRINT_JOB :",
          "456:               print_job(con, uri);",
          "457:               break;",
          "459:    case IPP_OP_VALIDATE_JOB :",
          "460:               validate_job(con, uri);",
          "461:               break;",
          "463:    case IPP_OP_CREATE_JOB :",
          "464:               create_job(con, uri);",
          "465:               break;",
          "467:    case IPP_OP_SEND_DOCUMENT :",
          "468:               send_document(con, uri);",
          "469:               break;",
          "471:    case IPP_OP_CANCEL_JOB :",
          "472:               cancel_job(con, uri);",
          "473:               break;",
          "475:    case IPP_OP_GET_JOB_ATTRIBUTES :",
          "476:               get_job_attrs(con, uri);",
          "477:               break;",
          "479:    case IPP_OP_GET_JOBS :",
          "480:               get_jobs(con, uri);",
          "481:               break;",
          "483:    case IPP_OP_GET_PRINTER_ATTRIBUTES :",
          "484:               get_printer_attrs(con, uri);",
          "485:               break;",
          "487:    case IPP_OP_GET_PRINTER_SUPPORTED_VALUES :",
          "488:               get_printer_supported(con, uri);",
          "489:               break;",
          "491:    case IPP_OP_HOLD_JOB :",
          "492:               hold_job(con, uri);",
          "493:               break;",
          "495:    case IPP_OP_RELEASE_JOB :",
          "496:               release_job(con, uri);",
          "497:               break;",
          "499:    case IPP_OP_RESTART_JOB :",
          "500:               restart_job(con, uri);",
          "501:               break;",
          "503:    case IPP_OP_PAUSE_PRINTER :",
          "504:               stop_printer(con, uri);",
          "505:        break;",
          "507:    case IPP_OP_RESUME_PRINTER :",
          "508:               start_printer(con, uri);",
          "509:        break;",
          "511:    case IPP_OP_PURGE_JOBS :",
          "512:    case IPP_OP_CANCEL_JOBS :",
          "513:    case IPP_OP_CANCEL_MY_JOBS :",
          "514:               cancel_all_jobs(con, uri);",
          "515:               break;",
          "517:    case IPP_OP_SET_JOB_ATTRIBUTES :",
          "518:               set_job_attrs(con, uri);",
          "519:               break;",
          "521:    case IPP_OP_SET_PRINTER_ATTRIBUTES :",
          "522:               set_printer_attrs(con, uri);",
          "523:               break;",
          "525:    case IPP_OP_HOLD_NEW_JOBS :",
          "526:               hold_new_jobs(con, uri);",
          "527:               break;",
          "529:    case IPP_OP_RELEASE_HELD_NEW_JOBS :",
          "530:               release_held_new_jobs(con, uri);",
          "531:               break;",
          "533:    case IPP_OP_CLOSE_JOB :",
          "534:               close_job(con, uri);",
          "535:               break;",
          "537:    case IPP_OP_CUPS_GET_DEFAULT :",
          "538:               get_default(con);",
          "539:               break;",
          "541:    case IPP_OP_CUPS_GET_PRINTERS :",
          "542:               get_printers(con, 0);",
          "543:               break;",
          "545:    case IPP_OP_CUPS_GET_CLASSES :",
          "546:               get_printers(con, CUPS_PRINTER_CLASS);",
          "547:               break;",
          "549:    case IPP_OP_CUPS_ADD_MODIFY_PRINTER :",
          "550:               add_printer(con, uri);",
          "551:               break;",
          "553:    case IPP_OP_CUPS_DELETE_PRINTER :",
          "554:               delete_printer(con, uri);",
          "555:               break;",
          "557:    case IPP_OP_CUPS_ADD_MODIFY_CLASS :",
          "558:               add_class(con, uri);",
          "559:               break;",
          "561:    case IPP_OP_CUPS_DELETE_CLASS :",
          "562:               delete_printer(con, uri);",
          "563:               break;",
          "565:    case IPP_OP_CUPS_ACCEPT_JOBS :",
          "566:    case IPP_OP_ENABLE_PRINTER :",
          "567:               accept_jobs(con, uri);",
          "568:               break;",
          "570:    case IPP_OP_CUPS_REJECT_JOBS :",
          "571:    case IPP_OP_DISABLE_PRINTER :",
          "572:               reject_jobs(con, uri);",
          "573:               break;",
          "575:    case IPP_OP_CUPS_SET_DEFAULT :",
          "576:               set_default(con, uri);",
          "577:               break;",
          "579:    case IPP_OP_CUPS_GET_DEVICES :",
          "580:               get_devices(con);",
          "581:               break;",
          "583:           case IPP_OP_CUPS_GET_DOCUMENT :",
          "584:        get_document(con, uri);",
          "585:        break;",
          "587:    case IPP_OP_CUPS_GET_PPD :",
          "588:               get_ppd(con, uri);",
          "589:               break;",
          "591:    case IPP_OP_CUPS_GET_PPDS :",
          "592:               get_ppds(con);",
          "593:               break;",
          "595:    case IPP_OP_CUPS_MOVE_JOB :",
          "596:               move_job(con, uri);",
          "597:               break;",
          "599:    case IPP_OP_CUPS_AUTHENTICATE_JOB :",
          "600:               authenticate_job(con, uri);",
          "601:               break;",
          "603:           case IPP_OP_CREATE_PRINTER_SUBSCRIPTIONS :",
          "604:    case IPP_OP_CREATE_JOB_SUBSCRIPTIONS :",
          "605:        create_subscriptions(con, uri);",
          "606:        break;",
          "608:           case IPP_OP_GET_SUBSCRIPTION_ATTRIBUTES :",
          "609:        get_subscription_attrs(con, sub_id);",
          "610:        break;",
          "612:    case IPP_OP_GET_SUBSCRIPTIONS :",
          "613:        get_subscriptions(con, uri);",
          "614:        break;",
          "616:    case IPP_OP_RENEW_SUBSCRIPTION :",
          "617:        renew_subscription(con, sub_id);",
          "618:        break;",
          "620:    case IPP_OP_CANCEL_SUBSCRIPTION :",
          "621:        cancel_subscription(con, sub_id);",
          "622:        break;",
          "624:           case IPP_OP_GET_NOTIFICATIONS :",
          "625:        get_notifications(con);",
          "626:        break;",
          "628:    case IPP_OP_CUPS_CREATE_LOCAL_PRINTER :",
          "629:        create_local_printer(con);",
          "630:        break;",
          "632:    default :",
          "633:        cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL,",
          "634:                      \"%04X %s Operation %04X (%s) not supported\",",
          "635:        IPP_OPERATION_NOT_SUPPORTED, con->http->hostname,",
          "636:        con->request->request.op.operation_id,",
          "637:        ippOpString(con->request->request.op.operation_id));",
          "639:               send_ipp_status(con, IPP_OPERATION_NOT_SUPPORTED,",
          "640:                        _(\"%s not supported.\"),",
          "641:          ippOpString(",
          "642:              con->request->request.op.operation_id));",
          "643:        break;",
          "",
          "[Added Lines]",
          "422:         if ((attr = ippFindAttribute(con->request, \"notify-subscription-id\", IPP_TAG_INTEGER)) != NULL)",
          "427:         if (valid)",
          "428:         {",
          "433:    if (uri)",
          "434:      cupsdLogMessage(CUPSD_LOG_DEBUG, \"%s %s\", ippOpString(con->request->request.op.operation_id), uri->values[0].string.text);",
          "435:    else",
          "436:      cupsdLogMessage(CUPSD_LOG_DEBUG, \"%s\", ippOpString(con->request->request.op.operation_id));",
          "438:    switch (con->request->request.op.operation_id)",
          "439:    {",
          "440:      case IPP_OP_PRINT_JOB :",
          "441:   print_job(con, uri);",
          "442:   break;",
          "444:      case IPP_OP_VALIDATE_JOB :",
          "445:   validate_job(con, uri);",
          "446:   break;",
          "448:      case IPP_OP_CREATE_JOB :",
          "449:   create_job(con, uri);",
          "450:   break;",
          "452:      case IPP_OP_SEND_DOCUMENT :",
          "453:   send_document(con, uri);",
          "454:   break;",
          "456:      case IPP_OP_CANCEL_JOB :",
          "457:   cancel_job(con, uri);",
          "458:   break;",
          "460:      case IPP_OP_GET_JOB_ATTRIBUTES :",
          "461:   get_job_attrs(con, uri);",
          "462:   break;",
          "464:      case IPP_OP_GET_JOBS :",
          "465:   get_jobs(con, uri);",
          "466:   break;",
          "468:      case IPP_OP_GET_PRINTER_ATTRIBUTES :",
          "469:   get_printer_attrs(con, uri);",
          "470:   break;",
          "472:      case IPP_OP_GET_PRINTER_SUPPORTED_VALUES :",
          "473:   get_printer_supported(con, uri);",
          "474:   break;",
          "476:      case IPP_OP_HOLD_JOB :",
          "477:   hold_job(con, uri);",
          "478:   break;",
          "480:      case IPP_OP_RELEASE_JOB :",
          "481:   release_job(con, uri);",
          "482:   break;",
          "484:      case IPP_OP_RESTART_JOB :",
          "485:   restart_job(con, uri);",
          "486:   break;",
          "488:      case IPP_OP_PAUSE_PRINTER :",
          "489:   stop_printer(con, uri);",
          "490:   break;",
          "492:      case IPP_OP_RESUME_PRINTER :",
          "493:   start_printer(con, uri);",
          "494:   break;",
          "496:      case IPP_OP_PURGE_JOBS :",
          "497:      case IPP_OP_CANCEL_JOBS :",
          "498:      case IPP_OP_CANCEL_MY_JOBS :",
          "499:   cancel_all_jobs(con, uri);",
          "500:   break;",
          "502:      case IPP_OP_SET_JOB_ATTRIBUTES :",
          "503:   set_job_attrs(con, uri);",
          "504:   break;",
          "506:      case IPP_OP_SET_PRINTER_ATTRIBUTES :",
          "507:   set_printer_attrs(con, uri);",
          "508:   break;",
          "510:      case IPP_OP_HOLD_NEW_JOBS :",
          "511:   hold_new_jobs(con, uri);",
          "512:   break;",
          "514:      case IPP_OP_RELEASE_HELD_NEW_JOBS :",
          "515:   release_held_new_jobs(con, uri);",
          "516:   break;",
          "518:      case IPP_OP_CLOSE_JOB :",
          "519:   close_job(con, uri);",
          "520:   break;",
          "522:      case IPP_OP_CUPS_GET_DEFAULT :",
          "523:   get_default(con);",
          "524:   break;",
          "526:      case IPP_OP_CUPS_GET_PRINTERS :",
          "527:   get_printers(con, 0);",
          "528:   break;",
          "530:      case IPP_OP_CUPS_GET_CLASSES :",
          "531:   get_printers(con, CUPS_PRINTER_CLASS);",
          "532:   break;",
          "534:      case IPP_OP_CUPS_ADD_MODIFY_PRINTER :",
          "535:   add_printer(con, uri);",
          "536:   break;",
          "538:      case IPP_OP_CUPS_DELETE_PRINTER :",
          "539:   delete_printer(con, uri);",
          "540:   break;",
          "542:      case IPP_OP_CUPS_ADD_MODIFY_CLASS :",
          "543:   add_class(con, uri);",
          "544:   break;",
          "546:      case IPP_OP_CUPS_DELETE_CLASS :",
          "547:   delete_printer(con, uri);",
          "548:   break;",
          "550:      case IPP_OP_CUPS_ACCEPT_JOBS :",
          "551:      case IPP_OP_ENABLE_PRINTER :",
          "552:   accept_jobs(con, uri);",
          "553:   break;",
          "555:      case IPP_OP_CUPS_REJECT_JOBS :",
          "556:      case IPP_OP_DISABLE_PRINTER :",
          "557:   reject_jobs(con, uri);",
          "558:   break;",
          "560:      case IPP_OP_CUPS_SET_DEFAULT :",
          "561:   set_default(con, uri);",
          "562:   break;",
          "564:      case IPP_OP_CUPS_GET_DEVICES :",
          "565:   get_devices(con);",
          "566:   break;",
          "568:      case IPP_OP_CUPS_GET_DOCUMENT :",
          "569:   get_document(con, uri);",
          "570:   break;",
          "572:      case IPP_OP_CUPS_GET_PPD :",
          "573:   get_ppd(con, uri);",
          "574:   break;",
          "576:      case IPP_OP_CUPS_GET_PPDS :",
          "577:   get_ppds(con);",
          "578:   break;",
          "580:      case IPP_OP_CUPS_MOVE_JOB :",
          "581:   move_job(con, uri);",
          "582:   break;",
          "584:      case IPP_OP_CUPS_AUTHENTICATE_JOB :",
          "585:   authenticate_job(con, uri);",
          "586:   break;",
          "588:      case IPP_OP_CREATE_PRINTER_SUBSCRIPTIONS :",
          "589:      case IPP_OP_CREATE_JOB_SUBSCRIPTIONS :",
          "590:   create_subscriptions(con, uri);",
          "591:   break;",
          "593:      case IPP_OP_GET_SUBSCRIPTION_ATTRIBUTES :",
          "594:   get_subscription_attrs(con, sub_id);",
          "595:   break;",
          "597:      case IPP_OP_GET_SUBSCRIPTIONS :",
          "598:   get_subscriptions(con, uri);",
          "599:   break;",
          "601:      case IPP_OP_RENEW_SUBSCRIPTION :",
          "602:   renew_subscription(con, sub_id);",
          "603:   break;",
          "605:      case IPP_OP_CANCEL_SUBSCRIPTION :",
          "606:   cancel_subscription(con, sub_id);",
          "607:   break;",
          "609:      case IPP_OP_GET_NOTIFICATIONS :",
          "610:   get_notifications(con);",
          "611:   break;",
          "613:      case IPP_OP_CUPS_CREATE_LOCAL_PRINTER :",
          "614:   create_local_printer(con);",
          "615:   break;",
          "617:      default :",
          "618:   cupsdAddEvent(CUPSD_EVENT_SERVER_AUDIT, NULL, NULL, \"%04X %s Operation %04X (%s) not supported.\", IPP_STATUS_ERROR_OPERATION_NOT_SUPPORTED, con->http->hostname, con->request->request.op.operation_id, ippOpString(con->request->request.op.operation_id));",
          "620:   send_ipp_status(con, IPP_STATUS_ERROR_OPERATION_NOT_SUPPORTED, _(\"%s not supported.\"), ippOpString(con->request->request.op.operation_id));",
          "621:   break;",
          "622:    }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "666:     httpClearFields(con->http);",
          "",
          "[Removed Lines]",
          "655:     cupsdLogMessage(con->response->request.status.status_code",
          "656:                         >= IPP_BAD_REQUEST &&",
          "657:                     con->response->request.status.status_code",
          "658:           != IPP_NOT_FOUND ? CUPSD_LOG_ERROR : CUPSD_LOG_DEBUG,",
          "659:                     \"[Client %d] Returning IPP %s for %s (%s) from %s\",",
          "660:              con->number,",
          "661:              ippErrorString(con->response->request.status.status_code),",
          "662:       ippOpString(con->request->request.op.operation_id),",
          "663:       uri ? uri->values[0].string.text : \"no URI\",",
          "664:       con->http->hostname);",
          "",
          "[Added Lines]",
          "634:     cupsdLogClient(con, con->response->request.status.status_code >= IPP_STATUS_ERROR_BAD_REQUEST && con->response->request.status.status_code != IPP_STATUS_ERROR_NOT_FOUND ? CUPSD_LOG_ERROR : CUPSD_LOG_DEBUG, \"Returning IPP %s for %s (%s) from %s.\",  ippErrorString(con->response->request.status.status_code), ippOpString(con->request->request.op.operation_id), uri ? uri->values[0].string.text : \"no URI\", con->http->hostname);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "677:     if (con->http->version == HTTP_1_1)",
          "678:     {",
          "683:       cupsdSetLength(con->http, 0);",
          "684:     }",
          "685:     else",
          "",
          "[Removed Lines]",
          "679:       cupsdLogMessage(CUPSD_LOG_DEBUG,",
          "680:         \"[Client %d] Transfer-Encoding: chunked\",",
          "681:         con->number);",
          "",
          "[Added Lines]",
          "649:       cupsdLogClient(con, CUPSD_LOG_DEBUG, \"Transfer-Encoding: chunked\");",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "698:    length += (size_t)fileinfo.st_size;",
          "699:       }",
          "704:       httpSetLength(con->http, length);",
          "705:     }",
          "",
          "[Removed Lines]",
          "701:       cupsdLogMessage(CUPSD_LOG_DEBUG,",
          "702:         \"[Client %d] Content-Length: \" CUPS_LLFMT,",
          "703:         con->number, CUPS_LLCAST length);",
          "",
          "[Added Lines]",
          "668:       cupsdLogClient(con, CUPSD_LOG_DEBUG, \"Content-Length: \" CUPS_LLFMT, CUPS_LLCAST length);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "716:       return (1);",
          "717:     }",
          "",
          "[Removed Lines]",
          "713:       cupsdAddSelect(httpGetFd(con->http), (cupsd_selfunc_t)cupsdReadClient,",
          "714:        (cupsd_selfunc_t)cupsdWriteClient, con);",
          "",
          "[Added Lines]",
          "678:       cupsdAddSelect(httpGetFd(con->http), (cupsd_selfunc_t)cupsdReadClient, (cupsd_selfunc_t)cupsdWriteClient, con);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1586:                     _(\"Bad job-name value: Wrong type or count.\"));",
          "1587:     if ((attr = ippCopyAttribute(con->response, attr, 0)) != NULL)",
          "1588:       attr->group_tag = IPP_TAG_UNSUPPORTED_GROUP;",
          "1590:   }",
          "1591:   else if (!ippValidateAttribute(attr))",
          "1592:   {",
          "1593:     send_ipp_status(con, IPP_ATTRIBUTES, _(\"Bad job-name value: %s\"),",
          "1594:                     cupsLastErrorString());",
          "1595:     if ((attr = ippCopyAttribute(con->response, attr, 0)) != NULL)",
          "1596:       attr->group_tag = IPP_TAG_UNSUPPORTED_GROUP;",
          "1608:   }",
          "1610:   if ((job = cupsdAddJob(priority, printer->name)) == NULL)",
          "1611:   {",
          "1612:     send_ipp_status(con, IPP_INTERNAL_ERROR,",
          "",
          "[Removed Lines]",
          "1589:     return (NULL);",
          "1597:     return (NULL);",
          "1598:   }",
          "1600:   attr = ippFindAttribute(con->request, \"requesting-user-name\", IPP_TAG_NAME);",
          "1602:   if (attr && !ippValidateAttribute(attr))",
          "1603:   {",
          "1604:     send_ipp_status(con, IPP_ATTRIBUTES, _(\"Bad requesting-user-name value: %s\"), cupsLastErrorString());",
          "1605:     if ((attr = ippCopyAttribute(con->response, attr, 0)) != NULL)",
          "1606:       attr->group_tag = IPP_TAG_UNSUPPORTED_GROUP;",
          "1607:     return (NULL);",
          "",
          "[Added Lines]",
          "1554:     if (StrictConformance)",
          "1555:       return (NULL);",
          "1558:     ippDeleteAttribute(con->request, attr);",
          "1560:     ippAddString(con->request, IPP_TAG_JOB, IPP_TAG_NAME, \"job-name\", NULL, \"Untitled\");",
          "1570:     if (StrictConformance)",
          "1571:       return (NULL);",
          "1574:     ippDeleteAttribute(con->request, attr);",
          "1576:     ippAddString(con->request, IPP_TAG_JOB, IPP_TAG_NAME, \"job-name\", NULL, \"Untitled\");",
          "1579:   attr = ippFindAttribute(con->request, \"requesting-user-name\", IPP_TAG_NAME);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "5349:   cupsdLogMessage(CUPSD_LOG_DEBUG, \"%s: Connected to %s:%d, sending Get-Printer-Attributes request...\", printer->name, host, port);",
          "5351:   request = ippNewRequest(IPP_OP_GET_PRINTER_ATTRIBUTES);",
          "5352:   ippAddString(request, IPP_TAG_OPERATION, IPP_TAG_URI, \"printer-uri\", NULL, printer->device_uri);",
          "5353:   ippAddString(request, IPP_TAG_OPERATION, IPP_TAG_KEYWORD, \"requested-attributes\", NULL, \"all\");",
          "5355:   response = cupsDoRequest(http, request, resource);",
          "5360:   httpClose(http);",
          "",
          "[Removed Lines]",
          "5357:   cupsdLogMessage(CUPSD_LOG_DEBUG, \"%s: Get-Printer-Attributes returned %s\", printer->name, ippErrorString(cupsLastError()));",
          "",
          "[Added Lines]",
          "5324:   ippSetVersion(request, 2, 0);",
          "5329:   status   = cupsLastError();",
          "5331:   cupsdLogMessage(CUPSD_LOG_DEBUG, \"%s: Get-Printer-Attributes returned %s (%s)\", printer->name, ippErrorString(cupsLastError()), cupsLastErrorString());",
          "5333:   if (status == IPP_STATUS_ERROR_BAD_REQUEST || status == IPP_STATUS_ERROR_VERSION_NOT_SUPPORTED)",
          "5334:   {",
          "5340:     ippDelete(response);",
          "5342:     cupsdLogMessage(CUPSD_LOG_DEBUG, \"%s: Re-sending Get-Printer-Attributes request using IPP/1.1...\", printer->name);",
          "5344:     request = ippNewRequest(IPP_OP_GET_PRINTER_ATTRIBUTES);",
          "5345:     ippSetVersion(request, 1, 1);",
          "5346:     ippAddString(request, IPP_TAG_OPERATION, IPP_TAG_URI, \"printer-uri\", NULL, printer->device_uri);",
          "5347:     ippAddString(request, IPP_TAG_OPERATION, IPP_TAG_KEYWORD, \"requested-attributes\", NULL, \"all\");",
          "5349:     response = cupsDoRequest(http, request, resource);",
          "5351:     cupsdLogMessage(CUPSD_LOG_DEBUG, \"%s: IPP/1.1 Get-Printer-Attributes returned %s (%s)\", printer->name, ippErrorString(cupsLastError()), cupsLastErrorString());",
          "5352:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}