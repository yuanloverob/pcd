{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "531230d006696e418d40b7808798de628a3fd4f2",
      "candidate_info": {
        "commit_hash": "531230d006696e418d40b7808798de628a3fd4f2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/531230d006696e418d40b7808798de628a3fd4f2",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/releasetest.tcl"
        ],
        "message": "Add -DSQLITE_ENABLE_DESERIALIZE to the default testing configuration in test/releasetest.tcl.\n\nFossilOrigin-Name: 433d6ef637a10ee017b5d8cadd125a162cfedc9895ae862b8dde6dddb7eda59b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/releasetest.tcl||test/releasetest.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3839e9098107604e1526c2b1e813c019607077dfe39d7eeb92f3466518dec3b1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/releasetest.tcl||test/releasetest.tcl": [
          "File: test/releasetest.tcl -> test/releasetest.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:     -O2",
          "51:     --disable-amalgamation --disable-shared",
          "52:     --enable-session",
          "53:   }",
          "54:   \"Sanitize\" {",
          "55:     CC=clang -fsanitize=undefined",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:     -DSQLITE_ENABLE_DESERIALIZE",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a47e45f734d793d82421c383bfa90547436989f6",
      "candidate_info": {
        "commit_hash": "a47e45f734d793d82421c383bfa90547436989f6",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a47e45f734d793d82421c383bfa90547436989f6",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix an out-of-bounds read in SQL function fts5_decode() that could occur if it was passed a corrupt record.\n\nFossilOrigin-Name: 931278b257b12ac14fc8fbc82c6dc88ce4ac4b8e0d668543e68f0289d825daa1",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6409:     nDoclist = (iTermOff ? iTermOff : szLeaf) - iOff;",
          "6410:     fts5DecodeDoclist(&rc, &s, &a[iOff], nDoclist);",
          "6415:       int iEnd;",
          "",
          "[Removed Lines]",
          "6412:     while( iPgidxOff<n ){",
          "",
          "[Added Lines]",
          "6412:     while( iPgidxOff<n && rc==SQLITE_OK ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6428:       if( bFirst==0 ){",
          "6429:         iOff += fts5GetVarint32(&a[iOff], nByte);",
          "6430:         term.n = nByte;",
          "6431:       }",
          "6432:       iOff += fts5GetVarint32(&a[iOff], nByte);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6430:         if( nByte>term.n ){",
          "6431:           rc = FTS5_CORRUPT;",
          "6432:           goto decode_out;",
          "6433:         }",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   return",
          "24: }",
          "25: sqlite3_fts5_may_be_corrupt 1",
          "27: proc create_t1 {} {",
          "28:   expr srand(0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: database_may_be_corrupt",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3012:   DELETE FROM t1 WHERE a MATCH 'fts*';",
          "3013: } {1 {database disk image is malformed}}",
          "3015: sqlite3_fts5_may_be_corrupt 0",
          "3016: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3016: #-------------------------------------------------------------------------",
          "3017: reset_db",
          "3018: do_test 28.0 {",
          "3019:   sqlite3 db {}",
          "3020:   db deserialize [decode_hexdb {",
          "3021: | size 40960 pagesize 4096 filename crash-e2d47e0624a42c.db",
          "3022: | page 1 offset 0",
          "3023: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "3024: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 0a   .....@  ........",
          "3025: |     32: 00 00 00 00 00 00 00 00 00 00 00 0d 00 00 00 04   ................",
          "3026: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "3027: |     96: 00 00 00 00 0d 00 00 00 0d 0b 6e 00 0f a3 0f 4c   ..........n....L",
          "3028: |    112: 0e e1 0e 81 0e 24 0d cc 0d 72 0d 1b 0c b0 0c 50   .....$...r.....P",
          "3029: |    128: 0b f8 0b b3 0b 6e 00 00 00 00 00 00 00 00 00 00   .....n..........",
          "3030: |   2912: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 43 0d   ..............C.",
          "3031: |   2928: 06 17 11 11 08 75 74 61 62 6c 65 74 34 74 34 43   .....utablet4t4C",
          "3032: |   2944: 52 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41   REATE VIRTUAL TA",
          "3033: |   2960: 42 4c 45 20 74 34 20 55 53 49 4e 47 20 66 74 73   BLE t4 USING fts",
          "3034: |   2976: 35 76 6f 63 61 62 28 27 74 32 27 2c 20 27 72 6f   5vocab('t2', 'ro",
          "3035: |   2992: 77 27 29 43 0c 06 17 11 11 08 75 74 61 62 6c 65   w')C......utable",
          "3036: |   3008: 74 33 74 33 43 52 45 41 54 45 20 56 49 52 54 55   t3t3CREATE VIRTU",
          "3037: |   3024: 41 4c 20 54 41 42 4c 45 20 74 33 20 55 53 49 4e   AL TABLE t3 USIN",
          "3038: |   3040: 47 20 66 74 73 35 76 6f 63 61 62 28 27 74 31 27   G fts5vocab('t1'",
          "3039: |   3056: 2c 20 27 72 6f 77 27 29 56 0b 06 17 1f 1f 01 7d   , 'row')V.......",
          "3040: |   3072: 74 61 62 6c 65 74 32 5f 63 6f 6e 66 69 67 74 32   tablet2_configt2",
          "3041: |   3088: 5f 63 6f 6e 66 69 67 0a 43 52 45 41 54 45 20 54   _config.CREATE T",
          "3042: |   3104: 41 42 4c 45 20 27 74 32 5f 63 6f 6e 66 69 67 27   ABLE 't2_config'",
          "3043: |   3120: 28 6b 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   (k PRIMARY KEY,",
          "3044: |   3136: 76 29 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44   v) WITHOUT ROWID",
          "3045: |   3152: 5e 0a 07 17 21 21 01 81 07 74 61 62 6c 65 74 32   ^...!!...tablet2",
          "3046: |   3168: 5f 63 6f 6e 74 65 6e 74 74 32 5f 63 6f 6e 74 65   _contentt2_conte",
          "3047: |   3184: 6e 74 09 43 52 45 41 54 45 20 54 41 42 4c 45 20   nt.CREATE TABLE",
          "3048: |   3200: 27 74 32 5f 63 6f 6e 74 65 6e 74 27 28 69 64 20   't2_content'(id",
          "3049: |   3216: 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59 20   INTEGER PRIMARY",
          "3050: |   3232: 4b 45 59 2c 20 63 30 2c 20 63 31 2c 20 63 32 29   KEY, c0, c1, c2)",
          "3051: |   3248: 69 09 07 17 19 19 01 81 2d 74 61 62 6c 65 74 32   i.......-tablet2",
          "3052: |   3264: 5f 69 64 78 74 32 5f 69 64 78 08 43 52 45 41 54   _idxt2_idx.CREAT",
          "3053: |   3280: 45 20 54 41 42 4c 45 20 27 74 32 5f 69 64 78 27   E TABLE 't2_idx'",
          "3054: |   3296: 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20 70 67   (segid, term, pg",
          "3055: |   3312: 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45 59 28   no, PRIMARY KEY(",
          "3056: |   3328: 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20 57 49   segid, term)) WI",
          "3057: |   3344: 54 48 4f 55 54 20 52 4f 57 49 44 55 08 07 17 1b   THOUT ROWIDU....",
          "3058: |   3360: 1b 01 81 01 74 61 62 6c 65 74 32 5f 64 61 74 61   ....tablet2_data",
          "3059: |   3376: 74 32 5f 64 61 74 61 07 43 52 45 41 54 45 20 54   t2_data.CREATE T",
          "3060: |   3392: 41 42 4c 45 20 27 74 32 5f 64 61 74 61 27 28 69   ABLE 't2_data'(i",
          "3061: |   3408: 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52   d INTEGER PRIMAR",
          "3062: |   3424: 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f   Y KEY, block BLO",
          "3063: |   3440: 42 29 58 07 07 17 11 11 08 81 1d 74 61 62 6c 65   B)X........table",
          "3064: |   3456: 74 32 74 32 43 52 45 41 54 45 20 56 49 52 54 55   t2t2CREATE VIRTU",
          "3065: |   3472: 41 4c 20 54 41 42 4c 45 20 74 32 20 55 53 49 4e   AL TABLE t2 USIN",
          "3066: |   3488: 47 20 66 74 73 35 28 27 61 27 2c 5b 62 5d 2c 22   G fts5('a',[b],.",
          "3067: |   3504: 63 22 2c 64 65 74 61 69 6c 3d 6e 6f 6e 65 2c 63   c.,detail=none,c",
          "3068: |   3520: 6f 6c 75 6d 6e 73 69 7a 65 3d 30 29 56 06 06 17   olumnsize=0)V...",
          "3069: |   3536: 1f 1f 01 7d 74 61 62 6c 65 74 31 5f 63 6f 6e 66   ....tablet1_conf",
          "3070: |   3552: 69 67 74 31 5f 63 6f 6e 66 69 67 06 43 52 45 41   igt1_config.CREA",
          "3071: |   3568: 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f 6e   TE TABLE 't1_con",
          "3072: |   3584: 66 69 67 27 28 6b 20 50 52 49 4d 41 52 59 20 4b   fig'(k PRIMARY K",
          "3073: |   3600: 45 59 2c 20 76 29 20 57 49 54 48 4f 55 54 20 52   EY, v) WITHOUT R",
          "3074: |   3616: 4f 57 49 44 5b 05 07 17 21 21 01 81 01 74 61 62   OWID[...!!...tab",
          "3075: |   3632: 6c 65 74 31 5f 64 6f 63 73 69 7a 65 74 31 5f 64   let1_docsizet1_d",
          "3076: |   3648: 6f 63 73 69 7a 65 05 43 52 45 41 54 45 20 54 41   ocsize.CREATE TA",
          "3077: |   3664: 42 4c 45 20 27 74 31 5f 64 6f 63 73 69 7a 65 27   BLE 't1_docsize'",
          "3078: |   3680: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "3079: |   3696: 41 52 59 20 4b 45 59 2c 20 73 7a 20 42 4c 4f 42   ARY KEY, sz BLOB",
          "3080: |   3712: 29 5e 04 07 17 21 21 01 81 07 74 61 62 6c 65 74   )^...!!...tablet",
          "3081: |   3728: 31 5f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1_contentt1_cont",
          "3082: |   3744: 65 6e 74 04 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "3083: |   3760: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 69 64    't1_content'(id",
          "3084: |   3776: 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59    INTEGER PRIMARY",
          "3085: |   3792: 20 4b 45 59 2c 20 63 30 2c 20 63 31 2c 20 63 32    KEY, c0, c1, c2",
          "3086: |   3808: 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65 74   )i.......-tablet",
          "3087: |   3824: 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45 41   1_idxt1_idx.CREA",
          "3088: |   3840: 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64 78   TE TABLE 't1_idx",
          "3089: |   3856: 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20 70   '(segid, term, p",
          "3090: |   3872: 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45 59   gno, PRIMARY KEY",
          "3091: |   3888: 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20 57   (segid, term)) W",
          "3092: |   3904: 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07 17   ITHOUT ROWIDU...",
          "3093: |   3920: 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61 74   .....tablet1_dat",
          "3094: |   3936: 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45 20   at1_data.CREATE",
          "3095: |   3952: 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27 28   TABLE 't1_data'(",
          "3096: |   3968: 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41   id INTEGER PRIMA",
          "3097: |   3984: 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c   RY KEY, block BL",
          "3098: |   4000: 4f 42 29 5b 01 07 17 11 11 08 81 23 74 61 62 6c   OB)[.......#tabl",
          "3099: |   4016: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "3100: |   4032: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "3101: |   4048: 4e 47 20 66 74 73 35 28 61 2c 62 20 75 6e 69 6e   NG fts5(a,b unin",
          "3102: |   4064: 64 65 78 65 64 2c 63 2c 74 6f 6b 65 6e 69 7a 65   dexed,c,tokenize",
          "3103: |   4080: 3d 22 70 6f 72 74 65 72 20 61 73 63 69 69 22 29   =.porter ascii.)",
          "3104: | page 2 offset 4096",
          "3105: |      0: 0d 0f 68 00 05 0f 13 00 0f e6 0f 13 0f a8 0f 7c   ..h............|",
          "3106: |     16: 0f 2a 00 00 00 00 00 00 00 00 00 00 00 00 00 00   .*..............",
          "3107: |   3856: 00 00 00 15 0a 03 00 30 00 00 00 00 01 03 03 00   .......0........",
          "3108: |   3872: 03 01 01 01 02 01 01 03 01 01 37 8c 80 80 80 80   ..........7.....",
          "3109: |   3888: 01 03 00 74 00 00 00 2e 02 30 61 03 02 02 01 01   ...t.....0a.....",
          "3110: |   3904: 62 03 02 03 01 01 63 03 02 04 01 01 67 03 06 01   b.....c.....g...",
          "3111: |   3920: 02 02 01 01 68 03 06 01 02 03 01 01 69 03 06 01   ....h.......i...",
          "3112: |   3936: 02 04 04 06 06 06 08 08 0f ef 00 14 2a 00 00 00   ............*...",
          "3113: |   3952: 00 01 02 02 00 02 01 01 01 02 01 01 25 88 80 80   ............%...",
          "3114: |   3968: 80 80 01 03 00 50 00 00 00 1f 02 30 67 02 08 02   .....P.....0g...",
          "3115: |   3984: 01 02 02 01 01 68 02 08 03 01 02 03 01 01 69 02   .....h........i.",
          "3116: |   4000: 08 04 01 02 04 04 09 09 37 84 80 80 80 80 01 03   ........7.......",
          "3117: |   4016: 00 74 00 00 00 2e 02 30 61 01 02 02 01 01 62 01   .t.....0a.....b.",
          "3118: |   4032: 02 03 01 01 63 01 02 04 01 01 67 01 06 01 02 20   ....c.....g....",
          "3119: |   4048: 10 16 80 10 60 10 20 30 10 16 90 10 60 10 20 40   ....`. 0....`. @",
          "3120: |   4064: 40 60 60 60 80 80 70 10 30 01 40 30 90 00 90 00   @```..p.0.@0....",
          "3121: |   4080: 00 01 12 40 00 00 00 00 10 10 10 00 10 10 10 10   ...@............",
          "3122: | page 3 offset 8192",
          "3123: |      0: a0 00 00 00 30 fe c0 00 ff a0 ff 30 fe 00 00 00   ....0......0....",
          "3124: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 06 04 01 0c   ................",
          "3125: |   4080: 01 03 02 06 04 01 0c 01 02 02 05 04 09 0c 01 02   ................",
          "3126: | page 4 offset 12288",
          "3127: |      0: 0d 00 00 00 03 0f be 00 0f ea 0f d4 0f be 00 00   ................",
          "3128: |   4016: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 14 03   ................",
          "3129: |   4032: 05 00 17 17 17 61 20 62 20 63 67 20 68 20 69 67   .....a b cg h ig",
          "3130: |   4048: 20 68 20 69 14 02 05 00 17 17 17 67 20 68 20 69    h i.......g h i",
          "3131: |   4064: 61 20 62 20 63 67 20 68 20 69 14 01 05 00 17 17   a b cg h i......",
          "3132: |   4080: 17 61 20 62 20 63 64 20 65 20 66 67 20 68 20 69   .a b cd e fg h i",
          "3133: | page 5 offset 16384",
          "3134: |      0: 0d 00 00 00 03 0f e8 00 0f f8 0f f0 0f e8 00 00   ................",
          "3135: |   4064: 00 00 00 00 00 00 00 00 06 03 03 00 12 03 00 03   ................",
          "3136: |   4080: 06 02 03 00 12 03 00 03 06 01 03 00 12 03 00 03   ................",
          "3137: | page 6 offset 20480",
          "3138: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "3139: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "3140: | page 7 offset 24576",
          "3141: |      0: 0d 00 00 00 03 0f 9e 00 0f e6 0f ef 0f 9e 00 00   ................",
          "3142: |   3984: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 41 84   ..............A.",
          "3143: |   4000: 80 80 80 80 01 04 00 81 06 00 00 00 34 02 30 61   ............4.0a",
          "3144: |   4016: 01 01 01 01 01 62 01 01 01 01 01 63 01 01 01 01   .....b.....c....",
          "3145: |   4032: 01 64 01 01 01 65 01 01 01 66 01 01 01 01 01 68   .d...e...f.....h",
          "3146: |   4048: 01 01 01 01 01 69 01 01 01 04 06 06 06 04 04 04   .....i..........",
          "3147: |   4064: 06 06 07 01 03 00 14 03 09 09 09 0f 0a 03 00 24   ...............$",
          "3148: |   4080: 00 00 00 00 01 01 01 00 01 01 01 01 0a 00 00 00   ................",
          "3149: | page 8 offset 28672",
          "3150: |      0: 01 0f fa 00 0f fa 00 00 00 00 00 00 00 00 00 00   ................",
          "3151: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "3152: | page 9 offset 32768",
          "3153: |      0: 0d 00 00 00 03 0f be 00 0f ea 0f d4 1f be 00 00   ................",
          "3154: |   4016: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 14 03   ................",
          "3155: |   4032: 05 00 17 17 17 61 20 62 20 63 67 20 68 20 69 67   .....a b cg h ig",
          "3156: |   4048: 20 68 20 69 14 02 05 00 17 17 17 67 20 68 20 69    h i.......g h i",
          "3157: |   4064: 61 20 62 20 63 67 20 68 20 69 14 01 05 00 17 17   a b cg h i......",
          "3158: |   4080: 17 61 20 62 20 63 64 20 65 20 66 67 20 68 20 69   .a b cd e fg h i",
          "3159: | page 10 offset 36864",
          "3160: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "3161: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "3162: | end crash-e2d47e0624a42c.db",
          "3163: }]} {}",
          "3165: do_catchsql_test 28.1 {",
          "3166:   SELECT count( fts5_decode(id, block) ) FROM t2_data;",
          "3167: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 383437be276719ac1c72688ae81017c63907ac561f2ffb8e42c43b012248f294",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ad07d96b69b031f5dd2cec52e0155d8bf0d5850",
      "candidate_info": {
        "commit_hash": "2ad07d96b69b031f5dd2cec52e0155d8bf0d5850",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2ad07d96b69b031f5dd2cec52e0155d8bf0d5850",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c",
          "test/skipscan1.test"
        ],
        "message": "Improved fix for ticket [ced41c7c7d6b4d36] that keeps skip-scan enabled, but avoids identifying a skip-scan as order-distinct (because it is not) and thus forces a separate b-tree to implement the DISTINCT clause of a query.  This undoes check-in [a871d69c6de65038] and substitutes a new fix.\n\nFossilOrigin-Name: 89bf0399e87be76e7b264e0a35e8a6d3af0f9e71123a929c20754882b636ca70",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c",
          "test/skipscan1.test||test/skipscan1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a871d69c6de65038360aa6142fbad22689fb347e526cca56bb83e695c1441fbe",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2723:    && pProbe->noSkipScan==0",
          "2724:    && OptimizationEnabled(db, SQLITE_SkipScan)",
          "2727:    && (rc = whereLoopResize(db, pNew, pNew->nLTerm+1))==SQLITE_OK",
          "2728:   ){",
          "2729:     LogEst nIter;",
          "",
          "[Removed Lines]",
          "2726:    && (pWInfo->wctrlFlags & (WHERE_WANT_DISTINCT|WHERE_DISTINCTBY))==0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3745:         assert( nColumn==nKeyCol+1 || !HasRowid(pIndex->pTable) );",
          "3746:         assert( pIndex->aiColumn[nColumn-1]==XN_ROWID",
          "3747:                           || !HasRowid(pIndex->pTable));",
          "3749:       }",
          "",
          "[Removed Lines]",
          "3748:         isOrderDistinct = IsUniqueIndex(pIndex);",
          "",
          "[Added Lines]",
          "3747:         isOrderDistinct = IsUniqueIndex(pIndex)",
          "3748:                           && (pLoop->wsFlags & WHERE_SKIPSCAN)==0;",
          "",
          "---------------"
        ],
        "test/skipscan1.test||test/skipscan1.test": [
          "File: test/skipscan1.test -> test/skipscan1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "374: } {}",
          "376: # 2019-07-29 Ticket ced41c7c7d6b4d36",
          "378: #",
          "379: db close",
          "380: sqlite3 db :memory:",
          "381: do_execsql_test skipscan1-3.1 {",
          "382:   CREATE TABLE t1 (c1, c2, c3, c4, PRIMARY KEY(c4, c3));",
          "386:   ANALYZE sqlite_master;",
          "387:   INSERT INTO sqlite_stat1 VALUES('t1','sqlite_autoindex_t1_1','18 18 6');",
          "388:   ANALYZE sqlite_master;",
          "389:   SELECT DISTINCT quote(c1), quote(c2), quote(c3), quote(c4), '|'",
          "390:     FROM t1 WHERE t1.c3 = 1;",
          "393: finish_test",
          "",
          "[Removed Lines]",
          "377: # Skip-scan is disabled for DISTINCT queries",
          "383:   INSERT INTO t1 VALUES(NULL,0,1,NULL);",
          "384:   INSERT INTO t1 VALUES(0,NULL,1,NULL);",
          "385:   INSERT INTO t1 VALUES(NULL,NULL,1,NULL);",
          "391: } {NULL 0 1 NULL | 0 NULL 1 NULL | NULL NULL 1 NULL |}",
          "",
          "[Added Lines]",
          "377: # A skipscan query is not order-distinct",
          "383:   INSERT INTO t1 VALUES(3,0,1,NULL);",
          "384:   INSERT INTO t1 VALUES(0,4,1,NULL);",
          "385:   INSERT INTO t1 VALUES(5,6,1,NULL);",
          "386:   INSERT INTO t1 VALUES(0,4,1,NULL);",
          "392: } {3 0 1 NULL | 0 4 1 NULL | 5 6 1 NULL |}",
          "393: do_eqp_test skipscan1-3.2 {",
          "394:   SELECT DISTINCT quote(c1), quote(c2), quote(c3), quote(c4), '|'",
          "395:     FROM t1 WHERE t1.c3 = 1;",
          "396: } {",
          "397:   QUERY PLAN",
          "398:   |--SEARCH TABLE t1 USING INDEX sqlite_autoindex_t1_1 (ANY(c4) AND c3=?)",
          "399:   `--USE TEMP B-TREE FOR DISTINCT",
          "400: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4cd292c2aa7e453ee3879d47df0c0503b47db75",
      "candidate_info": {
        "commit_hash": "d4cd292c2aa7e453ee3879d47df0c0503b47db75",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d4cd292c2aa7e453ee3879d47df0c0503b47db75",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c"
        ],
        "message": "Bug fix with INSERT using an explicit column list on a table with a non-final STORED column.\n\nFossilOrigin-Name: 61b4459ae6a6cc182c11abbc8b1dd629f77beb088d7ccad5e563d8d4769056df",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fe7517bf4d360597576ab9aba29627d7926d23f2bbbfb3e7bf4d32761617574c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "698:   if( pColumn ){",
          "699:     for(i=0; i<pColumn->nId; i++){",
          "700:       pColumn->a[i].idx = -1;",
          "",
          "[Removed Lines]",
          "697:   bIdListInOrder = (pTab->tabFlags & TF_OOOHidden)==0;",
          "",
          "[Added Lines]",
          "697:   bIdListInOrder = (pTab->tabFlags & (TF_OOOHidden|TF_HasStored))==0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad5536fca15959addf7f6a87785140d30cfc8b65",
      "candidate_info": {
        "commit_hash": "ad5536fca15959addf7f6a87785140d30cfc8b65",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ad5536fca15959addf7f6a87785140d30cfc8b65",
        "files": [
          "ext/rbu/rbumisc.test",
          "ext/rbu/sqlite3rbu.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Add another test case to cover a previously uncovered branch in the RBU module.\n\nFossilOrigin-Name: 30392985612c51d4583a905f8fe766f08cd31b86d0e30a977adc6a6705649e00",
        "before_after_code_files": [
          "ext/rbu/rbumisc.test||ext/rbu/rbumisc.test",
          "ext/rbu/sqlite3rbu.c||ext/rbu/sqlite3rbu.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rbu/rbumisc.test||ext/rbu/rbumisc.test": [
          "File: ext/rbu/rbumisc.test -> ext/rbu/rbumisc.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     INSERT INTO data_ VALUES(3, 3, 3, 0);",
          "44:     INSERT INTO dat VALUES(3, 3, 3, 0);",
          "45:   }",
          "46: } {}",
          "48: do_test 1.2 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:   rbu close",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:   db eval { SELECT * FROM x1 }",
          "51: } {1 1 1 2 2 2}",
          "53: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: do_test 1.3 {",
          "55:   db eval { DELETE FROM x1 }",
          "56:   sqlite3 rbu rbu.db",
          "57:   rbu eval { DELETE FROM rbu_state }",
          "58:   rbu close",
          "59:   step_rbu test.db rbu.db",
          "60:   db eval { SELECT * FROM x1 }",
          "61: } {1 1 1 2 2 2}",
          "63: do_test 1.4 {",
          "64:   db eval { DELETE FROM x1 }",
          "65:   sqlite3 rbu rbu.db",
          "66:   rbu eval { DELETE FROM rbu_state }",
          "67:   rbu close",
          "69:   sqlite3rbu rbu test.db rbu.db",
          "70:   rbu step",
          "71:   rbu step",
          "72:   rbu close",
          "74:   forcecopy test.db-oal test.db-wal",
          "75:   sqlite3rbu rbu test.db rbu.db",
          "76:   rbu step",
          "77:   list [catch { rbu close } msg] $msg",
          "78: } {1 {SQLITE_ERROR - cannot update wal mode database}}",
          "",
          "---------------"
        ],
        "ext/rbu/sqlite3rbu.c||ext/rbu/sqlite3rbu.c": [
          "File: ext/rbu/sqlite3rbu.c -> ext/rbu/sqlite3rbu.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5051:   if( rc==SQLITE_OK && flags==SQLITE_ACCESS_EXISTS ){",
          "5052:     rbu_file *pDb = rbuFindMaindb(pRbuVfs, zPath, 1);",
          "5054:       if( *pResOut ){",
          "5055:         rc = SQLITE_CANTOPEN;",
          "5056:       }else{",
          "",
          "[Removed Lines]",
          "5053:     if( pDb && pDb->pRbu && pDb->pRbu->eStage==RBU_STAGE_OAL ){",
          "",
          "[Added Lines]",
          "5053:     if( pDb && pDb->pRbu->eStage==RBU_STAGE_OAL ){",
          "5054:       assert( pDb->pRbu );",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 740201107ae802c12b678e388ea524db01ad0eb70601c78490ad63eae0fe6cf1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}