{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5ee32f27a618a013b3426ef0ae4e3daedb61b862",
      "candidate_info": {
        "commit_hash": "5ee32f27a618a013b3426ef0ae4e3daedb61b862",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5ee32f27a618a013b3426ef0ae4e3daedb61b862",
        "files": [
          "Configurations/descrip.mms.tmpl"
        ],
        "message": "VMS build file template: assign 'arch' to local symbol table\n\nSince the local symbol table is looked up before the global symbol\ntable, 'arch' assigned in the local symbol table of the DCL where MMS\nis called would be seen before the 'arch' defined in descrip.mms.\nAssigning it to the local symbol table in descrip.mms removes that\nissue.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1853)\n(cherry picked from commit 3ee24d4acaff1c247db89c5cfcac17749dc3d7bc)",
        "before_after_code_files": [
          "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl": [
          "File: Configurations/descrip.mms.tmpl -> Configurations/descrip.mms.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:         $(NODEBUG) !",
          "224:         $(NODEBUG) ! Figure out the architecture",
          "225:         $(NODEBUG) !",
          "227:         $(NODEBUG) !",
          "228:         $(NODEBUG) ! Set up logical names for the libraries, so LINK and",
          "229:         $(NODEBUG) ! running programs can use them.",
          "",
          "[Removed Lines]",
          "226:         $(NODEBUG) arch == f$edit( f$getsyi( \"arch_name\"), \"upcase\")",
          "",
          "[Added Lines]",
          "226:         $(NODEBUG) arch = f$edit( f$getsyi( \"arch_name\"), \"upcase\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c04b1434e6741cfc6b6c29db2c34b46f5ccd3d99",
      "candidate_info": {
        "commit_hash": "c04b1434e6741cfc6b6c29db2c34b46f5ccd3d99",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c04b1434e6741cfc6b6c29db2c34b46f5ccd3d99",
        "files": [
          "crypto/aes/asm/aesv8-armx.pl",
          "crypto/armv4cpuid.pl",
          "crypto/modes/asm/ghashv8-armx.pl"
        ],
        "message": "ARMv4 assembly pack: harmonize Thumb-ification of iOS build.\n\nThree modules were left behind in a285992763f3961f69a8d86bf7dfff020a08cef9.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2617)\n\n(cherry picked from commit c93f06c12f10c07cea935abd78a07a037e27f155)",
        "before_after_code_files": [
          "crypto/aes/asm/aesv8-armx.pl||crypto/aes/asm/aesv8-armx.pl",
          "crypto/armv4cpuid.pl||crypto/armv4cpuid.pl",
          "crypto/modes/asm/ghashv8-armx.pl||crypto/modes/asm/ghashv8-armx.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/aesv8-armx.pl||crypto/aes/asm/aesv8-armx.pl": [
          "File: crypto/aes/asm/aesv8-armx.pl -> crypto/aes/asm/aesv8-armx.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: .text",
          "60: ___",
          "61: $code.=\".arch armv8-a+crypto\\n\"   if ($flavour =~ /64/);",
          "66: # Assembler mnemonics are an eclectic mix of 32- and 64-bit syntax,",
          "67: # NEON is mostly 32-bit mnemonics, integer - mostly 64. Goal is to",
          "",
          "[Removed Lines]",
          "62: $code.=\".arch armv7-a\\n.fpu neon\\n.code 32\\n\" if ($flavour !~ /64/);",
          "63:   #^^^^^^ this is done to simplify adoption by not depending",
          "64:   # on latest binutils.",
          "",
          "[Added Lines]",
          "62: $code.=<<___      if ($flavour !~ /64/);",
          "63: .arch armv7-a // don't confuse not-so-latest binutils with argv8 :-)",
          "64: .fpu neon",
          "65: .code 32",
          "66: #undef __thumb2__",
          "67: ___",
          "",
          "---------------"
        ],
        "crypto/armv4cpuid.pl||crypto/armv4cpuid.pl": [
          "File: crypto/armv4cpuid.pl -> crypto/armv4cpuid.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: .thumb",
          "28: #else",
          "29: .code 32",
          "30: #endif",
          "32: .align 5",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: #undef __thumb2__",
          "",
          "---------------"
        ],
        "crypto/modes/asm/ghashv8-armx.pl||crypto/modes/asm/ghashv8-armx.pl": [
          "File: crypto/modes/asm/ghashv8-armx.pl -> crypto/modes/asm/ghashv8-armx.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: .text",
          "68: ___",
          "69: $code.=\".arch armv8-a+crypto\\n\" if ($flavour =~ /64/);",
          "72: ################################################################################",
          "73: # void gcm_init_v8(u128 Htable[16],const u64 H[2]);",
          "",
          "[Removed Lines]",
          "70: $code.=\".fpu neon\\n.code 32\\n\" if ($flavour !~ /64/);",
          "",
          "[Added Lines]",
          "70: $code.=<<___    if ($flavour !~ /64/);",
          "71: .fpu neon",
          "72: .code 32",
          "73: #undef __thumb2__",
          "74: ___",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a40b5be27e28eaf5a8be7193c8b6460bc6f851b4",
      "candidate_info": {
        "commit_hash": "a40b5be27e28eaf5a8be7193c8b6460bc6f851b4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a40b5be27e28eaf5a8be7193c8b6460bc6f851b4",
        "files": [
          "Configurations/unix-checker.pm",
          "Configurations/windows-checker.pm",
          "Configure"
        ],
        "message": "Add a platform specific configuration checker\n\nFor each platform, we may need to perform some basic checks to see\nthat available tools perform as we expect them.\n\nFor the moment, the added checkers test that Perl gives the expected\npath format.  This should help MingW users to see if they run an\nappropriate Perl implementation, for example.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2851)\n(cherry picked from commit d192a3aaeb76fc89f8285b4dc938c2bc0c37d0d4)",
        "before_after_code_files": [
          "Configurations/unix-checker.pm||Configurations/unix-checker.pm",
          "Configurations/windows-checker.pm||Configurations/windows-checker.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-checker.pm||Configurations/unix-checker.pm": [
          "File: Configurations/unix-checker.pm -> Configurations/unix-checker.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #! /usr/bin/perl",
          "3: use Config;",
          "5: # Check that the perl implementation file modules generate paths that",
          "6: # we expect for the platform",
          "7: use File::Spec::Functions qw(:DEFAULT rel2abs);",
          "9: if (rel2abs('.') !~ m|/|) {",
          "10:     die <<EOF;",
          "13: This perl implementation doesn't produce Unix like paths (with forward slash",
          "14: directory separators).  Please use an implementation that matches your",
          "15: building platform.",
          "17: This Perl version: $Config{version} for $Config{archname}",
          "19: EOF",
          "20: }",
          "22: 1;",
          "",
          "---------------"
        ],
        "Configurations/windows-checker.pm||Configurations/windows-checker.pm": [
          "File: Configurations/windows-checker.pm -> Configurations/windows-checker.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #! /usr/bin/perl",
          "3: use Config;",
          "5: # Check that the perl implementation file modules generate paths that",
          "6: # we expect for the platform",
          "7: use File::Spec::Functions qw(:DEFAULT rel2abs);",
          "9: if (rel2abs('.') !~ m|\\\\|) {",
          "10:     die <<EOF;",
          "13: This perl implementation doesn't produce Windows like paths (with backward",
          "14: slash directory separators).  Please use an implementation that matches your",
          "15: building platform.",
          "17: This Perl version: $Config{version} for $Config{archname}",
          "19: EOF",
          "20: }",
          "22: 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a0d86c0e33eb7893517bc11c6bde188e81d5290",
      "candidate_info": {
        "commit_hash": "5a0d86c0e33eb7893517bc11c6bde188e81d5290",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5a0d86c0e33eb7893517bc11c6bde188e81d5290",
        "files": [
          "test/asynctest.c"
        ],
        "message": "Add test to show wrong behavior of ASYNC_WAIT_CTX\n\nThis happens when a fd is added and then immediately removed from the\nASYNC_WAIT_CTX before pausing the job.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2581)\n(cherry picked from commit f44e63644d29e5908be52b7896d5031a5cf460eb)",
        "before_after_code_files": [
          "test/asynctest.c||test/asynctest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/asynctest.c||test/asynctest.c": [
          "File: test/asynctest.c -> test/asynctest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: {",
          "50:     ASYNC_JOB *job;",
          "51:     ASYNC_WAIT_CTX *waitctx;",
          "53:     job = ASYNC_get_current_job();",
          "54:     if (job == NULL)",
          "55:         return 0;",
          "56:     waitctx = ASYNC_get_wait_ctx(job);",
          "57:     if (waitctx == NULL)",
          "58:         return 0;",
          "59:     if (!ASYNC_WAIT_CTX_set_wait_fd(waitctx, waitctx, MAGIC_WAIT_FD, NULL, NULL))",
          "60:         return 0;",
          "61:     ASYNC_pause_job();",
          "63:     if (!ASYNC_WAIT_CTX_clear_fd(waitctx, waitctx))",
          "64:         return 0;",
          "",
          "[Removed Lines]",
          "52:     ASYNC_pause_job();",
          "",
          "[Added Lines]",
          "60:     ASYNC_pause_job();",
          "68:     if (!ASYNC_WAIT_CTX_clear_fd(waitctx, waitctx))",
          "69:         return 0;",
          "70:     ASYNC_pause_job();",
          "73:     if (!ASYNC_WAIT_CTX_set_wait_fd(waitctx, waitctx, MAGIC_WAIT_FD, NULL, NULL))",
          "74:         return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "195:             || fd != MAGIC_WAIT_FD",
          "197:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, NULL,",
          "199:             || numfds != 1",
          "200:             || numdelfds != 0",
          "201:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, &fd, &numfds, NULL,",
          "202:                                                &numdelfds)",
          "203:             || fd != MAGIC_WAIT_FD",
          "205:             || ASYNC_start_job(&job, waitctx, &funcret, waitfd, NULL, 0)",
          "207:             || !ASYNC_WAIT_CTX_get_all_fds(waitctx, NULL, &numfds)",
          "208:             || numfds != 0",
          "209:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, NULL,",
          "",
          "[Removed Lines]",
          "198:                                               &numdelfds)",
          "206:                 != ASYNC_FINISH",
          "",
          "[Added Lines]",
          "210:                                                &numdelfds)",
          "218:                 != ASYNC_PAUSE",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "213:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, &delfd,",
          "214:                                                &numdelfds)",
          "215:             || delfd != MAGIC_WAIT_FD",
          "216:             || funcret != 1) {",
          "217:         fprintf(stderr, \"test_ASYNC_get_wait_fd() failed\\n\");",
          "218:         ASYNC_WAIT_CTX_free(waitctx);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "229:             || ASYNC_start_job(&job, waitctx, &funcret, waitfd, NULL, 0)",
          "230:                 != ASYNC_FINISH",
          "231:             || !ASYNC_WAIT_CTX_get_all_fds(waitctx, NULL, &numfds)",
          "232:             || numfds != 0",
          "233:             || !ASYNC_WAIT_CTX_get_changed_fds(waitctx, NULL, &numfds, NULL,",
          "234:                                                &numdelfds)",
          "235:             || numfds != 0",
          "236:             || numdelfds != 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5af2ad682e809c04bdc79357ac8cb6571139e098",
      "candidate_info": {
        "commit_hash": "5af2ad682e809c04bdc79357ac8cb6571139e098",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5af2ad682e809c04bdc79357ac8cb6571139e098",
        "files": [
          "ssl/t1_lib.c"
        ],
        "message": "Implement length checks as a macro\n\nReplace the various length checks in the extension code with a macro to\nsimplify the logic.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #include \"ssl_locl.h\"",
          "21: #include <openssl/ct.h>",
          "23: static int tls_decrypt_ticket(SSL *s, const unsigned char *tick, int ticklen,",
          "24:                               const unsigned char *sess_id, int sesslen,",
          "25:                               SSL_SESSION **psess);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #define CHECKLEN(curr, val, limit) \\",
          "25:     (((curr) >= (limit)) || (size_t)((limit) - (curr)) < (size_t)(val))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1049:             return NULL;",
          "1050:         }",
          "1053:             return NULL;",
          "1055:         s2n(TLSEXT_TYPE_renegotiate, ret);",
          "",
          "[Removed Lines]",
          "1052:         if (ret >= limit || limit - ret < 4 + el)",
          "",
          "[Added Lines]",
          "1056:         if (CHECKLEN(ret, 4 + el, limit))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1081:         size_str = strlen(s->tlsext_hostname);",
          "1083:             return NULL;",
          "",
          "[Removed Lines]",
          "1082:         if (ret >= limit || (size_t)(limit - ret) < 9 + size_str)",
          "",
          "[Added Lines]",
          "1086:         if (CHECKLEN(ret, 9 + size_str, limit))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1116:             return NULL;",
          "",
          "[Removed Lines]",
          "1115:         if (ret >= limit || (size_t)(limit - ret) < 5 + login_len)",
          "",
          "[Added Lines]",
          "1119:         if (CHECKLEN(ret, 5 + login_len, limit))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1150:             return NULL;",
          "1152:         s2n(TLSEXT_TYPE_ec_point_formats, ret);",
          "",
          "[Removed Lines]",
          "1149:         if (ret >= limit || (size_t)(limit - ret) < 5 + num_formats)",
          "",
          "[Added Lines]",
          "1153:         if (CHECKLEN(ret, 5 + num_formats, limit))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1177:             return NULL;",
          "1179:         s2n(TLSEXT_TYPE_elliptic_curves, ret);",
          "",
          "[Removed Lines]",
          "1176:         if (ret >= limit || (size_t)(limit - ret) < 6 + (num_curves * 2))",
          "",
          "[Added Lines]",
          "1180:         if (CHECKLEN(ret, 6 + (num_curves * 2), limit))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1220:             return NULL;",
          "1221:         s2n(TLSEXT_TYPE_session_ticket, ret);",
          "1222:         s2n(ticklen, ret);",
          "",
          "[Removed Lines]",
          "1219:         if (ret >= limit || (size_t)(limit - ret) < 4 + ticklen)",
          "",
          "[Added Lines]",
          "1223:         if (CHECKLEN(ret, 4 + ticklen, limit))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1243:             return NULL;",
          "1244:         s2n(TLSEXT_TYPE_signature_algorithms, ret);",
          "1245:         etmp = ret;",
          "",
          "[Removed Lines]",
          "1242:         if (ret >= limit || (size_t)(limit - ret) < salglen + 6)",
          "",
          "[Added Lines]",
          "1246:         if (CHECKLEN(ret, salglen + 6, limit))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1288:             return NULL;",
          "1290:         s2n(TLSEXT_TYPE_status_request, ret);",
          "",
          "[Removed Lines]",
          "1287:         if (ret >= limit || (size_t)(limit - ret) < 9 + idlen + extlen)",
          "",
          "[Added Lines]",
          "1293:         if (CHECKLEN(ret, 9 + idlen + extlen, limit))",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1319:             return NULL;",
          "1321:         s2n(TLSEXT_TYPE_heartbeat, ret);",
          "",
          "[Removed Lines]",
          "1318:         if (ret >= limit || limit - ret < 5)",
          "",
          "[Added Lines]",
          "1324:         if (CHECKLEN(ret, 5, limit))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1347:             return NULL;",
          "1348:         s2n(TLSEXT_TYPE_next_proto_neg, ret);",
          "1349:         s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1346:         if (ret >= limit || limit - ret < 4)",
          "",
          "[Added Lines]",
          "1352:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1366:             return NULL;",
          "1367:         s2n(TLSEXT_TYPE_application_layer_protocol_negotiation, ret);",
          "1368:         s2n(2 + s->alpn_client_proto_list_len, ret);",
          "",
          "[Removed Lines]",
          "1365:         if (ret >= limit || limit - ret < 6 + s->alpn_client_proto_list_len)",
          "",
          "[Added Lines]",
          "1371:         if (CHECKLEN(ret, 6 + s->alpn_client_proto_list_len, limit))",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1390:             return NULL;",
          "1392:         s2n(TLSEXT_TYPE_use_srtp, ret);",
          "",
          "[Removed Lines]",
          "1389:         if (ret >= limit || limit - ret < 4 + el)",
          "",
          "[Added Lines]",
          "1395:         if (CHECKLEN(ret, 4 + el, limit))",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1418:             return NULL;",
          "1419:         s2n(TLSEXT_TYPE_encrypt_then_mac, ret);",
          "1420:         s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1417:         if (ret >= limit || limit - ret < 4 )",
          "",
          "[Added Lines]",
          "1423:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1430:             return NULL;",
          "1432:         s2n(TLSEXT_TYPE_signed_certificate_timestamp, ret);",
          "",
          "[Removed Lines]",
          "1429:         if (ret >= limit || limit - ret < 4 )",
          "",
          "[Added Lines]",
          "1435:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1442:         return NULL;",
          "1443:     s2n(TLSEXT_TYPE_extended_master_secret, ret);",
          "1444:     s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1441:     if (ret >= limit || limit - ret < 4 )",
          "",
          "[Added Lines]",
          "1447:     if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1472:                 return NULL;",
          "1473:             s2n(TLSEXT_TYPE_padding, ret);",
          "1474:             s2n(hlen, ret);",
          "",
          "[Removed Lines]",
          "1471:             if (ret >= limit || limit - ret < 4 + hlen)",
          "",
          "[Added Lines]",
          "1477:             if (CHECKLEN(ret, 4 + hlen, limit))",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1523:             return NULL;",
          "1525:         s2n(TLSEXT_TYPE_renegotiate, ret);",
          "",
          "[Removed Lines]",
          "1522:         if (ret >= limit || limit - ret < 4 + el)",
          "",
          "[Added Lines]",
          "1528:         if (CHECKLEN(ret, 4 + el, limit))",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1547:             return NULL;",
          "1549:         s2n(TLSEXT_TYPE_server_name, ret);",
          "",
          "[Removed Lines]",
          "1546:         if (ret >= limit || limit - ret < 4 )",
          "",
          "[Added Lines]",
          "1552:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1574:             return NULL;",
          "1576:         s2n(TLSEXT_TYPE_ec_point_formats, ret);",
          "",
          "[Removed Lines]",
          "1573:         if (ret >= limit || (size_t)(limit - ret) < 5 + plistlen)",
          "",
          "[Added Lines]",
          "1579:         if (CHECKLEN(ret, 5 + plistlen, limit))",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1595:             return NULL;",
          "1596:         s2n(TLSEXT_TYPE_session_ticket, ret);",
          "1597:         s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1594:         if (ret >= limit || limit - ret < 4)",
          "",
          "[Added Lines]",
          "1600:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1612:             return NULL;",
          "1613:         s2n(TLSEXT_TYPE_status_request, ret);",
          "1614:         s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1611:         if (ret >= limit || limit - ret < 4)",
          "",
          "[Added Lines]",
          "1617:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1631:             return NULL;",
          "1633:         s2n(TLSEXT_TYPE_use_srtp, ret);",
          "",
          "[Removed Lines]",
          "1630:         if (ret >= limit || limit - ret < 4 + el)",
          "",
          "[Added Lines]",
          "1636:         if (CHECKLEN(ret, 4 + el, limit))",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1654:         };",
          "1658:             return NULL;",
          "1659:         memcpy(ret, cryptopro_ext, sizeof(cryptopro_ext));",
          "1660:         ret += sizeof(cryptopro_ext);",
          "",
          "[Removed Lines]",
          "1657:         if (ret >= limit || (size_t)(limit - ret) < sizeof(cryptopro_ext))",
          "",
          "[Added Lines]",
          "1663:         if (CHECKLEN(ret, sizeof(cryptopro_ext), limit))",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1672:             return NULL;",
          "1673:         s2n(TLSEXT_TYPE_heartbeat, ret);",
          "1674:         s2n(1, ret);",
          "",
          "[Removed Lines]",
          "1671:         if (ret >= limit || limit - ret < 5)",
          "",
          "[Added Lines]",
          "1677:         if (CHECKLEN(ret, 5, limit))",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1706:                 return NULL;",
          "1707:             s2n(TLSEXT_TYPE_next_proto_neg, ret);",
          "1708:             s2n(npalen, ret);",
          "",
          "[Removed Lines]",
          "1705:             if (ret >= limit || limit - ret < 4 + npalen)",
          "",
          "[Added Lines]",
          "1711:             if (CHECKLEN(ret, 4 + npalen, limit))",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1733:                 return NULL;",
          "1734:             s2n(TLSEXT_TYPE_encrypt_then_mac, ret);",
          "1735:             s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1732:             if (ret >= limit || limit - ret < 4)",
          "",
          "[Added Lines]",
          "1738:             if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1744:             return NULL;",
          "1745:         s2n(TLSEXT_TYPE_extended_master_secret, ret);",
          "1746:         s2n(0, ret);",
          "",
          "[Removed Lines]",
          "1743:         if (ret >= limit || limit - ret < 4)",
          "",
          "[Added Lines]",
          "1749:         if (CHECKLEN(ret, 4, limit))",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1761:             return NULL;",
          "1762:         s2n(TLSEXT_TYPE_application_layer_protocol_negotiation, ret);",
          "1763:         s2n(3 + len, ret);",
          "",
          "[Removed Lines]",
          "1760:         if (ret >= limit || (size_t)(limit - ret) < 7 + len)",
          "",
          "[Added Lines]",
          "1766:         if (CHECKLEN(ret, 7 + len, limit))",
          "",
          "---------------"
        ]
      }
    }
  ]
}