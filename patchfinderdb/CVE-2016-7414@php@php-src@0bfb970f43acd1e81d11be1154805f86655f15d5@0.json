{
  "cve_id": "CVE-2016-7414",
  "cve_desc": "The ZIP signature-verification feature in PHP before 5.6.26 and 7.x before 7.0.11 does not ensure that the uncompressed_filesize field is large enough, which allows remote attackers to cause a denial of service (out-of-bounds memory access) or possibly have unspecified other impact via a crafted PHAR archive, related to ext/phar/util.c and ext/phar/zip.c.",
  "repo": "php/php-src",
  "patch_hash": "0bfb970f43acd1e81d11be1154805f86655f15d5",
  "patch_info": {
    "commit_hash": "0bfb970f43acd1e81d11be1154805f86655f15d5",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/0bfb970f43acd1e81d11be1154805f86655f15d5",
    "files": [
      "ext/phar/tests/bug72928.phpt",
      "ext/phar/tests/bug72928.zip",
      "ext/phar/util.c",
      "ext/phar/zip.c"
    ],
    "message": "Fix bug #72928 - Out of bound when verify signature of zip phar in phar_parse_zipfile\n\n(cherry picked from commit 19484ab77466f99c78fc0e677f7e03da0584d6a2)",
    "before_after_code_files": [
      "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt",
      "ext/phar/util.c||ext/phar/util.c",
      "ext/phar/zip.c||ext/phar/zip.c"
    ]
  },
  "patch_diff": {
    "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt": [
      "File: ext/phar/tests/bug72928.phpt -> ext/phar/tests/bug72928.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Phar: #72928 (Out of bound when verify signature of zip phar in phar_parse_zipfile)",
      "3: --SKIPIF--",
      "4: <?php if (!extension_loaded(\"phar\")) die(\"skip\"); ?>",
      "5: --FILE--",
      "6: <?php",
      "7: chdir(__DIR__);",
      "8: try {",
      "9: $phar = new PharData('bug72928.zip');",
      "10: var_dump($phar);",
      "11: } catch(UnexpectedValueException $e) {",
      "12:  print $e->getMessage().\"\\n\";",
      "13: }",
      "14: ?>",
      "15: DONE",
      "16: --EXPECTF--",
      "17: phar error: signature cannot be read in zip-based phar \"%sbug72928.zip\"",
      "18: DONE",
      "",
      "---------------"
    ],
    "ext/phar/util.c||ext/phar/util.c": [
      "File: ext/phar/util.c -> ext/phar/util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1609:    unsigned char digest[64];",
      "1610:    PHP_SHA512_CTX context;",
      "1612:    PHP_SHA512Init(&context);",
      "1613:    read_len = end_of_phar;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1612:    if (sig_len < sizeof(digest)) {",
      "1613:     if (error) {",
      "1614:      spprintf(error, 0, \"broken signature\");",
      "1615:     }",
      "1616:     return FAILURE;",
      "1617:    }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1642:    unsigned char digest[32];",
      "1643:    PHP_SHA256_CTX context;",
      "1645:    PHP_SHA256Init(&context);",
      "1646:    read_len = end_of_phar;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1652:    if (sig_len < sizeof(digest)) {",
      "1653:     if (error) {",
      "1654:      spprintf(error, 0, \"broken signature\");",
      "1655:     }",
      "1656:     return FAILURE;",
      "1657:    }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1683:    unsigned char digest[20];",
      "1684:    PHP_SHA1_CTX  context;",
      "1686:    PHP_SHA1Init(&context);",
      "1687:    read_len = end_of_phar;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1700:    if (sig_len < sizeof(digest)) {",
      "1701:     if (error) {",
      "1702:      spprintf(error, 0, \"broken signature\");",
      "1703:     }",
      "1704:     return FAILURE;",
      "1705:    }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1716:    unsigned char digest[16];",
      "1717:    PHP_MD5_CTX   context;",
      "1719:    PHP_MD5Init(&context);",
      "1720:    read_len = end_of_phar;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1740:    if (sig_len < sizeof(digest)) {",
      "1741:     if (error) {",
      "1742:      spprintf(error, 0, \"broken signature\");",
      "1743:     }",
      "1744:     return FAILURE;",
      "1745:    }",
      "",
      "---------------"
    ],
    "ext/phar/zip.c||ext/phar/zip.c": [
      "File: ext/phar/zip.c -> ext/phar/zip.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "418:    php_stream_seek(fp, sizeof(phar_zip_file_header) + entry.header_offset + entry.filename_len + PHAR_GET_16(zipentry.extra_len), SEEK_SET);",
      "419:    sig = (char *) emalloc(entry.uncompressed_filesize);",
      "420:    read = php_stream_read(fp, sig, entry.uncompressed_filesize);",
      "422:     php_stream_close(sigfile);",
      "423:     efree(sig);",
      "424:     PHAR_ZIP_FAIL(\"signature cannot be read\");",
      "",
      "[Removed Lines]",
      "421:    if (read != entry.uncompressed_filesize) {",
      "",
      "[Added Lines]",
      "421:    if (read != entry.uncompressed_filesize || read <= 8) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "223266e4e46b9188353db93771369078c2e94353",
      "candidate_info": {
        "commit_hash": "223266e4e46b9188353db93771369078c2e94353",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/223266e4e46b9188353db93771369078c2e94353",
        "files": [
          "ext/phar/tests/bug72928.phpt",
          "ext/phar/tests/bug72928.zip",
          "ext/phar/util.c",
          "ext/phar/zip.c"
        ],
        "message": "Fix bug #72928 - Out of bound when verify signature of zip phar in phar_parse_zipfile",
        "before_after_code_files": [
          "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt",
          "ext/phar/util.c||ext/phar/util.c",
          "ext/phar/zip.c||ext/phar/zip.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt",
            "ext/phar/util.c||ext/phar/util.c",
            "ext/phar/zip.c||ext/phar/zip.c"
          ],
          "candidate": [
            "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt",
            "ext/phar/util.c||ext/phar/util.c",
            "ext/phar/zip.c||ext/phar/zip.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt": [
          "File: ext/phar/tests/bug72928.phpt -> ext/phar/tests/bug72928.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Phar: #72928 (Out of bound when verify signature of zip phar in phar_parse_zipfile)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"phar\")) die(\"skip\"); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: chdir(__DIR__);",
          "8: try {",
          "9: $phar = new PharData('bug72928.zip');",
          "10: var_dump($phar);",
          "11: } catch(UnexpectedValueException $e) {",
          "12:  print $e->getMessage().\"\\n\";",
          "13: }",
          "14: ?>",
          "15: DONE",
          "16: --EXPECTF--",
          "17: phar error: signature cannot be read in zip-based phar \"%sbug72928.zip\"",
          "18: DONE",
          "",
          "---------------"
        ],
        "ext/phar/util.c||ext/phar/util.c": [
          "File: ext/phar/util.c -> ext/phar/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1650:    unsigned char digest[64];",
          "1651:    PHP_SHA512_CTX context;",
          "1653:    PHP_SHA512Init(&context);",
          "1654:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1653:    if (sig_len < sizeof(digest)) {",
          "1654:     if (error) {",
          "1655:      spprintf(error, 0, \"broken signature\");",
          "1656:     }",
          "1657:     return FAILURE;",
          "1658:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1683:    unsigned char digest[32];",
          "1684:    PHP_SHA256_CTX context;",
          "1686:    PHP_SHA256Init(&context);",
          "1687:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1693:    if (sig_len < sizeof(digest)) {",
          "1694:     if (error) {",
          "1695:      spprintf(error, 0, \"broken signature\");",
          "1696:     }",
          "1697:     return FAILURE;",
          "1698:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1724:    unsigned char digest[20];",
          "1725:    PHP_SHA1_CTX  context;",
          "1727:    PHP_SHA1Init(&context);",
          "1728:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1741:    if (sig_len < sizeof(digest)) {",
          "1742:     if (error) {",
          "1743:      spprintf(error, 0, \"broken signature\");",
          "1744:     }",
          "1745:     return FAILURE;",
          "1746:    }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1757:    unsigned char digest[16];",
          "1758:    PHP_MD5_CTX   context;",
          "1760:    PHP_MD5Init(&context);",
          "1761:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1781:    if (sig_len < sizeof(digest)) {",
          "1782:     if (error) {",
          "1783:      spprintf(error, 0, \"broken signature\");",
          "1784:     }",
          "1785:     return FAILURE;",
          "1786:    }",
          "",
          "---------------"
        ],
        "ext/phar/zip.c||ext/phar/zip.c": [
          "File: ext/phar/zip.c -> ext/phar/zip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "430:    php_stream_seek(fp, sizeof(phar_zip_file_header) + entry.header_offset + entry.filename_len + PHAR_GET_16(zipentry.extra_len), SEEK_SET);",
          "431:    sig = (char *) emalloc(entry.uncompressed_filesize);",
          "432:    read = php_stream_read(fp, sig, entry.uncompressed_filesize);",
          "434:     php_stream_close(sigfile);",
          "435:     efree(sig);",
          "436:     PHAR_ZIP_FAIL(\"signature cannot be read\");",
          "",
          "[Removed Lines]",
          "433:    if (read != entry.uncompressed_filesize) {",
          "",
          "[Added Lines]",
          "433:    if (read != entry.uncompressed_filesize || read <= 8) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "19484ab77466f99c78fc0e677f7e03da0584d6a2",
      "candidate_info": {
        "commit_hash": "19484ab77466f99c78fc0e677f7e03da0584d6a2",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/19484ab77466f99c78fc0e677f7e03da0584d6a2",
        "files": [
          "ext/phar/tests/bug72928.phpt",
          "ext/phar/tests/bug72928.zip",
          "ext/phar/util.c",
          "ext/phar/zip.c"
        ],
        "message": "Fix bug #72928 - Out of bound when verify signature of zip phar in phar_parse_zipfile",
        "before_after_code_files": [
          "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt",
          "ext/phar/util.c||ext/phar/util.c",
          "ext/phar/zip.c||ext/phar/zip.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [
            "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt",
            "ext/phar/util.c||ext/phar/util.c",
            "ext/phar/zip.c||ext/phar/zip.c"
          ],
          "candidate": [
            "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt",
            "ext/phar/util.c||ext/phar/util.c",
            "ext/phar/zip.c||ext/phar/zip.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt": [
          "File: ext/phar/tests/bug72928.phpt -> ext/phar/tests/bug72928.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Phar: #72928 (Out of bound when verify signature of zip phar in phar_parse_zipfile)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"phar\")) die(\"skip\"); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: chdir(__DIR__);",
          "8: try {",
          "9: $phar = new PharData('bug72928.zip');",
          "10: var_dump($phar);",
          "11: } catch(UnexpectedValueException $e) {",
          "12:  print $e->getMessage().\"\\n\";",
          "13: }",
          "14: ?>",
          "15: DONE",
          "16: --EXPECTF--",
          "17: phar error: signature cannot be read in zip-based phar \"%sbug72928.zip\"",
          "18: DONE",
          "",
          "---------------"
        ],
        "ext/phar/util.c||ext/phar/util.c": [
          "File: ext/phar/util.c -> ext/phar/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1650:    unsigned char digest[64];",
          "1651:    PHP_SHA512_CTX context;",
          "1653:    PHP_SHA512Init(&context);",
          "1654:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1653:    if (sig_len < sizeof(digest)) {",
          "1654:     if (error) {",
          "1655:      spprintf(error, 0, \"broken signature\");",
          "1656:     }",
          "1657:     return FAILURE;",
          "1658:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1683:    unsigned char digest[32];",
          "1684:    PHP_SHA256_CTX context;",
          "1686:    PHP_SHA256Init(&context);",
          "1687:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1693:    if (sig_len < sizeof(digest)) {",
          "1694:     if (error) {",
          "1695:      spprintf(error, 0, \"broken signature\");",
          "1696:     }",
          "1697:     return FAILURE;",
          "1698:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1724:    unsigned char digest[20];",
          "1725:    PHP_SHA1_CTX  context;",
          "1727:    PHP_SHA1Init(&context);",
          "1728:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1741:    if (sig_len < sizeof(digest)) {",
          "1742:     if (error) {",
          "1743:      spprintf(error, 0, \"broken signature\");",
          "1744:     }",
          "1745:     return FAILURE;",
          "1746:    }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1757:    unsigned char digest[16];",
          "1758:    PHP_MD5_CTX   context;",
          "1760:    PHP_MD5Init(&context);",
          "1761:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1781:    if (sig_len < sizeof(digest)) {",
          "1782:     if (error) {",
          "1783:      spprintf(error, 0, \"broken signature\");",
          "1784:     }",
          "1785:     return FAILURE;",
          "1786:    }",
          "",
          "---------------"
        ],
        "ext/phar/zip.c||ext/phar/zip.c": [
          "File: ext/phar/zip.c -> ext/phar/zip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "430:    php_stream_seek(fp, sizeof(phar_zip_file_header) + entry.header_offset + entry.filename_len + PHAR_GET_16(zipentry.extra_len), SEEK_SET);",
          "431:    sig = (char *) emalloc(entry.uncompressed_filesize);",
          "432:    read = php_stream_read(fp, sig, entry.uncompressed_filesize);",
          "434:     php_stream_close(sigfile);",
          "435:     efree(sig);",
          "436:     PHAR_ZIP_FAIL(\"signature cannot be read\");",
          "",
          "[Removed Lines]",
          "433:    if (read != entry.uncompressed_filesize) {",
          "",
          "[Added Lines]",
          "433:    if (read != entry.uncompressed_filesize || read <= 8) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dd69327ad783ea93f1e0a9e358974c7b098f29cc",
      "candidate_info": {
        "commit_hash": "dd69327ad783ea93f1e0a9e358974c7b098f29cc",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/dd69327ad783ea93f1e0a9e358974c7b098f29cc",
        "files": [
          "ext/phar/tests/bug72928.phpt",
          "ext/phar/tests/bug72928.zip",
          "ext/phar/util.c",
          "ext/phar/zip.c"
        ],
        "message": "Fix bug #72928 - Out of bound when verify signature of zip phar in phar_parse_zipfile",
        "before_after_code_files": [
          "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt",
          "ext/phar/util.c||ext/phar/util.c",
          "ext/phar/zip.c||ext/phar/zip.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt",
            "ext/phar/util.c||ext/phar/util.c",
            "ext/phar/zip.c||ext/phar/zip.c"
          ],
          "candidate": [
            "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt",
            "ext/phar/util.c||ext/phar/util.c",
            "ext/phar/zip.c||ext/phar/zip.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/phar/tests/bug72928.phpt||ext/phar/tests/bug72928.phpt": [
          "File: ext/phar/tests/bug72928.phpt -> ext/phar/tests/bug72928.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Phar: #72928 (Out of bound when verify signature of zip phar in phar_parse_zipfile)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"phar\")) die(\"skip\"); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: chdir(__DIR__);",
          "8: try {",
          "9: $phar = new PharData('bug72928.zip');",
          "10: var_dump($phar);",
          "11: } catch(UnexpectedValueException $e) {",
          "12:  print $e->getMessage().\"\\n\";",
          "13: }",
          "14: ?>",
          "15: DONE",
          "16: --EXPECTF--",
          "17: phar error: signature cannot be read in zip-based phar \"%sbug72928.zip\"",
          "18: DONE",
          "",
          "---------------"
        ],
        "ext/phar/util.c||ext/phar/util.c": [
          "File: ext/phar/util.c -> ext/phar/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1650:    unsigned char digest[64];",
          "1651:    PHP_SHA512_CTX context;",
          "1653:    PHP_SHA512Init(&context);",
          "1654:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1653:    if (sig_len < sizeof(digest)) {",
          "1654:     if (error) {",
          "1655:      spprintf(error, 0, \"broken signature\");",
          "1656:     }",
          "1657:     return FAILURE;",
          "1658:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1683:    unsigned char digest[32];",
          "1684:    PHP_SHA256_CTX context;",
          "1686:    PHP_SHA256Init(&context);",
          "1687:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1693:    if (sig_len < sizeof(digest)) {",
          "1694:     if (error) {",
          "1695:      spprintf(error, 0, \"broken signature\");",
          "1696:     }",
          "1697:     return FAILURE;",
          "1698:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1724:    unsigned char digest[20];",
          "1725:    PHP_SHA1_CTX  context;",
          "1727:    PHP_SHA1Init(&context);",
          "1728:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1741:    if (sig_len < sizeof(digest)) {",
          "1742:     if (error) {",
          "1743:      spprintf(error, 0, \"broken signature\");",
          "1744:     }",
          "1745:     return FAILURE;",
          "1746:    }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1757:    unsigned char digest[16];",
          "1758:    PHP_MD5_CTX   context;",
          "1760:    PHP_MD5Init(&context);",
          "1761:    read_len = end_of_phar;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1781:    if (sig_len < sizeof(digest)) {",
          "1782:     if (error) {",
          "1783:      spprintf(error, 0, \"broken signature\");",
          "1784:     }",
          "1785:     return FAILURE;",
          "1786:    }",
          "",
          "---------------"
        ],
        "ext/phar/zip.c||ext/phar/zip.c": [
          "File: ext/phar/zip.c -> ext/phar/zip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "430:    php_stream_seek(fp, sizeof(phar_zip_file_header) + entry.header_offset + entry.filename_len + PHAR_GET_16(zipentry.extra_len), SEEK_SET);",
          "431:    sig = (char *) emalloc(entry.uncompressed_filesize);",
          "432:    read = php_stream_read(fp, sig, entry.uncompressed_filesize);",
          "434:     php_stream_close(sigfile);",
          "435:     efree(sig);",
          "436:     PHAR_ZIP_FAIL(\"signature cannot be read\");",
          "",
          "[Removed Lines]",
          "433:    if (read != entry.uncompressed_filesize) {",
          "",
          "[Added Lines]",
          "433:    if (read != entry.uncompressed_filesize || read <= 8) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}