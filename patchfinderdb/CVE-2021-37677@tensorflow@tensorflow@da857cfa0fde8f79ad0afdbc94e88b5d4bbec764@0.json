{
  "cve_id": "CVE-2021-37677",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions the shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values. We have patched the issue in GitHub commit da857cfa0fde8f79ad0afdbc94e88b5d4bbec764. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "da857cfa0fde8f79ad0afdbc94e88b5d4bbec764",
  "patch_info": {
    "commit_hash": "da857cfa0fde8f79ad0afdbc94e88b5d4bbec764",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764",
    "files": [
      "tensorflow/core/ops/array_ops.cc"
    ],
    "message": "Fix a shape inference issue leading to nullptr deref.\n\nPiperOrigin-RevId: 387712259\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1",
    "before_after_code_files": [
      "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
      "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "2990:       if (!s.ok() && s.code() != error::NOT_FOUND) {",
      "2991:         return s;",
      "2992:       }",
      "2993:       const int minmax_rank = (axis == -1) ? 0 : 1;",
      "2994:       TF_RETURN_IF_ERROR(shape_inference::UnchangedShape(c));",
      "2995:       ShapeHandle minmax;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2993:       if (axis < -1) {",
      "2994:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
      "2995:                                        axis);",
      "2996:       }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0e2ba740330e5495d0f252b497039e498154897a",
      "candidate_info": {
        "commit_hash": "0e2ba740330e5495d0f252b497039e498154897a",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/0e2ba740330e5495d0f252b497039e498154897a",
        "files": [
          "tensorflow/core/ops/array_ops.cc"
        ],
        "message": "Fix a shape inference issue leading to nullptr deref.\n\nPiperOrigin-RevId: 387712259\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "3001:       if (!s.ok() && s.code() != error::NOT_FOUND) {",
          "3002:         return s;",
          "3003:       }",
          "3004:       const int minmax_rank = (axis == -1) ? 0 : 1;",
          "3005:       TF_RETURN_IF_ERROR(shape_inference::UnchangedShape(c));",
          "3006:       ShapeHandle minmax;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3004:       if (axis < -1) {",
          "3005:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "3006:                                        axis);",
          "3007:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad9bb3e9d78d2f659963d0ccaaef52f91a210706",
      "candidate_info": {
        "commit_hash": "ad9bb3e9d78d2f659963d0ccaaef52f91a210706",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ad9bb3e9d78d2f659963d0ccaaef52f91a210706",
        "files": [
          "tensorflow/core/ops/array_ops.cc"
        ],
        "message": "Fix a shape inference issue leading to nullptr deref.\n\nPiperOrigin-RevId: 387712259\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2887:       if (!s.ok() && s.code() != error::NOT_FOUND) {",
          "2888:         return s;",
          "2889:       }",
          "2890:       const int minmax_rank = (axis == -1) ? 0 : 1;",
          "2891:       TF_RETURN_IF_ERROR(shape_inference::UnchangedShape(c));",
          "2892:       ShapeHandle minmax;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2890:       if (axis < -1) {",
          "2891:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2892:                                        axis);",
          "2893:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d3dc75a14811e73394d783c50fe0928c97efc373",
      "candidate_info": {
        "commit_hash": "d3dc75a14811e73394d783c50fe0928c97efc373",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/d3dc75a14811e73394d783c50fe0928c97efc373",
        "files": [
          "tensorflow/core/ops/array_ops.cc"
        ],
        "message": "Fix a shape inference issue leading to nullptr deref.\n\nPiperOrigin-RevId: 387712259\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2957:       if (!s.ok() && s.code() != error::NOT_FOUND) {",
          "2958:         return s;",
          "2959:       }",
          "2960:       const int minmax_rank = (axis == -1) ? 0 : 1;",
          "2961:       TF_RETURN_IF_ERROR(shape_inference::UnchangedShape(c));",
          "2962:       ShapeHandle minmax;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2960:       if (axis < -1) {",
          "2961:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2962:                                        axis);",
          "2963:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "286719e4800b22ebbe01c910b7f9849421a9ea25",
      "candidate_info": {
        "commit_hash": "286719e4800b22ebbe01c910b7f9849421a9ea25",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/286719e4800b22ebbe01c910b7f9849421a9ea25",
        "files": [
          "tensorflow/core/ops/array_ops.cc"
        ],
        "message": "Fix a shape inference issue leading to nullptr deref.\n\nPiperOrigin-RevId: 387712259\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2990:       if (!s.ok() && s.code() != error::NOT_FOUND) {",
          "2991:         return s;",
          "2992:       }",
          "2993:       const int minmax_rank = (axis == -1) ? 0 : 1;",
          "2994:       TF_RETURN_IF_ERROR(shape_inference::UnchangedShape(c));",
          "2995:       ShapeHandle minmax;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2993:       if (axis < -1) {",
          "2994:         return errors::InvalidArgument(\"axis should be at least -1, got \",",
          "2995:                                        axis);",
          "2996:       }",
          "",
          "---------------"
        ]
      }
    }
  ]
}