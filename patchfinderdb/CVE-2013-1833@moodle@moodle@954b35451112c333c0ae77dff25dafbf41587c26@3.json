{
  "cve_id": "CVE-2013-1833",
  "cve_desc": "Multiple cross-site scripting (XSS) vulnerabilities in the File Picker module in Moodle 2.x through 2.1.10, 2.2.x before 2.2.8, 2.3.x before 2.3.5, and 2.4.x before 2.4.2 allow remote authenticated users to inject arbitrary web script or HTML via a crafted filename.",
  "repo": "moodle/moodle",
  "patch_hash": "954b35451112c333c0ae77dff25dafbf41587c26",
  "patch_info": {
    "commit_hash": "954b35451112c333c0ae77dff25dafbf41587c26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/954b35451112c333c0ae77dff25dafbf41587c26",
    "files": [
      "lib/form/filemanager.js",
      "lib/outputrequirementslib.php",
      "repository/filepicker.js",
      "repository/filepicker.php"
    ],
    "message": "MDL-37507 repositories: improved formatting of external resources",
    "before_after_code_files": [
      "lib/form/filemanager.js||lib/form/filemanager.js",
      "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
      "repository/filepicker.js||repository/filepicker.js",
      "repository/filepicker.php||repository/filepicker.php"
    ]
  },
  "patch_diff": {
    "lib/form/filemanager.js||lib/form/filemanager.js": [
      "File: lib/form/filemanager.js -> lib/form/filemanager.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "255:             this.msg_dlg.set('headerContent', header);",
      "256:             this.msg_dlg_node.removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
      "258:             this.msg_dlg.show();",
      "259:         },",
      "260:         is_disabled: function() {",
      "",
      "[Removed Lines]",
      "257:             this.msg_dlg_node.one('.fp-msg-text').setContent(msg);",
      "",
      "[Added Lines]",
      "257:             this.msg_dlg_node.one('.fp-msg-text').setContent(Y.Escape.html(msg));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "325:                     }",
      "326:                     this.mkdir_dialog.show();",
      "327:                     Y.one('#fm-newname-'+scope.client_id).focus();",
      "329:                 }, this);",
      "330:             } else {",
      "331:                 this.filemanager.addClass('fm-nomkdir');",
      "",
      "[Removed Lines]",
      "328:                     Y.all('#fm-curpath-'+scope.client_id).setContent(this.currentpath)",
      "",
      "[Added Lines]",
      "328:                     Y.all('#fm-curpath-'+scope.client_id).setContent(Y.Escape.html(this.currentpath))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "412:                     } else {",
      "413:                         el.addClass('odd');",
      "414:                     }",
      "416:                         on('click', function(e, path) {",
      "417:                             e.preventDefault();",
      "418:                             if (!this.is_disabled()) {",
      "",
      "[Removed Lines]",
      "415:                     el.one('.fp-path-folder-name').setContent(p[i].name).",
      "",
      "[Added Lines]",
      "415:                     el.one('.fp-path-folder-name').setContent(Y.Escape.html(p[i].name)).",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "602:             for (var i in licenses) {",
      "603:                 var option = Y.Node.create('<option/>').",
      "604:                     set('value', licenses[i].shortname).",
      "606:                 node.appendChild(option)",
      "607:             }",
      "608:         },",
      "",
      "[Removed Lines]",
      "605:                     setContent(licenses[i].fullname);",
      "",
      "[Added Lines]",
      "605:                     setContent(Y.Escape.html(licenses[i].fullname));",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "621:             node.setContent('');",
      "622:             for (var i in list) {",
      "623:                 node.appendChild(Y.Node.create('<option/>').",
      "625:             }",
      "626:         },",
      "627:         update_file: function(confirmed) {",
      "",
      "[Removed Lines]",
      "624:                     set('value', list[i]).setContent(list[i]))",
      "",
      "[Added Lines]",
      "624:                     set('value', list[i]).setContent(Y.Escape.html(list[i])));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "923:                 if (selectnode.one('.fp-'+attrs[i])) {",
      "924:                     var value = (node[attrs[i]+'_f']) ? node[attrs[i]+'_f'] : (node[attrs[i]] ? node[attrs[i]] : '');",
      "925:                     selectnode.one('.fp-'+attrs[i]).addClassIf('fp-unknown', ''+value == '')",
      "927:                 }",
      "928:             }",
      "",
      "[Removed Lines]",
      "926:                         .one('.fp-value').setContent(value);",
      "",
      "[Added Lines]",
      "926:                         .one('.fp-value').setContent(Y.Escape.html(value));",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "948:                             selectnode.one('.fp-original').removeClass('fp-loading');",
      "949:                             if (obj.original) {",
      "950:                                 node.original = obj.original;",
      "952:                             } else {",
      "953:                                 selectnode.one('.fp-original .fp-value').setContent(M.str.repository.unknownsource);",
      "954:                             }",
      "",
      "[Removed Lines]",
      "951:                                 selectnode.one('.fp-original .fp-value').setContent(node.original);",
      "",
      "[Added Lines]",
      "951:                                 selectnode.one('.fp-original .fp-value').setContent(Y.Escape.html(node.original));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "976:                                 for (var i in obj.references) {",
      "977:                                     node.reflist += '<li>'+obj.references[i]+'</li>';",
      "978:                                 }",
      "980:                             } else {",
      "981:                                 selectnode.one('.fp-reflist .fp-value').setContent('');",
      "982:                             }",
      "",
      "[Removed Lines]",
      "979:                                 selectnode.one('.fp-reflist .fp-value').setContent(node.reflist);",
      "",
      "[Added Lines]",
      "979:                                 selectnode.one('.fp-reflist .fp-value').setContent(Y.Escape.html(node.reflist));",
      "",
      "---------------"
    ],
    "lib/outputrequirementslib.php||lib/outputrequirementslib.php": [
      "File: lib/outputrequirementslib.php -> lib/outputrequirementslib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:                 case 'core_filepicker':",
      "396:                     $module = array('name'     => 'core_filepicker',",
      "397:                                     'fullpath' => '/repository/filepicker.js',",
      "399:                                     'strings'  => array(array('lastmodified', 'moodle'), array('name', 'moodle'), array('type', 'repository'), array('size', 'repository'),",
      "400:                                                         array('invalidjson', 'repository'), array('error', 'moodle'), array('info', 'moodle'),",
      "401:                                                         array('nofilesattached', 'repository'), array('filepicker', 'repository'), array('logout', 'repository'),",
      "",
      "[Removed Lines]",
      "398:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'moodle-core_filepicker'),",
      "",
      "[Added Lines]",
      "398:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'escape', 'moodle-core_filepicker'),",
      "",
      "---------------"
    ],
    "repository/filepicker.js||repository/filepicker.js": [
      "File: repository/filepicker.js -> repository/filepicker.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "176:         var file_get_filename = function(node) {",
      "177:             return node.title ? node.title : node.fullname;",
      "180:         var file_get_displayname = function(node) {",
      "184:         var file_get_description = function(node) {",
      "188:         var build_tree = function(node, level) {",
      "",
      "[Removed Lines]",
      "178:         }",
      "181:             return node.shorttitle ? node.shorttitle : file_get_filename(node);",
      "182:         }",
      "185:             return node.description ? node.description : (node.thumbnail_title ? node.thumbnail_title : file_get_filename(node));",
      "186:         }",
      "",
      "[Added Lines]",
      "178:         };",
      "181:             var displayname = node.shorttitle ? node.shorttitle : file_get_filename(node);",
      "182:             return Y.Escape.html(displayname);",
      "183:         };",
      "186:             var description = '';",
      "187:             if (node.description) {",
      "188:                 description = node.description;",
      "189:             } else if (node.thumbnail_title) {",
      "190:                 description = node.thumbnail_title;",
      "191:             } else {",
      "192:                 description = file_get_filename(node);",
      "193:             }",
      "194:             return Y.Escape.html(description);",
      "195:         };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "401:                 imgdiv.setStyleAdv('width', width).setStyleAdv('height', height);",
      "402:                 var img = Y.Node.create('<img/>').setAttrs({",
      "403:                         title: file_get_description(node),",
      "405:                     setStyle('maxWidth', ''+width+'px').",
      "406:                     setStyle('maxHeight', ''+height+'px');",
      "407:                 img.setImgSrc(src, node.realthumbnail, lazyloading);",
      "",
      "[Removed Lines]",
      "404:                         alt: node.thumbnail_alt ? node.thumbnail_alt : file_get_filename(node)}).",
      "",
      "[Added Lines]",
      "413:                         alt: Y.Escape.html(node.thumbnail_alt ? node.thumbnail_alt : file_get_filename(node))}).",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "738:             this.fpnode.one('.fp-content').setContent(M.core_filepicker.templates.error);",
      "739:             this.fpnode.one('.fp-content .fp-error').",
      "740:                 addClass(errorcode).",
      "742:         },",
      "744:         print_msg: function(msg, type) {",
      "",
      "[Removed Lines]",
      "741:                 setContent(errortext);",
      "",
      "[Added Lines]",
      "750:                 setContent(Y.Escape.html(errortext));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "769:             this.msg_dlg.set('headerContent', header);",
      "770:             this.msg_dlg_node.removeClass('fp-msg-info').removeClass('fp-msg-error').addClass('fp-msg-'+type)",
      "772:             this.msg_dlg.show();",
      "773:         },",
      "774:         view_files: function(appenditems) {",
      "",
      "[Removed Lines]",
      "771:             this.msg_dlg_node.one('.fp-msg-text').setContent(msg);",
      "",
      "[Added Lines]",
      "780:             this.msg_dlg_node.one('.fp-msg-text').setContent(Y.Escape.html(msg));",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1106:                 if (selectnode.one('.fp-'+attrs[i])) {",
      "1107:                     var value = (args[attrs[i]+'_f']) ? args[attrs[i]+'_f'] : (args[attrs[i]] ? args[attrs[i]] : '');",
      "1108:                     selectnode.one('.fp-'+attrs[i]).addClassIf('fp-unknown', ''+value == '')",
      "1110:                 }",
      "1111:             }",
      "1112:         },",
      "",
      "[Removed Lines]",
      "1109:                         .one('.fp-value').setContent(value);",
      "",
      "[Added Lines]",
      "1118:                         .one('.fp-value').setContent(Y.Escape.html(value));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1354:                             this.hide_header();",
      "1355:                             this.list({'repo_id':repository_id});",
      "1356:                         }, this /*handler running scope*/, repository.id/*second argument of handler*/);",
      "1358:                     node.one('.fp-repo-icon').set('src', repository.icon);",
      "1359:                     if (i==0) {",
      "1360:                         node.addClass('first');",
      "",
      "[Removed Lines]",
      "1357:                     node.one('.fp-repo-name').setContent(repository.name);",
      "",
      "[Added Lines]",
      "1366:                     node.one('.fp-repo-name').setContent(Y.Escape.html(repository.name));",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1609:                 var option = Y.Node.create('<option/>').",
      "1610:                     set('selected', (this.options.defaultlicense==licenses[i].shortname)).",
      "1611:                     set('value', licenses[i].shortname).",
      "1613:                 node.appendChild(option)",
      "1614:             }",
      "1615:         },",
      "",
      "[Removed Lines]",
      "1612:                     setContent(licenses[i].fullname);",
      "",
      "[Added Lines]",
      "1621:                     setContent(Y.Escape.html(licenses[i].fullname));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1869:                     } else {",
      "1870:                         el.addClass('odd');",
      "1871:                     }",
      "1873:                     el.on('click',",
      "1874:                             function(e, path) {",
      "1875:                                 e.preventDefault();",
      "",
      "[Removed Lines]",
      "1872:                     el.all('.fp-path-folder-name').setContent(p[i].name);",
      "",
      "[Added Lines]",
      "1881:                     el.all('.fp-path-folder-name').setContent(Y.Escape.html(p[i].name));",
      "",
      "---------------"
    ],
    "repository/filepicker.php||repository/filepicker.php": [
      "File: repository/filepicker.php -> repository/filepicker.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "142:             if (isset($item['thumbnail_width'])) {",
      "143:                 $style .= 'max-width:'.$item['thumbnail_width'].'px;';",
      "144:             }",
      "146:             echo '</td><td>';",
      "147:             if (!empty($item['url'])) {",
      "149:             } else {",
      "151:             }",
      "152:             echo '</td>';",
      "153:             echo '<td>';",
      "",
      "[Removed Lines]",
      "145:             echo html_writer::empty_tag('img', array('src' => $item['thumbnail'], 'style' => $style));",
      "148:                 echo html_writer::link($item['url'], $item['title'], array('target'=>'_blank'));",
      "150:                 echo $item['title'];",
      "",
      "[Added Lines]",
      "145:             echo html_writer::empty_tag('img', array('src' => $item['thumbnail'], 'alt' => '', 'style' => $style));",
      "148:                 echo html_writer::link($item['url'], s($item['title']), array('target'=>'_blank'));",
      "150:                 echo s($item['title']);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "204:                         'draftpath'=>$draftpath,",
      "205:                         'savepath'=>$savepath",
      "206:                         ));",
      "208:                     echo '<span> / </span>';",
      "209:                 }",
      "210:             }",
      "",
      "[Removed Lines]",
      "207:                     echo '<strong>' . html_writer::link($pathurl, $p['name']) . '</strong>';",
      "",
      "[Added Lines]",
      "207:                     echo '<strong>' . html_writer::link($pathurl, s($p['name'])) . '</strong>';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "241:                 echo html_writer::empty_tag('img', array('src' => $item['thumbnail'], 'style' => $style));",
      "242:                 echo '</td><td>';",
      "243:                 if (!empty($item['url'])) {",
      "245:                 } else {",
      "247:                 }",
      "248:                 echo '</td>';",
      "249:                 echo '<td>';",
      "",
      "[Removed Lines]",
      "244:                     echo html_writer::link($item['url'], $item['title'], array('target'=>'_blank'));",
      "246:                     echo $item['title'];",
      "",
      "[Added Lines]",
      "244:                     echo html_writer::link($item['url'], s($item['title']), array('target'=>'_blank'));",
      "246:                     echo s($item['title']);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "393:         $aurl->params(array('savepath'=>$savepath, 'action' => 'list', 'repo_id' => $info->id, 'draftpath'=>$draftpath));",
      "395:         echo '<li>';",
      "398:         echo '</li>';",
      "399:     }",
      "400:     echo '</ul>';",
      "",
      "[Removed Lines]",
      "396:         echo '<img src=\"'.$info->icon.'\" alt=\"'.$info->name.'\" width=\"16\" height=\"16\" /> ';",
      "397:         echo html_writer::link($aurl, $info->name);",
      "",
      "[Added Lines]",
      "396:         echo html_writer::empty_tag('img', array('src'=>$info->icon, 'alt'=>$info->name, 'class'=>'icon icon-pre'));",
      "397:         echo html_writer::link($aurl, s($info->name));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8685679a2ad9101431cc834d5b80e3a12316dd6b",
      "candidate_info": {
        "commit_hash": "8685679a2ad9101431cc834d5b80e3a12316dd6b",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/8685679a2ad9101431cc834d5b80e3a12316dd6b",
        "files": [
          "repository/filepicker.php",
          "repository/url/lib.php",
          "repository/url/locallib.php"
        ],
        "message": "MDL-31928: Fixing bugs in repository_url\n\n- if the same image occurs several times on the page list it only once\n- resolve image path correctly if it has a query string\n- show images included in CSS\n- non-JS file picker ignores thumbnail width and height attributes (this is a temp fix until renderers are implemented)",
        "before_after_code_files": [
          "repository/filepicker.php||repository/filepicker.php",
          "repository/url/lib.php||repository/url/lib.php",
          "repository/url/locallib.php||repository/url/locallib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "repository/filepicker.php||repository/filepicker.php"
          ],
          "candidate": [
            "repository/filepicker.php||repository/filepicker.php"
          ]
        }
      },
      "candidate_diff": {
        "repository/filepicker.php||repository/filepicker.php": [
          "File: repository/filepicker.php -> repository/filepicker.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:         echo '<table>';",
          "140:         foreach ($search_result['list'] as $item) {",
          "141:             echo '<tr>';",
          "143:             echo '</td><td>';",
          "144:             if (!empty($item['url'])) {",
          "145:                 echo html_writer::link($item['url'], $item['title'], array('target'=>'_blank'));",
          "",
          "[Removed Lines]",
          "142:             echo '<td><img src=\"'.$item['thumbnail'].'\" />';",
          "",
          "[Added Lines]",
          "142:             echo '<td>';",
          "143:             $style = '';",
          "144:             if (isset($item['thumbnail_height'])) {",
          "145:                 $style .= 'max-height:'.$item['thumbnail_height'].'px;';",
          "146:             }",
          "147:             if (isset($item['thumbnail_width'])) {",
          "148:                 $style .= 'max-width:'.$item['thumbnail_width'].'px;';",
          "149:             }",
          "150:             echo html_writer::empty_tag('img', array('src' => $item['thumbnail'], 'style' => $style));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "227:             echo '<table>';",
          "228:             foreach ($list['list'] as $item) {",
          "229:                 echo '<tr>';",
          "231:                 echo '</td><td>';",
          "232:                 if (!empty($item['url'])) {",
          "233:                     echo html_writer::link($item['url'], $item['title'], array('target'=>'_blank'));",
          "",
          "[Removed Lines]",
          "230:                 echo '<td><img src=\"'.$item['thumbnail'].'\" />';",
          "",
          "[Added Lines]",
          "238:                 echo '<td>';",
          "239:                 $style = '';",
          "240:                 if (isset($item['thumbnail_height'])) {",
          "241:                     $style .= 'max-height:'.$item['thumbnail_height'].'px;';",
          "242:                 }",
          "243:                 if (isset($item['thumbnail_width'])) {",
          "244:                     $style .= 'max-width:'.$item['thumbnail_width'].'px;';",
          "245:                 }",
          "246:                 echo html_writer::empty_tag('img', array('src' => $item['thumbnail'], 'style' => $style));",
          "",
          "---------------"
        ],
        "repository/url/lib.php||repository/url/lib.php": [
          "File: repository/url/lib.php -> repository/url/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: require_once(dirname(__FILE__).'/locallib.php');",
          "32: class repository_url extends repository {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:     var $processedfiles = array();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:         $this->file_url = optional_param('file', '', PARAM_RAW);",
          "43:     }",
          "55:     public function check_login() {",
          "56:         if (!empty($this->file_url)) {",
          "57:             return true;",
          "",
          "[Removed Lines]",
          "45:     public function get_file($url, $file = '') {",
          "46:         global $CFG;",
          "48:         $path = $this->prepare_file($file);",
          "49:         $fp = fopen($path, 'w');",
          "50:         $c = new curl;",
          "51:         $c->download(array(array('url'=>$url, 'file'=>$fp)));",
          "52:         return array('path'=>$path, 'url'=>$url);",
          "53:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76:             $ret['login'] = array($url);",
          "77:             $ret['login_btn_label'] = get_string('download', 'repository_url');",
          "78:             return $ret;",
          "79:         } else {",
          "80:             echo <<<EOD",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:             $ret['allowcaching'] = true; // indicates that login form can be cached in filepicker.js",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "97:     public function get_listing($path='', $page='') {",
          "98:         global $CFG, $OUTPUT;",
          "99:         $ret = array();",
          "100:         $curl = new curl;",
          "102:         $info = $curl->get_info();",
          "103:         if ($info['http_code'] != 200) {",
          "105:         } else {",
          "122:             }",
          "123:         }",
          "125:     }",
          "140:             }",
          "141:         }",
          "142:     }",
          "143:     public function guess_filename($url, $type) {",
          "144:         $pattern = '#\\/([\\w_\\?\\-.]+)$#';",
          "",
          "[Removed Lines]",
          "101:         $msg = $curl->head($this->file_url);",
          "104:             $ret['e'] = $msg;",
          "106:             $ret['list'] = array();",
          "107:             $ret['nosearch'] = true;",
          "108:             $ret['nologin'] = true;",
          "109:             $filename = $this->guess_filename($info['url'], $info['content_type']);",
          "110:             if (strstr($info['content_type'], 'text/html') || empty($info['content_type'])) {",
          "112:                 $ret['list'] = array();",
          "113:                 $content = $curl->get($info['url']);",
          "114:                 $this->analyse_page($info['url'], $content, $ret);",
          "115:             } else {",
          "117:                 $ret['list'][] = array(",
          "118:                     'title'=>$filename,",
          "119:                     'source'=>$this->file_url,",
          "120:                     'thumbnail' => $OUTPUT->pix_url(file_extension_icon($filename, 32))->out(false)",
          "121:                     );",
          "124:         return $ret;",
          "126:     public function analyse_page($baseurl, $content, &$list) {",
          "127:         global $CFG, $OUTPUT;",
          "128:         $urls = extract_html_urls($content);",
          "129:         $images = $urls['img']['src'];",
          "130:         $pattern = '#img(.+)src=\"?\\'?([[:alnum:]:?=&@/._+-]+)\"?\\'?#i';",
          "131:         if (!empty($images)) {",
          "132:             foreach($images as $url) {",
          "133:                 $list['list'][] = array(",
          "134:                     'title'=>$this->guess_filename($url, ''),",
          "135:                     'source'=>url_to_absolute($baseurl, $url),",
          "136:                     'thumbnail'=>url_to_absolute($baseurl, $url),",
          "137:                     'thumbnail_height'=>84,",
          "138:                     'thumbnail_width'=>84",
          "139:                 );",
          "",
          "[Added Lines]",
          "92:         $ret['list'] = array();",
          "93:         $ret['nosearch'] = true;",
          "94:         $ret['norefresh'] = true;",
          "95:         $ret['nologin'] = true;",
          "97:         $this->parse_file(null, $this->file_url, $ret, true);",
          "98:         return $ret;",
          "99:     }",
          "109:     protected function parse_file($baseurl, $relativeurl, &$list, $mainfile = false) {",
          "110:         if (preg_match('/([\\'\"])(.*)\\1/', $relativeurl, $matches)) {",
          "111:             $relativeurl = $matches[2];",
          "112:         }",
          "113:         if (empty($baseurl)) {",
          "114:             $url = $relativeurl;",
          "115:         } else {",
          "116:             $url = htmlspecialchars_decode(url_to_absolute($baseurl, $relativeurl));",
          "117:         }",
          "118:         if (in_array($url, $this->processedfiles)) {",
          "120:             return;",
          "121:         }",
          "122:         $this->processedfiles[] = $url;",
          "124:         $msg = $curl->head($url);",
          "127:             if ($mainfile) {",
          "128:                 $list['error'] = $msg;",
          "129:             }",
          "131:             $csstoanalyze = '';",
          "132:             if ($mainfile && (strstr($info['content_type'], 'text/html') || empty($info['content_type']))) {",
          "134:                 $htmlcontent = $curl->get($info['url']);",
          "135:                 $ddoc = new DOMDocument();",
          "136:                 @$ddoc->loadHTML($htmlcontent);",
          "138:                 $tags = $ddoc->getElementsByTagName('img');",
          "139:                 foreach ($tags as $tag) {",
          "140:                     $url = $tag->getAttribute('src');",
          "141:                     $this->add_image_to_list($info['url'], $url, $list);",
          "142:                 }",
          "144:                 $tags = $ddoc->getElementsByTagName('style');",
          "145:                 foreach ($tags as $tag) {",
          "146:                     if ($tag->getAttribute('type') == 'text/css') {",
          "147:                         $csstoanalyze .= $tag->textContent.\"\\n\";",
          "148:                     }",
          "149:                 }",
          "151:                 $tags = $ddoc->getElementsByTagName('link');",
          "152:                 foreach ($tags as $tag) {",
          "153:                     if ($tag->getAttribute('type') == 'text/css' && strlen($tag->getAttribute('href'))) {",
          "154:                         $this->parse_file($info['url'], $tag->getAttribute('href'), $list);",
          "155:                     }",
          "156:                 }",
          "157:             } else if (strstr($info['content_type'], 'css')) {",
          "159:                 $csscontent = $curl->get($info['url']);",
          "160:                 $csstoanalyze .= $csscontent.\"\\n\";",
          "161:             } else if (strstr($info['content_type'], 'image/')) {",
          "163:                 $this->add_image_to_list($info['url'], $info['url'], $list);",
          "164:             }",
          "167:             if (strlen($csstoanalyze)) {",
          "168:                 $urls = extract_css_urls($csstoanalyze);",
          "169:                 if (!empty($urls['property'])) {",
          "170:                     foreach ($urls['property'] as $url) {",
          "171:                         $this->add_image_to_list($info['url'], $url, $list);",
          "172:                     }",
          "173:                 }",
          "174:                 if (!empty($urls['import'])) {",
          "175:                     foreach ($urls['import'] as $cssurl) {",
          "176:                         $this->parse_file($info['url'], $cssurl, $list);",
          "177:                     }",
          "178:                 }",
          "182:     protected function add_image_to_list($baseurl, $url, &$list) {",
          "183:         if (empty($list['list'])) {",
          "184:             $list['list'] = array();",
          "185:         }",
          "186:         $src = url_to_absolute($baseurl, htmlspecialchars_decode($url));",
          "187:         foreach ($list['list'] as $image) {",
          "188:             if ($image['source'] == $src) {",
          "189:                 return;",
          "192:         $list['list'][] = array(",
          "193:             'title'=>$this->guess_filename($url, ''),",
          "194:             'source'=>$src,",
          "195:             'thumbnail'=>$src,",
          "196:             'thumbnail_height'=>84,",
          "197:             'thumbnail_width'=>84",
          "198:         );",
          "",
          "---------------"
        ],
        "repository/url/locallib.php||repository/url/locallib.php": [
          "File: repository/url/locallib.php -> repository/url/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:  if ( $b === FALSE || empty( $b['scheme'] ) || empty( $b['host'] ) )",
          "80:   return FALSE;",
          "81:  $r['scheme'] = $b['scheme'];",
          "84:  if ( isset( $r['host'] ) )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     if (empty($b['path'])) {",
          "83:         $b['path'] = '';",
          "84:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "252: {",
          "254:  $xunressub     = 'a-zA-Z\\d\\-._~\\!$&\\'()*+,;=';",
          "258:  $xscheme        = '([a-zA-Z][a-zA-Z\\d+-.]*)';",
          "",
          "[Removed Lines]",
          "251: function split_url( $url, $decode=TRUE )",
          "255:  $xpchar        = $xunressub . ':@%';",
          "",
          "[Added Lines]",
          "254: function split_url( $url, $decode=FALSE)",
          "258:  $xpchar        = $xunressub . ':@% ';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "386: {",
          "387:  if ( $encode )",
          "388:  {",
          "",
          "[Removed Lines]",
          "385: function join_url( $parts, $encode=TRUE )",
          "",
          "[Added Lines]",
          "388: function join_url( $parts, $encode=FALSE)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "432:   $url .= '#' . $parts['fragment'];",
          "433:  return $url;",
          "434: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "455: function encode_url($url) {",
          "456:   $reserved = array(",
          "457:     \":\" => '!%3A!ui',",
          "458:     \"/\" => '!%2F!ui',",
          "459:     \"?\" => '!%3F!ui',",
          "460:     \"#\" => '!%23!ui',",
          "461:     \"[\" => '!%5B!ui',",
          "462:     \"]\" => '!%5D!ui',",
          "463:     \"@\" => '!%40!ui',",
          "464:     \"!\" => '!%21!ui',",
          "465:     \"$\" => '!%24!ui',",
          "466:     \"&\" => '!%26!ui',",
          "467:     \"'\" => '!%27!ui',",
          "468:     \"(\" => '!%28!ui',",
          "469:     \")\" => '!%29!ui',",
          "470:     \"*\" => '!%2A!ui',",
          "471:     \"+\" => '!%2B!ui',",
          "472:     \",\" => '!%2C!ui',",
          "473:     \";\" => '!%3B!ui',",
          "474:     \"=\" => '!%3D!ui',",
          "475:     \"%\" => '!%25!ui',",
          "476:   );",
          "478:   $url = rawurlencode($url);",
          "479:   $url = preg_replace(array_values($reserved), array_keys($reserved), $url);",
          "480:   return $url;",
          "481: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f0a163ed6d8ef2a65968c12f7b01ad73ff050d93",
      "candidate_info": {
        "commit_hash": "f0a163ed6d8ef2a65968c12f7b01ad73ff050d93",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/f0a163ed6d8ef2a65968c12f7b01ad73ff050d93",
        "files": [
          "lib/form/filemanager.js"
        ],
        "message": "MDL-31656 Open files in a new window when downloading with the filemanager\n\nWe need to open files in a new window rather than the existing window  to\nprevent warning messages when files are uploaded and then downloaded\nwithout the form being saved first.",
        "before_after_code_files": [
          "lib/form/filemanager.js||lib/form/filemanager.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/form/filemanager.js||lib/form/filemanager.js"
          ],
          "candidate": [
            "lib/form/filemanager.js||lib/form/filemanager.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/form/filemanager.js||lib/form/filemanager.js": [
          "File: lib/form/filemanager.js -> lib/form/filemanager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "450:             var scope = this;",
          "452:             var menuitems = [",
          "454:                 ];",
          "455:             function setmainfile(type, ev, obj) {",
          "456:                 var file = obj[node.get('id')];",
          "",
          "[Removed Lines]",
          "453:                 {text: M.str.moodle.download, url:file.url}",
          "",
          "[Added Lines]",
          "453:                 {text: M.str.moodle.download, onclick:{fn:open_file_in_new_window, obj:file, scope:this}}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "467:                     }",
          "468:                 });",
          "469:             }",
          "470:             if (this.enablemainfile && (file.sortorder != 1)) {",
          "471:                 var mainid = '#id_'+this.enablemainfile;",
          "472:                 var menu = {text: M.str.repository.setmainfile, onclick:{fn: setmainfile, obj:data, scope:this}};",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "470:             function open_file_in_new_window(type, ev, obj) {",
          "473:                 window.open(obj.url, 'fm-download-file');",
          "474:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b2b54ad7fec2b3742665224357486b41cd93d149",
      "candidate_info": {
        "commit_hash": "b2b54ad7fec2b3742665224357486b41cd93d149",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/b2b54ad7fec2b3742665224357486b41cd93d149",
        "files": [
          "lib/outputrequirementslib.php"
        ],
        "message": "Revert \"MDL-38515 JavaScript: Correct module dependencies for core_filepicker\"\n\nThis reverts commit babf34d5cfc7845e8f42b850a39646bf9a9c17c3.",
        "before_after_code_files": [
          "lib/outputrequirementslib.php||lib/outputrequirementslib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/outputrequirementslib.php||lib/outputrequirementslib.php"
          ],
          "candidate": [
            "lib/outputrequirementslib.php||lib/outputrequirementslib.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/outputrequirementslib.php||lib/outputrequirementslib.php": [
          "File: lib/outputrequirementslib.php -> lib/outputrequirementslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "388:                 case 'core_filepicker':",
          "389:                     $module = array('name'     => 'core_filepicker',",
          "390:                                     'fullpath' => '/repository/filepicker.js',",
          "392:                                     'strings'  => array(array('lastmodified', 'moodle'), array('name', 'moodle'), array('type', 'repository'), array('size', 'repository'),",
          "393:                                                         array('invalidjson', 'repository'), array('error', 'moodle'), array('info', 'moodle'),",
          "394:                                                         array('nofilesattached', 'repository'), array('filepicker', 'repository'), array('logout', 'repository'),",
          "",
          "[Removed Lines]",
          "391:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'escape'),",
          "",
          "[Added Lines]",
          "391:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-treeview', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'escape', 'moodle-core_filepicker'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b92241f2805d2907c931b60a2829ac02d45dbde1",
      "candidate_info": {
        "commit_hash": "b92241f2805d2907c931b60a2829ac02d45dbde1",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/b92241f2805d2907c931b60a2829ac02d45dbde1",
        "files": [
          "lang/en/repository.php",
          "lib/outputrequirementslib.php",
          "repository/filepicker.js",
          "repository/lib.php",
          "repository/renderer.php"
        ],
        "message": "MDL-31901: Changing interface of file picker, use renderers:\n\n- Filepicker window is now resizable and draggable;\n- filepicker&renderer: removed id substitution from renderer, replaced it with classes (better readability);\n- filepicker: allowed tree and table view for search results;\n- filepicker: fixed small bug with displaying external link checkbox\n- filepicker: display additional information about file in select window, repository returns more formatted information",
        "before_after_code_files": [
          "lang/en/repository.php||lang/en/repository.php",
          "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
          "repository/filepicker.js||repository/filepicker.js",
          "repository/lib.php||repository/lib.php",
          "repository/renderer.php||repository/renderer.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
            "repository/filepicker.js||repository/filepicker.js"
          ],
          "candidate": [
            "lib/outputrequirementslib.php||lib/outputrequirementslib.php",
            "repository/filepicker.js||repository/filepicker.js"
          ]
        }
      },
      "candidate_diff": {
        "lang/en/repository.php||lang/en/repository.php": [
          "File: lang/en/repository.php -> lang/en/repository.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "74: $string['createrepository'] = 'Create a repository instance';",
          "75: $string['createxxinstance'] = 'Create \"{$a}\" instance';",
          "76: $string['date'] = 'Date';",
          "77: $string['deleted'] = 'Repository deleted';",
          "78: $string['deleterepository'] = 'Delete this repository';",
          "79: $string['detailview'] = 'View details';",
          "80: $string['disabled'] = 'Disabled';",
          "81: $string['download'] = 'Download';",
          "82: $string['downloadfolder'] = 'Download all';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77: $string['datecreated'] = 'Created';",
          "81: $string['dimensions'] = 'Dimensions';",
          "",
          "---------------"
        ],
        "lib/outputrequirementslib.php||lib/outputrequirementslib.php": [
          "File: lib/outputrequirementslib.php -> lib/outputrequirementslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "439:                 case 'core_filepicker':",
          "440:                     $module = array('name'     => 'core_filepicker',",
          "441:                                     'fullpath' => '/repository/filepicker.js',",
          "444:                                     'strings'  => array(array('add', 'repository'), array('back', 'repository'), array('cancel', 'moodle'), array('close', 'repository'),",
          "445:                                                         array('cleancache', 'repository'), array('copying', 'repository'), array('date', 'repository'), array('downloadsucc', 'repository'),",
          "",
          "[Removed Lines]",
          "442:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-menu', 'yui2-treeview', 'yui2-dragdrop', 'panel', 'cookie', 'datatable', 'datatable-sort'),",
          "",
          "[Added Lines]",
          "442:                                     'requires' => array('base', 'node', 'node-event-simulate', 'json', 'async-queue', 'io-base', 'io-upload-iframe', 'io-form', 'yui2-menu', 'yui2-treeview', 'yui2-dragdrop', 'panel', 'cookie', 'datatable', 'datatable-sort', 'resize-plugin', 'dd-plugin', 'resize-constrain'),",
          "",
          "---------------"
        ],
        "repository/filepicker.js||repository/filepicker.js": [
          "File: repository/filepicker.js -> repository/filepicker.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:     M.core_filepicker.instances[options.client_id].show();",
          "66: };",
          "71: M.core_filepicker.init = function(Y, options) {",
          "72:     if (options.templates);",
          "73:     for (var templid in options.templates) {",
          "74:         this.templates[templid] = options.templates[templid];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     Y.Node.prototype.getStylePx = function(attr) {",
          "75:         var style = this.getStyle(attr);",
          "76:         if (''+style == '0' || ''+style == '0px') {",
          "77:             return 0;",
          "78:         }",
          "79:         var matches = style.match(/^([\\d\\.]+)px$/)",
          "80:         if (matches && parseFloat(matches[1])) {",
          "81:             return parseFloat(matches[1]);",
          "82:         }",
          "83:         return null;",
          "84:     }",
          "87:     Y.Node.prototype.addClassIf = function(className, condition) {",
          "88:         if (condition) {",
          "89:             this.addClass(className);",
          "90:         } else {",
          "91:             this.removeClass(className);",
          "92:         }",
          "93:         return this;",
          "94:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "377:             }",
          "378:         },",
          "379:         view_files: function() {",
          "384:             } else {",
          "394:             }",
          "395:         },",
          "396:         treeview_dynload: function(node, cb) {",
          "",
          "[Removed Lines]",
          "380:             if (this.active_repo.issearchresult) {",
          "383:                 this.view_as_icons();",
          "385:                 this.viewbar_set_enabled(true);",
          "386:                 this.print_path();",
          "387:                 if (this.viewmode == 2) {",
          "388:                     this.view_as_list();",
          "389:                 } else if (this.viewmode == 3) {",
          "390:                     this.view_as_table();",
          "391:                 } else {",
          "392:                     this.view_as_icons();",
          "393:                 }",
          "",
          "[Added Lines]",
          "404:             this.viewbar_set_enabled(true);",
          "405:             this.print_path();",
          "406:             if (this.viewmode == 2) {",
          "407:                 this.view_as_list();",
          "408:             } else if (this.viewmode == 3) {",
          "409:                 this.view_as_table();",
          "411:                 this.view_as_icons();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "541:                 filenamediv.setContent(filename);",
          "542:                 var imgdiv = element.one('.fp-thumbnail');",
          "543:                 var set_width = function(node, width) {",
          "549:                 }",
          "550:                 var set_height = function(node, height) {",
          "556:                 }",
          "557:                 var width = node.thumbnail_width ? node.thumbnail_width : 90;",
          "558:                 var height = node.thumbnail_height ? node.thumbnail_height : 90;",
          "",
          "[Removed Lines]",
          "544:                     var widthmatches = node.getStyle('minWidth').match(/^(\\d+)px$/)",
          "545:                     if (widthmatches && parseInt(widthmatches[1])>width) {",
          "546:                         width = parseInt(widthmatches[1]);",
          "547:                     }",
          "548:                     node.setStyle('width', '' + width + 'px')",
          "551:                     var heightmatches = node.getStyle('minHeight').match(/^(\\d+)px$/)",
          "552:                     if (heightmatches && parseInt(heightmatches[1])>height) {",
          "553:                         height = parseInt(heightmatches[1]);",
          "554:                     }",
          "555:                     node.setStyle('height', '' + height + 'px')",
          "",
          "[Added Lines]",
          "562:                     node.setStyle('width', '' + Math.max(width, node.getStylePx('minWidth')) + 'px')",
          "565:                     node.setStyle('height', '' + Math.max(height, node.getStylePx('minHeight')) + 'px')",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "656:             this.selectui.show();",
          "657:             var client_id = this.options.client_id;",
          "658:             var selectnode = this.fpnode.one('.fp-select');",
          "659:             selectnode.removeClass('loading');",
          "663:             var imgnode = Y.Node.create('<img/>').set('src', args.thumbnail)",
          "671:             } else {",
          "678:                 }",
          "679:             }",
          "681:             if (args.hasauthor) {",
          "684:             } else {",
          "687:             }",
          "689:             if (!args.haslicense) {",
          "694:             } else {",
          "697:             }",
          "698:             selectnode.one('form #filesource-'+client_id).set('value', args.source);",
          "699:         },",
          "700:         setup_select_file: function() {",
          "701:             var client_id = this.options.client_id;",
          "702:             var selectnode = this.fpnode.one('.fp-select');",
          "704:             getfile.on('click', function(e) {",
          "705:                 e.preventDefault();",
          "706:                 var client_id = this.options.client_id;",
          "707:                 var scope = this;",
          "708:                 var repository_id = this.active_repo.id;",
          "710:                 var filesource = selectnode.one('form #filesource-'+client_id).get('value');",
          "711:                 var params = {'title':title, 'source':filesource, 'savepath': this.options.savepath};",
          "713:                 if (license) {",
          "714:                     params['license'] = license.get('value');",
          "715:                     Y.Cookie.set('recentlicense', license.get('value'));",
          "716:                 }",
          "722:                 if (this.options.externallink && this.options.env == 'editor') {",
          "724:                     params.savepath = '/';",
          "728:                         if (linkexternal && linkexternal.get('checked')) {",
          "729:                             params['linkexternal'] = 'yes';",
          "730:                         }",
          "",
          "[Removed Lines]",
          "660:             selectnode.one('#newname-'+client_id).set('value', args.title);",
          "661:             selectnode.one('#text-author-'+client_id).set('value', this.options.author);",
          "664:             selectnode.one('#img-'+client_id).setContent('').appendChild(imgnode);",
          "666:             selectnode.one('#linkexternal-'+client_id).set('checked', ''); // default to unchecked",
          "667:             if ((this.options.externallink && this.options.env == 'editor' && this.options.return_types != 1)) {",
          "669:                 selectnode.one('#linkexternal-'+client_id).set('disabled', '');",
          "670:                 selectnode.all('#linkexternal-'+client_id+',#wrap-linkexternal-'+client_id).removeClass('uneditable')",
          "673:                 selectnode.one('#linkexternal-'+client_id).set('disabled', 'disabled');",
          "674:                 selectnode.all('#linkexternal-'+client_id+',#wrap-linkexternal-'+client_id).addClass('uneditable')",
          "675:                 if (this.options.return_types == 1) {",
          "677:                     selectnode.one('#linkexternal-'+client_id).set('checked', 'checked');",
          "682:                 selectnode.one('#text-author-'+client_id).set('disabled', 'disabled');",
          "683:                 selectnode.all('#text-author-'+client_id+',#wrap-text-author-'+client_id).addClass('uneditable')",
          "685:                 selectnode.one('#text-author-'+client_id).set('disabled', '');",
          "686:                 selectnode.all('#text-author-'+client_id+',#wrap-text-author-'+client_id).removeClass('uneditable')",
          "691:                 this.populate_licenses_select(selectnode.one('#select-license-'+client_id));",
          "692:                 selectnode.one('#wrap-select-license-'+client_id).set('disabled', '');",
          "693:                 selectnode.all('#select-license-'+client_id+'#wrap-select-license-'+client_id).removeClass('uneditable');",
          "695:                 selectnode.one('#wrap-select-license-'+client_id).set('disabled', 'disabled');",
          "696:                 selectnode.all('#select-license-'+client_id+'#wrap-select-license-'+client_id).addClass('uneditable');",
          "703:             var getfile = selectnode.one('#fp-confirm-'+client_id);",
          "709:                 var title = selectnode.one('#newname-'+client_id).get('value');",
          "712:                 var license = selectnode.one('#select-license-'+client_id);",
          "717:                 var author = selectnode.one('#text-author-'+client_id);",
          "718:                 if (author){",
          "719:                     params['author'] = author.get('value');",
          "720:                 }",
          "726:                     if ( this.options.return_types != 1 ) {",
          "727:                         var linkexternal = selectnode.one('#linkexternal-'+client_id);",
          "",
          "[Added Lines]",
          "669:             var return_types = this.options.repositories[this.active_repo.id].return_types;",
          "671:             selectnode.one('.fp-saveas input').set('value', args.title);",
          "672:             selectnode.one('.fp-setauthor input').set('value', this.options.author);",
          "675:             selectnode.one('.fp-thumbnail').setContent('').appendChild(imgnode);",
          "677:             selectnode.one('.fp-linkexternal input').set('checked', ''); // default to unchecked",
          "678:             if ((this.options.externallink && this.options.env == 'editor' && return_types == 3)) {",
          "680:                 selectnode.one('.fp-linkexternal input').set('disabled', '');",
          "681:                 selectnode.all('.fp-linkexternal').removeClass('uneditable')",
          "684:                 selectnode.one('.fp-linkexternal input').set('disabled', 'disabled');",
          "685:                 selectnode.all('.fp-linkexternal').addClass('uneditable')",
          "686:                 if (return_types == 1) {",
          "688:                     selectnode.one('.fp-linkexternal input').set('checked', 'checked');",
          "693:                 selectnode.one('.fp-setauthor input').set('disabled', 'disabled');",
          "694:                 selectnode.all('.fp-setauthor').addClass('uneditable')",
          "696:                 selectnode.one('.fp-setauthor input').set('disabled', '');",
          "697:                 selectnode.all('.fp-setauthor').removeClass('uneditable')",
          "702:                 selectnode.one('.fp-setlicense select').set('disabled', '');",
          "703:                 selectnode.one('.fp-setlicense').removeClass('uneditable');",
          "705:                 selectnode.one('.fp-setlicense select').set('disabled', 'disabled');",
          "706:                 selectnode.one('.fp-setlicense').addClass('uneditable');",
          "712:             var attrs = ['datemodified','datecreated','size','license','author','dimensions'];",
          "713:             for (var i in attrs) {",
          "714:                 if (selectnode.one('.fp-'+attrs[i])) {",
          "715:                     var value = (args[attrs[i]+'_f']) ? args[attrs[i]+'_f'] : (args[attrs[i]] ? args[attrs[i]] : '');",
          "716:                     selectnode.one('.fp-'+attrs[i]).addClassIf('fp-unknown', ''+value == '')",
          "717:                         .one('.fp-value').setContent(value);",
          "718:                 }",
          "719:             }",
          "724:             var getfile = selectnode.one('.fp-select-confirm');",
          "726:             selectnode.all('.fp-saveas,.fp-linkexternal,.fp-setauthor,.fp-setlicense').each(function (node) {",
          "727:                 node.all('label').set('for', node.one('input,select').generateID());",
          "728:             });",
          "729:             this.populate_licenses_select(selectnode.one('.fp-setlicense select'));",
          "736:                 var title = selectnode.one('.fp-saveas input').get('value');",
          "739:                 var license = selectnode.one('.fp-setlicense select');",
          "744:                 params['author'] = selectnode.one('.fp-setauthor input').get('value');",
          "750:                     var return_types = this.options.repositories[this.active_repo.id].return_types;",
          "751:                     if ( return_types != 1 ) {",
          "752:                         var linkexternal = selectnode.one('.fp-linkexternal input');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "775:                     e.preventDefault();",
          "776:                 }",
          "777:             }, this);",
          "779:             cancel.on('click', function(e) {",
          "780:                 e.preventDefault();",
          "781:                 this.selectui.hide();",
          "",
          "[Removed Lines]",
          "778:             var cancel = selectnode.one('#fp-cancel-'+client_id);",
          "",
          "[Added Lines]",
          "803:             var cancel = selectnode.one('.fp-select-cancel');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "815:         },",
          "816:         render: function() {",
          "817:             var client_id = this.options.client_id;",
          "836:             Y.one(document.body).appendChild(this.fpnode);",
          "837:             this.fpnode.appendChild(fpselectnode);",
          "838:             this.mainui = new Y.Panel({",
          "",
          "[Removed Lines]",
          "818:             var nodecontent = M.core_filepicker.templates.generallayout.",
          "819:                 replace(/\\{TOOLBARID}/g, 'fp-tb-'+client_id).",
          "820:                 replace(/\\{TOOLBACKID}/g, 'fp-tb-back-'+client_id).",
          "821:                 replace(/\\{TOOLSEARCHID}/g, 'fp-tb-search-'+client_id).",
          "822:                 replace(/\\{TOOLREFRESHID}/g, 'fp-tb-refresh-'+client_id).",
          "823:                 replace(/\\{TOOLLOGOUTID}/g, 'fp-tb-logout-'+client_id).",
          "824:                 replace(/\\{TOOLMANAGEID}/g, 'fp-tb-manage-'+client_id).",
          "825:                 replace(/\\{TOOLHELPID}/g, 'fp-tb-help-'+client_id);",
          "826:             this.fpnode = Y.Node.create(nodecontent).set('id', 'filepicker-'+client_id);",
          "827:             var fpselectnode = Y.Node.create(M.core_filepicker.templates.selectlayout.",
          "828:                 replace(/\\{IMGID}/g, 'img-'+client_id).",
          "829:                 replace(/\\{NEWNAMEID}/g, 'newname-'+client_id).",
          "830:                 replace(/\\{LINKEXTID}/g, 'linkexternal-'+client_id).",
          "831:                 replace(/\\{AUTHORID}/g, 'text-author-'+client_id).",
          "832:                 replace(/\\{LICENSEID}/g, 'select-license-'+client_id).",
          "833:                 replace(/\\{BUTCONFIRMID}/g, 'fp-confirm-'+client_id).",
          "834:                 replace(/\\{BUTCANCELID}/g, 'fp-cancel-'+client_id)",
          "835:                 );",
          "",
          "[Added Lines]",
          "843:             this.fpnode = Y.Node.create(M.core_filepicker.templates.generallayout).",
          "844:                 set('id', 'filepicker-'+client_id);",
          "845:             var fpselectnode = Y.Node.create(M.core_filepicker.templates.selectlayout);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "842:                 centered     : true,",
          "843:                 modal        : true,",
          "844:                 visible      : false,",
          "847:             });",
          "848:             this.mainui.show();",
          "849:             this.selectui = new Y.Panel({",
          "850:                 srcNode      : fpselectnode,",
          "851:                 zIndex       : 600000,",
          "",
          "[Removed Lines]",
          "845:                 render       : true,",
          "846:                 plugins      : [Y.Plugin.Drag]",
          "",
          "[Added Lines]",
          "855:                 render       : true",
          "858:             this.mainui.plug(Y.Plugin.Drag,{handles:['.yui3-widget-hd']});",
          "860:             var resizeconstraints = {",
          "861:               minWidth: this.fpnode.getStylePx('minWidth')?this.fpnode.getStylePx('minWidth'):this.fpnode.getStylePx('width'),",
          "862:               minHeight: this.fpnode.getStylePx('minHeight')?this.fpnode.getStylePx('minHeight'):this.fpnode.getStylePx('height'),",
          "863:               maxWidth: this.fpnode.getStylePx('maxWidth')?this.fpnode.getStylePx('maxWidth'):this.fpnode.getStylePx('width'),",
          "864:               maxHeight: this.fpnode.getStylePx('maxHeight')?this.fpnode.getStylePx('maxHeight'):this.fpnode.getStylePx('height'),",
          "865:               preserveRatio: false",
          "866:             };",
          "867:             if (resizeconstraints.minWidth < resizeconstraints.maxWidth ||",
          "868:                     resizeconstraints.minHeight < resizeconstraints.maxHeight) {",
          "869:                 this.mainui.plug(Y.Plugin.Resize)",
          "870:                 this.mainui.resize.plug(Y.Plugin.ResizeConstrained, resizeconstraints);",
          "871:             }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1121:         create_upload_form: function(data) {",
          "1122:             var client_id = this.options.client_id;",
          "1123:             var id = data.upload.id+'_'+client_id;",
          "1140:                 setAttrs({type:'hidden',name:'itemid',value:this.options.itemid}));",
          "1141:             var types = this.options.accepted_types;",
          "1142:             for (var i in types) {",
          "1144:                     setAttrs({type:'hidden',name:'accepted_types[]',value:types[i]}));",
          "1145:             }",
          "1147:             var scope = this;",
          "1149:                 e.preventDefault();",
          "1151:                 Y.Cookie.set('recentlicense', license.get('value'));",
          "1153:                     scope.print_msg(M.str.repository.nofilesattached, 'error');",
          "1154:                     return false;",
          "1155:                 }",
          "",
          "[Removed Lines]",
          "1124:             var str = M.core_filepicker.templates.uploadform.",
          "1125:                 replace(/\\{UPLOADFORMID}/g, id).",
          "1126:                 replace(/\\{INPUTFILEID}/g, id+'_file').",
          "1127:                 replace(/\\{NEWNAMEID}/g, 'newname-'+client_id).",
          "1128:                 replace(/\\{AUTHORID}/g, 'author-'+client_id).",
          "1129:                 replace(/\\{LICENSEID}/g, 'license-'+client_id).",
          "1130:                 replace(/\\{BUTUPLOADID}/g, id+'_action');",
          "1131:             this.fpnode.one('.fp-content').setContent(str);",
          "1133:             Y.all('#'+id+'_file').set('name', 'repo_upload_file');",
          "1134:             Y.all('#'+'newname-'+client_id).set('name', 'title');",
          "1135:             Y.all('#'+'author-'+client_id).set('name', 'author');",
          "1136:             Y.all('#'+'author-'+client_id).set('value', this.options.author);",
          "1137:             Y.all('#'+'license-'+client_id).set('name', 'license');",
          "1138:             this.populate_licenses_select(Y.one('#'+'license-'+client_id))",
          "1139:             Y.one('#'+id).appendChild(Y.Node.create('<input/>').",
          "1143:                 Y.one('#'+id).appendChild(Y.Node.create('<input/>').",
          "1148:             Y.one('#'+id+'_action').on('click', function(e) {",
          "1150:                 var license = Y.one('#license-'+client_id);",
          "1152:                 if (!Y.one('#'+id+'_file').get('value')) {",
          "",
          "[Added Lines]",
          "1149:             var content = this.fpnode.one('.fp-content');",
          "1150:             content.setContent(M.core_filepicker.templates.uploadform);",
          "1152:             content.all('.fp-file,.fp-saveas,.fp-setauthor,.fp-setlicense').each(function (node) {",
          "1153:                 node.all('label').set('for', node.one('input,select').generateID());",
          "1154:             });",
          "1155:             content.one('form').set('id', id);",
          "1156:             content.one('.fp-file input').set('name', 'repo_upload_file');",
          "1157:             content.one('.fp-saveas input').set('name', 'title');",
          "1158:             content.one('.fp-setauthor input').setAttrs({name:'author', value:this.options.author});",
          "1159:             content.one('.fp-setlicense select').set('name', 'license');",
          "1160:             this.populate_licenses_select(content.one('.fp-setlicense select'))",
          "1162:             content.one('form').appendChild(Y.Node.create('<input/>').",
          "1166:                 content.one('form').appendChild(Y.Node.create('<input/>').",
          "1171:             content.one('.fp-upload-btn').on('click', function(e) {",
          "1173:                 var license = content.one('.fp-setlicense select');",
          "1175:                 if (!content.one('.fp-file input').get('value')) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1186:         setup_toolbar: function() {",
          "1187:             var client_id = this.options.client_id;",
          "1189:                 e.preventDefault();",
          "1190:                 if (!this.active_repo.nologin) {",
          "1191:                     this.hide_header();",
          "",
          "[Removed Lines]",
          "1188:             Y.one('#fp-tb-logout-'+client_id).on('click', function(e) {",
          "",
          "[Added Lines]",
          "1211:             var toolbar = this.fpnode.one('.fp-toolbar');",
          "1212:             toolbar.one('.fp-tb-logout').one('a,button').on('click', function(e) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1198:                     }, true);",
          "1199:                 }",
          "1200:             }, this);",
          "1202:                 e.preventDefault();",
          "1203:                 if (!this.active_repo.norefresh) {",
          "1204:                     this.list();",
          "1205:                 }",
          "1206:             }, this);",
          "1208:                 set('method', 'POST').",
          "1209:                 on('submit', function(e) {",
          "1210:                     e.preventDefault();",
          "1211:                     if (!this.active_repo.nosearch) {",
          "",
          "[Removed Lines]",
          "1201:             Y.one('#fp-tb-refresh-'+client_id).on('click', function(e) {",
          "1207:             Y.one('#fp-tb-search-'+client_id).",
          "",
          "[Added Lines]",
          "1225:             toolbar.one('.fp-tb-refresh').one('a,button').on('click', function(e) {",
          "1231:             toolbar.one('.fp-tb-search form').",
          "1233:                 set('id', 'fp-tb-search-'+client_id).",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1220:                     }",
          "1221:                 }, this);",
          "1225:             var managelnk = Y.Node.create('<a/>').",
          "1226:                 setAttrs({id:'fp-tb-manage-'+client_id+'-link', target:'_blank'}).",
          "1227:                 setStyle('display', 'none');",
          "1235:             var helplnk = Y.Node.create('<a/>').",
          "1236:                 setAttrs({id:'fp-tb-help-'+client_id+'-link', target:'_blank'}).",
          "1237:                 setStyle('display', 'none');",
          "1243:         },",
          "1244:         hide_header: function() {",
          "1248:             }",
          "1249:             if (this.pathbar) {",
          "1250:                 this.pathbar.setContent('').addClass('empty');",
          "",
          "[Removed Lines]",
          "1228:             Y.one('#fp-tb-'+client_id).append(managelnk);",
          "1229:             Y.one('#fp-tb-manage-'+client_id).on('click', function(e) {",
          "1230:                 e.preventDefault();",
          "1231:                 managelnk.simulate('click')",
          "1232:             });",
          "1238:             Y.one('#fp-tb-'+client_id).append(helplnk);",
          "1239:             Y.one('#fp-tb-help-'+client_id).on('click', function(e) {",
          "1240:                 e.preventDefault();",
          "1241:                 helplnk.simulate('click')",
          "1242:             });",
          "1245:             var client_id = this.options.client_id;",
          "1246:             if (Y.one('#fp-tb-'+client_id)) {",
          "1247:                 Y.one('#fp-tb-'+client_id).addClass('empty');",
          "",
          "[Added Lines]",
          "1253:             toolbar.append(managelnk);",
          "1254:             toolbar.one('.fp-tb-manage').one('a,button').",
          "1255:                 on('click', function(e) {",
          "1256:                     e.preventDefault();",
          "1257:                     managelnk.simulate('click')",
          "1258:                 });",
          "1264:             toolbar.append(helplnk);",
          "1265:             toolbar.one('.fp-tb-manage').one('a,button').",
          "1266:                 on('click', function(e) {",
          "1267:                     e.preventDefault();",
          "1268:                     helplnk.simulate('click')",
          "1269:                 });",
          "1272:             if (this.fpnode.one('.fp-toolbar')) {",
          "1273:                 this.fpnode.one('.fp-toolbar').addClass('empty');",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1259:             var client_id = this.options.client_id;",
          "1260:             this.hide_header();",
          "1261:             this.print_paging();",
          "1269:                 }",
          "1270:             }",
          "1277:             if(!r.nosearch) {",
          "1279:                 this.request({",
          "1280:                     scope: this,",
          "1281:                     action:'searchform',",
          "",
          "[Removed Lines]",
          "1263:             var enable_tb_control = function(elementid, enabled) {",
          "1264:                 if (!enabled) {",
          "1265:                     Y.all('#'+elementid+',#wrap-'+elementid).addClass('disabled').removeClass('enabled')",
          "1266:                 } else {",
          "1267:                     Y.all('#'+elementid+',#wrap-'+elementid).removeClass('disabled').addClass('enabled')",
          "1268:                     Y.one('#fp-tb-'+client_id).removeClass('empty');",
          "1273:             enable_tb_control('fp-tb-back-'+client_id, false);",
          "1276:             enable_tb_control('fp-tb-search-'+client_id, !r.nosearch);",
          "1278:                 Y.all('#fp-tb-search-'+client_id).setContent('');",
          "",
          "[Added Lines]",
          "1288:             this.print_path();",
          "1289:             var toolbar = this.fpnode.one('.fp-toolbar');",
          "1290:             if (!toolbar) { return; }",
          "1292:             var enable_tb_control = function(node, enabled) {",
          "1293:                 if (!node) { return; }",
          "1294:                 node.addClassIf('disabled', !enabled).addClassIf('enabled', enabled)",
          "1295:                 if (enabled) {",
          "1296:                     toolbar.removeClass('empty');",
          "1301:             enable_tb_control(toolbar.one('.fp-tb-back'), false);",
          "1304:             enable_tb_control(toolbar.one('.fp-tb-search'), !r.nosearch);",
          "1306:                 var searchform = toolbar.one('.fp-tb-search form');",
          "1307:                 searchform.setContent('');",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1283:                     callback: function(id, obj, args) {",
          "1284:                         if (obj.repo_id == scope.active_repo.id && obj.form) {",
          "1287:                         }",
          "1288:                     }",
          "1289:                 }, false);",
          "",
          "[Removed Lines]",
          "1286:                             Y.all('#fp-tb-search-'+scope.options.client_id).setContent(obj.form);",
          "",
          "[Added Lines]",
          "1315:                             searchform.setContent(obj.form);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1298:             if(!r.nologin) {",
          "1299:                 var label = r.logouttext?r.logouttext:M.str.repository.logout;",
          "1301:             }",
          "1305:             Y.one('#fp-tb-manage-'+client_id+'-link').set('href', r.manage);",
          "1309:             Y.one('#fp-tb-help-'+client_id+'-link').set('href', r.help);",
          "1312:         },",
          "1313:         get_page_button: function(page) {",
          "1314:             var r = this.active_repo;",
          "",
          "[Removed Lines]",
          "1294:             enable_tb_control('fp-tb-refresh-'+client_id, !r.norefresh);",
          "1297:             enable_tb_control('fp-tb-logout-'+client_id, !r.nologin);",
          "1300:                 Y.one('#fp-tb-logout-'+client_id).setContent(label)",
          "1304:             enable_tb_control('fp-tb-manage-'+client_id, r.manage);",
          "1308:             enable_tb_control('fp-tb-help-'+client_id, r.help);",
          "1311:             this.print_path();",
          "",
          "[Added Lines]",
          "1323:             enable_tb_control(toolbar.one('.fp-tb-refresh'), !r.norefresh);",
          "1326:             enable_tb_control(toolbar.one('.fp-tb-logout'), !r.nologin);",
          "1329:                 toolbar.one('.fp-tb-logout').one('a,button').setContent(label)",
          "1333:             enable_tb_control(toolbar.one('.fp-tb-manage'), r.manage);",
          "1337:             enable_tb_control(toolbar.one('.fp-tb-help'), r.help);",
          "",
          "---------------"
        ],
        "repository/lib.php||repository/lib.php": [
          "File: repository/lib.php -> repository/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1793:         }",
          "1794:         $len = count($listing['list']);",
          "1795:         for ($i=0; $i<$len; $i++) {",
          "1799:             }",
          "1800:             foreach (array('date', 'datemodified', 'datecreated') as $key) {",
          "1803:                 }",
          "1809:                     } else {",
          "1812:                     }",
          "1813:                 }",
          "1814:             }",
          "1817:                 if (get_string_manager()->string_exists($mimetype, 'mimetypes')) {",
          "1818:                     $mimetype = get_string($mimetype, 'mimetypes');",
          "1819:                 }",
          "1821:             }",
          "1825:                 } else {",
          "1827:                 }",
          "1828:             }",
          "1829:         }",
          "",
          "[Removed Lines]",
          "1796:             if (isset($listing['list'][$i]['size'])) {",
          "1797:                 $listing['list'][$i]['size'] = (int)$listing['list'][$i]['size'];",
          "1798:                 $listing['list'][$i]['size_f'] = display_size($listing['list'][$i]['size']);",
          "1801:                 if (!isset($listing['list'][$i][$key]) && isset($listing['list'][$i]['date'])) {",
          "1802:                     $listing['list'][$i][$key] = $listing['list'][$i]['date'];",
          "1804:                 if (isset($listing['list'][$i][$key])) {",
          "1806:                     $listing['list'][$i][$key] = (int)$listing['list'][$i][$key];",
          "1807:                     if (!$listing['list'][$i][$key]) {",
          "1808:                         unset($listing['list'][$i][$key]);",
          "1810:                         $listing['list'][$i][$key.'_f'] = userdate($listing['list'][$i][$key], get_string('strftimedatetime', 'langconfig'));",
          "1811:                         $listing['list'][$i][$key.'_f_s'] = userdate($listing['list'][$i][$key], get_string('strftimedatetimeshort', 'langconfig'));",
          "1815:             if (!isset($listing['list'][$i]['type']) && !array_key_exists('children', $listing['list'][$i]) && isset($listing['list'][$i]['title'])) {",
          "1816:                 $mimetype = mimeinfo('type', $listing['list'][$i]['title']);",
          "1820:                 $listing['list'][$i]['type'] = $mimetype;",
          "1822:             if (!isset($listing['list'][$i]['icon']) && isset($listing['list'][$i]['title'])) {",
          "1823:                 if (array_key_exists('children', $listing['list'][$i])) {",
          "1824:                     $listing['list'][$i]['icon'] = $OUTPUT->pix_url('f/folder')->out(false);",
          "1826:                     $listing['list'][$i]['icon'] = $OUTPUT->pix_url('f/'.mimeinfo('icon', $listing['list'][$i]['title']))->out(false);",
          "",
          "[Added Lines]",
          "1796:             $file = & $listing['list'][$i];",
          "1797:             if (isset($file['size'])) {",
          "1798:                 $file['size'] = (int)$file['size'];",
          "1799:                 $file['size_f'] = display_size($file['size']);",
          "1800:             }",
          "1801:             if (isset($file['license']) &&",
          "1802:                     get_string_manager()->string_exists($file['license'], 'license')) {",
          "1803:                 $file['license_f'] = get_string($file['license'], 'license');",
          "1804:             }",
          "1805:             if (isset($file['image_width']) && isset($file['image_height'])) {",
          "1806:                 $file['dimensions'] = $file['image_width'].'x'.$file['image_height'];",
          "1809:                 if (!isset($file[$key]) && isset($file['date'])) {",
          "1810:                     $file[$key] = $file['date'];",
          "1812:                 if (isset($file[$key])) {",
          "1814:                     $file[$key] = (int)$file[$key];",
          "1815:                     if (!$file[$key]) {",
          "1816:                         unset($file[$key]);",
          "1818:                         $file[$key.'_f'] = userdate($file[$key], get_string('strftimedatetime', 'langconfig'));",
          "1819:                         $file[$key.'_f_s'] = userdate($file[$key], get_string('strftimedatetimeshort', 'langconfig'));",
          "1823:             if (!isset($file['type']) && !array_key_exists('children', $file) && isset($file['title'])) {",
          "1824:                 $mimetype = mimeinfo('type', $file['title']);",
          "1828:                 $file['type'] = $mimetype;",
          "1830:             if (!isset($file['icon']) && isset($file['title'])) {",
          "1831:                 if (array_key_exists('children', $file)) {",
          "1832:                     $file['icon'] = $OUTPUT->pix_url('f/folder')->out(false);",
          "1834:                     $file['icon'] = $OUTPUT->pix_url('f/'.mimeinfo('icon', $file['title']))->out(false);",
          "",
          "---------------"
        ],
        "repository/renderer.php||repository/renderer.php": [
          "File: repository/renderer.php -> repository/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:       </ul>",
          "97:     </div>",
          "98:     <div style=\"width:480px;height:400px;display:inline-block;vertical-align:top;\">",
          "102:           <img src=\"'.$this->pix_url('a/search').'\" />",
          "104:         </div>",
          "109:       </div>",
          "110:       <div class=\"{!}fp-paging\" style=\"background:pink\"></div>",
          "111:       <div class=\"fp-pathbar\" style=\"background:#ddffdd\">",
          "",
          "[Removed Lines]",
          "99:       <div class=\"fp-toolbar\" id=\"{TOOLBARID}\" style=\"background:yellow\">",
          "100:         <div id=\"wrap-{TOOLBACKID}\"><a id=\"{TOOLBACKID}\">'.get_string('back', 'repository').'</a></div>",
          "101:         <div id=\"wrap-{TOOLSEARCHID}\">",
          "103:           <form id=\"{TOOLSEARCHID}\"></form>",
          "105:         <div id=\"wrap-{TOOLREFRESHID}\"><a id=\"{TOOLREFRESHID}\"><img src=\"'.$this->pix_url('a/refresh').'\" />'.get_string('refresh', 'repository').'</a></div>",
          "106:         <div id=\"wrap-{TOOLLOGOUTID}\"><img src=\"'.$this->pix_url('a/logout').'\" /><a id=\"{TOOLLOGOUTID}\"></a></div>",
          "107:         <div id=\"wrap-{TOOLMANAGEID}\"><a id=\"{TOOLMANAGEID}\"><img src=\"'.$this->pix_url('a/setting').'\" /> '.get_string('manageurl', 'repository').'</a></div>",
          "108:         <div id=\"wrap-{TOOLHELPID}\"><a id=\"{TOOLHELPID}\"><img src=\"'.$this->pix_url('a/help').'\" /> '.get_string('help').'</a></div>",
          "",
          "[Added Lines]",
          "96:       <div class=\"{!}fp-toolbar\">",
          "97:         <div class=\"{!}fp-tb-back\"><a>'.get_string('back', 'repository').'</a></div>",
          "98:         <div class=\"{!}fp-tb-search\">",
          "100:           <form/>",
          "102:         <div class=\"{!}fp-tb-refresh\"><a><img src=\"'.$this->pix_url('a/refresh').'\" />'.get_string('refresh', 'repository').'</a></div>",
          "103:         <div class=\"{!}fp-tb-logout\"><img src=\"'.$this->pix_url('a/logout').'\" /><a></a></div>",
          "104:         <div class=\"{!}fp-tb-manage\"><a><img src=\"'.$this->pix_url('a/setting').'\" /> '.get_string('manageurl', 'repository').'</a></div>",
          "105:         <div class=\"{!}fp-tb-help\"><a><img src=\"'.$this->pix_url('a/help').'\" /> '.get_string('help').'</a></div>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "194: <p>'.get_string('loading', 'repository').'</p>",
          "195: </div>",
          "196: <form>",
          "198: <table width=\"100%\">",
          "207: </table>",
          "211:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "212:     }",
          "",
          "[Removed Lines]",
          "197: <p id=\"{IMGID}\"></p>",
          "199: <tr><td class=\"mdl-right\"><label for=\"{NEWNAMEID}\">'.get_string('saveas', 'repository').'</label>:</td>",
          "200: <td class=\"mdl-left\"><input type=\"text\" id=\"{NEWNAMEID}\" /></td></tr>",
          "201: <tr id=\"wrap-{LINKEXTID}\"><td></td>",
          "202: <td class=\"mdl-left\"><input type=\"checkbox\" id=\"{LINKEXTID}\" value=\"\" /><label for=\"{LINKEXTID}\">'.get_string('linkexternal', 'repository').'</label></td></tr>",
          "203: <tr id=\"wrap-{AUTHORID}\"><td class=\"mdl-right\"><label for=\"{AUTHORID}\">'.get_string('author', 'repository').'</label>:</td>",
          "204: <td class=\"mdl-left\"><input id=\"{AUTHORID}\" type=\"text\" /></td></tr>",
          "205: <tr id=\"wrap-{LICENSEID}\"><td class=\"mdl-right\"><label for=\"{LICENSEID}\">'.get_string('chooselicense', 'repository').'</label>:</td>",
          "206: <td class=\"mdl-left\"><select id=\"{LICENSEID}\"></select></td></tr>",
          "208: <p><button id=\"{BUTCONFIRMID}\" >'.get_string('getfile', 'repository').'</button>",
          "209: <button id=\"{BUTCANCELID}\" >'.get_string('cancel').'</button></p>",
          "210: </form></div>';",
          "",
          "[Added Lines]",
          "197: <p class=\"{!}fp-thumbnail\"></p>",
          "199: <tr class=\"{!}fp-saveas\"><td class=\"mdl-right\"><label>'.get_string('saveas', 'repository').'</label>:</td>",
          "200: <td class=\"mdl-left\"><input type=\"text\"/></td></tr>",
          "201: <tr class=\"{!}fp-linkexternal\"><td></td>",
          "202: <td class=\"mdl-left\"><input type=\"checkbox\"/><label>'.get_string('linkexternal', 'repository').'</label></td></tr>",
          "203: <tr class=\"{!}fp-setauthor\"><td class=\"mdl-right\"><label>'.get_string('author', 'repository').'</label>:</td>",
          "204: <td class=\"mdl-left\"><input type=\"text\" /></td></tr>",
          "205: <tr class=\"{!}fp-setlicense\"><td class=\"mdl-right\"><label>'.get_string('chooselicense', 'repository').'</label>:</td>",
          "206: <td class=\"mdl-left\"><select></select></td></tr>",
          "208: <p><button class=\"{!}fp-select-confirm\" >'.get_string('getfile', 'repository').'</button>",
          "209: <button class=\"{!}fp-select-cancel\" >'.get_string('cancel').'</button></p>",
          "210: </form>",
          "211: <div class=\"{!}fp-datemodified\">'.get_string('lastmodified', 'moodle').': <span class=\"fp-value\"/></div>",
          "212: <div class=\"{!}fp-datecreated\">'.get_string('datecreated', 'repository').': <span class=\"fp-value\"/></div>",
          "213: <div class=\"{!}fp-size\">'.get_string('size', 'repository').': <span class=\"fp-value\"/></div>",
          "214: <div class=\"{!}fp-license\">'.get_string('license', 'moodle').': <span class=\"fp-value\"/></div>",
          "215: <div class=\"{!}fp-author\">'.get_string('author', 'repository').': <span class=\"fp-value\"/></div>",
          "216: <div class=\"{!}fp-dimensions\">'.get_string('dimensions', 'repository').': <span class=\"fp-value\"/></div>",
          "217: </div>';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "230:     public function js_template_uploadform() {",
          "233:   <table width=\"100%\">",
          "237:     </tr>",
          "241:     </tr>",
          "245:     </tr>",
          "249:     </tr>",
          "250:   </table>",
          "251: </form>",
          "253: </div> ';",
          "254:     }",
          "",
          "[Removed Lines]",
          "231:         return '<div class=\"fp-upload-form mdl-align\">",
          "232: <form id=\"{UPLOADFORMID}\" enctype=\"multipart/form-data\" method=\"POST\">",
          "234:     <tr>",
          "235:       <td class=\"mdl-right\"><label for=\"{INPUTFILEID}\">'.get_string('attachment', 'repository').'</label>:</td>",
          "236:       <td class=\"mdl-left\"><input type=\"file\" id=\"{INPUTFILEID}\" /></td>",
          "238:     <tr>",
          "239:       <td class=\"mdl-right\"><label for=\"{NEWNAMEID}\">'.get_string('saveas', 'repository').'</label>:</td>",
          "240:       <td class=\"mdl-left\"><input type=\"text\" id=\"{NEWNAMEID}\" /></td>",
          "242:     <tr>",
          "243:       <td class=\"mdl-right\"><label for=\"{AUTHORID}\">'.get_string('author', 'repository').'</label>:</td>",
          "244:       <td class=\"mdl-left\"><input type=\"text\" id=\"{AUTHORID}\" /></td>",
          "246:     <tr>",
          "247:       <td class=\"mdl-right\"><label for=\"{LICENSEID}\">'.get_string('chooselicense', 'repository').'</label>:</td>",
          "248:       <td class=\"mdl-left\"><select id=\"{LICENSEID}\" /></td>",
          "252: <div class=\"fp-upload-btn\"><button id=\"{BUTUPLOADID}\">'.get_string('upload', 'repository').'</button></div>",
          "",
          "[Added Lines]",
          "238:         $rv = '<div class=\"fp-upload-form mdl-align\">",
          "239: <form enctype=\"multipart/form-data\" method=\"POST\">",
          "241:     <tr class=\"{!}fp-file\">",
          "242:       <td class=\"mdl-right\"><label>'.get_string('attachment', 'repository').'</label>:</td>",
          "243:       <td class=\"mdl-left\"><input type=\"file\"/></td>",
          "245:     <tr class=\"{!}fp-saveas\">",
          "246:       <td class=\"mdl-right\"><label>'.get_string('saveas', 'repository').'</label>:</td>",
          "247:       <td class=\"mdl-left\"><input type=\"text\"/></td>",
          "249:     <tr class=\"{!}fp-setauthor\">",
          "250:       <td class=\"mdl-right\"><label>'.get_string('author', 'repository').'</label>:</td>",
          "251:       <td class=\"mdl-left\"><input type=\"text\"/></td>",
          "253:     <tr class=\"{!}fp-setlicense\">",
          "254:       <td class=\"mdl-right\"><label>'.get_string('chooselicense', 'repository').'</label>:</td>",
          "255:       <td class=\"mdl-left\"><select/></td>",
          "259: <div><button class=\"{!}fp-upload-btn\">'.get_string('upload', 'repository').'</button></div>",
          "261:         return preg_replace('/\\{\\!\\}/', '', $rv);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "906e7d89a53b06d06c215ca524d0a0ef282010df",
      "candidate_info": {
        "commit_hash": "906e7d89a53b06d06c215ca524d0a0ef282010df",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/906e7d89a53b06d06c215ca524d0a0ef282010df",
        "files": [
          "files/renderer.php",
          "lib/form/dndupload.js",
          "lib/form/filemanager.js",
          "lib/form/filemanager.php",
          "lib/form/filepicker.js",
          "lib/outputrenderers.php",
          "theme/base/style/filemanager.css"
        ],
        "message": "MDL-31901: user renderer for filemanager, decrease html generation in filemanager.js and dndupload.js",
        "before_after_code_files": [
          "files/renderer.php||files/renderer.php",
          "lib/form/dndupload.js||lib/form/dndupload.js",
          "lib/form/filemanager.js||lib/form/filemanager.js",
          "lib/form/filemanager.php||lib/form/filemanager.php",
          "lib/form/filepicker.js||lib/form/filepicker.js",
          "lib/outputrenderers.php||lib/outputrenderers.php",
          "theme/base/style/filemanager.css||theme/base/style/filemanager.css"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/form/filemanager.js||lib/form/filemanager.js"
          ],
          "candidate": [
            "lib/form/filemanager.js||lib/form/filemanager.js"
          ]
        }
      },
      "candidate_diff": {
        "files/renderer.php||files/renderer.php": [
          "File: files/renderer.php -> files/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:         $html .= $this->output->box_end();",
          "83:         return $html;",
          "84:     }",
          "85: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:     function render_form_filemanager($fm) {",
          "99:         static $filemanagertemplateloaded;",
          "100:         $html = $this->file_manager_html($fm);",
          "101:         $module = array(",
          "102:             'name'=>'form_filemanager',",
          "103:             'fullpath'=>'/lib/form/filemanager.js',",
          "104:             'requires' => array('core_filepicker', 'base', 'io-base', 'node', 'json', 'yui2-button', 'yui2-container', 'yui2-layout', 'yui2-menu', 'yui2-treeview', 'core_dndupload'),",
          "105:             'strings' => array(array('loading', 'repository'), array('nomorefiles', 'repository'), array('confirmdeletefile', 'repository'),",
          "106:                  array('add', 'repository'), array('accessiblefilepicker', 'repository'), array('move', 'moodle'),",
          "107:                  array('cancel', 'moodle'), array('download', 'moodle'), array('ok', 'moodle'),",
          "108:                  array('emptylist', 'repository'), array('nofilesattached', 'repository'), array('entername', 'repository'), array('enternewname', 'repository'),",
          "109:                  array('zip', 'editor'), array('unzip', 'moodle'), array('rename', 'moodle'), array('delete', 'moodle'),",
          "110:                  array('cannotdeletefile', 'error'), array('confirmdeletefile', 'repository'),",
          "111:                  array('nopathselected', 'repository'), array('popupblockeddownload', 'repository'),",
          "112:                  array('draftareanofiles', 'repository'), array('path', 'moodle'), array('setmainfile', 'repository'),",
          "113:                  array('moving', 'repository'), array('files', 'moodle'), array('serverconnection', 'error')",
          "114:             )",
          "115:         );",
          "116:         if (empty($filemanagertemplateloaded)) {",
          "117:             $filemanagertemplateloaded = true;",
          "118:             $this->page->requires->js_init_call('M.form_filemanager.set_templates',",
          "119:                     array(array(",
          "120:                         'onefile' => '___fullname___ ___action___'",
          "121:                     )), true, $module);",
          "122:         }",
          "123:         $this->page->requires->js_init_call('M.form_filemanager.init', array($fm->options), true, $module);",
          "126:         $html .= '<noscript>';",
          "127:         $html .= \"<div><object type='text/html' data='\".$fm->get_nonjsurl().\"' height='160' width='600' style='border:1px solid #000'></object></div>\";",
          "128:         $html .= '</noscript>';",
          "131:         return $html;",
          "132:     }",
          "168:     private function file_manager_html($fm) {",
          "169:         global $OUTPUT;",
          "170:         $options = $fm->options;",
          "171:         $client_id = $options->client_id;",
          "172:         $straddfile  = get_string('addfile', 'repository');",
          "173:         $strmakedir  = get_string('makeafolder', 'moodle');",
          "174:         $strdownload = get_string('downloadfolder', 'repository');",
          "175:         $strloading  = get_string('loading', 'repository');",
          "176:         $strnofilesattached = get_string('nofilesattached', 'repository');",
          "177:         $strdroptoupload = get_string('droptoupload', 'moodle');",
          "178:         $icon_progress = $OUTPUT->pix_icon('i/loading_small', $strloading).'';",
          "179:         $restrictions = $this->file_manager_restrictions($fm);",
          "180:         $strdndenabled = get_string('dndenabled_insentence', 'moodle').$OUTPUT->help_icon('dndenabled');",
          "181:         $strdndenabledinbox = get_string('dndenabled_inbox', 'moodle');",
          "182:         $loading = get_string('loading', 'repository');",
          "184:         $html .= <<<FMHTML",
          "185: <div id=\"filemanager-{$client_id}\" class=\"filemanager fm-loading\">",
          "186:     <div class=\"filemanager-loading mdl-align\">{$icon_progress}</div>",
          "187:     <div class=\"fm-breadcrumb\"></div>",
          "188:     <div class=\"filemanager-toolbar\">",
          "189:         <input type=\"button\" class=\"fm-btn-add\" value=\"{$straddfile}\" />",
          "190:         <input type=\"button\" class=\"fm-btn-mkdir\" value=\"{$strmakedir}\" />",
          "191:         <input type=\"button\" class=\"fm-btn-download\" value=\"{$strdownload}\" />",
          "192:         {$restrictions}",
          "193:         <span class=\"dndupload-message\"> - $strdndenabled </span>",
          "194:     </div>",
          "195:     <div class=\"filemanager-container\" >",
          "196:         <ul class=\"fm-filelist\"></ul>",
          "197:         <div class=\"fm-empty-container mdl-align\">{$strnofilesattached}",
          "198:             <span class=\"dndupload-message\">{$strdndenabledinbox}</span>",
          "199:         </div>",
          "200:         <div class=\"dndupload-target\">{$strdroptoupload}</div>",
          "201:         <div class=\"dndupload-uploadinprogress\">{$icon_progress}</div>",
          "202:         <div class=\"filemanager-updating\">{$icon_progress}</div>",
          "203:     </div>",
          "204: </div>",
          "205: <div class=\"clearer\"></div>",
          "206: FMHTML;",
          "207:         return $html;",
          "208:     }",
          "216:     private function file_manager_restrictions($fm) {",
          "217:         $maxbytes = display_size($fm->options->maxbytes);",
          "218:         if (empty($options->maxfiles) || $options->maxfiles == -1) {",
          "219:             $maxsize = get_string('maxfilesize', 'moodle', $maxbytes);",
          "221:         } else {",
          "222:             $strparam = (object)array('size' => $maxbytes, 'attachments' => $options->maxfiles);",
          "223:             $maxsize = get_string('maxsizeandattachments', 'moodle', $strparam);",
          "225:         }",
          "227:         return '<span>'. $maxsize. '</span>';",
          "228:     }",
          "",
          "---------------"
        ],
        "lib/form/dndupload.js||lib/form/dndupload.js": [
          "File: lib/form/dndupload.js -> lib/form/dndupload.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:         init: function(Y, options) {",
          "74:             this.Y = Y;",
          "76:             if (!this.browser_supported()) {",
          "77:                 return; // Browser does not support the required functionality",
          "78:             }",
          "81:             this.repositoryid = this.get_upload_repositoryid(options.repositories);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:                 Y.one('body').addClass('dndnotsupported');",
          "80:             Y.one('body').addClass('dndsupported');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89:             this.maxfiles = options.maxfiles;",
          "90:             this.maxbytes = options.maxbytes;",
          "91:             this.itemid = options.itemid;",
          "94:             if (options.filemanager) {",
          "97:                 this.filemanager = options.filemanager;",
          "107:             } else if (options.formcallback) {",
          "",
          "[Removed Lines]",
          "92:             this.container = this.Y.one(options.containerprefix + this.clientid);",
          "101:                 this.filemanager.emptycallback = function(clientid) {",
          "102:                     var el = Y.one('#dndenabled2-'+clientid);",
          "103:                     if (el) {",
          "104:                         el.setStyle('display', 'inline');",
          "105:                     }",
          "106:                 }",
          "",
          "[Added Lines]",
          "94:             this.container = this.Y.one('#'+options.containerid);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "111:                 this.callback = options.formcallback;",
          "112:             } else {",
          "113:                 if (M.cfg.developerdebug) {",
          "115:                 }",
          "116:                 return;",
          "117:             }",
          "119:             this.init_events();",
          "120:             this.init_page_events();",
          "122:         },",
          "",
          "[Removed Lines]",
          "114:                     alert('dndupload: Need to define either options.filemanager or options.callback');",
          "121:             this.Y.one('#dndenabled-'+this.clientid).setStyle('display', 'inline');",
          "",
          "[Added Lines]",
          "107:                     alert('dndupload: Need to define either options.filemanager or options.formcallback');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "363:         show_drop_target: function() {",
          "365:         },",
          "367:         hide_drop_target: function() {",
          "369:         },",
          "",
          "[Removed Lines]",
          "364:             this.Y.one('#filemanager-uploadmessage'+this.clientid).setStyle('display', 'block');",
          "368:             this.Y.one('#filemanager-uploadmessage'+this.clientid).setStyle('display', 'none');",
          "",
          "[Added Lines]",
          "356:             this.container.addClass('dndupload-ready');",
          "360:             this.container.removeClass('dndupload-ready');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "388:         show_progress_spinner: function() {",
          "393:         },",
          "398:         hide_progress_spinner: function() {",
          "403:         },",
          "",
          "[Removed Lines]",
          "390:             var loadingspinner = this.Y.Node.create('<div id=\"dndprogresspinner-'+this.clientid+'\" style=\"text-align: center\">');",
          "391:             loadingspinner.append('<img src=\"'+M.util.image_url('i/loading_small')+'\" />');",
          "392:             this.container.append(loadingspinner);",
          "399:             var spinner = this.Y.one('#dndprogresspinner-'+this.clientid);",
          "400:             if (spinner) {",
          "401:                 spinner.remove();",
          "402:             }",
          "",
          "[Added Lines]",
          "381:             this.container.addClass('dndupload-uploading');",
          "388:             this.container.removeClass('dndupload-uploading');",
          "",
          "---------------"
        ],
        "lib/form/filemanager.js||lib/form/filemanager.js": [
          "File: lib/form/filemanager.js -> lib/form/filemanager.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "37: M.form_filemanager = {};",
          "",
          "[Added Lines]",
          "37: M.form_filemanager = {templates:{}};",
          "39: M.form_filemanager.set_templates = function(Y, templates) {",
          "40:     M.form_filemanager.templates = templates;",
          "41: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:             } else {",
          "77:                 this.filecount = 0;",
          "78:             }",
          "79:             this.setup_buttons();",
          "80:             this.refresh(this.currentpath); // MDL-31113 get latest list from server",
          "81:         },",
          "83:         wait: function(client_id) {",
          "98:         },",
          "99:         request: function(args, redraw) {",
          "100:             var api = this.api + '?action='+args.action;",
          "",
          "[Removed Lines]",
          "84:             var container = Y.one('#filemanager-'+client_id);",
          "85:             container.set('innerHTML', '');",
          "86:             var html = Y.Node.create('<ul id=\"draftfiles-'+client_id+'\"></ul>');",
          "87:             container.appendChild(html);",
          "88:             var panel = Y.one('#draftfiles-'+client_id);",
          "89:             var name = '';",
          "90:             var str = '<div style=\"text-align:center\">';",
          "91:             str += '<img src=\"'+M.util.image_url('i/loading_small')+'\" />';",
          "92:             str += '</div>';",
          "93:             try {",
          "94:                 panel.set('innerHTML', str);",
          "95:             } catch(e) {",
          "96:                 alert(e.toString());",
          "97:             }",
          "",
          "[Added Lines]",
          "83:             this.filemanager = Y.one('#filemanager-'+options.client_id);",
          "84:             if (this.filemanager.hasClass('filemanager-container') || !this.filemanager.one('.filemanager-container')) {",
          "85:                 this.dndcontainer = this.filemanager;",
          "86:             } else  {",
          "87:                 this.dndcontainer = this.filemanager.one('.filemanager-container');",
          "88:                 if (!this.dndcontainer.get('id')) {",
          "89:                     this.dndcontainer.generateID();",
          "90:                 }",
          "91:             }",
          "97:            this.filemanager.addClass('fm-updating');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "150:             }",
          "151:         },",
          "152:         check_buttons: function() {",
          "160:         },",
          "161:         refresh: function(filepath) {",
          "162:             var scope = this;",
          "",
          "[Removed Lines]",
          "153:             var button_addfile  = Y.one(\"#btnadd-\"+this.client_id);",
          "154:             if (this.filecount > 0) {",
          "155:                 Y.one(\"#btndwn-\"+this.client_id).setStyle('display', 'inline');",
          "156:             }",
          "157:             if (this.filecount >= this.maxfiles && this.maxfiles!=-1) {",
          "158:                 button_addfile.setStyle('display', 'none');",
          "159:             }",
          "",
          "[Added Lines]",
          "153:             if (this.filecount>0) {this.filemanager.removeClass('fm-nofiles');}",
          "154:             else {this.filemanager.addClass('fm-nofiles');}",
          "155:             if (this.filecount >= this.maxfiles && this.maxfiles!=-1)",
          "156:                 {this.filemanager.addClass('fm-maxfiles');}",
          "157:             else {this.filemanager.removeClass('fm-maxfiles');}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "179:             }, true);",
          "180:         },",
          "181:         setup_buttons: function() {",
          "203:             if (this.options.subdirs) {",
          "204:                 button_create.on('click',function(e) {",
          "205:                     var scope = this;",
          "207:                     function perform_action(e) {",
          "",
          "[Removed Lines]",
          "182:             var button_download = Y.one(\"#btndwn-\"+this.client_id);",
          "183:             var button_create   = Y.one(\"#btncrt-\"+this.client_id);",
          "184:             var button_addfile  = Y.one(\"#btnadd-\"+this.client_id);",
          "188:             if (this.filecount >= this.maxfiles",
          "189:                     && this.maxfiles!=-1) {",
          "190:                 button_addfile.setStyle('display', 'none');",
          "191:             } else {",
          "192:                 button_addfile.on('click', function(e) {",
          "193:                     var options = this.filepicker_options;",
          "194:                     options.formcallback = this.filepicker_callback;",
          "196:                     options.magicscope = this;",
          "197:                     options.savepath = this.currentpath;",
          "198:                     M.core_filepicker.show(Y, options);",
          "199:                 }, this);",
          "200:             }",
          "",
          "[Added Lines]",
          "180:             var button_download = this.filemanager.one('.fm-btn-download');",
          "181:             var button_create   = this.filemanager.one('.fm-btn-mkdir');",
          "182:             var button_addfile  = this.filemanager.one('.fm-btn-add');",
          "186:             button_addfile.on('click', function(e) {",
          "187:                 e.preventDefault();",
          "188:                 var options = this.filepicker_options;",
          "189:                 options.formcallback = this.filepicker_callback;",
          "191:                 options.magicscope = this;",
          "192:                 options.savepath = this.currentpath;",
          "193:                 M.core_filepicker.show(Y, options);",
          "194:             }, this);",
          "199:                     e.preventDefault();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "243:                     this.mkdir_dialog.show();",
          "244:                 }, this);",
          "245:             } else {",
          "247:             }",
          "252:                 var scope = this;",
          "254:                 this.request({",
          "",
          "[Removed Lines]",
          "246:                 button_create.setStyle('display', 'none');",
          "251:             button_download.on('click',function() {",
          "",
          "[Added Lines]",
          "241:                 this.filemanager.addClass('fm-nomkdir');",
          "246:             button_download.on('click',function(e) {",
          "247:                 e.preventDefault();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "268:                 });",
          "269:             }, this);",
          "270:         },",
          "288:         render: function() {",
          "289:             var options = this.options;",
          "290:             var path = this.options.path;",
          "291:             var list = this.options.list;",
          "297:                 var count = 0;",
          "298:                 for(var p in path) {",
          "299:                     var arrow = '';",
          "",
          "[Removed Lines]",
          "271:         empty_filelist: function(container) {",
          "272:             var content = '<div class=\"mdl-align\">'+M.str.repository.nofilesattached;",
          "273:             content += '<span id=\"dndenabled2-'+this.client_id+'\" style=\"display: none\">';",
          "274:             content += ' - '+M.util.get_string('dndenabled_inbox', 'moodle')+'</span>';",
          "275:             content += '</div>';",
          "276:             content += this.upload_message();",
          "277:             container.set('innerHTML', content);",
          "278:             if (this.emptycallback) {",
          "279:                 this.emptycallback(this.client_id);",
          "280:             }",
          "281:         },",
          "282:         upload_message: function() {",
          "283:             var div = '<div id=\"filemanager-uploadmessage'+this.client_id+'\" style=\"display:none\" class=\"dndupload-target\">';",
          "284:             div += M.util.get_string('droptoupload', 'moodle');",
          "285:             div += '</div>';",
          "286:             return div;",
          "287:         },",
          "292:             var breadcrumb = Y.one('#fm-path-'+this.client_id);",
          "294:             if (path) {",
          "296:                 breadcrumb.set('innerHTML', '');",
          "",
          "[Added Lines]",
          "271:             var breadcrumb = this.filemanager.one('.fm-breadcrumb');",
          "273:             breadcrumb.set('innerHTML', '').addClass('fm-empty');",
          "275:             if (path && path.length) {",
          "276:                 breadcrumb.removeClass('fm-empty');",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "333:                     }, this, args);",
          "334:                 }",
          "335:             }",
          "338:             var listhtml = '';",
          "",
          "[Removed Lines]",
          "336:             var template = Y.one('#fm-template');",
          "337:             var container = Y.one('#filemanager-' + this.client_id);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "356:             file_data.client_id = folder_data.client_id = zip_data.client_id = this.client_id;",
          "358:             var foldername_ids = [];",
          "359:             if (!list || list.length == 0) {",
          "366:                 return;",
          "370:             }",
          "372:             var count = 0;",
          "",
          "[Removed Lines]",
          "362:                 this.empty_filelist(container);",
          "363:                 if (!path || path.length <= 1) {",
          "364:                     breadcrumb.setStyle('display', 'none');",
          "365:                 }",
          "367:             } else {",
          "368:                 container.setStyle('display', 'block');",
          "369:                 breadcrumb.setStyle('display', 'block');",
          "",
          "[Added Lines]",
          "337:             this.filemanager.removeClass('fm-updating').removeClass('fm-noitems');",
          "339:                 this.filemanager.addClass('fm-noitems');",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "380:                 var action = 'action-'  +this.client_id+'-'+count;",
          "384:                 html_ids.push('#'+htmlid);",
          "385:                 html_data[htmlid] = action;",
          "",
          "[Removed Lines]",
          "382:                 var html = template.get('innerHTML');",
          "",
          "[Added Lines]",
          "353:                 var html = M.form_filemanager.templates.onefile;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "430:                 html = '<li id=\"'+htmlid+'\">'+html+'</li>';",
          "431:                 listhtml += html;",
          "432:             }",
          "441:             Y.on('click', this.create_filemenu, file_ids, this, file_data);",
          "",
          "[Removed Lines]",
          "433:             if (!Y.one('#draftfiles-'+this.client_id)) {",
          "434:                 var filelist = Y.Node.create('<ul id=\"draftfiles-'+this.client_id+'\"></ul>');",
          "435:                 container.appendChild(filelist);",
          "436:             }",
          "437:             listhtml += this.upload_message();",
          "438:             Y.one('#draftfiles-'+this.client_id).set('innerHTML', listhtml);",
          "",
          "[Added Lines]",
          "404:             this.filemanager.one('.fm-filelist').set('innerHTML', listhtml);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "453:         enter_folder: function(e, data) {",
          "454:             var node = e.currentTarget;",
          "455:             var file = data[node.get('id')];",
          "456:             this.refresh(file.filepath);",
          "457:         },",
          "458:         create_filemenu: function(e, data) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "422:             e.preventDefault();",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "589:                             if (typeof M.core_formchangechecker != 'undefined') {",
          "590:                                 M.core_formchangechecker.set_form_changed();",
          "591:                             }",
          "604:                         }",
          "605:                     });",
          "606:                 };",
          "",
          "[Removed Lines]",
          "592:                             if (scope.filecount < scope.maxfiles && scope.maxfiles!=-1) {",
          "593:                                 var button_addfile  = Y.one(\"#btnadd-\"+scope.client_id);",
          "594:                                 button_addfile.setStyle('display', 'inline');",
          "595:                                 button_addfile.on('click', function(e) {",
          "596:                                     var options = scope.filepicker_options;",
          "597:                                     options.formcallback = scope.filepicker_callback;",
          "599:                                     options.magicscope = scope;",
          "600:                                     options.savepath = scope.currentpath;",
          "601:                                     M.core_filepicker.show(Y, options);",
          "602:                                 }, this);",
          "603:                             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "790:     });",
          "809:     var manager = new FileManagerHelper(options);",
          "810:     var dndoptions = {",
          "",
          "[Removed Lines]",
          "794:     var item = document.getElementById('nonjs-filemanager-'+options.client_id);",
          "795:     if (item && !options.usenonjs) {",
          "796:         item.parentNode.removeChild(item);",
          "797:     }",
          "799:     item = document.getElementById('filemanager-loading-'+options.client_id);",
          "800:     if (item) {",
          "801:         item.parentNode.removeChild(item);",
          "802:     }",
          "804:     item = document.getElementById('filemanager-wrapper-'+options.client_id);",
          "805:     if (item) {",
          "806:         item.style.display = '';",
          "807:     }",
          "",
          "[Added Lines]",
          "749:     var filemanager = Y.one('#filemanager-'+options.client_id);",
          "750:     filemanager.removeClass('fm-loading').addClass('fm-loaded');",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "815:         maxbytes: options.maxbytes,",
          "816:         itemid: options.itemid,",
          "817:         repositories: manager.filepicker_options.repositories,",
          "819:     };",
          "820:     M.form_dndupload.init(Y, dndoptions);",
          "821: };",
          "",
          "[Removed Lines]",
          "818:         containerprefix: '#filemanager-',",
          "",
          "[Added Lines]",
          "761:         containerid: manager.dndcontainer.get('id')",
          "",
          "---------------"
        ],
        "lib/form/filemanager.php||lib/form/filemanager.php": [
          "File: lib/form/filemanager.php -> lib/form/filemanager.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "252:         $options->context = $PAGE->context;",
          "254:         $html = $this->_getTabs();",
          "257:         $html .= '<input value=\"'.$draftitemid.'\" name=\"'.$elname.'\" type=\"hidden\" />';",
          "",
          "[Removed Lines]",
          "255:         $html .= form_filemanager_render($options);",
          "",
          "[Added Lines]",
          "255:         $fm = new form_filemanager($options);",
          "256:         $output = $PAGE->get_renderer('core', 'files');",
          "257:         $html .= $output->render($fm);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "277:     public $options;",
          "",
          "[Removed Lines]",
          "275: class form_filemanaer_x {",
          "",
          "[Added Lines]",
          "277: class form_filemanager implements renderable {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "316:             $this->options->$name = $value;",
          "317:         }",
          "320:         $params = new stdClass();",
          "321:         $params->accepted_types = $options->accepted_types;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "332:         $coursebytes = $maxbytes = 0;",
          "333:         list($context, $course, $cm) = get_context_info_array($this->options->context->id);",
          "334:         if (is_object($course)) {",
          "335:             $coursebytes = $course->maxbytes;",
          "336:         }",
          "337:         if (!empty($this->options->maxbytes) && $this->options->maxbytes > 0) {",
          "338:             $maxbytes = $this->options->maxbytes;",
          "339:         }",
          "340:         $this->options->maxbytes = get_max_upload_file_size($CFG->maxbytes, $coursebytes, $maxbytes);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "326:         $filepicker_options = initialise_filepicker($params);",
          "327:         $this->options->filepicker = $filepicker_options;",
          "328:     }",
          "391:     }",
          "459: }",
          "",
          "[Removed Lines]",
          "329: }",
          "350: function form_filemanager_render($options) {",
          "351:     global $CFG, $OUTPUT, $PAGE;",
          "353:     $fm = new form_filemanaer_x($options); //TODO: this is unnecessary here, the nested options are getting too complex",
          "355:     static $filemanagertemplateloaded;",
          "357:     $html = '';",
          "358:     $options = $fm->options;",
          "359:     $straddfile  = get_string('addfile', 'repository');",
          "360:     $strmakedir  = get_string('makeafolder', 'moodle');",
          "361:     $strdownload = get_string('downloadfolder', 'repository');",
          "362:     $strloading  = get_string('loading', 'repository');",
          "364:     $icon_progress = $OUTPUT->pix_icon('i/loading_small', $strloading).'';",
          "366:     $client_id = $options->client_id;",
          "367:     $itemid    = $options->itemid;",
          "368:     list($context, $course, $cm) = get_context_info_array($options->context->id);",
          "369:     if (is_object($course)) {",
          "370:         $course_maxbytes = $course->maxbytes;",
          "371:     } else {",
          "372:         $course_maxbytes = $CFG->maxbytes;",
          "373:     }",
          "375:     if ($options->maxbytes == -1 || empty($options->maxbytes)) {",
          "376:         $options->maxbytes = $CFG->maxbytes;",
          "377:     }",
          "379:     if (empty($options->filecount)) {",
          "380:         $extra = ' style=\"display:none\"';",
          "381:     } else {",
          "382:         $extra = '';",
          "383:     }",
          "385:     $maxbytes = display_size(get_max_upload_file_size($CFG->maxbytes, $course_maxbytes, $options->maxbytes));",
          "386:     if (empty($options->maxfiles) || $options->maxfiles == -1) {",
          "387:         $maxsize = get_string('maxfilesize', 'moodle', $maxbytes);",
          "388:     } else {",
          "389:         $strparam = (object)array('size' => $maxbytes, 'attachments' => $options->maxfiles);",
          "390:         $maxsize = get_string('maxsizeandattachments', 'moodle', $strparam);",
          "392:     $strdndenabled = get_string('dndenabled_insentence', 'moodle').$OUTPUT->help_icon('dndenabled');",
          "393:     $loading = get_string('loading', 'repository');",
          "394:     $html .= <<<FMHTML",
          "395: <div class=\"filemanager-loading mdl-align\" id='filemanager-loading-{$client_id}'>",
          "396: $icon_progress",
          "397: </div>",
          "398: <div id=\"filemanager-wrapper-{$client_id}\" style=\"display:none\">",
          "399:     <div class=\"fm-breadcrumb\" id=\"fm-path-{$client_id}\"></div>",
          "400:     <div class=\"filemanager-toolbar\">",
          "401:         <input type=\"button\" class=\"fm-btn-add\" id=\"btnadd-{$client_id}\" onclick=\"return false\" value=\"{$straddfile}\" />",
          "402:         <input type=\"button\" class=\"fm-btn-mkdir\" id=\"btncrt-{$client_id}\" onclick=\"return false\" value=\"{$strmakedir}\" />",
          "403:         <input type=\"button\" class=\"fm-btn-download\" id=\"btndwn-{$client_id}\" onclick=\"return false\" {$extra} value=\"{$strdownload}\" />",
          "404:         <span> $maxsize </span>",
          "405:         <span id=\"dndenabled-{$client_id}\" style=\"display: none\"> - $strdndenabled </span>",
          "406:     </div>",
          "407:     <div class=\"filemanager-container\" id=\"filemanager-{$client_id}\" style=\"position: relative\" >",
          "408:         <ul id=\"draftfiles-{$client_id}\" class=\"fm-filelist\">",
          "409:             <li>{$loading}</li>",
          "410:         </ul>",
          "411:     </div>",
          "412: </div>",
          "413: <div class='clearer'></div>",
          "414: FMHTML;",
          "415:     if (empty($filemanagertemplateloaded)) {",
          "416:         $filemanagertemplateloaded = true;",
          "417:         $html .= <<<FMHTML",
          "418: <div id=\"fm-template\" style=\"display:none\">___fullname___ ___action___</div>",
          "419: FMHTML;",
          "420:     }",
          "422:     $module = array(",
          "423:         'name'=>'form_filemanager',",
          "424:         'fullpath'=>'/lib/form/filemanager.js',",
          "425:         'requires' => array('core_filepicker', 'base', 'io-base', 'node', 'json', 'yui2-button', 'yui2-container', 'yui2-layout', 'yui2-menu', 'yui2-treeview', 'core_dndupload'),",
          "426:         'strings' => array(array('loading', 'repository'), array('nomorefiles', 'repository'), array('confirmdeletefile', 'repository'),",
          "427:              array('add', 'repository'), array('accessiblefilepicker', 'repository'), array('move', 'moodle'),",
          "428:              array('cancel', 'moodle'), array('download', 'moodle'), array('ok', 'moodle'),",
          "429:              array('emptylist', 'repository'), array('nofilesattached', 'repository'), array('entername', 'repository'), array('enternewname', 'repository'),",
          "430:              array('zip', 'editor'), array('unzip', 'moodle'), array('rename', 'moodle'), array('delete', 'moodle'),",
          "431:              array('cannotdeletefile', 'error'), array('confirmdeletefile', 'repository'),",
          "432:              array('nopathselected', 'repository'), array('popupblockeddownload', 'repository'),",
          "433:              array('draftareanofiles', 'repository'), array('path', 'moodle'), array('setmainfile', 'repository'),",
          "434:              array('moving', 'repository'), array('files', 'moodle'), array('serverconnection', 'error')",
          "435:         )",
          "436:     );",
          "437:     $PAGE->requires->js_module($module);",
          "438:     $PAGE->requires->js_init_call('M.form_filemanager.init', array($options), true, $module);",
          "441:     $filemanagerurl = new moodle_url('/repository/draftfiles_manager.php', array(",
          "442:         'env'=>'filemanager',",
          "443:         'action'=>'browse',",
          "444:         'itemid'=>$itemid,",
          "445:         'subdirs'=>$options->subdirs,",
          "446:         'maxbytes'=>$options->maxbytes,",
          "447:         'maxfiles'=>$options->maxfiles,",
          "448:         'ctx_id'=>$PAGE->context->id,",
          "449:         'course'=>$PAGE->course->id,",
          "450:         'sesskey'=>sesskey(),",
          "451:         ));",
          "453:     $html .= '<noscript>';",
          "454:     $html .= \"<div><object type='text/html' data='$filemanagerurl' height='160' width='600' style='border:1px solid #000'></object></div>\";",
          "455:     $html .= '</noscript>';",
          "458:     return $html;",
          "",
          "[Added Lines]",
          "353:     public function get_nonjsurl() {",
          "354:         global $PAGE;",
          "355:         return new moodle_url('/repository/draftfiles_manager.php', array(",
          "356:             'env'=>'filemanager',",
          "357:             'action'=>'browse',",
          "358:             'itemid'=>$this->options->itemid,",
          "359:             'subdirs'=>$this->options->subdirs,",
          "360:             'maxbytes'=>$this->options->maxbytes,",
          "361:             'maxfiles'=>$this->options->maxfiles,",
          "362:             'ctx_id'=>$PAGE->context->id, // TODO ?",
          "363:             'course'=>$PAGE->course->id, // TODO ?",
          "364:             'sesskey'=>sesskey(),",
          "365:             ));",
          "",
          "---------------"
        ],
        "lib/form/filepicker.js||lib/form/filepicker.js": [
          "File: lib/form/filepicker.js -> lib/form/filepicker.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: M.form_filepicker.callback = function(params) {",
          "7:     var html = '<a href=\"'+params['url']+'\">'+params['file']+'</a>';",
          "11:     var elementname = M.core_filepicker.instances[params['client_id']].options.elementname;",
          "12:     M.form_filepicker.instances[elementname].fileadded = true;",
          "",
          "[Removed Lines]",
          "8:     document.getElementById('file_info_'+params['client_id']).innerHTML = html;",
          "9:     M.form_filepicker.add_upload_message(params['client_id']);",
          "",
          "[Added Lines]",
          "8:     M.form_filepicker.Y.one('#file_info_'+params['client_id'] + ' .filepicker-filename').setContent(html);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:     M.form_filepicker.Y.one('#id_'+elementname).simulate('change');",
          "15: };",
          "",
          "[Removed Lines]",
          "17: M.form_filepicker.add_upload_message = function(client_id) {",
          "18:     var div = '<div id=\"filemanager-uploadmessage'+client_id+'\" style=\"display:none\" class=\"dndupload-target\">';",
          "19:     div += M.util.get_string('droptoupload', 'moodle');",
          "20:     div += '</div>';",
          "21:     var iteminfo = document.getElementById('file_info_'+client_id);",
          "22:     iteminfo.innerHTML += div;",
          "23:     iteminfo.style.position = 'relative';",
          "24: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "52:     item = document.getElementById('filepicker-wrapper-'+options.client_id);",
          "53:     if (item) {",
          "54:         item.style.display = '';",
          "56:     }",
          "58:     var dndoptions = {",
          "",
          "[Removed Lines]",
          "55:         this.add_upload_message(options.client_id);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "64:         repositories: options.repositories,",
          "65:         formcallback: options.formcallback,",
          "66:         containerprefix: '#file_info_',",
          "67:     };",
          "68:     M.form_dndupload.init(Y, dndoptions);",
          "69: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:         containerid: 'file_info_'+options.client_id",
          "",
          "---------------"
        ],
        "lib/outputrenderers.php||lib/outputrenderers.php": [
          "File: lib/outputrenderers.php -> lib/outputrenderers.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2020:         $straddfile = get_string('openpicker', 'repository');",
          "2021:         $strloading  = get_string('loading', 'repository');",
          "2022:         $strdndenabled = get_string('dndenabled_inbox', 'moodle');",
          "2023:         $icon_progress = $OUTPUT->pix_icon('i/loading_small', $strloading).'';",
          "2025:         $currentfile = $options->currentfile;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2023:         $strdroptoupload = get_string('droptoupload', 'moodle');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2053: EOD;",
          "2054:         if ($options->env != 'url') {",
          "2055:             $html .= <<<EOD",
          "2058:     </div>",
          "2059: EOD;",
          "2060:         }",
          "",
          "[Removed Lines]",
          "2056:     <div id=\"file_info_{$client_id}\" class=\"mdl-left filepicker-filelist\">",
          "2057:     $currentfile<span id=\"dndenabled-{$client_id}\" style=\"display: none\"> - $strdndenabled </span>",
          "",
          "[Added Lines]",
          "2057:     <div id=\"file_info_{$client_id}\" class=\"mdl-left filepicker-filelist\" style=\"position: relative\">",
          "2058:     <div><span class=\"filepicker-filename\">$currentfile</span><span class=\"dndupload-message\"> - $strdndenabled </span></div>",
          "2059:     <div><div class=\"dndupload-target\">{$strdroptoupload}</div></div>",
          "",
          "---------------"
        ],
        "theme/base/style/filemanager.css||theme/base/style/filemanager.css": [
          "File: theme/base/style/filemanager.css -> theme/base/style/filemanager.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: .filemanager-toolbar a:hover {background: #FFFFFF;}",
          "91: .filemanager-toolbar .helplink a {border: 0px; background: transparent;}",
          "92: .fm-breadcrumb {margin:0;}",
          "94: .filemanager-container ul{margin:0;padding:0;}",
          "95: .filemanager-container ul li{white-space:nowrap;list-style-type:none;}",
          "96: .filemanager-container ul li a{padding:0}",
          "",
          "[Removed Lines]",
          "93: .filemanager-container {padding: 5px;margin: 6px 0;background: #E9F4FF;border: #AACCEE 1px solid}",
          "",
          "[Added Lines]",
          "93: .filemanager .fm-breadcrumb.fm-empty {display:none;}",
          "94: .filemanager-container {padding: 5px;margin: 6px 0;background: #E9F4FF;border: #AACCEE 1px solid;position: relative;}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "105: .filemanager-container,",
          "106: .filepicker-filelist {overflow:hidden;}",
          "107: .filemanager-container .dndupload-target,",
          "108: .filepicker-filelist .dndupload-target {background:#f7f998;position:absolute;height:100%;width:100%;top:0;left:0;text-align:center;padding:5px;z-index:1000}",
          "109: .filemanager-container.dndupload-over .dndupload-target,",
          "110: .filepicker-filelist.dndupload-over .dndupload-target {background:#8EF947;font-weight:bold}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: .filemanager.fm-loading .fm-breadcrumb,",
          "110: .filemanager.fm-loading .filemanager-toolbar,",
          "111: .filemanager.fm-loading .filemanager-updating,",
          "112: .filemanager.fm-loading .filemanager-container {display:none;}",
          "114: .filemanager.fm-loaded .filemanager-loading {display:none;}",
          "116: .filemanager.fm-nofiles .fm-btn-download {display:none;}",
          "118: .filemanager.fm-nomkdir .fm-btn-mkdir {display:none;}",
          "120: .filemanager.fm-maxfiles .fm-btn-add {display:none;}",
          "121: .filemanager.fm-maxfiles .dndupload-message {display:none;}",
          "123: .filemanager .fm-empty-container {display:none;}",
          "124: .filemanager.fm-noitems .fm-empty-container {display:block;}",
          "125: .filemanager.fm-noitems .filemanager-container .fm-filelist {display:none;}",
          "127: .filemanager .filemanager-updating {display:none;text-align:center;}",
          "128: .filemanager.fm-updating .filemanager-updating {display:block;}",
          "129: .filemanager.fm-updating .filemanager-container {display:none;}",
          "138: .dndupload-message {display:none;}",
          "139: .dndsupported .dndupload-message {display:inline;}",
          "140: .dndupload-target {display:none;}",
          "141: .dndsupported .dndupload-ready .dndupload-target {display:block;}",
          "142: .dndupload-uploadinprogress {display:none;text-align:center;}",
          "143: .dndupload-uploading .dndupload-uploadinprogress {display:block;}",
          "",
          "---------------"
        ]
      }
    }
  ]
}