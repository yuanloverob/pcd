{
  "cve_id": "CVE-2014-8544",
  "cve_desc": "libavcodec/tiff.c in FFmpeg before 2.4.2 does not properly validate bits-per-pixel fields, which allows remote attackers to cause a denial of service (out-of-bounds access) or possibly have unspecified other impact via crafted TIFF data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5",
  "patch_info": {
    "commit_hash": "e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5",
    "files": [
      "libavcodec/tiff.c"
    ],
    "message": "avcodec/tiff: more completely check bpp/bppcount\n\nFixes pixel format selection\nFixes out of array accesses\nFixes: asan_heap-oob_1766029_6_asan_heap-oob_20aa045_332_cov_1823216757_m2-d1d366d7965db766c19a66c7a2ccbb6b.tif\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/tiff.c||libavcodec/tiff.c"
    ]
  },
  "patch_diff": {
    "libavcodec/tiff.c||libavcodec/tiff.c": [
      "File: libavcodec/tiff.c -> libavcodec/tiff.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "814:         s->height = value;",
      "815:         break;",
      "816:     case TIFF_BPP:",
      "819:             av_log(s->avctx, AV_LOG_ERROR,",
      "820:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
      "822:             return AVERROR_INVALIDDATA;",
      "823:         }",
      "824:         if (count == 1)",
      "825:             s->bpp = value;",
      "826:         else {",
      "",
      "[Removed Lines]",
      "817:         s->bppcount = count;",
      "818:         if (count > 4) {",
      "821:                    s->bpp, count);",
      "",
      "[Added Lines]",
      "817:         if (count > 4U) {",
      "820:                    value, count);",
      "823:         s->bppcount = count;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "838:                 s->bpp = -1;",
      "839:             }",
      "840:         }",
      "841:         break;",
      "842:     case TIFF_SAMPLES_PER_PIXEL:",
      "843:         if (count != 1) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "841:         if (s->bpp > 64U) {",
      "842:             av_log(s->avctx, AV_LOG_ERROR,",
      "843:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
      "844:                    s->bpp, count);",
      "845:             s->bpp = 0;",
      "846:             return AVERROR_INVALIDDATA;",
      "847:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f6476944e1a70e1639ad45791cf94972e66ae5bb",
      "candidate_info": {
        "commit_hash": "f6476944e1a70e1639ad45791cf94972e66ae5bb",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f6476944e1a70e1639ad45791cf94972e66ae5bb",
        "files": [
          "libavcodec/tiff.c"
        ],
        "message": "avcodec/tiff: more completely check bpp/bppcount\n\nFixes pixel format selection\nFixes out of array accesses\nFixes: asan_heap-oob_1766029_6_asan_heap-oob_20aa045_332_cov_1823216757_m2-d1d366d7965db766c19a66c7a2ccbb6b.tif\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/tiff.c||libavcodec/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ],
          "candidate": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/tiff.c||libavcodec/tiff.c": [
          "File: libavcodec/tiff.c -> libavcodec/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "812:         s->height = value;",
          "813:         break;",
          "814:     case TIFF_BPP:",
          "817:             av_log(s->avctx, AV_LOG_ERROR,",
          "818:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "820:             return AVERROR_INVALIDDATA;",
          "821:         }",
          "822:         if (count == 1)",
          "823:             s->bpp = value;",
          "824:         else {",
          "",
          "[Removed Lines]",
          "815:         s->bppcount = count;",
          "816:         if (count > 4) {",
          "819:                    s->bpp, count);",
          "",
          "[Added Lines]",
          "815:         if (count > 4U) {",
          "818:                    value, count);",
          "821:         s->bppcount = count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "836:                 s->bpp = -1;",
          "837:             }",
          "838:         }",
          "839:         break;",
          "840:     case TIFF_SAMPLES_PER_PIXEL:",
          "841:         if (count != 1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "839:         if (s->bpp > 64U) {",
          "840:             av_log(s->avctx, AV_LOG_ERROR,",
          "841:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "842:                    s->bpp, count);",
          "843:             s->bpp = 0;",
          "844:             return AVERROR_INVALIDDATA;",
          "845:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ceb9d67a0ad1a4076ef349c8756ce8b732d03a34",
      "candidate_info": {
        "commit_hash": "ceb9d67a0ad1a4076ef349c8756ce8b732d03a34",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/ceb9d67a0ad1a4076ef349c8756ce8b732d03a34",
        "files": [
          "libavcodec/tiff.c"
        ],
        "message": "avcodec/tiff: more completely check bpp/bppcount\n\nFixes pixel format selection\nFixes out of array accesses\nFixes: asan_heap-oob_1766029_6_asan_heap-oob_20aa045_332_cov_1823216757_m2-d1d366d7965db766c19a66c7a2ccbb6b.tif\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/tiff.c||libavcodec/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ],
          "candidate": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/tiff.c||libavcodec/tiff.c": [
          "File: libavcodec/tiff.c -> libavcodec/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "604:         s->height = value;",
          "605:         break;",
          "606:     case TIFF_BPP:",
          "609:             av_log(s->avctx, AV_LOG_ERROR,",
          "610:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "612:             return AVERROR_INVALIDDATA;",
          "613:         }",
          "614:         if (count == 1)",
          "615:             s->bpp = value;",
          "616:         else {",
          "",
          "[Removed Lines]",
          "607:         s->bppcount = count;",
          "608:         if (count > 4) {",
          "611:                    s->bpp, count);",
          "",
          "[Added Lines]",
          "607:         if (count > 4U) {",
          "610:                    value, count);",
          "613:         s->bppcount = count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "628:                 s->bpp = -1;",
          "629:             }",
          "630:         }",
          "631:         break;",
          "632:     case TIFF_SAMPLES_PER_PIXEL:",
          "633:         if (count != 1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "631:         if (s->bpp > 64U) {",
          "632:             av_log(s->avctx, AV_LOG_ERROR,",
          "633:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "634:                    s->bpp, count);",
          "635:             s->bpp = 0;",
          "636:             return AVERROR_INVALIDDATA;",
          "637:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f8bd98ae4d691fa7405856d83ca3d304429cc6f0",
      "candidate_info": {
        "commit_hash": "f8bd98ae4d691fa7405856d83ca3d304429cc6f0",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f8bd98ae4d691fa7405856d83ca3d304429cc6f0",
        "files": [
          "libavcodec/tiff.c"
        ],
        "message": "avcodec/tiff: more completely check bpp/bppcount\n\nFixes pixel format selection\nFixes out of array accesses\nFixes: asan_heap-oob_1766029_6_asan_heap-oob_20aa045_332_cov_1823216757_m2-d1d366d7965db766c19a66c7a2ccbb6b.tif\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit e1c0cfaa419aa5d320540d5a1b3f8fd9b82ab7e5)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/tiff.c||libavcodec/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ],
          "candidate": [
            "libavcodec/tiff.c||libavcodec/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/tiff.c||libavcodec/tiff.c": [
          "File: libavcodec/tiff.c -> libavcodec/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "604:         s->height = value;",
          "605:         break;",
          "606:     case TIFF_BPP:",
          "609:             av_log(s->avctx, AV_LOG_ERROR,",
          "610:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "612:             return AVERROR_INVALIDDATA;",
          "613:         }",
          "614:         if (count == 1)",
          "615:             s->bpp = value;",
          "616:         else {",
          "",
          "[Removed Lines]",
          "607:         s->bppcount = count;",
          "608:         if (count > 4) {",
          "611:                    s->bpp, count);",
          "",
          "[Added Lines]",
          "607:         if (count > 4U) {",
          "610:                    value, count);",
          "613:         s->bppcount = count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "628:                 s->bpp = -1;",
          "629:             }",
          "630:         }",
          "631:         break;",
          "632:     case TIFF_SAMPLES_PER_PIXEL:",
          "633:         if (count != 1) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "631:         if (s->bpp > 64U) {",
          "632:             av_log(s->avctx, AV_LOG_ERROR,",
          "633:                    \"This format is not supported (bpp=%d, %d components)\\n\",",
          "634:                    s->bpp, count);",
          "635:             s->bpp = 0;",
          "636:             return AVERROR_INVALIDDATA;",
          "637:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}