{
  "cve_id": "CVE-2017-15032",
  "cve_desc": "ImageMagick version 7.0.7-2 contains a memory leak in ReadYCBCRImage in coders/ycbcr.c.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "241988ca28139ad970c1d9717c419f41e360ddb0",
  "patch_info": {
    "commit_hash": "241988ca28139ad970c1d9717c419f41e360ddb0",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/241988ca28139ad970c1d9717c419f41e360ddb0",
    "files": [
      "coders/ycbcr.c"
    ],
    "message": "fix memory leak in ReadYCBCRImage as SetImageExtent failure",
    "before_after_code_files": [
      "coders/ycbcr.c||coders/ycbcr.c"
    ]
  },
  "patch_diff": {
    "coders/ycbcr.c||coders/ycbcr.c": [
      "File: coders/ycbcr.c -> coders/ycbcr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "212:       if (image->scene >= (image_info->scene+image_info->number_scenes-1))",
      "213:         break;",
      "214:     status=SetImageExtent(image,image->columns,image->rows,exception);",
      "215:     if (status == MagickFalse)",
      "216:     {",
      "217:       quantum_info=DestroyQuantumInfo(quantum_info);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "215:     if (status == MagickFalse)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c76e4e14db2a02efdb26be2cd8c190beca68683f",
      "candidate_info": {
        "commit_hash": "c76e4e14db2a02efdb26be2cd8c190beca68683f",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/c76e4e14db2a02efdb26be2cd8c190beca68683f",
        "files": [
          "coders/ycbcr.c"
        ],
        "message": "fix memory leak in ReadYCBCRImage as SetImageExtent failure",
        "before_after_code_files": [
          "coders/ycbcr.c||coders/ycbcr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "coders/ycbcr.c||coders/ycbcr.c"
          ],
          "candidate": [
            "coders/ycbcr.c||coders/ycbcr.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/ycbcr.c||coders/ycbcr.c": [
          "File: coders/ycbcr.c -> coders/ycbcr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:     if ((image_info->ping != MagickFalse) && (image_info->number_scenes != 0))",
          "212:       if (image->scene >= (image_info->scene+image_info->number_scenes-1))",
          "213:         break;",
          "214:     status=SetImageExtent(image,image->columns,image->rows,exception);",
          "215:     if (status == MagickFalse)",
          "216:       return(DestroyImageList(image));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213:         break;",
          "214:     status=SetImageExtent(image,image->columns,image->rows,exception);",
          "216:     {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "100ad24cb2ec17ae4b58aba5ced51d8c6d635624",
      "candidate_info": {
        "commit_hash": "100ad24cb2ec17ae4b58aba5ced51d8c6d635624",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/100ad24cb2ec17ae4b58aba5ced51d8c6d635624",
        "files": [
          "coders/ycbcr.c"
        ],
        "message": "...",
        "before_after_code_files": [
          "coders/ycbcr.c||coders/ycbcr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/ycbcr.c||coders/ycbcr.c"
          ],
          "candidate": [
            "coders/ycbcr.c||coders/ycbcr.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/ycbcr.c||coders/ycbcr.c": [
          "File: coders/ycbcr.c -> coders/ycbcr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:   image=AcquireImage(image_info,exception);",
          "152:   if ((image->columns == 0) || (image->rows == 0))",
          "153:     ThrowReaderException(OptionError,\"MustSpecifyImageSize\");",
          "155:   if (status == MagickFalse)",
          "156:     return(DestroyImageList(image));",
          "157:   SetImageColorspace(image,YCbCrColorspace,exception);",
          "",
          "[Removed Lines]",
          "154:   status=SetImageExtent(image,image->columns,image->rows,exception);",
          "",
          "[Added Lines]",
          "154:   status=SetImageExtent(image,image->columns,image->rows,exception);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:       status=OpenBlob(image_info,image,ReadBinaryBlobMode,exception);",
          "161:       if (status == MagickFalse)",
          "162:         {",
          "164:           return((Image *) NULL);",
          "165:         }",
          "166:       if (DiscardBlobBytes(image,image->offset) == MagickFalse)",
          "",
          "[Removed Lines]",
          "163:           image=DestroyImageList(image);",
          "",
          "[Added Lines]",
          "163:           image=DestroyImageList(image);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "211:     if ((image_info->ping != MagickFalse) && (image_info->number_scenes != 0))",
          "212:       if (image->scene >= (image_info->scene+image_info->number_scenes-1))",
          "219:       return(DestroyImageList(image));",
          "220:     }",
          "221:     SetImageColorspace(image,YCbCrColorspace,exception);",
          "",
          "[Removed Lines]",
          "213:         break;",
          "214:     status=SetImageExtent(image,image->columns,image->rows,exception);",
          "215:     if (status == MagickFalse)",
          "216:     {",
          "217:       quantum_info=DestroyQuantumInfo(quantum_info);",
          "218:       canvas_image=DestroyImage(canvas_image);",
          "",
          "[Added Lines]",
          "213:         break;",
          "214:     status=SetImageExtent(image,image->columns,image->rows,exception);",
          "215:     if (status == MagickFalse)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "303:             length=GetQuantumExtent(canvas_image,quantum_info,RedQuantum);",
          "304:             pixels=(const unsigned char *) ReadBlobStream(image,length,",
          "305:               GetQuantumPixels(quantum_info),&count);",
          "307:         for (y=0; y < (ssize_t) image->extract_info.height; y++)",
          "308:         {",
          "309:           for (i=0; i < (image->alpha_trait != UndefinedPixelTrait ? 4 : 3); i++)",
          "",
          "[Removed Lines]",
          "306:           }",
          "",
          "[Added Lines]",
          "303:           }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "588:         if (status == MagickFalse)",
          "589:           {",
          "590:             canvas_image=DestroyImageList(canvas_image);",
          "592:             return((Image *) NULL);",
          "593:           }",
          "594:         if (DiscardBlobBytes(image,image->offset) == MagickFalse)",
          "",
          "[Removed Lines]",
          "591:             image=DestroyImageList(image);",
          "",
          "[Added Lines]",
          "588:             image=DestroyImageList(image);",
          "",
          "---------------"
        ]
      }
    }
  ]
}