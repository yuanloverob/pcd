{
  "cve_id": "CVE-2017-7745",
  "cve_desc": "In Wireshark 2.2.0 to 2.2.5 and 2.0.0 to 2.0.11, the SIGCOMP dissector could go into an infinite loop, triggered by packet injection or a malformed capture file. This was addressed in epan/dissectors/packet-sigcomp.c by correcting a memory-size check.",
  "repo": "wireshark/wireshark",
  "patch_hash": "a445efdd03afd90ec0e849be4f7e46f28d2dedb7",
  "patch_info": {
    "commit_hash": "a445efdd03afd90ec0e849be4f7e46f28d2dedb7",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/a445efdd03afd90ec0e849be4f7e46f28d2dedb7",
    "files": [
      "epan/dissectors/packet-sigcomp.c"
    ],
    "message": "packet-sigcomp.c: Fix sigcomp dissector loop\n\nBug: 13578\nChange-Id: I92892a74adea49b71670b4dca57dd52e13537bd5\nReviewed-on: https://code.wireshark.org/review/21019\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-sigcomp.c||epan/dissectors/packet-sigcomp.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-sigcomp.c||epan/dissectors/packet-sigcomp.c": [
      "File: epan/dissectors/packet-sigcomp.c -> epan/dissectors/packet-sigcomp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2497:                 handle_now = byte_copy_right - position;",
      "2498:             }",
      "2501:                 gcry_md_close(sha1_handle);",
      "2502:                 goto decompression_failure;",
      "2503:             }",
      "",
      "[Removed Lines]",
      "2500:             if (k + handle_now >= UDVM_MEMORY_SIZE) {",
      "",
      "[Added Lines]",
      "2500:             if ((k + handle_now >= UDVM_MEMORY_SIZE) ||",
      "2501:                 (n + handle_now >= UDVM_MEMORY_SIZE)) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "acd8e1a9b17ad274bea1e01e10e4481508a1cbf0",
      "candidate_info": {
        "commit_hash": "acd8e1a9b17ad274bea1e01e10e4481508a1cbf0",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/acd8e1a9b17ad274bea1e01e10e4481508a1cbf0",
        "files": [
          "epan/dissectors/packet-sigcomp.c"
        ],
        "message": "packet-sigcomp.c: Fix sigcomp dissector loop\n\n Conflicts:\n\tepan/dissectors/packet-sigcomp.c\n\nBug: 13578\nChange-Id: I92892a74adea49b71670b4dca57dd52e13537bd5\nReviewed-on: https://code.wireshark.org/review/21019\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit a445efdd03afd90ec0e849be4f7e46f28d2dedb7)\nReviewed-on: https://code.wireshark.org/review/21055\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
        "before_after_code_files": [
          "epan/dissectors/packet-sigcomp.c||epan/dissectors/packet-sigcomp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-sigcomp.c||epan/dissectors/packet-sigcomp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-sigcomp.c||epan/dissectors/packet-sigcomp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-sigcomp.c||epan/dissectors/packet-sigcomp.c": [
          "File: epan/dissectors/packet-sigcomp.c -> epan/dissectors/packet-sigcomp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2481:                 handle_now = byte_copy_right - position;",
          "2482:             }",
          "2485:                 goto decompression_failure;",
          "2486:             sha1_update( &ctx, &buff[k], handle_now );",
          "2488:             k = ( k + handle_now ) & 0xffff;",
          "",
          "[Removed Lines]",
          "2484:             if (k + handle_now >= UDVM_MEMORY_SIZE)",
          "",
          "[Added Lines]",
          "2484:             if ((k + handle_now >= UDVM_MEMORY_SIZE) ||",
          "2485:                 (n + handle_now >= UDVM_MEMORY_SIZE)) {",
          "2487:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b8c0ef4338fa5027b884cc5fd197781295af9715",
      "candidate_info": {
        "commit_hash": "b8c0ef4338fa5027b884cc5fd197781295af9715",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/b8c0ef4338fa5027b884cc5fd197781295af9715",
        "files": [
          "epan/dissectors/packet-sigcomp.c"
        ],
        "message": "packet-sigcomp.c: Fix sigcomp dissector loop\n\n Conflicts:\n\tepan/dissectors/packet-sigcomp.c\n\nBug: 13578\nChange-Id: I92892a74adea49b71670b4dca57dd52e13537bd5\nReviewed-on: https://code.wireshark.org/review/21019\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit a445efdd03afd90ec0e849be4f7e46f28d2dedb7)\nReviewed-on: https://code.wireshark.org/review/21054\nReviewed-by: Gerald Combs <gerald@wireshark.org>",
        "before_after_code_files": [
          "epan/dissectors/packet-sigcomp.c||epan/dissectors/packet-sigcomp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-sigcomp.c||epan/dissectors/packet-sigcomp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-sigcomp.c||epan/dissectors/packet-sigcomp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-sigcomp.c||epan/dissectors/packet-sigcomp.c": [
          "File: epan/dissectors/packet-sigcomp.c -> epan/dissectors/packet-sigcomp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2503:                 handle_now = byte_copy_right - position;",
          "2504:             }",
          "2507:                 goto decompression_failure;",
          "2508:             sha1_update( &ctx, &buff[k], handle_now );",
          "2510:             k = ( k + handle_now ) & 0xffff;",
          "",
          "[Removed Lines]",
          "2506:             if (k + handle_now >= UDVM_MEMORY_SIZE)",
          "",
          "[Added Lines]",
          "2506:             if ((k + handle_now >= UDVM_MEMORY_SIZE) ||",
          "2507:                 (n + handle_now >= UDVM_MEMORY_SIZE)) {",
          "2509:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}