{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c3a9733ac14aa0ebf06cc4d9e3ababe8c9be6220",
      "candidate_info": {
        "commit_hash": "c3a9733ac14aa0ebf06cc4d9e3ababe8c9be6220",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c3a9733ac14aa0ebf06cc4d9e3ababe8c9be6220",
        "files": [
          "src/node.js"
        ],
        "message": "startup: use `.hasOwnProperty` instead of `in`\n\nBenchmarks show that `.hasOwnProperty` is faster than `in` in V8. It\nmakes startup ~0.5 ms faster on my computer.",
        "before_after_code_files": [
          "src/node.js||src/node.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "491:   }",
          "493:   NativeModule.exists = function(id) {",
          "495:   }",
          "497:   NativeModule.getSource = function(id) {",
          "",
          "[Removed Lines]",
          "494:     return (id in NativeModule._source);",
          "",
          "[Added Lines]",
          "494:     return NativeModule._source.hasOwnProperty(id);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9423aa995b07b8edc4662e914e6ee195c14f5f76",
      "candidate_info": {
        "commit_hash": "9423aa995b07b8edc4662e914e6ee195c14f5f76",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9423aa995b07b8edc4662e914e6ee195c14f5f76",
        "files": [
          "deps/openssl/config/k8/openssl/opensslconf-win32.h"
        ],
        "message": "openssl: fix the Windows x64 build",
        "before_after_code_files": [
          "deps/openssl/config/k8/openssl/opensslconf-win32.h||deps/openssl/config/k8/openssl/opensslconf-win32.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/config/k8/openssl/opensslconf-win32.h||deps/openssl/config/k8/openssl/opensslconf-win32.h": [
          "File: deps/openssl/config/k8/openssl/opensslconf-win32.h -> deps/openssl/config/k8/openssl/opensslconf-win32.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: #ifndef OPENSSL_NO_SEED",
          "42: # define OPENSSL_NO_SEED",
          "43: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: #ifndef OPENSSL_NO_ASM",
          "45: # define OPENSSL_NO_ASM",
          "46: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "df62005ece4bb0be0d5af645fd9093b1506ce63d",
      "candidate_info": {
        "commit_hash": "df62005ece4bb0be0d5af645fd9093b1506ce63d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/df62005ece4bb0be0d5af645fd9093b1506ce63d",
        "files": [
          "lib/util.js"
        ],
        "message": "util: always display a warning for module in debug mode",
        "before_after_code_files": [
          "lib/util.js||liutil.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/util.js||liutil.js": [
          "File: lib/util.js -> liutil.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "522: var deprecationWarnings;",
          "524: exports._deprecationWarning = function(moduleId, message) {",
          "533:     console.trace(message);",
          "535:     console.error(message);",
          "536: };",
          "",
          "[Removed Lines]",
          "525:   if (!deprecationWarnings)",
          "526:     deprecationWarnings = {};",
          "527:   else if (message in deprecationWarnings)",
          "528:     return;",
          "530:   deprecationWarnings[message] = true;",
          "532:   if ((new RegExp('\\\\b' + moduleId + '\\\\b')).test(process.env.NODE_DEBUG))",
          "534:   else",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0119af0e477d12b69c730336916b49fe0a46aba",
      "candidate_info": {
        "commit_hash": "a0119af0e477d12b69c730336916b49fe0a46aba",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a0119af0e477d12b69c730336916b49fe0a46aba",
        "files": [
          "test/simple/test-dgram-broadcast-multi-process.js",
          "test/simple/test-dgram-multicast-multi-process.js"
        ],
        "message": "test: handle unhandled dgram scenarios\n\n\t- watch for the death of child processes and fail the test if they all die\n\t- use setTimeout to fail the test if responses are not received and processed in 5000ms",
        "before_after_code_files": [
          "test/simple/test-dgram-broadcast-multi-process.js||test/simple/test-dgram-broadcast-multi-process.js",
          "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-dgram-broadcast-multi-process.js||test/simple/test-dgram-broadcast-multi-process.js": [
          "File: test/simple/test-dgram-broadcast-multi-process.js -> test/simple/test-dgram-broadcast-multi-process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var common = require('../common'),",
          "23:     assert = require('assert'),",
          "25:     dgram = require('dgram'),",
          "26:     util = require('util'),",
          "27:     assert = require('assert'),",
          "28:     Buffer = require('buffer').Buffer,",
          "29:     LOCAL_BROADCAST_HOST = '255.255.255.255',",
          "30:     messages = [",
          "31:       new Buffer('First message to send'),",
          "32:       new Buffer('Second message to send'),",
          "",
          "[Removed Lines]",
          "24:     cluster = require('cluster'),",
          "",
          "[Added Lines]",
          "28:     fork = require('child_process').fork,",
          "30:     TIMEOUT = 5000,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:       new Buffer('Fourth message to send')",
          "35:     ];",
          "38:   var workers = {},",
          "39:     listeners = 3,",
          "40:     listening = 0,",
          "41:     i = 0,",
          "45:   for (var x = 0; x < listeners; x++) {",
          "46:     (function () {",
          "48:       workers[worker.pid] = worker;",
          "50:       worker.messagesReceived = [];",
          "52:       worker.on('message', function (msg) {",
          "53:         if (msg.listening) {",
          "54:           listening += 1;",
          "",
          "[Removed Lines]",
          "37: if (cluster.isMaster) {",
          "42:     done = 0;",
          "47:       var worker = cluster.fork();",
          "",
          "[Added Lines]",
          "38: if (process.argv[2] !== 'child') {",
          "42:     dead = 0,",
          "44:     done = 0,",
          "45:     timer = null;",
          "48:   timer = setTimeout(function () {",
          "49:     console.error('Responses were not received within %d ms.', TIMEOUT);",
          "50:     console.error('Fail');",
          "51:     process.exit(1);",
          "52:   }, TIMEOUT);",
          "57:       var worker = fork(process.argv[1], ['child']);",
          "63:       worker.on('exit', function (code, signal) {",
          "65:         if (worker.isDone) {",
          "66:           return;",
          "67:         }",
          "69:         dead += 1;",
          "70:         console.error('Worker %d died. %d dead of %d', worker.pid, dead, listeners);",
          "72:         if (dead === listeners) {",
          "73:           console.error('All workers have died.');",
          "74:           console.error('Fail');",
          "75:           process.exit(1);",
          "76:         }",
          "77:       });",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "64:           if (worker.messagesReceived.length === messages.length) {",
          "65:             done += 1;",
          "66:             console.error('%d received %d messages total.', worker.pid,",
          "67:                     worker.messagesReceived.length);",
          "68:           }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:             worker.isDone = true;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "91:               assert.equal(count, messages.length",
          "92:                 ,'A worker received an invalid multicast message');",
          "93:             });",
          "94:           }",
          "95:         }",
          "96:       });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:             clearTimeout(timer);",
          "124:             console.error('Success');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "127:   };",
          "128: }",
          "131:   var receivedMessages = [];",
          "132:   var listenSocket = dgram.createSocket('udp4');",
          "",
          "[Removed Lines]",
          "130: if (!cluster.isMaster) {",
          "",
          "[Added Lines]",
          "161: if (process.argv[2] === 'child') {",
          "",
          "---------------"
        ],
        "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js": [
          "File: test/simple/test-dgram-multicast-multi-process.js -> test/simple/test-dgram-multicast-multi-process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var common = require('../common'),",
          "23:     assert = require('assert'),",
          "25:     dgram = require('dgram'),",
          "26:     util = require('util'),",
          "27:     assert = require('assert'),",
          "28:     Buffer = require('buffer').Buffer,",
          "29:     LOCAL_BROADCAST_HOST = '224.0.0.1',",
          "30:     messages = [",
          "31:       new Buffer('First message to send'),",
          "32:       new Buffer('Second message to send'),",
          "",
          "[Removed Lines]",
          "24:     cluster = require('cluster'),",
          "",
          "[Added Lines]",
          "28:     fork = require('child_process').fork,",
          "30:     TIMEOUT = 5000,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:       new Buffer('Fourth message to send')",
          "35:     ];",
          "38:   var workers = {},",
          "39:     listeners = 3,",
          "40:     listening = 0,",
          "41:     i = 0,",
          "45:   for (var x = 0; x < listeners; x++) {",
          "46:     (function () {",
          "48:       workers[worker.pid] = worker;",
          "50:       worker.messagesReceived = [];",
          "52:       worker.on('message', function (msg) {",
          "53:         if (msg.listening) {",
          "54:           listening += 1;",
          "",
          "[Removed Lines]",
          "37: if (cluster.isMaster) {",
          "42:     done = 0;",
          "47:       var worker = cluster.fork();",
          "",
          "[Added Lines]",
          "38: if (process.argv[2] !== 'child') {",
          "42:     dead = 0,",
          "44:     done = 0,",
          "45:     timer = null;",
          "48:   timer = setTimeout(function () {",
          "49:     console.error('Responses were not received within %d ms.', TIMEOUT);",
          "50:     console.error('Fail');",
          "51:     process.exit(1);",
          "52:   }, TIMEOUT);",
          "57:       var worker = fork(process.argv[1], ['child']);",
          "63:       worker.on('exit', function (code, signal) {",
          "65:         if (worker.isDone) {",
          "66:           return;",
          "67:         }",
          "69:         dead += 1;",
          "70:         console.error('Worker %d died. %d dead of %d', worker.pid, dead, listeners);",
          "72:         if (dead === listeners) {",
          "73:           console.error('All workers have died.');",
          "74:           console.error('Fail');",
          "75:           process.exit(1);",
          "76:         }",
          "77:       });",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "64:           if (worker.messagesReceived.length === messages.length) {",
          "65:             done += 1;",
          "66:             console.error('%d received %d messages total.', worker.pid,",
          "67:                     worker.messagesReceived.length);",
          "68:           }",
          "70:           if (done === listeners) {",
          "72:                     + 'messages. Will now compare.');",
          "74:             Object.keys(workers).forEach(function (pid) {",
          "",
          "[Removed Lines]",
          "71:             console.error('All workers have received the required number of'",
          "",
          "[Added Lines]",
          "93:             worker.isDone = true;",
          "99:             console.error('All workers have received the required number of '",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "91:               assert.equal(count, messages.length",
          "92:                 ,'A worker received an invalid multicast message');",
          "93:             });",
          "94:           }",
          "95:         }",
          "96:       });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:             clearTimeout(timer);",
          "124:             console.error('Success');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "129:   };",
          "130: }",
          "133:   var receivedMessages = [];",
          "134:   var listenSocket = dgram.createSocket('udp4');",
          "",
          "[Removed Lines]",
          "132: if (!cluster.isMaster) {",
          "",
          "[Added Lines]",
          "163: if (process.argv[2] === 'child') {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b8721aad098b75a2b2e9b6db8067ce8d1ad52a8",
      "candidate_info": {
        "commit_hash": "4b8721aad098b75a2b2e9b6db8067ce8d1ad52a8",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4b8721aad098b75a2b2e9b6db8067ce8d1ad52a8",
        "files": [
          "deps/openssl/README.chromium",
          "deps/openssl/patches/empty_OPENSSL_cpuid_setup.patch",
          "deps/openssl/patches/handshake_cutthrough.patch",
          "deps/openssl/patches/jsse.patch",
          "deps/openssl/patches/npn.patch",
          "deps/openssl/patches/openssl_no_dtls1.patch",
          "deps/openssl/patches/progs.patch",
          "deps/openssl/patches/sha1_armv4_large.patch",
          "deps/openssl/patches/small_records.patch",
          "deps/openssl/patches/tls_exporter.patch",
          "deps/openssl/patches/x509_hash_name_algorithm_change.patch"
        ],
        "message": "openssl: remove obsolete patch files\n\nThese patches were provided by Android and Chromium. In this form they\nare not useful. The ones that we need are landed as separate commits.\n\nAs of openssl 1.0.1c, three of them made it upstream:\n  * npn.patch (Next Protocol Negotiation support)\n  * tls_exporter.patch (RFC 5705 Keying Material Exporters for TLS)\n  * openssl_no_dtls1.patch (minor bugfix)",
        "before_after_code_files": [
          "deps/openssl/README.chromium||deps/openssl/README.chromium"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/README.chromium||deps/openssl/README.chromium": [
          "File: deps/openssl/README.chromium -> deps/openssl/README.chromium",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}