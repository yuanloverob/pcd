{
  "cve_id": "CVE-2015-3151",
  "cve_desc": "Directory traversal vulnerability in abrt-dbus in Automatic Bug Reporting Tool (ABRT) allows local users to read, write to, or change ownership of arbitrary files via unspecified vectors to the (1) NewProblem, (2) GetInfo, (3) SetElement, or (4) DeleteElement method.",
  "repo": "abrt/libreport",
  "patch_hash": "54ecf8d017580b495d6501e53ca54e453a73a364",
  "patch_info": {
    "commit_hash": "54ecf8d017580b495d6501e53ca54e453a73a364",
    "repo": "abrt/libreport",
    "commit_url": "https://github.com/abrt/libreport/commit/54ecf8d017580b495d6501e53ca54e453a73a364",
    "files": [
      "src/include/internal_libreport.h",
      "src/lib/concat_path_file.c",
      "tests/Makefile.am",
      "tests/dump_dir.at",
      "tests/testsuite.at"
    ],
    "message": "lib: add a function checking file names\n\nMove the code from ABRT and extend it a bit:\n* allow only 64 characters\n* allow '.' in names (vmcore_dmesg.txt)\n* forbid '/'\n* forbid \".\"\n* forbid \"..\"\n\nRelated: #1214451\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
    "before_after_code_files": [
      "src/include/internal_libreport.h||src/include/internal_libreport.h",
      "src/lib/concat_path_file.c||src/lib/concat_path_file.c",
      "tests/Makefile.am||tests/Makefile.am",
      "tests/dump_dir.at||tests/dump_dir.at",
      "tests/testsuite.at||tests/testsuite.at"
    ]
  },
  "patch_diff": {
    "src/include/internal_libreport.h||src/include/internal_libreport.h": [
      "File: src/include/internal_libreport.h -> src/include/internal_libreport.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "132: #define concat_path_basename libreport_concat_path_basename",
      "133: char *concat_path_basename(const char *path, const char *filename);",
      "136: #define xmalloc_fgets libreport_xmalloc_fgets",
      "137: char *xmalloc_fgets(FILE *file);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "138: #define str_is_correct_filename libreport_str_is_correct_filename",
      "139: bool str_is_correct_filename(const char *str);",
      "",
      "---------------"
    ],
    "src/lib/concat_path_file.c||src/lib/concat_path_file.c": [
      "File: src/lib/concat_path_file.c -> src/lib/concat_path_file.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "57:     free(abspath);",
      "58:     return name;",
      "59: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "61: bool str_is_correct_filename(const char *str)",
      "62: {",
      "63: #define NOT_PRINTABLE(c) (c < ' ' || c == 0x7f)",
      "65:     if (NOT_PRINTABLE(*str) || *str == '/' || *str == '\\0')",
      "66:         return false;",
      "67:     ++str;",
      "69:     if (NOT_PRINTABLE(*str) || *str =='/' || (*str == '\\0' && *(str-1) == '.'))",
      "70:         return false;",
      "71:     ++str;",
      "73:     if (NOT_PRINTABLE(*str) || *str =='/' || (*str == '\\0' && *(str-1) == '.' && *(str-2) == '.'))",
      "74:         return false;",
      "75:     ++str;",
      "77:     for (unsigned i = 0; *str != '\\0' && i < 61; ++str, ++i)",
      "78:         if (NOT_PRINTABLE(*str) || *str == '/')",
      "79:             return false;",
      "81:     return *str == '\\0';",
      "83: #undef NOT_PRINTABLE",
      "84: }",
      "",
      "---------------"
    ],
    "tests/Makefile.am||tests/Makefile.am": [
      "File: tests/Makefile.am -> tests/Makefile.am",
      "--- Hunk 1 ---",
      "[Context before]",
      "42:   report_python.at \\",
      "43:   xfuncs.at \\",
      "44:   string_list.at \\",
      "47: EXTRA_DIST += $(TESTSUITE_AT)",
      "48: TESTSUITE = $(srcdir)/testsuite",
      "",
      "[Removed Lines]",
      "45:   ureport.at",
      "",
      "[Added Lines]",
      "45:   ureport.at \\",
      "46:   dump_dir.at",
      "",
      "---------------"
    ],
    "tests/dump_dir.at||tests/dump_dir.at": [
      "File: tests/dump_dir.at -> tests/dump_dir.at",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: # -*- Autotest -*-",
      "3: AT_BANNER([dump directories])",
      "5: ## ----------------------- ##",
      "6: ## str_is_correct_filename ##",
      "7: ## ----------------------- ##",
      "9: AT_TESTFUN([str_is_correct_filename],",
      "10: [[",
      "11: #include \"internal_libreport.h\"",
      "12: #include <assert.h>",
      "13: #",
      "14: int main(void)",
      "15: {",
      "16:     g_verbose = 3;",
      "18:     assert(str_is_correct_filename(\"\") == false);",
      "19:     assert(str_is_correct_filename(\"/\") == false);",
      "20:     assert(str_is_correct_filename(\"//\") == false);",
      "21:     assert(str_is_correct_filename(\".\") == false);",
      "22:     assert(str_is_correct_filename(\".\") == false);",
      "23:     assert(str_is_correct_filename(\"..\") == false);",
      "24:     assert(str_is_correct_filename(\"..\") == false);",
      "25:     assert(str_is_correct_filename(\"/.\") == false);",
      "26:     assert(str_is_correct_filename(\"//.\") == false);",
      "27:     assert(str_is_correct_filename(\"./\") == false);",
      "28:     assert(str_is_correct_filename(\".//\") == false);",
      "29:     assert(str_is_correct_filename(\"/./\") == false);",
      "30:     assert(str_is_correct_filename(\"/..\") == false);",
      "31:     assert(str_is_correct_filename(\"//..\") == false);",
      "32:     assert(str_is_correct_filename(\"../\") == false);",
      "33:     assert(str_is_correct_filename(\"..//\") == false);",
      "34:     assert(str_is_correct_filename(\"/../\") == false);",
      "35:     assert(str_is_correct_filename(\"/.././\") == false);",
      "37:     assert(str_is_correct_filename(\"looks-good-but-evil/\") == false);",
      "38:     assert(str_is_correct_filename(\"looks-good-but-evil/../../\") == false);",
      "40:     assert(str_is_correct_filename(\".meta-data\") == true);",
      "41:     assert(str_is_correct_filename(\"..meta-meta-data\") == true);",
      "42:     assert(str_is_correct_filename(\"meta-..-data\") == true);",
      "44:     assert(str_is_correct_filename(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890+-\") == true);",
      "45:     assert(str_is_correct_filename(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890+-=\") == false);",
      "47:     return 0;",
      "48: }",
      "49: ]])",
      "",
      "---------------"
    ],
    "tests/testsuite.at||tests/testsuite.at": [
      "File: tests/testsuite.at -> tests/testsuite.at",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: m4_include([report_python.at])",
      "18: m4_include([string_list.at])",
      "19: m4_include([ureport.at])",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: m4_include([dump_dir.at])",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "54ecf8d017580b495d6501e53ca54e453a73a364",
      "candidate_info": {
        "commit_hash": "54ecf8d017580b495d6501e53ca54e453a73a364",
        "repo": "abrt/libreport",
        "commit_url": "https://github.com/abrt/libreport/commit/54ecf8d017580b495d6501e53ca54e453a73a364",
        "files": [
          "src/include/internal_libreport.h",
          "src/lib/concat_path_file.c",
          "tests/Makefile.am",
          "tests/dump_dir.at",
          "tests/testsuite.at"
        ],
        "message": "lib: add a function checking file names\n\nMove the code from ABRT and extend it a bit:\n* allow only 64 characters\n* allow '.' in names (vmcore_dmesg.txt)\n* forbid '/'\n* forbid \".\"\n* forbid \"..\"\n\nRelated: #1214451\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>",
        "before_after_code_files": [
          "src/include/internal_libreport.h||src/include/internal_libreport.h",
          "src/lib/concat_path_file.c||src/lib/concat_path_file.c",
          "tests/Makefile.am||tests/Makefile.am",
          "tests/dump_dir.at||tests/dump_dir.at",
          "tests/testsuite.at||tests/testsuite.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/include/internal_libreport.h||src/include/internal_libreport.h",
            "src/lib/concat_path_file.c||src/lib/concat_path_file.c",
            "tests/Makefile.am||tests/Makefile.am",
            "tests/dump_dir.at||tests/dump_dir.at",
            "tests/testsuite.at||tests/testsuite.at"
          ],
          "candidate": [
            "src/include/internal_libreport.h||src/include/internal_libreport.h",
            "src/lib/concat_path_file.c||src/lib/concat_path_file.c",
            "tests/Makefile.am||tests/Makefile.am",
            "tests/dump_dir.at||tests/dump_dir.at",
            "tests/testsuite.at||tests/testsuite.at"
          ]
        }
      },
      "candidate_diff": {
        "src/include/internal_libreport.h||src/include/internal_libreport.h": [
          "File: src/include/internal_libreport.h -> src/include/internal_libreport.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "132: #define concat_path_basename libreport_concat_path_basename",
          "133: char *concat_path_basename(const char *path, const char *filename);",
          "136: #define xmalloc_fgets libreport_xmalloc_fgets",
          "137: char *xmalloc_fgets(FILE *file);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "138: #define str_is_correct_filename libreport_str_is_correct_filename",
          "139: bool str_is_correct_filename(const char *str);",
          "",
          "---------------"
        ],
        "src/lib/concat_path_file.c||src/lib/concat_path_file.c": [
          "File: src/lib/concat_path_file.c -> src/lib/concat_path_file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:     free(abspath);",
          "58:     return name;",
          "59: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61: bool str_is_correct_filename(const char *str)",
          "62: {",
          "63: #define NOT_PRINTABLE(c) (c < ' ' || c == 0x7f)",
          "65:     if (NOT_PRINTABLE(*str) || *str == '/' || *str == '\\0')",
          "66:         return false;",
          "67:     ++str;",
          "69:     if (NOT_PRINTABLE(*str) || *str =='/' || (*str == '\\0' && *(str-1) == '.'))",
          "70:         return false;",
          "71:     ++str;",
          "73:     if (NOT_PRINTABLE(*str) || *str =='/' || (*str == '\\0' && *(str-1) == '.' && *(str-2) == '.'))",
          "74:         return false;",
          "75:     ++str;",
          "77:     for (unsigned i = 0; *str != '\\0' && i < 61; ++str, ++i)",
          "78:         if (NOT_PRINTABLE(*str) || *str == '/')",
          "79:             return false;",
          "81:     return *str == '\\0';",
          "83: #undef NOT_PRINTABLE",
          "84: }",
          "",
          "---------------"
        ],
        "tests/Makefile.am||tests/Makefile.am": [
          "File: tests/Makefile.am -> tests/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:   report_python.at \\",
          "43:   xfuncs.at \\",
          "44:   string_list.at \\",
          "47: EXTRA_DIST += $(TESTSUITE_AT)",
          "48: TESTSUITE = $(srcdir)/testsuite",
          "",
          "[Removed Lines]",
          "45:   ureport.at",
          "",
          "[Added Lines]",
          "45:   ureport.at \\",
          "46:   dump_dir.at",
          "",
          "---------------"
        ],
        "tests/dump_dir.at||tests/dump_dir.at": [
          "File: tests/dump_dir.at -> tests/dump_dir.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # -*- Autotest -*-",
          "3: AT_BANNER([dump directories])",
          "5: ## ----------------------- ##",
          "6: ## str_is_correct_filename ##",
          "7: ## ----------------------- ##",
          "9: AT_TESTFUN([str_is_correct_filename],",
          "10: [[",
          "11: #include \"internal_libreport.h\"",
          "12: #include <assert.h>",
          "13: #",
          "14: int main(void)",
          "15: {",
          "16:     g_verbose = 3;",
          "18:     assert(str_is_correct_filename(\"\") == false);",
          "19:     assert(str_is_correct_filename(\"/\") == false);",
          "20:     assert(str_is_correct_filename(\"//\") == false);",
          "21:     assert(str_is_correct_filename(\".\") == false);",
          "22:     assert(str_is_correct_filename(\".\") == false);",
          "23:     assert(str_is_correct_filename(\"..\") == false);",
          "24:     assert(str_is_correct_filename(\"..\") == false);",
          "25:     assert(str_is_correct_filename(\"/.\") == false);",
          "26:     assert(str_is_correct_filename(\"//.\") == false);",
          "27:     assert(str_is_correct_filename(\"./\") == false);",
          "28:     assert(str_is_correct_filename(\".//\") == false);",
          "29:     assert(str_is_correct_filename(\"/./\") == false);",
          "30:     assert(str_is_correct_filename(\"/..\") == false);",
          "31:     assert(str_is_correct_filename(\"//..\") == false);",
          "32:     assert(str_is_correct_filename(\"../\") == false);",
          "33:     assert(str_is_correct_filename(\"..//\") == false);",
          "34:     assert(str_is_correct_filename(\"/../\") == false);",
          "35:     assert(str_is_correct_filename(\"/.././\") == false);",
          "37:     assert(str_is_correct_filename(\"looks-good-but-evil/\") == false);",
          "38:     assert(str_is_correct_filename(\"looks-good-but-evil/../../\") == false);",
          "40:     assert(str_is_correct_filename(\".meta-data\") == true);",
          "41:     assert(str_is_correct_filename(\"..meta-meta-data\") == true);",
          "42:     assert(str_is_correct_filename(\"meta-..-data\") == true);",
          "44:     assert(str_is_correct_filename(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890+-\") == true);",
          "45:     assert(str_is_correct_filename(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890+-=\") == false);",
          "47:     return 0;",
          "48: }",
          "49: ]])",
          "",
          "---------------"
        ],
        "tests/testsuite.at||tests/testsuite.at": [
          "File: tests/testsuite.at -> tests/testsuite.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: m4_include([report_python.at])",
          "18: m4_include([string_list.at])",
          "19: m4_include([ureport.at])",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: m4_include([dump_dir.at])",
          "",
          "---------------"
        ]
      }
    }
  ]
}