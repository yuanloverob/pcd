{
  "cve_id": "CVE-2018-1068",
  "cve_desc": "A flaw was found in the Linux 4.x kernel's implementation of 32-bit syscall interface for bridging. This allowed a privileged user to arbitrarily write to a limited range of kernel memory.",
  "repo": "torvalds/linux",
  "patch_hash": "b71812168571fa55e44cdd0254471331b9c4c4c6",
  "patch_info": {
    "commit_hash": "b71812168571fa55e44cdd0254471331b9c4c4c6",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/b71812168571fa55e44cdd0254471331b9c4c4c6",
    "files": [
      "net/bridge/netfilter/ebtables.c"
    ],
    "message": "netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets\n\nWe need to make sure the offsets are not out of range of the\ntotal size.\nAlso check that they are in ascending order.\n\nThe WARN_ON triggered by syzkaller (it sets panic_on_warn) is\nchanged to also bail out, no point in continuing parsing.\n\nBriefly tested with simple ruleset of\n-A INPUT --limit 1/s' --log\nplus jump to custom chains using 32bit ebtables binary.\n\nReported-by: <syzbot+845a53d13171abf8bf29@syzkaller.appspotmail.com>\nSigned-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
    "before_after_code_files": [
      "net/bridge/netfilter/ebtables.c||net/bridge/netfilter/ebtables.c"
    ]
  },
  "patch_diff": {
    "net/bridge/netfilter/ebtables.c||net/bridge/netfilter/ebtables.c": [
      "File: net/bridge/netfilter/ebtables.c -> net/bridge/netfilter/ebtables.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2060:   if (match_kern)",
      "2061:    match_kern->match_size = ret;",
      "2064:   match32 = (struct compat_ebt_entry_mwt *) buf;",
      "2065:  }",
      "",
      "[Removed Lines]",
      "2063:   WARN_ON(type == EBT_COMPAT_TARGET && size_left);",
      "",
      "[Added Lines]",
      "2063:   if (WARN_ON(type == EBT_COMPAT_TARGET && size_left))",
      "2064:    return -EINVAL;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2119:  for (i = 0, j = 1 ; j < 4 ; j++, i++) {",
      "2120:   struct compat_ebt_entry_mwt *match32;",
      "2121:   unsigned int size;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2121:  for (i = 0; i < 4 ; ++i) {",
      "2122:   if (offsets[i] >= *total)",
      "2123:    return -EINVAL;",
      "2124:   if (i == 0)",
      "2125:    continue;",
      "2126:   if (offsets[i-1] > offsets[i])",
      "2127:    return -EINVAL;",
      "2128:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "932909d9b28d27e807ff8eecb68c7748f6701628",
      "candidate_info": {
        "commit_hash": "932909d9b28d27e807ff8eecb68c7748f6701628",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/932909d9b28d27e807ff8eecb68c7748f6701628",
        "files": [
          "net/bridge/netfilter/ebtables.c"
        ],
        "message": "netfilter: ebtables: fix erroneous reject of last rule\n\nThe last rule in the blob has next_entry offset that is same as total size.\nThis made \"ebtables32 -A OUTPUT -d de:ad:be:ef:01:02\" fail on 64 bit kernel.\n\nFixes: b71812168571fa (\"netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets\")\nSigned-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>",
        "before_after_code_files": [
          "net/bridge/netfilter/ebtables.c||net/bridge/netfilter/ebtables.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/bridge/netfilter/ebtables.c||net/bridge/netfilter/ebtables.c"
          ],
          "candidate": [
            "net/bridge/netfilter/ebtables.c||net/bridge/netfilter/ebtables.c"
          ]
        }
      },
      "candidate_diff": {
        "net/bridge/netfilter/ebtables.c||net/bridge/netfilter/ebtables.c": [
          "File: net/bridge/netfilter/ebtables.c -> net/bridge/netfilter/ebtables.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2121:  for (i = 0; i < 4 ; ++i) {",
          "2123:    return -EINVAL;",
          "2124:   if (i == 0)",
          "2125:    continue;",
          "2126:   if (offsets[i-1] > offsets[i])",
          "",
          "[Removed Lines]",
          "2122:   if (offsets[i] >= *total)",
          "",
          "[Added Lines]",
          "2122:   if (offsets[i] > *total)",
          "2125:   if (i < 3 && offsets[i] == *total)",
          "2126:    return -EINVAL;",
          "",
          "---------------"
        ]
      }
    }
  ]
}