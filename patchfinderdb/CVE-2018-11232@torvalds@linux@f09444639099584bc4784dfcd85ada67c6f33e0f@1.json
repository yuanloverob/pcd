{
  "cve_id": "CVE-2018-11232",
  "cve_desc": "The etm_setup_aux function in drivers/hwtracing/coresight/coresight-etm-perf.c in the Linux kernel before 4.10.2 allows attackers to cause a denial of service (panic) because a parameter is incorrectly used as a local variable.",
  "repo": "torvalds/linux",
  "patch_hash": "f09444639099584bc4784dfcd85ada67c6f33e0f",
  "patch_info": {
    "commit_hash": "f09444639099584bc4784dfcd85ada67c6f33e0f",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/f09444639099584bc4784dfcd85ada67c6f33e0f",
    "files": [
      "drivers/hwtracing/coresight/coresight-etm-perf.c"
    ],
    "message": "coresight: fix kernel panic caused by invalid CPU\n\nCommit d52c9750f150 (\"coresight: reset \"enable_sink\" flag when need be\")\ncaused a kernel panic because of the using of an invalid value: after\n'for_each_cpu(cpu, mask)', value of local variable 'cpu' become invalid,\ncauses following 'cpu_to_node' access invalid memory area.\n\nThis patch brings the deleted 'cpu = cpumask_first(mask)' back.\n\nPanic log:\n\n $ perf record -e cs_etm// ls\n\n Unable to handle kernel paging request at virtual address fffe801804af4f10\n pgd = ffff8017ce031600\n [fffe801804af4f10] *pgd=0000000000000000, *pud=0000000000000000\n Internal error: Oops: 96000004 [#1] SMP\n Modules linked in:\n CPU: 33 PID: 1619 Comm: perf Not tainted 4.7.1+ #16\n Hardware name: Huawei Taishan 2280 /CH05TEVBA, BIOS 1.10 11/24/2016\n task: ffff8017cb0c8400 ti: ffff8017cb154000 task.ti: ffff8017cb154000\n PC is at tmc_alloc_etf_buffer+0x60/0xd4\n LR is at tmc_alloc_etf_buffer+0x44/0xd4\n pc : [<ffff000008633df8>] lr : [<ffff000008633ddc>] pstate: 60000145\n sp : ffff8017cb157b40\n x29: ffff8017cb157b40 x28: 0000000000000000\n ...skip...\n 7a60: ffff000008c64dc8 0000000000000006 0000000000000253 ffffffffffffffff\n 7a80: 0000000000000000 0000000000000000 ffff0000080872cc 0000000000000001\n [<ffff000008633df8>] tmc_alloc_etf_buffer+0x60/0xd4\n [<ffff000008632b9c>] etm_setup_aux+0x1dc/0x1e8\n [<ffff00000816eed4>] rb_alloc_aux+0x2b0/0x338\n [<ffff00000816a5e4>] perf_mmap+0x414/0x568\n [<ffff0000081ab694>] mmap_region+0x324/0x544\n [<ffff0000081abbe8>] do_mmap+0x334/0x3e0\n [<ffff000008191150>] vm_mmap_pgoff+0xa4/0xc8\n [<ffff0000081a9a30>] SyS_mmap_pgoff+0xb0/0x22c\n [<ffff0000080872e4>] sys_mmap+0x18/0x28\n [<ffff0000080843f0>] el0_svc_naked+0x24/0x28\n Code: 912040a5 d0001c00 f873d821 911c6000 (b8656822)\n ---[ end trace 98933da8f92b0c9a ]---\n\nSigned-off-by: Wang Nan <wangnan0@huawei.com>\nCc: Xia Kaixu <xiakaixu@huawei.com>\nCc: Li Zefan <lizefan@huawei.com>\nCc: Mathieu Poirier <mathieu.poirier@linaro.org>\nCc: linux-arm-kernel@lists.infradead.org\nCc: linux-kernel@vger.kernel.org\nFixes: d52c9750f150 (\"coresight: reset \"enable_sink\" flag when need be\")\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>\nCc: stable <stable@vger.kernel.org> # 4.10\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "before_after_code_files": [
      "drivers/hwtracing/coresight/coresight-etm-perf.c||drivers/hwtracing/coresight/coresight-etm-perf.c"
    ]
  },
  "patch_diff": {
    "drivers/hwtracing/coresight/coresight-etm-perf.c||drivers/hwtracing/coresight/coresight-etm-perf.c": [
      "File: drivers/hwtracing/coresight/coresight-etm-perf.c -> drivers/hwtracing/coresight/coresight-etm-perf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "242:  if (!sink_ops(sink)->alloc_buffer)",
      "243:   goto err;",
      "246:  event_data->snk_config =",
      "247:    sink_ops(sink)->alloc_buffer(sink, cpu, pages,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "245:  cpu = cpumask_first(mask);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "08965c2eba135bdfb6e86cf25308e01421c7e0ce",
      "candidate_info": {
        "commit_hash": "08965c2eba135bdfb6e86cf25308e01421c7e0ce",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/08965c2eba135bdfb6e86cf25308e01421c7e0ce",
        "files": [
          "drivers/scsi/sd.c"
        ],
        "message": "Revert \"sd: remove __data_len hack for WRITE SAME\"\n\nThis patch reverts commit f80de881d8df and avoids that sending a\nWRITE SAME command to the iSCSI initiator triggers the following:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000014\nTARGET_CORE[iSCSI]: Expected Transfer Length: 260096 does not match SCSI CDB Length: 512 for SAM Opcode: 0x41\nIP: iscsi_tcp_segment_done+0x20b/0x310 [libiscsi_tcp]\n\nOops: 0000 [#1] SMP\nModules linked in: target_core_user uio target_core_iblock target_core_file iscsi_target_mod target_core_mod netconsole configfs crct10dif_pclmul crc32_pclmul ghash_clmulni_intel aesni_intel aes_x86_64 crypto_simd cryptd glue_helper virtio_console virtio_rng virtio_balloon serio_raw i2c_piix4 acpi_cpufreq button iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi ext4 jbd2 mbcache virtio_blk virtio_net psmouse floppy drm_kms_helper syscopyarea\nsysfillrect sysimgblt fb_sys_fops ttm drm virtio_pci\nCPU: 2 PID: 5 Comm: kworker/u8:0 Not tainted 4.10.0-rc5-debug+ #3\nWorkqueue: iscsi_q_0 iscsi_xmitworker [libiscsi]\nRIP: 0010:iscsi_tcp_segment_done+0x20b/0x310 [libiscsi_tcp]\nCall Trace:\n iscsi_sw_tcp_xmit_segment+0x84/0x120 [iscsi_tcp]\n iscsi_sw_tcp_pdu_xmit+0x51/0x180 [iscsi_tcp]\n iscsi_tcp_task_xmit+0xb3/0x290 [libiscsi_tcp]\n iscsi_xmit_task+0x4e/0xc0 [libiscsi]\n iscsi_xmitworker+0x243/0x330 [libiscsi]\n process_one_work+0x1d8/0x4b0\n worker_thread+0x49/0x4a0\n kthread+0x102/0x140\n\nFixes: f80de881d8df (\"sd: remove __data_len hack for WRITE SAME\")\nSigned-off-by: Bart Van Assche <bart.vanassche@sandisk.com>\nCc: Hannes Reinecke <hare@suse.com>\nCc: Sagi Grimberg <sagi@grimberg.me>\nCc: Jens Axboe <axboe@fb.com>\nCc: Lee Duncan <lduncan@suse.com>\nCc: Chris Leech <cleech@redhat.com>\nAcked-by: Christoph Hellwig <hch@lst.de>\nAcked-by: Martin K. Petersen <martin.petersen@oracle.com>\nSigned-off-by: Jens Axboe <axboe@fb.com>",
        "before_after_code_files": [
          "drivers/scsi/sd.c||drivers/scsi/sd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/scsi/sd.c||drivers/scsi/sd.c": [
          "File: drivers/scsi/sd.c -> drivers/scsi/sd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "836:  struct bio *bio = rq->bio;",
          "837:  sector_t sector = blk_rq_pos(rq);",
          "838:  unsigned int nr_sectors = blk_rq_sectors(rq);",
          "839:  int ret;",
          "841:  if (sdkp->device->no_write_same)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "839:  unsigned int nr_bytes = blk_rq_bytes(rq);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "869:  cmd->transfersize = sdp->sector_size;",
          "870:  cmd->allowed = SD_MAX_RETRIES;",
          "872: }",
          "874: static int sd_setup_flush_cmnd(struct scsi_cmnd *cmd)",
          "",
          "[Removed Lines]",
          "871:  return scsi_init_io(cmd);",
          "",
          "[Added Lines]",
          "883:  rq->__data_len = sdp->sector_size;",
          "884:  ret = scsi_init_io(cmd);",
          "885:  rq->__data_len = nr_bytes;",
          "886:  return ret;",
          "",
          "---------------"
        ]
      }
    }
  ]
}