{
  "cve_id": "CVE-2021-3566",
  "cve_desc": "Prior to ffmpeg version 4.3, the tty demuxer did not have a 'read_probe' function assigned to it. By crafting a legitimate \"ffconcat\" file that references an image, followed by a file the triggers the tty demuxer, the contents of the second file will be copied into the output file verbatim (as long as the `-vcodec copy` option is passed to ffmpeg).",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "3bce9e9b3ea35c54bacccc793d7da99ea5157532",
  "patch_info": {
    "commit_hash": "3bce9e9b3ea35c54bacccc793d7da99ea5157532",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/3bce9e9b3ea35c54bacccc793d7da99ea5157532",
    "files": [
      "libavformat/tty.c"
    ],
    "message": "avformat/tty: add probe function",
    "before_after_code_files": [
      "libavformat/tty.c||libavformat/tty.c"
    ]
  },
  "patch_diff": {
    "libavformat/tty.c||libavformat/tty.c": [
      "File: libavformat/tty.c -> libavformat/tty.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "34: #include \"internal.h\"",
      "35: #include \"sauce.h\"",
      "37: typedef struct TtyDemuxContext {",
      "38:     AVClass *class;",
      "39:     int chars_per_frame;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37: static int isansicode(int x)",
      "38: {",
      "39:     return x == 0x1B || x == 0x0A || x == 0x0D || (x >= 0x20 && x < 0x7f);",
      "40: }",
      "42: static const char tty_extensions[31] = \"ans,art,asc,diz,ice,nfo,txt,vt\";",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "43: } TtyDemuxContext;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "52: static int read_probe(const AVProbeData *p)",
      "53: {",
      "54:     int cnt = 0;",
      "56:     for (int i = 0; i < p->buf_size; i++)",
      "57:         cnt += !!isansicode(p->buf[i]);",
      "59:     return (cnt * 100LL / p->buf_size) * (cnt > 400) *",
      "60:         !!av_match_ext(p->filename, tty_extensions);",
      "61: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "153:     .name           = \"tty\",",
      "154:     .long_name      = NULL_IF_CONFIG_SMALL(\"Tele-typewriter\"),",
      "155:     .priv_data_size = sizeof(TtyDemuxContext),",
      "156:     .read_header    = read_header,",
      "157:     .read_packet    = read_packet,",
      "159:     .priv_class     = &tty_demuxer_class,",
      "160: };",
      "",
      "[Removed Lines]",
      "158:     .extensions     = \"ans,art,asc,diz,ice,nfo,txt,vt\",",
      "",
      "[Added Lines]",
      "174:     .read_probe     = read_probe,",
      "177:     .extensions     = tty_extensions,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b601e24ab39b8bdfb4aec49b6b339dd9b34a2b5e",
      "candidate_info": {
        "commit_hash": "b601e24ab39b8bdfb4aec49b6b339dd9b34a2b5e",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/b601e24ab39b8bdfb4aec49b6b339dd9b34a2b5e",
        "files": [
          "libavformat/tty.c"
        ],
        "message": "lavf/tty: Reduce probe score to fix ffmetadata auto-detection.\n\nFixes ticket #8568.",
        "before_after_code_files": [
          "libavformat/tty.c||libavformat/tty.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/tty.c||libavformat/tty.c"
          ],
          "candidate": [
            "libavformat/tty.c||libavformat/tty.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/tty.c||libavformat/tty.c": [
          "File: libavformat/tty.c -> libavformat/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:     for (int i = 8; i < p->buf_size; i++)",
          "66:         cnt += !!isansicode(p->buf[i]);",
          "69:         !!av_match_ext(p->filename, tty_extensions);",
          "70: }",
          "",
          "[Removed Lines]",
          "68:     return (cnt * 100LL / p->buf_size) * (cnt > 400) *",
          "",
          "[Added Lines]",
          "68:     return (cnt * 99LL / p->buf_size) * (cnt > 400) *",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9216ad2e46ad09a8d6810d52fcd8714ba3e39e44",
      "candidate_info": {
        "commit_hash": "9216ad2e46ad09a8d6810d52fcd8714ba3e39e44",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/9216ad2e46ad09a8d6810d52fcd8714ba3e39e44",
        "files": [
          "libavformat/tty.c"
        ],
        "message": "avformat/tty: make probing strict for first 8 bytes",
        "before_after_code_files": [
          "libavformat/tty.c||libavformat/tty.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/tty.c||libavformat/tty.c"
          ],
          "candidate": [
            "libavformat/tty.c||libavformat/tty.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/tty.c||libavformat/tty.c": [
          "File: libavformat/tty.c -> libavformat/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:     if (!p->buf_size)",
          "57:         return 0;",
          "60:         cnt += !!isansicode(p->buf[i]);",
          "62:     return (cnt * 100LL / p->buf_size) * (cnt > 400) *",
          "",
          "[Removed Lines]",
          "59:     for (int i = 0; i < p->buf_size; i++)",
          "",
          "[Added Lines]",
          "59:     for (int i = 0; i < 8 && i < p->buf_size; i++)",
          "60:         cnt += !!isansicode(p->buf[i]);",
          "62:     if (cnt != 8)",
          "63:         return 0;",
          "65:     for (int i = 8; i < p->buf_size; i++)",
          "",
          "---------------"
        ]
      }
    }
  ]
}