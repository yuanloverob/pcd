{
  "cve_id": "CVE-2015-1872",
  "cve_desc": "The ff_mjpeg_decode_sof function in libavcodec/mjpegdec.c in FFmpeg before 2.5.4 does not validate the number of components in a JPEG-LS Start Of Frame segment, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted Motion JPEG data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "fabbfaa095660982cc0bc63242c459561fa37037",
  "patch_info": {
    "commit_hash": "fabbfaa095660982cc0bc63242c459561fa37037",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/fabbfaa095660982cc0bc63242c459561fa37037",
    "files": [
      "libavcodec/mjpegdec.c"
    ],
    "message": "avcodec/mjpegdec: Check number of components for JPEG-LS\n\nFixes out of array accesses\nFixes: asan_heap-oob_1c1a4ea_1242_cov_2274415971_TESTcmyk.jpg\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
      "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "558:     }",
      "559:     if (s->ls) {",
      "560:         s->upscale_h = s->upscale_v = 0;",
      "562:             s->avctx->pix_fmt = AV_PIX_FMT_RGB24;",
      "564:             s->avctx->pix_fmt = AV_PIX_FMT_PAL8;",
      "565:         else if (s->bits <= 8)",
      "566:             s->avctx->pix_fmt = AV_PIX_FMT_GRAY8;",
      "",
      "[Removed Lines]",
      "561:         if (s->nb_components > 1)",
      "563:         else if (s->palette_index && s->bits <= 8)",
      "",
      "[Added Lines]",
      "561:         if (s->nb_components == 3) {",
      "563:         } else if (s->nb_components != 1) {",
      "564:             av_log(s->avctx, AV_LOG_ERROR, \"Unsupported number of components %d\\n\", s->nb_components);",
      "565:             return AVERROR_PATCHWELCOME;",
      "566:         } else if (s->palette_index && s->bits <= 8)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "75b0cfcf105c8720a47a2ee80a70ba16799d71b7",
      "candidate_info": {
        "commit_hash": "75b0cfcf105c8720a47a2ee80a70ba16799d71b7",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/75b0cfcf105c8720a47a2ee80a70ba16799d71b7",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "avcodec/mjpegdec: Check number of components for JPEG-LS\n\nFixes out of array accesses\nFixes: asan_heap-oob_1c1a4ea_1242_cov_2274415971_TESTcmyk.jpg\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit fabbfaa095660982cc0bc63242c459561fa37037)\n\nConflicts:\n\n\tlibavcodec/mjpegdec.c",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "347:         return -1;",
          "348:     }",
          "349:     if(s->ls){",
          "351:             s->avctx->pix_fmt = PIX_FMT_RGB24;",
          "353:             s->avctx->pix_fmt = PIX_FMT_GRAY8;",
          "354:         else",
          "355:             s->avctx->pix_fmt = PIX_FMT_GRAY16;",
          "",
          "[Removed Lines]",
          "350:         if(s->nb_components > 1)",
          "352:         else if(s->bits <= 8)",
          "",
          "[Added Lines]",
          "350:         if(s->nb_components == 3) {",
          "352:         } else if (s->nb_components != 1) {",
          "353:             av_log(s->avctx, AV_LOG_ERROR, \"Unsupported number of components %d\\n\", s->nb_components);",
          "354:             return AVERROR_PATCHWELCOME;",
          "355:         } else if (s->bits <= 8)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3a691185f732cbb5b350fbf2327817087b2a3a30",
      "candidate_info": {
        "commit_hash": "3a691185f732cbb5b350fbf2327817087b2a3a30",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/3a691185f732cbb5b350fbf2327817087b2a3a30",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "avcodec/mjpegdec: Check number of components for JPEG-LS\n\nFixes out of array accesses\nFixes: asan_heap-oob_1c1a4ea_1242_cov_2274415971_TESTcmyk.jpg\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit fabbfaa095660982cc0bc63242c459561fa37037)\n\nConflicts:\n\n\tlibavcodec/mjpegdec.c",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "439:     }",
          "440:     if (s->ls) {",
          "441:         s->upscale_h = s->upscale_v = 0;",
          "443:             s->avctx->pix_fmt = AV_PIX_FMT_RGB24;",
          "445:             s->avctx->pix_fmt = AV_PIX_FMT_GRAY8;",
          "446:         else",
          "447:             s->avctx->pix_fmt = AV_PIX_FMT_GRAY16;",
          "",
          "[Removed Lines]",
          "442:         if (s->nb_components > 1)",
          "444:         else if (s->bits <= 8)",
          "",
          "[Added Lines]",
          "442:         if (s->nb_components == 3) {",
          "444:         } else if (s->nb_components != 1) {",
          "445:             av_log(s->avctx, AV_LOG_ERROR, \"Unsupported number of components %d\\n\", s->nb_components);",
          "446:             return AVERROR_PATCHWELCOME;",
          "447:         } else if (s->bits <= 8)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd6a9fcd427b86c0a249a8cdb33f746f33706725",
      "candidate_info": {
        "commit_hash": "fd6a9fcd427b86c0a249a8cdb33f746f33706725",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/fd6a9fcd427b86c0a249a8cdb33f746f33706725",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "avcodec/mjpegdec: Check number of components for JPEG-LS\n\nFixes out of array accesses\nFixes: asan_heap-oob_1c1a4ea_1242_cov_2274415971_TESTcmyk.jpg\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit fabbfaa095660982cc0bc63242c459561fa37037)\n\nConflicts:\n\n\tlibavcodec/mjpegdec.c",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "437:     }",
          "438:     if (s->ls) {",
          "439:         s->upscale_h = s->upscale_v = 0;",
          "441:             s->avctx->pix_fmt = AV_PIX_FMT_RGB24;",
          "443:             s->avctx->pix_fmt = AV_PIX_FMT_GRAY8;",
          "444:         else",
          "445:             s->avctx->pix_fmt = AV_PIX_FMT_GRAY16;",
          "",
          "[Removed Lines]",
          "440:         if (s->nb_components > 1)",
          "442:         else if (s->bits <= 8)",
          "",
          "[Added Lines]",
          "440:         if (s->nb_components == 3) {",
          "442:         } else if (s->nb_components != 1) {",
          "443:             av_log(s->avctx, AV_LOG_ERROR, \"Unsupported number of components %d\\n\", s->nb_components);",
          "444:             return AVERROR_PATCHWELCOME;",
          "445:         } else if (s->bits <= 8)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a16669f1e226e15c5e970e2ab48b2c54ed7ee77a",
      "candidate_info": {
        "commit_hash": "a16669f1e226e15c5e970e2ab48b2c54ed7ee77a",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/a16669f1e226e15c5e970e2ab48b2c54ed7ee77a",
        "files": [
          "libavcodec/mjpegdec.c"
        ],
        "message": "avcodec/mjpegdec: Check number of components for JPEG-LS\n\nFixes out of array accesses\nFixes: asan_heap-oob_1c1a4ea_1242_cov_2274415971_TESTcmyk.jpg\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit fabbfaa095660982cc0bc63242c459561fa37037)\n\nConflicts:\n\n\tlibavcodec/mjpegdec.c",
        "before_after_code_files": [
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "418:     }",
          "419:     if (s->ls) {",
          "420:         s->upscale_h = s->upscale_v = 0;",
          "422:             s->avctx->pix_fmt = PIX_FMT_RGB24;",
          "424:             s->avctx->pix_fmt = PIX_FMT_GRAY8;",
          "425:         else",
          "426:             s->avctx->pix_fmt = PIX_FMT_GRAY16;",
          "",
          "[Removed Lines]",
          "421:         if (s->nb_components > 1)",
          "423:         else if (s->bits <= 8)",
          "",
          "[Added Lines]",
          "421:         if (s->nb_components == 3) {",
          "423:         } else if (s->nb_components != 1) {",
          "424:             av_log(s->avctx, AV_LOG_ERROR, \"Unsupported number of components %d\\n\", s->nb_components);",
          "425:             return AVERROR_PATCHWELCOME;",
          "426:         } else if (s->bits <= 8)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "254f653b24cd110fb452531bcad13083d592354e",
      "candidate_info": {
        "commit_hash": "254f653b24cd110fb452531bcad13083d592354e",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/254f653b24cd110fb452531bcad13083d592354e",
        "files": [
          "libavcodec/jpeglsdec.c",
          "libavcodec/mjpegdec.c",
          "libavcodec/mjpegdec.h"
        ],
        "message": "avcodec/jpeglsdec: add PAL8 support\n\nFixes Ticket3478\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/jpeglsdec.c||libavcodec/jpeglsdec.c",
          "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c",
          "libavcodec/mjpegdec.h||libavcodec/mjpegdec.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ],
          "candidate": [
            "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/jpeglsdec.c||libavcodec/jpeglsdec.c": [
          "File: libavcodec/jpeglsdec.c -> libavcodec/jpeglsdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: int ff_jpegls_decode_lse(MJpegDecodeContext *s)",
          "51: {",
          "52:     int id;",
          "55:     id = get_bits(&s->gb, 8);",
          "57:     switch (id) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:     int tid, wt, maxtab, i, j;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:         break;",
          "68:     case 2:",
          "69:     case 3:",
          "72:     case 4:",
          "73:         av_log(s->avctx, AV_LOG_ERROR, \"oversize image not supported\\n\");",
          "74:         return AVERROR(ENOSYS);",
          "",
          "[Removed Lines]",
          "70:         av_log(s->avctx, AV_LOG_ERROR, \"palette not supported\\n\");",
          "71:         return AVERROR(ENOSYS);",
          "",
          "[Added Lines]",
          "70:         s->palette_index = 0;",
          "72:         tid= get_bits(&s->gb, 8);",
          "73:         wt = get_bits(&s->gb, 8);",
          "75:         if (len < 5)",
          "76:             return AVERROR_INVALIDDATA;",
          "78:         if (wt < 1 || wt > MAX_COMPONENTS) {",
          "79:             avpriv_request_sample(s->avctx, \"wt %d\", wt);",
          "80:             return AVERROR_PATCHWELCOME;",
          "81:         }",
          "83:         if ((5 + wt*(s->maxval+1)) < 65535)",
          "84:             maxtab = s->maxval;",
          "85:         else",
          "86:             maxtab = 65530/wt - 1;",
          "88:         if(s->avctx->debug & FF_DEBUG_PICT_INFO) {",
          "89:             av_log(s->avctx, AV_LOG_DEBUG, \"LSE palette %d tid:%d wt:%d maxtab:%d\\n\", id, tid, wt, maxtab);",
          "90:         }",
          "91:         if (maxtab >= 256) {",
          "92:             avpriv_request_sample(s->avctx, \">8bit palette\");",
          "93:             return AVERROR_PATCHWELCOME;",
          "94:         }",
          "95:         maxtab = FFMIN(maxtab, (len - 5) / wt + s->palette_index);",
          "97:         if (s->palette_index > maxtab)",
          "98:             return AVERROR_INVALIDDATA;",
          "100:         if ((s->avctx->pix_fmt == AV_PIX_FMT_GRAY8 || s->avctx->pix_fmt == AV_PIX_FMT_PAL8) &&",
          "101:             (s->picture_ptr->format == AV_PIX_FMT_GRAY8 || s->picture_ptr->format == AV_PIX_FMT_PAL8)) {",
          "102:             uint32_t *pal = s->picture_ptr->data[1];",
          "103:             s->picture_ptr->format =",
          "104:             s->avctx->pix_fmt = AV_PIX_FMT_PAL8;",
          "105:             for (i=s->palette_index; i<maxtab; i++) {",
          "106:                 pal[i] = 0;",
          "107:                 for (j=0; j<wt; j++) {",
          "108:                     pal[i] |= get_bits(&s->gb, 8) << (8*wt);",
          "109:                 }",
          "110:             }",
          "111:             s->palette_index = i;",
          "112:         }",
          "113:         break;",
          "",
          "---------------"
        ],
        "libavcodec/mjpegdec.c||libavcodec/mjpegdec.c": [
          "File: libavcodec/mjpegdec.c -> libavcodec/mjpegdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "517:         s->upscale_h = s->upscale_v = 0;",
          "518:         if (s->nb_components > 1)",
          "519:             s->avctx->pix_fmt = AV_PIX_FMT_RGB24;",
          "520:         else if (s->bits <= 8)",
          "521:             s->avctx->pix_fmt = AV_PIX_FMT_GRAY8;",
          "522:         else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "520:         else if (s->palette_index && s->bits <= 8)",
          "521:             s->avctx->pix_fmt = AV_PIX_FMT_PAL8;",
          "",
          "---------------"
        ],
        "libavcodec/mjpegdec.h||libavcodec/mjpegdec.h": [
          "File: libavcodec/mjpegdec.h -> libavcodec/mjpegdec.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:     int16_t (*blocks[MAX_COMPONENTS])[64]; ///< intermediate sums (progressive mode)",
          "103:     uint8_t *last_nnz[MAX_COMPONENTS];",
          "104:     uint64_t coefs_finished[MAX_COMPONENTS]; ///< bitmask of which coefs have been completely decoded (progressive mode)",
          "105:     ScanTable scantable;",
          "106:     DSPContext dsp;",
          "107:     HpelDSPContext hdsp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:     int palette_index;",
          "",
          "---------------"
        ]
      }
    }
  ]
}