{
  "cve_id": "CVE-2020-35535",
  "cve_desc": "In LibRaw, there is an out-of-bounds read vulnerability within the \"LibRaw::parseSonySRF()\" function (libraw\\src\\metadata\\sony.cpp) when processing srf files.",
  "repo": "LibRaw/LibRaw",
  "patch_hash": "c243f4539233053466c1309bde606815351bee81",
  "patch_info": {
    "commit_hash": "c243f4539233053466c1309bde606815351bee81",
    "repo": "LibRaw/LibRaw",
    "commit_url": "https://github.com/LibRaw/LibRaw/commit/c243f4539233053466c1309bde606815351bee81",
    "files": [
      "src/metadata/sony.cpp"
    ],
    "message": "additional checks in parseSonySRF\n\nparseSonySR2: buffer size check",
    "before_after_code_files": [
      "src/metadata/sony.cpp||src/metadata/sony.cpp"
    ]
  },
  "patch_diff": {
    "src/metadata/sony.cpp||src/metadata/sony.cpp": [
      "File: src/metadata/sony.cpp -> src/metadata/sony.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1799:   float num;",
      "1800:   int i;",
      "1801:   int WBCTC_count;",
      "1802:   entries = sget2(cbuf_SR2);",
      "1803:   if (entries > 1000)",
      "1804:     return;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1802: #define CHECKBUFFER_N(offset,N)                                     \\",
      "1803:   do                                                                \\",
      "1804:   {                                                                 \\",
      "1805:     if ((((offset) + (N)) > SR2SubIFDLength) || ((offset) < 0))     \\",
      "1806:       return;              \\",
      "1807:   } while (0)",
      "1809:   CHECKBUFFER_N(0, 2);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1812:       if (dng_writer == nonDNG) {",
      "1813:         switch (tag_id) {",
      "1814:         case 0x7300:",
      "1816:           TagProcessed = 1;",
      "1817:           break;",
      "1818:         case 0x7303:",
      "1820:           TagProcessed = 1;",
      "1821:           break;",
      "1822:         case 0x7310:",
      "1824:           i = cblack[3];",
      "1825:           FORC3 if (i > cblack[c]) i = cblack[c];",
      "1826:           FORC4 cblack[c] -= i;",
      "",
      "[Removed Lines]",
      "1815:           FORC4 cblack[c] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1819:           FORC4 cam_mul[GRBG_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1823:           FORC4 cblack[RGGB_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "",
      "[Added Lines]",
      "1823:    CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 4,0);",
      "1824:    FORC4 cblack[c] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1828:    CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 4, 0);",
      "1829:    FORC4 cam_mul[GRBG_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1833:    CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 4, 0);",
      "1834:    FORC4 cblack[RGGB_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1828:           TagProcessed = 1;",
      "1829:           break;",
      "1830:         case 0x7313:",
      "1832:           TagProcessed = 1;",
      "1833:           break;",
      "1834:         case 0x74a0:",
      "1836:           TagProcessed = 1;",
      "1837:           break;",
      "1838:         case 0x74a1:",
      "1840:           TagProcessed = 1;",
      "1841:           break;",
      "1842:         case 0x74a2:",
      "1844:           TagProcessed = 1;",
      "1845:           break;",
      "1846:         case 0x74a3:",
      "1848:           TagProcessed = 1;",
      "1849:           break;",
      "1850:         case 0x7800:",
      "1852:           {",
      "1853:             num = 0.0;",
      "1854:             for (c = 0; c < 3; c++)",
      "",
      "[Removed Lines]",
      "1831:           FORC4 cam_mul[RGGB_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1835:           ilm.MaxAp4MaxFocal = sgetreal(tag_type, cbuf_SR2 + tag_dataoffset);",
      "1839:           ilm.MaxAp4MinFocal = sgetreal(tag_type, cbuf_SR2 + tag_dataoffset);",
      "1843:           ilm.MaxFocal = sgetreal(tag_type, cbuf_SR2 + tag_dataoffset);",
      "1847:           ilm.MinFocal = sgetreal(tag_type, cbuf_SR2 + tag_dataoffset);",
      "1851:           for (i = 0; i < 3; i++)",
      "",
      "[Added Lines]",
      "1842:    CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 4, 0);",
      "1843:    FORC4 cam_mul[RGGB_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1847:    CHECKBUFFER_N(tag_dataoffset, 4);",
      "1848:    ilm.MaxAp4MaxFocal = sgetreal(tag_type, cbuf_SR2 + tag_dataoffset);",
      "1852:    CHECKBUFFER_N(tag_dataoffset, 4);",
      "1853:    ilm.MaxAp4MinFocal = sgetreal(tag_type, cbuf_SR2 + tag_dataoffset);",
      "1857:    CHECKBUFFER_N(tag_dataoffset, 4);",
      "1858:    ilm.MaxFocal = sgetreal(tag_type, cbuf_SR2 + tag_dataoffset);",
      "1862:    CHECKBUFFER_N(tag_dataoffset, 4);",
      "1863:    ilm.MinFocal = sgetreal(tag_type, cbuf_SR2 + tag_dataoffset);",
      "1867:    CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 8, 2);",
      "1868:     for (i = 0; i < 3; i++)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1865:         case 0x787f:",
      "1866:           if (tag_datalen == 3)",
      "1867:           {",
      "1869:             imgdata.color.linear_max[3] = imgdata.color.linear_max[1];",
      "1870:           }",
      "1871:           else if (tag_datalen == 1)",
      "1872:           {",
      "1874:                 imgdata.color.linear_max[2] = imgdata.color.linear_max[3] =",
      "1875:                     sget2(cbuf_SR2 + tag_dataoffset);",
      "1876:           }",
      "",
      "[Removed Lines]",
      "1868:             FORC3 imgdata.color.linear_max[c] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1873:             imgdata.color.linear_max[0] = imgdata.color.linear_max[1] =",
      "",
      "[Added Lines]",
      "1885:      CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 2, 2);",
      "1886:      FORC3 imgdata.color.linear_max[c] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1891:      CHECKBUFFER_N(tag_dataoffset, 2);",
      "1892:      imgdata.color.linear_max[0] = imgdata.color.linear_max[1] =",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1884:           i = tag_id - 0x7480;",
      "1885:           if (Sony_SR2_wb_list[i] > 255) {",
      "1886:             icWBCCTC[WBCTC_count][0] = Sony_SR2_wb_list[i];",
      "1888:             icWBCCTC[WBCTC_count][4] = icWBCCTC[WBCTC_count][2];",
      "1889:             WBCTC_count++;",
      "1890:           } else {",
      "1892:             icWBC[Sony_SR2_wb_list[i]][3] = icWBC[Sony_SR2_wb_list[i]][1];",
      "1893:           }",
      "1894:         } else if ((tag_id >= 0x7820) && (tag_id <= 0x782d)) {",
      "1895:           i = tag_id - 0x7820;",
      "1896:           if (Sony_SR2_wb_list1[i] > 255) {",
      "1897:             icWBCCTC[WBCTC_count][0] = Sony_SR2_wb_list1[i];",
      "1899:             icWBCCTC[WBCTC_count][4] = icWBCCTC[WBCTC_count][2];",
      "1900:             if (Sony_SR2_wb_list1[i] == 3200) {",
      "1901:               FORC3 icWBC[LIBRAW_WBI_StudioTungsten][c] = icWBCCTC[WBCTC_count][c + 1];",
      "",
      "[Removed Lines]",
      "1887:             FORC3 icWBCCTC[WBCTC_count][c + 1] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1891:             FORC3 icWBC[Sony_SR2_wb_list[i]][c] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1898:             FORC3 icWBCCTC[WBCTC_count][c + 1] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "",
      "[Added Lines]",
      "1906:    CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 2, 2);",
      "1907:    FORC3 icWBCCTC[WBCTC_count][c + 1] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1911:      CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 2, 2);",
      "1912:      FORC3 icWBC[Sony_SR2_wb_list[i]][c] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1919:    CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 2, 2);",
      "1920:    FORC3 icWBCCTC[WBCTC_count][c + 1] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1903:             }",
      "1904:             WBCTC_count++;",
      "1905:           } else {",
      "1907:             icWBC[Sony_SR2_wb_list1[i]][3] = icWBC[Sony_SR2_wb_list1[i]][1];",
      "1908:           }",
      "1909:         } else if (tag_id == 0x7302) {",
      "1911:         } else if (tag_id == 0x7312) {",
      "1913:         }",
      "1914:       }",
      "1915:     }",
      "1916:   }",
      "1917: }",
      "1919: void LibRaw::parseSonySRF(unsigned len)",
      "1920: {",
      "",
      "[Removed Lines]",
      "1906:             FORC3 icWBC[Sony_SR2_wb_list1[i]][c] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1910:           FORC4 icWBC[LIBRAW_WBI_Auto][GRBG_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1912:           FORC4 icWBC[LIBRAW_WBI_Auto][RGGB_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "",
      "[Added Lines]",
      "1928:      CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 2, 2);",
      "1929:      FORC3 icWBC[Sony_SR2_wb_list1[i]][c] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1933:    CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 3, 2);",
      "1934:    FORC4 icWBC[LIBRAW_WBI_Auto][GRBG_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1936:    CHECKBUFFER_N(tag_dataoffset + tag_dataunitlen * 3, 2);",
      "1937:    FORC4 icWBC[LIBRAW_WBI_Auto][RGGB_2_RGBG(c)] = sget2(cbuf_SR2 + tag_dataoffset + tag_dataunitlen * c);",
      "1943: #undef CHECKBUFFER_N",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1935:   INT64 srf_offset, tag_offset, tag_data, tag_dataoffset;",
      "1936:   int tag_dataunitlen;",
      "1937:   uchar *srf_buf;",
      "1939:   unsigned tag_id, tag_type, tag_datalen;",
      "1942:   fread(srf_buf, len, 1, ifp);",
      "1944:   offset += srf_buf[offset] << 2;",
      "",
      "[Removed Lines]",
      "1938:   short entries;",
      "1941:   srf_buf = (uchar *)malloc(len);",
      "",
      "[Added Lines]",
      "1964:   ushort entries;",
      "1967:   srf_buf = (uchar *)malloc(len+64);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1995:                    &tag_offset, &tag_id, &tag_type, &tag_dataoffset,",
      "1996:                    &tag_datalen, &tag_dataunitlen) == 0) {",
      "1997:       if (tag_id == 0x0000) {",
      "1999:       } else if (tag_id == 0x0001) {",
      "2001:       }",
      "2002:     } else goto restore_after_parseSonySRF;",
      "2003:   }",
      "",
      "[Removed Lines]",
      "1998:         SRF2Key = sget4(srf_buf + tag_dataoffset);",
      "2000:         RawDataKey = sget4(srf_buf + tag_dataoffset);",
      "",
      "[Added Lines]",
      "2024:     CHECKBUFFER_SGET4(tag_dataoffset);",
      "2025:     SRF2Key = sget4(srf_buf + tag_dataoffset);",
      "2027:     CHECKBUFFER_SGET4(tag_dataoffset);",
      "2028:     RawDataKey = sget4(srf_buf + tag_dataoffset);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2019:   tag_offset = offset;",
      "2021:   while (entries--) {",
      "2023:                    &tag_offset, &tag_id, &tag_type, &tag_dataoffset,",
      "2024:                    &tag_datalen, &tag_dataunitlen) == 0) {",
      "2025:       if ((tag_id >= 0x00c0) && (tag_id <= 0x00ce)) {",
      "2026:         i = (tag_id - 0x00c0) % 3;",
      "2027:         nWB = (tag_id - 0x00c0) / 3;",
      "2029:         if (i == 1) {",
      "2030:           icWBC[Sony_SRF_wb_list[nWB]][3] =",
      "2031:             icWBC[Sony_SRF_wb_list[nWB]][i];",
      "2032:         }",
      "2033:       } else if ((tag_id >= 0x00d0) && (tag_id <= 0x00d2)) {",
      "2034:         i = (tag_id - 0x00d0) % 3;",
      "2036:         if (i == 1) {",
      "2037:           cam_mul[3] = cam_mul[i];",
      "2038:         }",
      "",
      "[Removed Lines]",
      "2022:     if (tiff_sget (save, srf_buf, len,",
      "2028:         icWBC[Sony_SRF_wb_list[nWB]][i] = sget4(srf_buf + tag_dataoffset);",
      "2035:         cam_mul[i] = sget4(srf_buf + tag_dataoffset);",
      "",
      "[Added Lines]",
      "2050:    if (tiff_sget(save, srf_buf, len,",
      "2056:   CHECKBUFFER_SGET4(tag_dataoffset);",
      "2057:   icWBC[Sony_SRF_wb_list[nWB]][i] = sget4(srf_buf + tag_dataoffset);",
      "2064:   CHECKBUFFER_SGET4(tag_dataoffset);",
      "2065:   cam_mul[i] = sget4(srf_buf + tag_dataoffset);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2044:         0x0005  RawDataLength",
      "2046:       case 0x0043:",
      "2048:         break;",
      "2049:       case 0x0044:",
      "2051:         break;",
      "2052:       case 0x0045:",
      "2054:         break;",
      "2055:       case 0x0046:",
      "2057:         break;",
      "2058:       }",
      "2059:     } else goto restore_after_parseSonySRF;",
      "",
      "[Removed Lines]",
      "2047:         ilm.MaxAp4MaxFocal = sgetreal(tag_type, srf_buf + tag_dataoffset);",
      "2050:          ilm.MaxAp4MinFocal = sgetreal(tag_type, srf_buf + tag_dataoffset);",
      "2053:         ilm.MinFocal = sgetreal(tag_type, srf_buf + tag_dataoffset);",
      "2056:         ilm.MaxFocal = sgetreal(tag_type, srf_buf + tag_dataoffset);",
      "",
      "[Added Lines]",
      "2077:     CHECKBUFFER_SGET4(tag_dataoffset); // need to add extra space",
      "2078:     ilm.MaxAp4MaxFocal = sgetreal(tag_type, srf_buf + tag_dataoffset);",
      "2081:     CHECKBUFFER_SGET4(tag_dataoffset);",
      "2082:     ilm.MaxAp4MinFocal = sgetreal(tag_type, srf_buf + tag_dataoffset);",
      "2085:     CHECKBUFFER_SGET4(tag_dataoffset);",
      "2086:     ilm.MinFocal = sgetreal(tag_type, srf_buf + tag_dataoffset);",
      "2089:     CHECKBUFFER_SGET4(tag_dataoffset);",
      "2090:     ilm.MaxFocal = sgetreal(tag_type, srf_buf + tag_dataoffset);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f9ff88f9e2d9549d03970878e4a0e6a8270e5617",
      "candidate_info": {
        "commit_hash": "f9ff88f9e2d9549d03970878e4a0e6a8270e5617",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/f9ff88f9e2d9549d03970878e4a0e6a8270e5617",
        "files": [
          "src/metadata/sony.cpp"
        ],
        "message": "additional Sony SRF parser checks",
        "before_after_code_files": [
          "src/metadata/sony.cpp||src/metadata/sony.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/metadata/sony.cpp||src/metadata/sony.cpp"
          ],
          "candidate": [
            "src/metadata/sony.cpp||src/metadata/sony.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/metadata/sony.cpp||src/metadata/sony.cpp": [
          "File: src/metadata/sony.cpp -> src/metadata/sony.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1930:   if (entries > 1000)",
          "1931:     goto restore_after_parseSonySRF;",
          "1932:   offset = srf_offset + 2;",
          "1933:   CHECKBUFFER_SGET4(offset + 12 * entries);",
          "1934:   srf_offset = sget4(srf_buf + offset + 12 * entries) -",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1933:   CHECKBUFFER_SGET4(offset);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1949:   while (entries--)",
          "1950:   {",
          "1951:     CHECKBUFFER_SGET4(offset + 8);",
          "1952:     tag_id = sget2(srf_buf + offset);",
          "1953:     tag_type = sget2(srf_buf + offset + 2);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1952:     CHECKBUFFER_SGET4(offset);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1975:   offset = srf_offset + 2;",
          "1976:   while (entries--)",
          "1977:   {",
          "1979:     tag_id = sget2(srf_buf + offset);",
          "1980:     tag_type = sget2(srf_buf + offset + 2);",
          "1981:     tag_datalen = sget4(srf_buf + offset + 4);",
          "",
          "[Removed Lines]",
          "1978:     CHECKBUFFER_SGET4(srf_offset + 8);",
          "",
          "[Added Lines]",
          "1980:     CHECKBUFFER_SGET4(offset);",
          "1981:     CHECKBUFFER_SGET4(offset + 8);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2099f64447858494cc6b8e154e86f9674a1b6185",
      "candidate_info": {
        "commit_hash": "2099f64447858494cc6b8e154e86f9674a1b6185",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/2099f64447858494cc6b8e154e86f9674a1b6185",
        "files": [
          "src/decoders/decoders_dcraw.cpp",
          "src/metadata/sony.cpp"
        ],
        "message": "Fixed #250 (curve underrun; Fixed #251 (wrong buffer check)",
        "before_after_code_files": [
          "src/decoders/decoders_dcraw.cpp||src/decoders/decoders_dcraw.cpp",
          "src/metadata/sony.cpp||src/metadata/sony.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/metadata/sony.cpp||src/metadata/sony.cpp"
          ],
          "candidate": [
            "src/metadata/sony.cpp||src/metadata/sony.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/decoders/decoders_dcraw.cpp||src/decoders/decoders_dcraw.cpp": [
          "File: src/decoders/decoders_dcraw.cpp -> src/decoders/decoders_dcraw.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "791:     split = get2();",
          "792:   }",
          "795:     max--;",
          "796:   huff = make_decoder(nikon_tree[tree]);",
          "797:   fseek(ifp, data_offset, SEEK_SET);",
          "",
          "[Removed Lines]",
          "794:   while (curve[max - 2] == curve[max - 1])",
          "",
          "[Added Lines]",
          "794:   while (max > 2 && (curve[max - 2] == curve[max - 1]))",
          "",
          "---------------"
        ],
        "src/metadata/sony.cpp||src/metadata/sony.cpp": [
          "File: src/metadata/sony.cpp -> src/metadata/sony.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1904: #define CHECKBUFFER_SGET4(offset)                                              \\",
          "1905:   do                                                                           \\",
          "1906:   {                                                                            \\",
          "1908:       goto restore_after_parseSonySRF;                                         \\",
          "1909:   } while (0)",
          "1910: #define CHECKBUFFER_SGET2(offset)                                              \\",
          "1911:   do                                                                           \\",
          "1912:   {                                                                            \\",
          "",
          "[Removed Lines]",
          "1907:     if (((offset + 4) > len) || ((offset) < 0))                                \\",
          "",
          "[Added Lines]",
          "1907:     if ((((offset) + 4) > len) || ((offset) < 0))                              \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1948:   while (entries--)",
          "1949:   {",
          "1951:     tag_id = sget2(srf_buf + offset);",
          "1952:     tag_type = sget2(srf_buf + offset + 2);",
          "1953:     tag_datalen = sget4(srf_buf + offset + 4);",
          "",
          "[Removed Lines]",
          "1950:     CHECKBUFFER_SGET4(srf_offset + 8);",
          "",
          "[Added Lines]",
          "1951:     CHECKBUFFER_SGET4(offset + 8);",
          "",
          "---------------"
        ]
      }
    }
  ]
}