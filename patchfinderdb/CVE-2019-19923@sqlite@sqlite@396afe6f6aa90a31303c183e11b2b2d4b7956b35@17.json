{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4fcb9caa60c3939cd562574f744a8514737ae7fb",
      "candidate_info": {
        "commit_hash": "4fcb9caa60c3939cd562574f744a8514737ae7fb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4fcb9caa60c3939cd562574f744a8514737ae7fb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c",
          "test/nulls1.test"
        ],
        "message": "Do not pass ORDER BY clauses with non-standard NULL handling to virtual table implementations.\n\nFossilOrigin-Name: a9a82ee88d2d12209a674bd19167277aa91a6912e7a8bbf3714f90d559307fee",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c",
          "test/nulls1.test||test/nulls1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 75d665a494dd7d6e77d5a80af386ee5accc0a53416d5493424dc0fef6c7b01a0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "933:     for(i=0; i<n; i++){",
          "934:       Expr *pExpr = pOrderBy->a[i].pExpr;",
          "935:       if( pExpr->op!=TK_COLUMN || pExpr->iTable!=pSrc->iCursor ) break;",
          "936:     }",
          "937:     if( i==n){",
          "938:       nOrderBy = n;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "936:       if( pOrderBy->a[i].sortFlags & KEYINFO_ORDER_BIGNULL ) break;",
          "",
          "---------------"
        ],
        "test/nulls1.test||test/nulls1.test": [
          "File: test/nulls1.test -> test/nulls1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:   400 300",
          "119: }",
          "121: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121: #-------------------------------------------------------------------------",
          "122: ifcapable vtab {",
          "123:   register_echo_module db",
          "124:   do_execsql_test 4.0 {",
          "125:     CREATE TABLE tx(a INTEGER PRIMARY KEY, b, c);",
          "126:     CREATE INDEX i1 ON tx(b);",
          "127:     INSERT INTO tx VALUES(1, 1, 1);",
          "128:     INSERT INTO tx VALUES(2, NULL, 2);",
          "129:     INSERT INTO tx VALUES(3, 3, 3);",
          "130:     INSERT INTO tx VALUES(4, NULL, 4);",
          "131:     INSERT INTO tx VALUES(5, 5, 5);",
          "132:     CREATE VIRTUAL TABLE te USING echo(tx);",
          "133:   }",
          "135:   do_execsql_test 4.1 {",
          "136:     SELECT * FROM tx ORDER BY b NULLS FIRST;",
          "137:   } {2 {} 2  4 {} 4  1 1 1  3 3 3  5 5 5}",
          "138:   do_execsql_test 4.2 {",
          "139:     SELECT * FROM te ORDER BY b NULLS FIRST;",
          "140:   } {2 {} 2  4 {} 4  1 1 1  3 3 3  5 5 5}",
          "142:   do_execsql_test 4.3 {",
          "143:     SELECT * FROM tx ORDER BY b NULLS LAST;",
          "144:   } {1 1 1  3 3 3  5 5 5  2 {} 2  4 {} 4}",
          "145:   do_execsql_test 4.4 {",
          "146:     SELECT * FROM te ORDER BY b NULLS LAST;",
          "147:   } {1 1 1  3 3 3  5 5 5  2 {} 2  4 {} 4}",
          "148: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f116ad8527ccbe57356d5ba95a94a4fa711621e7",
      "candidate_info": {
        "commit_hash": "f116ad8527ccbe57356d5ba95a94a4fa711621e7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f116ad8527ccbe57356d5ba95a94a4fa711621e7",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c",
          "test/fkey7.test"
        ],
        "message": "Do not commit an \"OR FAIL\" statement that causes foriegn key constraint violations.\n\nFossilOrigin-Name: 659c551dcc374a0d349ba9419f692e3363839e11d791a17cc35fa1854a674a51",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c",
          "test/fkey7.test||test/fkey7.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8b6691f619ed9a56f6aecbd878ebb447c40984f8767508b248494fd9ec68fbaa",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2896:     }",
          "2900:       sqlite3VdbeCheckFk(p, 0);",
          "2901:     }",
          "",
          "[Removed Lines]",
          "2899:     if( p->rc==SQLITE_OK ){",
          "",
          "[Added Lines]",
          "2899:     if( p->rc==SQLITE_OK || (p->errorAction==OE_Fail && !isSpecialError) ){",
          "",
          "---------------"
        ],
        "test/fkey7.test||test/fkey7.test": [
          "File: test/fkey7.test -> test/fkey7.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:   }",
          "83: }",
          "85: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86: do_execsql_test 4.0 {",
          "87:   PRAGMA foreign_keys = true;",
          "88:   CREATE TABLE parent(",
          "89:     p PRIMARY KEY",
          "90:   );",
          "91:   CREATE TABLE child(",
          "92:     c UNIQUE REFERENCES parent(p)",
          "93:   );",
          "94: }",
          "96: do_catchsql_test 4.1 {",
          "97:   INSERT OR FAIL INTO child VALUES(123), (123);",
          "98: } {1 {FOREIGN KEY constraint failed}}",
          "100: do_execsql_test 4.2 {",
          "101:   SELECT * FROM child;",
          "102: } {}",
          "104: do_execsql_test 4.3 {",
          "105:   PRAGMA foreign_key_check;",
          "106: } {}",
          "108: do_catchsql_test 4.4 {",
          "109:   INSERT INTO parent VALUES(123);",
          "110:   INSERT OR FAIL INTO child VALUES(123), (123);",
          "111: } {1 {UNIQUE constraint failed: child.c}}",
          "113: do_execsql_test 4.5 {",
          "114:   SELECT * FROM child;",
          "115: } {123}",
          "117: do_execsql_test 4.6 {",
          "118:   PRAGMA foreign_key_check;",
          "119: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ccfa550922549e75e68a0e2b3ea862cdbb391e45",
      "candidate_info": {
        "commit_hash": "ccfa550922549e75e68a0e2b3ea862cdbb391e45",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ccfa550922549e75e68a0e2b3ea862cdbb391e45",
        "files": [
          "ext/fts5/fts5.h",
          "ext/fts5/fts5Int.h",
          "ext/fts5/fts5_index.c",
          "ext/fts5/fts5_main.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a buffer overrun that could occur in fts5 if a prefix query is made on a corrupt database.\n\nFossilOrigin-Name: 1abc4415648e69362061e9f9a4f2c1d419ba33801999b377650d8b9a4d2d3a7c",
        "before_after_code_files": [
          "ext/fts5/fts5.h||ext/fts5/fts5.h",
          "ext/fts5/fts5Int.h||ext/fts5/fts5Int.h",
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5.h||ext/fts5/fts5.h": [
          "File: ext/fts5/fts5.h -> ext/fts5/fts5.h"
        ],
        "ext/fts5/fts5Int.h||ext/fts5/fts5Int.h": [
          "File: ext/fts5/fts5Int.h -> ext/fts5/fts5Int.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "274: int sqlite3Fts5Get32(const u8*);",
          "276: #define FTS5_POS2COLUMN(iPos) (int)(iPos >> 32)",
          "279: typedef struct Fts5PoslistReader Fts5PoslistReader;",
          "280: struct Fts5PoslistReader {",
          "",
          "[Removed Lines]",
          "277: #define FTS5_POS2OFFSET(iPos) (int)(iPos & 0xFFFFFFFF)",
          "",
          "[Added Lines]",
          "277: #define FTS5_POS2OFFSET(iPos) (int)(iPos & 0x7FFFFFFF)",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5122:     }",
          "5123:     fts5MultiIterFree(p1);",
          "5126:     if( pData ){",
          "5127:       pData->p = (u8*)&pData[1];",
          "5128:       pData->nn = pData->szLeaf = doclist.n;",
          "",
          "[Removed Lines]",
          "5125:     pData = fts5IdxMalloc(p, sizeof(Fts5Data) + doclist.n);",
          "",
          "[Added Lines]",
          "5125:     pData = fts5IdxMalloc(p, sizeof(Fts5Data)+doclist.n+FTS5_DATA_ZERO_PADDING);",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c": [
          "File: ext/fts5/fts5_main.c -> ext/fts5/fts5_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1777:   int rc = SQLITE_OK;",
          "1781:   nIter = sqlite3Fts5ExprPhraseCount(pCsr->pExpr);",
          "1782:   if( pCsr->aInstIter==0 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1780:   int nCol = ((Fts5Table*)pCsr->base.pVtab)->pConfig->nCol;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1830:         aInst[0] = iBest;",
          "1831:         aInst[1] = FTS5_POS2COLUMN(aIter[iBest].iPos);",
          "1832:         aInst[2] = FTS5_POS2OFFSET(aIter[iBest].iPos);",
          "1833:         sqlite3Fts5PoslistReaderNext(&aIter[iBest]);",
          "1834:       }",
          "1835:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1834:         if( aInst[1]<0 || aInst[1]>=nCol ){",
          "1835:           rc = FTS5_CORRUPT;",
          "1836:           break;",
          "1837:         }",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "4679:   SELECT * FROM t1('a b') ORDER BY rank;",
          "4680: } {1 {database disk image is malformed}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4682: #-------------------------------------------------------------------------",
          "4683: reset_db",
          "4684: do_test 38.0 {",
          "4685:   sqlite3 db {}",
          "4686:   db deserialize [decode_hexdb {",
          "4687: | size 32768 pagesize 4096 filename crash-fd2a1313e5b5e9.db",
          "4688: | page 1 offset 0",
          "4689: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "4690: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 08   .....@  ........",
          "4691: |     32: 00 00 00 02 00 00 00 01 00 00 00 09 00 00 00 04   ................",
          "4692: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "4693: |     96: 00 00 00 00 0d 0f c7 00 07 0d 92 00 0f 8d 0f 36   ...............6",
          "4694: |    112: 0e cb 0e 6b 0e 0e 0d b6 0d 92 0d 92 00 00 00 00   ...k............",
          "4695: |   3472: 00 00 22 08 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "4696: |   3488: 32 74 32 08 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "4697: |   3504: 20 74 32 28 78 29 56 07 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "4698: |   3520: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "4699: |   3536: 6f 6e 66 69 67 07 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "4700: |   3552: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "4701: |   3568: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "4702: |   3584: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 06    WITHOUT ROWID[.",
          "4703: |   3600: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "4704: |   3616: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "4705: |   3632: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "4706: |   3648: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "4707: |   3664: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "4708: |   3680: 59 2c 20 73 7a 20 42 4c 4f 42 29 5e 05 07 17 21   Y, sz BLOB)^...!",
          "4709: |   3696: 21 01 81 07 74 61 62 6c 65 b8 31 5f 63 6f 6e 74   !...table.1_cont",
          "4710: |   3712: 65 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 05 43 52   entt1_content.CR",
          "4711: |   3728: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63   EATE TABLE 't1_c",
          "4712: |   3744: 6f 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47   ontent'(id INTEG",
          "4713: |   3760: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "4714: |   3776: 63 30 2c 20 63 31 2c 20 63 32 29 69 04 07 17 19   c0, c1, c2)i....",
          "4715: |   3792: 19 01 81 2d 74 61 62 6c 65 74 31 5f 69 64 78 74   ...-tablet1_idxt",
          "4716: |   3808: 31 5f 69 64 78 04 43 52 45 41 54 45 20 54 41 42   1_idx.CREATE TAB",
          "4717: |   3824: 4c 45 20 27 74 31 5f 69 64 78 27 28 73 65 67 69   LE 't1_idx'(segi",
          "4718: |   3840: 64 2c 20 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50   d, term, pgno, P",
          "4719: |   3856: 52 49 4d 41 52 59 20 4b 45 59 28 73 65 67 69 64   RIMARY KEY(segid",
          "4720: |   3872: 2c 20 74 65 72 6d 29 29 20 57 49 54 48 4f 55 54   , term)) WITHOUT",
          "4721: |   3888: 20 52 4f 57 49 44 55 03 07 17 1b 1b 01 81 01 74    ROWIDU........t",
          "4722: |   3904: 61 62 6c 65 74 31 5f 64 61 74 61 74 31 5f 64 61   ablet1_datat1_da",
          "4723: |   3920: 74 61 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   ta.CREATE TABLE",
          "4724: |   3936: 27 74 31 5f 64 61 74 61 27 28 69 64 20 49 4e 54   't1_data'(id INT",
          "4725: |   3952: 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59   EGER PRIMARY KEY",
          "4726: |   3968: 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42 29 38 02 06   , block BLOB)8..",
          "4727: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "4728: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "4729: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 35   LE t1 USING fts5",
          "4730: |   4032: 28 61 2c 62 2c 63 29 00 00 00 39 00 00 00 00 00   (a,b,c)...9.....",
          "4731: | page 3 offset 8192",
          "4732: |      0: 0d 00 00 00 03 0c 94 00 0f e6 0f ef 0c 94 00 00   ................",
          "4733: |   3216: 00 00 00 00 86 4a 84 80 80 80 80 01 04 00 8d 18   .....J..........",
          "4734: |   3232: 00 00 03 2b 02 30 30 01 02 06 01 02 06 01 02 06   ...+.00.........",
          "4735: |   3248: 1f 02 03 01 02 03 01 02 03 01 08 32 30 31 36 30   ...........20160",
          "4736: |   3264: 36 30 39 01 02 07 01 02 07 01 02 07 01 01 34 01   609...........4.",
          "4737: |   3280: 02 05 01 02 05 01 02 05 01 01 35 01 02 04 01 02   ..........5.....",
          "4738: |   3296: 04 01 02 04 02 07 30 30 30 30 30 30 30 1c 02 04   ......0000000...",
          "4739: |   3312: 01 02 04 01 02 04 01 06 62 69 6e 61 72 79 03 06   ........binary..",
          "4740: |   3328: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "4741: |   3344: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "4742: |   3360: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "4743: |   3376: 03 06 01 02 02 03 06 01 02 02 01 08 63 6f 6d 70   ............comp",
          "4744: |   3392: 69 6c 65 72 01 02 02 01 02 02 01 02 02 01 06 64   iler...........d",
          "4745: |   3408: 62 73 74 61 74 07 02 03 01 02 03 01 02 03 02 04   bstat...........",
          "4746: |   3424: 65 62 75 67 04 02 02 01 02 02 01 02 02 01 06 65   ebug...........e",
          "4747: |   3440: 6e 61 62 6c 65 07 02 02 01 02 02 01 02 02 01 02   nable...........",
          "4748: |   3456: 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02   ................",
          "4749: |   3472: 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01   ................",
          "4750: |   3488: 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02   ................",
          "4751: |   3504: 02 01 02 02 02 08 78 74 65 6e 73 69 6f 6e 1f 02   ......xtension..",
          "4752: |   3520: 04 01 02 04 01 02 04 01 04 66 74 73 34 0a 02 03   .........fts4...",
          "4753: |   3536: 01 02 03 01 02 03 04 01 35 0d 02 03 01 02 03 01   ........5.......",
          "4754: |   3552: 02 03 01 03 67 63 63 01 02 03 01 02 03 01 02 03   ....gcc.........",
          "4755: |   3568: 02 06 65 6f 70 6f 6c 79 10 02 03 01 02 03 01 02   ..eopoly........",
          "4756: |   3584: 03 01 05 6a 73 6f 6e 31 13 02 03 01 02 03 01 02   ...json1........",
          "4757: |   3600: 03 01 04 6c 6f 61 64 1f 02 03 01 02 03 01 02 03   ...load.........",
          "4758: |   3616: 01 03 6d 61 78 1c 02 02 01 02 02 01 02 02 02 05   ..max...........",
          "4759: |   3632: 65 6d 6f 72 79 1c 02 03 01 02 03 01 02 03 04 04   emory...........",
          "4760: |   3648: 73 79 73 35 16 02 03 01 02 03 01 02 03 01 06 6e   sys5...........n",
          "4761: |   3664: 6f 63 61 73 65 02 06 01 02 02 03 06 01 02 02 03   ocase...........",
          "4762: |   3680: 06 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06   ................",
          "4763: |   3696: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "4764: |   3712: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "4765: |   3728: 02 01 04 6f 6d 69 74 1f 02 02 01 02 02 01 02 02   ...omit.........",
          "4766: |   3744: 01 05 72 74 72 65 65 19 02 03 01 02 03 01 02 03   ..rtree.........",
          "4767: |   3760: 04 02 69 6d 01 06 01 02 02 03 06 01 02 02 03 06   ..im............",
          "4768: |   3776: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "4769: |   3792: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "4770: |   3808: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "4771: |   3824: 01 0a 74 68 72 65 61 64 73 61 66 65 22 02 02 01   ..threadsafe....",
          "4772: |   3840: 02 02 01 02 01 01 04 76 74 61 62 07 02 04 01 02   .......vtab.....",
          "4773: |   3856: 04 01 02 04 01 01 78 01 06 01 01 02 01 06 01 01   ......x.........",
          "4774: |   3872: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "4775: |   3888: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "4776: |   3904: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "4777: |   3920: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "4778: |   3936: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "4779: |   3952: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "4780: |   3968: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "4781: |   3984: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "4782: |   4000: 01 01 02 01 06 01 01 02 01 06 01 ec 02 01 06 01   ................",
          "4783: |   4016: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "4784: |   4032: 02 01 06 01 01 02 01 06 01 01 01 04 15 13 0c 0c   ................",
          "4785: |   4048: 12 44 13 11 0f 47 13 0f 0c 0e 11 10 0f 0e 10 0f   .D...G..........",
          "4786: |   4064: 44 0f 10 40 15 0f 07 01 03 00 14 24 5a 24 24 0f   D..@.......$Z$$.",
          "4787: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "4788: | page 4 offset 12288",
          "4789: |      0: 0a 00 00 00 01 0f fa 00 0f fa 00 00 00 00 00 00   ................",
          "4790: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "4791: | page 5 offset 16384",
          "4792: |      0: 0d 00 00 00 24 0c 0a 00 0f d8 0f af 0f 86 0f 74   ....$..........t",
          "4793: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "4794: |     32: 0e 8d 0e 74 0e 5b 0e 40 0e 24 0e 08 0d ef 0d d5   ...t.[.@.$......",
          "4795: |     48: 0d bb 0d a0 0d 84 0d 68 0d 4f 0d 35 0d 1b 0c fb   .......h.O.5....",
          "4796: |     64: 0c da 0c b9 0c 99 0c 78 0c 57 0c 3e 0c 24 0c 0a   .......x.W.>.$..",
          "4797: |   3072: 00 00 00 00 00 00 00 00 00 00 18 24 05 00 25 0f   ...........$..%.",
          "4798: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "4799: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "4800: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 22   DSAFE=0XNOCASE..",
          "4801: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 45 3d   ..%..THREADSAFE=",
          "4802: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "4803: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49 4f   IT LOAD EXTENSIO",
          "4804: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "4805: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "4806: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "4807: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "4808: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "4809: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 60 35 30 30 30 30   MAX MEMORY`50000",
          "4810: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "4811: |   3296: 19 4d 41 58 20 4d 44 4d 4f 52 59 3d 35 30 30 30   .MAX MDMORY=5000",
          "4812: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 33   0000XNOCASE....3",
          "4813: |   3328: 0f 17 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MAX MEMORY=500",
          "4814: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "4815: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "4816: |   3376: 49 4e 41 52 59 18 1a 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "4817: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 43 41 53 45 17   LE RTREEXNOCASE.",
          "4818: |   3408: 19 05 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   ...%..ENABLE RTR",
          "4819: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "4820: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "4821: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "4822: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "4823: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "4824: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 15 05 00 25   MSYS5XRTRIM....%",
          "4825: |   3520: 0f 19 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 58 42   ..ENABLE JSON1XB",
          "4826: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "4827: |   3552: 4c 45 20 4a 53 4f 4e 31 58 4e 4f 43 41 53 45 17   LE JSON1XNOCASE.",
          "4828: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "4829: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 00 29 0f 19 45   N1XRTRIM....)..E",
          "4830: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "4831: |   3616: 4e 41 52 59 1a 11 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "4832: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 4f 43 41 53 45   E GEOPOLYXNOCASE",
          "4833: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "4834: |   3664: 4f 50 4f 4c 59 58 52 54 52 49 4d 17 0f 05 00 23   OPOLYXRTRIM....#",
          "4835: |   3680: 0f 19 45 4e 41 42 4c 45 20 46 54 53 35 58 42 49   ..ENABLE FTS5XBI",
          "4836: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "4837: |   3712: 45 20 46 54 53 35 58 4e 4f 43 41 53 45 16 0d 05   E FTS5XNOCASE...",
          "4838: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "4839: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "4840: |   3760: 4c 45 20 46 54 53 34 58 42 49 4e 41 52 59 17 0b   LE FTS4XBINARY..",
          "4841: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 34   ..#..ENABLE FTS4",
          "4842: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   XNOCASE....#..EN",
          "4843: |   3808: 41 42 4c 45 20 46 54 53 34 58 52 54 52 49 4d 1e   ABLE FTS4XRTRIM.",
          "4844: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4845: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "4846: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4847: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "4848: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4849: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 49 4d 11 06   TAT VTABXRTRIM..",
          "4850: |   3920: 05 00 17 0f 19 44 45 42 55 47 58 42 49 4e 41 52   .....DEBUGXBINAR",
          "4851: |   3936: 59 11 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "4852: |   3952: 43 41 53 45 10 04 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "4853: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "4854: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "4855: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "4856: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3d 67   ...C..COMPILER=g",
          "4857: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "4858: |   4048: 39 58 4e 4f 43 41 53 45 26 01 05 00 43 0f 17 43   9XNOCASE&...C..C",
          "4859: |   4064: 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e   OMPILER=gcc-5.4.",
          "4860: |   4080: 30 20 32 30 31 36 30 36 30 39 58 52 54 52 49 4d   0 20160609XRTRIM",
          "4861: | page 6 offset 20480",
          "4862: |      0: 0d 00 00 00 24 0e e0 00 0f f8 0f f0 0f e8 0f e0   ....$...........",
          "4863: |     16: 0f d8 0f d0 0f c8 0f c0 0f b8 0f b0 0f a8 0f a0   ................",
          "4864: |     32: 0f 98 0f 90 0f 88 0f 80 0f 78 0f 70 0f 68 0f 60   .........x.p.h.`",
          "4865: |     48: 0f 58 0f 50 0f 48 0f 40 0f 38 0f 30 0f 28 0f 20   .X.P.H.@.8.0.(.",
          "4866: |     64: 0f 18 0f 10 0f 08 0f 00 0e f8 0e f0 0e e8 0e e0   ................",
          "4867: |   3808: 06 24 03 00 12 02 01 01 06 23 03 00 12 02 01 01   .$.......#......",
          "4868: |   3824: 06 22 03 00 12 02 01 01 06 21 03 00 12 03 01 01   .........!......",
          "4869: |   3840: 06 20 03 00 12 03 01 01 06 1f 03 00 12 03 01 01   . ..............",
          "4870: |   3856: 06 1e 03 00 12 03 01 01 06 1d 03 00 12 03 01 01   ................",
          "4871: |   3872: 06 1c 03 00 12 03 01 01 16 1b 03 00 12 02 01 01   ................",
          "4872: |   3888: 06 1a 03 00 12 02 01 01 06 19 03 00 12 02 01 01   ................",
          "4873: |   3904: 06 18 03 00 12 02 01 01 06 17 03 00 12 02 01 01   ................",
          "4874: |   3920: 06 16 03 00 12 02 01 01 06 15 03 00 12 02 01 01   ................",
          "4875: |   3936: 06 14 03 00 12 02 01 01 06 13 03 00 12 02 01 01   ................",
          "4876: |   3952: 06 12 03 00 12 02 01 01 06 11 03 00 12 02 01 01   ................",
          "4877: |   3968: 06 10 03 00 12 02 01 01 06 0f 03 00 12 02 01 01   ................",
          "4878: |   3984: 06 0e 03 00 12 02 01 01 06 0d 03 00 12 02 01 01   ................",
          "4879: |   4000: 06 0c 03 00 12 02 01 01 06 0b 03 00 12 02 01 01   ................",
          "4880: |   4016: 06 0a 03 00 12 02 01 01 05 09 03 00 12 03 01 01   ................",
          "4881: |   4032: 06 08 03 00 12 03 01 01 06 07 03 10 12 03 01 01   ................",
          "4882: |   4048: 06 06 03 00 12 01 01 01 06 05 03 00 12 01 01 01   ................",
          "4883: |   4064: 06 04 03 00 12 01 01 01 06 03 03 00 12 05 f1 01   ................",
          "4884: |   4080: 06 02 03 00 12 06 01 01 06 01 03 00 12 06 01 01   ................",
          "4885: | page 7 offset 24576",
          "4886: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "4887: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "4888: | page 8 offset 28672",
          "4889: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e9 0f d6 00 00   ................",
          "4890: |   4048: 00 00 00 00 00 00 11 03 02 2b 69 6e 74 65 67 72   .........+integr",
          "4891: |   4064: 69 74 79 2d 63 68 65 63 6b 09 02 02 1b 72 65 62   ity-check....reb",
          "4892: |   4080: 75 69 6c 64 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   uild....optimize",
          "4893: | end crash-fd2a1313e5b5e9.db",
          "4894: }]} {}",
          "4896: do_catchsql_test 38.1 {",
          "4897:   UPDATE t1 SET b=quote(zeroblob(200)) WHERE t1 MATCH 'thread*';",
          "4898: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5b7d0c784e6467154d9549af0163d788b69d5e5a6478a735834cdea945e7dbb7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7ce167e5b89e45d203014fc6ad0dbbfa3d44346",
      "candidate_info": {
        "commit_hash": "a7ce167e5b89e45d203014fc6ad0dbbfa3d44346",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a7ce167e5b89e45d203014fc6ad0dbbfa3d44346",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/upsert.c",
          "test/upsert1.test"
        ],
        "message": "Make sure OP_RealAffinity has been applied to all columns of type REAL in the excluded.* pseudo-table of an UPSERT. Ticket [5a3dba8104421320]\n\nFossilOrigin-Name: 67381dadede98a55d8d9e085d021e6fa6473071978967b6302e03b28cf2245e1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/upsert.c||src/upsert.c",
          "test/upsert1.test||test/upsert1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 54553bf16fabd72d1967acef317beb518e086707ccd45890b7c7256b8da08b75",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/upsert.c||src/upsert.c": [
          "File: src/upsert.c -> src/upsert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:   sqlite3 *db = pParse->db;",
          "207:   int iDataCur;",
          "209:   assert( v!=0 );",
          "210:   assert( pUpsert!=0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208:   int i;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "221:       Index *pPk = sqlite3PrimaryKeyIndex(pTab);",
          "222:       int nPk = pPk->nKeyCol;",
          "223:       int iPk = pParse->nMem+1;",
          "225:       pParse->nMem += nPk;",
          "226:       for(i=0; i<nPk; i++){",
          "227:         int k;",
          "",
          "[Removed Lines]",
          "224:       int i;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "244:   pSrc = sqlite3SrcListDup(db, pUpsert->pUpsertSrc, 0);",
          "245:   sqlite3Update(pParse, pSrc, pUpsert->pUpsertSet,",
          "246:       pUpsert->pUpsertWhere, OE_Abort, 0, 0, pUpsert);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "246:   for(i=0; i<pTab->nCol; i++){",
          "247:     if( pTab->aCol[i].affinity==SQLITE_AFF_REAL ){",
          "248:       sqlite3VdbeAddOp1(v, OP_RealAffinity, pUpsert->regData+i);",
          "249:     }",
          "250:   }",
          "",
          "---------------"
        ],
        "test/upsert1.test||test/upsert1.test": [
          "File: test/upsert1.test -> test/upsert1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "210:   SELECT * FROM t1;",
          "211: } {1 2 33 4 5}",
          "214: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213: # 2019-08-30 ticket https://sqlite.org/src/info/5a3dba8104421320",
          "214: do_execsql_test upsert1-800 {",
          "215:   DROP TABLE IF EXISTS t0;",
          "216:   CREATE TABLE t0(c0 REAL UNIQUE, c1);",
          "217:   CREATE UNIQUE INDEX test800i0 ON t0(0 || c1);",
          "218:   INSERT INTO t0(c0, c1) VALUES (1, 2),  (2, 1);",
          "219:   INSERT INTO t0(c0) VALUES (1) ON CONFLICT(c0) DO UPDATE SET c1=excluded.c0;",
          "220:   PRAGMA integrity_check;",
          "221:   REINDEX;",
          "222: } {ok}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4102deb962c3d4586fed5b371aa4bf4f8e916ffc",
      "candidate_info": {
        "commit_hash": "4102deb962c3d4586fed5b371aa4bf4f8e916ffc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4102deb962c3d4586fed5b371aa4bf4f8e916ffc",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "src/insert.c",
          "src/shell.c.in",
          "src/tokenize.c",
          "src/update.c",
          "test/fts4merge.test",
          "test/insert.test",
          "test/normalize.test"
        ],
        "message": "Merge trunk enhancements into the generated-columns branch.\n\nFossilOrigin-Name: 85bc4524d76999080faa4474e8880d2b6a2ac3a7f6a76239af4de1a42f8138c8",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c",
          "src/shell.c.in||src/shell.c.in",
          "src/tokenize.c||src/tokenize.c",
          "src/update.c||src/update.c",
          "test/fts4merge.test||test/fts4merge.test",
          "test/insert.test||test/insert.test",
          "test/normalize.test||test/normalize.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4950:     }",
          "4951:     if( SQLITE_OK==rc && pCsr->nSegment==nSeg",
          "4952:      && SQLITE_OK==(rc = sqlite3Fts3SegReaderStart(p, pCsr, pFilter))",
          "4954:     ){",
          "4955:       if( bUseHint && iIdx>0 ){",
          "4956:         const char *zKey = pCsr->zTerm;",
          "4957:         int nKey = pCsr->nTerm;",
          "",
          "[Removed Lines]",
          "4953:      && SQLITE_ROW==(rc = sqlite3Fts3SegReaderStep(p, pCsr))",
          "",
          "[Added Lines]",
          "4954:       int bEmpty = 0;",
          "4955:       rc = sqlite3Fts3SegReaderStep(p, pCsr);",
          "4956:       if( rc==SQLITE_OK ){",
          "4957:         bEmpty = 1;",
          "4958:       }else if( rc!=SQLITE_ROW ){",
          "4959:         sqlite3Fts3SegReaderFinish(pCsr);",
          "4960:         break;",
          "4961:       }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4963:       if( rc==SQLITE_OK && pWriter->nLeafEst ){",
          "4964:         fts3LogMerge(nSeg, iAbsLevel);",
          "4972:         if( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "4965:         do {",
          "4966:           rc = fts3IncrmergeAppend(p, pWriter, pCsr);",
          "4967:           if( rc==SQLITE_OK ) rc = sqlite3Fts3SegReaderStep(p, pCsr);",
          "4968:           if( pWriter->nWork>=nRem && rc==SQLITE_ROW ) rc = SQLITE_OK;",
          "4969:         }while( rc==SQLITE_ROW );",
          "",
          "[Added Lines]",
          "4972:         if( bEmpty==0 ){",
          "4973:           do {",
          "4974:             rc = fts3IncrmergeAppend(p, pWriter, pCsr);",
          "4975:             if( rc==SQLITE_OK ) rc = sqlite3Fts3SegReaderStep(p, pCsr);",
          "4976:             if( pWriter->nWork>=nRem && rc==SQLITE_ROW ) rc = SQLITE_OK;",
          "4977:           }while( rc==SQLITE_ROW );",
          "4978:         }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9f409649ec4282a47f0a8b079b419f1922e0c24779b297f477ced168d5b7910d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1680:           sqlite3MultiWrite(pParse);",
          "1681:           sqlite3GenerateRowDelete(pParse, pTab, pTrigger, iDataCur, iIdxCur,",
          "1682:                                    regNewData, 1, 0, OE_Replace, 1, -1);",
          "1683:         }else{",
          "1684: #ifdef SQLITE_ENABLE_PREUPDATE_HOOK",
          "1685:           assert( HasRowid(pTab) );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1683:           sqlite3VdbeAddOp3(v, OP_NotExists, iDataCur, addrRowidOk, regNewData);",
          "1684:           sqlite3RowidConstraint(pParse, OE_Abort, pTab);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1934:       }",
          "1935:       default: {",
          "1936:         Trigger *pTrigger = 0;",
          "1937:         assert( onError==OE_Replace );",
          "1938:         if( db->flags&SQLITE_RecTriggers ){",
          "1939:           pTrigger = sqlite3TriggersExist(pParse, pTab, TK_DELETE, 0, 0);",
          "1940:         }",
          "1941:         if( pTrigger || sqlite3FkRequired(pParse, pTab, 0, 0) ){",
          "1942:           sqlite3MultiWrite(pParse);",
          "1943:         }",
          "1944:         sqlite3GenerateRowDelete(pParse, pTab, pTrigger, iDataCur, iIdxCur,",
          "1945:             regR, nPkField, 0, OE_Replace,",
          "1946:             (pIdx==pPk ? ONEPASS_SINGLE : ONEPASS_OFF), iThisCur);",
          "1947:         seenReplace = 1;",
          "1948:         break;",
          "1949:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1939:         int bRetryConstraintCheck = 0;",
          "1946:           bRetryConstraintCheck = 1;",
          "1951:         if( bRetryConstraintCheck ){",
          "1952:           sqlite3VdbeAddOp4Int(v, OP_NoConflict, iThisCur, addrUniqueOk,",
          "1953:                                regIdx, pIdx->nKeyCol); VdbeCoverage(v);",
          "1954:           sqlite3UniqueConstraint(pParse, OE_Abort, pIdx);",
          "1955:         }",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "7770:       sqlite3_test_control(SQLITE_TESTCTRL_IMPOSTER, p->db, \"main\", 0, 1);",
          "7771:       goto meta_command_exit;",
          "7772:     }",
          "7775:     sqlite3_prepare_v2(p->db, zSql, -1, &pStmt, 0);",
          "7776:     sqlite3_free(zSql);",
          "7777:     if( sqlite3_step(pStmt)==SQLITE_ROW ){",
          "7778:       tnum = sqlite3_column_int(pStmt, 0);",
          "7779:     }",
          "7780:     sqlite3_finalize(pStmt);",
          "7786:     zSql = sqlite3_mprintf(\"PRAGMA index_xinfo='%q'\", azArg[1]);",
          "7787:     rc = sqlite3_prepare_v2(p->db, zSql, -1, &pStmt, 0);",
          "7788:     sqlite3_free(zSql);",
          "",
          "[Removed Lines]",
          "7773:     zSql = sqlite3_mprintf(\"SELECT rootpage FROM sqlite_master\"",
          "7774:                            \" WHERE name='%q' AND type='index'\", azArg[1]);",
          "7781:     if( tnum==0 ){",
          "7782:       utf8_printf(stderr, \"no such index: \\\"%s\\\"\\n\", azArg[1]);",
          "7783:       rc = 1;",
          "7784:       goto meta_command_exit;",
          "7785:     }",
          "",
          "[Added Lines]",
          "7782:     zSql = sqlite3_mprintf(",
          "7783:       \"SELECT rootpage, 0 FROM sqlite_master\"",
          "7784:       \" WHERE name='%q' AND type='index'\"",
          "7785:       \"UNION ALL \"",
          "7786:       \"SELECT rootpage, 1 FROM sqlite_master\"",
          "7787:       \" WHERE name='%q' AND type='table'\"",
          "7788:       \"   AND sql LIKE '%%without%%rowid%%'\",",
          "7789:       azArg[1], azArg[1]",
          "7790:     );",
          "7795:       isWO = sqlite3_column_int(pStmt, 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7799:           zCol = zLabel;",
          "7800:         }",
          "7801:       }",
          "7802:       if( zCollist==0 ){",
          "7803:         zCollist = sqlite3_mprintf(\"\\\"%w\\\"\", zCol);",
          "7804:       }else{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7814:       if( isWO && lenPK==0 && sqlite3_column_int(pStmt,5)==0 && zCollist ){",
          "7815:         lenPK = (int)strlen(zCollist);",
          "7816:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7806:       }",
          "7807:     }",
          "7808:     sqlite3_finalize(pStmt);",
          "7809:     zSql = sqlite3_mprintf(",
          "7812:     sqlite3_free(zCollist);",
          "7813:     rc = sqlite3_test_control(SQLITE_TESTCTRL_IMPOSTER, p->db, \"main\", 1, tnum);",
          "7814:     if( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "7810:           \"CREATE TABLE \\\"%w\\\"(%s,PRIMARY KEY(%s))WITHOUT ROWID\",",
          "7811:           azArg[2], zCollist, zCollist);",
          "",
          "[Added Lines]",
          "7824:     if( i==0 || tnum==0 ){",
          "7825:       utf8_printf(stderr, \"no such index: \\\"%s\\\"\\n\", azArg[1]);",
          "7826:       rc = 1;",
          "7827:       sqlite3_free(zCollist);",
          "7828:       goto meta_command_exit;",
          "7829:     }",
          "7830:     if( lenPK==0 ) lenPK = 100000;",
          "7832:           \"CREATE TABLE \\\"%w\\\"(%s,PRIMARY KEY(%.*s))WITHOUT ROWID\",",
          "7833:           azArg[2], zCollist, lenPK, zCollist);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7819:       }else{",
          "7820:         utf8_printf(stdout, \"%s;\\n\", zSql);",
          "7821:         raw_printf(stdout,",
          "7823:         );",
          "7824:       }",
          "7825:     }else{",
          "",
          "[Removed Lines]",
          "7822:            \"WARNING: writing to an imposter table will corrupt the index!\\n\"",
          "",
          "[Added Lines]",
          "7844:           \"WARNING: writing to an imposter table will corrupt the \\\"%s\\\" %s!\\n\",",
          "7845:           azArg[1], isWO ? \"table\" : \"index\"",
          "",
          "---------------"
        ],
        "src/tokenize.c||src/tokenize.c": [
          "File: src/tokenize.c -> src/tokenize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "801:       }",
          "802:       case TK_RP: {",
          "803:         if( iStartIN>0 && nParen==nParenAtIN ){",
          "805:           pStr->nChar = iStartIN+1;",
          "806:           sqlite3_str_append(pStr, \"?,?,?\", 5);",
          "807:           iStartIN = 0;",
          "",
          "[Removed Lines]",
          "804:           assert( pStr->nChar>=iStartIN );",
          "",
          "[Added Lines]",
          "804:           assert( pStr->nChar>=(u32)iStartIN );",
          "",
          "---------------"
        ],
        "src/update.c||src/update.c": [
          "File: src/update.c -> src/update.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "289:   sNC.uNC.pUpsert = pUpsert;",
          "290:   sNC.ncFlags = NC_UUpsert;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "293:   v = sqlite3GetVdbe(pParse);",
          "294:   if( v==0 ) goto update_cleanup;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394:     memset(aToOpen, 1, nIdx+1);",
          "395:   }",
          "400:   if( pParse->nested==0 ) sqlite3VdbeCountChanges(v);",
          "401:   sqlite3BeginWriteOperation(pParse, pTrigger || hasFK, iDb);",
          "",
          "[Removed Lines]",
          "398:   v = sqlite3GetVdbe(pParse);",
          "399:   if( v==0 ) goto update_cleanup;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts4merge.test||test/fts4merge.test": [
          "File: test/fts4merge.test -> test/fts4merge.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:     execsql { INSERT INTO t1(t1) VALUES('merge=200,10') }",
          "327:     expr { ([db total_changes] - $x)>1 }",
          "328:   } {0}",
          "330: }",
          "332: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329: }",
          "331: #-------------------------------------------------------------------------",
          "332: # Test cases 8.* - ticket [bf1aab89].",
          "333: #",
          "334: set testprefix fts4merge",
          "335: reset_db",
          "336: do_execsql_test 8.0 {",
          "337:   CREATE VIRTUAL TABLE t1 USING fts4(a, order=DESC);",
          "338:   INSERT INTO t1(a) VALUES (0);",
          "339:   INSERT INTO t1(a) VALUES (0);",
          "340:   UPDATE t1 SET a = NULL;",
          "341: }",
          "343: do_execsql_test 8.1 {",
          "344:   INSERT INTO t1(t1) VALUES('merge=1,4');",
          "",
          "---------------"
        ],
        "test/insert.test||test/insert.test": [
          "File: test/insert.test -> test/insert.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "",
          "[Removed Lines]",
          "1: # 2001 September 15",
          "",
          "[Added Lines]",
          "1: # 2001-09-15",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11: # This file implements regression tests for SQLite library.  The",
          "12: # focus of this file is testing the INSERT statement.",
          "13: #",
          "16: set testdir [file dirname $argv0]",
          "17: source $testdir/tester.tcl",
          "",
          "[Removed Lines]",
          "14: # $Id: insert.test,v 1.31 2007/04/05 11:25:59 drh Exp $",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "458:   SELECT x FROM t14;",
          "459: } {1}",
          "463: # 2019-08-12.",
          "464: #",
          "",
          "[Removed Lines]",
          "461: integrity_check insert-99.0",
          "",
          "[Added Lines]",
          "460: integrity_check insert-14.2",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "475:   SELECT a, length(b) FROM t1;",
          "476: } {4 33000}",
          "479: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "477: # 2019-10-16",
          "478: # ticket https://www.sqlite.org/src/info/a8a4847a2d96f5de",
          "479: # On a REPLACE INTO, if an AFTER trigger adds back the conflicting",
          "480: # row, you can end up with the wrong number of rows in an index.",
          "481: #",
          "482: db close",
          "483: sqlite3 db :memory:",
          "484: do_catchsql_test insert-16.1 {",
          "485:   PRAGMA recursive_triggers = true;",
          "486:   CREATE TABLE t0(c0,c1);",
          "487:   CREATE UNIQUE INDEX i0 ON t0(c0);",
          "488:   INSERT INTO t0(c0,c1) VALUES(123,1);",
          "489:   CREATE TRIGGER tr0 AFTER DELETE ON t0",
          "490:   BEGIN",
          "491:     INSERT INTO t0 VALUES(123,2);",
          "492:   END;",
          "493:   REPLACE INTO t0(c0,c1) VALUES(123,3);",
          "494: } {1 {UNIQUE constraint failed: t0.c0}}",
          "495: do_execsql_test insert-16.2 {",
          "496:   SELECT * FROM t0;",
          "497: } {123 1}",
          "498: integrity_check insert-16.3",
          "499: do_catchsql_test insert-16.4 {",
          "500:   CREATE TABLE t1(a INTEGER PRIMARY KEY, b);",
          "501:   CREATE INDEX t1b ON t1(b);",
          "502:   INSERT INTO t1 VALUES(1, 'one');",
          "503:   CREATE TRIGGER tr3 AFTER DELETE ON t1 BEGIN",
          "504:     INSERT INTO t1 VALUES(1, 'three');",
          "505:   END;",
          "506:   REPLACE INTO t1 VALUES(1, 'two');",
          "507: } {1 {UNIQUE constraint failed: t1.a}}",
          "508: integrity_check insert-16.5",
          "509: do_catchsql_test insert-16.6 {",
          "510:   PRAGMA foreign_keys = 1;",
          "511:   CREATE TABLE p1(a, b UNIQUE);",
          "512:   CREATE TABLE c1(c, d REFERENCES p1(b) ON DELETE CASCADE);",
          "513:   CREATE TRIGGER tr6 AFTER DELETE ON c1 BEGIN",
          "514:     INSERT INTO p1 VALUES(4, 1);",
          "515:   END;",
          "516:   INSERT INTO p1 VALUES(1, 1);",
          "517:   INSERT INTO c1 VALUES(2, 1);",
          "518:   REPLACE INTO p1 VALUES(3, 1);",
          "519: } {1 {UNIQUE constraint failed: p1.b}}",
          "520: integrity_check insert-16.7",
          "",
          "---------------"
        ],
        "test/normalize.test||test/normalize.test": [
          "File: test/normalize.test -> test/normalize.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "347:   {SELECT x FROM t1 WHERE x IN ([x] IS NOT NULL, NULL, 1, 'a', \"b\", x'00');}",
          "348:   0x2",
          "349:   {0 {SELECT x FROM t1 WHERE x IN(x IS NOT NULL,?,?,?,b,?);}}",
          "350: } {",
          "351:   do_test $tnum {",
          "352:     set code [catch {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351:   800",
          "352:   {ATTACH \"normalize800.db\" AS somefile;}",
          "353:   0x2",
          "354:   {0 {ATTACH\"normalize800.db\"AS somefile;}}",
          "356:   810",
          "357:   {ATTACH DATABASE \"normalize810.db\" AS somefile;}",
          "358:   0x2",
          "359:   {0 {ATTACH DATABASE\"normalize810.db\"AS somefile;}}",
          "361:   900",
          "362:   {INSERT INTO t1 (x) VALUES(\"sl1\"), (1), (\"sl2\"), ('i');}",
          "363:   0x2",
          "364:   {0 {INSERT INTO t1(x)VALUES(?),(?),(?),(?);}}",
          "366:   910",
          "367:   {UPDATE t1 SET x = \"sl1\" WHERE x IN (1, \"sl2\", 'i');}",
          "368:   0x2",
          "369:   {0 {UPDATE t1 SET x=?WHERE x IN(?,?,?);}}",
          "371:   920",
          "372:   {UPDATE t1 SET x = \"y\" WHERE x IN (1, \"sl1\", 'i');}",
          "373:   0x2",
          "374:   {0 {UPDATE t1 SET x=y WHERE x IN(?,?,?);}}",
          "376:   930",
          "377:   {DELETE FROM t1 WHERE x IN (1, \"sl1\", 'i');}",
          "378:   0x2",
          "379:   {0 {DELETE FROM t1 WHERE x IN(?,?,?);}}",
          "",
          "---------------"
        ]
      }
    }
  ]
}