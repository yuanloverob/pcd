{
  "cve_id": "CVE-2020-11095",
  "cve_desc": "In FreeRDP before version 2.1.2, an out of bound reads occurs resulting in accessing a memory location that is outside of the boundaries of the static array PRIMARY_DRAWING_ORDER_FIELD_BYTES. This is fixed in version 2.1.2.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "733ee3208306b1ea32697b356c0215180fc3f049",
  "patch_info": {
    "commit_hash": "733ee3208306b1ea32697b356c0215180fc3f049",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/733ee3208306b1ea32697b356c0215180fc3f049",
    "files": [
      "libfreerdp/core/orders.c",
      "libfreerdp/core/orders.h",
      "libfreerdp/core/update.c"
    ],
    "message": "Fixed invalid access in update_recv_primary_order\n\nCVE-2020-11095 thanks @antonio-morales for finding this.",
    "before_after_code_files": [
      "libfreerdp/core/orders.c||libfreerdp/core/orders.c",
      "libfreerdp/core/orders.h||libfreerdp/core/orders.h",
      "libfreerdp/core/update.c||libfreerdp/core/update.c"
    ]
  },
  "patch_diff": {
    "libfreerdp/core/orders.c||libfreerdp/core/orders.c": [
      "File: libfreerdp/core/orders.c -> libfreerdp/core/orders.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "44: #define TAG FREERDP_TAG(\"core.orders\")",
      "77: static const BYTE CBR2_BPP[] = { 0, 0, 0, 8, 16, 24, 32 };",
      "",
      "[Removed Lines]",
      "46: const BYTE PRIMARY_DRAWING_ORDER_FIELD_BYTES[] = { DSTBLT_ORDER_FIELD_BYTES,",
      "47:                                                 PATBLT_ORDER_FIELD_BYTES,",
      "48:                                                 SCRBLT_ORDER_FIELD_BYTES,",
      "49:                                                 0,",
      "50:                                                 0,",
      "51:                                                 0,",
      "52:                                                 0,",
      "53:                                                 DRAW_NINE_GRID_ORDER_FIELD_BYTES,",
      "54:                                                 MULTI_DRAW_NINE_GRID_ORDER_FIELD_BYTES,",
      "55:                                                 LINE_TO_ORDER_FIELD_BYTES,",
      "56:                                                 OPAQUE_RECT_ORDER_FIELD_BYTES,",
      "57:                                                 SAVE_BITMAP_ORDER_FIELD_BYTES,",
      "58:                                                 0,",
      "59:                                                 MEMBLT_ORDER_FIELD_BYTES,",
      "60:                                                 MEM3BLT_ORDER_FIELD_BYTES,",
      "61:                                                 MULTI_DSTBLT_ORDER_FIELD_BYTES,",
      "62:                                                 MULTI_PATBLT_ORDER_FIELD_BYTES,",
      "63:                                                 MULTI_SCRBLT_ORDER_FIELD_BYTES,",
      "64:                                                 MULTI_OPAQUE_RECT_ORDER_FIELD_BYTES,",
      "65:                                                 FAST_INDEX_ORDER_FIELD_BYTES,",
      "66:                                                 POLYGON_SC_ORDER_FIELD_BYTES,",
      "67:                                                 POLYGON_CB_ORDER_FIELD_BYTES,",
      "68:                                                 POLYLINE_ORDER_FIELD_BYTES,",
      "69:                                                 0,",
      "70:                                                 FAST_GLYPH_ORDER_FIELD_BYTES,",
      "71:                                                 ELLIPSE_SC_ORDER_FIELD_BYTES,",
      "72:                                                 ELLIPSE_CB_ORDER_FIELD_BYTES,",
      "73:                                                 GLYPH_INDEX_ORDER_FIELD_BYTES };",
      "75: #define PRIMARY_DRAWING_ORDER_COUNT (ARRAYSIZE(PRIMARY_DRAWING_ORDER_FIELD_BYTES))",
      "",
      "[Added Lines]",
      "46: BYTE get_primary_drawing_order_field_bytes(UINT32 orderType, BOOL* pValid)",
      "47: {",
      "48:  if (pValid)",
      "50:  switch (orderType)",
      "51:  {",
      "52:   case 0:",
      "53:    return DSTBLT_ORDER_FIELD_BYTES;",
      "54:   case 1:",
      "55:    return PATBLT_ORDER_FIELD_BYTES;",
      "56:   case 2:",
      "57:    return SCRBLT_ORDER_FIELD_BYTES;",
      "58:   case 3:",
      "59:    return 0;",
      "60:   case 4:",
      "61:    return 0;",
      "62:   case 5:",
      "63:    return 0;",
      "64:   case 6:",
      "65:    return 0;",
      "66:   case 7:",
      "67:    return DRAW_NINE_GRID_ORDER_FIELD_BYTES;",
      "68:   case 8:",
      "69:    return MULTI_DRAW_NINE_GRID_ORDER_FIELD_BYTES;",
      "70:   case 9:",
      "71:    return LINE_TO_ORDER_FIELD_BYTES;",
      "72:   case 10:",
      "73:    return OPAQUE_RECT_ORDER_FIELD_BYTES;",
      "74:   case 11:",
      "75:    return SAVE_BITMAP_ORDER_FIELD_BYTES;",
      "76:   case 12:",
      "77:    return 0;",
      "78:   case 13:",
      "79:    return MEMBLT_ORDER_FIELD_BYTES;",
      "80:   case 14:",
      "81:    return MEM3BLT_ORDER_FIELD_BYTES;",
      "82:   case 15:",
      "83:    return MULTI_DSTBLT_ORDER_FIELD_BYTES;",
      "84:   case 16:",
      "85:    return MULTI_PATBLT_ORDER_FIELD_BYTES;",
      "86:   case 17:",
      "87:    return MULTI_SCRBLT_ORDER_FIELD_BYTES;",
      "88:   case 18:",
      "89:    return MULTI_OPAQUE_RECT_ORDER_FIELD_BYTES;",
      "90:   case 19:",
      "91:    return FAST_INDEX_ORDER_FIELD_BYTES;",
      "92:   case 20:",
      "93:    return POLYGON_SC_ORDER_FIELD_BYTES;",
      "94:   case 21:",
      "95:    return POLYGON_CB_ORDER_FIELD_BYTES;",
      "96:   case 22:",
      "97:    return POLYLINE_ORDER_FIELD_BYTES;",
      "98:   case 23:",
      "99:    return 0;",
      "100:   case 24:",
      "101:    return FAST_GLYPH_ORDER_FIELD_BYTES;",
      "102:   case 25:",
      "103:    return ELLIPSE_SC_ORDER_FIELD_BYTES;",
      "104:   case 26:",
      "105:    return ELLIPSE_CB_ORDER_FIELD_BYTES;",
      "106:   case 27:",
      "107:    return GLYPH_INDEX_ORDER_FIELD_BYTES;",
      "108:   default:",
      "109:    if (pValid)",
      "111:    WLog_WARN(TAG, \"Invalid orderType 0x%08X received\", orderType);",
      "112:    return 0;",
      "113:  }",
      "114: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3241: static BOOL update_recv_primary_order(rdpUpdate* update, wStream* s, BYTE flags)",
      "3242: {",
      "3243:  BOOL rc = FALSE;",
      "3244:  rdpContext* context = update->context;",
      "3245:  rdpPrimaryUpdate* primary = update->primary;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3282:  BYTE field;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3263:  if (!check_primary_order_supported(update->log, settings, orderInfo->orderType, orderName))",
      "3264:   return FALSE;",
      "3268:  {",
      "3269:   WLog_Print(update->log, WLOG_ERROR, \"update_read_field_flags() failed\");",
      "3270:   return FALSE;",
      "",
      "[Removed Lines]",
      "3266:  if (!update_read_field_flags(s, &(orderInfo->fieldFlags), flags,",
      "3267:                               PRIMARY_DRAWING_ORDER_FIELD_BYTES[orderInfo->orderType]))",
      "",
      "[Added Lines]",
      "3306:  field = get_primary_drawing_order_field_bytes(orderInfo->orderType, &rc);",
      "3307:  if (!rc)",
      "3308:   return FALSE;",
      "3310:  if (!update_read_field_flags(s, &(orderInfo->fieldFlags), flags, field))",
      "",
      "---------------"
    ],
    "libfreerdp/core/orders.h||libfreerdp/core/orders.h": [
      "File: libfreerdp/core/orders.h -> libfreerdp/core/orders.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "190: #define CG_GLYPH_UNICODE_PRESENT 0x0010",
      "194: FREERDP_LOCAL BOOL update_recv_order(rdpUpdate* update, wStream* s);",
      "",
      "[Removed Lines]",
      "192: FREERDP_LOCAL extern const BYTE PRIMARY_DRAWING_ORDER_FIELD_BYTES[];",
      "",
      "[Added Lines]",
      "192: FREERDP_LOCAL BYTE get_primary_drawing_order_field_bytes(UINT32 orderType, BOOL* pValid);",
      "",
      "---------------"
    ],
    "libfreerdp/core/update.c||libfreerdp/core/update.c": [
      "File: libfreerdp/core/update.c -> libfreerdp/core/update.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1087:  orderInfo->controlFlags = ORDER_STANDARD;",
      "1088:  orderInfo->controlFlags |= ORDER_TYPE_CHANGE;",
      "1089:  length += 1;",
      "1091:  length += update_prepare_bounds(context, orderInfo);",
      "1092:  return length;",
      "1093: }",
      "",
      "[Removed Lines]",
      "1090:  length += PRIMARY_DRAWING_ORDER_FIELD_BYTES[orderInfo->orderType];",
      "",
      "[Added Lines]",
      "1090:  length += get_primary_drawing_order_field_bytes(orderInfo->orderType, NULL);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1107:  update_write_field_flags(s, orderInfo->fieldFlags, orderInfo->controlFlags,",
      "1109:  update_write_bounds(s, orderInfo);",
      "1110:  Stream_SetPosition(s, position);",
      "1111:  return 0;",
      "",
      "[Removed Lines]",
      "1108:                           PRIMARY_DRAWING_ORDER_FIELD_BYTES[orderInfo->orderType]);",
      "",
      "[Added Lines]",
      "1108:                           get_primary_drawing_order_field_bytes(orderInfo->orderType, NULL));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c0fd449ec0870b050d350d6d844b1ea6dad4bc7d",
      "candidate_info": {
        "commit_hash": "c0fd449ec0870b050d350d6d844b1ea6dad4bc7d",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/c0fd449ec0870b050d350d6d844b1ea6dad4bc7d",
        "files": [
          "libfreerdp/cache/glyph.c"
        ],
        "message": "Fixed Out-of-bound read in glyph_cache_put\n\nCVE-2020-11098 thanks to @antonio-morales for finding this.",
        "before_after_code_files": [
          "libfreerdp/cache/glyph.c||libfreerdp/cache/glyph.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6295"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/cache/glyph.c||libfreerdp/cache/glyph.c": [
          "File: libfreerdp/cache/glyph.c -> libfreerdp/cache/glyph.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "579:   return FALSE;",
          "580:  }",
          "583:  {",
          "584:   WLog_ERR(TAG, \"invalid glyph cache index: %\" PRIu32 \" in cache id: %\" PRIu32 \"\", index, id);",
          "585:   return FALSE;",
          "",
          "[Removed Lines]",
          "582:  if (index > glyphCache->glyphCache[id].number)",
          "",
          "[Added Lines]",
          "582:  if (index >= glyphCache->glyphCache[id].number)",
          "",
          "---------------"
        ]
      }
    }
  ]
}