{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c1d0d2e690d2a33216de6c5920c81d9852080d36",
      "candidate_info": {
        "commit_hash": "c1d0d2e690d2a33216de6c5920c81d9852080d36",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c1d0d2e690d2a33216de6c5920c81d9852080d36",
        "files": [
          "crypto/ec/ec_asn1.c"
        ],
        "message": "Fix typo, should be && rather than &\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2689)\n(cherry picked from commit 50799f3558981eac0482d3ea77b21c58b56d4871)",
        "before_after_code_files": [
          "crypto/ec/ec_asn1.c||crypto/ec/ec_asn1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ec/ec_asn1.c||crypto/ec/ec_asn1.c": [
          "File: crypto/ec/ec_asn1.c -> crypto/ec/ec_asn1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     for (i = 0;",
          "28:          i++)",
          "29:         continue;",
          "",
          "[Removed Lines]",
          "27:          i < (int)OSSL_NELEM(group->poly) & group->poly[i] != 0;",
          "",
          "[Added Lines]",
          "27:          i < (int)OSSL_NELEM(group->poly) && group->poly[i] != 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38c0fe4b19ef2c5f4c7302c75d62b506e4d55c9e",
      "candidate_info": {
        "commit_hash": "38c0fe4b19ef2c5f4c7302c75d62b506e4d55c9e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/38c0fe4b19ef2c5f4c7302c75d62b506e4d55c9e",
        "files": [
          "crypto/asn1/f_int.c"
        ],
        "message": "Fix a slightly confusing if condition in a2i_ASN1_INTEGER.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2640)\n(cherry picked from commit aa402e2ba408254c052b5750b14e7f01e48bced1)",
        "before_after_code_files": [
          "crypto/asn1/f_int.c||crypto/asn1/f_int.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/f_int.c||crypto/asn1/f_int.c": [
          "File: crypto/asn1/f_int.c -> crypto/asn1/f_int.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:         bufp = (unsigned char *)buf;",
          "104:         if (first) {",
          "105:             first = 0;",
          "107:                 bufp += 2;",
          "108:                 i -= 2;",
          "109:             }",
          "",
          "[Removed Lines]",
          "106:             if ((bufp[0] == '0') && (buf[1] == '0')) {",
          "",
          "[Added Lines]",
          "106:             if ((bufp[0] == '0') && (bufp[1] == '0')) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8a93291cac9a5ebf60f83d5f3cca2b757c32327",
      "candidate_info": {
        "commit_hash": "e8a93291cac9a5ebf60f83d5f3cca2b757c32327",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e8a93291cac9a5ebf60f83d5f3cca2b757c32327",
        "files": [
          "apps/apps.c"
        ],
        "message": "Make sure that password_callback exercises UI\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2040)\n(cherry picked from commit 57c0f378b8fdbdc55dba783e9b744b8ed2132819)",
        "before_after_code_files": [
          "apps/apps.c||apps/apps.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/apps.c||apps/apps.c": [
          "File: apps/apps.c -> apps/apps.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "244:     int res = 0;",
          "245: #ifndef OPENSSL_NO_UI",
          "246:     UI *ui = NULL;",
          "248: #endif",
          "250:     PW_CB_DATA *cb_data = (PW_CB_DATA *)cb_tmp;",
          "263:         if (res > bufsiz)",
          "264:             res = bufsiz;",
          "267:     }",
          "270:     ui = UI_new_method(ui_method);",
          "271:     if (ui) {",
          "272:         int ok = 0;",
          "273:         char *buff = NULL;",
          "274:         int ui_flags = 0;",
          "275:         char *prompt;",
          "277:         prompt = UI_construct_prompt(ui, \"pass phrase\", prompt_info);",
          "278:         if (!prompt) {",
          "279:             BIO_printf(bio_err, \"Out of memory\\n\");",
          "",
          "[Removed Lines]",
          "247:     const char *prompt_info = NULL;",
          "249:     const char *password = NULL;",
          "252:     if (cb_data) {",
          "253:         if (cb_data->password)",
          "254:             password = cb_data->password;",
          "255: #ifndef OPENSSL_NO_UI",
          "256:         if (cb_data->prompt_info)",
          "257:             prompt_info = cb_data->prompt_info;",
          "258: #endif",
          "259:     }",
          "261:     if (password) {",
          "262:         res = strlen(password);",
          "265:         memcpy(buf, password, res);",
          "266:         return res;",
          "269: #ifndef OPENSSL_NO_UI",
          "",
          "[Added Lines]",
          "250: #ifdef OPENSSL_NO_UI",
          "251:     if (cb_data != NULL && cb_data->password != NULL) {",
          "252:         res = strlen(cb_data->password);",
          "255:         memcpy(buf, cb_data->password, res);",
          "257: #else",
          "263:         const char *prompt_info = NULL;",
          "266:         if (cb_data != NULL && cb_data->prompt_info != NULL)",
          "267:             prompt_info = cb_data->prompt_info;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "284:         ui_flags |= UI_INPUT_FLAG_DEFAULT_PWD;",
          "285:         UI_ctrl(ui, UI_CTRL_PRINT_ERRORS, 1, 0, 0);",
          "287:         if (ok >= 0)",
          "288:             ok = UI_add_input_string(ui, prompt, ui_flags, buf,",
          "289:                                      PW_MIN_LENGTH, bufsiz - 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "279:         (void)UI_add_user_data(ui, cb_data);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c2f9144e52a3168a6faca83839367b0adfedfc50",
      "candidate_info": {
        "commit_hash": "c2f9144e52a3168a6faca83839367b0adfedfc50",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c2f9144e52a3168a6faca83839367b0adfedfc50",
        "files": [
          "crypto/conf/conf_def.c",
          "crypto/conf/conf_err.c",
          "doc/apps/config.pod",
          "fuzz/corpora/conf/0d7ad6e04c0235cdc590756ceec867a05cff5823",
          "include/openssl/conf.h"
        ],
        "message": "Fix out-of-memory condition in conf\n\nconf has the ability to expand variables in config files. Repeatedly doing\nthis can lead to an exponential increase in the amount of memory required.\nThis places a limit on the length of a value that can result from an\nexpansion.\n\nCredit to OSS-Fuzz for finding this problem.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2894)\n(cherry picked from commit 8a585601fea1091022034dd14b961c1ecd5916c3)",
        "before_after_code_files": [
          "crypto/conf/conf_def.c||crypto/conf/conf_def.c",
          "crypto/conf/conf_err.c||crypto/conf/conf_err.c",
          "include/openssl/conf.h||include/openssl/conf.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/conf/conf_def.c||crypto/conf/conf_def.c": [
          "File: crypto/conf/conf_def.c -> crypto/conf/conf_def.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #include <openssl/buffer.h>",
          "21: #include <openssl/err.h>",
          "23: static char *eat_ws(CONF *conf, char *p);",
          "24: static char *eat_alpha_numeric(CONF *conf, char *p);",
          "25: static void clear_comments(CONF *conf, char *p);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #define MAX_CONF_VALUE_LENGTH       65536",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "457:         } else if (IS_EOF(conf, *from))",
          "458:             break;",
          "459:         else if (*from == '$') {",
          "461:             rrp = NULL;",
          "462:             s = &(from[1]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "466:             size_t newsize;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "511:                 CONFerr(CONF_F_STR_COPY, CONF_R_VARIABLE_HAS_NO_VALUE);",
          "512:                 goto err;",
          "513:             }",
          "516:                 CONFerr(CONF_F_STR_COPY, ERR_R_MALLOC_FAILURE);",
          "517:                 goto err;",
          "518:             }",
          "",
          "[Removed Lines]",
          "514:             if (!BUF_MEM_grow_clean(buf,",
          "515:                         (strlen(p) + buf->length - (e - from)))) {",
          "",
          "[Added Lines]",
          "522:             newsize = strlen(p) + buf->length - (e - from);",
          "523:             if (newsize > MAX_CONF_VALUE_LENGTH) {",
          "524:                 CONFerr(CONF_F_STR_COPY, CONF_R_VARIABLE_EXPANSION_TOO_LONG);",
          "525:                 goto err;",
          "526:             }",
          "527:             if (!BUF_MEM_grow_clean(buf, newsize)) {",
          "",
          "---------------"
        ],
        "crypto/conf/conf_err.c||crypto/conf/conf_err.c": [
          "File: crypto/conf/conf_err.c -> crypto/conf/conf_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:     {ERR_REASON(CONF_R_UNABLE_TO_CREATE_NEW_SECTION),",
          "61:      \"unable to create new section\"},",
          "62:     {ERR_REASON(CONF_R_UNKNOWN_MODULE_NAME), \"unknown module name\"},",
          "63:     {ERR_REASON(CONF_R_VARIABLE_HAS_NO_VALUE), \"variable has no value\"},",
          "64:     {0, NULL}",
          "65: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:     {ERR_REASON(CONF_R_VARIABLE_EXPANSION_TOO_LONG),",
          "64:      \"variable expansion too long\"},",
          "",
          "---------------"
        ],
        "include/openssl/conf.h||include/openssl/conf.h": [
          "File: include/openssl/conf.h -> include/openssl/conf.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "208: # define CONF_R_NO_VALUE                                  108",
          "209: # define CONF_R_UNABLE_TO_CREATE_NEW_SECTION              103",
          "210: # define CONF_R_UNKNOWN_MODULE_NAME                       113",
          "211: # define CONF_R_VARIABLE_HAS_NO_VALUE                     104",
          "213: # ifdef  __cplusplus",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "211: # define CONF_R_VARIABLE_EXPANSION_TOO_LONG               116",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb2b6b6cb7e697a69a1e5cd371a96721a7b89633",
      "candidate_info": {
        "commit_hash": "bb2b6b6cb7e697a69a1e5cd371a96721a7b89633",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bb2b6b6cb7e697a69a1e5cd371a96721a7b89633",
        "files": [
          "crypto/ct/ct_b64.c"
        ],
        "message": "Subtract padding from outlen in ct_base64_decode\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1548)\n(cherry picked from commit 70a06fc1a8b098e9934f837896159bfc6caf0228)",
        "before_after_code_files": [
          "crypto/ct/ct_b64.c||crypto/ct/ct_b64.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_b64.c||crypto/ct/ct_b64.c": [
          "File: crypto/ct/ct_b64.c -> crypto/ct/ct_b64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:         goto err;",
          "46:     }",
          "49:     return outlen;",
          "50: err:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:     while (in[--inlen] == '=') {",
          "50:         --outlen;",
          "51:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}