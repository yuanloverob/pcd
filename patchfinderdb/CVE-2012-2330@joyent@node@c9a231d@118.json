{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c84b3c4b73bb7cbd7116b5872babe7e50b45d4a6",
      "candidate_info": {
        "commit_hash": "c84b3c4b73bb7cbd7116b5872babe7e50b45d4a6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c84b3c4b73bb7cbd7116b5872babe7e50b45d4a6",
        "files": [
          "lib/readline.js"
        ],
        "message": "readline: ignore stray escape sequence\n\nFixes #2876.",
        "before_after_code_files": [
          "lib/readline.js||lireadline.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "523:   var next_word, next_non_word, previous_word, previous_non_word;",
          "524:   key = key || {};",
          "526:   if (key.ctrl && key.shift) {",
          "528:     switch (key.name) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1285cd9011159fda80c63996599c900c18f9a11c",
      "candidate_info": {
        "commit_hash": "1285cd9011159fda80c63996599c900c18f9a11c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1285cd9011159fda80c63996599c900c18f9a11c",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.6.20",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 6",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "31: #define NODE_PATCH_VERSION 19",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "31: #define NODE_PATCH_VERSION 20",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d489a01f81d84739bde92e77b023f4b934c59212",
      "candidate_info": {
        "commit_hash": "d489a01f81d84739bde92e77b023f4b934c59212",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d489a01f81d84739bde92e77b023f4b934c59212",
        "files": [
          "lib/path.js",
          "test/simple/test-path.js"
        ],
        "message": "Make path.extname do the right thing when the last path component is . or ..\n\nCloses GH-2526",
        "before_after_code_files": [
          "lib/path.js||lipath.js",
          "test/simple/test-path.js||test/simple/test-path.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/path.js||lipath.js": [
          "File: lib/path.js -> lipath.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:       /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;",
          "",
          "[Removed Lines]",
          "64:   var splitTailRe = /^([\\s\\S]+[\\\\\\/](?!$)|[\\\\\\/])?((?:[\\s\\S]+?)?(\\.[^.]*)?)$/;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "259:   var splitPath = function(filename) {",
          "260:     var result = splitPathRe.exec(filename);",
          "261:     return [result[1] || '', result[2] || '', result[3] || '', result[4] || ''];",
          "",
          "[Removed Lines]",
          "258:   var splitPathRe = /^(\\/?)([\\s\\S]+\\/(?!$)|\\/)?((?:[\\s\\S]+?)?(\\.[^.]*)?)$/;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-path.js||test/simple/test-path.js": [
          "File: test/simple/test-path.js -> test/simple/test-path.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "102: assert.equal(path.extname('.path/file.ext'), '.ext');",
          "103: assert.equal(path.extname('file.ext.ext'), '.ext');",
          "104: assert.equal(path.extname('file.'), '.');",
          "107: var failures = [];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105: assert.equal(path.extname('.'), '');",
          "106: assert.equal(path.extname('./'), '');",
          "107: assert.equal(path.extname('.file.ext'), '.ext');",
          "108: assert.equal(path.extname('.file'), '');",
          "109: assert.equal(path.extname('.file.'), '.');",
          "110: assert.equal(path.extname('.file..'), '.');",
          "111: assert.equal(path.extname('..'), '');",
          "112: assert.equal(path.extname('../'), '');",
          "113: assert.equal(path.extname('..file.ext'), '.ext');",
          "114: assert.equal(path.extname('..file'), '.file');",
          "115: assert.equal(path.extname('..file.'), '.');",
          "116: assert.equal(path.extname('..file..'), '.');",
          "117: assert.equal(path.extname('...'), '.');",
          "118: assert.equal(path.extname('...ext'), '.ext');",
          "119: assert.equal(path.extname('....'), '.');",
          "120: assert.equal(path.extname('file.ext/'), '');",
          "122: if (isWindows) {",
          "124:   assert.equal(path.extname('.\\\\'), '');",
          "125:   assert.equal(path.extname('..\\\\'), '');",
          "126:   assert.equal(path.extname('file.ext\\\\'), '');",
          "127: } else {",
          "129:   assert.equal(path.extname('.\\\\'), '');",
          "130:   assert.equal(path.extname('..\\\\'), '.\\\\');",
          "131:   assert.equal(path.extname('file.ext\\\\'), '.ext\\\\');",
          "132: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8cdbf014bd40c679970f6a73173a80d15e5f2275",
      "candidate_info": {
        "commit_hash": "8cdbf014bd40c679970f6a73173a80d15e5f2275",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/8cdbf014bd40c679970f6a73173a80d15e5f2275",
        "files": [
          "test/simple/test-child-process-stdout-flush.js"
        ],
        "message": "test: fix typo in test-child-process-stdout-flush",
        "before_after_code_files": [
          "test/simple/test-child-process-stdout-flush.js||test/simple/test-child-process-stdout-flush.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-child-process-stdout-flush.js||test/simple/test-child-process-stdout-flush.js": [
          "File: test/simple/test-child-process-stdout-flush.js -> test/simple/test-child-process-stdout-flush.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:   assert.ok(false);",
          "41: });",
          "44: child.stdout.on('data', function(data) {",
          "45:   count += data.length;",
          "46:   console.log(count);",
          "",
          "[Removed Lines]",
          "43: child.stderr.setEncoding('utf8');",
          "",
          "[Added Lines]",
          "43: child.stdout.setEncoding('utf8');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9caeceef6dd497d922330a281fbae021a6ef200d",
      "candidate_info": {
        "commit_hash": "9caeceef6dd497d922330a281fbae021a6ef200d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/9caeceef6dd497d922330a281fbae021a6ef200d",
        "files": [
          "src/node_isolate.cc",
          "src/node_isolate.h",
          "src/node_vars.cc",
          "src/node_vars.h"
        ],
        "message": "isolates have globals stored in struct globals",
        "before_after_code_files": [
          "src/node_isolate.cc||src/node_isolate.cc",
          "src/node_isolate.h||src/node_isolate.h",
          "src/node_vars.cc||src/node_vars.cc",
          "src/node_vars.h||src/node_vars.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_isolate.cc||src/node_isolate.cc": [
          "File: src/node_isolate.cc -> src/node_isolate.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   assert(isolate_->GetData() == NULL);",
          "48:   isolate_->SetData(this);",
          "49: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:   globals_init(&globals_);",
          "51: }",
          "54: struct globals* Isolate::Globals() {",
          "55:   return &globals_;",
          "",
          "---------------"
        ],
        "src/node_isolate.h||src/node_isolate.h": [
          "File: src/node_isolate.h -> src/node_isolate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include \"queue.h\"",
          "26: #include \"v8.h\"",
          "27: #include \"uv.h\"",
          "29: #ifdef NDEBUG",
          "30: # define NODE_ISOLATE_CHECK(ptr) ((void) (ptr))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #include \"node_vars.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:   void Dispose();",
          "72: private:",
          "73:   Isolate(uv_loop_t* loop);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:   struct globals* Globals();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "81:   SLIST_HEAD(AtExitCallbacks, AtExitCallbackInfo) at_exit_callbacks_;",
          "82:   v8::Isolate* isolate_;",
          "83:   uv_loop_t* loop_;",
          "84: };",
          "86: } // namespace node",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:   struct globals globals_;",
          "",
          "---------------"
        ],
        "src/node_vars.cc||src/node_vars.cc": [
          "File: src/node_vars.cc -> src/node_vars.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #include <node_vars.h>",
          "2: #if HAVE_OPENSSL",
          "3: # include <node_crypto.h>",
          "4: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #include <node_isolate.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17:   memset(g, 0, sizeof(struct globals));",
          "18:   g->debug_port = 5858;",
          "",
          "[Removed Lines]",
          "12: static struct globals g_struct;",
          "13: static struct globals* g_ptr;",
          "16: static void globals_init(struct globals* g) {",
          "",
          "[Added Lines]",
          "13: void globals_init(struct globals* g) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "31: }",
          "34: struct globals* globals_get() {",
          "35:   if (!g_ptr) {",
          "36:     g_ptr = &g_struct;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: #if HAVE_ISOLATES",
          "32: struct globals* globals_get() {",
          "33:   node::Isolate* isolate = node::Isolate::GetCurrent();",
          "34:   return isolate->Globals();",
          "35: }",
          "36: #else",
          "37: static struct globals g_struct;",
          "38: static struct globals* g_ptr;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "38:   }",
          "39:   return g_ptr;",
          "40: }",
          "42: }  // namespace node",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: #endif  // HAVE_ISOLATES",
          "",
          "---------------"
        ],
        "src/node_vars.h||src/node_vars.h": [
          "File: src/node_vars.h -> src/node_vars.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "183:   ::ares_channel ares_channel;",
          "184: };",
          "186: struct globals* globals_get();",
          "188: }  // namespace node",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187: void globals_init(struct globals*);",
          "",
          "---------------"
        ]
      }
    }
  ]
}