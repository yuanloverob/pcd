{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a111390c566c61074e4452481abf190fd955fa30",
      "candidate_info": {
        "commit_hash": "a111390c566c61074e4452481abf190fd955fa30",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a111390c566c61074e4452481abf190fd955fa30",
        "files": [
          "lib/zlib.js"
        ],
        "message": "zlib: use Buffer.concat()",
        "before_after_code_files": [
          "lib/zlib.js||lizlib.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/zlib.js||lizlib.js": [
          "File: lib/zlib.js -> lizlib.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:   }",
          "152:   function onEnd() {",
          "172:   }",
          "174:   engine.on('error', onError);",
          "",
          "[Removed Lines]",
          "153:     var buffer;",
          "154:     switch (buffers.length) {",
          "155:       case 0:",
          "156:         buffer = new Buffer(0);",
          "157:         break;",
          "158:       case 1:",
          "159:         buffer = buffers[0];",
          "160:         break;",
          "161:       default:",
          "162:         buffer = new Buffer(nread);",
          "163:         var n = 0;",
          "164:         buffers.forEach(function(b) {",
          "165:           var l = b.length;",
          "166:           b.copy(buffer, n, 0, l);",
          "167:           n += l;",
          "168:         });",
          "169:         break;",
          "170:     }",
          "171:     callback(null, buffer);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fee02db705152a42c8db442d3ab76b2296e59bbd",
      "candidate_info": {
        "commit_hash": "fee02db705152a42c8db442d3ab76b2296e59bbd",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/fee02db705152a42c8db442d3ab76b2296e59bbd",
        "files": [
          "src/node.cc",
          "test/simple/test-process-env.js"
        ],
        "message": "Re-apply commit e307468.\n\nThe V8 assert got triggered by a missing HandleScope::Close().",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "test/simple/test-process-env.js||test/simple/test-process-env.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1959:     return scope.Close(String::New(reinterpret_cast<uint16_t*>(buffer), result));",
          "1960:   }",
          "1961: #endif",
          "1964: }",
          "",
          "[Removed Lines]",
          "1963:   return Undefined();",
          "",
          "[Added Lines]",
          "1963:   return scope.Close(info.Data().As<Object>()->Get(property));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2210:                                        EnvQuery,",
          "2211:                                        EnvDeleter,",
          "2212:                                        EnvEnumerator,",
          "2214:   Local<Object> env = envTemplate->NewInstance();",
          "2215:   process->Set(String::NewSymbol(\"env\"), env);",
          "",
          "[Removed Lines]",
          "2213:                                        Undefined());",
          "",
          "[Added Lines]",
          "2213:                                        Object::New());",
          "",
          "---------------"
        ],
        "test/simple/test-process-env.js||test/simple/test-process-env.js": [
          "File: test/simple/test-process-env.js -> test/simple/test-process-env.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:   assert.equal(false, 'NODE_PROCESS_ENV_DELETED' in process.env);",
          "49:   assert.equal(42, process.env.NODE_PROCESS_ENV);",
          "50:   process.exit(0);",
          "51: } else {",
          "52:   process.env.NODE_PROCESS_ENV = 42;",
          "53:   assert.equal(42, process.env.NODE_PROCESS_ENV);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:   assert.equal('asdf', process.env.hasOwnProperty);",
          "51:   var hasOwnProperty = Object.prototype.hasOwnProperty;",
          "52:   var has = hasOwnProperty.call(process.env, 'hasOwnProperty');",
          "53:   assert.equal(true, has);",
          "56:   assert.equal(Object.prototype.hasOwnProperty, process.env.hasOwnProperty);",
          "57:   var has = process.env.hasOwnProperty('hasOwnProperty');",
          "58:   assert.equal(false, has);",
          "60:   process.env.hasOwnProperty = 'asdf';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "60bf2d6cb33e4ce55604f73889ab840a9de8bdab",
      "candidate_info": {
        "commit_hash": "60bf2d6cb33e4ce55604f73889ab840a9de8bdab",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/60bf2d6cb33e4ce55604f73889ab840a9de8bdab",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "src/node_version.h"
        ],
        "message": "2012.07.19, Version 0.8.3 (Stable)\n\n* V8: upgrade to 3.11.10.15\n\n* npm: Upgrade to 1.1.43\n\n* net: fix net.Server.listen({fd:x}) error reporting (Ben Noordhuis)\n\n* net: fix bogus errno reporting (Ben Noordhuis)\n\n* build: Move npm shebang logic into an npm script (isaacs)\n\n* build: fix add-on loading on freebsd (Ben Noordhuis)\n\n* build: disable unsafe optimizations (Ben Noordhuis)\n\n* build: fix spurious mksnapshot crashes for good (Ben Noordhuis)\n\n* build: speed up genv8constants (Dave Pacheco)\n\n* fs: make unwatchFile() remove a specific listener (Ben Noordhuis)\n\n* domain: Remove first arg from intercepted fn (Toshihiro Nakamura)\n\n* domain: Fix memory leak on error (isaacs)\n\n* events: Fix memory leak from removeAllListeners (Nathan Rajlich)\n\n* zlib: Fix memory leak in Unzip class. (isaacs)\n\n* crypto: Fix memory leak in DecipherUpdate() (Ben Noordhuis)",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #define NODE_MAJOR_VERSION 0",
          "26: #define NODE_MINOR_VERSION 8",
          "27: #define NODE_PATCH_VERSION 3",
          "30: #ifndef NODE_STRINGIFY",
          "31: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "28: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "28: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4e84dfa6830336131a63993dcf2119b3edcb0f37",
      "candidate_info": {
        "commit_hash": "4e84dfa6830336131a63993dcf2119b3edcb0f37",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4e84dfa6830336131a63993dcf2119b3edcb0f37",
        "files": [
          "benchmark/http_simple_auto.js"
        ],
        "message": "bench: run GC and dump stats if --expose-gc is set",
        "before_after_code_files": [
          "benchmark/http_simple_auto.js||benchmark/http_simple_auto.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "benchmark/http_simple_auto.js||benchmark/http_simple_auto.js": [
          "File: benchmark/http_simple_auto.js -> benchmark/http_simple_auto.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:   cp.stderr.pipe(process.stderr);",
          "106:   cp.on('exit', function() {",
          "107:     server.close();",
          "108:   });",
          "109: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "108:     process.nextTick(dump_mm_stats);",
          "112: function dump_mm_stats() {",
          "113:   if (typeof gc != 'function') return;",
          "115:   var before = process.memoryUsage();",
          "116:   for (var i = 0; i < 10; ++i) gc();",
          "117:   var after = process.memoryUsage();",
          "118:   setTimeout(print_stats, 250); // give GC time to settle",
          "120:   function print_stats() {",
          "121:     console.log('\\nBEFORE / AFTER GC');",
          "122:     ['rss', 'heapTotal', 'heapUsed'].forEach(function(key) {",
          "123:       var a = before[key] / (1024 * 1024);",
          "124:       var b = after[key] / (1024 * 1024);",
          "125:       console.log('%sM / %sM %s', a.toFixed(2), b.toFixed(2), key);",
          "126:     });",
          "127:   }",
          "128: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff22a0cb15c0513c0f40367f46de69da0056097d",
      "candidate_info": {
        "commit_hash": "ff22a0cb15c0513c0f40367f46de69da0056097d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ff22a0cb15c0513c0f40367f46de69da0056097d",
        "files": [
          "deps/openssl/openssl/ssl/d1_pkt.c",
          "deps/openssl/openssl/ssl/s23_srvr.c",
          "deps/openssl/openssl/ssl/s3_both.c",
          "deps/openssl/openssl/ssl/s3_pkt.c",
          "deps/openssl/openssl/ssl/ssl.h",
          "deps/openssl/openssl/ssl/ssl3.h",
          "deps/openssl/openssl/ssl/ssltest.c",
          "deps/openssl/openssl/test/testssl"
        ],
        "message": "openssl: reduce memory consumption\n\nSSL records may be as large as 16K, but are typically < 2K.  In\naddition, a historic bug in Windows allowed records to be as large\n32K.  OpenSSL statically allocates read and write buffers (34K and\n18K respectively) used for processing records.\n\nWith this patch, OpenSSL statically allocates 4K + 4K buffers, with\nthe option of dynamically growing buffers to 34K + 4K, which is a\nsaving of 44K per connection for the typical case.\n\nThis patch is taken from the Android Open Source Project.",
        "before_after_code_files": [
          "deps/openssl/openssl/ssl/d1_pkt.c||deps/openssl/openssl/ssl/d1_pkt.c",
          "deps/openssl/openssl/ssl/s23_srvr.c||deps/openssl/openssl/ssl/s23_srvr.c",
          "deps/openssl/openssl/ssl/s3_both.c||deps/openssl/openssl/ssl/s3_both.c",
          "deps/openssl/openssl/ssl/s3_pkt.c||deps/openssl/openssl/ssl/s3_pkt.c",
          "deps/openssl/openssl/ssl/ssl.h||deps/openssl/openssl/ssl/ssl.h",
          "deps/openssl/openssl/ssl/ssl3.h||deps/openssl/openssl/ssl/ssl3.h",
          "deps/openssl/openssl/ssl/ssltest.c||deps/openssl/openssl/ssl/ssltest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/openssl/ssl/d1_pkt.c||deps/openssl/openssl/ssl/d1_pkt.c": [
          "File: deps/openssl/openssl/ssl/d1_pkt.c -> deps/openssl/openssl/ssl/d1_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "614:    goto again;",
          "615:    }",
          "618:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "620:   if (rr->length > s->s3->rbuf.len - DTLS1_RT_HEADER_LENGTH)",
          "621:    {",
          "622:    unsigned char *pp;",
          "623:    unsigned int newlen = rr->length + DTLS1_RT_HEADER_LENGTH;",
          "624:    if ((pp=OPENSSL_realloc(s->s3->rbuf.buf, newlen))==NULL)",
          "625:     {",
          "626:     SSLerr(SSL_F_DTLS1_GET_RECORD,ERR_R_MALLOC_FAILURE);",
          "627:     return(-1);",
          "628:     }",
          "629:    p = pp + (p - s->s3->rbuf.buf);",
          "630:    s->s3->rbuf.buf=pp;",
          "631:    s->s3->rbuf.len=newlen;",
          "632:    s->packet= &(s->s3->rbuf.buf[0]);",
          "633:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1452:  SSL3_BUFFER *wb;",
          "1453:  SSL_SESSION *sess;",
          "1454:  int bs;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1473:  unsigned int len_with_overhead = len + SSL3_RT_DEFAULT_WRITE_OVERHEAD;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1461:   return(ssl3_write_pending(s,type,buf,len));",
          "1462:   }",
          "1465:  if (s->s3->alert_dispatch)",
          "1466:   {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1483:  if (s->s3->wbuf.len < len_with_overhead)",
          "1484:   {",
          "1485:   if ((p=OPENSSL_realloc(s->s3->wbuf.buf, len_with_overhead)) == NULL) {",
          "1486:    SSLerr(SSL_F_DO_DTLS1_WRITE,ERR_R_MALLOC_FAILURE);",
          "1487:    goto err;",
          "1488:   }",
          "1489:   s->s3->wbuf.buf = p;",
          "1490:   s->s3->wbuf.len = len_with_overhead;",
          "1491:   }",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/s23_srvr.c||deps/openssl/openssl/ssl/s23_srvr.c": [
          "File: deps/openssl/openssl/ssl/s23_srvr.c -> deps/openssl/openssl/ssl/s23_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "445:   v[1] = p[4];",
          "447:   n=((p[0]&0x7f)<<8)|p[1];",
          "449:    {",
          "450:    SSLerr(SSL_F_SSL23_GET_CLIENT_HELLO,SSL_R_RECORD_TOO_LARGE);",
          "451:    goto err;",
          "",
          "[Removed Lines]",
          "448:   if (n > (1024*4))",
          "",
          "[Added Lines]",
          "449: #if SSL3_RT_DEFAULT_PACKET_SIZE < 1024*4 - SSL3_RT_DEFAULT_WRITE_OVERHEAD",
          "450: #error \"SSL3_RT_DEFAULT_PACKET_SIZE is too small.\"",
          "451: #endif",
          "453:   if (n > SSL3_RT_DEFAULT_PACKET_SIZE - 2)",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/s3_both.c||deps/openssl/openssl/ssl/s3_both.c": [
          "File: deps/openssl/openssl/ssl/s3_both.c -> deps/openssl/openssl/ssl/s3_both.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "746:  if (s->s3->rbuf.buf == NULL)",
          "747:   {",
          "752:    {",
          "755:    }",
          "756: #ifndef OPENSSL_NO_COMP",
          "757:   if (!(s->options & SSL_OP_NO_COMPRESSION))",
          "",
          "[Removed Lines]",
          "748:   len = SSL3_RT_MAX_PLAIN_LENGTH",
          "749:    + SSL3_RT_MAX_ENCRYPTED_OVERHEAD",
          "750:    + headerlen + align;",
          "751:   if (s->options & SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER)",
          "753:    s->s3->init_extra = 1;",
          "754:    len += SSL3_RT_MAX_EXTRA;",
          "",
          "[Added Lines]",
          "748:   if (SSL_get_mode(s) & SSL_MODE_SMALL_BUFFERS)",
          "749:    {",
          "750:    len = SSL3_RT_DEFAULT_PACKET_SIZE;",
          "751:    }",
          "752:     else",
          "754:    len = SSL3_RT_MAX_PLAIN_LENGTH",
          "755:     + SSL3_RT_MAX_ENCRYPTED_OVERHEAD",
          "756:     + headerlen + align;",
          "757:    if (s->options & SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER)",
          "758:     {",
          "759:     s->s3->init_extra = 1;",
          "760:     len += SSL3_RT_MAX_EXTRA;",
          "761:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "788:  if (s->s3->wbuf.buf == NULL)",
          "789:   {",
          "791:    + SSL3_RT_SEND_MAX_ENCRYPTED_OVERHEAD",
          "792:    + headerlen + align;",
          "793: #ifndef OPENSSL_NO_COMP",
          "",
          "[Removed Lines]",
          "790:   len = s->max_send_fragment",
          "",
          "[Added Lines]",
          "797:   if (SSL_get_mode(s) & SSL_MODE_SMALL_BUFFERS)",
          "798:    {",
          "799:    len = SSL3_RT_DEFAULT_PACKET_SIZE;",
          "800:    }",
          "801:     else",
          "802:    {",
          "803:    len = s->max_send_fragment;",
          "804:    }",
          "805:   len += 0",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/s3_pkt.c||deps/openssl/openssl/ssl/s3_pkt.c": [
          "File: deps/openssl/openssl/ssl/s3_pkt.c -> deps/openssl/openssl/ssl/s3_pkt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "295:  size_t extra;",
          "296:  int decryption_failed_or_bad_record_mac = 0;",
          "297:  unsigned char *mac = NULL;",
          "299:  rr= &(s->s3->rrec);",
          "300:  sess=s->session;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "298: #if defined(SSL3_ALIGN_PAYLOAD) && SSL3_ALIGN_PAYLOAD!=0",
          "299:  long align=SSL3_ALIGN_PAYLOAD;",
          "300: #else",
          "301:  long align=0;",
          "302: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "303:   extra=SSL3_RT_MAX_EXTRA;",
          "304:  else",
          "305:   extra=0;",
          "307:   {",
          "",
          "[Removed Lines]",
          "306:  if (extra && !s->s3->init_extra)",
          "",
          "[Added Lines]",
          "311:  if (!(SSL_get_mode(s) & SSL_MODE_SMALL_BUFFERS) &&",
          "312:   extra && !s->s3->init_extra)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:    goto err;",
          "353:    }",
          "355:   if (rr->length > s->s3->rbuf.len - SSL3_RT_HEADER_LENGTH)",
          "356:    {",
          "357:    al=SSL_AD_RECORD_OVERFLOW;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "364:   if (rr->length > s->s3->rbuf.len - SSL3_RT_HEADER_LENGTH - align)",
          "365:    {",
          "366:    if ((p=OPENSSL_realloc(s->s3->rbuf.buf, rr->length + SSL3_RT_HEADER_LENGTH + align))==NULL)",
          "367:     {",
          "368:     SSLerr(SSL_F_SSL3_GET_RECORD,ERR_R_MALLOC_FAILURE);",
          "369:     goto err;",
          "370:     }",
          "371:    s->s3->rbuf.buf=p;",
          "372:    s->s3->rbuf.len=rr->length + SSL3_RT_HEADER_LENGTH + align;",
          "373:    s->packet= &(s->s3->rbuf.buf[0]);",
          "374:    }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "578:  const unsigned char *buf=buf_;",
          "579:  unsigned int tot,n,nw;",
          "580:  int i;",
          "582:  s->rwstate=SSL_NOTHING;",
          "583:  tot=s->s3->wnum;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "602:  unsigned int max_plain_length;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "597:  n=(len-tot);",
          "598:  for (;;)",
          "599:   {",
          "602:   else",
          "603:    nw=n;",
          "",
          "[Removed Lines]",
          "600:   if (n > s->max_send_fragment)",
          "601:    nw=s->max_send_fragment;",
          "",
          "[Added Lines]",
          "622:   if (type == SSL3_RT_APPLICATION_DATA && (SSL_get_mode(s) & SSL_MODE_SMALL_BUFFERS))",
          "623:    max_plain_length = SSL3_RT_DEFAULT_PLAIN_LENGTH;",
          "624:   else",
          "625:    max_plain_length = s->max_send_fragment;",
          "627:   if (n > max_plain_length)",
          "628:    nw = max_plain_length;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "707:   s->s3->empty_fragment_done = 1;",
          "708:   }",
          "710:  if (create_empty_fragment)",
          "711:   {",
          "712: #if defined(SSL3_ALIGN_PAYLOAD) && SSL3_ALIGN_PAYLOAD!=0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "738:  if (len + SSL3_RT_DEFAULT_WRITE_OVERHEAD > wb->len)",
          "739:   {",
          "740:   if ((p=OPENSSL_realloc(wb->buf, len + SSL3_RT_DEFAULT_WRITE_OVERHEAD))==NULL)",
          "741:    {",
          "742:    SSLerr(SSL_F_DO_SSL3_WRITE,ERR_R_MALLOC_FAILURE);",
          "743:    goto err;",
          "744:    }",
          "745:   wb->buf = p;",
          "746:   wb->len = len + SSL3_RT_DEFAULT_WRITE_OVERHEAD;",
          "747:   }",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/ssl.h||deps/openssl/openssl/ssl/ssl.h": [
          "File: deps/openssl/openssl/ssl/ssl.h -> deps/openssl/openssl/ssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "640: #define SSL_MODE_RELEASE_BUFFERS 0x00000010L",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "643: #define SSL_MODE_SMALL_BUFFERS 0x00000020L",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/ssl3.h||deps/openssl/openssl/ssl/ssl3.h": [
          "File: deps/openssl/openssl/ssl/ssl3.h -> deps/openssl/openssl/ssl/ssl3.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "281: #define SSL3_RT_MAX_EXTRA   (16384)",
          "284: #define SSL3_RT_MAX_PLAIN_LENGTH  16384",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "285: #define SSL3_RT_DEFAULT_PLAIN_LENGTH 2048",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "311: #define SSL3_RT_MAX_PACKET_SIZE  \\",
          "312:   (SSL3_RT_MAX_ENCRYPTED_LENGTH+SSL3_RT_HEADER_LENGTH)",
          "314: #define SSL3_MD_CLIENT_FINISHED_CONST \"\\x43\\x4C\\x4E\\x54\"",
          "315: #define SSL3_MD_SERVER_FINISHED_CONST \"\\x53\\x52\\x56\\x52\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "318: #define SSL3_RT_DEFAULT_WRITE_OVERHEAD  256",
          "319: #define SSL3_RT_DEFAULT_PACKET_SIZE     4096 - SSL3_RT_DEFAULT_WRITE_OVERHEAD",
          "320: #if SSL3_RT_DEFAULT_PLAIN_LENGTH + SSL3_RT_DEFAULT_WRITE_OVERHEAD > SSL3_RT_DEFAULT_PACKET_SIZE",
          "321: #error \"Insufficient space allocated for write buffers.\"",
          "322: #endif",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/ssltest.c||deps/openssl/openssl/ssl/ssltest.c": [
          "File: deps/openssl/openssl/ssl/ssltest.c -> deps/openssl/openssl/ssl/ssltest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "369:                 \"                 (default is sect163r2).\\n\");",
          "370: #endif",
          "371:  fprintf(stderr,\" -test_cipherlist - verifies the order of the ssl cipher lists\\n\");",
          "372:  }",
          "374: static void print_details(SSL *c_ssl, const char *prefix)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "372:  fprintf(stderr,\" -c_small_records - enable client side use of small SSL record buffers\\n\");",
          "373:  fprintf(stderr,\" -s_small_records - enable server side use of small SSL record buffers\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "497:  return arg->ret;",
          "498:  }",
          "499: #endif",
          "501: int main(int argc, char *argv[])",
          "502:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "502:  int ssl_mode = 0;",
          "503:  int c_small_records=0;",
          "504:  int s_small_records=0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "765:    {",
          "766:    test_cipherlist = 1;",
          "767:    }",
          "768:   else",
          "769:    {",
          "770:    fprintf(stderr,\"unknown option %s\\n\",*argv);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "773:   else if (strcmp(*argv, \"-c_small_records\") == 0)",
          "774:    {",
          "775:    c_small_records = 1;",
          "776:    }",
          "777:   else if (strcmp(*argv, \"-s_small_records\") == 0)",
          "778:    {",
          "779:    s_small_records = 1;",
          "780:    }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "901:   SSL_CTX_set_cipher_list(s_ctx,cipher);",
          "902:   }",
          "904: #ifndef OPENSSL_NO_DH",
          "905:  if (!no_dhe)",
          "906:   {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "917:  ssl_mode = 0;",
          "918:  if (c_small_records)",
          "919:   {",
          "920:   ssl_mode = SSL_CTX_get_mode(c_ctx);",
          "921:   ssl_mode |= SSL_MODE_SMALL_BUFFERS;",
          "922:   SSL_CTX_set_mode(c_ctx, ssl_mode);",
          "923:   }",
          "924:  ssl_mode = 0;",
          "925:  if (s_small_records)",
          "926:   {",
          "927:   ssl_mode = SSL_CTX_get_mode(s_ctx);",
          "928:   ssl_mode |= SSL_MODE_SMALL_BUFFERS;",
          "929:   SSL_CTX_set_mode(s_ctx, ssl_mode);",
          "930:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}