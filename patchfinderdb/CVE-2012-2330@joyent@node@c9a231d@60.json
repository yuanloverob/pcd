{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "19a432260cd2a2981c067c88f37f71206d23ccd2",
      "candidate_info": {
        "commit_hash": "19a432260cd2a2981c067c88f37f71206d23ccd2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/19a432260cd2a2981c067c88f37f71206d23ccd2",
        "files": [
          "test/simple/test-cli-eval.js"
        ],
        "message": "test: add extra checks in simple/test-cli-eval",
        "before_after_code_files": [
          "test/simple/test-cli-eval.js||test/simple/test-cli-eval.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-cli-eval.js||test/simple/test-cli-eval.js": [
          "File: test/simple/test-cli-eval.js -> test/simple/test-cli-eval.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: child.exec(nodejs + ' --eval 42',",
          "40:     function(err, stdout, stderr) {",
          "41:       assert.equal(stdout, '');",
          "42:     });",
          "45: child.exec(nodejs + ' --eval \"console.error(42)\"',",
          "46:     function(err, stdout, stderr) {",
          "47:       assert.equal(stderr, '42\\n');",
          "48:     });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:       assert.equal(stderr, '');",
          "48:       assert.equal(stdout, '');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:   child.exec(cmd + '42',",
          "55:       function(err, stdout, stderr) {",
          "56:         assert.equal(stdout, '42\\n');",
          "57:       });",
          "59:   child.exec(cmd + \"'[]'\",",
          "60:       function(err, stdout, stderr) {",
          "61:         assert.equal(stdout, '[]\\n');",
          "62:       });",
          "63: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:         assert.equal(stderr, '');",
          "65:         assert.equal(stderr, '');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "84: child.exec(nodejs + ' -p \"\\\\-42\"',",
          "85:     function(err, stdout, stderr) {",
          "86:       assert.equal(stdout, '-42\\n');",
          "87:     });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:       assert.equal(stderr, '');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0ad2a9a2e0c82f71efaa56cf4eb31c8912703065",
      "candidate_info": {
        "commit_hash": "0ad2a9a2e0c82f71efaa56cf4eb31c8912703065",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0ad2a9a2e0c82f71efaa56cf4eb31c8912703065",
        "files": [
          "test/simple/test-dgram-multicast-multi-process.js"
        ],
        "message": "Small test-dgram-multicast-multi-process fixes\n\nSomehow windows doesn't want to bind to 224.0.0.1. Let's test with a multicast\naddress that has no special meaning.",
        "before_after_code_files": [
          "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js": [
          "File: test/simple/test-dgram-multicast-multi-process.js -> test/simple/test-dgram-multicast-multi-process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     assert = require('assert'),",
          "27:     Buffer = require('buffer').Buffer,",
          "28:     fork = require('child_process').fork,",
          "30:     TIMEOUT = 5000,",
          "31:     messages = [",
          "32:       new Buffer('First message to send'),",
          "",
          "[Removed Lines]",
          "29:     LOCAL_BROADCAST_HOST = '224.0.0.1',",
          "",
          "[Added Lines]",
          "29:     LOCAL_BROADCAST_HOST = '224.0.0.114',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:     sendSocket.send(buf, 0, buf.length,",
          "154:                 common.PORT, LOCAL_BROADCAST_HOST, function(err) {",
          "155:       if (err) throw err;",
          "158:       process.nextTick(sendSocket.sendNext);",
          "159:     });",
          "160:   };",
          "",
          "[Removed Lines]",
          "156:       console.error('sent %s to %s', util.inspect(buf.toString()),",
          "157:                 LOCAL_BROADCAST_HOST + common.PORT);",
          "",
          "[Added Lines]",
          "156:       console.error('sent %s to %s:%s', util.inspect(buf.toString()),",
          "157:                 LOCAL_BROADCAST_HOST, common.PORT);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f404e3509ecd349843eab7a3d16ad616e20c6e9",
      "candidate_info": {
        "commit_hash": "7f404e3509ecd349843eab7a3d16ad616e20c6e9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7f404e3509ecd349843eab7a3d16ad616e20c6e9",
        "files": [
          "lib/buffer.js",
          "test/simple/test-writedouble.js",
          "test/simple/test-writefloat.js"
        ],
        "message": "buffer: added support for writing NaN and Infinity\n\nto writeDoubleBE(), writeDoubleLE(), writeFloatBE() and writeFloatLE().\nFixes #3934.",
        "before_after_code_files": [
          "lib/buffer.js||libuffer.js",
          "test/simple/test-writedouble.js||test/simple/test-writedouble.js",
          "test/simple/test-writefloat.js||test/simple/test-writefloat.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/buffer.js||libuffer.js": [
          "File: lib/buffer.js -> libuffer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1025:   assert.ok(Math.floor(value) === value, 'value has a fractional component');",
          "1026: }",
          "1029:   assert.ok(typeof (value) == 'number',",
          "1030:       'cannot write a non-number as a number');",
          "1032:   assert.ok(value <= max, 'value larger than maximum allowed value');",
          "1034:   assert.ok(value >= min, 'value smaller than minimum allowed value');",
          "",
          "[Removed Lines]",
          "1028: function verifIEEE754(value, max, min) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1135:     assert.ok(offset + 3 < buffer.length,",
          "1136:         'Trying to write beyond buffer length');",
          "1139:   }",
          "1141:   require('buffer_ieee754').writeIEEE754(buffer, value, offset, isBigEndian,",
          "",
          "[Removed Lines]",
          "1138:     verifIEEE754(value, 3.4028234663852886e+38, -3.4028234663852886e+38);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1164:     assert.ok(offset + 7 < buffer.length,",
          "1165:         'Trying to write beyond buffer length');",
          "1168:   }",
          "1170:   require('buffer_ieee754').writeIEEE754(buffer, value, offset, isBigEndian,",
          "",
          "[Removed Lines]",
          "1167:     verifIEEE754(value, 1.7976931348623157E+308, -1.7976931348623157E+308);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-writedouble.js||test/simple/test-writedouble.js": [
          "File: test/simple/test-writedouble.js -> test/simple/test-writedouble.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:   ASSERT.equal(0x00, buffer[13]);",
          "124:   ASSERT.equal(0x00, buffer[14]);",
          "125:   ASSERT.equal(0x80, buffer[15]);",
          "126: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:   buffer.writeDoubleBE(Infinity, 0);",
          "128:   buffer.writeDoubleLE(Infinity, 8);",
          "129:   ASSERT.equal(0x7F, buffer[0]);",
          "130:   ASSERT.equal(0xF0, buffer[1]);",
          "131:   ASSERT.equal(0x00, buffer[2]);",
          "132:   ASSERT.equal(0x00, buffer[3]);",
          "133:   ASSERT.equal(0x00, buffer[4]);",
          "134:   ASSERT.equal(0x00, buffer[5]);",
          "135:   ASSERT.equal(0x00, buffer[6]);",
          "136:   ASSERT.equal(0x00, buffer[7]);",
          "137:   ASSERT.equal(0x00, buffer[8]);",
          "138:   ASSERT.equal(0x00, buffer[9]);",
          "139:   ASSERT.equal(0x00, buffer[10]);",
          "140:   ASSERT.equal(0x00, buffer[11]);",
          "141:   ASSERT.equal(0x00, buffer[12]);",
          "142:   ASSERT.equal(0x00, buffer[13]);",
          "143:   ASSERT.equal(0xF0, buffer[14]);",
          "144:   ASSERT.equal(0x7F, buffer[15]);",
          "145:   ASSERT.equal(Infinity, buffer.readDoubleBE(0));",
          "146:   ASSERT.equal(Infinity, buffer.readDoubleLE(8));",
          "148:   buffer.writeDoubleBE(-Infinity, 0);",
          "149:   buffer.writeDoubleLE(-Infinity, 8);",
          "150:   ASSERT.equal(0xFF, buffer[0]);",
          "151:   ASSERT.equal(0xF0, buffer[1]);",
          "152:   ASSERT.equal(0x00, buffer[2]);",
          "153:   ASSERT.equal(0x00, buffer[3]);",
          "154:   ASSERT.equal(0x00, buffer[4]);",
          "155:   ASSERT.equal(0x00, buffer[5]);",
          "156:   ASSERT.equal(0x00, buffer[6]);",
          "157:   ASSERT.equal(0x00, buffer[7]);",
          "158:   ASSERT.equal(0x00, buffer[8]);",
          "159:   ASSERT.equal(0x00, buffer[9]);",
          "160:   ASSERT.equal(0x00, buffer[10]);",
          "161:   ASSERT.equal(0x00, buffer[11]);",
          "162:   ASSERT.equal(0x00, buffer[12]);",
          "163:   ASSERT.equal(0x00, buffer[13]);",
          "164:   ASSERT.equal(0xF0, buffer[14]);",
          "165:   ASSERT.equal(0xFF, buffer[15]);",
          "166:   ASSERT.equal(-Infinity, buffer.readDoubleBE(0));",
          "167:   ASSERT.equal(-Infinity, buffer.readDoubleLE(8));",
          "169:   buffer.writeDoubleBE(NaN, 0);",
          "170:   buffer.writeDoubleLE(NaN, 8);",
          "171:   ASSERT.equal(0x7F, buffer[0]);",
          "172:   ASSERT.equal(0xF0, buffer[1]);",
          "173:   ASSERT.equal(0x00, buffer[2]);",
          "174:   ASSERT.equal(0x00, buffer[3]);",
          "175:   ASSERT.equal(0x00, buffer[4]);",
          "176:   ASSERT.equal(0x00, buffer[5]);",
          "177:   ASSERT.equal(0x00, buffer[6]);",
          "178:   ASSERT.equal(0x01, buffer[7]);",
          "179:   ASSERT.equal(0x01, buffer[8]);",
          "180:   ASSERT.equal(0x00, buffer[9]);",
          "181:   ASSERT.equal(0x00, buffer[10]);",
          "182:   ASSERT.equal(0x00, buffer[11]);",
          "183:   ASSERT.equal(0x00, buffer[12]);",
          "184:   ASSERT.equal(0x00, buffer[13]);",
          "185:   ASSERT.equal(0xF0, buffer[14]);",
          "186:   ASSERT.equal(0x7F, buffer[15]);",
          "187:   ASSERT.ok(isNaN(buffer.readDoubleBE(0)));",
          "188:   ASSERT.ok(isNaN(buffer.readDoubleLE(8)));",
          "",
          "---------------"
        ],
        "test/simple/test-writefloat.js||test/simple/test-writefloat.js": [
          "File: test/simple/test-writefloat.js -> test/simple/test-writefloat.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:   ASSERT.equal(0x00, buffer[5]);",
          "84:   ASSERT.equal(0x00, buffer[6]);",
          "85:   ASSERT.equal(0x80, buffer[7]);",
          "86: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:   buffer.writeFloatBE(Infinity, 0);",
          "88:   buffer.writeFloatLE(Infinity, 4);",
          "89:   ASSERT.equal(0x7F, buffer[0]);",
          "90:   ASSERT.equal(0x80, buffer[1]);",
          "91:   ASSERT.equal(0x00, buffer[2]);",
          "92:   ASSERT.equal(0x00, buffer[3]);",
          "93:   ASSERT.equal(0x00, buffer[4]);",
          "94:   ASSERT.equal(0x00, buffer[5]);",
          "95:   ASSERT.equal(0x80, buffer[6]);",
          "96:   ASSERT.equal(0x7F, buffer[7]);",
          "97:   ASSERT.equal(Infinity, buffer.readFloatBE(0));",
          "98:   ASSERT.equal(Infinity, buffer.readFloatLE(4));",
          "100:   buffer.writeFloatBE(-Infinity, 0);",
          "101:   buffer.writeFloatLE(-Infinity, 4);",
          "102:   ASSERT.equal(0xFF, buffer[0]);",
          "103:   ASSERT.equal(0x80, buffer[1]);",
          "104:   ASSERT.equal(0x00, buffer[2]);",
          "105:   ASSERT.equal(0x00, buffer[3]);",
          "106:   ASSERT.equal(0x00, buffer[4]);",
          "107:   ASSERT.equal(0x00, buffer[5]);",
          "108:   ASSERT.equal(0x80, buffer[6]);",
          "109:   ASSERT.equal(0xFF, buffer[7]);",
          "110:   ASSERT.equal(-Infinity, buffer.readFloatBE(0));",
          "111:   ASSERT.equal(-Infinity, buffer.readFloatLE(4));",
          "113:   buffer.writeFloatBE(NaN, 0);",
          "114:   buffer.writeFloatLE(NaN, 4);",
          "115:   ASSERT.equal(0x7F, buffer[0]);",
          "116:   ASSERT.equal(0x80, buffer[1]);",
          "117:   ASSERT.equal(0x00, buffer[2]);",
          "118:   ASSERT.equal(0x01, buffer[3]);",
          "119:   ASSERT.equal(0x01, buffer[4]);",
          "120:   ASSERT.equal(0x00, buffer[5]);",
          "121:   ASSERT.equal(0x80, buffer[6]);",
          "122:   ASSERT.equal(0x7F, buffer[7]);",
          "123:   ASSERT.ok(isNaN(buffer.readFloatBE(0)));",
          "124:   ASSERT.ok(isNaN(buffer.readFloatLE(4)));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "879d329a5a8d82d9c30e1439ff36accbf5d8a1e7",
      "candidate_info": {
        "commit_hash": "879d329a5a8d82d9c30e1439ff36accbf5d8a1e7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/879d329a5a8d82d9c30e1439ff36accbf5d8a1e7",
        "files": [
          "deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/src/unix/linux/inotify.c",
          "deps/uv/src/unix/loop.c",
          "deps/uv/src/unix/thread.c",
          "deps/uv/test/benchmark-sizes.c",
          "deps/uv/test/test-fs-event.c",
          "deps/uv/test/test-list.h"
        ],
        "message": "deps: upgrade libuv to 4fe1916",
        "before_after_code_files": [
          "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/src/unix/linux/inotify.c||deps/uv/src/unix/linux/inotify.c",
          "deps/uv/src/unix/loop.c||deps/uv/src/unix/loop.c",
          "deps/uv/src/unix/thread.c||deps/uv/src/unix/thread.c",
          "deps/uv/test/benchmark-sizes.c||deps/uv/test/benchmark-sizes.c",
          "deps/uv/test/test-fs-event.c||deps/uv/test/test-fs-event.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h": [
          "File: deps/uv/include/uv-private/uv-unix.h -> deps/uv/include/uv-private/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "106: #if __linux__",
          "107: # define UV_LOOP_PRIVATE_PLATFORM_FIELDS              \\",
          "112:   uv__io_t inotify_read_watcher;                      \\",
          "113:   int inotify_fd;",
          "114: #elif defined(PORT_SOURCE_FILE)",
          "115: # define UV_LOOP_PRIVATE_PLATFORM_FIELDS              \\",
          "",
          "[Removed Lines]",
          "109:   struct uv__inotify_watchers {                       \\",
          "110:     struct uv_fs_event_s* rbh_root;                   \\",
          "111:   } inotify_watchers;                                 \\",
          "",
          "[Added Lines]",
          "109:   void* inotify_watchers;                             \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "277: #if defined(__linux__)",
          "279: #define UV_FS_EVENT_PRIVATE_FIELDS    \\",
          "287:   uv_fs_event_cb cb;                  \\",
          "290: #elif defined(__APPLE__)  \\",
          "291:   || defined(__FreeBSD__) \\",
          "",
          "[Removed Lines]",
          "281:   struct {                            \\",
          "282:     struct uv_fs_event_s* rbe_left;   \\",
          "283:     struct uv_fs_event_s* rbe_right;  \\",
          "284:     struct uv_fs_event_s* rbe_parent; \\",
          "285:     int rbe_color;                    \\",
          "286:   } node;                             \\",
          "288:   int fd;                             \\",
          "",
          "[Added Lines]",
          "277:   ngx_queue_t watchers;               \\",
          "279:   int wd;                             \\",
          "280:   void* pad0;                         \\",
          "281:   void* pad1;                         \\",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/linux/inotify.c||deps/uv/src/unix/linux/inotify.c": [
          "File: deps/uv/src/unix/linux/inotify.c -> deps/uv/src/unix/linux/inotify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include <sys/types.h>",
          "34: #include <unistd.h>",
          "38: static char* basename_r(const char* path) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: struct watcher_list {",
          "37:   RB_ENTRY(watcher_list) entry;",
          "38:   ngx_queue_t watchers;",
          "39:   char* path;",
          "40:   int wd;",
          "41: };",
          "43: struct watcher_root {",
          "44:   struct watcher_list* rbh_root;",
          "45: };",
          "46: #define CAST(p) ((struct watcher_root*)(p))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41: }",
          "47:   return 0;",
          "48: }",
          "54: static void uv__inotify_read(uv_loop_t* loop, uv__io_t* w, int revents);",
          "",
          "[Removed Lines]",
          "44: static int compare_watchers(const uv_fs_event_t* a, const uv_fs_event_t* b) {",
          "45:   if (a->fd < b->fd) return -1;",
          "46:   if (a->fd > b->fd) return 1;",
          "51: RB_GENERATE_STATIC(uv__inotify_watchers, uv_fs_event_s, node, compare_watchers)",
          "",
          "[Added Lines]",
          "56: static int compare_watchers(const struct watcher_list* a,",
          "57:                             const struct watcher_list* b) {",
          "58:   if (a->wd < b->wd) return -1;",
          "59:   if (a->wd > b->wd) return 1;",
          "64: RB_GENERATE_STATIC(watcher_root, watcher_list, entry, compare_watchers)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "95: }",
          "112: }",
          "116:   const struct uv__inotify_event* e;",
          "119:   ssize_t size;",
          "120:   const char *p;",
          "122:   char buf[4096];",
          "124:   while (1) {",
          "128:     while (size == -1 && errno == EINTR);",
          "130:     if (size == -1) {",
          "",
          "[Removed Lines]",
          "98: static void add_watcher(uv_fs_event_t* handle) {",
          "99:   RB_INSERT(uv__inotify_watchers, &handle->loop->inotify_watchers, handle);",
          "100: }",
          "103: static uv_fs_event_t* find_watcher(uv_loop_t* loop, int wd) {",
          "104:   uv_fs_event_t handle;",
          "105:   handle.fd = wd;",
          "106:   return RB_FIND(uv__inotify_watchers, &loop->inotify_watchers, &handle);",
          "107: }",
          "110: static void remove_watcher(uv_fs_event_t* handle) {",
          "111:   RB_REMOVE(uv__inotify_watchers, &handle->loop->inotify_watchers, handle);",
          "115: static void uv__inotify_read(uv_loop_t* loop, uv__io_t* w, int events) {",
          "117:   uv_fs_event_t* handle;",
          "118:   const char* filename;",
          "125:     do {",
          "126:       size = read(loop->inotify_fd, buf, sizeof buf);",
          "127:     }",
          "",
          "[Added Lines]",
          "111: static struct watcher_list* find_watcher(uv_loop_t* loop, int wd) {",
          "112:   struct watcher_list w;",
          "113:   w.wd = wd;",
          "114:   return RB_FIND(watcher_root, CAST(&loop->inotify_watchers), &w);",
          "118: static void uv__inotify_read(uv_loop_t* loop, uv__io_t* dummy, int events) {",
          "120:   struct watcher_list* w;",
          "121:   uv_fs_event_t* h;",
          "122:   ngx_queue_t* q;",
          "123:   const char* path;",
          "130:     do",
          "131:       size = read(loop->inotify_fd, buf, sizeof(buf));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "144:       if (e->mask & ~(UV__IN_ATTRIB|UV__IN_MODIFY))",
          "145:         events |= UV_RENAME;",
          "158:     }",
          "159:   }",
          "160: }",
          "",
          "[Removed Lines]",
          "147:       handle = find_watcher(loop, e->wd);",
          "148:       if (handle == NULL)",
          "155:       filename = e->len ? (const char*) (e + 1) : basename_r(handle->filename);",
          "157:       handle->cb(handle, filename, events, 0);",
          "",
          "[Added Lines]",
          "151:       w = find_watcher(loop, e->wd);",
          "152:       if (w == NULL)",
          "159:       path = e->len ? (const char*) (e + 1) : basename_r(w->path);",
          "161:       ngx_queue_foreach(q, &w->watchers) {",
          "162:         h = ngx_queue_data(q, uv_fs_event_t, watchers);",
          "163:         h->cb(h, path, events, 0);",
          "164:       }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "163: int uv_fs_event_init(uv_loop_t* loop,",
          "164:                      uv_fs_event_t* handle,",
          "166:                      uv_fs_event_cb cb,",
          "167:                      int flags) {",
          "168:   int events;",
          "169:   int wd;",
          "",
          "[Removed Lines]",
          "165:                      const char* filename,",
          "",
          "[Added Lines]",
          "172:                      const char* path,",
          "175:   struct watcher_list* w;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "184:          | UV__IN_MOVED_FROM",
          "185:          | UV__IN_MOVED_TO;",
          "190:   uv__handle_init(loop, (uv_handle_t*)handle, UV_FS_EVENT);",
          "193:   handle->cb = cb;",
          "197:   return 0;",
          "198: }",
          "201: void uv__fs_event_close(uv_fs_event_t* handle) {",
          "207:   handle->filename = NULL;",
          "208:   uv__handle_stop(handle);",
          "209: }",
          "",
          "[Removed Lines]",
          "187:   wd = uv__inotify_add_watch(loop->inotify_fd, filename, events);",
          "188:   if (wd == -1) return uv__set_sys_error(loop, errno);",
          "192:   handle->filename = strdup(filename);",
          "194:   handle->fd = wd;",
          "195:   add_watcher(handle);",
          "202:   uv__inotify_rm_watch(handle->loop->inotify_fd, handle->fd);",
          "203:   remove_watcher(handle);",
          "204:   handle->fd = -1;",
          "206:   free(handle->filename);",
          "",
          "[Added Lines]",
          "195:   wd = uv__inotify_add_watch(loop->inotify_fd, path, events);",
          "196:   if (wd == -1)",
          "197:     return uv__set_sys_error(loop, errno);",
          "199:   w = find_watcher(loop, wd);",
          "200:   if (w)",
          "201:     goto no_insert;",
          "203:   w = malloc(sizeof(*w) + strlen(path) + 1);",
          "204:   if (w == NULL)",
          "205:     return uv__set_sys_error(loop, ENOMEM);",
          "207:   w->wd = wd;",
          "208:   w->path = strcpy((char*)(w + 1), path);",
          "209:   ngx_queue_init(&w->watchers);",
          "210:   RB_INSERT(watcher_root, CAST(&loop->inotify_watchers), w);",
          "212: no_insert:",
          "215:   ngx_queue_insert_tail(&w->watchers, &handle->watchers);",
          "216:   handle->filename = w->path;",
          "218:   handle->wd = wd;",
          "225:   struct watcher_list* w;",
          "227:   w = find_watcher(handle->loop, handle->wd);",
          "228:   assert(w != NULL);",
          "230:   handle->wd = -1;",
          "233:   ngx_queue_remove(&handle->watchers);",
          "235:   if (ngx_queue_empty(&w->watchers)) {",
          "237:     RB_REMOVE(watcher_root, CAST(&handle->loop->inotify_watchers), w);",
          "238:     uv__inotify_rm_watch(handle->loop->inotify_fd, w->wd);",
          "239:     free(w);",
          "240:   }",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/loop.c||deps/uv/src/unix/loop.c": [
          "File: deps/uv/src/unix/loop.c -> deps/uv/src/unix/loop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:   eio_channel_init(&loop->uv_eio_channel, loop);",
          "56: #if __linux__",
          "58:   loop->inotify_fd = -1;",
          "59: #endif",
          "60: #if HAVE_PORTS_FS",
          "",
          "[Removed Lines]",
          "57:   RB_INIT(&loop->inotify_watchers);",
          "",
          "[Added Lines]",
          "57:   loop->inotify_watchers = NULL;",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/thread.c||deps/uv/src/unix/thread.c": [
          "File: deps/uv/src/unix/thread.c -> deps/uv/src/unix/thread.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:   r = pthread_mutex_trylock(mutex);",
          "82:     abort();",
          "84:   if (r)",
          "",
          "[Removed Lines]",
          "81:   if (r && r != EAGAIN)",
          "",
          "[Added Lines]",
          "81:   if (r && r != EBUSY && r != EAGAIN)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:   r = pthread_rwlock_tryrdlock(rwlock);",
          "123:     abort();",
          "125:   if (r)",
          "",
          "[Removed Lines]",
          "122:   if (r && r != EAGAIN)",
          "",
          "[Added Lines]",
          "122:   if (r && r != EBUSY && r != EAGAIN)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "147:   r = pthread_rwlock_trywrlock(rwlock);",
          "150:     abort();",
          "152:   if (r)",
          "",
          "[Removed Lines]",
          "149:   if (r && r != EAGAIN)",
          "",
          "[Added Lines]",
          "149:   if (r && r != EBUSY && r != EAGAIN)",
          "",
          "---------------"
        ],
        "deps/uv/test/benchmark-sizes.c||deps/uv/test/benchmark-sizes.c": [
          "File: deps/uv/test/benchmark-sizes.c -> deps/uv/test/benchmark-sizes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:   LOGF(\"uv_idle_t: %u bytes\\n\", (unsigned int) sizeof(uv_idle_t));",
          "37:   LOGF(\"uv_async_t: %u bytes\\n\", (unsigned int) sizeof(uv_async_t));",
          "38:   LOGF(\"uv_timer_t: %u bytes\\n\", (unsigned int) sizeof(uv_timer_t));",
          "39:   LOGF(\"uv_process_t: %u bytes\\n\", (unsigned int) sizeof(uv_process_t));",
          "40:   LOGF(\"uv_poll_t: %u bytes\\n\", (unsigned int) sizeof(uv_poll_t));",
          "41:   return 0;",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:   LOGF(\"uv_fs_event_t: %u bytes\\n\", (unsigned int) sizeof(uv_fs_event_t));",
          "42:   LOGF(\"uv_loop_t: %u bytes\\n\", (unsigned int) sizeof(uv_loop_t));",
          "",
          "---------------"
        ],
        "deps/uv/test/test-fs-event.c||deps/uv/test/test-fs-event.c": [
          "File: deps/uv/test/test-fs-event.c -> deps/uv/test/test-fs-event.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:   close_cb_called++;",
          "86: }",
          "88: static void fs_event_cb_dir(uv_fs_event_t* handle, const char* filename,",
          "89:   int events, int status) {",
          "90:   ++fs_event_cb_called;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88: static void fail_cb(uv_fs_event_t* handle,",
          "89:                     const char* path,",
          "90:                     int events,",
          "91:                     int status) {",
          "92:   ASSERT(0 && \"fail_cb called\");",
          "93: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:   timer_cb_touch_called++;",
          "160: }",
          "162: TEST_IMPL(fs_event_watch_dir) {",
          "163:   uv_fs_t fs_req;",
          "164:   uv_loop_t* loop = uv_default_loop();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "169: static void timer_cb_watch_twice(uv_timer_t* handle, int status) {",
          "170:   uv_fs_event_t* handles = handle->data;",
          "171:   uv_close((uv_handle_t*) (handles + 0), NULL);",
          "172:   uv_close((uv_handle_t*) (handles + 1), NULL);",
          "173:   uv_close((uv_handle_t*) handle, NULL);",
          "174: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225:   return 0;",
          "226: }",
          "228: TEST_IMPL(fs_event_watch_file_current_dir) {",
          "229:   uv_timer_t timer;",
          "230:   uv_loop_t* loop;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242: TEST_IMPL(fs_event_watch_file_twice) {",
          "243:   const char path[] = \"test/fixtures/empty_file\";",
          "244:   uv_fs_event_t watchers[2];",
          "245:   uv_timer_t timer;",
          "246:   uv_loop_t* loop;",
          "248:   loop = uv_default_loop();",
          "249:   timer.data = watchers;",
          "251:   ASSERT(0 == uv_fs_event_init(loop, watchers + 0, path, fail_cb, 0));",
          "252:   ASSERT(0 == uv_fs_event_init(loop, watchers + 1, path, fail_cb, 0));",
          "253:   ASSERT(0 == uv_timer_init(loop, &timer));",
          "254:   ASSERT(0 == uv_timer_start(&timer, timer_cb_watch_twice, 10, 0));",
          "255:   ASSERT(0 == uv_run(loop));",
          "257:   return 0;",
          "258: }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "158: TEST_DECLARE   (fs_read_file_eof)",
          "159: TEST_DECLARE   (fs_event_watch_dir)",
          "160: TEST_DECLARE   (fs_event_watch_file)",
          "161: TEST_DECLARE   (fs_event_watch_file_current_dir)",
          "162: TEST_DECLARE   (fs_event_no_callback_on_close)",
          "163: TEST_DECLARE   (fs_event_immediate_close)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161: TEST_DECLARE   (fs_event_watch_file_twice)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "396:   TEST_ENTRY  (fs_file_open_append)",
          "397:   TEST_ENTRY  (fs_event_watch_dir)",
          "398:   TEST_ENTRY  (fs_event_watch_file)",
          "399:   TEST_ENTRY  (fs_event_watch_file_current_dir)",
          "400:   TEST_ENTRY  (fs_event_no_callback_on_close)",
          "401:   TEST_ENTRY  (fs_event_immediate_close)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "400:   TEST_ENTRY  (fs_event_watch_file_twice)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bab59f33e7e51a17771f6236aa236687f8ab899f",
      "candidate_info": {
        "commit_hash": "bab59f33e7e51a17771f6236aa236687f8ab899f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/bab59f33e7e51a17771f6236aa236687f8ab899f",
        "files": [
          "deps/uv/src/unix/kqueue.c"
        ],
        "message": "uv: upgrade to 0459097",
        "before_after_code_files": [
          "deps/uv/src/unix/kqueue.c||deps/uv/src/unix/kqueue.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/unix/kqueue.c||deps/uv/src/unix/kqueue.c": [
          "File: deps/uv/src/unix/kqueue.c -> deps/uv/src/unix/kqueue.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:   handle->cb(handle, NULL, events, 0);",
          "77: }",
          "",
          "[Removed Lines]",
          "72:   uv__fs_event_stop(handle);",
          "75:   if (handle->fd != -1)",
          "76:     uv__fs_event_start(handle);",
          "",
          "[Added Lines]",
          "72:   if (handle->fd == -1)",
          "73:     return;",
          "76:   uv__fs_event_stop(handle);",
          "77:   uv__fs_event_start(handle);",
          "",
          "---------------"
        ]
      }
    }
  ]
}