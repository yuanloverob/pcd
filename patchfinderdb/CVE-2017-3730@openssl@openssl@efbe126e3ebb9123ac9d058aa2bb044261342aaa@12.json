{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ac162301b45a7458ced227437922141c692383ae",
      "candidate_info": {
        "commit_hash": "ac162301b45a7458ced227437922141c692383ae",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ac162301b45a7458ced227437922141c692383ae",
        "files": [
          "ssl/ssl_lib.c",
          "ssl/ssl_locl.h",
          "ssl/statem/statem_srvr.c",
          "ssl/t1_lib.c"
        ],
        "message": "Majority rules, use session_ctx vs initial_ctx\n\nsession_ctx and initial_ctx are aliases of each other, and with the\nopaque data structures, there's no need to keep both around. Since\nthere were more references of session_ctx, replace all instances of\ninitial_ctx with session_ctx.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2340)",
        "before_after_code_files": [
          "ssl/ssl_lib.c||ssl/ssl_lib.c",
          "ssl/ssl_locl.h||ssl/ssl_locl.h",
          "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c",
          "ssl/t1_lib.c||ssl/t1_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_lib.c||ssl/ssl_lib.c": [
          "File: ssl/ssl_lib.c -> ssl/ssl_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "600:     s->tlsext_ocsp_resp = NULL;",
          "601:     s->tlsext_ocsp_resplen = -1;",
          "602:     SSL_CTX_up_ref(ctx);",
          "604: #ifndef OPENSSL_NO_EC",
          "605:     if (ctx->tlsext_ecpointformatlist) {",
          "606:         s->tlsext_ecpointformatlist =",
          "",
          "[Removed Lines]",
          "603:     s->initial_ctx = ctx;",
          "",
          "[Added Lines]",
          "603:     s->session_ctx = ctx;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1001:     OPENSSL_free(s->tlsext_hostname);",
          "1003: #ifndef OPENSSL_NO_EC",
          "1004:     OPENSSL_free(s->tlsext_ecpointformatlist);",
          "1005:     OPENSSL_free(s->tlsext_ellipticcurvelist);",
          "",
          "[Removed Lines]",
          "1002:     SSL_CTX_free(s->initial_ctx);",
          "",
          "[Added Lines]",
          "1002:     SSL_CTX_free(s->session_ctx);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3380:     if (ssl->ctx == ctx)",
          "3381:         return ssl->ctx;",
          "3382:     if (ctx == NULL)",
          "3384:     new_cert = ssl_cert_dup(ctx->cert);",
          "3385:     if (new_cert == NULL) {",
          "3386:         return NULL;",
          "",
          "[Removed Lines]",
          "3383:         ctx = ssl->initial_ctx;",
          "",
          "[Added Lines]",
          "3383:         ctx = ssl->session_ctx;",
          "",
          "---------------"
        ],
        "ssl/ssl_locl.h||ssl/ssl_locl.h": [
          "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1089:     unsigned char *next_proto_negotiated;",
          "1090:     unsigned char next_proto_negotiated_len;",
          "1091: # endif",
          "1094:     STACK_OF(SRTP_PROTECTION_PROFILE) *srtp_profiles;",
          "",
          "[Removed Lines]",
          "1092: # define session_ctx initial_ctx",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c": [
          "File: ssl/statem/statem_srvr.c -> ssl/statem/statem_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2992:     int len, slen_full, slen;",
          "2993:     SSL_SESSION *sess;",
          "2994:     unsigned int hlen;",
          "2996:     unsigned char iv[EVP_MAX_IV_LENGTH];",
          "2997:     unsigned char key_name[TLSEXT_KEYNAME_LENGTH];",
          "2998:     int iv_len;",
          "",
          "[Removed Lines]",
          "2995:     SSL_CTX *tctx = s->initial_ctx;",
          "",
          "[Added Lines]",
          "2995:     SSL_CTX *tctx = s->session_ctx;",
          "",
          "---------------"
        ],
        "ssl/t1_lib.c||ssl/t1_lib.c": [
          "File: ssl/t1_lib.c -> ssl/t1_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2684:         ret =",
          "2685:             s->ctx->tlsext_servername_callback(s, &al,",
          "2686:                                                s->ctx->tlsext_servername_arg);",
          "2689:         ret =",
          "2691:                                                        s->",
          "2694:     switch (ret) {",
          "2695:     case SSL_TLSEXT_ERR_ALERT_FATAL:",
          "",
          "[Removed Lines]",
          "2687:     else if (s->initial_ctx != NULL",
          "2688:              && s->initial_ctx->tlsext_servername_callback != 0)",
          "2690:             s->initial_ctx->tlsext_servername_callback(s, &al,",
          "2692:                                                        initial_ctx->tlsext_servername_arg);",
          "",
          "[Added Lines]",
          "2687:     else if (s->session_ctx != NULL",
          "2688:              && s->session_ctx->tlsext_servername_callback != 0)",
          "2690:             s->session_ctx->tlsext_servername_callback(s, &al,",
          "2692:                                                        session_ctx->tlsext_servername_arg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2863:         ret =",
          "2864:             s->ctx->tlsext_servername_callback(s, &al,",
          "2865:                                                s->ctx->tlsext_servername_arg);",
          "2868:         ret =",
          "2870:                                                        s->",
          "",
          "[Removed Lines]",
          "2866:     else if (s->initial_ctx != NULL",
          "2867:              && s->initial_ctx->tlsext_servername_callback != 0)",
          "2869:             s->initial_ctx->tlsext_servername_callback(s, &al,",
          "2871:                                                        initial_ctx->tlsext_servername_arg);",
          "",
          "[Added Lines]",
          "2866:     else if (s->session_ctx != NULL",
          "2867:              && s->session_ctx->tlsext_servername_callback != 0)",
          "2869:             s->session_ctx->tlsext_servername_callback(s, &al,",
          "2871:                                                        session_ctx->tlsext_servername_arg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3084:     unsigned char tick_hmac[EVP_MAX_MD_SIZE];",
          "3085:     HMAC_CTX *hctx = NULL;",
          "3086:     EVP_CIPHER_CTX *ctx;",
          "3090:     hctx = HMAC_CTX_new();",
          "",
          "[Removed Lines]",
          "3087:     SSL_CTX *tctx = s->initial_ctx;",
          "",
          "[Added Lines]",
          "3087:     SSL_CTX *tctx = s->session_ctx;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cade326432099f60c08a8004ce694eedcd5c500b",
      "candidate_info": {
        "commit_hash": "cade326432099f60c08a8004ce694eedcd5c500b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/cade326432099f60c08a8004ce694eedcd5c500b",
        "files": [
          "util/build.info",
          "util/shareable_image_wrap.c.in"
        ],
        "message": "VMS: add [.util]shlib_wrap.exe and its build instructions\n\nThis is a program for VMS that corresponds to util/shlib_wrap.sh.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit f3ff481f318b10a223d6157bde9645e1797487c5)",
        "before_after_code_files": [
          "util/build.info||util/build.info",
          "util/shareable_image_wrap.c.in||util/shareable_image_wrap.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/build.info||util/build.info": [
          "File: util/build.info -> util/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: SCRIPTS_NO_INST=shlib_wrap.sh",
          "2: SOURCE[shlib_wrap.sh]=shlib_wrap.sh.in",
          "",
          "[Added Lines]",
          "1: IF[{- $target{build_scheme}->[1] eq \"VMS\" -}]",
          "2:  PROGRAMS_NO_INST=shlib_wrap",
          "3:  SOURCE[shlib_wrap]=shareable_image_wrap.c",
          "4:  GENERATE[shareable_image_wrap.c]=shareable_image_wrap.c.in",
          "5: ELSIF[{- $target{build_scheme}->[1] eq \"unix\" -}]",
          "6:  SCRIPTS_NO_INST=shlib_wrap.sh",
          "7:  SOURCE[shlib_wrap.sh]=shlib_wrap.sh.in",
          "8: ENDIF",
          "",
          "---------------"
        ],
        "util/shareable_image_wrap.c.in||util/shareable_image_wrap.c.in": [
          "File: util/shareable_image_wrap.c.in -> util/shareable_image_wrap.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #ifndef __VMS",
          "20: # error \"VMS ONLY!\"",
          "21: #endif",
          "23: #include <stdio.h>",
          "24: #include <descrip.h>",
          "25: #include <ssdef.h>",
          "26: #include <lib$routines.h>",
          "27: {-",
          "28:     use File::Spec::Functions qw(rel2abs);",
          "29:     our $sv = sprintf \"%02d%02d\", $config{shlib_major}, $config{shlib_minor};",
          "30:     our $pz = $config{pointer_size};",
          "31:     our $bldd = rel2abs($config{builddir});",
          "32:     \"\"",
          "33: -}",
          "35: $DESCRIPTOR(lnm_process_table, \"LNM$PROCESS_TABLE\");",
          "40: const $DESCRIPTOR(lnm1, \"OSSL$LIBCRYPTO{- $sv -}_SHR{- $pz -}\");",
          "41: char lnm1oldbuf[256]; short lnm1oldlen = 0;",
          "42: $DESCRIPTOR(lnm1old, lnm1oldbuf);",
          "43: const $DESCRIPTOR(lnm1new, \"{- $bldd -}OSSL$LIBCRYPTO{- $sv -}_SHR{- $pz -}.EXE\");",
          "48: const $DESCRIPTOR(lnm2, \"OSSL$LIBSSL{- $sv -}_SHR{- $pz -}\");",
          "49: char lnm2oldbuf[256]; short lnm2oldlen = 0;",
          "50: $DESCRIPTOR(lnm2old, lnm2oldbuf);",
          "51: const $DESCRIPTOR(lnm2new, \"{- $bldd -}OSSL$LIBSSL{- $sv -}_SHR{- $pz -}.EXE\");",
          "56: char foreign_cmd_buf[4096]; short foreign_cmd_len = 0;",
          "57: $DESCRIPTOR(foreign_cmd, foreign_cmd_buf);",
          "59: int main()",
          "60: {",
          "61:     int status = 0;",
          "62:     int lnm1status = 0, lnm2status = 0;",
          "68:     lib$get_foreign(&foreign_cmd, 0, &foreign_cmd_len);",
          "69:     foreign_cmd.dsc$w_length = foreign_cmd_len;",
          "71: #ifdef DEBUG",
          "72:     foreign_cmd_buf[foreign_cmd_len] = '\\0';",
          "73:     printf(\"[%d] %s\\n\\n\", foreign_cmd_len, foreign_cmd_buf);",
          "74: #endif",
          "77:     lnm1status = lib$get_logical(&lnm1, &lnm1old, &lnm1oldlen,",
          "78:                                  &lnm_process_table);",
          "79:     if (lnm1status == SS$_NORMAL)",
          "80:         lnm1old.dsc$w_length = lnm1oldlen;",
          "81:     else if (lnm1status != SS$_NOLOGNAM)",
          "82:         return lnm1status;",
          "85:     lnm2status = lib$get_logical(&lnm2, &lnm2old, &lnm2oldlen,",
          "86:                                  &lnm_process_table);",
          "87:     if (lnm2status == SS$_NORMAL)",
          "88:         lnm2old.dsc$w_length = lnm2oldlen;",
          "89:     else if (lnm2status != SS$_NOLOGNAM)",
          "90:         return lnm2status;",
          "93:     lib$set_logical(&lnm1, &lnm1new, &lnm_process_table);",
          "94:     lib$set_logical(&lnm2, &lnm2new, &lnm_process_table);",
          "97:     status = lib$spawn(&foreign_cmd);",
          "102:     if (lnm1status == SS$_NORMAL)",
          "103:         lib$set_logical(&lnm1, &lnm1old, &lnm_process_table);",
          "104:     else",
          "105:         lib$delete_logical(&lnm1, &lnm_process_table);",
          "106:     if (lnm2status == SS$_NORMAL)",
          "107:         lib$set_logical(&lnm2, &lnm2old, &lnm_process_table);",
          "108:     else",
          "109:         lib$delete_logical(&lnm2, &lnm_process_table);",
          "112:     return status;",
          "113: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2abbe94828351178220b7e284504cfb5eb1dabbb",
      "candidate_info": {
        "commit_hash": "2abbe94828351178220b7e284504cfb5eb1dabbb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2abbe94828351178220b7e284504cfb5eb1dabbb",
        "files": [
          "Configurations/10-main.conf"
        ],
        "message": "Finally, make sure vms_term_sock.c is built on VMS\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit d602c2b680aefd3e0d00d090783ef5f912caf06a)",
        "before_after_code_files": [
          "Configurations/10-main.conf||Configurations/10-main.conf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/10-main.conf||Configurations/10-main.conf": [
          "File: Configurations/10-main.conf -> Configurations/10-main.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1755:         dso_scheme       => \"vms\",",
          "1756:         thread_scheme    => \"pthreads\",",
          "1759:     },",
          "1761:     \"vms-alpha\" => {",
          "",
          "[Removed Lines]",
          "1758:         apps_aux_src     => \"vms_decc_init.c\",",
          "",
          "[Added Lines]",
          "1758:         apps_aux_src     => \"vms_decc_init.c vms_term_sock.c\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6bc3bcb34946933bf14c7d8df3cc646f5f977160",
      "candidate_info": {
        "commit_hash": "6bc3bcb34946933bf14c7d8df3cc646f5f977160",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6bc3bcb34946933bf14c7d8df3cc646f5f977160",
        "files": [
          "util/TLSProxy/Message.pm"
        ],
        "message": "Fix a bug in TLSProxy where zero length messages were not being recorded\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1983)",
        "before_after_code_files": [
          "util/TLSProxy/Message.pm||util/TLSProxy/Message.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/TLSProxy/Message.pm||util/TLSProxy/Message.pm": [
          "File: util/TLSProxy/Message.pm -> util/TLSProxy/Message.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:                 $recoffset += 4;",
          "172:                 $payload = \"\";",
          "175:                     #Some payload data is present in this record",
          "176:                     if ($record->decrypt_len - $recoffset >= $messlen) {",
          "177:                         #We can complete the message with this record",
          "",
          "[Removed Lines]",
          "174:                 if ($recoffset < $record->decrypt_len) {",
          "",
          "[Added Lines]",
          "174:                 if ($recoffset <= $record->decrypt_len) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d57569388379c72271a0703e68a5eaffa7ffebca",
      "candidate_info": {
        "commit_hash": "d57569388379c72271a0703e68a5eaffa7ffebca",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d57569388379c72271a0703e68a5eaffa7ffebca",
        "files": [
          "demos/bio/accept.cnf"
        ],
        "message": "Fixup BIO demos for OpenSSL 1.1.x\n\n'ECDHParameters = Automatic' isn't accepted.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 3656ea1c2217f38d44f3f34253e7c16f1b40ba77)",
        "before_after_code_files": [
          "demos/bio/accept.cnf||demos/bio/accept.cnf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "demos/bio/accept.cnf||demos/bio/accept.cnf": [
          "File: demos/bio/accept.cnf -> demos/bio/accept.cnf",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: # Protocol = ALL, -TLSv1.2",
          "6: # Only support 3 curves",
          "7: Curves = P-521:P-384:P-256",
          "10: # Restricted signature algorithms",
          "11: SignatureAlgorithms = RSA+SHA512:ECDSA+SHA512",
          "12: Certificate=server.pem",
          "",
          "[Removed Lines]",
          "8: # Automatic curve selection",
          "9: ECDHParameters = Automatic",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}