{
  "cve_id": "CVE-2010-0011",
  "cve_desc": "The eval_js function in uzbl-core.c in Uzbl before 2010.01.05 exposes the run method of the Uzbl object, which allows remote attackers to execute arbitrary commands via JavaScript code.",
  "repo": "Dieterbe/uzbl",
  "patch_hash": "1958b52d41cba96956dc1995660de49525ed1047",
  "patch_info": {
    "commit_hash": "1958b52d41cba96956dc1995660de49525ed1047",
    "repo": "Dieterbe/uzbl",
    "commit_url": "https://github.com/Dieterbe/uzbl/commit/1958b52d41cba96956dc1995660de49525ed1047",
    "files": [
      "README",
      "tests/test-command.c",
      "uzbl-core.c"
    ],
    "message": "disable Uzbl javascript object because of security problem.",
    "before_after_code_files": [
      "tests/test-command.c||tests/test-command.c",
      "uzbl-core.c||uzbl-core.c"
    ]
  },
  "patch_diff": {
    "tests/test-command.c||tests/test-command.c": [
      "File: tests/test-command.c -> tests/test-command.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "305:     parse_cmd_line(\"js ('x' + 345).toUpperCase()\", result);",
      "306:     g_assert_cmpstr(\"X345\", ==, result->str);",
      "313:     g_string_free(result, TRUE);",
      "314: }",
      "",
      "[Removed Lines]",
      "309:     uzbl.net.useragent = \"Test useragent\";",
      "310:     parse_cmd_line(\"js Uzbl.run('print @useragent').toUpperCase();\", result);",
      "311:     g_assert_cmpstr(\"TEST USERAGENT\", ==, result->str);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "uzbl-core.c||uzbl-core.c": [
      "File: uzbl-core.c -> uzbl-core.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1046:     WebKitWebFrame *frame;",
      "1047:     JSGlobalContextRef context;",
      "1048:     JSObjectRef globalobject;",
      "1051:     JSStringRef js_script;",
      "1052:     JSValueRef js_result;",
      "",
      "[Removed Lines]",
      "1049:     JSStringRef var_name;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1059:     context = webkit_web_frame_get_global_context(frame);",
      "1060:     globalobject = JSContextGetGlobalObject(context);",
      "1069:     js_script = JSStringCreateWithUTF8CString(script);",
      "1070:     js_result = JSEvaluateScript(context, js_script, globalobject, NULL, 0, NULL);",
      "",
      "[Removed Lines]",
      "1063:     var_name = JSStringCreateWithUTF8CString(\"Uzbl\");",
      "1064:     JSObjectSetProperty(context, globalobject, var_name,",
      "1065:                         JSObjectMake(context, uzbl.js.classref, NULL),",
      "1066:                         kJSClassAttributeNone, NULL);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1082:     }",
      "1088:     JSStringRelease(js_script);",
      "1089: }",
      "",
      "[Removed Lines]",
      "1085:     JSObjectDeleteProperty(context, globalobject, var_name, NULL);",
      "1087:     JSStringRelease(var_name);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7ca43bde2de171f4378049dff54691542bf3b1e6",
      "candidate_info": {
        "commit_hash": "7ca43bde2de171f4378049dff54691542bf3b1e6",
        "repo": "Dieterbe/uzbl",
        "commit_url": "https://github.com/Dieterbe/uzbl/commit/7ca43bde2de171f4378049dff54691542bf3b1e6",
        "files": [
          "tests/test-command.c",
          "uzbl-core.c"
        ],
        "message": "expand arguments given to \"set *_handler\"",
        "before_after_code_files": [
          "tests/test-command.c||tests/test-command.c",
          "uzbl-core.c||uzbl-core.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/test-command.c||tests/test-command.c",
            "uzbl-core.c||uzbl-core.c"
          ],
          "candidate": [
            "tests/test-command.c||tests/test-command.c",
            "uzbl-core.c||uzbl-core.c"
          ]
        }
      },
      "candidate_diff": {
        "tests/test-command.c||tests/test-command.c": [
          "File: tests/test-command.c -> tests/test-command.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #define INSTANCE_NAME \"testing\"",
          "32: #define ASSERT_EVENT(EF, STR) { read_event(ef); \\",
          "33:     g_assert_cmpstr(\"EVENT [\" INSTANCE_NAME \"] \" STR \"\\n\", ==, ef->event_buffer); }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: gchar*",
          "33: assert_str_beginswith(GString *expected, gchar *actual) {",
          "34:     gchar *actual_beginning = g_strndup(actual, expected->len);",
          "35:     g_assert_cmpstr(expected->str, ==, actual_beginning);",
          "36:     g_free(actual_beginning);",
          "39:     return &actual[expected->len];",
          "40: }",
          "44: gchar*",
          "45: assert_sync_beginswith_stdarg() {",
          "46:     GString *stdargs = g_string_new(\"\");",
          "48:     g_string_append_printf(stdargs, \"%s %d %d \", uzbl.state.config_file, getpid(), (int)uzbl.xwin);",
          "49:     g_string_append_printf(stdargs, \"%s %s \", uzbl.comm.fifo_path, uzbl.comm.socket_path);",
          "50:     g_string_append_printf(stdargs, \"%s %s \", uzbl.state.uri, uzbl.gui.main_title);",
          "52:     gchar *rest = assert_str_beginswith(stdargs, uzbl.comm.sync_stdout);",
          "54:     g_string_free(stdargs, TRUE);",
          "56:     return rest;",
          "57: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:     ef->test_sock = socks[1];",
          "101:     GIOChannel *iochan = g_io_channel_unix_new(ef->uzbl_sock);",
          "102:     g_io_channel_set_encoding(iochan, NULL, NULL);",
          "",
          "[Removed Lines]",
          "99:     uzbl.comm.socket_path = \"/tmp/some-nonexistant-socket\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "267: test_sync_sh (void) {",
          "268:     parse_cmd_line(\"sync_sh 'echo Test echo.'\", NULL);",
          "269:     g_assert_cmpstr(\"Test echo.\\n\", ==, uzbl.comm.sync_stdout);",
          "270: }",
          "272: void",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "297:     uzbl.comm.sync_stdout = strfree(uzbl.comm.sync_stdout);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "285:     g_string_free(result, TRUE);",
          "286: }",
          "288: int",
          "289: main (int argc, char *argv[]) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "316: void",
          "317: test_run_handler_arg_order (void) {",
          "318:     run_handler(\"sync_spawn echo uvw xyz\", \"abc def\");",
          "320:     assert(uzbl.comm.sync_stdout);",
          "323:     gchar *rest = assert_sync_beginswith_stdarg();",
          "328:     g_assert_cmpstr(\"abc def uvw xyz\\n\", ==, rest);",
          "329: }",
          "331: void",
          "332: test_run_handler_expand (void) {",
          "333:     uzbl.gui.sbar.msg = \"Test message\";",
          "334:     run_handler(\"sync_spawn echo @status_message\", \"result:\");",
          "336:     assert(uzbl.comm.sync_stdout);",
          "339:     gchar *rest = assert_sync_beginswith_stdarg();",
          "343:     g_assert_cmpstr(\"result: Test message\\n\", ==, rest);",
          "344: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "302:     g_test_add_func(\"/test-command/js\",             test_js);",
          "305:     initialize(argc, argv);",
          "307:     uzbl.state.instance_name = INSTANCE_NAME;",
          "308:     uzbl.behave.shell_cmd = \"sh -c\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "364:     g_test_add_func(\"/test-command/run_handler/arg-order\",      test_run_handler_arg_order);",
          "365:     g_test_add_func(\"/test-command/run_handler/expand\",         test_run_handler_expand);",
          "370:     uzbl.state.config_file = \"/tmp/uzbl-config\";",
          "371:     uzbl.comm.fifo_path = \"/tmp/some-nonexistant-fifo\";",
          "372:     uzbl.comm.socket_path = \"/tmp/some-nonexistant-socket\";",
          "373:     uzbl.state.uri = \"http://example.org/\";",
          "374:     uzbl.gui.main_title = \"Example.Org\";",
          "",
          "---------------"
        ],
        "uzbl-core.c||uzbl-core.c": [
          "File: uzbl-core.c -> uzbl-core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2051:         g_strfreev(chainparts);",
          "2053:     } else {",
          "2055:         parse_command(inparts[0], inparts[1], NULL);",
          "2056:         g_free(inparts[0]);",
          "2057:         g_free(inparts[1]);",
          "2058:     }",
          "2059:     g_strfreev(parts);",
          "2060: }",
          "",
          "[Removed Lines]",
          "2054:         gchar **inparts = inject_handler_args(parts[0], parts[1], args);",
          "",
          "[Added Lines]",
          "2055:         gchar* expanded = expand(parts[1], 0);",
          "2056:         gchar **inparts = inject_handler_args(parts[0], expanded, args);",
          "2062:         g_free(expanded);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "00fbb3b2a6301e9694386480e44eaad4f59ee83c",
      "candidate_info": {
        "commit_hash": "00fbb3b2a6301e9694386480e44eaad4f59ee83c",
        "repo": "Dieterbe/uzbl",
        "commit_url": "https://github.com/Dieterbe/uzbl/commit/00fbb3b2a6301e9694386480e44eaad4f59ee83c",
        "files": [
          ".gitignore",
          "Makefile",
          "tests/Makefile",
          "tests/test-1.c",
          "uzbl.c",
          "uzbl.h"
        ],
        "message": "Preliminary uzbl testing framework - props to bct for the help",
        "before_after_code_files": [
          "tests/test-1.c||tests/test-1.c",
          "uzbl.c||uzbl.c",
          "uzbl.h||uzbl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/test-1.c||tests/test-1.c": [
          "File: tests/test-1.c -> tests/test-1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #define _POSIX_SOURCE",
          "4: #include <gtk/gtk.h>",
          "5: #include <gdk/gdkx.h>",
          "6: #include <gdk/gdkkeysyms.h>",
          "7: #include <sys/socket.h>",
          "8: #include <sys/stat.h>",
          "9: #include <sys/types.h>",
          "10: #include <sys/un.h>",
          "11: #include <sys/utsname.h>",
          "12: #include <sys/time.h>",
          "13: #include <webkit/webkit.h>",
          "14: #include <libsoup/soup.h>",
          "16: #include <stdio.h>",
          "17: #include <string.h>",
          "18: #include <unistd.h>",
          "19: #include <stdlib.h>",
          "20: #include <errno.h>",
          "21: #include <fcntl.h>",
          "22: #include <signal.h>",
          "24: #include <uzbl.h>",
          "25: #include <config.h>",
          "27: Uzbl uzbl;",
          "29: static void",
          "30: test_URI (void) {",
          "31:     setup_scanner();",
          "32:     uzbl.state.uri = g_strdup(\"http://www.uzbl.org\");",
          "33:     g_assert_cmpstr(expand_template(\"URI\", FALSE), ==, uzbl.state.uri);",
          "34:     g_free(uzbl.state.uri);",
          "35: }",
          "37: int",
          "38: main (int argc, char *argv[]) {",
          "39:     g_type_init();",
          "40:     g_test_init(&argc, &argv, NULL);",
          "42:     g_test_add_func(\"/test-1/URI\", test_URI);",
          "44:     return g_test_run();",
          "45: }",
          "",
          "---------------"
        ],
        "uzbl.c||uzbl.c": [
          "File: uzbl.c -> uzbl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "289:     return lines;",
          "290: }",
          "294:     extern char** environ;",
          "295:     gchar* tmpstr = NULL;",
          "296:     int i = 0;",
          "",
          "[Removed Lines]",
          "292: static",
          "293: gchar* parseenv (char* string) {",
          "",
          "[Added Lines]",
          "292: gchar*",
          "293: parseenv (char* string) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2047:     return g->mainbar;",
          "2048: }",
          "2052:     GtkWidget* window = gtk_window_new (GTK_WINDOW_TOPLEVEL);",
          "2053:     gtk_window_set_default_size (GTK_WINDOW (window), 800, 600);",
          "2054:     gtk_widget_set_name (window, \"Uzbl browser\");",
          "",
          "[Removed Lines]",
          "2050: static",
          "2051: GtkWidget* create_window () {",
          "",
          "[Added Lines]",
          "2050: GtkWidget*",
          "2051: create_window () {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2425:     g_hash_table_foreach(uzbl.bindings, dump_key_hash, NULL);",
          "2426: }",
          "2429: int",
          "2430: main (int argc, char* argv[]) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2428: #ifndef UZBL_LIBRARY",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2536:     return EXIT_SUCCESS;",
          "2537: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2539: #endif",
          "",
          "---------------"
        ],
        "uzbl.h||uzbl.h": [
          "File: uzbl.h -> uzbl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "217: };",
          "220: void",
          "221: setup_scanner();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "220: gchar *",
          "221: expand_template(const char *template, gboolean escape_markup);",
          "",
          "---------------"
        ]
      }
    }
  ]
}