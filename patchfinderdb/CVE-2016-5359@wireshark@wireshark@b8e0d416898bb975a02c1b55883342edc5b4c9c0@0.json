{
  "cve_id": "CVE-2016-5359",
  "cve_desc": "epan/dissectors/packet-wbxml.c in the WBXML dissector in Wireshark 1.12.x before 1.12.12 mishandles offsets, which allows remote attackers to cause a denial of service (integer overflow and infinite loop) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "b8e0d416898bb975a02c1b55883342edc5b4c9c0",
  "patch_info": {
    "commit_hash": "b8e0d416898bb975a02c1b55883342edc5b4c9c0",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/b8e0d416898bb975a02c1b55883342edc5b4c9c0",
    "files": [
      "epan/dissectors/packet-wbxml.c"
    ],
    "message": "WBXML: add a basic sanity check for offset overflow\n\nThis is a naive approach allowing to detact that something went wrong,\nwithout the need to replace all proto_tree_add_text() calls as what was\ndone in master-2.0 branch.\n\nBug: 12408\nChange-Id: Ia14905005e17ae322c2fc639ad5e491fa08b0108\nReviewed-on: https://code.wireshark.org/review/15310\nReviewed-by: Michael Mann <mmann78@netscape.net>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-wbxml.c||epan/dissectors/packet-wbxml.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-wbxml.c||epan/dissectors/packet-wbxml.c": [
      "File: epan/dissectors/packet-wbxml.c -> epan/dissectors/packet-wbxml.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "7304:     const wbxml_decoding *map)",
      "7305: {",
      "7306:  guint32     tvb_len  = tvb_reported_length (tvb);",
      "7308:  guint32     len;",
      "7309:  guint       str_len;",
      "7310:  guint32     ent;",
      "",
      "[Removed Lines]",
      "7307:  guint32     off      = offset;",
      "",
      "[Added Lines]",
      "7307:  guint32     off      = offset, last_off;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7325:  DebugLog((\"parse_wbxml_tag_defined (level = %u, offset = %u)\\n\", *level, offset));",
      "7326:  while (off < tvb_len) {",
      "7327:   peek = tvb_get_guint8 (tvb, off);",
      "7328:   DebugLog((\"STAG: (top of while) level = %3u, peek = 0x%02X, off = %u, tvb_len = %u\\n\", *level, peek, off, tvb_len));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7326:  last_off = off;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "7695:    }",
      "7698:  DebugLog((\"STAG: level = %u, Return: len = %u (end of function body)\\n\", *level, off - offset));",
      "7699:  return (off - offset);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7698:   if (off < last_off) {",
      "7699:    THROW(ReportedBoundsError);",
      "7700:   }",
      "7701:   last_off = off;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "7711:    guint8 *codepage_stag, guint8 *codepage_attr)",
      "7712: {",
      "7713:  guint32     tvb_len             = tvb_reported_length (tvb);",
      "7715:  guint32     len;",
      "7716:  guint       str_len;",
      "7717:  guint32     ent;",
      "",
      "[Removed Lines]",
      "7714:  guint32     off                 = offset;",
      "",
      "[Added Lines]",
      "7719:  guint32     off                 = offset, last_off;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "7734:  DebugLog((\"parse_wbxml_tag (level = %u, offset = %u)\\n\", *level, offset));",
      "7735:  while (off < tvb_len) {",
      "7736:   peek = tvb_get_guint8 (tvb, off);",
      "7737:   DebugLog((\"STAG: (top of while) level = %3u, peek = 0x%02X, off = %u, tvb_len = %u\\n\", *level, peek, off, tvb_len));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7740:  last_off = off;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "8092:    }",
      "8095:  DebugLog((\"STAG: level = %u, Return: len = %u (end of function body)\\n\",",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8100:   if (off < last_off) {",
      "8101:    THROW(ReportedBoundsError);",
      "8102:   }",
      "8103:   last_off = off;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "8126:         const wbxml_decoding *map)",
      "8127: {",
      "8128:  guint32     tvb_len = tvb_reported_length (tvb);",
      "8130:  guint32     len;",
      "8131:  guint       str_len;",
      "8132:  guint32     ent;",
      "",
      "[Removed Lines]",
      "8129:  guint32     off     = offset;",
      "",
      "[Added Lines]",
      "8139:  guint32     off     = offset, last_off;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "8138:  DebugLog((\"parse_wbxml_attr_defined (level = %u, offset = %u)\\n\",",
      "8139:     level, offset));",
      "8141:  while (off < tvb_len) {",
      "8142:   peek = tvb_get_guint8 (tvb, off);",
      "8143:   DebugLog((\"ATTR: (top of while) level = %3u, peek = 0x%02X, \"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8151:  last_off = off;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "8330:     off++;",
      "8331:    }",
      "8332:   }",
      "8334:  DebugLog((\"ATTR: level = %u, Return: len = %u (end of function body)\\n\",",
      "8335:     level, off - offset));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8344:   if (off < last_off) {",
      "8345:    THROW(ReportedBoundsError);",
      "8346:   }",
      "8347:   last_off = off;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "8350:        guint32 offset, guint32 str_tbl, guint8 level, guint8 *codepage_attr)",
      "8351: {",
      "8352:  guint32 tvb_len = tvb_reported_length (tvb);",
      "8354:  guint32 len;",
      "8355:  guint   str_len;",
      "8356:  guint32 ent;",
      "",
      "[Removed Lines]",
      "8353:  guint32 off     = offset;",
      "",
      "[Added Lines]",
      "8368:  guint32 off     = offset, last_off;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "8360:  DebugLog((\"parse_wbxml_attr (level = %u, offset = %u)\\n\", level, offset));",
      "8362:  while (off < tvb_len) {",
      "8363:   peek = tvb_get_guint8 (tvb, off);",
      "8364:   DebugLog((\"ATTR: (top of while) level = %3u, peek = 0x%02X, \"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8377:  last_off = off;",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "8516:     off++;",
      "8517:    }",
      "8518:   }",
      "8520:  DebugLog((\"ATTR: level = %u, Return: len = %u (end of function body)\\n\",",
      "8521:     level, off - offset));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8535:   if (off < last_off) {",
      "8536:    THROW(ReportedBoundsError);",
      "8537:   }",
      "8538:   last_off = off;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "434fe44cdec8755204d7462f5293cdf1b9493a0b",
      "candidate_info": {
        "commit_hash": "434fe44cdec8755204d7462f5293cdf1b9493a0b",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/434fe44cdec8755204d7462f5293cdf1b9493a0b",
        "files": [
          "epan/dissectors/packet-wbxml.c"
        ],
        "message": "WBXML: add a basic sanity check for offset overflow\n\nThis is a naive approach allowing to detact that something went wrong,\nwithout the need to replace all proto_tree_add_text() calls as what was\ndone in master-2.0 branch.\n\nBug: 12408\nChange-Id: Ia14905005e17ae322c2fc639ad5e491fa08b0108\nReviewed-on: https://code.wireshark.org/review/15310\nReviewed-by: Michael Mann <mmann78@netscape.net>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit b8e0d416898bb975a02c1b55883342edc5b4c9c0)\nReviewed-on: https://code.wireshark.org/review/16117\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/dissectors/packet-wbxml.c||epan/dissectors/packet-wbxml.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-wbxml.c||epan/dissectors/packet-wbxml.c"
          ],
          "candidate": [
            "epan/dissectors/packet-wbxml.c||epan/dissectors/packet-wbxml.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-wbxml.c||epan/dissectors/packet-wbxml.c": [
          "File: epan/dissectors/packet-wbxml.c -> epan/dissectors/packet-wbxml.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7304:     const wbxml_decoding *map)",
          "7305: {",
          "7306:  guint32     tvb_len  = tvb_reported_length (tvb);",
          "7308:  guint32     len;",
          "7309:  guint       str_len;",
          "7310:  guint32     ent;",
          "",
          "[Removed Lines]",
          "7307:  guint32     off      = offset;",
          "",
          "[Added Lines]",
          "7307:  guint32     off      = offset, last_off;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7325:  DebugLog((\"parse_wbxml_tag_defined (level = %u, offset = %u)\\n\", *level, offset));",
          "7326:  while (off < tvb_len) {",
          "7327:   peek = tvb_get_guint8 (tvb, off);",
          "7328:   DebugLog((\"STAG: (top of while) level = %3u, peek = 0x%02X, off = %u, tvb_len = %u\\n\", *level, peek, off, tvb_len));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7326:  last_off = off;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7695:    }",
          "7698:  DebugLog((\"STAG: level = %u, Return: len = %u (end of function body)\\n\", *level, off - offset));",
          "7699:  return (off - offset);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7698:   if (off < last_off) {",
          "7699:    THROW(ReportedBoundsError);",
          "7700:   }",
          "7701:   last_off = off;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7711:    guint8 *codepage_stag, guint8 *codepage_attr)",
          "7712: {",
          "7713:  guint32     tvb_len             = tvb_reported_length (tvb);",
          "7715:  guint32     len;",
          "7716:  guint       str_len;",
          "7717:  guint32     ent;",
          "",
          "[Removed Lines]",
          "7714:  guint32     off                 = offset;",
          "",
          "[Added Lines]",
          "7719:  guint32     off                 = offset, last_off;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7734:  DebugLog((\"parse_wbxml_tag (level = %u, offset = %u)\\n\", *level, offset));",
          "7735:  while (off < tvb_len) {",
          "7736:   peek = tvb_get_guint8 (tvb, off);",
          "7737:   DebugLog((\"STAG: (top of while) level = %3u, peek = 0x%02X, off = %u, tvb_len = %u\\n\", *level, peek, off, tvb_len));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7740:  last_off = off;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8092:    }",
          "8095:  DebugLog((\"STAG: level = %u, Return: len = %u (end of function body)\\n\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8100:   if (off < last_off) {",
          "8101:    THROW(ReportedBoundsError);",
          "8102:   }",
          "8103:   last_off = off;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8126:         const wbxml_decoding *map)",
          "8127: {",
          "8128:  guint32     tvb_len = tvb_reported_length (tvb);",
          "8130:  guint32     len;",
          "8131:  guint       str_len;",
          "8132:  guint32     ent;",
          "",
          "[Removed Lines]",
          "8129:  guint32     off     = offset;",
          "",
          "[Added Lines]",
          "8139:  guint32     off     = offset, last_off;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "8138:  DebugLog((\"parse_wbxml_attr_defined (level = %u, offset = %u)\\n\",",
          "8139:     level, offset));",
          "8141:  while (off < tvb_len) {",
          "8142:   peek = tvb_get_guint8 (tvb, off);",
          "8143:   DebugLog((\"ATTR: (top of while) level = %3u, peek = 0x%02X, \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8151:  last_off = off;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "8330:     off++;",
          "8331:    }",
          "8332:   }",
          "8334:  DebugLog((\"ATTR: level = %u, Return: len = %u (end of function body)\\n\",",
          "8335:     level, off - offset));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8344:   if (off < last_off) {",
          "8345:    THROW(ReportedBoundsError);",
          "8346:   }",
          "8347:   last_off = off;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "8350:        guint32 offset, guint32 str_tbl, guint8 level, guint8 *codepage_attr)",
          "8351: {",
          "8352:  guint32 tvb_len = tvb_reported_length (tvb);",
          "8354:  guint32 len;",
          "8355:  guint   str_len;",
          "8356:  guint32 ent;",
          "",
          "[Removed Lines]",
          "8353:  guint32 off     = offset;",
          "",
          "[Added Lines]",
          "8368:  guint32 off     = offset, last_off;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "8360:  DebugLog((\"parse_wbxml_attr (level = %u, offset = %u)\\n\", level, offset));",
          "8362:  while (off < tvb_len) {",
          "8363:   peek = tvb_get_guint8 (tvb, off);",
          "8364:   DebugLog((\"ATTR: (top of while) level = %3u, peek = 0x%02X, \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8377:  last_off = off;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "8516:     off++;",
          "8517:    }",
          "8518:   }",
          "8520:  DebugLog((\"ATTR: level = %u, Return: len = %u (end of function body)\\n\",",
          "8521:     level, off - offset));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8535:   if (off < last_off) {",
          "8536:    THROW(ReportedBoundsError);",
          "8537:   }",
          "8538:   last_off = off;",
          "",
          "---------------"
        ]
      }
    }
  ]
}