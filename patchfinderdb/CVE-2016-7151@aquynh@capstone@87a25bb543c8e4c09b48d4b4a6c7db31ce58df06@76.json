{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "41b09c34cd3a85097ebcae6c548baeb977f42157",
      "candidate_info": {
        "commit_hash": "41b09c34cd3a85097ebcae6c548baeb977f42157",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/41b09c34cd3a85097ebcae6c548baeb977f42157",
        "files": [
          "include/capstone/arm.h",
          "include/capstone/arm64.h",
          "include/capstone/mips.h",
          "include/capstone/ppc.h",
          "include/capstone/sparc.h",
          "include/capstone/systemz.h",
          "include/capstone/xcore.h"
        ],
        "message": "Fixed register types\n\nIn some architecture headers, register values were\nrepresented as `unsigned int`/`uint8_t` or other types\ninstead of the corresponding enums. This commit fixes most (all)\noccurences of this problem.",
        "before_after_code_files": [
          "include/capstone/arm.h||include/capstone/arm.h",
          "include/capstone/arm64.h||include/capstone/arm64.h",
          "include/capstone/mips.h||include/capstone/mips.h",
          "include/capstone/ppc.h||include/capstone/ppc.h",
          "include/capstone/sparc.h||include/capstone/sparc.h",
          "include/capstone/systemz.h||include/capstone/systemz.h",
          "include/capstone/xcore.h||include/capstone/xcore.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/capstone/arm.h||include/capstone/arm.h": [
          "File: include/capstone/arm.h -> include/capstone/arm.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "249:  ARM_VECTORDATA_F64U32, // f64.u32",
          "250: } arm_vectordata_type;",
          "314: typedef enum arm_reg {",
          "315:  ARM_REG_INVALID = 0,",
          "",
          "[Removed Lines]",
          "254: typedef struct arm_op_mem {",
          "255:  unsigned int base; // base register",
          "256:  unsigned int index; // index register",
          "257:  int scale; // scale for index register (can be 1, or -1)",
          "258:  int disp; // displacement/offset value",
          "259:  int lshift; // left-shift on index register, or 0 if irrelevant.",
          "260: } arm_op_mem;",
          "263: typedef struct cs_arm_op {",
          "264:  int vector_index; // Vector Index for some vector operands (or -1 if irrelevant)",
          "266:  struct {",
          "267:   arm_shifter type;",
          "268:   unsigned int value;",
          "269:  } shift;",
          "271:  arm_op_type type; // operand type",
          "273:  union {",
          "274:   unsigned int reg; // register value for REG/SYSREG operand",
          "275:   int32_t imm;   // immediate value for C-IMM, P-IMM or IMM operand",
          "276:   double fp;   // floating point value for FP operand",
          "277:   arm_op_mem mem;  // base/index/scale/disp value for MEM operand",
          "278:   arm_setend_type setend; // SETEND instruction's operand type",
          "279:  };",
          "283:  bool subtracted; // if TRUE, this operand is subtracted. otherwise, it is added.",
          "288:  uint8_t access;",
          "291:  int8_t neon_lane;",
          "292: } cs_arm_op;",
          "295: typedef struct cs_arm {",
          "296:  bool usermode; // User-mode registers to be loaded (for LDM/STM instructions)",
          "297:  int vector_size;  // Scalar size for vector instructions",
          "298:  arm_vectordata_type vector_data; // Data type for elements of vector instructions",
          "299:  arm_cpsmode_type cps_mode; // CPS mode for CPS instruction",
          "300:  arm_cpsflag_type cps_flag; // CPS mode for CPS instruction",
          "301:  arm_cc cc;   // conditional code for this insn",
          "302:  bool update_flags; // does this insn update flags?",
          "303:  bool writeback;  // does this insn write-back?",
          "304:  arm_mem_barrier mem_barrier; // Option for some memory barrier instructions",
          "308:  uint8_t op_count;",
          "310:  cs_arm_op operands[36]; // operands for this instruction.",
          "311: } cs_arm;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "437:  ARM_REG_IP = ARM_REG_R12,",
          "438: } arm_reg;",
          "441: typedef enum arm_insn {",
          "442:  ARM_INS_INVALID = 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "381: typedef struct arm_op_mem {",
          "382:  arm_reg base; // base register",
          "383:  arm_reg index; // index register",
          "384:  int scale; // scale for index register (can be 1, or -1)",
          "385:  int disp; // displacement/offset value",
          "386:  int lshift; // left-shift on index register, or 0 if irrelevant.",
          "387: } arm_op_mem;",
          "390: typedef struct cs_arm_op {",
          "391:  int vector_index; // Vector Index for some vector operands (or -1 if irrelevant)",
          "393:  struct {",
          "394:   arm_shifter type;",
          "395:   unsigned int value;",
          "396:  } shift;",
          "398:  arm_op_type type; // operand type",
          "400:  union {",
          "401:   arm_reg reg; // register value for REG/SYSREG operand",
          "402:   int32_t imm;   // immediate value for C-IMM, P-IMM or IMM operand",
          "403:   double fp;   // floating point value for FP operand",
          "404:   arm_op_mem mem;  // base/index/scale/disp value for MEM operand",
          "405:   arm_setend_type setend; // SETEND instruction's operand type",
          "406:  };",
          "410:  bool subtracted; // if TRUE, this operand is subtracted. otherwise, it is added.",
          "415:  uint8_t access;",
          "418:  int8_t neon_lane;",
          "419: } cs_arm_op;",
          "422: typedef struct cs_arm {",
          "423:  bool usermode; // User-mode registers to be loaded (for LDM/STM instructions)",
          "424:  int vector_size;  // Scalar size for vector instructions",
          "425:  arm_vectordata_type vector_data; // Data type for elements of vector instructions",
          "426:  arm_cpsmode_type cps_mode; // CPS mode for CPS instruction",
          "427:  arm_cpsflag_type cps_flag; // CPS mode for CPS instruction",
          "428:  arm_cc cc;   // conditional code for this insn",
          "429:  bool update_flags; // does this insn update flags?",
          "430:  bool writeback;  // does this insn write-back?",
          "431:  arm_mem_barrier mem_barrier; // Option for some memory barrier instructions",
          "435:  uint8_t op_count;",
          "437:  cs_arm_op operands[36]; // operands for this instruction.",
          "438: } cs_arm;",
          "",
          "---------------"
        ],
        "include/capstone/arm64.h||include/capstone/arm64.h": [
          "File: include/capstone/arm64.h -> include/capstone/arm64.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "343:  ARM64_PRFM_PSTL3STRM = 0x15 + 1,",
          "344: } arm64_prefetch_op;",
          "396: typedef enum arm64_reg {",
          "",
          "[Removed Lines]",
          "348: typedef struct arm64_op_mem {",
          "349:  unsigned int base; // base register",
          "350:  unsigned int index; // index register",
          "351:  int32_t disp; // displacement/offset value",
          "352: } arm64_op_mem;",
          "355: typedef struct cs_arm64_op {",
          "356:  int vector_index; // Vector Index for some vector operands (or -1 if irrelevant)",
          "357:  arm64_vas vas;  // Vector Arrangement Specifier",
          "358:  arm64_vess vess; // Vector Element Size Specifier",
          "359:  struct {",
          "360:   arm64_shifter type; // shifter type of this operand",
          "361:   unsigned int value; // shifter value of this operand",
          "362:  } shift;",
          "363:  arm64_extender ext;  // extender type of this operand",
          "364:  arm64_op_type type; // operand type",
          "365:  union {",
          "366:   unsigned int reg; // register value for REG operand",
          "367:   int64_t imm;  // immediate value, or index for C-IMM or IMM operand",
          "368:   double fp;   // floating point value for FP operand",
          "369:   arm64_op_mem mem;  // base/index/scale/disp value for MEM operand",
          "370:   arm64_pstate pstate;  // PState field of MSR instruction.",
          "371:   unsigned int sys;  // IC/DC/AT/TLBI operation (see arm64_ic_op, arm64_dc_op, arm64_at_op, arm64_tlbi_op)",
          "372:   arm64_prefetch_op prefetch;  // PRFM operation.",
          "373:   arm64_barrier_op barrier;  // Memory barrier operation (ISB/DMB/DSB instructions).",
          "374:  };",
          "379:  cs_ac_type access;",
          "380: } cs_arm64_op;",
          "383: typedef struct cs_arm64 {",
          "384:  arm64_cc cc; // conditional code for this insn",
          "385:  bool update_flags; // does this insn update flags?",
          "386:  bool writeback; // does this insn request writeback? 'True' means 'yes'",
          "390:  uint8_t op_count;",
          "392:  cs_arm64_op operands[8]; // operands for this instruction.",
          "393: } cs_arm64;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "667:  ARM64_REG_LR = ARM64_REG_X30,",
          "668: } arm64_reg;",
          "671: typedef enum arm64_insn {",
          "672:  ARM64_INS_INVALID = 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "624: typedef struct arm64_op_mem {",
          "625:  arm64_reg base; // base register",
          "626:  arm64_reg index; // index register",
          "627:  int32_t disp; // displacement/offset value",
          "628: } arm64_op_mem;",
          "631: typedef struct cs_arm64_op {",
          "632:  int vector_index; // Vector Index for some vector operands (or -1 if irrelevant)",
          "633:  arm64_vas vas;  // Vector Arrangement Specifier",
          "634:  arm64_vess vess; // Vector Element Size Specifier",
          "635:  struct {",
          "636:   arm64_shifter type; // shifter type of this operand",
          "637:   unsigned int value; // shifter value of this operand",
          "638:  } shift;",
          "639:  arm64_extender ext;  // extender type of this operand",
          "640:  arm64_op_type type; // operand type",
          "641:  union {",
          "642:   arm64_reg reg; // register value for REG operand",
          "643:   int64_t imm;  // immediate value, or index for C-IMM or IMM operand",
          "644:   double fp;   // floating point value for FP operand",
          "645:   arm64_op_mem mem;  // base/index/scale/disp value for MEM operand",
          "646:   arm64_pstate pstate;  // PState field of MSR instruction.",
          "647:   unsigned int sys;  // IC/DC/AT/TLBI operation (see arm64_ic_op, arm64_dc_op, arm64_at_op, arm64_tlbi_op)",
          "648:   arm64_prefetch_op prefetch;  // PRFM operation.",
          "649:   arm64_barrier_op barrier;  // Memory barrier operation (ISB/DMB/DSB instructions).",
          "650:  };",
          "655:  cs_ac_type access;",
          "656: } cs_arm64_op;",
          "659: typedef struct cs_arm64 {",
          "660:  arm64_cc cc; // conditional code for this insn",
          "661:  bool update_flags; // does this insn update flags?",
          "662:  bool writeback; // does this insn request writeback? 'True' means 'yes'",
          "666:  uint8_t op_count;",
          "668:  cs_arm64_op operands[8]; // operands for this instruction.",
          "669: } cs_arm64;",
          "",
          "---------------"
        ],
        "include/capstone/mips.h||include/capstone/mips.h": [
          "File: include/capstone/mips.h -> include/capstone/mips.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:  MIPS_OP_MEM, // = CS_OP_MEM (Memory operand).",
          "28: } mips_op_type;",
          "56: typedef enum mips_reg {",
          "57:  MIPS_REG_INVALID = 0,",
          "",
          "[Removed Lines]",
          "32: typedef struct mips_op_mem {",
          "33:  unsigned int base; // base register",
          "34:  int64_t disp; // displacement/offset value",
          "35: } mips_op_mem;",
          "38: typedef struct cs_mips_op {",
          "39:  mips_op_type type; // operand type",
          "40:  union {",
          "41:   unsigned int reg; // register value for REG operand",
          "42:   int64_t imm;  // immediate value for IMM operand",
          "43:   mips_op_mem mem; // base/index/scale/disp value for MEM operand",
          "44:  };",
          "45: } cs_mips_op;",
          "48: typedef struct cs_mips {",
          "51:  uint8_t op_count;",
          "52:  cs_mips_op operands[8]; // operands for this instruction.",
          "53: } cs_mips;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "255:  MIPS_REG_LO3 = MIPS_REG_HI3,",
          "256: } mips_reg;",
          "259: typedef enum mips_insn {",
          "260:  MIPS_INS_INVALID = 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "235: typedef struct mips_op_mem {",
          "236:  mips_reg base; // base register",
          "237:  int64_t disp; // displacement/offset value",
          "238: } mips_op_mem;",
          "241: typedef struct cs_mips_op {",
          "242:  mips_op_type type; // operand type",
          "243:  union {",
          "244:   mips_reg reg;  // register value for REG operand",
          "245:   int64_t imm;  // immediate value for IMM operand",
          "246:   mips_op_mem mem; // base/index/scale/disp value for MEM operand",
          "247:  };",
          "248: } cs_mips_op;",
          "251: typedef struct cs_mips {",
          "254:  uint8_t op_count;",
          "255:  cs_mips_op operands[8]; // operands for this instruction.",
          "256: } cs_mips;",
          "",
          "---------------"
        ],
        "include/capstone/ppc.h||include/capstone/ppc.h": [
          "File: include/capstone/ppc.h -> include/capstone/ppc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:  PPC_OP_CRX = 64, // Condition Register field",
          "49: } ppc_op_type;",
          "93: typedef enum ppc_reg {",
          "94:  PPC_REG_INVALID = 0,",
          "",
          "[Removed Lines]",
          "53: typedef struct ppc_op_mem {",
          "54:  unsigned int base; // base register",
          "55:  int32_t disp; // displacement/offset value",
          "56: } ppc_op_mem;",
          "58: typedef struct ppc_op_crx {",
          "59:  unsigned int scale;",
          "60:  unsigned int reg;",
          "61:  ppc_bc cond;",
          "62: } ppc_op_crx;",
          "65: typedef struct cs_ppc_op {",
          "66:  ppc_op_type type; // operand type",
          "67:  union {",
          "68:   unsigned int reg; // register value for REG operand",
          "69:   int64_t imm;  // immediate value for IMM operand",
          "70:   ppc_op_mem mem;  // base/disp value for MEM operand",
          "71:   ppc_op_crx crx;  // operand with condition register",
          "72:  };",
          "73: } cs_ppc_op;",
          "76: typedef struct cs_ppc {",
          "78:  ppc_bc bc;",
          "81:  ppc_bh bh;",
          "84:  bool update_cr0;",
          "88:  uint8_t op_count;",
          "89:  cs_ppc_op operands[8]; // operands for this instruction.",
          "90: } cs_ppc;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "308:  PPC_REG_ENDING,   // <-- mark the end of the list of registers",
          "309: } ppc_reg;",
          "312: typedef enum ppc_insn {",
          "313:  PPC_INS_INVALID = 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272: typedef struct ppc_op_mem {",
          "273:  ppc_reg base; // base register",
          "274:  int32_t disp; // displacement/offset value",
          "275: } ppc_op_mem;",
          "277: typedef struct ppc_op_crx {",
          "278:  unsigned int scale;",
          "279:  ppc_reg reg;",
          "280:  ppc_bc cond;",
          "281: } ppc_op_crx;",
          "284: typedef struct cs_ppc_op {",
          "285:  ppc_op_type type; // operand type",
          "286:  union {",
          "287:   ppc_reg reg; // register value for REG operand",
          "288:   int64_t imm;  // immediate value for IMM operand",
          "289:   ppc_op_mem mem;  // base/disp value for MEM operand",
          "290:   ppc_op_crx crx;  // operand with condition register",
          "291:  };",
          "292: } cs_ppc_op;",
          "295: typedef struct cs_ppc {",
          "297:  ppc_bc bc;",
          "300:  ppc_bh bh;",
          "303:  bool update_cr0;",
          "307:  uint8_t op_count;",
          "308:  cs_ppc_op operands[8]; // operands for this instruction.",
          "309: } cs_ppc;",
          "",
          "---------------"
        ],
        "include/capstone/sparc.h||include/capstone/sparc.h": [
          "File: include/capstone/sparc.h -> include/capstone/sparc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:  SPARC_OP_MEM, // = CS_OP_MEM (Memory operand).",
          "76: } sparc_op_type;",
          "107: typedef enum sparc_reg {",
          "108:  SPARC_REG_INVALID = 0,",
          "",
          "[Removed Lines]",
          "80: typedef struct sparc_op_mem {",
          "81:  uint8_t base; // base register",
          "82:  uint8_t index; // index register",
          "83:  int32_t disp; // displacement/offset value",
          "84: } sparc_op_mem;",
          "87: typedef struct cs_sparc_op {",
          "88:  sparc_op_type type; // operand type",
          "89:  union {",
          "90:   unsigned int reg; // register value for REG operand",
          "91:   int32_t imm;  // immediate value for IMM operand",
          "92:   sparc_op_mem mem;  // base/disp value for MEM operand",
          "93:  };",
          "94: } cs_sparc_op;",
          "97: typedef struct cs_sparc {",
          "98:  sparc_cc cc; // code condition for this insn",
          "99:  sparc_hint hint; // branch hint: encoding as bitwise OR of sparc_hint.",
          "102:  uint8_t op_count;",
          "103:  cs_sparc_op operands[4]; // operands for this instruction.",
          "104: } cs_sparc;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "204:  SPARC_REG_I6 = SPARC_REG_FP,",
          "205: } sparc_reg;",
          "208: typedef enum sparc_insn {",
          "209:  SPARC_INS_INVALID = 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "181: typedef struct sparc_op_mem {",
          "182:  sparc_reg base;  // base register",
          "183:  sparc_reg index; // index register",
          "184:  int32_t disp;  // displacement/offset value",
          "185: } sparc_op_mem;",
          "188: typedef struct cs_sparc_op {",
          "189:  sparc_op_type type; // operand type",
          "190:  union {",
          "191:   sparc_reg reg; // register value for REG operand",
          "192:   int32_t imm;  // immediate value for IMM operand",
          "193:   sparc_op_mem mem;  // base/disp value for MEM operand",
          "194:  };",
          "195: } cs_sparc_op;",
          "198: typedef struct cs_sparc {",
          "199:  sparc_cc cc; // code condition for this insn",
          "200:  sparc_hint hint; // branch hint: encoding as bitwise OR of sparc_hint.",
          "203:  uint8_t op_count;",
          "204:  cs_sparc_op operands[4]; // operands for this instruction.",
          "205: } cs_sparc;",
          "",
          "---------------"
        ],
        "include/capstone/systemz.h||include/capstone/systemz.h": [
          "File: include/capstone/systemz.h -> include/capstone/systemz.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:  SYSZ_OP_ACREG = 64, // Access register operand.",
          "45: } sysz_op_type;",
          "76: typedef enum sysz_reg {",
          "77:  SYSZ_REG_INVALID = 0,",
          "",
          "[Removed Lines]",
          "49: typedef struct sysz_op_mem {",
          "50:  uint8_t base; // base register",
          "51:  uint8_t index; // index register",
          "52:  uint64_t length; // BDLAddr operand",
          "53:  int64_t disp; // displacement/offset value",
          "54: } sysz_op_mem;",
          "57: typedef struct cs_sysz_op {",
          "58:  sysz_op_type type; // operand type",
          "59:  union {",
          "60:   unsigned int reg; // register value for REG operand",
          "61:   int64_t imm;  // immediate value for IMM operand",
          "62:   sysz_op_mem mem;  // base/disp value for MEM operand",
          "63:  };",
          "64: } cs_sysz_op;",
          "67: typedef struct cs_sysz {",
          "68:  sysz_cc cc;  // Code condition",
          "71:  uint8_t op_count;",
          "72:  cs_sysz_op operands[6]; // operands for this instruction.",
          "73: } cs_sysz;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:  SYSZ_REG_ENDING,",
          "116: } sysz_reg;",
          "119: typedef enum sysz_insn {",
          "120:  SYSZ_INS_INVALID = 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92: typedef struct sysz_op_mem {",
          "93:  sysz_reg base;  // base register",
          "94:  sysz_reg index;  // index register",
          "95:  uint64_t length; // BDLAddr operand",
          "96:  int64_t disp; // displacement/offset value",
          "97: } sysz_op_mem;",
          "100: typedef struct cs_sysz_op {",
          "101:  sysz_op_type type; // operand type",
          "102:  union {",
          "103:   sysz_reg reg;  // register value for REG operand",
          "104:   int64_t imm;  // immediate value for IMM operand",
          "105:   sysz_op_mem mem; // base/disp value for MEM operand",
          "106:  };",
          "107: } cs_sysz_op;",
          "110: typedef struct cs_sysz {",
          "111:  sysz_cc cc;  // Code condition",
          "114:  uint8_t op_count;",
          "115:  cs_sysz_op operands[6]; // operands for this instruction.",
          "116: } cs_sysz;",
          "",
          "---------------"
        ],
        "include/capstone/xcore.h||include/capstone/xcore.h": [
          "File: include/capstone/xcore.h -> include/capstone/xcore.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  XCORE_OP_MEM, // = CS_OP_MEM (Memory operand).",
          "24: } xcore_op_type;",
          "54: typedef enum xcore_reg {",
          "55:  XCORE_REG_INVALID = 0,",
          "",
          "[Removed Lines]",
          "28: typedef struct xcore_op_mem {",
          "29:  uint8_t base; // base register",
          "30:  uint8_t index; // index register",
          "31:  int32_t disp; // displacement/offset value",
          "32:  int     direct; // +1: forward, -1: backward",
          "33: } xcore_op_mem;",
          "36: typedef struct cs_xcore_op {",
          "37:  xcore_op_type type; // operand type",
          "38:  union {",
          "39:   unsigned int reg; // register value for REG operand",
          "40:   int32_t imm;  // immediate value for IMM operand",
          "41:   xcore_op_mem mem;  // base/disp value for MEM operand",
          "42:  };",
          "43: } cs_xcore_op;",
          "46: typedef struct cs_xcore {",
          "49:  uint8_t op_count;",
          "50:  cs_xcore_op operands[8]; // operands for this instruction.",
          "51: } cs_xcore;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:  XCORE_REG_ENDING, // <-- mark the end of the list of registers",
          "89: } xcore_reg;",
          "92: typedef enum xcore_insn {",
          "93:  XCORE_INS_INVALID = 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: typedef struct xcore_op_mem {",
          "67:  xcore_reg base;  // base register",
          "68:  xcore_reg index; // index register",
          "69:  int32_t disp; // displacement/offset value",
          "70:  int     direct; // +1: forward, -1: backward",
          "71: } xcore_op_mem;",
          "74: typedef struct cs_xcore_op {",
          "75:  xcore_op_type type; // operand type",
          "76:  union {",
          "77:   xcore_reg reg; // register value for REG operand",
          "78:   int32_t imm;  // immediate value for IMM operand",
          "79:   xcore_op_mem mem;  // base/disp value for MEM operand",
          "80:  };",
          "81: } cs_xcore_op;",
          "84: typedef struct cs_xcore {",
          "87:  uint8_t op_count;",
          "88:  cs_xcore_op operands[8]; // operands for this instruction.",
          "89: } cs_xcore;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0662879d35e4689b579b34fc2b92fd15fe2604b4",
      "candidate_info": {
        "commit_hash": "0662879d35e4689b579b34fc2b92fd15fe2604b4",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/0662879d35e4689b579b34fc2b92fd15fe2604b4",
        "files": [
          "bindings/python/capstone/__init__.py"
        ],
        "message": "python: fix CS_SKIPDATA_CALLBACK prototype",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "298:     )",
          "300: # callback for SKIPDATA option",
          "303: class _cs_opt_skipdata(ctypes.Structure):",
          "304:     _fields_ = (",
          "",
          "[Removed Lines]",
          "301: CS_SKIPDATA_CALLBACK = ctypes.CFUNCTYPE(ctypes.c_size_t, ctypes.POINTER(ctypes.c_char), ctypes.c_size_t, ctypes.c_void_p)",
          "",
          "[Added Lines]",
          "301: CS_SKIPDATA_CALLBACK = ctypes.CFUNCTYPE(ctypes.c_size_t, ctypes.POINTER(ctypes.c_char), ctypes.c_size_t, ctypes.c_size_t, ctypes.c_void_p)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ef9ef02e773c2db9e16d472a55220ffe58c11ba9",
      "candidate_info": {
        "commit_hash": "ef9ef02e773c2db9e16d472a55220ffe58c11ba9",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/ef9ef02e773c2db9e16d472a55220ffe58c11ba9",
        "files": [
          "arch/X86/X86MappingInsnOp.inc",
          "arch/X86/X86MappingInsnOp_reduce.inc"
        ],
        "message": "Fixed EFLAGS of BT/BTC/BTR/BTS",
        "before_after_code_files": [
          "arch/X86/X86MappingInsnOp.inc||arch/X86/X86MappingInsnOp.inc",
          "arch/X86/X86MappingInsnOp_reduce.inc||arch/X86/X86MappingInsnOp_reduce.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86MappingInsnOp.inc||arch/X86/X86MappingInsnOp.inc": [
          "File: arch/X86/X86MappingInsnOp.inc -> arch/X86/X86MappingInsnOp.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "970:  { CS_AC_READ | CS_AC_WRITE, 0 }",
          "971: },",
          "974:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "975: },",
          "978:  { CS_AC_READ, CS_AC_READ, 0 }",
          "979: },",
          "982:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "983: },",
          "986:  { CS_AC_READ, CS_AC_READ, 0 }",
          "987: },",
          "990:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "991: },",
          "994:  { CS_AC_READ, CS_AC_READ, 0 }",
          "995: },",
          "998:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "999: },",
          "1002:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1003: },",
          "1006:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1007: },",
          "1010:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1011: },",
          "1014:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1015: },",
          "1018:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1019: },",
          "1022:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1023: },",
          "1026:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1027: },",
          "1030:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1031: },",
          "1034:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1035: },",
          "1038:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1039: },",
          "1042:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1043: },",
          "1046:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1047: },",
          "1050:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1051: },",
          "1054:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1055: },",
          "1058:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1059: },",
          "1062:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1063: },",
          "1066:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1067: },",
          "1070:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1071: },",
          "1074:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1075: },",
          "1078:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1079: },",
          "1082:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1083: },",
          "1086:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1087: },",
          "1090:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1091: },",
          "1094:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1095: },",
          "1098:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1099: },",
          "1102:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1103: },",
          "1106:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1107: },",
          "1110:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1111: },",
          "1114:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1115: },",
          "1118:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1119: },",
          "1122:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1123: },",
          "1126:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1127: },",
          "1130:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1131: },",
          "1134:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1135: },",
          "1138:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1139: },",
          "1142:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1143: },",
          "1146:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1147: },",
          "1150:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1151: },",
          "1154:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1155: },",
          "1158:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "1159: },",
          "1162:  { CS_AC_READ, CS_AC_READ, 0 }",
          "1163: },",
          "",
          "[Removed Lines]",
          "973:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "977:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "981:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "985:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "989:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "993:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "997:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1001:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1005:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1009:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1013:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1017:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1021:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1025:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1029:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1033:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1037:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1041:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1045:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1049:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1053:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1057:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1061:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1065:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1069:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1073:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1077:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1081:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1085:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1089:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1093:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1097:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1101:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1105:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1109:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1113:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1117:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1121:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1125:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1129:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1133:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1137:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1141:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1145:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1149:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1153:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1157:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1161:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "",
          "[Added Lines]",
          "973:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "977:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "981:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "985:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "989:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "993:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "997:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1001:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1005:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1009:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1013:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1017:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1021:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1025:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1029:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1033:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1037:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1041:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1045:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1049:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1053:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1057:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1061:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1065:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1069:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1073:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1077:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1081:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1085:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1089:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1093:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1097:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1101:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1105:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1109:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1113:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1117:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1121:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1125:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1129:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1133:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1137:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1141:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1145:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1149:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1153:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1157:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "1161:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "",
          "---------------"
        ],
        "arch/X86/X86MappingInsnOp_reduce.inc||arch/X86/X86MappingInsnOp_reduce.inc": [
          "File: arch/X86/X86MappingInsnOp_reduce.inc -> arch/X86/X86MappingInsnOp_reduce.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "762:  { CS_AC_READ | CS_AC_WRITE, 0 }",
          "763: },",
          "766:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "767: },",
          "770:  { CS_AC_READ, CS_AC_READ, 0 }",
          "771: },",
          "774:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "775: },",
          "778:  { CS_AC_READ, CS_AC_READ, 0 }",
          "779: },",
          "782:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "783: },",
          "786:  { CS_AC_READ, CS_AC_READ, 0 }",
          "787: },",
          "790:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "791: },",
          "794:  { CS_AC_READ, CS_AC_READ, 0 }",
          "795: },",
          "798:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "799: },",
          "802:  { CS_AC_READ, CS_AC_READ, 0 }",
          "803: },",
          "806:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "807: },",
          "810:  { CS_AC_READ, CS_AC_READ, 0 }",
          "811: },",
          "814:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "815: },",
          "818:  { CS_AC_READ, CS_AC_READ, 0 }",
          "819: },",
          "822:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "823: },",
          "826:  { CS_AC_READ, CS_AC_READ, 0 }",
          "827: },",
          "830:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "831: },",
          "834:  { CS_AC_READ, CS_AC_READ, 0 }",
          "835: },",
          "838:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "839: },",
          "842:  { CS_AC_READ, CS_AC_READ, 0 }",
          "843: },",
          "846:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "847: },",
          "850:  { CS_AC_READ, CS_AC_READ, 0 }",
          "851: },",
          "854:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "855: },",
          "858:  { CS_AC_READ, CS_AC_READ, 0 }",
          "859: },",
          "862:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "863: },",
          "866:  { CS_AC_READ, CS_AC_READ, 0 }",
          "867: },",
          "870:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "871: },",
          "874:  { CS_AC_READ, CS_AC_READ, 0 }",
          "875: },",
          "878:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "879: },",
          "882:  { CS_AC_READ, CS_AC_READ, 0 }",
          "883: },",
          "886:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "887: },",
          "890:  { CS_AC_READ, CS_AC_READ, 0 }",
          "891: },",
          "894:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "895: },",
          "898:  { CS_AC_READ, CS_AC_READ, 0 }",
          "899: },",
          "902:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "903: },",
          "906:  { CS_AC_READ, CS_AC_READ, 0 }",
          "907: },",
          "910:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "911: },",
          "914:  { CS_AC_READ, CS_AC_READ, 0 }",
          "915: },",
          "918:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "919: },",
          "922:  { CS_AC_READ, CS_AC_READ, 0 }",
          "923: },",
          "926:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "927: },",
          "930:  { CS_AC_READ, CS_AC_READ, 0 }",
          "931: },",
          "934:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "935: },",
          "938:  { CS_AC_READ, CS_AC_READ, 0 }",
          "939: },",
          "942:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "943: },",
          "946:  { CS_AC_READ, CS_AC_READ, 0 }",
          "947: },",
          "950:  { CS_AC_READ, CS_AC_IGNORE, 0 }",
          "951: },",
          "954:  { CS_AC_READ, CS_AC_READ, 0 }",
          "955: },",
          "",
          "[Removed Lines]",
          "765:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "769:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "773:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "777:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "781:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "785:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "789:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "793:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "797:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "801:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "805:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "809:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "813:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "817:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "821:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "825:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "829:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "833:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "837:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "841:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "845:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "849:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "853:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "857:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "861:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "865:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "869:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "873:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "877:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "881:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "885:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "889:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "893:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "897:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "901:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "905:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "909:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "913:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "917:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "921:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "925:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "929:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "933:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "937:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "941:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "945:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "949:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "953:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF | X86_EFLAGS_UNDEFINED_ZF | X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "",
          "[Added Lines]",
          "765:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |",
          "766:  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "770:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "774:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "778:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "782:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "786:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "790:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "794:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "798:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "802:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "806:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "810:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "814:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "818:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "822:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "826:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "830:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "834:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "838:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "842:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "846:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "850:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "854:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "858:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "862:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "866:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "870:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "874:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "878:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "882:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "886:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "890:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "894:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "898:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "902:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "906:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "910:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "914:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "918:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "922:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "926:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "930:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "934:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "938:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "942:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "946:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "950:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "954:  X86_EFLAGS_UNDEFINED_OF | X86_EFLAGS_UNDEFINED_SF |  X86_EFLAGS_UNDEFINED_AF | X86_EFLAGS_UNDEFINED_PF | X86_EFLAGS_MODIFY_CF,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ad8eb66805379a45a07524e15a97258ce269303",
      "candidate_info": {
        "commit_hash": "9ad8eb66805379a45a07524e15a97258ce269303",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9ad8eb66805379a45a07524e15a97258ce269303",
        "files": [
          "arch/X86/X86GenAsmWriter.inc",
          "arch/X86/X86Mapping.c"
        ],
        "message": "x86: fix EAX operand for X86_MOV32ao32. fix issue #852",
        "before_after_code_files": [
          "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc",
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc": [
          "File: arch/X86/X86GenAsmWriter.inc -> arch/X86/X86GenAsmWriter.inc"
        ],
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47241:  { X86_INSW, X86_REG_DX },",
          "47242:  { X86_INSL, X86_REG_DX },",
          "47244:  { X86_MOV64o64a, X86_REG_RAX },",
          "47246:  { X86_PUSHCS32, X86_REG_CS },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47244:  { X86_MOV32ao32, X86_REG_EAX },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47356:  { X86_MOV64o32a, X86_REG_EAX },",
          "47358:  { X86_MOV16ao16, X86_REG_AX },    // 16-bit A1 1020                  // mov     ax, word ptr [0x2010]",
          "47361:  { X86_MOV64ao32, X86_REG_RAX },   // 64-bit 48 8B04 10203040         // mov     rax, qword ptr [0x40302010]",
          "",
          "[Removed Lines]",
          "47359:  { X86_MOV32ao32, X86_REG_EAX },   // 32-bit A1 10203040              // mov     eax, dword ptr [0x40302010]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1e9efd8581969364bb2dc00fe0e9edeef8572c4d",
      "candidate_info": {
        "commit_hash": "1e9efd8581969364bb2dc00fe0e9edeef8572c4d",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/1e9efd8581969364bb2dc00fe0e9edeef8572c4d",
        "files": [
          "suite/arm/test_arm_regression.c"
        ],
        "message": "fixed issue #726 (snprintf undefined in test_arm_regression)",
        "before_after_code_files": [
          "suite/arm/test_arm_regression.c||suite/arm/test_arm_regression.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "suite/arm/test_arm_regression.c||suite/arm/test_arm_regression.c": [
          "File: suite/arm/test_arm_regression.c -> suite/arm/test_arm_regression.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #endif",
          "9: #include <stdio.h>",
          "10: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "5: #ifdef _MSC_VER",
          "",
          "[Added Lines]",
          "5: #if defined(_MSC_VER) && _MSC_VER < 1900",
          "6: #define _CRT_SECURE_NO_WARNINGS",
          "7: #define snprintf _snprintf",
          "",
          "---------------"
        ]
      }
    }
  ]
}