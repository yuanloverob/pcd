{
  "cve_id": "CVE-2018-10199",
  "cve_desc": "In versions of mruby up to and including 1.4.0, a use-after-free vulnerability exists in src/io.c::File#initilialize_copy(). An attacker that can cause Ruby code to be run can possibly use this to execute arbitrary code.",
  "repo": "mruby/mruby",
  "patch_hash": "b51b21fc63c9805862322551387d9036f2b63433",
  "patch_info": {
    "commit_hash": "b51b21fc63c9805862322551387d9036f2b63433",
    "repo": "mruby/mruby",
    "commit_url": "https://github.com/mruby/mruby/commit/b51b21fc63c9805862322551387d9036f2b63433",
    "files": [
      "mrbgems/mruby-io/src/io.c"
    ],
    "message": "Fix `use after free in File#initilialize_copy`; fix #4001\n\nThe bug and the fix were reported by https://hackerone.com/pnoltof",
    "before_after_code_files": [
      "mrbgems/mruby-io/src/io.c||mrbgems/mruby-io/src/io.c"
    ]
  },
  "patch_diff": {
    "mrbgems/mruby-io/src/io.c||mrbgems/mruby-io/src/io.c": [
      "File: mrbgems/mruby-io/src/io.c -> mrbgems/mruby-io/src/io.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "561:   mrb_bool failed = TRUE;",
      "563:   mrb_get_args(mrb, \"o\", &orig);",
      "564:   fptr_copy = (struct mrb_io *)DATA_PTR(copy);",
      "565:   if (fptr_copy != NULL) {",
      "566:     fptr_finalize(mrb, fptr_copy, FALSE);",
      "567:     mrb_free(mrb, fptr_copy);",
      "568:   }",
      "569:   fptr_copy = (struct mrb_io *)mrb_io_alloc(mrb);",
      "572:   DATA_TYPE(copy) = &mrb_io_type;",
      "573:   DATA_PTR(copy) = fptr_copy;",
      "",
      "[Removed Lines]",
      "570:   fptr_orig = io_get_open_fptr(mrb, orig);",
      "",
      "[Added Lines]",
      "564:   fptr_orig = io_get_open_fptr(mrb, orig);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "35185e69bff725e0f11d49db9b2793185fe9927f",
      "candidate_info": {
        "commit_hash": "35185e69bff725e0f11d49db9b2793185fe9927f",
        "repo": "mruby/mruby",
        "commit_url": "https://github.com/mruby/mruby/commit/35185e69bff725e0f11d49db9b2793185fe9927f",
        "files": [
          "mrbgems/mruby-io/README.md",
          "mrbgems/mruby-io/src/io.c",
          "mrbgems/mruby-io/test/io.rb"
        ],
        "message": "Implement IO#initialize_copy",
        "before_after_code_files": [
          "mrbgems/mruby-io/src/io.c||mrbgems/mruby-io/src/io.c",
          "mrbgems/mruby-io/test/io.rb||mrbgems/mruby-io/test/io.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mrbgems/mruby-io/src/io.c||mrbgems/mruby-io/src/io.c"
          ],
          "candidate": [
            "mrbgems/mruby-io/src/io.c||mrbgems/mruby-io/src/io.c"
          ]
        }
      },
      "candidate_diff": {
        "mrbgems/mruby-io/src/io.c||mrbgems/mruby-io/src/io.c": [
          "File: mrbgems/mruby-io/src/io.c -> mrbgems/mruby-io/src/io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "530: }",
          "531: #endif",
          "533: mrb_value",
          "534: mrb_io_initialize(mrb_state *mrb, mrb_value io)",
          "535: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "533: static int",
          "534: mrb_dup(mrb_state *mrb, int fd)",
          "535: {",
          "536:   int new_fd;",
          "538:   if (fd < 0)",
          "539:     return fd;",
          "541:   new_fd = dup(fd);",
          "542:   if (new_fd == -1)",
          "543:     mrb_sys_fail(mrb, 0);",
          "544:   return new_fd;",
          "545: }",
          "547: mrb_value",
          "548: mrb_io_initialize_copy(mrb_state *mrb, mrb_value copy)",
          "549: {",
          "550:   mrb_value orig;",
          "551:   mrb_value buf;",
          "552:   struct mrb_io *fptr_copy;",
          "553:   struct mrb_io *fptr_orig;",
          "555:   mrb_get_args(mrb, \"o\", &orig);",
          "556:   fptr_copy = (struct mrb_io *)DATA_PTR(copy);",
          "557:   if (fptr_copy != NULL) {",
          "558:     fptr_finalize(mrb, fptr_copy, FALSE);",
          "559:     mrb_free(mrb, fptr_copy);",
          "560:   }",
          "561:   fptr_copy = (struct mrb_io *)mrb_io_alloc(mrb);",
          "562:   fptr_orig = io_get_open_fptr(mrb, orig);",
          "564:   buf = mrb_iv_get(mrb, orig, mrb_intern_cstr(mrb, \"@buf\"));",
          "565:   mrb_iv_set(mrb, copy, mrb_intern_cstr(mrb, \"@buf\"), buf);",
          "567:   fptr_copy->fd = mrb_dup(mrb, fptr_orig->fd);",
          "568:   fptr_copy->fd2 = mrb_dup(mrb, fptr_orig->fd2);",
          "569:   fptr_copy->pid = fptr_orig->pid;",
          "570:   fptr_copy->readable = fptr_orig->readable;",
          "571:   fptr_copy->writable = fptr_orig->writable;",
          "572:   fptr_copy->sync = fptr_orig->sync;",
          "573:   fptr_copy->is_socket = fptr_orig->is_socket;",
          "575:   DATA_TYPE(copy) = &mrb_io_type;",
          "576:   DATA_PTR(copy) = fptr_copy;",
          "578:   return copy;",
          "579: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1238: #endif",
          "1241:   mrb_define_method(mrb, io, \"_check_readable\", mrb_io_check_readable, MRB_ARGS_NONE());",
          "1242:   mrb_define_method(mrb, io, \"isatty\",     mrb_io_isatty,     MRB_ARGS_NONE());",
          "1243:   mrb_define_method(mrb, io, \"sync\",       mrb_io_sync,       MRB_ARGS_NONE());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1289:   mrb_define_method(mrb, io, \"initialize_copy\", mrb_io_initialize_copy, MRB_ARGS_REQ(1));",
          "",
          "---------------"
        ],
        "mrbgems/mruby-io/test/io.rb||mrbgems/mruby-io/test/io.rb": [
          "File: mrbgems/mruby-io/test/io.rb -> mrbgems/mruby-io/test/io.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:   true",
          "212: end",
          "214: assert('IO.for_fd') do",
          "215:   fd = IO.sysopen($mrbtest_io_rfname)",
          "216:   io = IO.for_fd(fd)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214: assert('IO#dup for readable') do",
          "215:   io = IO.new(IO.sysopen($mrbtest_io_rfname))",
          "216:   dup = io.dup",
          "217:   assert_true io != dup",
          "218:   assert_true io.fileno != dup.fileno",
          "219:   assert_equal 'm', dup.sysread(1)",
          "220:   assert_equal 'r', io.sysread(1)",
          "221:   assert_equal 'u', dup.sysread(1)",
          "222:   assert_equal 'b', io.sysread(1)",
          "223:   assert_equal 'y', dup.sysread(1)",
          "224:   dup.close",
          "225:   assert_false io.closed?",
          "226:   io.close",
          "227:   true",
          "228: end",
          "230: assert('IO#dup for writable') do",
          "231:   io = IO.open(IO.sysopen($mrbtest_io_wfname, 'w+'), 'w+')",
          "232:   dup = io.dup",
          "233:   io.syswrite \"mruby\"",
          "234:   assert_equal 5, dup.sysseek(0, IO::SEEK_CUR)",
          "235:   io.sysseek 0, IO::SEEK_SET",
          "236:   assert_equal 0, dup.sysseek(0, IO::SEEK_CUR)",
          "237:   assert_equal \"mruby\", dup.sysread(5)",
          "238:   dup.close",
          "239:   io.close",
          "240:   true",
          "241: end",
          "",
          "---------------"
        ]
      }
    }
  ]
}