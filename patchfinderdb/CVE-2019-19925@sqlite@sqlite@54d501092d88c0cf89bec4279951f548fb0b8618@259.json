{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "53e8709b75e21fdba0967a65c855d410c724d4b0",
      "candidate_info": {
        "commit_hash": "53e8709b75e21fdba0967a65c855d410c724d4b0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/53e8709b75e21fdba0967a65c855d410c724d4b0",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/view.test"
        ],
        "message": "New test case for check-in [74ef97bf51dd531a] that takes the fix in the previous check-in into account.\n\nFossilOrigin-Name: cb1d06521de5918a2324a41e207b48c5e5149c23b927b9e3e1f3c3b38b82658e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/view.test||test/view.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3cacc4b940fd69776d930deec9512df47a2f22cb04fb955e354a0b25bdec287c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/view.test||test/view.test": [
          "File: test/view.test -> test/view.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "715:   1 1 2 2",
          "716:   1 1 3 3",
          "717: }",
          "719: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "718: do_execsql_test view-26.1 {",
          "719:   WITH v17(x,y) AS (SELECT max(a), min(b) FROM t16 GROUP BY c)",
          "720:   SELECT * FROM v17 AS one, v17 AS two WHERE one.x=1;",
          "721: } {",
          "722:   1 1 1 1",
          "723:   1 1 2 2",
          "724:   1 1 3 3",
          "725: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d79967adbe9c9aab0295d613030b328178ace9c2",
      "candidate_info": {
        "commit_hash": "d79967adbe9c9aab0295d613030b328178ace9c2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d79967adbe9c9aab0295d613030b328178ace9c2",
        "files": [
          "ext/fts3/fts3.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Avoid a harmless zero offset of a null pointer in FTS3, so as to not provoke unnecessary warnings from run-time checkers.\n\nFossilOrigin-Name: 85d95abec4a596eb3ffd2ea19b4067dc1a6970264222ed5d69e75764ac21597c",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4538:   u8 *pbEof",
          "4539: ){",
          "4543:   if( pDL->pNextDocid ){",
          "4544:     pIter = pDL->pNextDocid;",
          "4545:   }else{",
          "4546:     pIter = pDL->aAll;",
          "4547:   }",
          "4552:   }else{",
          "",
          "[Removed Lines]",
          "4549:   if( pIter>=pEnd ){",
          "",
          "[Added Lines]",
          "4545:     assert( pDL->aAll!=0 || pIter==0 );",
          "4550:   if( pIter==0 || pIter>=(pEnd = pDL->aAll + pDL->nAll) ){",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3ce804e99bbef83d49ec309157448a7c1422725606516cef904e6122aadd3922",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3703edf1108096c9cb570d02fd21d7d7185f65d3",
      "candidate_info": {
        "commit_hash": "3703edf1108096c9cb570d02fd21d7d7185f65d3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3703edf1108096c9cb570d02fd21d7d7185f65d3",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "src/sqliteInt.h",
          "test/filter1.test",
          "test/window1.test"
        ],
        "message": "Be sure to rewrite column references inside FILTER clauses and window frame definitions when flattening queries. Fix for [1079ad19].\n\nFossilOrigin-Name: ccba7202b69d239724c3b589439c9c3b0e1bba237accfeb11c39d492522b8719",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "test/filter1.test||test/filter1.test",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: eb7ed90b8a65748f0721aaf7bdddd2207f552be5015603fbfb7044d815ae2f36",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:     if( OK_IF_ALWAYS_TRUE(p->pWinDefn) ){",
          "101:       sqlite3WindowListDelete(db, p->pWinDefn);",
          "102:     }",
          "103: #endif",
          "104:     if( OK_IF_ALWAYS_TRUE(p->pWith) ) sqlite3WithDelete(db, p->pWith);",
          "106:     if( bFree ) sqlite3DbFreeNN(db, p);",
          "107:     p = pPrior;",
          "108:     bFree = 1;",
          "",
          "[Removed Lines]",
          "105:     assert( p->pWin==0 );",
          "",
          "[Added Lines]",
          "103:     assert( p->pWin==0 );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3503:     }else{",
          "3504:       substExprList(pSubst, pExpr->x.pList);",
          "3505:     }",
          "3506:   }",
          "3507:   return pExpr;",
          "3508: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3506: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "3507:     if( ExprHasProperty(pExpr, EP_WinFunc) ){",
          "3508:       Window *pWin = pExpr->y.pWin;",
          "3509:       pWin->pFilter = substExpr(pSubst, pWin->pFilter);",
          "3510:       substExprList(pSubst, pWin->pPartition);",
          "3511:       substExprList(pSubst, pWin->pOrderBy);",
          "3512:     }",
          "3513: #endif",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2600:     ExprHasProperty((p), EP_WinFunc) && p->y.pWin->eFrmType!=TK_FILTER \\",
          "",
          "[Removed Lines]",
          "2599: #define IsWindowFunc(p) ( \\",
          "2601: )",
          "",
          "[Added Lines]",
          "2599: #ifdef SQLITE_OMIT_WINDOWFUNC",
          "2600: # define IsWindowFunc(p) 0",
          "2601: #else",
          "2602: # define IsWindowFunc(p) ( \\",
          "2604:  )",
          "2605: #endif",
          "",
          "---------------"
        ],
        "test/filter1.test||test/filter1.test": [
          "File: test/filter1.test -> test/filter1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "164:   SELECT a, avg(c) FILTER (WHERE b!=1) FROM t1 GROUP BY a ORDER BY 2",
          "165: } {c 2.0 b 5.0 a 10.0}",
          "167: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167: #-------------------------------------------------------------------------",
          "168: reset_db",
          "169: do_execsql_test 5.0 {",
          "170:   CREATE TABLE t1(a, b);",
          "171:   INSERT INTO t1 VALUES(1, 2);",
          "172:   INSERT INTO t1 VALUES(1, 3);",
          "173: }",
          "175: do_execsql_test 5.1 {",
          "176:   SELECT count(*) FILTER (WHERE b>2) FROM (SELECT * FROM t1)",
          "177: } {1}",
          "179: do_execsql_test 5.2 {",
          "180:   SELECT count(*) FILTER (WHERE b>2) OVER () FROM (SELECT * FROM t1)",
          "181: } {1 1}",
          "183: do_execsql_test 5.3 {",
          "184:   SELECT count(*) FILTER (WHERE b>2) OVER (ORDER BY b) FROM (SELECT * FROM t1)",
          "185: } {0 1}",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1190:          win3 AS (win2 RANGE BETWEEN 5.2 PRECEDING AND true PRECEDING );",
          "1191: } {1 1}",
          "1193: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1193: #-------------------------------------------------------------------------",
          "1194: reset_db",
          "1195: do_execsql_test 31.1 {",
          "1196:   CREATE TABLE t1(a, b);",
          "1197:   CREATE TABLE t2(c, d);",
          "1198:   CREATE TABLE t3(e, f);",
          "1200:   INSERT INTO t1 VALUES(1, 1);",
          "1201:   INSERT INTO t2 VALUES(1, 1);",
          "1202:   INSERT INTO t3 VALUES(1, 1);",
          "1203: }",
          "1205: do_execsql_test 31.2 {",
          "1206:   SELECT d IN (SELECT sum(c) OVER (ORDER BY e+c) FROM t3) FROM (",
          "1207:     SELECT * FROM t2",
          "1208:   );",
          "1209: } {1}",
          "1211: do_execsql_test 31.3 {",
          "1212:   SELECT d IN (SELECT sum(c) OVER (PARTITION BY d ORDER BY e+c) FROM t3) FROM (",
          "1213:     SELECT * FROM t2",
          "1214:   );",
          "1215: } {1}",
          "1217: do_catchsql_test 31.3 {",
          "1218:   SELECT d IN (",
          "1219:     SELECT sum(c) OVER ( ROWS BETWEEN d FOLLOWING AND UNBOUNDED FOLLOWING)",
          "1220:     FROM t3",
          "1221:   )",
          "1222:   FROM (",
          "1223:     SELECT * FROM t2",
          "1224:   );",
          "1225: } {1 {frame starting offset must be a non-negative integer}}",
          "1227: do_catchsql_test 31.3 {",
          "1228:   SELECT d IN (",
          "1229:     SELECT sum(c) OVER ( ROWS BETWEEN CURRENT ROW AND c FOLLOWING)",
          "1230:     FROM t3",
          "1231:   )",
          "1232:   FROM (",
          "1233:     SELECT * FROM t2",
          "1234:   );",
          "1235: } {1 {frame ending offset must be a non-negative integer}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a19865ff2f39ed313462da7e0e204b6ff3eb8b0",
      "candidate_info": {
        "commit_hash": "6a19865ff2f39ed313462da7e0e204b6ff3eb8b0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6a19865ff2f39ed313462da7e0e204b6ff3eb8b0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/wherecode.c"
        ],
        "message": "Remove some affinity tests that became unreachable due to the prior change.\n\nFossilOrigin-Name: e2db1123faac26c0e0b6a1ebef1685ea7633bfcafd1ff743ba5380700f7745af",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/wherecode.c||src/wherecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e0d909c740b774d8a46731696e33342be83206cc4a95d07f42fdb3d8cc2d7a8e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2203:   if( op==TK_REGISTER ) op = p->op2;",
          "2204:   switch( op ){",
          "2205:     case TK_INTEGER: {",
          "2207:     }",
          "2208:     case TK_FLOAT: {",
          "2210:     }",
          "2211:     case TK_STRING: {",
          "2212:       return !unaryMinus && aff==SQLITE_AFF_TEXT;",
          "",
          "[Removed Lines]",
          "2206:       return aff==SQLITE_AFF_INTEGER || aff==SQLITE_AFF_NUMERIC;",
          "2209:       return aff==SQLITE_AFF_REAL || aff==SQLITE_AFF_NUMERIC;",
          "",
          "[Added Lines]",
          "2206:       return aff>=SQLITE_AFF_NUMERIC;",
          "2209:       return aff>=SQLITE_AFF_NUMERIC;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2216:     }",
          "2217:     case TK_COLUMN: {",
          "2221:     }",
          "2222:     default: {",
          "2223:       return 0;",
          "",
          "[Removed Lines]",
          "2219:       return p->iColumn<0",
          "2220:           && (aff==SQLITE_AFF_INTEGER || aff==SQLITE_AFF_NUMERIC);",
          "",
          "[Added Lines]",
          "2219:       return aff>=SQLITE_AFF_NUMERIC && p->iColumn<0;",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "755:         if( sqlite3ExprNeedsNoAffinityChange(pRight, zAff[j]) ){",
          "756:           zAff[j] = SQLITE_AFF_BLOB;",
          "757:         }",
          "759:       }",
          "760:     }",
          "761:   }",
          "",
          "[Removed Lines]",
          "758:         if( zAff[j]==SQLITE_AFF_REAL ) zAff[j] = SQLITE_AFF_NUMERIC;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b16216f9eb297ddebc36fd83d3c3816baad0163",
      "candidate_info": {
        "commit_hash": "1b16216f9eb297ddebc36fd83d3c3816baad0163",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1b16216f9eb297ddebc36fd83d3c3816baad0163",
        "files": [
          "ext/misc/dbdata.c",
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix building the shell with SQLITE_OMIT_VIRTUAL_TABLE. And without SQLITE_ENABLE_DBPAGE_VTAB.\n\nFossilOrigin-Name: 425d708c3908fe74f69b62e6dd1722a0018088977e12f14b312dad1df0fbb804",
        "before_after_code_files": [
          "ext/misc/dbdata.c||ext/misc/dbdata.c",
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/dbdata.c||ext/misc/dbdata.c": [
          "File: ext/misc/dbdata.c -> ext/misc/dbdata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75: #include \"sqlite3ext.h\"",
          "77: typedef unsigned char u8;",
          "80: #endif",
          "81: SQLITE_EXTENSION_INIT1",
          "",
          "[Removed Lines]",
          "78: typedef unsigned long u32;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "557:         if( nPayload>nLocal ){",
          "558:           sqlite3_int64 nRem = nPayload - nLocal;",
          "560:           while( nRem>0 ){",
          "561:             u8 *aOvfl = 0;",
          "562:             int nOvfl = 0;",
          "",
          "[Removed Lines]",
          "559:           u32 pgnoOvfl = get_uint32(&pCsr->aPage[iOff]);",
          "",
          "[Added Lines]",
          "558:           unsigned int pgnoOvfl = get_uint32(&pCsr->aPage[iOff]);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b91d819bd16de43fc99e379da0ba9c915b0c5afc68e804a50c3c1662c1f9a740",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "948: INCLUDE ../ext/expert/sqlite3expert.h",
          "949: INCLUDE ../ext/expert/sqlite3expert.c",
          "951: INCLUDE ../ext/misc/dbdata.c",
          "953: #if defined(SQLITE_ENABLE_SESSION)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "951: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "953: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3576:   \".prompt MAIN CONTINUE    Replace the standard prompts\",",
          "3577:   \".quit                    Exit this program\",",
          "3578:   \".read FILE               Read input from FILE\",",
          "3579:   \".recover                 Recover as much data as possible from corrupt db.\",",
          "3580:   \".restore ?DB? FILE       Restore content of DB (default \\\"main\\\") from FILE\",",
          "3581:   \".save FILE               Write in-memory database into FILE\",",
          "3582:   \".scanstats on|off        Turn sqlite3_stmt_scanstatus() metrics on or off\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3581: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "3583: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4121:     sqlite3_fileio_init(p->db, 0, 0);",
          "4122:     sqlite3_shathree_init(p->db, 0, 0);",
          "4123:     sqlite3_completion_init(p->db, 0, 0);",
          "4124:     sqlite3_dbdata_init(p->db, 0, 0);",
          "4125: #ifdef SQLITE_HAVE_ZLIB",
          "4126:     sqlite3_zipfile_init(p->db, 0, 0);",
          "4127:     sqlite3_sqlar_init(p->db, 0, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4128: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "4130: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5390:   return SQLITE_ERROR;",
          "5391: }",
          "5397: static void shellPrepare(",
          "5398:   sqlite3 *db,",
          "5399:   int *pRc,",
          "",
          "[Removed Lines]",
          "5393: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_HAVE_ZLIB)",
          "",
          "[Added Lines]",
          "5399: #if !defined SQLITE_OMIT_VIRTUALTABLE",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5465:   }",
          "5466: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5472: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_HAVE_ZLIB)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6165: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7063:     rc = shell_dbinfo_command(p, nArg, azArg);",
          "7064:   }else",
          "7066:   if( c=='r' && strncmp(azArg[0], \"recover\", n)==0 ){",
          "7067:     open_db(p, 0);",
          "7068:     rc = recoverDatabaseCmd(p, nArg, azArg);",
          "7069:   }else",
          "7071:   if( c=='d' && strncmp(azArg[0], \"dump\", n)==0 ){",
          "7072:     const char *zLike = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7077: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "",
          "---------------"
        ]
      }
    }
  ]
}