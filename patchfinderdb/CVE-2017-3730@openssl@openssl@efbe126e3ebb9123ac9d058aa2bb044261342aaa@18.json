{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "57106f55a5de6186af4ff78484d99528a6935be4",
      "candidate_info": {
        "commit_hash": "57106f55a5de6186af4ff78484d99528a6935be4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/57106f55a5de6186af4ff78484d99528a6935be4",
        "files": [
          "crypto/stack/stack.c"
        ],
        "message": "Convert num_alloc to a size_t in stack.c and tweak style\n\nWe were casting num_alloc to size_t in lots of places, or just using it in\na context where size_t makes more sense - so convert it. This simplifies\nthe code a bit.\n\nAlso tweak the style in stack.c a bit following on from the previous\ncommit\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 9205ebeb8e448b2d6948b9e5d78ecf309c0ed33c)",
        "before_after_code_files": [
          "crypto/stack/stack.c||crypto/stack/stack.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/stack/stack.c||crypto/stack/stack.c": [
          "File: crypto/stack/stack.c -> crypto/stack/stack.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "11: #include \"internal/cryptlib.h\"",
          "12: #include <openssl/stack.h>",
          "13: #include <openssl/objects.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: #include \"internal/numbers.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:     int num;",
          "17:     const char **data;",
          "18:     int sorted;",
          "20:     OPENSSL_sk_compfunc comp;",
          "21: };",
          "",
          "[Removed Lines]",
          "19:     int num_alloc;",
          "",
          "[Added Lines]",
          "20:     size_t num_alloc;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39: OPENSSL_STACK *OPENSSL_sk_dup(const OPENSSL_STACK *sk)",
          "40: {",
          "41:     OPENSSL_STACK *ret;",
          "43:         return NULL;",
          "46:     if ((ret = OPENSSL_malloc(sizeof(*ret))) == NULL)",
          "47:         return NULL;",
          "",
          "[Removed Lines]",
          "42:     if ( sk->num_alloc < 0 || sk->num < 0 ) {",
          "44:     }",
          "",
          "[Added Lines]",
          "44:     if (sk->num < 0)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "65:     OPENSSL_STACK *ret;",
          "66:     int i;",
          "69:         return NULL;",
          "72:     if ((ret = OPENSSL_malloc(sizeof(*ret))) == NULL)",
          "73:         return NULL;",
          "",
          "[Removed Lines]",
          "68:     if ( sk->num < 0 ) {",
          "70:     }",
          "",
          "[Added Lines]",
          "69:     if (sk->num < 0)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "79:     ret->data = OPENSSL_zalloc(sizeof(*ret->data) * ret->num_alloc);",
          "80:     if (ret->data == NULL) {",
          "81:         OPENSSL_free(ret);",
          "",
          "[Removed Lines]",
          "78:     ret->num_alloc = sk->num > MIN_NODES ? sk->num : MIN_NODES;",
          "",
          "[Added Lines]",
          "78:     ret->num_alloc = sk->num > MIN_NODES ? (size_t)sk->num : MIN_NODES;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "121: int OPENSSL_sk_insert(OPENSSL_STACK *st, const void *data, int loc)",
          "122: {",
          "124:         return 0;",
          "125:     }",
          "133:             return 0;",
          "138:             return 0;",
          "147:         st->data = OPENSSL_realloc((char *)st->data,",
          "149:         if (st->data == NULL) {",
          "153:             st->num_alloc = 0;",
          "154:             st->num = 0;",
          "156:         }",
          "158:     }",
          "160:         st->data[st->num] = data;",
          "165:         memmove(&st->data[loc + 1], &st->data[loc],",
          "166:                 sizeof(st->data[0]) * (st->num - loc));",
          "167:         st->data[loc] = data;",
          "168:     }",
          "169:     st->num++;",
          "170:     st->sorted = 0;",
          "172: }",
          "174: void *OPENSSL_sk_delete_ptr(OPENSSL_STACK *st, const void *p)",
          "",
          "[Removed Lines]",
          "123:     if ( st == NULL || st->num < 0 || st->num == INT_MAX || st->num_alloc < 0 ) {",
          "127:     if (st->num_alloc <= st->num + 1) {",
          "132:         if ( (size_t)(st->num_alloc) * 2 < (size_t)(st->num_alloc) ) {",
          "134:         }",
          "136:         if ( (size_t)(st->num_alloc) * 2 > INT_MAX )",
          "137:         {",
          "139:         }",
          "142:         if ( (size_t)(st->num_alloc) * 2 > (~(size_t)0) / sizeof(char*) ) {",
          "143:             return 0;",
          "144:         }",
          "148:                             sizeof(char *) * st->num_alloc * 2);",
          "155:             return (0);",
          "157:         st->num_alloc *= 2;",
          "159:     if ((loc >= (int)st->num) || (loc < 0))",
          "161:     else {",
          "162:         if ( loc == INT_MAX ) {",
          "163:             return 0;",
          "164:         }",
          "171:     return (st->num);",
          "",
          "[Added Lines]",
          "123:     if (st == NULL || st->num < 0 || st->num == INT_MAX) {",
          "127:     if (st->num_alloc <= (size_t)(st->num + 1)) {",
          "128:         size_t doub_num_alloc = st->num_alloc * 2;",
          "131:         if (doub_num_alloc < st->num_alloc)",
          "135:         if (doub_num_alloc > SIZE_MAX / sizeof(char *))",
          "139:                                    sizeof(char *) * doub_num_alloc);",
          "147:             return 0;",
          "149:         st->num_alloc = doub_num_alloc;",
          "151:     if ((loc >= st->num) || (loc < 0)) {",
          "153:     } else {",
          "160:     return st->num;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "185: {",
          "186:     const char *ret;",
          "189:         return NULL;",
          "191:     ret = st->data[loc];",
          "",
          "[Removed Lines]",
          "188:     if (st == NULL || loc < 0 || loc >= st->num )",
          "",
          "[Added Lines]",
          "177:     if (st == NULL || loc < 0 || loc >= st->num)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c947fa492ea8d727929d02605a41979cfff7b261",
      "candidate_info": {
        "commit_hash": "c947fa492ea8d727929d02605a41979cfff7b261",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c947fa492ea8d727929d02605a41979cfff7b261",
        "files": [
          "test/asynciotest.c"
        ],
        "message": "Make async_read and async_write return -1 on failure.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n\nGH: #1966",
        "before_after_code_files": [
          "test/asynciotest.c||test/asynciotest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/asynciotest.c||test/asynciotest.c": [
          "File: test/asynciotest.c -> test/asynciotest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: static int async_read(BIO *bio, char *out, int outl)",
          "86: {",
          "87:     struct async_ctrs *ctrs;",
          "89:     BIO *next = BIO_next(bio);",
          "91:     if (outl <= 0)",
          "",
          "[Removed Lines]",
          "88:     int ret = 0;",
          "",
          "[Added Lines]",
          "88:     int ret = -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120: static int async_write(BIO *bio, const char *in, int inl)",
          "121: {",
          "122:     struct async_ctrs *ctrs;",
          "124:     size_t written = 0;",
          "125:     BIO *next = BIO_next(bio);",
          "",
          "[Removed Lines]",
          "123:     int ret = 0;",
          "",
          "[Added Lines]",
          "123:     int ret = -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b02b586c35359e338cfa151341e49aeb01590d0",
      "candidate_info": {
        "commit_hash": "6b02b586c35359e338cfa151341e49aeb01590d0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/6b02b586c35359e338cfa151341e49aeb01590d0",
        "files": [
          "include/openssl/ssl.h",
          "ssl/ssl_err.c",
          "ssl/statem/statem_srvr.c"
        ],
        "message": "Fix missing NULL checks in NewSessionTicket construction\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 83ae4661315d3d0ad52ddaa8fa5c8f1055c6c6f6)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h",
          "ssl/ssl_err.c||ssl/ssl_err.c",
          "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2231: # define SSL_F_TLS_CONSTRUCT_CLIENT_VERIFY                358",
          "2232: # define SSL_F_TLS_CONSTRUCT_FINISHED                     359",
          "2233: # define SSL_F_TLS_CONSTRUCT_HELLO_REQUEST                373",
          "2234: # define SSL_F_TLS_CONSTRUCT_SERVER_CERTIFICATE           374",
          "2235: # define SSL_F_TLS_CONSTRUCT_SERVER_DONE                  375",
          "2236: # define SSL_F_TLS_CONSTRUCT_SERVER_HELLO                 376",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2234: # define SSL_F_TLS_CONSTRUCT_NEW_SESSION_TICKET           428",
          "",
          "---------------"
        ],
        "ssl/ssl_err.c||ssl/ssl_err.c": [
          "File: ssl/ssl_err.c -> ssl/ssl_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "256:     {ERR_FUNC(SSL_F_TLS_CONSTRUCT_FINISHED), \"tls_construct_finished\"},",
          "257:     {ERR_FUNC(SSL_F_TLS_CONSTRUCT_HELLO_REQUEST),",
          "258:      \"tls_construct_hello_request\"},",
          "259:     {ERR_FUNC(SSL_F_TLS_CONSTRUCT_SERVER_CERTIFICATE),",
          "260:      \"tls_construct_server_certificate\"},",
          "261:     {ERR_FUNC(SSL_F_TLS_CONSTRUCT_SERVER_DONE), \"tls_construct_server_done\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "259:     {ERR_FUNC(SSL_F_TLS_CONSTRUCT_NEW_SESSION_TICKET),",
          "260:      \"tls_construct_new_session_ticket\"},",
          "",
          "---------------"
        ],
        "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c": [
          "File: ssl/statem/statem_srvr.c -> ssl/statem/statem_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2982: int tls_construct_new_session_ticket(SSL *s)",
          "2983: {",
          "2984:     unsigned char *senc = NULL;",
          "2986:     HMAC_CTX *hctx = NULL;",
          "2987:     unsigned char *p, *macstart;",
          "2988:     const unsigned char *const_p;",
          "",
          "[Removed Lines]",
          "2985:     EVP_CIPHER_CTX *ctx;",
          "",
          "[Added Lines]",
          "2985:     EVP_CIPHER_CTX *ctx = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3013:     ctx = EVP_CIPHER_CTX_new();",
          "3014:     hctx = HMAC_CTX_new();",
          "3016:     p = senc;",
          "3017:     if (!i2d_SSL_SESSION(s->session, &p))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3015:     if (ctx == NULL || hctx == NULL) {",
          "3016:         SSLerr(SSL_F_TLS_CONSTRUCT_NEW_SESSION_TICKET, ERR_R_MALLOC_FAILURE);",
          "3017:         goto err;",
          "3018:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aaec49fae2c4605ec578ad77b14913852fe4acca",
      "candidate_info": {
        "commit_hash": "aaec49fae2c4605ec578ad77b14913852fe4acca",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/aaec49fae2c4605ec578ad77b14913852fe4acca",
        "files": [
          "crypto/dsa/dsa_pmeth.c"
        ],
        "message": "Fix DSA parameter generation control error\n\nWhen setting the digest parameter for DSA parameter generation, the\nsignature MD was set instead of the parameter generation one.\nFortunately, that's also the one that was used for parameter\ngeneration, but it ultimately meant the parameter generator MD and the\nsignature MD would always be the same.\n\nFixes github issue #2016\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2250)\n(cherry picked from commit 8a05c4d3b5a1bfb9193ea24e71735e11de7168d2)",
        "before_after_code_files": [
          "crypto/dsdsa_pmeth.c||crypto/dsa/dsa_pmeth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dsdsa_pmeth.c||crypto/dsa/dsa_pmeth.c": [
          "File: crypto/dsdsa_pmeth.c -> crypto/dsa/dsa_pmeth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:         dctx->pmd = p2;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3bceb47a272cc930c48b88743c4734a891b1c09a",
      "candidate_info": {
        "commit_hash": "3bceb47a272cc930c48b88743c4734a891b1c09a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3bceb47a272cc930c48b88743c4734a891b1c09a",
        "files": [
          "apps/ca.c"
        ],
        "message": "Fix a double free in ca command line\n\nProviding a spkac file with no default section causes a double free.\n\nThanks to Brian Carpenter for reporting this issue.\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\n(cherry picked from commit 229bd12487f8576fc088dc4f641950ac33c62033)",
        "before_after_code_files": [
          "apps/ca.c||apps/ca.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/ca.c||apps/ca.c": [
          "File: apps/ca.c -> apps/ca.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1917:     sk = CONF_get_section(parms, \"default\");",
          "1918:     if (sk_CONF_VALUE_num(sk) == 0) {",
          "1919:         BIO_printf(bio_err, \"no name/value pairs found in %s\\n\", infile);",
          "1921:         goto end;",
          "1922:     }",
          "",
          "[Removed Lines]",
          "1920:         CONF_free(parms);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}