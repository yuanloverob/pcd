{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "09f1a0937deb8c10a30c1f405aff3163d346bbdf",
      "candidate_info": {
        "commit_hash": "09f1a0937deb8c10a30c1f405aff3163d346bbdf",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/09f1a0937deb8c10a30c1f405aff3163d346bbdf",
        "files": [
          "util/perl/TLSProxy/Proxy.pm"
        ],
        "message": "Create one permanent proxy socket per TLSProxy::Proxy instance\n\nOn Windows, we sometimes see a behavior with SO_REUSEADDR where there\nremains lingering listening sockets on the same address and port as a\nnewly created one.\n\nTo avoid this scenario, we don't create a new proxy port for each new\nclient run.  Instead, we create one proxy socket when the proxy object\nis created, and close it when destroying that object.\n\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/5095)\n\n(cherry picked from commit c7454e1af74b1b99f3f47f782a6ac484c4c55b7f)",
        "before_after_code_files": [
          "util/perl/TLSProxy/Proxy.pm||util/perl/TLSProxy/Proxy.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/perl/TLSProxy/Proxy.pm||util/perl/TLSProxy/Proxy.pm": [
          "File: util/perl/TLSProxy/Proxy.pm -> util/perl/TLSProxy/Proxy.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:         }",
          "95:     }",
          "97:     return bless $self, $class;",
          "98: }",
          "100: sub clearClient",
          "101: {",
          "102:     my $self = shift;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:     # Create the Proxy socket",
          "98:     my $proxaddr = $self->{proxy_addr};",
          "99:     $proxaddr =~ s/[\\[\\]]//g; # Remove [ and ]",
          "100:     my @proxyargs = (",
          "101:         LocalHost   => $proxaddr,",
          "102:         LocalPort   => $self->{proxy_port},",
          "103:         Proto       => \"tcp\",",
          "104:         Listen      => SOMAXCONN,",
          "105:        );",
          "106:     push @proxyargs, ReuseAddr => 1",
          "107:         unless $^O eq \"MSWin32\";",
          "108:     $self->{proxy_sock} = $IP_factory->(@proxyargs);",
          "110:     if ($self->{proxy_sock}) {",
          "111:         print \"Proxy started on port \".$self->{proxy_port}.\"\\n\";",
          "112:     } else {",
          "113:         warn \"Failed creating proxy socket (\".$proxaddr.\",\".$self->{proxy_port}.\"): $!\\n\";",
          "114:     }",
          "119: sub DESTROY",
          "120: {",
          "121:     my $self = shift;",
          "123:     $self->{proxy_sock}->close() if $self->{proxy_sock};",
          "124: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "145:     my ($self) = shift;",
          "146:     my $pid;",
          "148:     $pid = fork();",
          "149:     if ($pid == 0) {",
          "150:         my $execcmd = $self->execute",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174:     if ($self->{proxy_sock} == 0) {",
          "175:         return 0;",
          "176:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "175:     my ($self) = shift;",
          "176:     my $oldstdout;",
          "198:     if ($self->execute) {",
          "199:         my $pid = fork();",
          "200:         if ($pid == 0) {",
          "",
          "[Removed Lines]",
          "178:     # Create the Proxy socket",
          "179:     my $proxaddr = $self->proxy_addr;",
          "180:     $proxaddr =~ s/[\\[\\]]//g; # Remove [ and ]",
          "181:     my @proxyargs = (",
          "182:         LocalHost   => $proxaddr,",
          "183:         LocalPort   => $self->proxy_port,",
          "184:         Proto       => \"tcp\",",
          "185:         Listen      => SOMAXCONN,",
          "186:        );",
          "187:     push @proxyargs, ReuseAddr => 1",
          "188:         unless $^O eq \"MSWin32\";",
          "189:     my $proxy_sock = $IP_factory->(@proxyargs);",
          "191:     if ($proxy_sock) {",
          "192:         print \"Proxy started on port \".$self->proxy_port.\"\\n\";",
          "193:     } else {",
          "194:         warn \"Failed creating proxy socket (\".$proxaddr.\",\".$self->proxy_port.\"): $!\\n\";",
          "195:         return 0;",
          "196:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "227:     # Wait for incoming connection from client",
          "228:     my $client_sock;",
          "230:         warn \"Failed accepting incoming connection: $!\\n\";",
          "231:         return 0;",
          "232:     }",
          "",
          "[Removed Lines]",
          "229:     if(!($client_sock = $proxy_sock->accept())) {",
          "",
          "[Added Lines]",
          "239:     if(!($client_sock = $self->{proxy_sock}->accept())) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "299:         #Closing this also kills the child process",
          "300:         $client_sock->close();",
          "301:     }",
          "305:     if(!$self->debug) {",
          "306:         select($oldstdout);",
          "307:     }",
          "",
          "[Removed Lines]",
          "302:     if($proxy_sock) {",
          "303:         $proxy_sock->close();",
          "304:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "411:     my $self = shift;",
          "412:     return $have_IPv6;",
          "413: }",
          "416: sub proxy_addr",
          "417: {",
          "418:     my $self = shift;",
          "422:     return $self->{proxy_addr};",
          "423: }",
          "424: sub proxy_port",
          "425: {",
          "426:     my $self = shift;",
          "430:     return $self->{proxy_port};",
          "431: }",
          "432: sub server_addr",
          "433: {",
          "434:     my $self = shift;",
          "",
          "[Removed Lines]",
          "415: #Read/write accessors",
          "419:     if (@_) {",
          "420:       $self->{proxy_addr} = shift;",
          "421:     }",
          "427:     if (@_) {",
          "428:       $self->{proxy_port} = shift;",
          "429:     }",
          "",
          "[Added Lines]",
          "432: #Read/write accessors",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b52566f09bb21c00f85ebd6388a468bbff0c4a03",
      "candidate_info": {
        "commit_hash": "b52566f09bb21c00f85ebd6388a468bbff0c4a03",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b52566f09bb21c00f85ebd6388a468bbff0c4a03",
        "files": [
          "include/openssl/ssl.h"
        ],
        "message": "Fix SSL_CTX_get_{min,max}_proto_version integer conversion warning\n\nWhen using the SSL_CTX_get_min_min_version macro while compiling with\n-Wall, my compiler rightfully complains about this construction:\n\nwarning: passing argument 3 of \u2018SSL_CTX_ctrl\u2019 makes integer from\npointer without a cast [-Wint-conversion]\n\nThese macro's should use 0, instead of NULL, for the third argument,\nlike most other SSL_CTX_ctrl 'get' wrappers do.\n\nCLA: trivial\nSigned-off-by: Steffan Karger <steffan.karger@fox-it.com>\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\n(Merged from https://github.com/openssl/openssl/pull/5099)\n\n(cherry picked from commit 78d0afaa69c2ec662f6c97b47473c2c6a69d636c)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1294: #define SSL_CTX_set_max_proto_version(ctx, version) \\",
          "1295:         SSL_CTX_ctrl(ctx, SSL_CTRL_SET_MAX_PROTO_VERSION, version, NULL)",
          "1296: #define SSL_CTX_get_min_proto_version(ctx) \\",
          "1298: #define SSL_CTX_get_max_proto_version(ctx) \\",
          "1300: #define SSL_set_min_proto_version(s, version) \\",
          "1301:         SSL_ctrl(s, SSL_CTRL_SET_MIN_PROTO_VERSION, version, NULL)",
          "1302: #define SSL_set_max_proto_version(s, version) \\",
          "",
          "[Removed Lines]",
          "1297:         SSL_CTX_ctrl(ctx, SSL_CTRL_GET_MIN_PROTO_VERSION, NULL, NULL)",
          "1299:         SSL_CTX_ctrl(ctx, SSL_CTRL_GET_MAX_PROTO_VERSION, NULL, NULL)",
          "",
          "[Added Lines]",
          "1297:         SSL_CTX_ctrl(ctx, SSL_CTRL_GET_MIN_PROTO_VERSION, 0, NULL)",
          "1299:         SSL_CTX_ctrl(ctx, SSL_CTRL_GET_MAX_PROTO_VERSION, 0, NULL)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d667fa22c859709dc70b78f619e446f1e640f578",
      "candidate_info": {
        "commit_hash": "d667fa22c859709dc70b78f619e446f1e640f578",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d667fa22c859709dc70b78f619e446f1e640f578",
        "files": [
          "apps/s_socket.c"
        ],
        "message": "Fix some style nits in commit eee8a40\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5173)\n\n(cherry picked from commit df05f155a69b96b174e0e47bc689bf729de684b6)",
        "before_after_code_files": [
          "apps/s_socket.c||apps/s_socket.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_socket.c||apps/s_socket.c": [
          "File: apps/s_socket.c -> apps/s_socket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "160:     sock_protocol = BIO_ADDRINFO_protocol(res);",
          "161:     sock_address = BIO_ADDRINFO_address(res);",
          "162:     next = BIO_ADDRINFO_next(res);",
          "164:         sock_options |= BIO_SOCK_V6_ONLY;",
          "165:     if (next != NULL",
          "169:             sock_family = AF_INET6;",
          "170:             sock_address = BIO_ADDRINFO_address(next);",
          "173:             sock_options &= ~BIO_SOCK_V6_ONLY;",
          "174:     }",
          "176:     asock = BIO_socket(sock_family, sock_type, sock_protocol, 0);",
          "",
          "[Removed Lines]",
          "163:     if(sock_family == AF_INET6)",
          "166:         && BIO_ADDRINFO_socktype(next) == sock_type",
          "167:         && BIO_ADDRINFO_protocol(next) == sock_protocol) {",
          "168:         if (sock_family == AF_INET && BIO_ADDRINFO_family(next) == AF_INET6) {",
          "171:         }",
          "172:         else if (sock_family == AF_INET6 && BIO_ADDRINFO_family(next) == AF_INET)",
          "",
          "[Added Lines]",
          "163:     if (sock_family == AF_INET6)",
          "166:             && BIO_ADDRINFO_socktype(next) == sock_type",
          "167:             && BIO_ADDRINFO_protocol(next) == sock_protocol) {",
          "168:         if (sock_family == AF_INET",
          "169:                 && BIO_ADDRINFO_family(next) == AF_INET6) {",
          "172:         } else if (sock_family == AF_INET6",
          "173:                    && BIO_ADDRINFO_family(next) == AF_INET) {",
          "175:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7fb37eed05059e1b135ef5818fb9f2b3b93b8daa",
      "candidate_info": {
        "commit_hash": "7fb37eed05059e1b135ef5818fb9f2b3b93b8daa",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7fb37eed05059e1b135ef5818fb9f2b3b93b8daa",
        "files": [
          "crypto/ec/asm/ecp_nistz256-x86_64.pl"
        ],
        "message": "ec/asm/ecp_nistz256-x86_64.pl: minor sqr_montx cleanup.\n\nDrop some redundant instructions in reduction in ecp_nistz256_sqr_montx.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 8fc063dcc9668589fd95533d25932396d60987f9)",
        "before_after_code_files": [
          "crypto/ec/asm/ecp_nistz256-x86_64.pl||crypto/ec/asm/ecp_nistz256-x86_64.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ec/asm/ecp_nistz256-x86_64.pl||crypto/ec/asm/ecp_nistz256-x86_64.pl": [
          "File: crypto/ec/asm/ecp_nistz256-x86_64.pl -> crypto/ec/asm/ecp_nistz256-x86_64.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1185:  adox $t1, $acc5",
          "1186:  .byte 0x67,0x67",
          "1187:  mulx %rdx, $t0, $t4",
          "1189:  adox $t0, $acc6",
          "1190:   shlx $a_ptr, $acc0, $t0",
          "1191:  adox $t4, $acc7",
          "1192:   shrx $a_ptr, $acc0, $t4",
          "1195:  # reduction step 1",
          "1196:  add $t0, $acc1",
          "1197:  adc $t4, $acc2",
          "1201:  adc $t0, $acc3",
          "1202:   shlx $a_ptr, $acc1, $t0",
          "1203:  adc \\$0, $acc0",
          "",
          "[Removed Lines]",
          "1188:   mov $acc0, %rdx",
          "1193:   mov .Lpoly+8*3(%rip), $t1",
          "1199:  mulx $t1, $t0, $acc0",
          "1200:   mov $acc1, %rdx",
          "",
          "[Added Lines]",
          "1188:   mov .Lpoly+8*3(%rip), %rdx",
          "1193:  mov %rdx,$t1",
          "1199:  mulx $acc0, $t0, $acc0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1207:  add $t0, $acc2",
          "1208:  adc $t4, $acc3",
          "1212:  adc $t0, $acc0",
          "1213:   shlx $a_ptr, $acc2, $t0",
          "1214:  adc \\$0, $acc1",
          "",
          "[Removed Lines]",
          "1210:  mulx $t1, $t0, $acc1",
          "1211:   mov $acc2, %rdx",
          "",
          "[Added Lines]",
          "1209:  mulx $acc1, $t0, $acc1",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1218:  add $t0, $acc3",
          "1219:  adc $t4, $acc0",
          "1223:  adc $t0, $acc1",
          "1224:   shlx $a_ptr, $acc3, $t0",
          "1225:  adc \\$0, $acc2",
          "",
          "[Removed Lines]",
          "1221:  mulx $t1, $t0, $acc2",
          "1222:   mov $acc3, %rdx",
          "",
          "[Added Lines]",
          "1219:  mulx $acc2, $t0, $acc2",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1229:  add $t0, $acc0",
          "1230:  adc $t4, $acc1",
          "1233:  adc $t0, $acc2",
          "1234:  adc \\$0, $acc3",
          "1238:   mov .Lpoly+8*1(%rip), $a_ptr",
          "1239:  adc $acc1, $acc5",
          "1240:   mov $acc4, $acc0",
          "",
          "[Removed Lines]",
          "1232:  mulx $t1, $t0, $acc3",
          "1236:  xor $t3, $t3  # cf=0",
          "1237:  adc $acc0, $acc4  # accumulate upper half",
          "",
          "[Added Lines]",
          "1229:  mulx $acc3, $t0, $acc3",
          "1233:  xor $t3, $t3",
          "1234:  add $acc0, $acc4  # accumulate upper half",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1243:   mov $acc5, $acc1",
          "1244:  adc \\$0, $t3",
          "1248:   mov $acc6, $acc2",
          "1249:  sbb $a_ptr, $acc5  # .Lpoly[1]",
          "1250:  sbb \\$0, $acc6  # .Lpoly[2]",
          "",
          "[Removed Lines]",
          "1246:  xor %eax, %eax  # cf=0",
          "1247:  sbb \\$-1, $acc4  # .Lpoly[0]",
          "",
          "[Added Lines]",
          "1243:  sub \\$-1, $acc4  # .Lpoly[0]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "77543471c709089d3845f6bdcf13fa4557ec57dc",
      "candidate_info": {
        "commit_hash": "77543471c709089d3845f6bdcf13fa4557ec57dc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/77543471c709089d3845f6bdcf13fa4557ec57dc",
        "files": [
          "util/perl/TLSProxy/Proxy.pm"
        ],
        "message": "Fix race condition in TLSProxy\n\nNormally TLSProxy waits for the s_server process to finish before\ncontinuing. However in cases where serverconnects > 1 we need to keep the\ns_server process around for a later test so we continue immediately. This\nmeans that TAP test output can end up being printed to stdout at the same\ntime as s_server is printing stuff. This confuses the test runner and can\ncause spurious test failures. This commit introduces a small delay in cases\nwhere serverconnects > 1 in order to give s_server enough time to finish\nwhat it was doing before we continue to the next test.\n\nFixes #4129\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4661)",
        "before_after_code_files": [
          "util/perl/TLSProxy/Proxy.pm||util/perl/TLSProxy/Proxy.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/perl/TLSProxy/Proxy.pm||util/perl/TLSProxy/Proxy.pm": [
          "File: util/perl/TLSProxy/Proxy.pm -> util/perl/TLSProxy/Proxy.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: use TLSProxy::ServerHello;",
          "20: use TLSProxy::ServerKeyExchange;",
          "21: use TLSProxy::NewSessionTicket;",
          "23: my $have_IPv6 = 0;",
          "24: my $IP_factory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use Time::HiRes qw/usleep/;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "317:               .$self->serverpid.\"\\n\";",
          "318:         waitpid( $self->serverpid, 0);",
          "319:         die \"exit code $? from server process\\n\" if $? != 0;",
          "320:     }",
          "321:     die \"clientpid is zero\\n\" if $self->clientpid == 0;",
          "322:     print \"Waiting for client process to close: \".$self->clientpid.\"\\n\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "321:     } else {",
          "322:         # Give s_server sufficient time to finish what it was doing",
          "323:         usleep(250000);",
          "",
          "---------------"
        ]
      }
    }
  ]
}