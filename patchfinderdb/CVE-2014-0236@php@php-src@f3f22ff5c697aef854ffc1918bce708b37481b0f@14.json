{
  "cve_id": "CVE-2014-0236",
  "cve_desc": "file before 5.18, as used in the Fileinfo component in PHP before 5.6.0, allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a zero root_storage value in a CDF file, related to cdf.c and readcdf.c.",
  "repo": "php/php-src",
  "patch_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
  "patch_info": {
    "commit_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "files": [
      "NEWS",
      "ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c"
    ],
    "message": "Fixed bug #67329 fileinfo: NULL pointer deference flaw by processing certain CDF files",
    "before_after_code_files": [
      "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c"
    ]
  },
  "patch_diff": {
    "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c": [
      "File: ext/fileinfo/libmagic/cdf.c -> ext/fileinfo/libmagic/cdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include \"file.h\"",
      "37: #ifndef lint",
      "39: #endif",
      "41: #include <assert.h>",
      "",
      "[Removed Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.53 2013/02/26 16:20:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "689: int",
      "690: cdf_read_short_stream(const cdf_info_t *info, const cdf_header_t *h,",
      "692: {",
      "693:  size_t i;",
      "694:  const cdf_directory_t *d;",
      "696:  for (i = 0; i < dir->dir_len; i++)",
      "697:   if (dir->dir_tab[i].d_type == CDF_DIR_TYPE_ROOT_STORAGE)",
      "698:    break;",
      "",
      "[Removed Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn)",
      "",
      "[Added Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn,",
      "692:     const cdf_directory_t **root)",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h": [
      "File: ext/fileinfo/libmagic/cdf.h -> ext/fileinfo/libmagic/cdf.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "300: int cdf_read_ssat(const cdf_info_t *, const cdf_header_t *, const cdf_sat_t *,",
      "301:     cdf_sat_t *);",
      "302: int cdf_read_short_stream(const cdf_info_t *, const cdf_header_t *,",
      "304: int cdf_read_property_info(const cdf_stream_t *, const cdf_header_t *, uint32_t,",
      "305:     cdf_property_info_t **, size_t *, size_t *);",
      "306: int cdf_read_summary_info(const cdf_info_t *, const cdf_header_t *,",
      "",
      "[Removed Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *);",
      "",
      "[Added Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *,",
      "304:     const cdf_directory_t **);",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c": [
      "File: ext/fileinfo/libmagic/readcdf.c -> ext/fileinfo/libmagic/readcdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #include \"file.h\"",
      "28: #ifndef lint",
      "30: #endif",
      "32: #include <stdlib.h>",
      "",
      "[Removed Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
      "",
      "[Added Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.40 2014/03/06 15:23:33 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: # define strcasestr strstr",
      "78: #endif",
      "80: private const char *",
      "81: cdf_app_to_mime(const char *vbuf, const struct nv *nv)",
      "82: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80: static const struct cv {",
      "81:  uint64_t clsid[2];",
      "82:  const char *mime;",
      "83: } clsid2mime[] = {",
      "84:  {",
      "85: #ifdef PHP_WIN32",
      "86:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "87: #else",
      "88:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "89: #endif",
      "90:   \"x-msi\",",
      "91:  }",
      "92: }, clsid2desc[] = {",
      "93:  {",
      "94: #ifdef PHP_WIN32",
      "95:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "96: #else",
      "97:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "98: #endif",
      "99:   \"MSI Installer\",",
      "100:  },",
      "101: };",
      "103: private const char *",
      "104: cdf_clsid_to_mime(const uint64_t clsid[2], const struct cv *cv)",
      "105: {",
      "106:  size_t i;",
      "107:  for (i = 0; cv[i].mime != NULL; i++) {",
      "108:   if (clsid[0] == cv[i].clsid[0] && clsid[1] == cv[i].clsid[1])",
      "109:    return cv[i].mime;",
      "110:  }",
      "111:  return NULL;",
      "112: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "96: private int",
      "97: cdf_file_property_info(struct magic_set *ms, const cdf_property_info_t *info,",
      "99: {",
      "100:         size_t i;",
      "101:         cdf_timestamp_t tp;",
      "",
      "[Removed Lines]",
      "98:     size_t count)",
      "",
      "[Added Lines]",
      "132:     size_t count, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "108:  memset(&ts, 0, sizeof(ts));",
      "110:         for (i = 0; i < count; i++) {",
      "111:                 cdf_print_property_name(buf, sizeof(buf), info[i].pi_id);",
      "112:                 switch (info[i].pi_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         if (!NOTMIME(ms) && root_storage)",
      "145:   str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2mime);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "163:                                                     buf, vbuf) == -1)",
      "164:                                                         return -1;",
      "165:                                         }",
      "167:         CDF_PROPERTY_NAME_OF_APPLICATION) {",
      "168:      str = cdf_app_to_mime(vbuf, app2mime);",
      "169:     }",
      "",
      "[Removed Lines]",
      "166:                                 } else if (info[i].pi_id ==",
      "",
      "[Added Lines]",
      "203:                                 } else if (str == NULL && info[i].pi_id ==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "218: private int",
      "219: cdf_file_summary_info(struct magic_set *ms, const cdf_header_t *h,",
      "221: {",
      "222:         cdf_summary_info_header_t si;",
      "223:         cdf_property_info_t *info;",
      "",
      "[Removed Lines]",
      "220:     const cdf_stream_t *sst)",
      "",
      "[Added Lines]",
      "257:     const cdf_stream_t *sst, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "228:                 return -1;",
      "230:         if (NOTMIME(ms)) {",
      "231:                 if (file_printf(ms, \"Composite Document File V2 Document\")",
      "232:       == -1)",
      "233:                         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "268:   const char *str;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "255:                                 return -2;",
      "256:                         break;",
      "257:                 }",
      "261:         free(info);",
      "263:         return m == -1 ? -2 : m;",
      "",
      "[Removed Lines]",
      "258:         }",
      "260:         m = cdf_file_property_info(ms, info, count);",
      "",
      "[Added Lines]",
      "297:   if (root_storage) {",
      "298:    str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2desc);",
      "299:    if (str)",
      "300:     if (file_printf(ms, \", %s\", str) == -1)",
      "301:      return -2;",
      "302:    }",
      "303:   }",
      "305:         m = cdf_file_property_info(ms, info, count, root_storage);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "275:         int i;",
      "276:         const char *expn = \"\";",
      "277:         const char *corrupt = \"corrupt: \";",
      "279:         info.i_fd = fd;",
      "280:         info.i_buf = buf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:         const cdf_directory_t *root_storage;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "308:                 goto out2;",
      "309:         }",
      "312:                 expn = \"Cannot read short stream\";",
      "313:                 goto out3;",
      "314:         }",
      "",
      "[Removed Lines]",
      "311:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst)) == -1) {",
      "",
      "[Added Lines]",
      "357:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst,",
      "358:      &root_storage)) == -1) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "329: #ifdef CDF_DEBUG",
      "330:         cdf_dump_summary_info(&h, &scn);",
      "331: #endif",
      "334:  if (i == 0) {",
      "335:   const char *str = NULL;",
      "336:   cdf_directory_t *d;",
      "337:   char name[__arraycount(d->d_name)];",
      "338:   size_t j, k;",
      "340:    d = &dir.dir_tab[j];",
      "341:    for (k = 0; k < sizeof(name); k++)",
      "342:     name[k] = (char)cdf_tole2(d->d_name[k]);",
      "349:   }",
      "350:   if (NOTMIME(ms)) {",
      "351:    if (str != NULL) {",
      "",
      "[Removed Lines]",
      "332:         if ((i = cdf_file_summary_info(ms, &h, &scn)) < 0)",
      "333:                 expn = \"Can't expand summary_info\";",
      "339:   for (j = 0; j < dir.dir_len; j++) {",
      "343:    if (NOTMIME(ms))",
      "344:     str = cdf_app_to_mime(name, name2desc);",
      "345:    else",
      "346:     str = cdf_app_to_mime(name, name2mime);",
      "347:    if (str != NULL)",
      "348:     break;",
      "",
      "[Added Lines]",
      "379:         if ((i = cdf_file_summary_info(ms, &h, &scn, root_storage)) < 0)",
      "380:             expn = \"Can't expand summary_info\";",
      "388:   for (j = 0; str == NULL && j < dir.dir_len; j++) {",
      "392:    str = cdf_app_to_mime(name,",
      "393:        NOTMIME(ms) ? name2desc : name2mime);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "00cacc604890967ab104634371c03af64a9c09a5",
      "candidate_info": {
        "commit_hash": "00cacc604890967ab104634371c03af64a9c09a5",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/00cacc604890967ab104634371c03af64a9c09a5",
        "files": [
          "ext/mbstring/tests/mb_eregi_replace.phpt"
        ],
        "message": "Fixed test for commit 997be125eb0228c5b1b6dd278f617791e71192c6",
        "before_after_code_files": [
          "ext/mbstring/tests/mb_eregi_replace.phpt||ext/mbstring/tests/mb_eregi_replace.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/mbstring/tests/mb_eregi_replace.phpt||ext/mbstring/tests/mb_eregi_replace.phpt": [
          "File: ext/mbstring/tests/mb_eregi_replace.phpt -> ext/mbstring/tests/mb_eregi_replace.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:         $st = mb_eregi_replace($i,$u,$st);",
          "28:     }",
          "29:     return $st;",
          "32: echo do_translit(\"\u041f\u0435\u0430\u0440\");",
          "33: ?>",
          "34: --EXPECT--",
          "",
          "[Removed Lines]",
          "30: }",
          "",
          "[Added Lines]",
          "30: }",
          "32: mb_regex_encoding('ISO-8859-1');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b538816b0bff9f974223be1b39e4cbdd9cda8adc",
      "candidate_info": {
        "commit_hash": "b538816b0bff9f974223be1b39e4cbdd9cda8adc",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/b538816b0bff9f974223be1b39e4cbdd9cda8adc",
        "files": [
          "sapi/phpdbg/phpdbg_btree.c",
          "sapi/phpdbg/phpdbg_btree.h"
        ],
        "message": "Update copyright year to 2014",
        "before_after_code_files": [
          "sapi/phpdbg/phpdbg_btree.c||sapi/phpdbg/phpdbg_btree.c",
          "sapi/phpdbg/phpdbg_btree.h||sapi/phpdbg/phpdbg_btree.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sapi/phpdbg/phpdbg_btree.c||sapi/phpdbg/phpdbg_btree.c": [
          "File: sapi/phpdbg/phpdbg_btree.c -> sapi/phpdbg/phpdbg_btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:    +----------------------------------------------------------------------+",
          "3:    | PHP Version 5                                                        |",
          "4:    +----------------------------------------------------------------------+",
          "6:    +----------------------------------------------------------------------+",
          "7:    | This source file is subject to version 3.01 of the PHP license,   |",
          "8:    | that is bundled with this package in the file LICENSE, and is        |",
          "",
          "[Removed Lines]",
          "5:    | Copyright (c) 1997-2013 The PHP Group                                |",
          "",
          "[Added Lines]",
          "5:    | Copyright (c) 1997-2014 The PHP Group                                |",
          "",
          "---------------"
        ],
        "sapi/phpdbg/phpdbg_btree.h||sapi/phpdbg/phpdbg_btree.h": [
          "File: sapi/phpdbg/phpdbg_btree.h -> sapi/phpdbg/phpdbg_btree.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:    +----------------------------------------------------------------------+",
          "3:    | PHP Version 5                                                        |",
          "4:    +----------------------------------------------------------------------+",
          "6:    +----------------------------------------------------------------------+",
          "7:    | This source file is subject to version 3.01 of the PHP license,   |",
          "8:    | that is bundled with this package in the file LICENSE, and is        |",
          "",
          "[Removed Lines]",
          "5:    | Copyright (c) 1997-2013 The PHP Group                                |",
          "",
          "[Added Lines]",
          "5:    | Copyright (c) 1997-2014 The PHP Group                                |",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c8617d82cc9333e87e264a77bcaa53f9754a034e",
      "candidate_info": {
        "commit_hash": "c8617d82cc9333e87e264a77bcaa53f9754a034e",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/c8617d82cc9333e87e264a77bcaa53f9754a034e",
        "files": [
          "config.w32"
        ],
        "message": "removed /EHa as __try/__catch syntax is used anyway\n\nsee http://msdn.microsoft.com/en-us/library/1deeycx5.aspx",
        "before_after_code_files": [
          "config.w32||config.w32"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "config.w32||config.w32": [
          "File: config.w32 -> config.w32",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: if (PHP_PHPDBG == \"yes\") {",
          "9:  SAPI('phpdbg', PHPDBG_SOURCES, PHPDBG_EXE);",
          "10:  ADD_FLAG(\"LIBS_PHPDBG\", \"ws2_32.lib user32.lib\");",
          "12:  ADD_FLAG(\"CFLAGS_PHPDBG\", \"/D YY_NO_UNISTD_H\");",
          "13: }",
          "15: if (PHP_PHPDBGS == \"yes\") {",
          "16:  SAPI('phpdbgs', PHPDBG_SOURCES, PHPDBG_DLL, '/D PHP_PHPDBG_EXPORTS /I win32');",
          "17:  ADD_FLAG(\"LIBS_PHPDBGS\", \"ws2_32.lib user32.lib\");",
          "19:  ADD_FLAG(\"CFLAGS_PHPDBGS\", \"/D YY_NO_UNISTD_H\");",
          "20: }",
          "",
          "[Removed Lines]",
          "11:  DEFINE(\"CFLAGS\", configure_subst.item(\"CFLAGS\") + \" /EHa\");",
          "18:  DEFINE(\"CFLAGS\", configure_subst.item(\"CFLAGS\") + \" /EHa\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1a293e6bd9237e8dacc3ca4aec26e1a188466633",
      "candidate_info": {
        "commit_hash": "1a293e6bd9237e8dacc3ca4aec26e1a188466633",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/1a293e6bd9237e8dacc3ca4aec26e1a188466633",
        "files": [
          "ext/mysqli/mysqli_priv.h"
        ],
        "message": "rename a constant - old name to new name",
        "before_after_code_files": [
          "ext/mysqli/mysqli_priv.h||ext/mysqli/mysqli_priv.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/mysqli/mysqli_priv.h||ext/mysqli/mysqli_priv.h": [
          "File: ext/mysqli/mysqli_priv.h -> ext/mysqli/mysqli_priv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "118: #else",
          "120: #define MYSQLI_ASYNC   0",
          "122: #endif",
          "",
          "[Removed Lines]",
          "121: #define MYSQLI_STORE_RESULT_OFS 0",
          "",
          "[Added Lines]",
          "121: #define MYSQLI_STORE_RESULT_COPY_DATA 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad7eae751251f98c2d02a87804f50a9daac08ffe",
      "candidate_info": {
        "commit_hash": "ad7eae751251f98c2d02a87804f50a9daac08ffe",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/ad7eae751251f98c2d02a87804f50a9daac08ffe",
        "files": [
          "sapi/litespeed/lsapilib.c"
        ],
        "message": "Do not kill children process in pre-fork mode when parent process quit.",
        "before_after_code_files": [
          "sapi/litespeed/lsapilib.c||sapi/litespeed/lsapilib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sapi/litespeed/lsapilib.c||sapi/litespeed/lsapilib.c": [
          "File: sapi/litespeed/lsapilib.c -> sapi/litespeed/lsapilib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2864:         }",
          "2865:     }",
          "2866:     sigaction( SIGUSR1, &old_usr1, 0 );",
          "2869:     return -1;",
          "2871: }",
          "",
          "[Removed Lines]",
          "2867:     kill( -getpgrp(), SIGUSR1 );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}