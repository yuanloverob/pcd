{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b81aadde0c7d35038aec89c5350512d7d2914cdb",
      "candidate_info": {
        "commit_hash": "b81aadde0c7d35038aec89c5350512d7d2914cdb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b81aadde0c7d35038aec89c5350512d7d2914cdb",
        "files": [
          "crypto/rand/rand_egd.c"
        ],
        "message": "RAND_egd_bytes: No need to check RAND_status on connection error.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1886)\n(cherry picked from commit c2114afc1622ff0113974b3696e557ea8bf7ffb4)",
        "before_after_code_files": [
          "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c": [
          "File: crypto/rand/rand_egd.c -> crypto/rand/rand_egd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:     int num, ret = -1;",
          "233:     num = RAND_query_egd_bytes(path, NULL, bytes);",
          "234:     if (RAND_status() == 1)",
          "235:         ret = num;",
          "236:  err:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "234:     if (num < 0)",
          "235:         goto err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d7155335a56c2bc0d399336c46fefb497cc1131c",
      "candidate_info": {
        "commit_hash": "d7155335a56c2bc0d399336c46fefb497cc1131c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d7155335a56c2bc0d399336c46fefb497cc1131c",
        "files": [
          "Configurations/unix-Makefile.tmpl"
        ],
        "message": "remove test/.rnd on make clean\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2344)\n(cherry picked from commit 122fa088524571a3b60ebf301873f69afdac8f7a)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "285:  -$(RM) `find . -name '*{- $objext -}' -a \\! -path \"./.git/*\"`",
          "286:  $(RM) core",
          "287:  $(RM) tags TAGS",
          "288:  $(RM) openssl.pc libcrypto.pc libssl.pc",
          "289:  -$(RM) `find . -type l -a \\! -path \"./.git/*\"`",
          "290:  $(RM) $(TARFILE)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288:  $(RM) test/.rnd",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9d5083273a54c990ec509f2e7da240eaaafb52a3",
      "candidate_info": {
        "commit_hash": "9d5083273a54c990ec509f2e7da240eaaafb52a3",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9d5083273a54c990ec509f2e7da240eaaafb52a3",
        "files": [
          "test/ecdhtest.c",
          "test/evptests.txt"
        ],
        "message": "ecdhtest.c: move KATs to evptests.txt\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3188)",
        "before_after_code_files": [
          "test/ecdhtest.c||test/ecdhtest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ecdhtest.c||test/ecdhtest.c": [
          "File: test/ecdhtest.c -> test/ecdhtest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: static const char rnd_seed[] =",
          "50:     \"string to make the random number generator think it has entropy\";",
          "135: static EC_KEY *mk_eckey(int nid, const char *str)",
          "",
          "[Removed Lines]",
          "52: typedef struct {",
          "53:     const int nid;",
          "54:     const char *da;",
          "55:     const char *db;",
          "56:     const char *Z;",
          "57: } ecdh_kat_t;",
          "59: static const ecdh_kat_t ecdh_kats[] = {",
          "61:     { NID_X9_62_prime192v1,",
          "62:     \"323FA3169D8E9C6593F59476BC142000AB5BE0E249C43426\",",
          "63:     \"631F95BB4A67632C9C476EEE9AB695AB240A0499307FCF62\",",
          "64:     \"AD420182633F8526BFE954ACDA376F05E5FF4F837F54FEBE\" },",
          "65:     { NID_secp224r1,",
          "66:     \"B558EB6C288DA707BBB4F8FBAE2AB9E9CB62E3BC5C7573E22E26D37F\",",
          "67:     \"AC3B1ADD3D9770E6F6A708EE9F3B8E0AB3B480E9F27F85C88B5E6D18\",",
          "68:     \"52272F50F46F4EDC9151569092F46DF2D96ECC3B6DC1714A4EA949FA\" },",
          "69:     { NID_X9_62_prime256v1,",
          "70:     \"814264145F2F56F2E96A8E337A1284993FAF432A5ABCE59E867B7291D507A3AF\",",
          "71:     \"2CE1788EC197E096DB95A200CC0AB26A19CE6BCCAD562B8EEE1B593761CF7F41\",",
          "72:     \"DD0F5396219D1EA393310412D19A08F1F5811E9DC8EC8EEA7F80D21C820C2788\" },",
          "73:     { NID_secp384r1,",
          "74:     \"D27335EA71664AF244DD14E9FD1260715DFD8A7965571C48D709EE7A7962A156\"",
          "75:     \"D706A90CBCB5DF2986F05FEADB9376F1\",",
          "76:     \"52D1791FDB4B70F89C0F00D456C2F7023B6125262C36A7DF1F80231121CCE3D3\"",
          "77:     \"9BE52E00C194A4132C4A6C768BCD94D2\",",
          "78:     \"5EA1FC4AF7256D2055981B110575E0A8CAE53160137D904C59D926EB1B8456E4\"",
          "79:     \"27AA8A4540884C37DE159A58028ABC0E\" },",
          "80:     { NID_secp521r1,",
          "81:     \"0113F82DA825735E3D97276683B2B74277BAD27335EA71664AF2430CC4F33459\"",
          "82:     \"B9669EE78B3FFB9B8683015D344DCBFEF6FB9AF4C6C470BE254516CD3C1A1FB4\"",
          "83:     \"7362\",",
          "84:     \"00CEE3480D8645A17D249F2776D28BAE616952D1791FDB4B70F7C3378732AA1B\"",
          "85:     \"22928448BCD1DC2496D435B01048066EBE4F72903C361B1A9DC1193DC2C9D089\"",
          "86:     \"1B96\",",
          "87:     \"00CDEA89621CFA46B132F9E4CFE2261CDE2D4368EB5656634C7CC98C7A00CDE5\"",
          "88:     \"4ED1866A0DD3E6126C9D2F845DAFF82CEB1DA08F5D87521BB0EBECA77911169C\"",
          "89:     \"20CC\" },",
          "91:     { NID_X9_62_prime256v1,",
          "92:     \"C88F01F510D9AC3F70A292DAA2316DE544E9AAB8AFE84049C62A9C57862D1433\",",
          "93:     \"C6EF9C5D78AE012A011164ACB397CE2088685D8F06BF9BE0B283AB46476BEE53\",",
          "94:     \"D6840F6B42F6EDAFD13116E0E12565202FEF8E9ECE7DCE03812464D04B9442DE\" },",
          "95:     { NID_secp384r1,",
          "96:     \"099F3C7034D4A2C699884D73A375A67F7624EF7C6B3C0F160647B67414DCE655\"",
          "97:     \"E35B538041E649EE3FAEF896783AB194\",",
          "98:     \"41CB0779B4BDB85D47846725FBEC3C9430FAB46CC8DC5060855CC9BDA0AA2942\"",
          "99:     \"E0308312916B8ED2960E4BD55A7448FC\",",
          "100:     \"11187331C279962D93D604243FD592CB9D0A926F422E47187521287E7156C5C4\"",
          "101:     \"D603135569B9E9D09CF5D4A270F59746\" },",
          "102:     { NID_secp521r1,",
          "103:     \"0037ADE9319A89F4DABDB3EF411AACCCA5123C61ACAB57B5393DCE47608172A0\"",
          "104:     \"95AA85A30FE1C2952C6771D937BA9777F5957B2639BAB072462F68C27A57382D\"",
          "105:     \"4A52\",",
          "106:     \"0145BA99A847AF43793FDD0E872E7CDFA16BE30FDC780F97BCCC3F078380201E\"",
          "107:     \"9C677D600B343757A3BDBF2A3163E4C2F869CCA7458AA4A4EFFC311F5CB15168\"",
          "108:     \"5EB9\",",
          "109:     \"01144C7D79AE6956BC8EDB8E7C787C4521CB086FA64407F97894E5E6B2D79B04\"",
          "110:     \"D1427E73CA4BAA240A34786859810C06B3C715A3A8CC3151F2BEE417996D19F3\"",
          "111:     \"DDEA\" },",
          "113:     { NID_brainpoolP256r1,",
          "114:     \"81DB1EE100150FF2EA338D708271BE38300CB54241D79950F77B063039804F1D\",",
          "115:     \"55E40BC41E37E3E2AD25C3C6654511FFA8474A91A0032087593852D3E7D76BD3\",",
          "116:     \"89AFC39D41D3B327814B80940B042590F96556EC91E6AE7939BCE31F3A18BF2B\" },",
          "117:     { NID_brainpoolP384r1,",
          "118:     \"1E20F5E048A5886F1F157C74E91BDE2B98C8B52D58E5003D57053FC4B0BD65D6\"",
          "119:     \"F15EB5D1EE1610DF870795143627D042\",",
          "120:     \"032640BC6003C59260F7250C3DB58CE647F98E1260ACCE4ACDA3DD869F74E01F\"",
          "121:     \"8BA5E0324309DB6A9831497ABAC96670\",",
          "122:     \"0BD9D3A7EA0B3D519D09D8E48D0785FB744A6B355E6304BC51C229FBBCE239BB\"",
          "123:     \"ADF6403715C35D4FB2A5444F575D4F42\" },",
          "124:     { NID_brainpoolP512r1,",
          "125:     \"16302FF0DBBB5A8D733DAB7141C1B45ACBC8715939677F6A56850A38BD87BD59\"",
          "126:     \"B09E80279609FF333EB9D4C061231FB26F92EEB04982A5F1D1764CAD57665422\",",
          "127:     \"230E18E1BCC88A362FA54E4EA3902009292F7F8033624FD471B5D8ACE49D12CF\"",
          "128:     \"ABBC19963DAB8E2F1EBA00BFFB29E4D72D13F2224562F405CB80503666B25429\",",
          "129:     \"A7927098655F1F9976FA50A9D566865DC530331846381C87256BAF3226244B76\"",
          "130:     \"D36403C024D7BBF0AA0803EAFF405D3D24F11A9B5C0BEF679FE1454B21C4CD1F\" }",
          "131: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "166:     return NULL;",
          "167: }",
          "226: #include \"ecdhtest_cavs.h\"",
          "",
          "[Removed Lines]",
          "174: static int ecdh_kat(BIO *out, const ecdh_kat_t *kat)",
          "175: {",
          "176:     int rv = 0;",
          "177:     EC_KEY *key1 = NULL, *key2 = NULL;",
          "178:     BIGNUM *bnz = NULL;",
          "179:     unsigned char *Ztmp = NULL, *Z = NULL;",
          "180:     size_t Ztmplen, Zlen;",
          "181:     BIO_puts(out, \"Testing ECDH shared secret with \");",
          "182:     BIO_puts(out, OBJ_nid2sn(kat->nid));",
          "183:     if(!BN_hex2bn(&bnz, kat->Z))",
          "184:         goto err;",
          "185:     key1 = mk_eckey(kat->nid, kat->da);",
          "186:     key2 = mk_eckey(kat->nid, kat->db);",
          "187:     if (!key1 || !key2)",
          "188:         goto err;",
          "189:     Ztmplen = (EC_GROUP_get_degree(EC_KEY_get0_group(key1)) + 7) / 8;",
          "190:     Zlen = BN_num_bytes(bnz);",
          "191:     if (Zlen > Ztmplen)",
          "192:         goto err;",
          "193:     if((Ztmp = OPENSSL_zalloc(Ztmplen)) == NULL)",
          "194:         goto err;",
          "195:     if((Z = OPENSSL_zalloc(Ztmplen)) == NULL)",
          "196:         goto err;",
          "197:     if(!BN_bn2binpad(bnz, Z, Ztmplen))",
          "198:         goto err;",
          "199:     if (!ECDH_compute_key(Ztmp, Ztmplen,",
          "200:                           EC_KEY_get0_public_key(key2), key1, 0))",
          "201:         goto err;",
          "202:     if (memcmp(Ztmp, Z, Ztmplen))",
          "203:         goto err;",
          "204:     memset(Ztmp, 0, Ztmplen);",
          "205:     if (!ECDH_compute_key(Ztmp, Ztmplen,",
          "206:                           EC_KEY_get0_public_key(key1), key2, 0))",
          "207:         goto err;",
          "208:     if (memcmp(Ztmp, Z, Ztmplen))",
          "209:         goto err;",
          "210:     rv = 1;",
          "211:  err:",
          "212:     EC_KEY_free(key1);",
          "213:     EC_KEY_free(key2);",
          "214:     OPENSSL_free(Ztmp);",
          "215:     OPENSSL_free(Z);",
          "216:     BN_free(bnz);",
          "217:     if (rv)",
          "218:         BIO_puts(out, \" ok\\n\");",
          "219:     else {",
          "220:         fprintf(stderr, \"Error in ECDH routines\\n\");",
          "221:         ERR_print_errors_fp(stderr);",
          "222:     }",
          "223:     return rv;",
          "224: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "388:     for (n = 0; n < (sizeof(ecdh_cavs_kats)/sizeof(ecdh_cavs_kat_t)); n++) {",
          "",
          "[Removed Lines]",
          "382:     for (n = 0; n < (sizeof(ecdh_kats)/sizeof(ecdh_kat_t)); n++) {",
          "383:         if (!ecdh_kat(out, &ecdh_kats[n]))",
          "384:             goto err;",
          "385:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5cd178f9dd057a76147ccd307bd3cb0672ac098",
      "candidate_info": {
        "commit_hash": "b5cd178f9dd057a76147ccd307bd3cb0672ac098",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b5cd178f9dd057a76147ccd307bd3cb0672ac098",
        "files": [
          "crypto/ec/eck_prn.c"
        ],
        "message": "Increase the size of the stack buffer to prevent an overflow.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2721)\n(cherry picked from commit 8fce04ee3540ba3039bb66df34ea3f076a599ab9)",
        "before_after_code_files": [
          "crypto/ec/eck_prn.c||crypto/ec/eck_prn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ec/eck_prn.c||crypto/ec/eck_prn.c": [
          "File: crypto/ec/eck_prn.c -> crypto/ec/eck_prn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "238:                      size_t len, int off)",
          "239: {",
          "240:     size_t i;",
          "243:     if (buf == NULL)",
          "244:         return 1;",
          "",
          "[Removed Lines]",
          "241:     char str[128];",
          "",
          "[Added Lines]",
          "241:     char str[128 + 1 + 4];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "edc18749bd5dfb7e12513d3978f78f9b56104fd6",
      "candidate_info": {
        "commit_hash": "edc18749bd5dfb7e12513d3978f78f9b56104fd6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/edc18749bd5dfb7e12513d3978f78f9b56104fd6",
        "files": [
          "crypto/threads_win.c"
        ],
        "message": "Fixed deadlock in CRYPTO_THREAD_run_once for Windows\n\nFixed deadlock in CRYPTO_THREAD_run_once() if call to init() is causing\na recursive call to CRYPTO_THREAD_run_once() again that is causing a hot\ndeadloop inside do { } while (result == ONCE_ININIT); section.\n\nCLA: trivial\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1913)\n\n(cherry picked from commit 349d1cfddcfa33d352240582a3803f2eba39d9a0)",
        "before_after_code_files": [
          "crypto/threads_win.c||crypto/threads_win.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/threads_win.c||crypto/threads_win.c": [
          "File: crypto/threads_win.c -> crypto/threads_win.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     do {",
          "79:         result = InterlockedCompareExchange(lock, ONCE_ININIT, ONCE_UNINITED);",
          "80:         if (result == ONCE_UNINITED) {",
          "83:             return 1;",
          "84:         }",
          "85:     } while (result == ONCE_ININIT);",
          "",
          "[Removed Lines]",
          "81:             init();",
          "",
          "[Added Lines]",
          "82:             init();",
          "",
          "---------------"
        ]
      }
    }
  ]
}