{
  "cve_id": "CVE-2011-2719",
  "cve_desc": "libraries/auth/swekey/swekey.auth.lib.php in phpMyAdmin 3.x before 3.3.10.3 and 3.4.x before 3.4.3.2 does not properly manage sessions associated with Swekey authentication, which allows remote attackers to modify the SESSION superglobal array, other superglobal arrays, and certain swekey.auth.lib.php local variables via a crafted query string, a related issue to CVE-2011-2505.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "571cdc6ff4bf375871b594f4e06f8ad3159d1754",
  "patch_info": {
    "commit_hash": "571cdc6ff4bf375871b594f4e06f8ad3159d1754",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/571cdc6ff4bf375871b594f4e06f8ad3159d1754",
    "files": [
      "libraries/auth/swekey/swekey.auth.lib.php"
    ],
    "message": "Pass token along with swekey auth requests",
    "before_after_code_files": [
      "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
    ]
  },
  "patch_diff": {
    "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php": [
      "File: libraries/auth/swekey/swekey.auth.lib.php -> libraries/auth/swekey/swekey.auth.lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         <script>",
      "189:      if (key.length != 32)",
      "190:      {",
      "192:      }",
      "193:      else",
      "194:      {",
      "195:          var url = \"\" + window.location;",
      "196:          if (url.indexOf(\"?\") > 0)",
      "197:              url = url.substr(0, url.indexOf(\"?\"));",
      "199:        var otp = Swekey_GetOtp(key, <?php echo '\"'.$_SESSION['SWEKEY']['RND_TOKEN'].'\"';?>);",
      "201:      }",
      "202:         </script>",
      "203:         <?php",
      "",
      "[Removed Lines]",
      "191:          window.location.search=\"?swekey_id=\" + key;",
      "198:          Swekey_SetUnplugUrl(key, \"pma_login\", url + \"?session_to_unset=<?php echo session_id();?>\");",
      "200:          window.location.search=\"?swekey_id=\" + key + \"&swekey_otp=\" + otp;",
      "",
      "[Added Lines]",
      "191:          window.location.search=\"?swekey_id=\" + key + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
      "198:          Swekey_SetUnplugUrl(key, \"pma_login\", url + \"?session_to_unset=<?php echo session_id();?>&token=<?php echo $_SESSION[' PMA_token ']; ?>\");",
      "200:          window.location.search=\"?swekey_id=\" + key + \"&swekey_otp=\" + otp + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "630b8260be45eb9b211f5d7628dbb9e5c1b05bc6",
      "candidate_info": {
        "commit_hash": "630b8260be45eb9b211f5d7628dbb9e5c1b05bc6",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/630b8260be45eb9b211f5d7628dbb9e5c1b05bc6",
        "files": [
          "libraries/auth/swekey/swekey.auth.lib.php"
        ],
        "message": "Pass token along with swekey auth requests",
        "before_after_code_files": [
          "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
          ],
          "candidate": [
            "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php": [
          "File: libraries/auth/swekey/swekey.auth.lib.php -> libraries/auth/swekey/swekey.auth.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:         <script>",
          "189:      if (key.length != 32)",
          "190:      {",
          "192:      }",
          "193:      else",
          "194:      {",
          "195:          var url = \"\" + window.location;",
          "196:          if (url.indexOf(\"?\") > 0)",
          "197:              url = url.substr(0, url.indexOf(\"?\"));",
          "199:        var otp = Swekey_GetOtp(key, <?php echo '\"'.$_SESSION['SWEKEY']['RND_TOKEN'].'\"';?>);",
          "201:      }",
          "202:         </script>",
          "203:         <?php",
          "",
          "[Removed Lines]",
          "191:          window.location.search=\"?swekey_id=\" + key;",
          "198:          Swekey_SetUnplugUrl(key, \"pma_login\", url + \"?session_to_unset=<?php echo session_id();?>\");",
          "200:          window.location.search=\"?swekey_id=\" + key + \"&swekey_otp=\" + otp;",
          "",
          "[Added Lines]",
          "191:          window.location.search=\"?swekey_id=\" + key + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "198:          Swekey_SetUnplugUrl(key, \"pma_login\", url + \"?session_to_unset=<?php echo session_id();?>&token=<?php echo $_SESSION[' PMA_token ']; ?>\");",
          "200:          window.location.search=\"?swekey_id=\" + key + \"&swekey_otp=\" + otp + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea6a3d59de70b575cf0a8b560add6e130f361363",
      "candidate_info": {
        "commit_hash": "ea6a3d59de70b575cf0a8b560add6e130f361363",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/ea6a3d59de70b575cf0a8b560add6e130f361363",
        "files": [
          "libraries/auth/swekey/swekey.auth.lib.php"
        ],
        "message": "Coding style improvements (if statements)",
        "before_after_code_files": [
          "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
          ],
          "candidate": [
            "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php": [
          "File: libraries/auth/swekey/swekey.auth.lib.php -> libraries/auth/swekey/swekey.auth.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:         foreach ($valid_swekeys as $line) {",
          "26:             if (preg_match(\"/^[0-9A-F]{32}:.+$/\", $line) != false) {",
          "27:                 $items = explode(\":\", $line);",
          "29:                     $_SESSION['SWEKEY']['VALID_SWEKEYS'][$items[0]] = trim($items[1]);",
          "30:             } elseif (preg_match(\"/^[A-Z_]+=.*$/\", $line) != false) {",
          "31:                 $items = explode(\"=\", $line);",
          "32:                 $_SESSION['SWEKEY']['CONF_'.trim($items[0])] = trim($items[1]);",
          "",
          "[Removed Lines]",
          "28:                 if (count($items) == 2)",
          "",
          "[Added Lines]",
          "28:                 if (count($items) == 2) {",
          "30:                 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:         }",
          "38:             $_SESSION['SWEKEY']['CONF_SERVER_CHECK'] = \"\";",
          "40:             $_SESSION['SWEKEY']['CONF_SERVER_RNDTOKEN'] = \"\";",
          "42:              $_SESSION['SWEKEY']['CONF_SERVER_STATUS'] = \"\";",
          "44:             $_SESSION['SWEKEY']['CONF_CA_FILE'] = \"\";",
          "46:             $_SESSION['SWEKEY']['CONF_ENABLE_TOKEN_CACHE'] = true;",
          "48:                $_SESSION['SWEKEY']['CONF_DEBUG'] = false;",
          "49:      }",
          "52:     if ($_SESSION['SWEKEY']['ENABLED']) {",
          "54:            return false;",
          "55:     }",
          "57:     return true;",
          "",
          "[Removed Lines]",
          "37:         if (! isset($_SESSION['SWEKEY']['CONF_SERVER_CHECK']))",
          "39:         if (! isset($_SESSION['SWEKEY']['CONF_SERVER_RNDTOKEN']))",
          "41:         if (! isset($_SESSION['SWEKEY']['CONF_SERVER_STATUS']))",
          "43:         if (! isset($_SESSION['SWEKEY']['CONF_CA_FILE']))",
          "45:         if (! isset($_SESSION['SWEKEY']['CONF_ENABLE_TOKEN_CACHE']))",
          "47:         if (! isset($_SESSION['SWEKEY']['CONF_DEBUG']))",
          "53:         if (empty($_SESSION['SWEKEY']['AUTHENTICATED_SWEKEY']))",
          "",
          "[Added Lines]",
          "38:         if (! isset($_SESSION['SWEKEY']['CONF_SERVER_CHECK'])) {",
          "40:         }",
          "41:         if (! isset($_SESSION['SWEKEY']['CONF_SERVER_RNDTOKEN'])) {",
          "43:         }",
          "44:         if (! isset($_SESSION['SWEKEY']['CONF_SERVER_STATUS'])) {",
          "46:         }",
          "47:         if (! isset($_SESSION['SWEKEY']['CONF_CA_FILE'])) {",
          "49:         }",
          "50:         if (! isset($_SESSION['SWEKEY']['CONF_ENABLE_TOKEN_CACHE'])) {",
          "52:         }",
          "53:         if (! isset($_SESSION['SWEKEY']['CONF_DEBUG'])) {",
          "55:         }",
          "60:         if (empty($_SESSION['SWEKEY']['AUTHENTICATED_SWEKEY'])) {",
          "62:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "64: function Swekey_auth_error()",
          "65: {",
          "67:         return null;",
          "70:         return null;",
          "72:     include_once './libraries/auth/swekey/authentication.inc.php';",
          "",
          "[Removed Lines]",
          "66:     if (! isset($_SESSION['SWEKEY']))",
          "69:     if (! $_SESSION['SWEKEY']['ENABLED'])",
          "",
          "[Added Lines]",
          "74:     if (! isset($_SESSION['SWEKEY'])) {",
          "76:     }",
          "78:     if (! $_SESSION['SWEKEY']['ENABLED']) {",
          "80:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "80:                 echo $key.',';",
          "81:         ?>\";",
          "82:         var connected_keys = Swekey_ListKeyIds().split(\",\");",
          "86:                    return connected_keys[i];",
          "93:         return \"none\";",
          "94:     }",
          "",
          "[Removed Lines]",
          "83:          for (i in connected_keys)",
          "84:                if (connected_keys[i] != null && connected_keys[i].length == 32)",
          "85:                 if (valids.indexOf(connected_keys[i]) >= 0)",
          "89:         if (connected_keys.length > 0)",
          "90:                if (connected_keys[0].length == 32)",
          "91:                   return \"unknown_key_\" + connected_keys[0];",
          "",
          "[Added Lines]",
          "93:         for (i in connected_keys) {",
          "94:             if (connected_keys[i] != null && connected_keys[i].length == 32) {",
          "95:                 if (valids.indexOf(connected_keys[i]) >= 0) {",
          "97:                 }",
          "98:             }",
          "99:         }",
          "102:         if (connected_keys.length > 0) {",
          "103:             if (connected_keys[0].length == 32) {",
          "104:                 return \"unknown_key_\" + connected_keys[0];",
          "105:             }",
          "106:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "98:     function timedCheck()",
          "99:     {",
          "102:             window.location.search = \"?swekey_reset\";",
          "105:             setTimeout(\"timedCheck()\",1000);",
          "106:     }",
          "108:     setTimeout(\"timedCheck()\",1000);",
          "109:     </script>",
          "110:      <?php",
          "113:         return null;",
          "116:         return sprintf(__('File %s does not contain any key id'), $GLOBALS['cfg']['Server']['auth_swekey_config']);",
          "118:     include_once \"libraries/auth/swekey/swekey.php\";",
          "",
          "[Removed Lines]",
          "100:         if (key != Swekey_GetValidKey())",
          "101:         {",
          "103:         }",
          "104:         else",
          "112:     if (! empty($_SESSION['SWEKEY']['AUTHENTICATED_SWEKEY']))",
          "115:     if (count($_SESSION['SWEKEY']['VALID_SWEKEYS']) == 0)",
          "",
          "[Added Lines]",
          "115:         if (key != Swekey_GetValidKey()) {",
          "117:         } else {",
          "119:         }",
          "126:     if (! empty($_SESSION['SWEKEY']['AUTHENTICATED_SWEKEY'])) {",
          "128:     }",
          "130:     if (count($_SESSION['SWEKEY']['VALID_SWEKEYS']) == 0) {",
          "132:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "126:     if (empty($caFile)) {",
          "127:         $caFile = __FILE__;",
          "128:         $pos = strrpos($caFile, '/');",
          "130:             $pos = strrpos($caFile, '\\\\'); // windows",
          "131:         $caFile = substr($caFile, 0, $pos + 1).'musbe-ca.crt';",
          "",
          "[Removed Lines]",
          "129:         if ($pos === false)",
          "",
          "[Added Lines]",
          "145:         if ($pos === false) {",
          "147:         }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "184:         window.location.search=\"?swekey_id=\" + key + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "185:     } else {",
          "186:         var url = \"\" + window.location;",
          "188:             url = url.substr(0, url.indexOf(\"?\"));",
          "189:         Swekey_SetUnplugUrl(key, \"pma_login\", url + \"?session_to_unset=<?php echo session_id();?>&token=<?php echo $_SESSION[' PMA_token ']; ?>\");",
          "190:         var otp = Swekey_GetOtp(key, <?php echo '\"'.$_SESSION['SWEKEY']['RND_TOKEN'].'\"';?>);",
          "191:         window.location.search=\"?swekey_id=\" + key + \"&swekey_otp=\" + otp + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "",
          "[Removed Lines]",
          "187:         if (url.indexOf(\"?\") > 0)",
          "",
          "[Added Lines]",
          "204:         if (url.indexOf(\"?\") > 0) {",
          "206:         }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "233:             var swekey_status = document.createElement('img');",
          "234:             swekey_status.setAttribute('onclick', 'open_swekey_site()');",
          "235:             swekey_status.setAttribute('style', 'width:8px; height:16px; border:0px; vspace:0px; hspace:0px; frameborder:no');",
          "238:                 swekey_status.setAttribute('src', 'http://artwork.swekey.com/unplugged-8x16.png');",
          "240:                 input_go.disabled = true;",
          "244:                 swekey_status.setAttribute('src', 'http://artwork.swekey.com/plugged-8x16.png');",
          "246:                 input_username.value = user;",
          "247:             }",
          "251:                 input_username.parentNode.appendChild(swekey_status);",
          "253:                 input_username.parentNode.insertBefore(swekey_status, input_username.nextSibling);",
          "255:         <?php",
          "256:         echo '</script>';",
          "",
          "[Removed Lines]",
          "236:             if (user == null)",
          "237:             {",
          "241:             }",
          "242:             else",
          "243:             {",
          "248:              input_username.readOnly = true;",
          "250:             if (input_username.nextSibling == null)",
          "252:             else",
          "",
          "[Added Lines]",
          "254:             if (user == null) {",
          "258:             } else {",
          "263:             input_username.readOnly = true;",
          "265:             if (input_username.nextSibling == null) {",
          "267:             } else {",
          "269:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "df4f5b7c96a0846a9a98241a5e7d567917d8db0b",
      "candidate_info": {
        "commit_hash": "df4f5b7c96a0846a9a98241a5e7d567917d8db0b",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/df4f5b7c96a0846a9a98241a5e7d567917d8db0b",
        "files": [
          "libraries/auth/swekey/swekey.auth.lib.php"
        ],
        "message": "Whitespace",
        "before_after_code_files": [
          "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
          ],
          "candidate": [
            "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php": [
          "File: libraries/auth/swekey/swekey.auth.lib.php -> libraries/auth/swekey/swekey.auth.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:         return \"Internal Error: CA File $caFile not found\";",
          "145:     $result = null;",
          "149:     if (isset($swekey_id)) {",
          "150:         unset($_SESSION['SWEKEY']['AUTHENTICATED_SWEKEY']);",
          "",
          "[Removed Lines]",
          "146:  $swekey_id = $_GET['swekey_id'];",
          "147:  $swekey_otp = $_GET['swekey_otp'];",
          "",
          "[Added Lines]",
          "146:     $swekey_id = $_GET['swekey_id'];",
          "147:     $swekey_otp = $_GET['swekey_otp'];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186:     if (! isset($swekey_id)) {",
          "187:         ?>",
          "188:         <script>",
          "202:         </script>",
          "203:         <?php",
          "204:         return __('Authenticating...');",
          "",
          "[Removed Lines]",
          "189:  if (key.length != 32)",
          "190:  {",
          "191:      window.location.search=\"?swekey_id=\" + key + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "192:  }",
          "193:  else",
          "194:  {",
          "195:      var url = \"\" + window.location;",
          "196:      if (url.indexOf(\"?\") > 0)",
          "197:          url = url.substr(0, url.indexOf(\"?\"));",
          "198:      Swekey_SetUnplugUrl(key, \"pma_login\", url + \"?session_to_unset=<?php echo session_id();?>&token=<?php echo $_SESSION[' PMA_token ']; ?>\");",
          "199:      var otp = Swekey_GetOtp(key, <?php echo '\"'.$_SESSION['SWEKEY']['RND_TOKEN'].'\"';?>);",
          "200:      window.location.search=\"?swekey_id=\" + key + \"&swekey_otp=\" + otp + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "201:  }",
          "",
          "[Added Lines]",
          "189:     if (key.length != 32)",
          "190:     {",
          "191:         window.location.search=\"?swekey_id=\" + key + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "192:     }",
          "193:     else",
          "194:     {",
          "195:         var url = \"\" + window.location;",
          "196:         if (url.indexOf(\"?\") > 0)",
          "197:             url = url.substr(0, url.indexOf(\"?\"));",
          "198:         Swekey_SetUnplugUrl(key, \"pma_login\", url + \"?session_to_unset=<?php echo session_id();?>&token=<?php echo $_SESSION[' PMA_token ']; ?>\");",
          "199:         var otp = Swekey_GetOtp(key, <?php echo '\"'.$_SESSION['SWEKEY']['RND_TOKEN'].'\"';?>);",
          "200:         window.location.search=\"?swekey_id=\" + key + \"&swekey_otp=\" + otp + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "201:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94c6836f8b16129a64383ac03beb4a9639ba9559",
      "candidate_info": {
        "commit_hash": "94c6836f8b16129a64383ac03beb4a9639ba9559",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/94c6836f8b16129a64383ac03beb4a9639ba9559",
        "files": [
          "db_datadict.php",
          "db_operations.php",
          "db_printview.php",
          "db_search.php",
          "export.php",
          "libraries/auth/swekey/swekey.auth.lib.php",
          "libraries/common.inc.php",
          "libraries/database_interface.lib.php",
          "libraries/db_links.inc.php",
          "tbl_chart.php",
          "tbl_export.php",
          "tbl_relation.php",
          "tbl_replace.php",
          "tbl_select.php",
          "tbl_structure.php",
          "tbl_tracking.php",
          "test/classes/PMA_Config_test.php",
          "test/libraries/common/PMA_quoting_slashing_test.php",
          "test/libraries/core/PMA_getLinks_test.php",
          "test/libraries/core/PMA_headerLocation_test_disabled.php",
          "test/selenium/PmaSeleniumLoginTest.php"
        ],
        "message": "fix coding style : control structures",
        "before_after_code_files": [
          "db_datadict.php||db_datadict.php",
          "db_operations.php||db_operations.php",
          "db_printview.php||db_printview.php",
          "db_search.php||db_search.php",
          "export.php||export.php",
          "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php",
          "libraries/common.inc.php||libraries/common.inc.php",
          "libraries/database_interface.lib.php||libraries/database_interface.lib.php",
          "libraries/db_links.inc.php||libraries/db_links.inc.php",
          "tbl_chart.php||tbl_chart.php",
          "tbl_export.php||tbl_export.php",
          "tbl_relation.php||tbl_relation.php",
          "tbl_replace.php||tbl_replace.php",
          "tbl_select.php||tbl_select.php",
          "tbl_structure.php||tbl_structure.php",
          "tbl_tracking.php||tbl_tracking.php",
          "test/classes/PMA_Config_test.php||test/classes/PMA_Config_test.php",
          "test/libraries/common/PMA_quoting_slashing_test.php||test/libraries/common/PMA_quoting_slashing_test.php",
          "test/libraries/core/PMA_getLinks_test.php||test/libraries/core/PMA_getLinks_test.php",
          "test/libraries/core/PMA_headerLocation_test_disabled.php||test/libraries/core/PMA_headerLocation_test_disabled.php",
          "test/selenium/PmaSeleniumLoginTest.php||test/selenium/PmaSeleniumLoginTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
          ],
          "candidate": [
            "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "db_datadict.php||db_datadict.php": [
          "File: db_datadict.php -> db_datadict.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: $tables = PMA_DBI_get_tables($db);",
          "61: $count  = 0;",
          "63:     $comments = PMA_getComments($db, $table);",
          "65:     echo '<div>' . \"\\n\";",
          "",
          "[Removed Lines]",
          "62: foreach($tables as $table) {",
          "",
          "[Added Lines]",
          "62: foreach ($tables as $table) {",
          "",
          "---------------"
        ],
        "db_operations.php||db_operations.php": [
          "File: db_operations.php -> db_operations.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:                 $triggers = PMA_DBI_get_triggers($db, $each_table, '');",
          "167:                     $_error = true;",
          "169:                     $sql_query = $back . $sql_query;",
          "",
          "[Removed Lines]",
          "164:                 if (! PMA_Table::moveCopy($db, $each_table, $newname, $each_table,",
          "165:                     isset($this_what) ? $this_what : 'data', $move, 'db_copy'))",
          "166:                 {",
          "",
          "[Added Lines]",
          "164:                 if (! PMA_Table::moveCopy(",
          "165:                     $db, $each_table, $newname, $each_table,",
          "166:                     isset($this_what) ? $this_what : 'data', $move, 'db_copy')",
          "167:                 ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "273:             $message = PMA_Message::success(__('Database %s has been renamed to %s'));",
          "274:             $message->addParam($db);",
          "275:             $message->addParam($newname);",
          "277:             $message = PMA_Message::success(__('Database %s has been copied to %s'));",
          "278:             $message->addParam($db);",
          "279:             $message->addParam($newname);",
          "",
          "[Removed Lines]",
          "276:         } elseif (! $_error)  {",
          "",
          "[Added Lines]",
          "277:         } elseif (! $_error) {",
          "",
          "---------------"
        ],
        "db_printview.php||db_printview.php": [
          "File: db_printview.php -> db_printview.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "93: if ($num_tables == 0) {",
          "94:     echo __('No tables found in database.');",
          "98:     ?>",
          "99: <table>",
          "100: <thead>",
          "",
          "[Removed Lines]",
          "95: }",
          "97: else {",
          "",
          "[Added Lines]",
          "95: } else {",
          "",
          "---------------"
        ],
        "db_search.php||db_search.php": [
          "File: db_search.php -> db_search.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "259: if ($GLOBALS['is_ajax_request'] == true) {",
          "260:     exit;",
          "263:     echo '</div>';//end searchresults div",
          "264: }",
          "",
          "[Removed Lines]",
          "261: }",
          "262: else {",
          "",
          "[Added Lines]",
          "261: } else {",
          "",
          "---------------"
        ],
        "export.php||export.php": [
          "File: export.php -> export.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:                 if ($GLOBALS['compression'] == 'bzip'  && @function_exists('bzcompress')) {",
          "157:                     $dump_buffer = bzcompress($dump_buffer);",
          "162:                     $dump_buffer = gzencode($dump_buffer);",
          "163:                 }",
          "",
          "[Removed Lines]",
          "158:                 }",
          "160:                 elseif ($GLOBALS['compression'] == 'gzip' && @function_exists('gzencode')) {",
          "",
          "[Added Lines]",
          "158:                 } elseif ($GLOBALS['compression'] == 'gzip' && @function_exists('gzencode')) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "632:             $zipfile -> addFile($dump_buffer, substr($filename, 0, -4));",
          "633:             $dump_buffer = $zipfile -> file();",
          "634:         }",
          "638:         if (@function_exists('bzcompress')) {",
          "639:             $dump_buffer = bzcompress($dump_buffer);",
          "640:         }",
          "644:         if (@function_exists('gzencode') && !@ini_get('zlib.output_compression')) {",
          "646:             $dump_buffer = gzencode($dump_buffer);",
          "",
          "[Removed Lines]",
          "635:     }",
          "637:     elseif ($compression == 'bzip') {",
          "641:     }",
          "643:     elseif ($compression == 'gzip') {",
          "",
          "[Added Lines]",
          "634:     } elseif ($compression == 'bzip') {",
          "639:     } elseif ($compression == 'gzip') {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "672:     } else {",
          "673:         echo $dump_buffer;",
          "674:     }",
          "683:     echo '</textarea>' . \"\\n\"",
          "684:        . '    </form>' . \"\\n\";",
          "",
          "[Removed Lines]",
          "675: }",
          "679: else {",
          "",
          "[Added Lines]",
          "672: } else {",
          "",
          "---------------"
        ],
        "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php": [
          "File: libraries/auth/swekey/swekey.auth.lib.php -> libraries/auth/swekey/swekey.auth.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:         $_SESSION['SWEKEY']['VALID_SWEKEYS'] = array();",
          "24:         $valid_swekeys = explode(\"\\n\", @file_get_contents($confFile));",
          "25:         foreach ($valid_swekeys as $line) {",
          "28:                 $items = explode(\":\", $line);",
          "29:                 if (count($items) == 2)",
          "30:                     $_SESSION['SWEKEY']['VALID_SWEKEYS'][$items[0]] = trim($items[1]);",
          "33:                 $items = explode(\"=\", $line);",
          "34:                 $_SESSION['SWEKEY']['CONF_'.trim($items[0])] = trim($items[1]);",
          "35:             }",
          "",
          "[Removed Lines]",
          "26:             if (preg_match(\"/^[0-9A-F]{32}:.+$/\", $line) != false)",
          "27:             {",
          "31:             }",
          "32:             else if (preg_match(\"/^[A-Z_]+=.*$/\", $line) != false) {",
          "",
          "[Added Lines]",
          "26:             if (preg_match(\"/^[0-9A-F]{32}:.+$/\", $line) != false) {",
          "30:             } elseif (preg_match(\"/^[A-Z_]+=.*$/\", $line) != false) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "125:     Swekey_EnableTokenCache($_SESSION['SWEKEY']['CONF_ENABLE_TOKEN_CACHE']);",
          "127:     $caFile = $_SESSION['SWEKEY']['CONF_CA_FILE'];",
          "130:         $caFile = __FILE__;",
          "131:         $pos = strrpos($caFile, '/');",
          "132:         if ($pos === false)",
          "",
          "[Removed Lines]",
          "128:     if (empty($caFile))",
          "129:     {",
          "",
          "[Added Lines]",
          "126:     if (empty($caFile)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "138:     }",
          "141:         Swekey_SetCAFile($caFile);",
          "143:         return \"Internal Error: CA File $caFile not found\";",
          "145:     $result = null;",
          "146:     $swekey_id = $_GET['swekey_id'];",
          "",
          "[Removed Lines]",
          "140:     if (file_exists($caFile))",
          "142:     else if (! empty($caFile) && (substr($_SESSION['SWEKEY']['CONF_SERVER_CHECK'], 0, 8) == \"https://\"))",
          "",
          "[Added Lines]",
          "137:     if (file_exists($caFile)) {",
          "139:     } elseif (! empty($caFile) && (substr($_SESSION['SWEKEY']['CONF_SERVER_CHECK'], 0, 8) == \"https://\")) {",
          "141:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "150:         unset($_SESSION['SWEKEY']['AUTHENTICATED_SWEKEY']);",
          "151:         if (! isset($_SESSION['SWEKEY']['RND_TOKEN'])) {",
          "152:             unset($swekey_id);",
          "155:             if (strlen($swekey_id) == 32) {",
          "156:                 $res = Swekey_CheckOtp($swekey_id, $_SESSION['SWEKEY']['RND_TOKEN'], $swekey_otp);",
          "157:                 unset($_SESSION['SWEKEY']['RND_TOKEN']);",
          "158:                 if (! $res) {",
          "159:                     $result = __('Hardware authentication failed') . ' (' . Swekey_GetLastError() . ')';",
          "162:                     $_SESSION['SWEKEY']['AUTHENTICATED_SWEKEY'] = $swekey_id;",
          "163:                     $_SESSION['SWEKEY']['FORCE_USER'] = $_SESSION['SWEKEY']['VALID_SWEKEYS'][$swekey_id];",
          "164:                     return null;",
          "165:                 }",
          "168:                 $result = __('No valid authentication key plugged');",
          "169:                 if ($_SESSION['SWEKEY']['CONF_DEBUG'])",
          "170:                 {",
          "",
          "[Removed Lines]",
          "153:         }",
          "154:         else {",
          "160:                 }",
          "161:                 else {",
          "166:             }",
          "167:             else {",
          "",
          "[Added Lines]",
          "151:         } else {",
          "157:                 } else {",
          "162:             } else {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "173:                 unset($_SESSION['SWEKEY']['CONF_LOADED']); // reload the conf file",
          "174:              }",
          "175:         }",
          "178:         unset($_SESSION['SWEKEY']);",
          "180:     $_SESSION['SWEKEY']['RND_TOKEN'] = Swekey_GetFastRndToken();",
          "181:     if (strlen($_SESSION['SWEKEY']['RND_TOKEN']) != 64) {",
          "",
          "[Removed Lines]",
          "176:     }",
          "177:     else",
          "",
          "[Added Lines]",
          "171:     } else {",
          "173:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "186:     if (! isset($swekey_id)) {",
          "187:         ?>",
          "188:         <script>",
          "191:         window.location.search=\"?swekey_id=\" + key + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "195:         var url = \"\" + window.location;",
          "196:         if (url.indexOf(\"?\") > 0)",
          "197:             url = url.substr(0, url.indexOf(\"?\"));",
          "",
          "[Removed Lines]",
          "189:     if (key.length != 32)",
          "190:     {",
          "192:     }",
          "193:     else",
          "194:     {",
          "",
          "[Added Lines]",
          "184:     if (key.length != 32) {",
          "186:     } else {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "226:     if (isset($_SESSION['SWEKEY']) && $_SESSION['SWEKEY']['ENABLED']) {",
          "227:         echo '<script type=\"text/javascript\">';",
          "229:             echo 'var user = null;';",
          "231:            echo 'var user = \"'.$_SESSION['SWEKEY']['FORCE_USER'].'\";';",
          "233:         ?>",
          "234:             function open_swekey_site()",
          "",
          "[Removed Lines]",
          "228:         if (empty($_SESSION['SWEKEY']['FORCE_USER']))",
          "230:         else",
          "",
          "[Added Lines]",
          "220:         if (empty($_SESSION['SWEKEY']['FORCE_USER'])) {",
          "222:         } else {",
          "224:         }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "265:     }",
          "266: }",
          "270:     session_write_close();",
          "271:     session_id($_GET['session_to_unset']);",
          "272:     session_start();",
          "",
          "[Removed Lines]",
          "268: if (!empty($_GET['session_to_unset']))",
          "269: {",
          "",
          "[Added Lines]",
          "261: if (!empty($_GET['session_to_unset'])) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "276:     exit;",
          "277: }",
          "281:     unset($_SESSION['SWEKEY']);",
          "282: }",
          "",
          "[Removed Lines]",
          "279: if (isset($_GET['swekey_reset']))",
          "280: {",
          "",
          "[Added Lines]",
          "271: if (isset($_GET['swekey_reset'])) {",
          "",
          "---------------"
        ],
        "libraries/common.inc.php||libraries/common.inc.php": [
          "File: libraries/common.inc.php -> libraries/common.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1033: if (isset($_REQUEST['grid_edit']) && $_REQUEST['grid_edit'] == true) {",
          "1034:     $GLOBALS['grid_edit'] = true;",
          "1037:     $GLOBALS['grid_edit'] = false;",
          "1038: }",
          "",
          "[Removed Lines]",
          "1035: }",
          "1036: else {",
          "",
          "[Added Lines]",
          "1035: } else {",
          "",
          "---------------"
        ],
        "libraries/database_interface.lib.php||libraries/database_interface.lib.php": [
          "File: libraries/database_interface.lib.php -> libraries/database_interface.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "500:             foreach ($each_tables as $table_name => $each_table) {",
          "501:                 if ('comment' === $tbl_is_group",
          "505:                     unset($each_tables[$table_name]);",
          "506:                     continue;",
          "",
          "[Removed Lines]",
          "502:                   && 0 === strpos($each_table['Comment'], $table))",
          "503:                 {",
          "",
          "[Added Lines]",
          "502:                   && 0 === strpos($each_table['Comment'], $table)",
          "503:                 ) {",
          "",
          "---------------"
        ],
        "libraries/db_links.inc.php||libraries/db_links.inc.php": [
          "File: libraries/db_links.inc.php -> libraries/db_links.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: $tab_search['icon']     = 'ic_b_search';",
          "62: $tab_search['link']     = 'db_search.php';",
          "66:     $tab_tracking['text'] = __('Tracking');",
          "67:     $tab_tracking['icon'] = 'ic_eye';",
          "68:     $tab_tracking['link'] = 'db_tracking.php';",
          "",
          "[Removed Lines]",
          "64: if (PMA_Tracker::isActive())",
          "65: {",
          "",
          "[Added Lines]",
          "64: if (PMA_Tracker::isActive()) {",
          "",
          "---------------"
        ],
        "tbl_chart.php||tbl_chart.php": [
          "File: tbl_chart.php -> tbl_chart.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: $GLOBALS['js_include'][] = 'highcharts/exporting.js';",
          "28:     $GLOBALS['js_include'][] = 'canvg/flashcanvas.js';",
          "29: }",
          "30: $GLOBALS['js_include'][] = 'canvg/canvg.js';",
          "",
          "[Removed Lines]",
          "27: if(PMA_USR_BROWSER_AGENT == 'IE' && PMA_USR_BROWSER_VER < 9) {",
          "",
          "[Added Lines]",
          "27: if (PMA_USR_BROWSER_AGENT == 'IE' && PMA_USR_BROWSER_VER < 9) {",
          "",
          "---------------"
        ],
        "tbl_export.php||tbl_export.php": [
          "File: tbl_export.php -> tbl_export.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:             $wheres[] = '(' . implode(') OR (',$where_clause) . ')';",
          "55:         }",
          "58:             $wheres[] = $analyzed_sql[0]['where_clause'];",
          "59:         }",
          "",
          "[Removed Lines]",
          "57:         if (!empty($analyzed_sql[0]['where_clause']))  {",
          "",
          "[Added Lines]",
          "57:         if (!empty($analyzed_sql[0]['where_clause'])) {",
          "",
          "---------------"
        ],
        "tbl_relation.php||tbl_relation.php": [
          "File: tbl_relation.php -> tbl_relation.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "387: $columns = PMA_DBI_get_columns($db, $table);",
          "389: if (count($columns) > 0) {",
          "391:         $save_row[] = $row;",
          "392:     }",
          "393:     $saved_row_cnt  = count($save_row);",
          "",
          "[Removed Lines]",
          "390:     foreach($columns as $row) {",
          "",
          "[Added Lines]",
          "390:     foreach ($columns as $row) {",
          "",
          "---------------"
        ],
        "tbl_replace.php||tbl_replace.php": [
          "File: tbl_replace.php -> tbl_replace.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "520:         $edited_values = array();",
          "521:         parse_str($_REQUEST['transform_fields_list'], $edited_values);",
          "524:             $include_file = PMA_securePath($transformation['transformation']);",
          "525:             $column_name = $transformation['column_name'];",
          "",
          "[Removed Lines]",
          "523:         foreach($mime_map as $transformation) {",
          "",
          "[Added Lines]",
          "523:         foreach ($mime_map as $transformation) {",
          "",
          "---------------"
        ],
        "tbl_select.php||tbl_select.php": [
          "File: tbl_select.php -> tbl_select.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "252: </fieldset>",
          "254: <?php",
          "265:     $sql_query = 'SELECT ' . (isset($distinct) ? 'DISTINCT ' : '');",
          "",
          "[Removed Lines]",
          "255: }",
          "262: else {",
          "",
          "[Added Lines]",
          "255: } else {",
          "",
          "---------------"
        ],
        "tbl_structure.php||tbl_structure.php": [
          "File: tbl_structure.php -> tbl_structure.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "352:         } else {",
          "353:             echo $row['Default'];",
          "354:         }",
          "357:         echo '<i>' . _pgettext('None for default','None') . '</i>';",
          "358:     } ?></td>",
          "359:     <td nowrap=\"nowrap\"><?php echo strtoupper($row['Extra']); ?></td>",
          "",
          "[Removed Lines]",
          "355:     }",
          "356:     else {",
          "",
          "[Added Lines]",
          "355:     } else {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "631:         echo PMA_showMySQLDocu('Extending_MySQL', 'procedure_analyse') . \"\\n\";",
          "632:     }",
          "636:         echo '<a href=\"tbl_tracking.php?' . $url_query . '\">';",
          "637:         echo PMA_getIcon('eye.png', __('Track table'));",
          "638:         echo '</a>';",
          "",
          "[Removed Lines]",
          "634:     if (PMA_Tracker::isActive())",
          "635:     {",
          "",
          "[Added Lines]",
          "633:     if (PMA_Tracker::isActive()) {",
          "",
          "---------------"
        ],
        "tbl_tracking.php||tbl_tracking.php": [
          "File: tbl_tracking.php -> tbl_tracking.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "643:     <?php",
          "644:     $style = 'odd';",
          "645:     PMA_DBI_data_seek($sql_result, 0);",
          "647:         if ($version['tracking_active'] == 1) {",
          "648:             $version_status = __('active');",
          "649:         } else {",
          "",
          "[Removed Lines]",
          "646:     while($version = PMA_DBI_fetch_array($sql_result)) {",
          "",
          "[Added Lines]",
          "646:     while ($version = PMA_DBI_fetch_array($sql_result)) {",
          "",
          "---------------"
        ],
        "test/classes/PMA_Config_test.php||test/classes/PMA_Config_test.php": [
          "File: test/classes/PMA_Config_test.php -> test/classes/PMA_Config_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:         $this->object->set('GD2Available',$prevIsGb2Val);",
          "135:             $this->object->checkGd2();",
          "136:             $this->assertEquals(0, $this->object->get('PMA_IS_GD2'), 'Function imagecreatetruecolor does not exist, PMA_IS_GD2 should be 0');",
          "137:         }",
          "",
          "[Removed Lines]",
          "133:         if (!@function_exists('imagecreatetruecolor'))",
          "134:         {",
          "",
          "[Added Lines]",
          "133:         if (!@function_exists('imagecreatetruecolor')) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:     {",
          "179:         $this->object->checkWebServerOs();",
          "194:             }",
          "198:             $this->assertEquals(0, $this->object->get('PMA_IS_WINDOWS'), 'PMA_IS_WINDOWS Default to Unix or Equiv');",
          "200:             define('PHP_OS','Windows');",
          "",
          "[Removed Lines]",
          "181:         if (defined('PHP_OS'))",
          "182:         {",
          "183:             switch (PHP_OS)",
          "184:             {",
          "185:                 case stristr(PHP_OS,'win'):",
          "186:                     $this->assertEquals(1, $this->object->get('PMA_IS_WINDOWS'), 'PHP_OS equals: ' . PHP_OS . ' PMA_IS_WINDOWS should be 1');",
          "187:                     break;",
          "188:                 case stristr(PHP_OS, 'OS/2'):",
          "189:                     $this->assertEquals(1, $this->object->get('PMA_IS_WINDOWS'), 'PHP_OS is OS/2 PMA_IS_WINDOWS should be 1 (No file permissions like Windows)');",
          "190:                     break;",
          "191:                 case stristr(PHP_OS, 'Linux'):",
          "192:                     $this->assertEquals(0, $this->object->get('PMA_IS_WINDOWS'));",
          "193:                     break;",
          "195:         }",
          "196:         else",
          "197:         {",
          "",
          "[Added Lines]",
          "180:         if (defined('PHP_OS')) {",
          "181:             switch (PHP_OS) {",
          "182:             case stristr(PHP_OS,'win'):",
          "183:                 $this->assertEquals(1, $this->object->get('PMA_IS_WINDOWS'), 'PHP_OS equals: ' . PHP_OS . ' PMA_IS_WINDOWS should be 1');",
          "184:                 break;",
          "185:             case stristr(PHP_OS, 'OS/2'):",
          "186:                 $this->assertEquals(1, $this->object->get('PMA_IS_WINDOWS'), 'PHP_OS is OS/2 PMA_IS_WINDOWS should be 1 (No file permissions like Windows)');",
          "187:                 break;",
          "188:             case stristr(PHP_OS, 'Linux'):",
          "189:                 $this->assertEquals(0, $this->object->get('PMA_IS_WINDOWS'));",
          "190:                 break;",
          "192:         } else {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "432:             'PMA_USR_BROWSER_AGENT'",
          "433:             );",
          "437:             $this->assertTrue(defined($define));",
          "438:             $this->assertEquals(constant($define), $this->object->get($define));",
          "439:         }",
          "",
          "[Removed Lines]",
          "435:         foreach ($defines as $define)",
          "436:         {",
          "",
          "[Added Lines]",
          "430:         foreach ($defines as $define) {",
          "",
          "---------------"
        ],
        "test/libraries/common/PMA_quoting_slashing_test.php||test/libraries/common/PMA_quoting_slashing_test.php": [
          "File: test/libraries/common/PMA_quoting_slashing_test.php -> test/libraries/common/PMA_quoting_slashing_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:     public function testBackquoteForbidenWords() {",
          "107:         global $PMA_SQPdata_forbidden_word;",
          "110:             $this->assertEquals(\"`\" . $forbidden . \"`\", PMA_backquote($forbidden, false));",
          "111:         }",
          "112:     }",
          "",
          "[Removed Lines]",
          "109:         foreach ($PMA_SQPdata_forbidden_word as $forbidden){",
          "",
          "[Added Lines]",
          "109:         foreach ($PMA_SQPdata_forbidden_word as $forbidden) {",
          "",
          "---------------"
        ],
        "test/libraries/core/PMA_getLinks_test.php||test/libraries/core/PMA_getLinks_test.php": [
          "File: test/libraries/core/PMA_getLinks_test.php -> test/libraries/core/PMA_getLinks_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:         if (file_exists('./js/'.$filename)) {",
          "54:             $mod = filemtime('./js/'.$filename);",
          "57:             $this->fail(\"JS file doesn't exists.\");",
          "58:         }",
          "59:         $this->assertEquals(PMA_includeJS($filename), '<script src=\"./js/'.$filename.'?ts='.$mod.'\" type=\"text/javascript\"></script>'. \"\\n\");",
          "",
          "[Removed Lines]",
          "55:         }",
          "56:         else{",
          "",
          "[Added Lines]",
          "55:         } else {",
          "",
          "---------------"
        ],
        "test/libraries/core/PMA_headerLocation_test_disabled.php||test/libraries/core/PMA_headerLocation_test_disabled.php": [
          "File: test/libraries/core/PMA_headerLocation_test_disabled.php -> test/libraries/core/PMA_headerLocation_test_disabled.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:             if (defined('PMA_IS_IIS')) {",
          "106:                 $this->oldIISvalue = PMA_IS_IIS;",
          "107:                 runkit_constant_redefine('PMA_IS_IIS', NULL);",
          "110:                 runkit_constant_add('PMA_IS_IIS', NULL);",
          "111:             }",
          "",
          "[Removed Lines]",
          "108:             }",
          "109:             else {",
          "",
          "[Added Lines]",
          "108:             } else {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "116:             if (defined('SID')) {",
          "117:                 $this->oldSIDvalue = SID;",
          "118:                 runkit_constant_redefine('SID', NULL);",
          "121:                 runkit_constant_add('SID', NULL);",
          "122:             }",
          "",
          "[Removed Lines]",
          "119:             }",
          "120:             else {",
          "",
          "[Added Lines]",
          "118:             } else {",
          "",
          "---------------"
        ],
        "test/selenium/PmaSeleniumLoginTest.php||test/selenium/PmaSeleniumLoginTest.php": [
          "File: test/selenium/PmaSeleniumLoginTest.php -> test/selenium/PmaSeleniumLoginTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:         $this->doLogin();",
          "25:             $this->fail($this->getText(\"//html/body/div/div[@class='error']\"));",
          "26:         }",
          "",
          "[Removed Lines]",
          "24:         if ($this->isElementPresent(\"//html/body/div/div[@class='error']\")){",
          "",
          "[Added Lines]",
          "24:         if ($this->isElementPresent(\"//html/body/div/div[@class='error']\")) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1064ea932d6c57da2093695e1120ce46f3bbdc98",
      "candidate_info": {
        "commit_hash": "1064ea932d6c57da2093695e1120ce46f3bbdc98",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/1064ea932d6c57da2093695e1120ce46f3bbdc98",
        "files": [
          "libraries/auth/swekey/swekey.auth.lib.php",
          "libraries/auth/swekey/swekey.php"
        ],
        "message": "Coding style fixes",
        "before_after_code_files": [
          "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php",
          "libraries/auth/swekey/swekey.php||libraries/auth/swekey/swekey.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
          ],
          "candidate": [
            "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/auth/swekey/swekey.auth.lib.php||libraries/auth/swekey/swekey.auth.lib.php": [
          "File: libraries/auth/swekey/swekey.auth.lib.php -> libraries/auth/swekey/swekey.auth.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:         if (! isset($_SESSION['SWEKEY']['CONF_DEBUG'])) {",
          "54:                $_SESSION['SWEKEY']['CONF_DEBUG'] = false;",
          "55:         }",
          "59:     if ($_SESSION['SWEKEY']['ENABLED']) {",
          "60:         if (empty($_SESSION['SWEKEY']['AUTHENTICATED_SWEKEY'])) {",
          "62:         }",
          "63:     }",
          "",
          "[Removed Lines]",
          "56:      }",
          "61:            return false;",
          "",
          "[Added Lines]",
          "56:     }",
          "61:             return false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197:     if (! isset($swekey_id)) {",
          "198:         ?>",
          "199:         <script>",
          "206:         }",
          "211:         </script>",
          "212:         <?php",
          "213:         return __('Authenticating...');",
          "",
          "[Removed Lines]",
          "200:     if (key.length != 32) {",
          "201:         window.location.search=\"?swekey_id=\" + key + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "202:     } else {",
          "203:         var url = \"\" + window.location;",
          "204:         if (url.indexOf(\"?\") > 0) {",
          "205:             url = url.substr(0, url.indexOf(\"?\"));",
          "207:         Swekey_SetUnplugUrl(key, \"pma_login\", url + \"?session_to_unset=<?php echo session_id();?>&token=<?php echo $_SESSION[' PMA_token ']; ?>\");",
          "208:         var otp = Swekey_GetOtp(key, <?php echo '\"'.$_SESSION['SWEKEY']['RND_TOKEN'].'\"';?>);",
          "209:         window.location.search=\"?swekey_id=\" + key + \"&swekey_otp=\" + otp + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "210:     }",
          "",
          "[Added Lines]",
          "200:         if (key.length != 32) {",
          "201:             window.location.search=\"?swekey_id=\" + key + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "202:         } else {",
          "203:             var url = \"\" + window.location;",
          "204:             if (url.indexOf(\"?\") > 0) {",
          "205:                 url = url.substr(0, url.indexOf(\"?\"));",
          "206:             }",
          "207:             Swekey_SetUnplugUrl(key, \"pma_login\", url + \"?session_to_unset=<?php echo session_id();?>&token=<?php echo $_SESSION[' PMA_token ']; ?>\");",
          "208:             var otp = Swekey_GetOtp(key, <?php echo '\"'.$_SESSION['SWEKEY']['RND_TOKEN'].'\"';?>);",
          "209:             window.location.search=\"?swekey_id=\" + key + \"&swekey_otp=\" + otp + \"&token=<?php echo $_SESSION[' PMA_token ']; ?>\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "237:         if (empty($_SESSION['SWEKEY']['FORCE_USER'])) {",
          "238:             echo 'var user = null;';",
          "239:         } else {",
          "241:         }",
          "243:         ?>",
          "",
          "[Removed Lines]",
          "240:            echo 'var user = \"'.$_SESSION['SWEKEY']['FORCE_USER'].'\";';",
          "",
          "[Added Lines]",
          "240:             echo 'var user = \"'.$_SESSION['SWEKEY']['FORCE_USER'].'\";';",
          "",
          "---------------"
        ],
        "libraries/auth/swekey/swekey.php||libraries/auth/swekey/swekey.php": [
          "File: libraries/auth/swekey/swekey.php -> libraries/auth/swekey/swekey.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "21: define (\"SWEKEY_ERR_INVALID_DEV_STATUS\", 901);   // The satus of the device is not SWEKEY_STATUS_OK",
          "22: define (\"SWEKEY_ERR_INTERNAL\", 902);             // Should never occurd",
          "23: define (\"SWEKEY_ERR_OUTDATED_RND_TOKEN\", 910);   // You random token is too old",
          "24: define (\"SWEKEY_ERR_INVALID_OTP\", 911);          // The otp was not correct",
          "30: define (\"SWEKEY_ERR_BADLY_ENCODED_REQUEST\", 920);",
          "31: define (\"SWEKEY_ERR_INVALID_RND_TOKEN\", 921);",
          "32: define (\"SWEKEY_ERR_DEV_NOT_FOUND\", 922);",
          "37: define ('SWEKEY_DEFAULT_CHECK_SERVER', 'https://auth-check.musbe.net');",
          "38: define ('SWEKEY_DEFAULT_RND_SERVER', 'https://auth-rnd-gen.musbe.net');",
          "39: define ('SWEKEY_DEFAULT_STATUS_SERVER', 'https://auth-status.musbe.net');",
          "",
          "[Added Lines]",
          "21: define(\"SWEKEY_ERR_INVALID_DEV_STATUS\", 901);   // The satus of the device is not SWEKEY_STATUS_OK",
          "22: define(\"SWEKEY_ERR_INTERNAL\", 902);             // Should never occurd",
          "23: define(\"SWEKEY_ERR_OUTDATED_RND_TOKEN\", 910);   // You random token is too old",
          "24: define(\"SWEKEY_ERR_INVALID_OTP\", 911);          // The otp was not correct",
          "30: define(\"SWEKEY_ERR_BADLY_ENCODED_REQUEST\", 920);",
          "31: define(\"SWEKEY_ERR_INVALID_RND_TOKEN\", 921);",
          "32: define(\"SWEKEY_ERR_DEV_NOT_FOUND\", 922);",
          "37: define('SWEKEY_DEFAULT_CHECK_SERVER', 'https://auth-check.musbe.net');",
          "38: define('SWEKEY_DEFAULT_RND_SERVER', 'https://auth-rnd-gen.musbe.net');",
          "39: define('SWEKEY_DEFAULT_STATUS_SERVER', 'https://auth-status.musbe.net');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "304:     $res = @file_get_contents($url);",
          "305:     $response_code = substr($http_response_header[0], 9, 3); //HTTP/1.0",
          "306:     if ($response_code == 200) {",
          "309:     }",
          "311:     $gSwekeyLastError = $response_code;",
          "",
          "[Removed Lines]",
          "307:        $gSwekeyLastResult = $res;",
          "308:        return $res;",
          "",
          "[Added Lines]",
          "307:         $gSwekeyLastResult = $res;",
          "308:         return $res;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "395:         }",
          "396:     }",
          "399: }",
          "",
          "[Removed Lines]",
          "398:    return $res.\"00000000000000000000000000000000\";",
          "",
          "[Added Lines]",
          "398:     return $res.\"00000000000000000000000000000000\";",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "439: define (\"SWEKEY_STATUS_OK\", 0);",
          "440: define (\"SWEKEY_STATUS_NOT_FOUND\", 1);  // The key does not exist in the db",
          "441: define (\"SWEKEY_STATUS_INACTIVE\", 2);   // The key has never been activated",
          "442: define (\"SWEKEY_STATUS_LOST\", 3);       // The user has lost his key",
          "443: define (\"SWEKEY_STATUS_STOLEN\", 4);       // The key was stolen",
          "444: define (\"SWEKEY_STATUS_FEE_DUE\", 5);       // The annual fee was not paid",
          "445: define (\"SWEKEY_STATUS_OBSOLETE\", 6);   // The hardware is no longer supported",
          "446: define (\"SWEKEY_STATUS_UNKOWN\", 201);   // We could not connect to the authentication server",
          "452: define (\"SWEKEY_STATUS_REPLACED\", 100);     // This key has been replaced by a backup key",
          "453: define (\"SWEKEY_STATUS_BACKUP_KEY\", 101); // This key is a backup key that is not activated yet",
          "454: define (\"SWEKEY_STATUS_NOTPLUGGED\", 200); // This key is not plugged in the computer",
          "",
          "[Added Lines]",
          "439: define(\"SWEKEY_STATUS_OK\", 0);",
          "440: define(\"SWEKEY_STATUS_NOT_FOUND\", 1);  // The key does not exist in the db",
          "441: define(\"SWEKEY_STATUS_INACTIVE\", 2);   // The key has never been activated",
          "442: define(\"SWEKEY_STATUS_LOST\", 3);       // The user has lost his key",
          "443: define(\"SWEKEY_STATUS_STOLEN\", 4);       // The key was stolen",
          "444: define(\"SWEKEY_STATUS_FEE_DUE\", 5);       // The annual fee was not paid",
          "445: define(\"SWEKEY_STATUS_OBSOLETE\", 6);   // The hardware is no longer supported",
          "446: define(\"SWEKEY_STATUS_UNKOWN\", 201);   // We could not connect to the authentication server",
          "452: define(\"SWEKEY_STATUS_REPLACED\", 100);     // This key has been replaced by a backup key",
          "453: define(\"SWEKEY_STATUS_BACKUP_KEY\", 101); // This key is a backup key that is not activated yet",
          "454: define(\"SWEKEY_STATUS_NOTPLUGGED\", 200); // This key is not plugged in the computer",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "465: {",
          "466:     switch($status)",
          "467:     {",
          "479:     }",
          "480:     return 'unknown status '.$status;",
          "481: }",
          "",
          "[Removed Lines]",
          "468:        case SWEKEY_STATUS_OK            : return 'OK';",
          "469:        case SWEKEY_STATUS_NOT_FOUND        : return 'Key does not exist in the db';",
          "470:        case SWEKEY_STATUS_INACTIVE        : return 'Key not activated';",
          "471:        case SWEKEY_STATUS_LOST            : return 'Key was lost';",
          "472:        case SWEKEY_STATUS_STOLEN        : return 'Key was stolen';",
          "473:        case SWEKEY_STATUS_FEE_DUE        : return 'The annual fee was not paid';",
          "474:        case SWEKEY_STATUS_OBSOLETE        : return 'Key no longer supported';",
          "475:        case SWEKEY_STATUS_REPLACED        : return 'This key has been replaced by a backup key';",
          "476:        case SWEKEY_STATUS_BACKUP_KEY    : return 'This key is a backup key that is not activated yet';",
          "477:        case SWEKEY_STATUS_NOTPLUGGED    : return 'This key is not plugged in the computer';",
          "478:        case SWEKEY_STATUS_UNKOWN        : return 'Unknow Status, could not connect to the authentication server';",
          "",
          "[Added Lines]",
          "468:     case SWEKEY_STATUS_OK :",
          "469:         return 'OK';",
          "470:     case SWEKEY_STATUS_NOT_FOUND :",
          "471:         return 'Key does not exist in the db';",
          "472:     case SWEKEY_STATUS_INACTIVE :",
          "473:         return 'Key not activated';",
          "474:     case SWEKEY_STATUS_LOST :",
          "475:         return 'Key was lost';",
          "476:     case SWEKEY_STATUS_STOLEN :",
          "477:         return 'Key was stolen';",
          "478:     case SWEKEY_STATUS_FEE_DUE :",
          "479:         return 'The annual fee was not paid';",
          "480:     case SWEKEY_STATUS_OBSOLETE :",
          "481:         return 'Key no longer supported';",
          "482:     case SWEKEY_STATUS_REPLACED :",
          "483:         return 'This key has been replaced by a backup key';",
          "484:     case SWEKEY_STATUS_BACKUP_KEY :",
          "485:         return 'This key is a backup key that is not activated yet';",
          "486:     case SWEKEY_STATUS_NOTPLUGGED :",
          "487:         return 'This key is not plugged in the computer';",
          "488:     case SWEKEY_STATUS_UNKOWN :",
          "489:         return 'Unknow Status, could not connect to the authentication server';",
          "",
          "---------------"
        ]
      }
    }
  ]
}