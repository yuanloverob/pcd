{
  "cve_id": "CVE-2015-0563",
  "cve_desc": "epan/dissectors/packet-smtp.c in the SMTP dissector in Wireshark 1.10.x before 1.10.12 and 1.12.x before 1.12.3 uses an incorrect length value for certain string-append operations, which allows remote attackers to cause a denial of service (application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "611cfd00c283e7a77a2f1fd89c01b0b9f691411b",
  "patch_info": {
    "commit_hash": "611cfd00c283e7a77a2f1fd89c01b0b9f691411b",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/611cfd00c283e7a77a2f1fd89c01b0b9f691411b",
    "files": [
      "epan/dissectors/packet-smtp.c"
    ],
    "message": "Always set decrypt_len when setting decrypt.\n\nThis may not always be necessary, but....\n\nChange-Id: Ib409839dbee0574c516568a1f43793f8b407f611\nReviewed-on: https://code.wireshark.org/review/6232\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
    "before_after_code_files": [
      "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c": [
      "File: epan/dissectors/packet-smtp.c -> epan/dissectors/packet-smtp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "368:   fragment_head             *frag_msg  = NULL;",
      "369:   tvbuff_t                  *next_tvb;",
      "370:   guint8                    *decrypt   = NULL;",
      "372:   guint8                    *base64_string   = NULL;",
      "373:   guint8                     line_code[3];",
      "",
      "[Removed Lines]",
      "371:   size_t                     decrypt_len;",
      "",
      "[Added Lines]",
      "371:   size_t                     decrypt_len  = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "867:           col_append_fstr(pinfo->cinfo, COL_INFO, \"Pass: %s\", format_text(decrypt, decrypt_len));",
      "868:         } else if (session_state->ntlm_rsp_frame == pinfo->fd->num) {",
      "869:           decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
      "870:           if (smtp_decryption_enabled) {",
      "873:               decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
      "874:               col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen));",
      "875:               proto_tree_add_item(smtp_tree, hf_smtp_command_line, tvb,",
      "876:                                   loffset, linelen, ENC_ASCII|ENC_NA);",
      "",
      "[Removed Lines]",
      "871:             if (ws_base64_decode_inplace(decrypt) == 0) {",
      "",
      "[Added Lines]",
      "870:           decrypt_len = linelen;",
      "872:             if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
      "875:               decrypt_len = linelen;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "886:                                 loffset, linelen, ENC_ASCII|ENC_NA);",
      "887:           }",
      "888:         } else if (session_state->user_pass_frame == pinfo->fd->num) {",
      "890:         } else {",
      "892:           if (linelen >= 4)",
      "",
      "[Removed Lines]",
      "889:             decode_plain_auth(tvb, pinfo, smtp_tree, loffset, linelen);",
      "",
      "[Added Lines]",
      "891:           decode_plain_auth(tvb, pinfo, smtp_tree, loffset, linelen);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "932:                               loffset + 5, linelen - 5, ENC_ASCII|ENC_NA);",
      "933:             if (linelen >= 10) {",
      "934:               decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 10, linelen - 10, ENC_ASCII);",
      "935:               if (smtp_decryption_enabled) {",
      "936:                 if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
      "938:                   decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 10, linelen - 10, ENC_ASCII);",
      "939:                   col_append_str(pinfo->cinfo, COL_INFO,",
      "940:                                  format_text(tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, 10, ENC_ASCII), 10));",
      "941:                   col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen - 10));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "937:               decrypt_len = linelen - 10;",
      "942:                   decrypt_len = linelen - 10;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1112:                                 code);",
      "1114:             decrypt = NULL;",
      "1115:             if (linelen >= 4) {",
      "1116:                 if ((smtp_decryption_enabled) && (code == 334)) {",
      "1117:                     decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, offset + 4, linelen - 4, ENC_ASCII);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1119:             decrypt_len = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0abe88bb797529f340377ad2d42f102a6b55151a",
      "candidate_info": {
        "commit_hash": "0abe88bb797529f340377ad2d42f102a6b55151a",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/0abe88bb797529f340377ad2d42f102a6b55151a",
        "files": [
          "epan/dissectors/packet-smtp.c"
        ],
        "message": "Always set decrypt_len when setting decrypt.\n\nThis may not always be necessary, but....\n\nConflicts:\n\tepan/dissectors/packet-smtp.c\n\nChange-Id: I9741d606c8c15b945335cf24b182cbd6b75fb310\nReviewed-on: https://code.wireshark.org/review/6233\nReviewed-by: Guy Harris <guy@alum.mit.edu>\nReviewed-on: https://code.wireshark.org/review/6466\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c": [
          "File: epan/dissectors/packet-smtp.c -> epan/dissectors/packet-smtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "369:   fragment_head             *frag_msg  = NULL;",
          "370:   tvbuff_t                  *next_tvb;",
          "371:   guint8                    *decrypt   = NULL;",
          "373:   guint8                    *base64_string   = NULL;",
          "374:   guint8                     line_code[3];",
          "",
          "[Removed Lines]",
          "372:   size_t                     decrypt_len;",
          "",
          "[Added Lines]",
          "372:   size_t                     decrypt_len  = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "868:             col_append_fstr(pinfo->cinfo, COL_INFO, \"Pass: %s\", format_text(decrypt, decrypt_len));",
          "869:         } else if (session_state->ntlm_rsp_frame == pinfo->fd->num) {",
          "870:             decrypt = tvb_get_string(wmem_packet_scope(), tvb, loffset, linelen);",
          "871:             if (stmp_decryption_enabled) {",
          "874:                 decrypt = tvb_get_string(wmem_packet_scope(), tvb, loffset, linelen);",
          "875:                 col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen));",
          "876:                 proto_tree_add_item(smtp_tree, hf_smtp_command_line, tvb,",
          "877:                                     loffset, linelen, ENC_ASCII|ENC_NA);",
          "",
          "[Removed Lines]",
          "872:               if (ws_base64_decode_inplace(decrypt) == 0) {",
          "",
          "[Added Lines]",
          "871:             decrypt_len = linelen;",
          "873:               if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
          "876:                 decrypt_len = linelen;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "937:                               loffset + 5, linelen - 5, ENC_ASCII|ENC_NA);",
          "938:             if (linelen >= 10) {",
          "939:               decrypt = tvb_get_string(wmem_packet_scope(), tvb, loffset + 10, linelen - 10);",
          "940:               if (stmp_decryption_enabled) {",
          "941:                 if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
          "943:                   decrypt = tvb_get_string(wmem_packet_scope(), tvb, loffset + 10, linelen - 10);",
          "944:                   col_append_str(pinfo->cinfo, COL_INFO,",
          "945:                                  format_text(tvb_get_string(wmem_packet_scope(), tvb, loffset, 10), 10));",
          "946:                   col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen - 10));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "942:               decrypt_len = linelen - 10;",
          "947:                   decrypt_len = linelen - 10;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1117:                                   code);",
          "1119:             decrypt = NULL;",
          "1120:             if (linelen >= 4) {",
          "1121:                 if ((stmp_decryption_enabled) && (code == 334)) {",
          "1122:                     decrypt = tvb_get_string(wmem_packet_scope(), tvb, offset + 4, linelen - 4);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1124:             decrypt_len = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}