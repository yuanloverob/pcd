{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6b588007df68b92fb3afe3427189f5954c979176",
      "candidate_info": {
        "commit_hash": "6b588007df68b92fb3afe3427189f5954c979176",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6b588007df68b92fb3afe3427189f5954c979176",
        "files": [
          "test/pummel/test-net-connect-econnrefused.js"
        ],
        "message": "test: fix pummel/test-net-connect-econnrefused\n\nThe test relied on a peculiarity of process.nextTick() that was changed in\ncommit 4e5fe2d. Before that commit, each nextTick callback corresponded with\nthe event loop moving forward one tick. That's no longer the case.",
        "before_after_code_files": [
          "test/pummel/test-net-connect-econnrefused.js||test/pummel/test-net-connect-econnrefused.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/pummel/test-net-connect-econnrefused.js||test/pummel/test-net-connect-econnrefused.js": [
          "File: test/pummel/test-net-connect-econnrefused.js -> test/pummel/test-net-connect-econnrefused.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: var ROUNDS = 5;",
          "29: var ATTEMPTS_PER_ROUND = 200;",
          "31: var reqs = 0;",
          "33: pummel();",
          "",
          "[Removed Lines]",
          "30: var rounds = 0;",
          "",
          "[Added Lines]",
          "30: var rounds = 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:     net.createConnection(common.PORT).on('error', function(err) {",
          "40:       assert.equal(err.code, 'ECONNREFUSED');",
          "41:       if (--pending > 0) return;",
          "44:     });",
          "45:     reqs++;",
          "46:   }",
          "47: }",
          "49: function check() {",
          "57: }",
          "58: var check_called = false;",
          "",
          "[Removed Lines]",
          "42:       if (++rounds < ROUNDS) return pummel();",
          "43:       check();",
          "50:   process.nextTick(function() {",
          "51:     process.nextTick(function() {",
          "52:       assert.equal(process._getActiveRequests().length, 0);",
          "53:       assert.equal(process._getActiveHandles().length, 0);",
          "54:       check_called = true;",
          "55:     });",
          "56:   });",
          "",
          "[Added Lines]",
          "42:       if (rounds == ROUNDS) return check();",
          "43:       rounds++;",
          "44:       pummel();",
          "51:   setTimeout(function() {",
          "52:     assert.equal(process._getActiveRequests().length, 0);",
          "53:     assert.equal(process._getActiveHandles().length, 1); // the timer",
          "54:     check_called = true;",
          "55:   }, 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc36cc5999937aeb0ed00f82b5c969edecaa1b1d",
      "candidate_info": {
        "commit_hash": "cc36cc5999937aeb0ed00f82b5c969edecaa1b1d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/cc36cc5999937aeb0ed00f82b5c969edecaa1b1d",
        "files": [
          "tools/installer.js"
        ],
        "message": "build: Don't clobber symlinked npm",
        "before_after_code_files": [
          "tools/installer.js||tools/installer.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/installer.js||tools/installer.js": [
          "File: tools/installer.js -> tools/installer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:   if (variables.node_install_npm) {",
          "135:   }",
          "136: } else {",
          "137:   remove([",
          "",
          "[Removed Lines]",
          "129:     copy('deps/npm', 'lib/node_modules/npm');",
          "130:     queue.push('ln -sf ../lib/node_modules/npm/bin/npm-cli.js ' +",
          "131:                path.join(dest_dir, node_prefix, 'bin/npm'));",
          "132:     queue.push([shebang, '#!' + path.join(node_prefix, 'bin/node'),",
          "133:                path.join(dest_dir, node_prefix,",
          "134:                          'lib/node_modules/npm/bin/npm-cli.js')]);",
          "",
          "[Added Lines]",
          "132:     var isSymlink = false;",
          "133:     try {",
          "134:       var st = fs.lstatSync(path.resolve(node_prefix, 'lib/node_modules/npm'));",
          "135:       isSymlink = st.isSymbolicLink();",
          "136:     } catch (e) {}",
          "138:     if (!isSymlink) {",
          "139:       copy('deps/npm', 'lib/node_modules/npm');",
          "140:       queue.push('ln -sf ../lib/node_modules/npm/bin/npm-cli.js ' +",
          "141:                  path.join(dest_dir, node_prefix, 'bin/npm'));",
          "142:       queue.push([shebang, '#!' + path.join(node_prefix, 'bin/node'),",
          "143:                  path.join(dest_dir, node_prefix,",
          "144:                            'lib/node_modules/npm/bin/npm-cli.js')]);",
          "145:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8bc2edabf3698e468ff510be477326fe296a9b6",
      "candidate_info": {
        "commit_hash": "e8bc2edabf3698e468ff510be477326fe296a9b6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e8bc2edabf3698e468ff510be477326fe296a9b6",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.8.7",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #define NODE_MAJOR_VERSION 0",
          "26: #define NODE_MINOR_VERSION 8",
          "30: #ifndef NODE_STRINGIFY",
          "31: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "27: #define NODE_PATCH_VERSION 6",
          "28: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "27: #define NODE_PATCH_VERSION 7",
          "28: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "57148f54e10f57a15deb51713bbe70f5f126b4dc",
      "candidate_info": {
        "commit_hash": "57148f54e10f57a15deb51713bbe70f5f126b4dc",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/57148f54e10f57a15deb51713bbe70f5f126b4dc",
        "files": [
          "lib/readline.js"
        ],
        "message": "readline: change char to ch to avoid reserved word",
        "before_after_code_files": [
          "lib/readline.js||lireadline.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "839:     /^(?:\\x1b+)(O|N|\\[|\\[\\[)(?:(\\d+)(?:;(\\d+))?([~^$])|(?:1;)?(\\d+)?([a-zA-Z]))/;",
          "841: function emitKey(stream, s) {",
          "843:       key = {",
          "844:         name: undefined,",
          "845:         ctrl: false,",
          "",
          "[Removed Lines]",
          "842:   var char,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1029:   }",
          "1031:   if (s.length === 1) {",
          "1033:   }",
          "1037:   }",
          "1038: }",
          "",
          "[Removed Lines]",
          "1032:     char = s;",
          "1035:   if (key || char) {",
          "1036:     stream.emit('keypress', char, key);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff140075738dc29392165b5bdfe8f011dca97f1e",
      "candidate_info": {
        "commit_hash": "ff140075738dc29392165b5bdfe8f011dca97f1e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/ff140075738dc29392165b5bdfe8f011dca97f1e",
        "files": [
          "doc/api/util.markdown",
          "lib/util.js",
          "test/simple/test-util-inspect.js"
        ],
        "message": "Enable color customization of `util.inspect`\n\nThis is rewrite of #3701 and #3603 before.\n\nThis patch introduce `util.inspect.styles`\nand `util.inspect.colors` objects, which enables customization\nof color sequences.",
        "before_after_code_files": [
          "lib/util.js||liutil.js",
          "test/simple/test-util-inspect.js||test/simple/test-util-inspect.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/util.js||liutil.js": [
          "File: lib/util.js -> liutil.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:   'bold' : [1, 22],",
          "133:   'italic' : [3, 23],",
          "134:   'underline' : [4, 24],",
          "",
          "[Removed Lines]",
          "131: var colors = {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "145: };",
          "149:   'special': 'cyan',",
          "150:   'number': 'yellow',",
          "151:   'boolean': 'yellow',",
          "",
          "[Removed Lines]",
          "148: var styles = {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "161: function stylizeWithColor(str, styleType) {",
          "164:   if (style) {",
          "167:   } else {",
          "168:     return str;",
          "169:   }",
          "",
          "[Removed Lines]",
          "162:   var style = styles[styleType];",
          "165:     return '\\u001b[' + colors[style][0] + 'm' + str +",
          "166:            '\\u001b[' + colors[style][1] + 'm';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-util-inspect.js||test/simple/test-util-inspect.js": [
          "File: test/simple/test-util-inspect.js -> test/simple/test-util-inspect.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "108: var x = { inspect: util.inspect };",
          "109: assert.ok(util.inspect(x).indexOf('inspect') != -1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112: function test_color_style(style, input, implicit) {",
          "113:   var color_name = util.inspect.styles[style];",
          "114:   var color = ['', ''];",
          "115:   if(util.inspect.colors[color_name])",
          "116:     color = util.inspect.colors[color_name];",
          "118:   var without_color = util.inspect(input, false, 0, false);",
          "119:   var with_color = util.inspect(input, false, 0, true);",
          "120:   var expect = '\\u001b[' + color[0] + 'm' + without_color +",
          "121:                '\\u001b[' + color[1] + 'm';",
          "122:   assert.equal(with_color, expect, 'util.inspect color for style '+style);",
          "123: }",
          "125: test_color_style('special', function(){});",
          "126: test_color_style('number', 123.456);",
          "127: test_color_style('boolean', true);",
          "128: test_color_style('undefined', undefined);",
          "129: test_color_style('null', null);",
          "130: test_color_style('string', 'test string');",
          "131: test_color_style('date', new Date);",
          "132: test_color_style('regexp', /regexp/);",
          "",
          "---------------"
        ]
      }
    }
  ]
}