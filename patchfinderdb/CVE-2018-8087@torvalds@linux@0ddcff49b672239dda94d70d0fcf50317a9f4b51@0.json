{
  "cve_id": "CVE-2018-8087",
  "cve_desc": "Memory leak in the hwsim_new_radio_nl function in drivers/net/wireless/mac80211_hwsim.c in the Linux kernel through 4.15.9 allows local users to cause a denial of service (memory consumption) by triggering an out-of-array error case.",
  "repo": "torvalds/linux",
  "patch_hash": "0ddcff49b672239dda94d70d0fcf50317a9f4b51",
  "patch_info": {
    "commit_hash": "0ddcff49b672239dda94d70d0fcf50317a9f4b51",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/0ddcff49b672239dda94d70d0fcf50317a9f4b51",
    "files": [
      "drivers/net/wireless/mac80211_hwsim.c"
    ],
    "message": "mac80211_hwsim: fix possible memory leak in hwsim_new_radio_nl()\n\n'hwname' is malloced in hwsim_new_radio_nl() and should be freed\nbefore leaving from the error handling cases, otherwise it will cause\nmemory leak.\n\nFixes: ff4dd73dd2b4 (\"mac80211_hwsim: check HWSIM_ATTR_RADIO_NAME length\")\nSigned-off-by: Wei Yongjun <weiyongjun1@huawei.com>\nReviewed-by: Ben Hutchings <ben.hutchings@codethink.co.uk>\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
    "before_after_code_files": [
      "drivers/net/wireless/mac80211_hwsim.c||drivers/net/wireless/mac80211_hwsim.c"
    ]
  },
  "patch_diff": {
    "drivers/net/wireless/mac80211_hwsim.c||drivers/net/wireless/mac80211_hwsim.c": [
      "File: drivers/net/wireless/mac80211_hwsim.c -> drivers/net/wireless/mac80211_hwsim.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3197:  if (info->attrs[HWSIM_ATTR_REG_CUSTOM_REG]) {",
      "3198:   u32 idx = nla_get_u32(info->attrs[HWSIM_ATTR_REG_CUSTOM_REG]);",
      "3201:    return -EINVAL;",
      "3202:   param.regd = hwsim_world_regdom_custom[idx];",
      "3203:  }",
      "",
      "[Removed Lines]",
      "3200:   if (idx >= ARRAY_SIZE(hwsim_world_regdom_custom))",
      "",
      "[Added Lines]",
      "3200:   if (idx >= ARRAY_SIZE(hwsim_world_regdom_custom)) {",
      "3201:    kfree(hwname);",
      "3203:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2f98abb17dd57b9c3ebdf6741ae2726ed360d902",
      "candidate_info": {
        "commit_hash": "2f98abb17dd57b9c3ebdf6741ae2726ed360d902",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/2f98abb17dd57b9c3ebdf6741ae2726ed360d902",
        "files": [
          "drivers/net/wireless/mac80211_hwsim.c"
        ],
        "message": "mac80211_hwsim: move HWSIM_ATTR_RADIO_NAME parsing last\n\nAvoid the need to kfree() the name in many places by moving\nthe name parsing last.\n\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>",
        "before_after_code_files": [
          "drivers/net/wireless/mac80211_hwsim.c||drivers/net/wireless/mac80211_hwsim.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/net/wireless/mac80211_hwsim.c||drivers/net/wireless/mac80211_hwsim.c"
          ],
          "candidate": [
            "drivers/net/wireless/mac80211_hwsim.c||drivers/net/wireless/mac80211_hwsim.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/mac80211_hwsim.c||drivers/net/wireless/mac80211_hwsim.c": [
          "File: drivers/net/wireless/mac80211_hwsim.c -> drivers/net/wireless/mac80211_hwsim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3321:  if (info->attrs[HWSIM_ATTR_NO_VIF])",
          "3322:   param.no_vif = true;",
          "3333:  if (info->attrs[HWSIM_ATTR_USE_CHANCTX])",
          "3334:   param.use_chanctx = true;",
          "3335:  else",
          "",
          "[Removed Lines]",
          "3324:  if (info->attrs[HWSIM_ATTR_RADIO_NAME]) {",
          "3325:   hwname = kasprintf(GFP_KERNEL, \"%.*s\",",
          "3326:        nla_len(info->attrs[HWSIM_ATTR_RADIO_NAME]),",
          "3327:        (char *)nla_data(info->attrs[HWSIM_ATTR_RADIO_NAME]));",
          "3328:   if (!hwname)",
          "3329:    return -ENOMEM;",
          "3330:   param.hwname = hwname;",
          "3331:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3342:  if (info->attrs[HWSIM_ATTR_REG_CUSTOM_REG]) {",
          "3343:   u32 idx = nla_get_u32(info->attrs[HWSIM_ATTR_REG_CUSTOM_REG]);",
          "3347:    return -EINVAL;",
          "3350:   idx = array_index_nospec(idx,",
          "3351:       ARRAY_SIZE(hwsim_world_regdom_custom));",
          "",
          "[Removed Lines]",
          "3345:   if (idx >= ARRAY_SIZE(hwsim_world_regdom_custom)) {",
          "3346:    kfree(hwname);",
          "3348:   }",
          "",
          "[Added Lines]",
          "3336:   if (idx >= ARRAY_SIZE(hwsim_world_regdom_custom))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3358:    GENL_SET_ERR_MSG(info,\"MAC is no valid source addr\");",
          "3359:    NL_SET_BAD_ATTR(info->extack,",
          "3360:      info->attrs[HWSIM_ATTR_PERM_ADDR]);",
          "3362:    return -EINVAL;",
          "3363:   }",
          "",
          "[Removed Lines]",
          "3361:    kfree(hwname);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3366:   param.perm_addr = nla_data(info->attrs[HWSIM_ATTR_PERM_ADDR]);",
          "3367:  }",
          "3369:  ret = mac80211_hwsim_new_radio(info, &param);",
          "3370:  kfree(hwname);",
          "3371:  return ret;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3357:  if (info->attrs[HWSIM_ATTR_RADIO_NAME]) {",
          "3358:   hwname = kasprintf(GFP_KERNEL, \"%.*s\",",
          "3359:        nla_len(info->attrs[HWSIM_ATTR_RADIO_NAME]),",
          "3360:        (char *)nla_data(info->attrs[HWSIM_ATTR_RADIO_NAME]));",
          "3361:   if (!hwname)",
          "3362:    return -ENOMEM;",
          "3363:   param.hwname = hwname;",
          "3364:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}