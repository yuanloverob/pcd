{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "37fd953378ecdfcbe8e3656e1827b17fdc4fd969",
      "candidate_info": {
        "commit_hash": "37fd953378ecdfcbe8e3656e1827b17fdc4fd969",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/37fd953378ecdfcbe8e3656e1827b17fdc4fd969",
        "files": [
          "deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/src/unix/ev/ev_kqueue.c",
          "deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/kqueue.c"
        ],
        "message": "uv: Cherry-pick joyent/libuv@3c41597",
        "before_after_code_files": [
          "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/src/unix/ev/ev_kqueue.c||deps/uv/src/unix/ev/ev_kqueue.c",
          "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h",
          "deps/uv/src/unix/kqueue.c||deps/uv/src/unix/kqueue.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h": [
          "File: deps/uv/include/uv-private/uv-unix.h -> deps/uv/include/uv-private/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:   ev_io read_watcher;                 \\",
          "224:   uv_fs_event_cb cb;",
          "227:   || defined(__FreeBSD__) \\",
          "228:   || defined(__OpenBSD__) \\",
          "229:   || defined(__NetBSD__)",
          "",
          "[Removed Lines]",
          "226: #elif (defined(__MAC_OS_X_VERSION_MIN_REQUIRED) && __MAC_OS_X_VERSION_MIN_REQUIRED >= 1060) \\",
          "",
          "[Added Lines]",
          "226: #elif defined(__APPLE__)  \\",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/ev/ev_kqueue.c||deps/uv/src/unix/ev/ev_kqueue.c": [
          "File: deps/uv/src/unix/ev/ev_kqueue.c -> deps/uv/src/unix/ev/ev_kqueue.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: #include <string.h>",
          "44: #include <errno.h>",
          "46: extern void",
          "47: uv__kqueue_hack (EV_P_ int fflags, ev_io *w);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: #ifndef NOTE_DELETE",
          "48: # define NOTE_DELETE  0x01",
          "49: #endif",
          "50: #ifndef NOTE_WRITE",
          "51: # define NOTE_WRITE  0x02",
          "52: #endif",
          "53: #ifndef NOTE_EXTEND",
          "54: # define NOTE_EXTEND  0x04",
          "55: #endif",
          "56: #ifndef NOTE_ATTRIB",
          "57: # define NOTE_ATTRIB  0x08",
          "58: #endif",
          "59: #ifndef NOTE_LINK",
          "60: # define NOTE_LINK    0x10",
          "61: #endif",
          "62: #ifndef NOTE_RENAME",
          "63: # define NOTE_RENAME  0x20",
          "64: #endif",
          "65: #ifndef NOTE_REVOKE",
          "66: # define NOTE_REVOKE  0x40",
          "67: #endif",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/internal.h||deps/uv/src/unix/internal.h": [
          "File: deps/uv/src/unix/internal.h -> deps/uv/src/unix/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "125: #endif",
          "129:   || defined(__FreeBSD__) \\",
          "130:   || defined(__OpenBSD__) \\",
          "131:   || defined(__NetBSD__)",
          "",
          "[Removed Lines]",
          "128: #if (defined(__MAC_OS_X_VERSION_MIN_REQUIRED) && __MAC_OS_X_VERSION_MIN_REQUIRED >= 1060) \\",
          "",
          "[Added Lines]",
          "128: #if defined(__APPLE__)  \\",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/kqueue.c||deps/uv/src/unix/kqueue.c": [
          "File: deps/uv/src/unix/kqueue.c -> deps/uv/src/unix/kqueue.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include <string.h>",
          "27: #include <errno.h>",
          "31: #include <sys/sysctl.h>",
          "32: #include <sys/types.h>",
          "33: #include <sys/event.h>",
          "",
          "[Removed Lines]",
          "29: #if HAVE_KQUEUE",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:   close(handle->fd);",
          "128:   handle->fd = -1;",
          "129: }",
          "",
          "[Removed Lines]",
          "133: int uv_fs_event_init(uv_loop_t* loop,",
          "134:                      uv_fs_event_t* handle,",
          "135:                      const char* filename,",
          "136:                      uv_fs_event_cb cb,",
          "137:                      int flags) {",
          "138:   loop->counters.fs_event_init++;",
          "139:   uv__set_sys_error(loop, ENOSYS);",
          "140:   return -1;",
          "141: }",
          "144: void uv__fs_event_destroy(uv_fs_event_t* handle) {",
          "145:   UNREACHABLE();",
          "146: }",
          "150: void uv__kqueue_hack(EV_P_ int fflags, ev_io *w) {",
          "151:   UNREACHABLE();",
          "152: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f405daa92260b0bb9fc5cf8c5c2991679e00bdf2",
      "candidate_info": {
        "commit_hash": "f405daa92260b0bb9fc5cf8c5c2991679e00bdf2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f405daa92260b0bb9fc5cf8c5c2991679e00bdf2",
        "files": [
          "lib/repl.js",
          "test/simple/test-repl-tab-complete.js"
        ],
        "message": "repl: make tab completion read up the prototype of \"global\"\n\nFor example, there's a global \"toString()\" function, so the REPL's\ntab completion should pick that up.",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js",
          "test/simple/test-repl-tab-complete.js||test/simple/test-repl-tab-complete.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "535:         if (this.useGlobal ||",
          "536:             this.context.constructor &&",
          "537:             this.context.constructor.name === 'Context') {",
          "538:           completionGroups.push(Object.getOwnPropertyNames(this.context));",
          "539:           addStandardGlobals();",
          "540:           completionGroupsLoaded();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-repl-tab-complete.js||test/simple/test-repl-tab-complete.js": [
          "File: test/simple/test-repl-tab-complete.js -> test/simple/test-repl-tab-complete.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "202:   assert.deepEqual(data, [[],undefined]);",
          "203:   clearTimeout(spaceTimeout);",
          "204: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208: testMe.complete('toSt', function(error, data) {",
          "209:   assert.deepEqual(data, [['toString'], 'toSt']);",
          "210: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5565366a33e57436be08b00c14470ecafdf16632",
      "candidate_info": {
        "commit_hash": "5565366a33e57436be08b00c14470ecafdf16632",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5565366a33e57436be08b00c14470ecafdf16632",
        "files": [
          "deps/uv/include/uv.h",
          "deps/uv/src/win/fs.c",
          "deps/uv/src/win/internal.h",
          "deps/uv/src/win/util.c",
          "deps/uv/test/benchmark-fs-stat.c",
          "deps/uv/test/benchmark-list.h",
          "deps/uv/uv.gyp"
        ],
        "message": "uv: Upgrade to 171e2f71b9",
        "before_after_code_files": [
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c",
          "deps/uv/src/win/internal.h||deps/uv/src/win/internal.h",
          "deps/uv/src/win/util.c||deps/uv/src/win/util.c",
          "deps/uv/test/benchmark-fs-stat.c||deps/uv/test/benchmark-fs-stat.c",
          "deps/uv/test/benchmark-list.h||deps/uv/test/benchmark-list.h",
          "deps/uv/uv.gyp||deps/uv/uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: #define UV_VERSION_MAJOR 0",
          "",
          "[Removed Lines]",
          "52: #define UV_VERSION_MINOR 6",
          "",
          "[Added Lines]",
          "52: #define UV_VERSION_MINOR 8",
          "",
          "---------------"
        ],
        "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c": [
          "File: deps/uv/src/win/fs.c -> deps/uv/src/win/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:     return;                                                                 \\",
          "92:   }",
          "94: #define IS_SLASH(c) ((c) == L'\\\\' || (c) == L'/')",
          "95: #define IS_LETTER(c) (((c) >= L'a' && (c) <= L'z') || \\",
          "96:   ((c) >= L'A' && (c) <= L'Z'))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94: #define FILETIME_TO_TIME_T(filetime)                                        \\",
          "95:    ((*((uint64_t*) &(filetime)) - 116444736000000000ULL) / 10000000ULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "630:                         (int64_t) info.nFileSizeLow;",
          "631:   }",
          "637:   req->stat.st_nlink = (info.nNumberOfLinks <= SHRT_MAX) ?",
          "638:                        (short) info.nNumberOfLinks : SHRT_MAX;",
          "",
          "[Removed Lines]",
          "633:   uv_filetime_to_time_t(&info.ftLastWriteTime, &(req->stat.st_mtime));",
          "634:   uv_filetime_to_time_t(&info.ftLastAccessTime, &(req->stat.st_atime));",
          "635:   uv_filetime_to_time_t(&info.ftCreationTime, &(req->stat.st_ctime));",
          "",
          "[Added Lines]",
          "636:   req->stat.st_mtime = FILETIME_TO_TIME_T(info.ftLastWriteTime);",
          "637:   req->stat.st_atime = FILETIME_TO_TIME_T(info.ftLastAccessTime);",
          "638:   req->stat.st_ctime = FILETIME_TO_TIME_T(info.ftCreationTime);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/internal.h||deps/uv/src/win/internal.h": [
          "File: deps/uv/src/win/internal.h -> deps/uv/src/win/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "280: void uv__util_init();",
          "282: int uv_parent_pid();",
          "284: void uv_fatal_error(const int errorno, const char* syscall);",
          "285: uv_err_code uv_translate_sys_error(int sys_errno);",
          "",
          "[Removed Lines]",
          "283: void uv_filetime_to_time_t(FILETIME* file_time,  time_t* stat_time);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/win/util.c||deps/uv/src/win/util.c": [
          "File: deps/uv/src/win/util.c -> deps/uv/src/win/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "863:   free(addresses);",
          "864: }",
          "",
          "[Removed Lines]",
          "867: void uv_filetime_to_time_t(FILETIME* file_time, time_t* stat_time) {",
          "868:   FILETIME local_time;",
          "869:   SYSTEMTIME system_time;",
          "870:   struct tm time;",
          "872:   if ((file_time->dwLowDateTime || file_time->dwHighDateTime) &&",
          "873:       FileTimeToLocalFileTime(file_time, &local_time)         &&",
          "874:       FileTimeToSystemTime(&local_time, &system_time)) {",
          "875:     time.tm_year = system_time.wYear - 1900;",
          "876:     time.tm_mon = system_time.wMonth - 1;",
          "877:     time.tm_mday = system_time.wDay;",
          "878:     time.tm_hour = system_time.wHour;",
          "879:     time.tm_min = system_time.wMinute;",
          "880:     time.tm_sec = system_time.wSecond;",
          "881:     time.tm_isdst = -1;",
          "884:   } else {",
          "886:   }",
          "887: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/benchmark-fs-stat.c||deps/uv/test/benchmark-fs-stat.c": [
          "File: deps/uv/test/benchmark-fs-stat.c -> deps/uv/test/benchmark-fs-stat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"task.h\"",
          "23: #include \"uv.h\"",
          "25: #include <stdio.h>",
          "26: #include <stdlib.h>",
          "28: #define NUM_SYNC_REQS         (10 * 1e5)",
          "29: #define NUM_ASYNC_REQS        (1 * 1e5)",
          "30: #define MAX_CONCURRENT_REQS   32",
          "32: #define sync_stat(req, path)                                                  \\",
          "33:   do {                                                                        \\",
          "34:     uv_fs_stat(uv_default_loop(), (req), (path), NULL);                       \\",
          "35:     uv_fs_req_cleanup((req));                                                 \\",
          "36:   }                                                                           \\",
          "37:   while (0)",
          "39: struct async_req {",
          "40:   const char* path;",
          "41:   uv_fs_t fs_req;",
          "42:   int* count;",
          "43: };",
          "46: static const char* fmt(double d) {",
          "47:   uint64_t v;",
          "48:   char* p;",
          "51:   v = d;",
          "54:   if (d - v >= 0.01) {",
          "58:   }",
          "59: #endif",
          "61:   if (v == 0)",
          "64:   while (v) {",
          "65:     if (v) *--p = '0' + (v % 10), v /= 10;",
          "66:     if (v) *--p = '0' + (v % 10), v /= 10;",
          "67:     if (v) *--p = '0' + (v % 10), v /= 10;",
          "68:     if (v) *--p = ',';",
          "69:   }",
          "71:   return p;",
          "72: }",
          "75: static void warmup(const char* path) {",
          "76:   uv_fs_t reqs[MAX_CONCURRENT_REQS];",
          "77:   int i;",
          "80:   for (i = 0; i < ARRAY_SIZE(reqs); i++)",
          "81:     uv_fs_stat(uv_default_loop(), reqs + i, path, uv_fs_req_cleanup);",
          "83:   uv_run(uv_default_loop());",
          "86:   for (i = 0; i < 16; i++)",
          "87:     sync_stat(reqs + 0, path);",
          "88: }",
          "91: static void sync_bench(const char* path) {",
          "92:   uint64_t before;",
          "93:   uint64_t after;",
          "94:   uv_fs_t req;",
          "95:   int i;",
          "98:   before = uv_hrtime();",
          "100:   for (i = 0; i < NUM_SYNC_REQS; i++)",
          "101:     sync_stat(&req, path);",
          "103:   after = uv_hrtime();",
          "105:   printf(\"%s stats (sync): %.2fs (%s/s)\\n\",",
          "106:          fmt(1.0 * NUM_SYNC_REQS),",
          "107:          (after - before) / 1e9,",
          "108:          fmt((1.0 * NUM_SYNC_REQS) / ((after - before) / 1e9)));",
          "109:   fflush(stdout);",
          "110: }",
          "113: static void stat_cb(uv_fs_t* fs_req) {",
          "114:   struct async_req* req = container_of(fs_req, struct async_req, fs_req);",
          "115:   uv_fs_req_cleanup(&req->fs_req);",
          "116:   if (*req->count == 0) return;",
          "117:   uv_fs_stat(uv_default_loop(), &req->fs_req, req->path, stat_cb);",
          "118:   (*req->count)--;",
          "119: }",
          "122: static void async_bench(const char* path) {",
          "123:   struct async_req reqs[MAX_CONCURRENT_REQS];",
          "124:   struct async_req* req;",
          "125:   uint64_t before;",
          "126:   uint64_t after;",
          "127:   int count;",
          "128:   int i;",
          "130:   for (i = 1; i <= MAX_CONCURRENT_REQS; i++) {",
          "131:     count = NUM_ASYNC_REQS;",
          "133:     for (req = reqs; req < reqs + i; req++) {",
          "134:       req->path = path;",
          "135:       req->count = &count;",
          "136:       uv_fs_stat(uv_default_loop(), &req->fs_req, req->path, stat_cb);",
          "137:     }",
          "139:     before = uv_hrtime();",
          "140:     uv_run(uv_default_loop());",
          "141:     after = uv_hrtime();",
          "143:     printf(\"%s stats (%d concurrent): %.2fs (%s/s)\\n\",",
          "144:            fmt(1.0 * NUM_ASYNC_REQS),",
          "145:            i,",
          "146:            (after - before) / 1e9,",
          "147:            fmt((1.0 * NUM_ASYNC_REQS) / ((after - before) / 1e9)));",
          "148:     fflush(stdout);",
          "149:   }",
          "150: }",
          "158: BENCHMARK_IMPL(fs_stat) {",
          "159:   const char path[] = \".\";",
          "160:   warmup(path);",
          "161:   sync_bench(path);",
          "162:   async_bench(path);",
          "163:   return 0;",
          "164: }",
          "",
          "---------------"
        ],
        "deps/uv/test/benchmark-list.h||deps/uv/test/benchmark-list.h": [
          "File: deps/uv/test/benchmark-list.h -> deps/uv/test/benchmark-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: BENCHMARK_DECLARE (udp_packet_storm_1000v1000)",
          "45: BENCHMARK_DECLARE (gethostbyname)",
          "46: BENCHMARK_DECLARE (getaddrinfo)",
          "47: BENCHMARK_DECLARE (spawn)",
          "48: BENCHMARK_DECLARE (thread_create)",
          "49: BENCHMARK_DECLARE (million_timers)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: BENCHMARK_DECLARE (fs_stat)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:   BENCHMARK_ENTRY  (getaddrinfo)",
          "108:   BENCHMARK_ENTRY  (spawn)",
          "109:   BENCHMARK_ENTRY  (thread_create)",
          "110:   BENCHMARK_ENTRY  (million_timers)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109:   BENCHMARK_ENTRY  (fs_stat)",
          "",
          "---------------"
        ],
        "deps/uv/uv.gyp||deps/uv/uv.gyp": [
          "File: deps/uv/uv.gyp -> deps/uv/uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "404:       'dependencies': [ 'uv' ],",
          "405:       'sources': [",
          "406:         'test/benchmark-ares.c',",
          "407:         'test/benchmark-getaddrinfo.c',",
          "408:         'test/benchmark-list.h',",
          "409:         'test/benchmark-loop-count.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "407:         'test/benchmark-fs-stat.c',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "18acdff8d3e783cd067534994d10104780f2fd07",
      "candidate_info": {
        "commit_hash": "18acdff8d3e783cd067534994d10104780f2fd07",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/18acdff8d3e783cd067534994d10104780f2fd07",
        "files": [
          "vcbuild.bat"
        ],
        "message": "build: fix the help output of vcbuild.bat",
        "before_after_code_files": [
          "vcbuild.bat||vcbuild.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "vcbuild.bat||vcbuild.bat": [
          "File: vcbuild.bat -> vcbuild.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "148: :help",
          "149: echo vcbuild.bat [debug/release] [msi] [test-all/test-uv/test-internet/test-pummel/test-simple/test-message] [clean] [noprojgen] [nobuild] [nosign]",
          "150: echo Examples:",
          "152: echo   vcbuild.bat release msi    : builds release build and MSI installer package",
          "153: echo   vcbuild.bat test           : builds debug build and runs tests",
          "154: goto exit",
          "",
          "[Removed Lines]",
          "151: echo   vcbuild.bat                : builds debug build",
          "",
          "[Added Lines]",
          "151: echo   vcbuild.bat                : builds release build",
          "152: echo   vcbuild.bat debug          : builds debug build",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b7e8e35c0ed2d1faeac1354fcc6b34c5590075fa",
      "candidate_info": {
        "commit_hash": "b7e8e35c0ed2d1faeac1354fcc6b34c5590075fa",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b7e8e35c0ed2d1faeac1354fcc6b34c5590075fa",
        "files": [
          "lib/http.js"
        ],
        "message": "http leak: Null links from parser to req/res",
        "before_after_code_files": [
          "lib/http.js||lihttp.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1080:   self._deferToConnect(null, null, function() {",
          "1081:     self._flush();",
          "1082:   });",
          "1084: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1128:     var freeParser = function() {",
          "1129:       if (parser) {",
          "1131:         parser.socket.onend = null;",
          "1132:         parser.socket.ondata = null;",
          "1133:         parser.socket = null;",
          "1134:         parser = null;",
          "1135:       }",
          "1136:     };",
          "1138:     var errorListener = function(err) {",
          "",
          "[Removed Lines]",
          "1130:         parsers.free(parser);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}