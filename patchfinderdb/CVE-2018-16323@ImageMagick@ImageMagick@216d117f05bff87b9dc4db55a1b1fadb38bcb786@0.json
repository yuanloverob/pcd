{
  "cve_id": "CVE-2018-16323",
  "cve_desc": "ReadXBMImage in coders/xbm.c in ImageMagick before 7.0.8-9 leaves data uninitialized when processing an XBM file that has a negative pixel value. If the affected code is used as a library loaded into a process that includes sensitive information, that information sometimes can be leaked via the image data.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "216d117f05bff87b9dc4db55a1b1fadb38bcb786",
  "patch_info": {
    "commit_hash": "216d117f05bff87b9dc4db55a1b1fadb38bcb786",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/216d117f05bff87b9dc4db55a1b1fadb38bcb786",
    "files": [
      "coders/xbm.c"
    ],
    "message": "XBM coder leaves the hex image data uninitialized if hex value of the pixel is negative",
    "before_after_code_files": [
      "coders/xbm.c||coders/xbm.c"
    ]
  },
  "patch_diff": {
    "coders/xbm.c||coders/xbm.c": [
      "File: coders/xbm.c -> coders/xbm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "351:     ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "352:   p=data;",
      "353:   if (version == 10)",
      "355:     {",
      "356:       c=XBMInteger(image,hex_digits);",
      "357:       if (c < 0)",
      "",
      "[Removed Lines]",
      "354:     for (i=0; i < (ssize_t) (bytes_per_line*image->rows); (i+=2))",
      "",
      "[Added Lines]",
      "354:     for (i=0; i < (ssize_t) (bytes_per_line*image->rows); (i+=2))",
      "355:     {",
      "356:       c=XBMInteger(image,hex_digits);",
      "357:       if (c < 0)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "362:     }",
      "363:   else",
      "365:     {",
      "366:       c=XBMInteger(image,hex_digits);",
      "367:       if (c < 0)",
      "",
      "[Removed Lines]",
      "364:     for (i=0; i < (ssize_t) (bytes_per_line*image->rows); i++)",
      "",
      "[Added Lines]",
      "367:     for (i=0; i < (ssize_t) (bytes_per_line*image->rows); i++)",
      "368:     {",
      "369:       c=XBMInteger(image,hex_digits);",
      "370:       if (c < 0)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d9a8234d211da30baf9526fbebe9a8438ea7e11c",
      "candidate_info": {
        "commit_hash": "d9a8234d211da30baf9526fbebe9a8438ea7e11c",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/d9a8234d211da30baf9526fbebe9a8438ea7e11c",
        "files": [
          "coders/xbm.c"
        ],
        "message": "https://github.com/ImageMagick/ImageMagick/issues/712",
        "before_after_code_files": [
          "coders/xbm.c||coders/xbm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/xbm.c||coders/xbm.c"
          ],
          "candidate": [
            "coders/xbm.c||coders/xbm.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/xbm.c||coders/xbm.c": [
          "File: coders/xbm.c -> coders/xbm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "131: %",
          "132: %    o image_info: the image info.",
          "133: %",
          "135: %",
          "",
          "[Removed Lines]",
          "134: %    o exception: return any errors or warnings in this structure.",
          "",
          "[Added Lines]",
          "134: %    o exception: return any errors or warnings in this structure.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:     Skip any leading whitespace.",
          "150:   {",
          "151:     c=ReadBlobByte(image);",
          "152:     if (c == EOF)",
          "",
          "[Removed Lines]",
          "149:   do",
          "",
          "[Added Lines]",
          "149:   do",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "163:     value*=16;",
          "164:     c&=0xff;",
          "165:     if (value > (unsigned int) (INT_MAX-hex_digits[c]))",
          "167:     value+=hex_digits[c];",
          "169:     if (c == EOF)",
          "170:       return(0);",
          "171:   } while (hex_digits[c] >= 0);",
          "",
          "[Removed Lines]",
          "166:       break;",
          "168:     c=ReadBlobByte(image);",
          "",
          "[Added Lines]",
          "166:       break;",
          "168:     c=ReadBlobByte(image);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "177:   char",
          "178:     buffer[MagickPathExtent],",
          "179:     name[MagickPathExtent];",
          "181:   Image",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "181:   Image",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "206:   unsigned int",
          "207:     bit,",
          "208:     byte,",
          "210:     height,",
          "211:     length,",
          "212:     padding,",
          "",
          "[Removed Lines]",
          "209:     bytes_per_line,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "282:     Initialize image structure.",
          "284:   if (AcquireImageColormap(image,image->colors,exception) == MagickFalse)",
          "291:   image->colormap[0].blue=QuantumRange;",
          "292:   image->colormap[1].red=(Quantum) 0;",
          "293:   image->colormap[1].green=(Quantum) 0;",
          "",
          "[Removed Lines]",
          "285:     ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "287:     Initialize colormap.",
          "289:   image->colormap[0].red=QuantumRange;",
          "290:   image->colormap[0].green=QuantumRange;",
          "",
          "[Added Lines]",
          "287:     ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "289:     Initialize colormap.",
          "291:   image->colormap[0].red=(MagickRealType) QuantumRange;",
          "292:   image->colormap[0].green=(MagickRealType) QuantumRange;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "344:     sizeof(*data));",
          "345:   if (data == (unsigned char *) NULL)",
          "346:     ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
          "349:     for (i=0; i < (ssize_t) (bytes_per_line*image->rows); (i+=2))",
          "350:     {",
          "351:       value=XBMInteger(image,hex_digits);",
          "353:       if ((padding == 0) || (((i+2) % bytes_per_line) != 0))",
          "357:     for (i=0; i < (ssize_t) (bytes_per_line*image->rows); i++)",
          "358:     {",
          "359:       value=XBMInteger(image,hex_digits);",
          "",
          "[Removed Lines]",
          "347:   p=data;",
          "348:   if (version == 10)",
          "355:     }",
          "356:   else",
          "",
          "[Added Lines]",
          "349:   p=data;",
          "350:   if (version == 10)",
          "351:     for (i=0; i < (ssize_t) (bytes_per_line*image->rows); (i+=2))",
          "352:     {",
          "359:     }",
          "360:   else",
          "361:     for (i=0; i < (ssize_t) (bytes_per_line*image->rows); i++)",
          "362:     {",
          "363:       c=XBMInteger(image,hex_digits);",
          "364:       if (c < 0)",
          "365:         break;",
          "367:     }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "369:     if (q == (Quantum *) NULL)",
          "370:       break;",
          "371:     bit=0;",
          "373:     for (x=0; x < (ssize_t) image->columns; x++)",
          "374:     {",
          "375:       if (bit == 0)",
          "",
          "[Removed Lines]",
          "372:     byte=0;",
          "",
          "[Added Lines]",
          "383:     byte=0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}