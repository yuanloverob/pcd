{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "dbdd93b7e1b6f4e129df36309868a4c1fb002207",
      "candidate_info": {
        "commit_hash": "dbdd93b7e1b6f4e129df36309868a4c1fb002207",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dbdd93b7e1b6f4e129df36309868a4c1fb002207",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases in test/fuzzdata8.db.\n\nFossilOrigin-Name: 7be6222c9ec44596e4eddd906c831eb1272b90fbdf68641d791f216264feb7cf",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e1724f1d618cfbcfd1e495d8965a395656cfc1114e1bffd4bc3be0bd5cdb6550",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "48ea97e5dd5db78293e6213c352eca815a29d629",
      "candidate_info": {
        "commit_hash": "48ea97e5dd5db78293e6213c352eca815a29d629",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/48ea97e5dd5db78293e6213c352eca815a29d629",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/os_win.c"
        ],
        "message": "Remove the unused mmapSizeActual field from the Windows sqlite3_file implementation.\n\nFossilOrigin-Name: 0e7aa62227d1d9c3540b54d7caf44a1ce7ccfa706672fc41dbb2be477ab3a667",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/os_win.c||src/os_win.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 81629ba91475938b6ad528e7b1dbef4ad22239782bb2e9c1bb59413aba11da87",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/os_win.c||src/os_win.c": [
          "File: src/os_win.c -> src/os_win.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4334: static int winUnmapfile(winFile *pFile){",
          "4335:   assert( pFile!=0 );",
          "4336:   OSTRACE((\"UNMAP-FILE pid=%lu, pFile=%p, hMap=%p, pMapRegion=%p, \"",
          "4338:            osGetCurrentProcessId(), pFile, pFile->hMap, pFile->pMapRegion,",
          "4340:   if( pFile->pMapRegion ){",
          "4341:     if( !osUnmapViewOfFile(pFile->pMapRegion) ){",
          "4342:       pFile->lastErrno = osGetLastError();",
          "",
          "[Removed Lines]",
          "4337:            \"mmapSize=%lld, mmapSizeActual=%lld, mmapSizeMax=%lld\\n\",",
          "4339:            pFile->mmapSize, pFile->mmapSizeActual, pFile->mmapSizeMax));",
          "",
          "[Added Lines]",
          "4336:            \"mmapSize=%lld, mmapSizeMax=%lld\\n\",",
          "4338:            pFile->mmapSize, pFile->mmapSizeMax));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4348:     }",
          "4349:     pFile->pMapRegion = 0;",
          "4350:     pFile->mmapSize = 0;",
          "4352:   }",
          "4353:   if( pFile->hMap!=NULL ){",
          "4354:     if( !osCloseHandle(pFile->hMap) ){",
          "",
          "[Removed Lines]",
          "4351:     pFile->mmapSizeActual = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4459:     }",
          "4460:     pFd->pMapRegion = pNew;",
          "4461:     pFd->mmapSize = nMap;",
          "4463:   }",
          "4465:   OSTRACE((\"MAP-FILE pid=%lu, pFile=%p, rc=SQLITE_OK\\n\",",
          "",
          "[Removed Lines]",
          "4462:     pFd->mmapSizeActual = nMap;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5261:   pFile->hMap = NULL;",
          "5262:   pFile->pMapRegion = 0;",
          "5263:   pFile->mmapSize = 0;",
          "5265:   pFile->mmapSizeMax = sqlite3GlobalConfig.szMmap;",
          "5266: #endif",
          "",
          "[Removed Lines]",
          "5264:   pFile->mmapSizeActual = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db5ba5c385496191770a418e27607522474e611c",
      "candidate_info": {
        "commit_hash": "db5ba5c385496191770a418e27607522474e611c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/db5ba5c385496191770a418e27607522474e611c",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/like3.test"
        ],
        "message": "Omit tests of the LIKE optimization in like3.test when SQLITE_ENABLE_ICU is defined.\n\nFossilOrigin-Name: af53c41a127c314c0608f3fd016d3a26896783745e46cd180976a188400cdb75",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/like3.test||test/like3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7be6222c9ec44596e4eddd906c831eb1272b90fbdf68641d791f216264feb7cf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/like3.test||test/like3.test": [
          "File: test/like3.test -> test/like3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "182: # Verify that the LIKE optimization works with an ESCAPE clause when",
          "183: # using PRAGMA case_sensitive_like=ON.",
          "184: #",
          "185: do_execsql_test like3-6.100 {",
          "186:   DROP TABLE IF EXISTS t1;",
          "187:   CREATE TABLE t1(path TEXT COLLATE nocase PRIMARY KEY,a,b,c) WITHOUT ROWID;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185: ifcapable !icu {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:   QUERY PLAN",
          "230:   `--SEARCH TABLE t2 USING INDEX t2path2 (path>? AND path<?)",
          "231: }",
          "233: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "58b42ad1314348a2be094abda4239d2c0a6be926",
      "candidate_info": {
        "commit_hash": "58b42ad1314348a2be094abda4239d2c0a6be926",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/58b42ad1314348a2be094abda4239d2c0a6be926",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/fuzzdata7.db"
        ],
        "message": "Earlier detection of corruption while added to the freelist.\n\nFossilOrigin-Name: 8c80b004cae71aaf820a31dba80c100ed162ef5bae845fb4535ff4d3be407500",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bcbe7d96df3c9515f679ccf671ca9ba89d081b53501495d4218eb5126196838b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6193:   assert( CORRUPT_DB || iPage>1 );",
          "6194:   assert( !pMemPage || pMemPage->pgno==iPage );",
          "6197:   if( pMemPage ){",
          "6198:     pPage = pMemPage;",
          "6199:     sqlite3PagerRef(pPage->pDbPage);",
          "",
          "[Removed Lines]",
          "6196:   if( iPage<2 ) return SQLITE_CORRUPT_BKPT;",
          "",
          "[Added Lines]",
          "6196:   if( iPage<2 || iPage>pBt->nPage ){",
          "6197:     return SQLITE_CORRUPT_BKPT;",
          "6198:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b186a622ee3650dae46ab52f24e23fb91ef4e6c0",
      "candidate_info": {
        "commit_hash": "b186a622ee3650dae46ab52f24e23fb91ef4e6c0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b186a622ee3650dae46ab52f24e23fb91ef4e6c0",
        "files": [
          "ext/fts5/fts5_config.c",
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "ext/fts5/test/fts5misc.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Disallow page-sizes smaller than 32 bytes in fts5. Also ensure the fts5 integrity-check works even when \"PRAGMA reverse_unordered_selects\" is true. Fix for [265e935b26].\n\nFossilOrigin-Name: 8ab0aebdb3c2d6fb3160b2c58ce6cc0495a6ddd960878a6395958c837f3d1b71",
        "before_after_code_files": [
          "ext/fts5/fts5_config.c||ext/fts5/fts5_config.c",
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "ext/fts5/test/fts5misc.test||ext/fts5/test/fts5misc.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_config.c||ext/fts5/fts5_config.c": [
          "File: ext/fts5/fts5_config.c -> ext/fts5/fts5_config.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "828:     if( SQLITE_INTEGER==sqlite3_value_numeric_type(pVal) ){",
          "829:       pgsz = sqlite3_value_int(pVal);",
          "830:     }",
          "833:     }else{",
          "834:       pConfig->pgsz = pgsz;",
          "",
          "[Removed Lines]",
          "831:     if( pgsz<=0 || pgsz>FTS5_MAX_PAGE_SIZE ){",
          "",
          "[Added Lines]",
          "831:     if( pgsz<32 || pgsz>FTS5_MAX_PAGE_SIZE ){",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5890:   if( pSeg->pgnoFirst==0 ) return;",
          "5892:   fts5IndexPrepareStmt(p, &pStmt, sqlite3_mprintf(",
          "5894:       pConfig->zDb, pConfig->zName, pSeg->iSegid",
          "5895:   ));",
          "",
          "[Removed Lines]",
          "5893:       \"SELECT segid, term, (pgno>>1), (pgno&1) FROM %Q.'%q_idx' WHERE segid=%d\",",
          "",
          "[Added Lines]",
          "5893:       \"SELECT segid, term, (pgno>>1), (pgno&1) FROM %Q.'%q_idx' WHERE segid=%d \"",
          "5894:       \"ORDER BY 1, 2\",",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "4484: do_catchsql_test 36.1 {",
          "4485:   INSERT INTO t1(b) VALUES(",
          "4486:       x'78de3fa24af3733ca8769291a0fee3669f9fddefc5cba913e4225d4b6ce2b04f26b87fad3ee6f9b7d90a1ea62a169bf41e5d32707a6ca5c3d05e4bde05c9d89eaaa8c50e74333d2e9fcd7dfe95528a3a016aac1102d825c5cd70cf99d8a88e0ea7f798d4334386518b7ad359beb168b93aba059a2a3bd93112d65b44c12b9904ea786b204d80531cdf0504bf9b203dbe927061974caf7b9f30cbc3397b61f802e732012a6663d41c3607d6f1c0dbcfd489adac05ca500c0b04439d894cd93a840159225ef73b627e178b9f84b3ffe66cf22a963a8368813ff7961fc47f573211ccec95e0220dcbb3bf429f4a50ba54d7a53784ac51bfef346e6a');",
          "4489: #-------------------------------------------------------------------------",
          "4490: reset_db",
          "",
          "[Removed Lines]",
          "4487: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "4487: } {0 {}}",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5misc.test||ext/fts5/test/fts5misc.test": [
          "File: ext/fts5/test/fts5misc.test -> ext/fts5/test/fts5misc.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "107: }",
          "110: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: #-------------------------------------------------------------------------",
          "110: reset_db",
          "111: do_execsql_test 3.0 {",
          "112:   CREATE VIRTUAL TABLE vt0 USING fts5(a);",
          "113:   PRAGMA reverse_unordered_selects = true;",
          "114:   INSERT INTO vt0 VALUES('365062398'), (0), (0);",
          "115:   INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38');",
          "116: }",
          "117: do_execsql_test 3.1 {",
          "118:   UPDATE vt0 SET a = 399905135; -- unexpected: database disk image is malformed",
          "119: }",
          "120: do_execsql_test 3.2 {",
          "121:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "122: }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5d76dbc5b0584c15d7d59e5c079868f2077f32b865f406b40ec837b8ab6ef2e1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}