{
  "cve_id": "CVE-2018-18313",
  "cve_desc": "Perl before 5.26.3 has a buffer over-read via a crafted regular expression that triggers disclosure of sensitive information from process memory.",
  "repo": "Perl/perl5",
  "patch_hash": "43b2f4ef399e2fd7240b4eeb0658686ad95f8e62",
  "patch_info": {
    "commit_hash": "43b2f4ef399e2fd7240b4eeb0658686ad95f8e62",
    "repo": "Perl/perl5",
    "commit_url": "https://github.com/Perl/perl5/commit/43b2f4ef399e2fd7240b4eeb0658686ad95f8e62",
    "files": [
      "regcomp.c"
    ],
    "message": "regcomp.c: Convert some strchr to memchr\n\nThis allows things to work properly in the face of embedded NULs.\nSee the branch merge message for more information.",
    "before_after_code_files": [
      "regcomp.c||regcomp.c"
    ]
  },
  "patch_diff": {
    "regcomp.c||regcomp.c": [
      "File: regcomp.c -> regcomp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "12061:         vFAIL2(\"Missing right brace on \\\\%c{}\", 'N');",
      "12062:     }",
      "",
      "[Removed Lines]",
      "12059:     endbrace = strchr(RExC_parse, '}');",
      "",
      "[Added Lines]",
      "12059:     endbrace = (char *) memchr(RExC_parse, '}', RExC_end - RExC_parse);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "12773:             else {",
      "12774:                 STRLEN length;",
      "12775:                 char name = *RExC_parse;",
      "12777:                 RExC_parse += 2;",
      "12780:                 if (! endbrace) {",
      "12781:                     vFAIL2(\"Missing right brace on \\\\%c{}\", name);",
      "",
      "[Removed Lines]",
      "12776:                 char * endbrace;",
      "12778:                 endbrace = strchr(RExC_parse, '}');",
      "",
      "[Added Lines]",
      "12776:                 char * endbrace = NULL;",
      "12778:                 if (RExC_parse < RExC_end) {",
      "12779:                     endbrace = (char *) memchr(RExC_parse, '}', RExC_end - RExC_parse);",
      "12780:                 }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "16312:       vFAIL2(\"Empty \\\\%c\", (U8)value);",
      "16313:   if (*RExC_parse == '{') {",
      "16314:       const U8 c = (U8)value;",
      "16316:                     if (!e) {",
      "16317:                         RExC_parse++;",
      "16318:                         vFAIL2(\"Missing right brace on \\\\%c{}\", c);",
      "",
      "[Removed Lines]",
      "16315:       e = strchr(RExC_parse, '}');",
      "",
      "[Added Lines]",
      "16317:       e = (char *) memchr(RExC_parse, '}', RExC_end - RExC_parse);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c1c28ce6ba90ee05aa96b11ad551a6063680f3b9",
      "candidate_info": {
        "commit_hash": "c1c28ce6ba90ee05aa96b11ad551a6063680f3b9",
        "repo": "Perl/perl5",
        "commit_url": "https://github.com/Perl/perl5/commit/c1c28ce6ba90ee05aa96b11ad551a6063680f3b9",
        "files": [
          "regcomp.c"
        ],
        "message": "regcomp.c: Convert some strchr to memchr\n\nThis allows things to work properly in the face of embedded NULs.\nSee the branch merge message for more information.\n\n(cherry picked from commit 43b2f4ef399e2fd7240b4eeb0658686ad95f8e62)",
        "before_after_code_files": [
          "regcomp.c||regcomp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "regcomp.c||regcomp.c"
          ],
          "candidate": [
            "regcomp.c||regcomp.c"
          ]
        }
      },
      "candidate_diff": {
        "regcomp.c||regcomp.c": [
          "File: regcomp.c -> regcomp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12027:         vFAIL2(\"Missing right brace on \\\\%c{}\", 'N');",
          "12028:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12026:     endbrace = (char *) memchr(RExC_parse, '}', RExC_end - RExC_parse);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12692:             else {",
          "12693:                 STRLEN length;",
          "12694:                 char name = *RExC_parse;",
          "12696:                 RExC_parse += 2;",
          "12699:                 if (! endbrace) {",
          "12700:                     vFAIL2(\"Missing right brace on \\\\%c{}\", name);",
          "",
          "[Removed Lines]",
          "12695:                 char * endbrace;",
          "12697:                 endbrace = strchr(RExC_parse, '}');",
          "",
          "[Added Lines]",
          "12696:                 char * endbrace = NULL;",
          "12698:                 if (RExC_parse < RExC_end) {",
          "12699:                     endbrace = (char *) memchr(RExC_parse, '}', RExC_end - RExC_parse);",
          "12700:                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "16228:       vFAIL2(\"Empty \\\\%c\", (U8)value);",
          "16229:   if (*RExC_parse == '{') {",
          "16230:       const U8 c = (U8)value;",
          "16232:                     if (!e) {",
          "16233:                         RExC_parse++;",
          "16234:                         vFAIL2(\"Missing right brace on \\\\%c{}\", c);",
          "",
          "[Removed Lines]",
          "16231:       e = strchr(RExC_parse, '}');",
          "",
          "[Added Lines]",
          "16234:       e = (char *) memchr(RExC_parse, '}', RExC_end - RExC_parse);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "73157762e2382837c0c047c77aca4bb0f5377216",
      "candidate_info": {
        "commit_hash": "73157762e2382837c0c047c77aca4bb0f5377216",
        "repo": "Perl/perl5",
        "commit_url": "https://github.com/Perl/perl5/commit/73157762e2382837c0c047c77aca4bb0f5377216",
        "files": [
          "regcomp.c"
        ],
        "message": "regcomp.c: Simplify expression\n\nHere, there is no advantage to assigning a variable within an 'if', and\nit is somewhat harder to read, so don't do it.",
        "before_after_code_files": [
          "regcomp.c||regcomp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "regcomp.c||regcomp.c"
          ],
          "candidate": [
            "regcomp.c||regcomp.c"
          ]
        }
      },
      "candidate_diff": {
        "regcomp.c||regcomp.c": [
          "File: regcomp.c -> regcomp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12021:         vFAIL2(\"Missing right brace on \\\\%c{}\", 'N');",
          "12022:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12020:     endbrace = strchr(RExC_parse, '}');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff4e2b11ab19d0c806a3dc09308d1b393971b8aa",
      "candidate_info": {
        "commit_hash": "ff4e2b11ab19d0c806a3dc09308d1b393971b8aa",
        "repo": "Perl/perl5",
        "commit_url": "https://github.com/Perl/perl5/commit/ff4e2b11ab19d0c806a3dc09308d1b393971b8aa",
        "files": [
          "regcomp.c",
          "t/re/re_tests"
        ],
        "message": "Fix error message for unclosed \\N{ in regcomp\n\nAn unclosed \\N{ that made it through to the regex engine rather than\nbeing handled by the lexer would erroneously trigger the error for\n\"\\N{NAME} must be resolved by the lexer\".\n\nThis separates the check for the missing trailing } and issues the\ncorrect error message for this.",
        "before_after_code_files": [
          "regcomp.c||regcomp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "regcomp.c||regcomp.c"
          ],
          "candidate": [
            "regcomp.c||regcomp.c"
          ]
        }
      },
      "candidate_diff": {
        "regcomp.c||regcomp.c": [
          "File: regcomp.c -> regcomp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12011:                   && strnEQ(RExC_parse, \"U+\", 2)))) /* ... below for a better",
          "12013:     {",
          "12015:  vFAIL(\"\\\\N{NAME} must be resolved by the lexer\");",
          "12016:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12009:         vFAIL2(\"Missing right brace on \\\\%c{}\", 'N');",
          "12010:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}