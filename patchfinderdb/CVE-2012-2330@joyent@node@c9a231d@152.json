{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d530ee62cd1eb1fd038f4e86314c741422b4de25",
      "candidate_info": {
        "commit_hash": "d530ee62cd1eb1fd038f4e86314c741422b4de25",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d530ee62cd1eb1fd038f4e86314c741422b4de25",
        "files": [
          "doc/api/http.markdown",
          "doc/api/net.markdown",
          "lib/net.js",
          "test/simple/test-net-server-close.js"
        ],
        "message": "Issue #2762. Add callback to close function.",
        "before_after_code_files": [
          "lib/net.js||linet.js",
          "test/simple/test-net-server-close.js||test/simple/test-net-server-close.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "885: }",
          "889:   if (!this._handle) {",
          "891:     throw new Error('Not running');",
          "892:   }",
          "894:   this._handle.close();",
          "895:   this._handle = null;",
          "896:   this._emitCloseIfDrained();",
          "",
          "[Removed Lines]",
          "888: Server.prototype.close = function() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-net-server-close.js||test/simple/test-net-server-close.js": [
          "File: test/simple/test-net-server-close.js -> test/simple/test-net-server-close.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: var net = require('net');",
          "29: var server = net.createServer(function(socket) {",
          "31:   process.nextTick(function() {",
          "32:     socket.destroy();",
          "33:   });",
          "",
          "[Removed Lines]",
          "30:   server.close();",
          "",
          "[Added Lines]",
          "30:   server.close(function() {",
          "31:     assert.equal(server.connections, 0);",
          "32:   });",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36: server.listen(common.PORT, function() {",
          "37:   net.createConnection(common.PORT);",
          "",
          "[Removed Lines]",
          "38: });",
          "40: server.on('close', function() {",
          "41:   assert.equal(server.connections, 0);",
          "42: });",
          "",
          "[Added Lines]",
          "40: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7343f8e776146bf4461348a9130f2c5040a0dfa0",
      "candidate_info": {
        "commit_hash": "7343f8e776146bf4461348a9130f2c5040a0dfa0",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7343f8e776146bf4461348a9130f2c5040a0dfa0",
        "files": [
          "doc/api/crypto.markdown",
          "doc/api/tls.markdown",
          "lib/tls.js"
        ],
        "message": "tls: add `honorCipherOrder` option to tls.createServer()\n\nDocumented how to mitigate BEAST attacks.",
        "before_after_code_files": [
          "lib/tls.js||litls.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: var stream = require('stream');",
          "27: var END_OF_FILE = 42;",
          "28: var assert = require('assert').ok;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1003:   if (options.crl) this.crl = options.crl;",
          "1004:   if (options.ciphers) this.ciphers = options.ciphers;",
          "1005:   if (options.secureProtocol) this.secureProtocol = options.secureProtocol;",
          "1007:   if (options.NPNProtocols) convertNPNProtocols(options.NPNProtocols, this);",
          "1008:   if (options.SNICallback) {",
          "1009:     this.SNICallback = options.SNICallback;",
          "",
          "[Removed Lines]",
          "1006:   if (options.secureOptions) this.secureOptions = options.secureOptions;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6bb9868271640770fe76274df1db8e450bd9c784",
      "candidate_info": {
        "commit_hash": "6bb9868271640770fe76274df1db8e450bd9c784",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6bb9868271640770fe76274df1db8e450bd9c784",
        "files": [
          "deps/v8/build/common.gypi"
        ],
        "message": "Reapply patches floating on V8",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:             'cflags': [ '-I/usr/pkg/include' ],",
          "315:           }],",
          "316:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "318:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "319:           }],",
          "320:         ],",
          "",
          "[Removed Lines]",
          "317:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "317:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:           }],  # OS==\"mac\"",
          "362:           ['OS==\"win\"', {",
          "363:             'msvs_configuration_attributes': {",
          "365:               'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "366:               'CharacterSet': '1',",
          "367:             },",
          "",
          "[Removed Lines]",
          "364:               'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "00247d53db6896d5463ec8792ed9431b25915938",
      "candidate_info": {
        "commit_hash": "00247d53db6896d5463ec8792ed9431b25915938",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/00247d53db6896d5463ec8792ed9431b25915938",
        "files": [
          "deps/v8/src/ic.cc"
        ],
        "message": "Fix Kraken regression due to optimistic monomorphic element transitions\n\nR=jkummerow@chromium.org\n\nReview URL: https://chromiumcodereview.appspot.com/10539141\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@11807 ce2b1a6d-e550-0410-aec6-3dcde31c8c00",
        "before_after_code_files": [
          "deps/v8/src/ic.cc||deps/v8/src/ic.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/src/ic.cc||deps/v8/src/ic.cc": [
          "File: deps/v8/src/ic.cc -> deps/v8/src/ic.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1602:     monomorphic = true;",
          "1603:   } else {",
          "1604:     GetReceiverMapsForStub(Handle<Code>(target()), &target_receiver_maps);",
          "",
          "[Removed Lines]",
          "1605:     if (ic_state == MONOMORPHIC && is_transition_stub) {",
          "",
          "[Added Lines]",
          "1605:     if (ic_state == MONOMORPHIC && (is_transition_stub || stub_kind == LOAD)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "534df2f8d207877f9d09d172d4ba92406e351aa0",
      "candidate_info": {
        "commit_hash": "534df2f8d207877f9d09d172d4ba92406e351aa0",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/534df2f8d207877f9d09d172d4ba92406e351aa0",
        "files": [
          "lib/tls.js",
          "test/simple/test-tls-client-abort2.js"
        ],
        "message": "tls: fix double 'error' events on HTTPS Requests\n\nFixes #2549.",
        "before_after_code_files": [
          "lib/tls.js||litls.js",
          "test/simple/test-tls-client-abort2.js||test/simple/test-tls-client-abort2.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "271:       this.pair.encrypted._doneFlag &&",
          "272:       !this.pair._doneFlag) {",
          "275:   }",
          "276: };",
          "",
          "[Removed Lines]",
          "274:     this.pair.destroy();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "721: SecurePair.prototype.destroy = function() {",
          "722:   var self = this;",
          "725:   if (!this._doneFlag) {",
          "726:     this._doneFlag = true;",
          "",
          "[Removed Lines]",
          "723:   var error = this.ssl.error;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "736:       self.encrypted.emit('close');",
          "737:       self.cleartext.emit('close');",
          "738:     });",
          "747:   }",
          "748: };",
          "751: SecurePair.prototype.error = function() {",
          "752:   if (!this._secureEstablished) {",
          "753:     this.destroy();",
          "754:   } else {",
          "755:     var err = this.ssl.error;",
          "756:     this.ssl.error = null;",
          "",
          "[Removed Lines]",
          "740:     if (!this._secureEstablished) {",
          "741:       if (!error) {",
          "742:         error = new Error('socket hang up');",
          "743:         error.code = 'ECONNRESET';",
          "744:       }",
          "745:       this.emit('error', error);",
          "746:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-tls-client-abort2.js||test/simple/test-tls-client-abort2.js": [
          "File: test/simple/test-tls-client-abort2.js -> test/simple/test-tls-client-abort2.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: if (!process.versions.openssl) {",
          "23:   console.error('Skipping because node compiled without OpenSSL.');",
          "24:   process.exit(0);",
          "25: }",
          "27: var common = require('../common');",
          "28: var assert = require('assert');",
          "29: var tls = require('tls');",
          "31: var errors = 0;",
          "33: var conn = tls.connect(common.PORT, function() {",
          "34:   assert(false); // callback should never be executed",
          "35: });",
          "36: conn.on('error', function() {",
          "37:   ++errors;",
          "38:   assert.doesNotThrow(function() {",
          "39:     conn.destroy();",
          "40:   });",
          "41: });",
          "43: process.on('exit', function() {",
          "44:   assert.equal(errors, 1);",
          "45: });",
          "",
          "---------------"
        ]
      }
    }
  ]
}