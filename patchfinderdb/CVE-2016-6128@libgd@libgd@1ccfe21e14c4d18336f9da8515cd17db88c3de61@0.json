{
  "cve_id": "CVE-2016-6128",
  "cve_desc": "The gdImageCropThreshold function in gd_crop.c in the GD Graphics Library (aka libgd) before 2.2.3, as used in PHP before 7.0.9, allows remote attackers to cause a denial of service (application crash) via an invalid color index.",
  "repo": "libgd/libgd",
  "patch_hash": "1ccfe21e14c4d18336f9da8515cd17db88c3de61",
  "patch_info": {
    "commit_hash": "1ccfe21e14c4d18336f9da8515cd17db88c3de61",
    "repo": "libgd/libgd",
    "commit_url": "https://github.com/libgd/libgd/commit/1ccfe21e14c4d18336f9da8515cd17db88c3de61",
    "files": [
      "src/gd_crop.c",
      "tests/CMakeLists.txt",
      "tests/Makefile.am"
    ],
    "message": "fix php 72494, invalid color index not handled, can lead to crash",
    "before_after_code_files": [
      "src/gd_crop.c||src/gd_crop.c",
      "tests/Makefile.am||tests/Makefile.am"
    ]
  },
  "patch_diff": {
    "src/gd_crop.c||src/gd_crop.c": [
      "File: src/gd_crop.c -> src/gd_crop.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "136:   return NULL;",
      "137:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "139:  if (color < 0 || (!gdImageTrueColor(im) && color >= gdImageColorsTotal(im))) {",
      "140:   return NULL;",
      "141:  }",
      "",
      "---------------"
    ],
    "tests/Makefile.am||tests/Makefile.am": [
      "File: tests/Makefile.am -> tests/Makefile.am",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: include gdimagecolortransparent/Makemodule.am",
      "26: include gdimagecopy/Makemodule.am",
      "27: include gdimagecopyrotated/Makemodule.am",
      "28: include gdimagefile/Makemodule.am",
      "29: include gdimagefill/Makemodule.am",
      "30: include gdimagefilledellipse/Makemodule.am",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: include gdimagecrop/Makemodule.am",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6ff72ae40c7c20ece939afb362d98cc37f4a1c96",
      "candidate_info": {
        "commit_hash": "6ff72ae40c7c20ece939afb362d98cc37f4a1c96",
        "repo": "libgd/libgd",
        "commit_url": "https://github.com/libgd/libgd/commit/6ff72ae40c7c20ece939afb362d98cc37f4a1c96",
        "files": [
          "tests/gdimagecrop/php_bug_72494.c"
        ],
        "message": "fix php 72494, invalid color index not handled, can lead to crash",
        "before_after_code_files": [
          "tests/gdimagecrop/php_bug_72494.c||tests/gdimagecrop/php_bug_72494.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/gdimagecrop/php_bug_72494.c||tests/gdimagecrop/php_bug_72494.c": [
          "File: tests/gdimagecrop/php_bug_72494.c -> tests/gdimagecrop/php_bug_72494.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #include <stdio.h>",
          "2: #include <stdlib.h>",
          "3: #include \"gd.h\"",
          "5: #include \"gdtest.h\"",
          "7: int main()",
          "8: {",
          "9:  gdImagePtr im, exp;",
          "10:  int error = 0;",
          "12:  im = gdImageCreate(50, 50);",
          "14:  if (!im) {",
          "15:   gdTestErrorMsg(\"gdImageCreate failed.\\n\");",
          "16:   return 1;",
          "17:  }",
          "19:  gdImageCropThreshold(im, 1337, 0);",
          "20:  gdImageDestroy(im);",
          "22:  return 0;",
          "23: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bca12e4e11ecda8a0ea719472700ad5c2b36a0d6",
      "candidate_info": {
        "commit_hash": "bca12e4e11ecda8a0ea719472700ad5c2b36a0d6",
        "repo": "libgd/libgd",
        "commit_url": "https://github.com/libgd/libgd/commit/bca12e4e11ecda8a0ea719472700ad5c2b36a0d6",
        "files": [
          "tests/gdimagecrop/Makemodule.am"
        ],
        "message": "fix php 72494, invalid color index not handled, can lead to crash",
        "before_after_code_files": [
          "tests/gdimagecrop/Makemodule.am||tests/gdimagecrop/Makemodule.am"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/gdimagecrop/Makemodule.am||tests/gdimagecrop/Makemodule.am": [
          "File: tests/gdimagecrop/Makemodule.am -> tests/gdimagecrop/Makemodule.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: libgd_test_programs += \\",
          "2:  gdimagecrop/php_bug_72494",
          "4: EXTRA_DIST += \\",
          "5:  gdimagecrop/CMakeLists.txt",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0f9f8f7bd0d3a6c6afd6d180b8e75d93aadddfa",
      "candidate_info": {
        "commit_hash": "a0f9f8f7bd0d3a6c6afd6d180b8e75d93aadddfa",
        "repo": "libgd/libgd",
        "commit_url": "https://github.com/libgd/libgd/commit/a0f9f8f7bd0d3a6c6afd6d180b8e75d93aadddfa",
        "files": [
          "src/gd_crop.c"
        ],
        "message": "fix php 72494, CID 149753, color is unsigned int, remove useless <0 comparison",
        "before_after_code_files": [
          "src/gd_crop.c||src/gd_crop.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/gd_crop.c||src/gd_crop.c"
          ],
          "candidate": [
            "src/gd_crop.c||src/gd_crop.c"
          ]
        }
      },
      "candidate_diff": {
        "src/gd_crop.c||src/gd_crop.c": [
          "File: src/gd_crop.c -> src/gd_crop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:   return NULL;",
          "137:  }",
          "140:   return NULL;",
          "141:  }",
          "",
          "[Removed Lines]",
          "139:  if (color < 0 || (!gdImageTrueColor(im) && color >= gdImageColorsTotal(im))) {",
          "",
          "[Added Lines]",
          "139:  if (!gdImageTrueColor(im) && color >= gdImageColorsTotal(im)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e29a140290a084b0aa590c5edbb596060aa44acb",
      "candidate_info": {
        "commit_hash": "e29a140290a084b0aa590c5edbb596060aa44acb",
        "repo": "libgd/libgd",
        "commit_url": "https://github.com/libgd/libgd/commit/e29a140290a084b0aa590c5edbb596060aa44acb",
        "files": [
          "src/gd_crop.c"
        ],
        "message": "revert, color is unsigned, <0 never happened",
        "before_after_code_files": [
          "src/gd_crop.c||src/gd_crop.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/gd_crop.c||src/gd_crop.c"
          ],
          "candidate": [
            "src/gd_crop.c||src/gd_crop.c"
          ]
        }
      },
      "candidate_diff": {
        "src/gd_crop.c||src/gd_crop.c": [
          "File: src/gd_crop.c -> src/gd_crop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:   return NULL;",
          "137:  }",
          "140:   return NULL;",
          "141:  }",
          "",
          "[Removed Lines]",
          "139:  if ( color < 0 || (!gdImageTrueColor(im) && color >= gdImageColorsTotal(im))) {",
          "",
          "[Added Lines]",
          "139:  if (!gdImageTrueColor(im) && color >= gdImageColorsTotal(im)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7dfd79bbcab3a7f406bf45ca5aa3f2ec3f84c3ac",
      "candidate_info": {
        "commit_hash": "7dfd79bbcab3a7f406bf45ca5aa3f2ec3f84c3ac",
        "repo": "libgd/libgd",
        "commit_url": "https://github.com/libgd/libgd/commit/7dfd79bbcab3a7f406bf45ca5aa3f2ec3f84c3ac",
        "files": [
          "src/gd_crop.c"
        ],
        "message": "improve color check for CropThreshold",
        "before_after_code_files": [
          "src/gd_crop.c||src/gd_crop.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/gd_crop.c||src/gd_crop.c"
          ],
          "candidate": [
            "src/gd_crop.c||src/gd_crop.c"
          ]
        }
      },
      "candidate_diff": {
        "src/gd_crop.c||src/gd_crop.c": [
          "File: src/gd_crop.c -> src/gd_crop.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:   return NULL;",
          "137:  }",
          "140:   return NULL;",
          "141:  }",
          "",
          "[Removed Lines]",
          "139:  if (!gdImageTrueColor(im) && color >= gdImageColorsTotal(im)) {",
          "",
          "[Added Lines]",
          "139:  if ( color < 0 || (!gdImageTrueColor(im) && color >= gdImageColorsTotal(im))) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}