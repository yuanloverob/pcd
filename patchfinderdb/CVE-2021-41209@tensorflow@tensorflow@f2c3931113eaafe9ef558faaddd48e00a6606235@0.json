{
  "cve_id": "CVE-2021-41209",
  "cve_desc": "TensorFlow is an open source platform for machine learning. In affected versions the implementations for convolution operators trigger a division by 0 if passed empty filter tensor arguments. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "f2c3931113eaafe9ef558faaddd48e00a6606235",
  "patch_info": {
    "commit_hash": "f2c3931113eaafe9ef558faaddd48e00a6606235",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235",
    "files": [
      "tensorflow/core/kernels/inplace_ops.cc",
      "tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
    ],
    "message": "Adding more validation checks to _ParallelConcatUpdate to avoid NPE.\n\nPiperOrigin-RevId: 402569467\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec",
    "before_after_code_files": [
      "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc",
      "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc": [
      "File: tensorflow/core/kernels/inplace_ops.cc -> tensorflow/core/kernels/inplace_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "72:   void Compute(OpKernelContext* ctx) override {",
      "73:     auto value = ctx->input(0);",
      "74:     auto update = ctx->input(1);",
      "76:     OP_REQUIRES(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76:     OP_REQUIRES(ctx, value.dims() >= 1,",
      "77:                 errors::InvalidArgument(\"value should be at least rank 1.\"));",
      "78:     OP_REQUIRES(",
      "79:         ctx, value.dim_size(0) > loc_,",
      "80:         errors::InvalidArgument(\"0th dimension of value = \", value.dim_size(0),",
      "81:                                 \" is less than loc_=\", loc_));",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py": [
      "File: tensorflow/python/kernel_tests/array_ops/stack_op_test.py -> tensorflow/python/kernel_tests/array_ops/stack_op_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: import numpy as np",
      "19: from tensorflow.python.eager import context",
      "20: from tensorflow.python.framework import constant_op",
      "21: from tensorflow.python.framework import dtypes",
      "22: from tensorflow.python.framework import ops",
      "23: from tensorflow.python.framework import test_util",
      "24: from tensorflow.python.ops import array_ops",
      "25: from tensorflow.python.ops import gradient_checker_v2",
      "26: from tensorflow.python.platform import test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: from tensorflow.python import tf2",
      "21: from tensorflow.python.eager import def_function",
      "24: from tensorflow.python.framework import errors",
      "28: from tensorflow.python.ops import gen_array_ops",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "69:             c = array_ops.parallel_stack(xs)",
      "70:             self.assertAllEqual(c, data)",
      "72:   def testSimpleParallelGPU(self):",
      "73:     # tf.parallel_stack is only supported in graph mode.",
      "74:     with ops.Graph().as_default():",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76:   def testParallelConcatShapeZero(self):",
      "77:     if not tf2.enabled():",
      "78:       self.skipTest(\"only fails in TF2\")",
      "80:     @def_function.function",
      "81:     def f():",
      "82:       y = gen_array_ops.parallel_concat(values=[[\"tf\"]], shape=0)",
      "83:       return y",
      "85:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
      "86:                                 r\"0th dimension of value .* is less than\"):",
      "87:       f()",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9de11bdc2cf1284b2f635419bd3e6bbc7643eb2c",
      "candidate_info": {
        "commit_hash": "9de11bdc2cf1284b2f635419bd3e6bbc7643eb2c",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/9de11bdc2cf1284b2f635419bd3e6bbc7643eb2c",
        "files": [
          "tensorflow/core/kernels/inplace_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
        ],
        "message": "Adding more validation checks to _ParallelConcatUpdate to avoid NPE.\n\nPiperOrigin-RevId: 402569467\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec",
        "before_after_code_files": [
          "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc": [
          "File: tensorflow/core/kernels/inplace_ops.cc -> tensorflow/core/kernels/inplace_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:   void Compute(OpKernelContext* ctx) override {",
          "74:     auto value = ctx->input(0);",
          "75:     auto update = ctx->input(1);",
          "77:     OP_REQUIRES(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     OP_REQUIRES(ctx, value.dims() >= 1,",
          "78:                 errors::InvalidArgument(\"value should be at least rank 1.\"));",
          "79:     OP_REQUIRES(",
          "80:         ctx, value.dim_size(0) > loc_,",
          "81:         errors::InvalidArgument(\"0th dimension of value = \", value.dim_size(0),",
          "82:                                 \" is less than loc_=\", loc_));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/stack_op_test.py -> tensorflow/python/kernel_tests/array_ops/stack_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.eager import context",
          "24: from tensorflow.python.framework import constant_op",
          "25: from tensorflow.python.framework import dtypes",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import test_util",
          "28: from tensorflow.python.ops import array_ops",
          "29: from tensorflow.python.ops import gradient_checker_v2",
          "30: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from tensorflow.python import tf2",
          "25: from tensorflow.python.eager import def_function",
          "28: from tensorflow.python.framework import errors",
          "32: from tensorflow.python.ops import gen_array_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:             c = array_ops.parallel_stack(xs)",
          "74:             self.assertAllEqual(c, data)",
          "76:   def testSimpleParallelGPU(self):",
          "77:     # tf.parallel_stack is only supported in graph mode.",
          "78:     with ops.Graph().as_default():",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:   def testParallelConcatShapeZero(self):",
          "81:     if not tf2.enabled():",
          "82:       self.skipTest(\"only fails in TF2\")",
          "84:     @def_function.function",
          "85:     def f():",
          "86:       y = gen_array_ops.parallel_concat(values=[[\"tf\"]], shape=0)",
          "87:       return y",
          "89:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "90:                                 r\"0th dimension of value .* is less than\"):",
          "91:       f()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d11f21bbdfa54f3576ae860fc927bf23c675ebc0",
      "candidate_info": {
        "commit_hash": "d11f21bbdfa54f3576ae860fc927bf23c675ebc0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/d11f21bbdfa54f3576ae860fc927bf23c675ebc0",
        "files": [
          "tensorflow/core/kernels/inplace_ops.cc",
          "tensorflow/python/kernel_tests/stack_op_test.py"
        ],
        "message": "Adding more validation checks to _ParallelConcatUpdate to avoid NPE.\n\nPiperOrigin-RevId: 402569467\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec",
        "before_after_code_files": [
          "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc",
          "tensorflow/python/kernel_tests/stack_op_test.py||tensorflow/python/kernel_tests/stack_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc": [
          "File: tensorflow/core/kernels/inplace_ops.cc -> tensorflow/core/kernels/inplace_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:   void Compute(OpKernelContext* ctx) override {",
          "73:     auto value = ctx->input(0);",
          "74:     auto update = ctx->input(1);",
          "76:     OP_REQUIRES(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     OP_REQUIRES(ctx, value.dims() >= 1,",
          "77:                 errors::InvalidArgument(\"value should be at least rank 1.\"));",
          "78:     OP_REQUIRES(",
          "79:         ctx, value.dim_size(0) > loc_,",
          "80:         errors::InvalidArgument(\"0th dimension of value = \", value.dim_size(0),",
          "81:                                 \" is less than loc_=\", loc_));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/stack_op_test.py||tensorflow/python/kernel_tests/stack_op_test.py": [
          "File: tensorflow/python/kernel_tests/stack_op_test.py -> tensorflow/python/kernel_tests/stack_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.framework import constant_op",
          "24: from tensorflow.python.framework import dtypes",
          "25: from tensorflow.python.framework import errors_impl",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import test_util",
          "28: from tensorflow.python.ops import array_ops",
          "29: from tensorflow.python.ops import gradient_checker",
          "30: from tensorflow.python.ops import variables",
          "31: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from tensorflow.python import tf2",
          "24: from tensorflow.python.eager import def_function",
          "27: from tensorflow.python.framework import errors",
          "32: from tensorflow.python.ops import gen_array_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:           c = array_ops.parallel_stack(xs)",
          "76:           self.assertAllEqual(c, data)",
          "78:   @test_util.run_deprecated_v1",
          "79:   def testSimpleParallelGPU(self):",
          "80:     np.random.seed(7)",
          "81:     with self.session(use_gpu=True):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82: <<<<<<< HEAD:tensorflow/python/kernel_tests/stack_op_test.py",
          "84: =======",
          "85:   def testParallelConcatShapeZero(self):",
          "86:     if not tf2.enabled():",
          "87:       self.skipTest(\"only fails in TF2\")",
          "89:     @def_function.function",
          "90:     def f():",
          "91:       y = gen_array_ops.parallel_concat(values=[[\"tf\"]], shape=0)",
          "92:       return y",
          "94:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "95:                                 r\"0th dimension of value .* is less than\"):",
          "96:       f()",
          "98: >>>>>>> e67caccea81 (Adding more validation checks to _ParallelConcatUpdate to avoid NPE.):tensorflow/python/kernel_tests/array_ops/stack_op_test.py",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e67caccea81167402c62977b5c521f2a8b261d6a",
      "candidate_info": {
        "commit_hash": "e67caccea81167402c62977b5c521f2a8b261d6a",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/e67caccea81167402c62977b5c521f2a8b261d6a",
        "files": [
          "tensorflow/core/kernels/inplace_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
        ],
        "message": "Adding more validation checks to _ParallelConcatUpdate to avoid NPE.\n\nPiperOrigin-RevId: 402569467\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec",
        "before_after_code_files": [
          "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc": [
          "File: tensorflow/core/kernels/inplace_ops.cc -> tensorflow/core/kernels/inplace_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:   void Compute(OpKernelContext* ctx) override {",
          "73:     auto value = ctx->input(0);",
          "74:     auto update = ctx->input(1);",
          "76:     OP_REQUIRES(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     OP_REQUIRES(ctx, value.dims() >= 1,",
          "77:                 errors::InvalidArgument(\"value should be at least rank 1.\"));",
          "78:     OP_REQUIRES(",
          "79:         ctx, value.dim_size(0) > loc_,",
          "80:         errors::InvalidArgument(\"0th dimension of value = \", value.dim_size(0),",
          "81:                                 \" is less than loc_=\", loc_));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/stack_op_test.py -> tensorflow/python/kernel_tests/array_ops/stack_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.framework import constant_op",
          "24: from tensorflow.python.framework import dtypes",
          "25: from tensorflow.python.framework import errors_impl",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import test_util",
          "28: from tensorflow.python.ops import array_ops",
          "29: from tensorflow.python.ops import gradient_checker",
          "30: from tensorflow.python.ops import variables",
          "31: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from tensorflow.python import tf2",
          "24: from tensorflow.python.eager import def_function",
          "27: from tensorflow.python.framework import errors",
          "32: from tensorflow.python.ops import gen_array_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:             c = array_ops.parallel_stack(xs)",
          "77:             self.assertAllEqual(c, data)",
          "79:   def testSimpleParallelGPU(self):",
          "80:     # tf.parallel_stack is only supported in graph mode.",
          "81:     with ops.Graph().as_default():",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:   def testParallelConcatShapeZero(self):",
          "84:     if not tf2.enabled():",
          "85:       self.skipTest(\"only fails in TF2\")",
          "87:     @def_function.function",
          "88:     def f():",
          "89:       y = gen_array_ops.parallel_concat(values=[[\"tf\"]], shape=0)",
          "90:       return y",
          "92:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "93:                                 r\"0th dimension of value .* is less than\"):",
          "94:       f()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fe4d6c47190adc3a0be5add6d6f4961e43bf981f",
      "candidate_info": {
        "commit_hash": "fe4d6c47190adc3a0be5add6d6f4961e43bf981f",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/fe4d6c47190adc3a0be5add6d6f4961e43bf981f",
        "files": [
          "tensorflow/core/kernels/inplace_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
        ],
        "message": "Adding more validation checks to _ParallelConcatUpdate to avoid NPE.\n\nPiperOrigin-RevId: 402569467\nChange-Id: I2db122dab68be2a5e4e8dd3375f5a70c4d2307ec",
        "before_after_code_files": [
          "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/inplace_ops.cc||tensorflow/core/kernels/inplace_ops.cc": [
          "File: tensorflow/core/kernels/inplace_ops.cc -> tensorflow/core/kernels/inplace_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:   void Compute(OpKernelContext* ctx) override {",
          "73:     auto value = ctx->input(0);",
          "74:     auto update = ctx->input(1);",
          "76:     OP_REQUIRES(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     OP_REQUIRES(ctx, value.dims() >= 1,",
          "77:                 errors::InvalidArgument(\"value should be at least rank 1.\"));",
          "78:     OP_REQUIRES(",
          "79:         ctx, value.dim_size(0) > loc_,",
          "80:         errors::InvalidArgument(\"0th dimension of value = \", value.dim_size(0),",
          "81:                                 \" is less than loc_=\", loc_));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/stack_op_test.py||tensorflow/python/kernel_tests/array_ops/stack_op_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/stack_op_test.py -> tensorflow/python/kernel_tests/array_ops/stack_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import numpy as np",
          "23: from tensorflow.python.eager import context",
          "24: from tensorflow.python.framework import constant_op",
          "25: from tensorflow.python.framework import dtypes",
          "26: from tensorflow.python.framework import ops",
          "27: from tensorflow.python.framework import test_util",
          "28: from tensorflow.python.ops import array_ops",
          "29: from tensorflow.python.ops import gradient_checker_v2",
          "30: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: from tensorflow.python import tf2",
          "25: from tensorflow.python.eager import def_function",
          "28: from tensorflow.python.framework import errors",
          "32: from tensorflow.python.ops import gen_array_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:             c = array_ops.parallel_stack(xs)",
          "74:             self.assertAllEqual(c, data)",
          "76:   def testSimpleParallelGPU(self):",
          "77:     # tf.parallel_stack is only supported in graph mode.",
          "78:     with ops.Graph().as_default():",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:   def testParallelConcatShapeZero(self):",
          "81:     if not tf2.enabled():",
          "82:       self.skipTest(\"only fails in TF2\")",
          "84:     @def_function.function",
          "85:     def f():",
          "86:       y = gen_array_ops.parallel_concat(values=[[\"tf\"]], shape=0)",
          "87:       return y",
          "89:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "90:                                 r\"0th dimension of value .* is less than\"):",
          "91:       f()",
          "",
          "---------------"
        ]
      }
    }
  ]
}