{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3f3f2c73575ea8ae9a46ea30b3af6dfc342cd6c9",
      "candidate_info": {
        "commit_hash": "3f3f2c73575ea8ae9a46ea30b3af6dfc342cd6c9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3f3f2c73575ea8ae9a46ea30b3af6dfc342cd6c9",
        "files": [
          "ext/fts5/fts5_main.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Ensure that the idxStr for FTS5 is always zero-terminated. Fix for check-in [e6db945454a0dae2]\n\nFossilOrigin-Name: 090cd07d37904da4610d6a6787a3cc825c9a8bdcc5f051267d4608bba9b49d03",
        "before_after_code_files": [
          "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c": [
          "File: ext/fts5/fts5_main.c -> ext/fts5/fts5_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "569:         pInfo->estimatedCost = 1e50;",
          "570:         return SQLITE_OK;",
          "571:       }else{",
          "572:         if( iCol==nCol+1 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:         assert( iIdxStr < pInfo->nConstraint*6 + 1 );",
          "571:         idxStr[iIdxStr] = 0;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a8927d14f88c44828e794787bab080455ab62705c93f65ce7d8db83478aa5a8e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fe03dac236fb191c03bef60c30abbfa35e648e4c",
      "candidate_info": {
        "commit_hash": "fe03dac236fb191c03bef60c30abbfa35e648e4c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fe03dac236fb191c03bef60c30abbfa35e648e4c",
        "files": [
          "Makefile.in",
          "Makefile.msc",
          "manifest",
          "manifest.uuid",
          "tool/lemon.c"
        ],
        "message": "Add the new -S option to the lemon parser generator to cause it to output SQL that describes the input grammar.\n\nFossilOrigin-Name: 4dbd398d640852d4a696d68c72ee039968023d402a8053b5e6b4ef1d75e982a8",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "Makefile.msc||Makefile.msc",
          "manifest.uuid||manifest.uuid",
          "tool/lemon.c||tool/lemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1053: parse.c: $(TOP)/src/parse.y lemon$(BEXE)",
          "1054:  cp $(TOP)/src/parse.y .",
          "1057: sqlite3.h: $(TOP)/src/sqlite.h.in $(TOP)/manifest mksourceid$(BEXE) $(TOP)/VERSION",
          "1058:  $(TCLSH_CMD) $(TOP)/tool/mksqlite3h.tcl $(TOP) >sqlite3.h",
          "",
          "[Removed Lines]",
          "1055:  ./lemon$(BEXE) $(OPT_FEATURE_FLAGS) $(OPTS) parse.y",
          "",
          "[Added Lines]",
          "1055:  ./lemon$(BEXE) $(OPT_FEATURE_FLAGS) $(OPTS) -S parse.y",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1180: fts5parse.c: $(TOP)/ext/fts5/fts5parse.y lemon",
          "1181:  cp $(TOP)/ext/fts5/fts5parse.y .",
          "1182:  rm -f fts5parse.h",
          "1185: fts5parse.h: fts5parse.c",
          "",
          "[Removed Lines]",
          "1183:  ./lemon$(BEXE) $(OPTS) fts5parse.y",
          "",
          "[Added Lines]",
          "1183:  ./lemon$(BEXE) $(OPTS) -S fts5parse.y",
          "",
          "---------------"
        ],
        "Makefile.msc||Makefile.msc": [
          "File: Makefile.msc -> Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2141: parse.c: $(TOP)\\src\\parse.y lemon.exe",
          "2142:  del /Q parse.y parse.h parse.h.temp 2>NUL",
          "2143:  copy $(TOP)\\src\\parse.y .",
          "2146: $(SQLITE3H): $(TOP)\\src\\sqlite.h.in $(TOP)\\manifest mksourceid.exe $(TOP)\\VERSION",
          "2147:  $(TCLSH_CMD) $(TOP)\\tool\\mksqlite3h.tcl $(TOP:\\=/) > $(SQLITE3H) $(MKSQLITE3H_ARGS)",
          "",
          "[Removed Lines]",
          "2144:  .\\lemon.exe $(REQ_FEATURE_FLAGS) $(OPT_FEATURE_FLAGS) $(EXT_FEATURE_FLAGS) $(OPTS) parse.y",
          "",
          "[Added Lines]",
          "2144:  .\\lemon.exe $(REQ_FEATURE_FLAGS) $(OPT_FEATURE_FLAGS) $(EXT_FEATURE_FLAGS) $(OPTS) -S parse.y",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2301: fts5parse.c: $(TOP)\\ext\\fts5\\fts5parse.y lemon.exe",
          "2302:  copy $(TOP)\\ext\\fts5\\fts5parse.y .",
          "2303:  del /Q fts5parse.h 2>NUL",
          "2306: fts5parse.h: fts5parse.c",
          "",
          "[Removed Lines]",
          "2304:  .\\lemon.exe $(REQ_FEATURE_FLAGS) $(OPT_FEATURE_FLAGS) $(EXT_FEATURE_FLAGS) $(OPTS) fts5parse.y",
          "",
          "[Added Lines]",
          "2304:  .\\lemon.exe $(REQ_FEATURE_FLAGS) $(OPT_FEATURE_FLAGS) $(EXT_FEATURE_FLAGS) $(OPTS) -S fts5parse.y",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5d9a369301a65f320a0696fcf1f062ca5976ef34350590c07aecf5335c66d872",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/lemon.c||tool/lemon.c": [
          "File: tool/lemon.c -> tool/lemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "219: void Reprint(struct lemon *);",
          "220: void ReportOutput(struct lemon *);",
          "222: void ReportHeader(struct lemon *);",
          "223: void CompressTables(struct lemon *);",
          "224: void ResortStates(struct lemon *);",
          "",
          "[Removed Lines]",
          "221: void ReportTable(struct lemon *, int);",
          "",
          "[Added Lines]",
          "221: void ReportTable(struct lemon *, int, int);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1632:   static int mhflag = 0;",
          "1633:   static int nolinenosflag = 0;",
          "1634:   static int noResort = 0;",
          "1636:   static struct s_options options[] = {",
          "1637:     {OPT_FLAG, \"b\", (char*)&basisflag, \"Print only the basis in report.\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1635:   static int sqlFlag = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1650:     {OPT_FLAG, \"r\", (char*)&noResort, \"Do not sort or renumber states\"},",
          "1651:     {OPT_FLAG, \"s\", (char*)&statistics,",
          "1652:                                    \"Print parser stats to standard output.\"},",
          "1653:     {OPT_FLAG, \"x\", (char*)&version, \"Print the version number.\"},",
          "1654:     {OPT_FSTR, \"T\", (char*)handle_T_option, \"Specify a template file.\"},",
          "1655:     {OPT_FSTR, \"W\", 0, \"Ignored.  (Placeholder for '-W' compiler options.)\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1654:     {OPT_FLAG, \"S\", (char*)&sqlFlag,",
          "1655:                     \"Generate the *.sql file describing the parser tables.\"},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1758:     if( !quiet ) ReportOutput(&lem);",
          "",
          "[Removed Lines]",
          "1761:     ReportTable(&lem, mhflag);",
          "",
          "[Added Lines]",
          "1764:     ReportTable(&lem, mhflag, sqlFlag);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4144: void ReportTable(",
          "4145:   struct lemon *lemp,",
          "4147: ){",
          "4149:   char line[LINESIZE];",
          "4150:   int  lineno;",
          "4151:   struct state *stp;",
          "",
          "[Removed Lines]",
          "4148:   FILE *out, *in;",
          "",
          "[Added Lines]",
          "4152:   FILE *out, *in, *sql;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4175:     fclose(in);",
          "4176:     return;",
          "4177:   }",
          "4178:   lineno = 1;",
          "4179:   tplt_xfer(lemp->name,in,out,&lineno);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4182:   if( sqlFlag==0 ){",
          "4183:     sql = 0;",
          "4184:   }else{",
          "4185:     sql = file_open(lemp, \".sql\", \"wb\");",
          "4186:     if( sql==0 ){",
          "4187:       fclose(in);",
          "4188:       fclose(out);",
          "4189:       return;",
          "4190:     }",
          "4191:     fprintf(sql,",
          "4192:        \"CREATE TABLE symbol(\\n\"",
          "4193:        \"  id INTEGER PRIMARY KEY,\\n\"",
          "4194:        \"  name TEXT NOT NULL,\\n\"",
          "4195:        \"  isTerminal BOOLEAN NOT NULL,\\n\"",
          "4196:        \"  fallback INTEGER REFERENCES symbol\\n\"",
          "4197:        \");\\n\"",
          "4198:     );",
          "4199:     for(i=0; i<lemp->nsymbol; i++){",
          "4200:       fprintf(sql,",
          "4201:          \"INSERT INTO symbol(id,name,isTerminal,fallback)\"",
          "4202:          \"VALUES(%d,'%s',%s\",",
          "4203:          i, lemp->symbols[i]->name,",
          "4204:          i<lemp->nterminal ? \"TRUE\" : \"FALSE\"",
          "4205:       );",
          "4206:       if( lemp->symbols[i]->fallback ){",
          "4207:         fprintf(sql, \",%d);\\n\", lemp->symbols[i]->fallback->index);",
          "4208:       }else{",
          "4209:         fprintf(sql, \",NULL);\\n\");",
          "4210:       }",
          "4211:     }",
          "4212:     fprintf(sql,",
          "4213:       \"CREATE TABLE rule(\\n\"",
          "4214:       \"  ruleid INTEGER PRIMARY KEY,\\n\"",
          "4215:       \"  lhs INTEGER REFERENCES symbol(id)\\n\"",
          "4216:       \");\\n\"",
          "4217:       \"CREATE TABLE rulerhs(\\n\"",
          "4218:       \"  ruleid INTEGER REFERENCES rule(ruleid),\\n\"",
          "4219:       \"  pos INTEGER,\\n\"",
          "4220:       \"  sym INTEGER REFERENCES symbol(id)\\n\"",
          "4221:       \");\\n\"",
          "4222:     );",
          "4223:     for(i=0, rp=lemp->rule; rp; rp=rp->next, i++){",
          "4224:       assert( i==rp->iRule );",
          "4225:       fprintf(sql,",
          "4226:         \"INSERT INTO rule(ruleid,lhs)VALUES(%d,%d);\\n\",",
          "4227:         rp->iRule, rp->lhs->index",
          "4228:       );",
          "4229:       for(j=0; j<rp->nrhs; j++){",
          "4230:         struct symbol *sp = rp->rhs[j];",
          "4231:         if( sp->type!=MULTITERMINAL ){",
          "4232:           fprintf(sql,",
          "4233:             \"INSERT INTO rulerhs(ruleid,pos,sym)VALUES(%d,%d,%d);\\n\",",
          "4234:             i,j,sp->index",
          "4235:           );",
          "4236:         }else{",
          "4237:           int k;",
          "4238:           for(k=0; k<sp->nsubsym; k++){",
          "4239:             fprintf(sql,",
          "4240:               \"INSERT INTO rulerhs(ruleid,pos,sym)VALUES(%d,%d,%d);\\n\",",
          "4241:               i,j,sp->subsym[k]->index",
          "4242:             );",
          "4243:           }",
          "4244:         }",
          "4245:       }",
          "4246:     }",
          "4247:   }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4697:   acttab_free(pActtab);",
          "4698:   fclose(in);",
          "4699:   fclose(out);",
          "4700:   return;",
          "4701: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4770:   if( sql ) fclose(sql);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ba03ea15aa0adee1cce6eb4ffe4df8046cb3271",
      "candidate_info": {
        "commit_hash": "7ba03ea15aa0adee1cce6eb4ffe4df8046cb3271",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7ba03ea15aa0adee1cce6eb4ffe4df8046cb3271",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/printf.c"
        ],
        "message": "Slight adjustment to the printf formatter large memory allocation detector so that it does not overestimate the amount of space needed for oversize %d conversions.\n\nFossilOrigin-Name: 1aee70d6de8a9b17ebb74a7cb1dad65139cde1b615dcce4d15d3a476fda8676b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/printf.c||src/printf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 179e5d46054e5c86f53a79b7a0823d9a383da8391ad1d3c3b22645927a1e052b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/printf.c||src/printf.c": [
          "File: src/printf.c -> src/printf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "442:           nOut = etBUFSIZE;",
          "443:           zOut = buf;",
          "444:         }else{",
          "446:           zOut = zExtra = printfTempBuf(pAccum, n);",
          "447:           if( zOut==0 ) return;",
          "448:           nOut = (int)n;",
          "",
          "[Removed Lines]",
          "445:           u64 n = (u64)precision + 10 + precision/3;",
          "",
          "[Added Lines]",
          "445:           u64 n;",
          "446:           n = (u64)precision + 10;",
          "447:           if( cThousand ) n += precision/3;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e551b5147289167db2b014e8ec28fc7ea2454fc4",
      "candidate_info": {
        "commit_hash": "e551b5147289167db2b014e8ec28fc7ea2454fc4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e551b5147289167db2b014e8ec28fc7ea2454fc4",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix a typo in the CLI help output for the \".dump\" command.\n\nFossilOrigin-Name: 57638248de147efe8d663b3ae1389f590c7b2b7225ecfe295699d68c2893cd09",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2bda9dc41c07092ae37d0c6001c1271e0622bfff7151201fc2bb4c95422c087b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3489:   \"   Options:\",",
          "3490:   \"     --preserve-rowids      Include ROWID values in the output\",",
          "3491:   \"     --newlines             Allow unescaped newline characters in output\",",
          "3493:   \".echo on|off             Turn command echo on or off\",",
          "3494:   \".eqp on|off|full|...     Enable or disable automatic EXPLAIN QUERY PLAN\",",
          "3495:   \"   Other Modes:\",",
          "",
          "[Removed Lines]",
          "3492:   \"   TABLE is LIKE pattern for the tables to dump\",",
          "",
          "[Added Lines]",
          "3492:   \"   TABLE is a LIKE pattern for the tables to dump\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b1af9c603c70535a61b5785a4b29ce9cecc8f78d",
      "candidate_info": {
        "commit_hash": "b1af9c603c70535a61b5785a4b29ce9cecc8f78d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b1af9c603c70535a61b5785a4b29ce9cecc8f78d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Progress handler improvements: (1) Invoke the callback after OP_Program opcodes (2) Invoke the callback multiple times in a row to catch up after a long run of no progress checks.\n\nFossilOrigin-Name: 0c5db18d79366d9c23925ce3ed835500311f32a10aa7dbfdd09148b1e8a2507b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fa792714ae62fa980f1767acc6d622a6727ceb677870243c88548423795dcb5b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "823:     assert( db->nProgressOps!=0 );",
          "825:     if( db->xProgress(db->pProgressArg) ){",
          "826:       nProgressLimit = 0xffffffff;",
          "827:       rc = SQLITE_INTERRUPT;",
          "",
          "[Removed Lines]",
          "822:   if( nVmStep>=nProgressLimit && db->xProgress!=0 ){",
          "824:     nProgressLimit = nVmStep + db->nProgressOps - (nVmStep%db->nProgressOps);",
          "",
          "[Added Lines]",
          "822:   while( nVmStep>=nProgressLimit && db->xProgress!=0 ){",
          "824:     nProgressLimit += db->nProgressOps;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6174:   }",
          "6175: #endif",
          "6176:   pOp = &aOp[-1];",
          "6179: }",
          "",
          "[Removed Lines]",
          "6178:   break;",
          "",
          "[Added Lines]",
          "6177:   goto check_for_interrupt;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7586: vdbe_return:",
          "7587: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "7589:     if( db->xProgress(db->pProgressArg) ){",
          "7590:       nProgressLimit = 0xffffffff;",
          "7591:       rc = SQLITE_INTERRUPT;",
          "",
          "[Removed Lines]",
          "7588:   if( nVmStep>=nProgressLimit && db->xProgress!=0 ){",
          "",
          "[Added Lines]",
          "7587:   while( nVmStep>=nProgressLimit && db->xProgress!=0 ){",
          "7588:     nProgressLimit += db->nProgressOps;",
          "",
          "---------------"
        ]
      }
    }
  ]
}