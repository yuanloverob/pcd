{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "602edc0c11bc1f40cadee87c5df2ade81ef44d2c",
      "candidate_info": {
        "commit_hash": "602edc0c11bc1f40cadee87c5df2ade81ef44d2c",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/602edc0c11bc1f40cadee87c5df2ade81ef44d2c",
        "files": [
          "ChangeLog",
          "test/ruby/test_module.rb",
          "version.h",
          "vm_eval.c"
        ],
        "message": "merge revision(s) 49867: [Backport #10847] [Backport #10970]\n\n\t* vm_eval.c (vm_call_super): search next super class from the\n\t  original class, to get rid of infinite recursion with\n\t  prepending.  a patch by Seiei Higa <hanachin AT gmail.com> at\n\t  [ruby-core:68434].  [ruby-core:68093] [Bug #10847]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50284 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_module.rb||test/ruby/test_module.rb",
          "version.h||version.h",
          "vm_eval.c||vm_eval.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_module.rb||test/ruby/test_module.rb": [
          "File: test/ruby/test_module.rb -> test/ruby/test_module.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1708:     assert_equal('hello!', foo.new.hello, bug9236)",
          "1709:   end",
          "1711:   def test_class_variables",
          "1712:     m = Module.new",
          "1713:     m.class_variable_set(:@@foo, 1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1711:   def test_prepend_call_super",
          "1712:     assert_separately([], <<-'end;') #do",
          "1713:       bug10847 = '[ruby-core:68093] [Bug #10847]'",
          "1714:       module M; end",
          "1715:       Float.prepend M",
          "1716:       assert_nothing_raised(SystemStackError, bug10847) do",
          "1717:         0.3.numerator",
          "1718:       end",
          "1719:     end;",
          "1720:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-04-13\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 4",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 330",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 331",
          "",
          "---------------"
        ],
        "vm_eval.c||vm_eval.c": [
          "File: vm_eval.c -> vm_eval.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "260:  rb_bug(\"vm_call_super: should not be reached\");",
          "261:     }",
          "264:     id = cfp->me->def->original_id;",
          "265:     me = rb_method_entry(klass, id, &klass);",
          "266:     if (!me) {",
          "",
          "[Removed Lines]",
          "263:     klass = RCLASS_SUPER(cfp->klass);",
          "",
          "[Added Lines]",
          "263:     klass = RCLASS_ORIGIN(cfp->klass);",
          "264:     klass = RCLASS_SUPER(klass);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d3cd7b4813dcaf4022d8d70b8dd9f2bd17812d56",
      "candidate_info": {
        "commit_hash": "d3cd7b4813dcaf4022d8d70b8dd9f2bd17812d56",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/d3cd7b4813dcaf4022d8d70b8dd9f2bd17812d56",
        "files": [
          ".travis.yml",
          "ChangeLog",
          "ext/openssl/lib/openssl/ssl.rb",
          "test/openssl/test_ssl.rb",
          "test/openssl/utils.rb",
          "version.h"
        ],
        "message": "merge revision(s) 51409,51453: [Backport #10910]\n\n\t* ext/openssl/lib/openssl/ssl.rb (module OpenSSL): raise a more\n\t  helpful exception when verifying the peer connection and an\n\t  anonymous cipher has been selected. [ruby-core:68330] [Bug #10910]\n\t  Thanks to Chris Sinjakli <chris@sinjakli.co.uk> for the patch.\n\n\t* test/openssl/test_ssl.rb (class OpenSSL): test for change\n\n\t* .travis.yml: update libssl before running tests. \n\t  Thanks to Chris Sinjakli <chris@sinjakli.co.uk> for figuring out the\n\t  travis settings!\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51608 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/openssl/lib/openssl/ssl.rb||ext/openssl/lib/openssl/ssl.rb",
          "test/openssl/test_ssl.rb||test/openssl/test_ssl.rb",
          "test/openssl/utils.rb||test/openssl/utils.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/openssl/lib/openssl/ssl.rb||ext/openssl/lib/openssl/ssl.rb": [
          "File: ext/openssl/lib/openssl/ssl.rb -> ext/openssl/lib/openssl/ssl.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:       # This method MUST be called after calling #connect to ensure that the",
          "229:       # hostname of a remote peer has been verified.",
          "230:       def post_connection_check(hostname)",
          "231:         unless OpenSSL::SSL.verify_certificate_identity(peer_cert, hostname)",
          "232:           raise SSLError, \"hostname \\\"#{hostname}\\\" does not match the server certificate\"",
          "233:         end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:         if peer_cert.nil?",
          "232:           msg = \"Peer verification enabled, but no certificate received.\"",
          "233:           if using_anon_cipher?",
          "234:             msg += \" Anonymous cipher suite #{cipher[0]} was negotiated. Anonymous suites must be disabled to use peer verification.\"",
          "235:           end",
          "236:           raise SSLError, msg",
          "237:         end",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "239:       rescue SSL::Session::SessionError",
          "240:         nil",
          "241:       end",
          "242:     end",
          "244:     ##",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251:       private",
          "253:       def using_anon_cipher?",
          "254:         ctx = OpenSSL::SSL::SSLContext.new",
          "255:         ctx.ciphers = \"aNULL\"",
          "256:         ctx.ciphers.include?(cipher)",
          "257:       end",
          "",
          "---------------"
        ],
        "test/openssl/test_ssl.rb||test/openssl/test_ssl.rb": [
          "File: test/openssl/test_ssl.rb -> test/openssl/test_ssl.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "284:     }",
          "285:   end",
          "287:   def test_post_connection_check",
          "288:     sslerr = OpenSSL::SSL::SSLError",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "287:   def test_post_connect_check_with_anon_ciphers",
          "288:     sslerr = OpenSSL::SSL::SSLError",
          "290:     start_server(PORT, OpenSSL::SSL::VERIFY_NONE, true, {use_anon_cipher: true}){|server, port|",
          "291:       ctx = OpenSSL::SSL::SSLContext.new",
          "292:       ctx.ciphers = \"aNULL\"",
          "293:       server_connect(port, ctx) { |ssl|",
          "294:         msg = \"Peer verification enabled, but no certificate received. Anonymous cipher suite \" \\",
          "295:           \"ADH-AES256-GCM-SHA384 was negotiated. Anonymous suites must be disabled to use peer verification.\"",
          "296:         assert_raise_with_message(sslerr,msg){ssl.post_connection_check(\"localhost.localdomain\")}",
          "297:       }",
          "298:     }",
          "299:   end",
          "",
          "---------------"
        ],
        "test/openssl/utils.rb||test/openssl/utils.rb": [
          "File: test/openssl/utils.rb -> test/openssl/utils.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "260:     def start_server(port0, verify_mode, start_immediately, args = {}, &block)",
          "261:       ctx_proc = args[:ctx_proc]",
          "262:       server_proc = args[:server_proc]",
          "263:       server_proc ||= method(:readwrite_loop)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "262:       use_anon_cipher = args.fetch(:use_anon_cipher, false)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "266:       store.add_cert(@ca_cert)",
          "267:       store.purpose = OpenSSL::X509::PURPOSE_SSL_CLIENT",
          "268:       ctx = OpenSSL::SSL::SSLContext.new",
          "269:       ctx.cert_store = store",
          "270:       #ctx.extra_chain_cert = [ ca_cert ]",
          "271:       ctx.cert = @svr_cert",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "270:       ctx.ciphers = \"ADH-AES256-GCM-SHA384\" if use_anon_cipher",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-08-17\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 8",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 390",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 391",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c839def7cc34f858777b15d2d84cb45b585d9699",
      "candidate_info": {
        "commit_hash": "c839def7cc34f858777b15d2d84cb45b585d9699",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/c839def7cc34f858777b15d2d84cb45b585d9699",
        "files": [
          "ChangeLog",
          "test/ruby/test_refinement.rb",
          "version.h",
          "vm_method.c"
        ],
        "message": "merge revision(s) r49182,r49183: [Backport #10706]\n\n\tvm_method.c: fix change refined new method visibility\n\t* vm_method.c (rb_export_method): bail out if the original method\n\t  is undefined when the method is refined.\n\t  [ruby-core:67387] [Bug #10706]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49786 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_refinement.rb||test/ruby/test_refinement.rb",
          "version.h||version.h",
          "vm_method.c||vm_method.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_refinement.rb||test/ruby/test_refinement.rb": [
          "File: test/ruby/test_refinement.rb -> test/ruby/test_refinement.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1167:     end;",
          "1168:   end",
          "1170:   private",
          "1172:   def eval_using(mod, s)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1170:   def test_change_refined_new_method_visibility",
          "1171:     assert_separately([], <<-\"end;\")",
          "1172:     bug10706 = '[ruby-core:67387] [Bug #10706]'",
          "1173:     module RefinementBug",
          "1174:       refine Object do",
          "1175:         def foo",
          "1176:         end",
          "1177:       end",
          "1178:     end",
          "1180:     assert_raise(NameError, bug10706) {private(:foo)}",
          "1181:     end;",
          "1182:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-03-01\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 303",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 304",
          "",
          "---------------"
        ],
        "vm_method.c||vm_method.c": [
          "File: vm_method.c -> vm_method.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "811:  me = search_method(rb_cObject, name, &defined_class);",
          "812:     }",
          "815:  rb_print_undef(klass, name, 0);",
          "816:     }",
          "",
          "[Removed Lines]",
          "814:     if (UNDEFINED_METHOD_ENTRY_P(me)) {",
          "",
          "[Added Lines]",
          "814:     if (UNDEFINED_METHOD_ENTRY_P(me) ||",
          "815:  (me->def->type == VM_METHOD_TYPE_REFINED &&",
          "816:   UNDEFINED_METHOD_ENTRY_P(me->def->body.orig_me))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "abe1b00d16837ce5a1fc25167cb91489dac26bb2",
      "candidate_info": {
        "commit_hash": "abe1b00d16837ce5a1fc25167cb91489dac26bb2",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/abe1b00d16837ce5a1fc25167cb91489dac26bb2",
        "files": [
          "ChangeLog",
          "lib/xmlrpc/client.rb",
          "test/xmlrpc/test_client.rb",
          "version.h"
        ],
        "message": "merge revision(s) 53318: [Backport #11489]\n\n\t* lib/xmlrpc/client.rb: Support SSL options in async methods of\n\t  XMLRPC::Client.\n\t  [Bug #11489]\n\t  Reported by Aleksandar Kostadinov. Thanks!!!\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53935 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/xmlrpc/client.rb||lixmlrpc/client.rb",
          "test/xmlrpc/test_client.rb||test/xmlrpc/test_client.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/xmlrpc/client.rb||lixmlrpc/client.rb": [
          "File: lib/xmlrpc/client.rb -> lixmlrpc/client.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "432:       Net::HTTP.new host, port, proxy_host, proxy_port",
          "433:     end",
          "435:     def set_auth",
          "436:       if @user.nil?",
          "437:         @auth = nil",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "464:       if async",
          "465:         # use a new HTTP object for each call",
          "471:         # post request",
          "472:         http.start {",
          "",
          "[Removed Lines]",
          "466:         http = net_http(@host, @port, @proxy_host, @proxy_port)",
          "467:         http.use_ssl = @use_ssl if @use_ssl",
          "468:         http.read_timeout = @timeout",
          "469:         http.open_timeout = @timeout",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/xmlrpc/test_client.rb||test/xmlrpc/test_client.rb": [
          "File: test/xmlrpc/test_client.rb -> test/xmlrpc/test_client.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: module XMLRPC",
          "10:   class ClientTest < MiniTest::Unit::TestCase",
          "11:     module Fake",
          "15:         def initialize responses = {}",
          "16:           @started = false",
          "17:           @responses = responses",
          "18:         end",
          "",
          "[Removed Lines]",
          "12:       class HTTP",
          "13:         attr_accessor :read_timeout, :open_timeout, :use_ssl",
          "",
          "[Added Lines]",
          "12:       class HTTP < Net::HTTP",
          "13:         class << self",
          "14:           def new(*args, &block)",
          "15:             Class.method(:new).unbind.bind(self).call(*args, &block)",
          "16:           end",
          "17:         end",
          "20:           super(\"127.0.0.1\")",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-02-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 453",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 454",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cfdb3f5c264ebf1dde0845015b567b2aded894de",
      "candidate_info": {
        "commit_hash": "cfdb3f5c264ebf1dde0845015b567b2aded894de",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/cfdb3f5c264ebf1dde0845015b567b2aded894de",
        "files": [
          "ChangeLog",
          "ext/stringio/stringio.c",
          "test/stringio/test_stringio.rb",
          "version.h"
        ],
        "message": "merge revision(s) 53435: [Backport #11945]\n\n\t* ext/stringio/stringio.c (strio_binmode): implement to set encoding\n\n\t* test/stringio/test_stringio.rb (test_binmode): new test\n\t  [ruby-core:72699] [Bug #11945]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53927 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/stringio/stringio.c||ext/stringio/stringio.c",
          "test/stringio/test_stringio.rb||test/stringio/test_stringio.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/stringio/stringio.c||ext/stringio/stringio.c": [
          "File: ext/stringio/stringio.c -> ext/stringio/stringio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "497:     return lineno;",
          "498: }",
          "502: #define strio_fcntl strio_unimpl",
          "",
          "[Removed Lines]",
          "500: #define strio_binmode strio_self",
          "",
          "[Added Lines]",
          "500: static VALUE",
          "501: strio_binmode(VALUE self)",
          "502: {",
          "503:     struct StringIO *ptr = StringIO(self);",
          "504:     rb_encoding *enc = rb_ascii8bit_encoding();",
          "506:     if (WRITABLE(self)) {",
          "507:  rb_enc_associate(ptr->string, enc);",
          "508:     }",
          "509:     return self;",
          "510: }",
          "",
          "---------------"
        ],
        "test/stringio/test_stringio.rb||test/stringio/test_stringio.rb": [
          "File: test/stringio/test_stringio.rb -> test/stringio/test_stringio.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "586:     assert_raise(ArgumentError, \"[ruby-dev:43392]\") { StringIO.new.each_line(0){} }",
          "587:     assert_raise(ArgumentError, \"[ruby-dev:43392]\") { StringIO.new.each_line(\"a\",0){} }",
          "588:   end",
          "589: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "590:   def test_binmode",
          "591:     s = StringIO.new",
          "592:     s.set_encoding('utf-8')",
          "593:     assert_same s, s.binmode",
          "595:     bug_11945 = '[ruby-core:72699] [Bug #11945]'",
          "596:     assert_equal Encoding::ASCII_8BIT, s.external_encoding, bug_11945",
          "597:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-02-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 448",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 449",
          "",
          "---------------"
        ]
      }
    }
  ]
}