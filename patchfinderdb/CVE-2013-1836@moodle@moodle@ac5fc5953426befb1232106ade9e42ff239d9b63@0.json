{
  "cve_id": "CVE-2013-1836",
  "cve_desc": "Moodle 2.x through 2.1.10, 2.2.x before 2.2.8, 2.3.x before 2.3.5, and 2.4.x before 2.4.2 does not properly manage privileges for WebDAV repositories, which allows remote authenticated users to read, modify, or delete arbitrary site-wide repositories by leveraging certain read access.",
  "repo": "moodle/moodle",
  "patch_hash": "ac5fc5953426befb1232106ade9e42ff239d9b63",
  "patch_info": {
    "commit_hash": "ac5fc5953426befb1232106ade9e42ff239d9b63",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/ac5fc5953426befb1232106ade9e42ff239d9b63",
    "files": [
      "admin/repositoryinstance.php"
    ],
    "message": "MDL-37852 repository: Admins can't access user instances settings",
    "before_after_code_files": [
      "admin/repositoryinstance.php||admin/repositoryinstance.php"
    ]
  },
  "patch_diff": {
    "admin/repositoryinstance.php||admin/repositoryinstance.php": [
      "File: admin/repositoryinstance.php -> admin/repositoryinstance.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "62: if (!empty($edit) || !empty($new)) {",
      "63:     if (!empty($edit)) {",
      "64:         $instance = repository::get_instance($edit);",
      "65:         $instancetype = repository::get_type_by_id($instance->options['typeid']);",
      "66:         $classname = 'repository_' . $instancetype->get_typename();",
      "67:         $configs  = $instance->get_instance_option_names();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "65:         if (!$instance->can_be_edited_by_user()) {",
      "66:             throw new repository_exception('nopermissiontoaccess', 'repository');",
      "67:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "118:     $return = true;",
      "119: } else if (!empty($delete)) {",
      "120:     $instance = repository::get_instance($delete);",
      "122:     if ($instance->readonly) {",
      "125:     if ($sure) {",
      "126:         if ($instance->delete($downloadcontents)) {",
      "127:             $deletedstr = get_string('instancedeleted', 'repository');",
      "",
      "[Removed Lines]",
      "123:             throw new repository_exception('readonlyinstance', 'repository');",
      "124:      }",
      "",
      "[Added Lines]",
      "126:         throw new repository_exception('readonlyinstance', 'repository');",
      "127:     } else if (!$instance->can_be_edited_by_user()) {",
      "128:         throw new repository_exception('nopermissiontoaccess', 'repository');",
      "129:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "173a201f90941604ae1811a1b79089be4d78707c",
      "candidate_info": {
        "commit_hash": "173a201f90941604ae1811a1b79089be4d78707c",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/173a201f90941604ae1811a1b79089be4d78707c",
        "files": [
          "admin/repositoryinstance.php"
        ],
        "message": "MDL-37852 repository: Admins can't access user instances settings",
        "before_after_code_files": [
          "admin/repositoryinstance.php||admin/repositoryinstance.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "admin/repositoryinstance.php||admin/repositoryinstance.php"
          ],
          "candidate": [
            "admin/repositoryinstance.php||admin/repositoryinstance.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/repositoryinstance.php||admin/repositoryinstance.php": [
          "File: admin/repositoryinstance.php -> admin/repositoryinstance.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: if (!empty($edit) || !empty($new)) {",
          "63:     if (!empty($edit)) {",
          "64:         $instance = repository::get_instance($edit);",
          "65:         $instancetype = repository::get_type_by_id($instance->options['typeid']);",
          "66:         $classname = 'repository_' . $instancetype->get_typename();",
          "67:         $configs  = $instance->get_instance_option_names();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:         if ($instance->instance->contextid != $context->id) {",
          "66:             throw new repository_exception('nopermissiontoaccess', 'repository');",
          "67:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "118:     $return = true;",
          "119: } else if (!empty($delete)) {",
          "120:     $instance = repository::get_instance($delete);",
          "122:     if ($instance->readonly) {",
          "125:     if ($sure) {",
          "126:         if ($instance->delete($downloadcontents)) {",
          "127:             $deletedstr = get_string('instancedeleted', 'repository');",
          "",
          "[Removed Lines]",
          "123:             throw new repository_exception('readonlyinstance', 'repository');",
          "124:      }",
          "",
          "[Added Lines]",
          "126:         throw new repository_exception('readonlyinstance', 'repository');",
          "127:     } else if ($instance->instance->contextid != $context->id) {",
          "128:         throw new repository_exception('nopermissiontoaccess', 'repository');",
          "129:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb69d2584a0fda3f72cbb6974b155287bc6fcbab",
      "candidate_info": {
        "commit_hash": "cb69d2584a0fda3f72cbb6974b155287bc6fcbab",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/cb69d2584a0fda3f72cbb6974b155287bc6fcbab",
        "files": [
          "admin/repositoryinstance.php"
        ],
        "message": "MDL-37852 repository: Admins can't access user instances settings",
        "before_after_code_files": [
          "admin/repositoryinstance.php||admin/repositoryinstance.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "admin/repositoryinstance.php||admin/repositoryinstance.php"
          ],
          "candidate": [
            "admin/repositoryinstance.php||admin/repositoryinstance.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/repositoryinstance.php||admin/repositoryinstance.php": [
          "File: admin/repositoryinstance.php -> admin/repositoryinstance.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: if (!empty($edit) || !empty($new)) {",
          "42:     if (!empty($edit)) {",
          "43:         $instance = repository::get_instance($edit);",
          "44:         $instancetype = repository::get_type_by_id($instance->options['typeid']);",
          "45:         $classname = 'repository_' . $instancetype->get_typename();",
          "46:         $configs  = $instance->get_instance_option_names();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:         if ($instance->instance->contextid != $context->id) {",
          "45:             throw new repository_exception('nopermissiontoaccess', 'repository');",
          "46:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "103:     $return = true;",
          "104: } else if (!empty($delete)) {",
          "105:     $instance = repository::get_instance($delete);",
          "107:     if ($instance->readonly) {",
          "110:     if ($sure) {",
          "111:         if (!confirm_sesskey()) {",
          "112:             print_error('confirmsesskeybad', '', $baseurl);",
          "",
          "[Removed Lines]",
          "108:             throw new repository_exception('readonlyinstance', 'repository');",
          "109:      }",
          "",
          "[Added Lines]",
          "111:         throw new repository_exception('readonlyinstance', 'repository');",
          "112:     } else if ($instance->instance->contextid != $context->id) {",
          "113:         throw new repository_exception('nopermissiontoaccess', 'repository');",
          "114:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67c858414acb6564cd11f27adb9ffc75e9c8ba7f",
      "candidate_info": {
        "commit_hash": "67c858414acb6564cd11f27adb9ffc75e9c8ba7f",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/67c858414acb6564cd11f27adb9ffc75e9c8ba7f",
        "files": [
          "admin/repositoryinstance.php"
        ],
        "message": "MDL-37852 repository: Admins can't access user instances settings",
        "before_after_code_files": [
          "admin/repositoryinstance.php||admin/repositoryinstance.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "admin/repositoryinstance.php||admin/repositoryinstance.php"
          ],
          "candidate": [
            "admin/repositoryinstance.php||admin/repositoryinstance.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/repositoryinstance.php||admin/repositoryinstance.php": [
          "File: admin/repositoryinstance.php -> admin/repositoryinstance.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: if (!empty($edit) || !empty($new)) {",
          "63:     if (!empty($edit)) {",
          "64:         $instance = repository::get_instance($edit);",
          "65:         $instancetype = repository::get_type_by_id($instance->options['typeid']);",
          "66:         $classname = 'repository_' . $instancetype->get_typename();",
          "67:         $configs  = $instance->get_instance_option_names();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:         if ($instance->instance->contextid != $context->id) {",
          "66:             throw new repository_exception('nopermissiontoaccess', 'repository');",
          "67:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "118:     $return = true;",
          "119: } else if (!empty($delete)) {",
          "120:     $instance = repository::get_instance($delete);",
          "122:     if ($instance->readonly) {",
          "125:     if ($sure) {",
          "126:         if ($instance->delete($downloadcontents)) {",
          "127:             $deletedstr = get_string('instancedeleted', 'repository');",
          "",
          "[Removed Lines]",
          "123:             throw new repository_exception('readonlyinstance', 'repository');",
          "124:      }",
          "",
          "[Added Lines]",
          "126:         throw new repository_exception('readonlyinstance', 'repository');",
          "127:     } else if ($instance->instance->contextid != $context->id) {",
          "128:         throw new repository_exception('nopermissiontoaccess', 'repository');",
          "129:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}