{
  "cve_id": "CVE-2019-19646",
  "cve_desc": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
  "repo": "sqlite/sqlite",
  "patch_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
  "patch_info": {
    "commit_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/pragma.c",
      "test/gencol1.test"
    ],
    "message": "Fix the NOT NULL verification logic in PRAGMA integrity_check so that it works for generated columns whose value is the result of a comparison operator. Ticket [bd8c280671ba44a7]\n\nFossilOrigin-Name: f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/pragma.c||src/pragma.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/pragma.c||src/pragma.c": [
      "File: src/pragma.c -> src/pragma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1596:           if( j==pTab->iPKey ) continue;",
      "1597:           if( pTab->aCol[j].notNull==0 ) continue;",
      "1598:           sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);",
      "1600:           jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);",
      "1601:           zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,",
      "1602:                               pTab->aCol[j].zName);",
      "",
      "[Removed Lines]",
      "1599:           sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "",
      "[Added Lines]",
      "1599:           if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){",
      "1600:             sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "1601:           }",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
      "329: } {1 {FOREIGN KEY constraint failed}}",
      "331: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331: # 2019-12-09 ticket bd8c280671ba44a7",
      "332: # With generated columns, the sqlite3ExprGetColumnOfTable() routine might",
      "333: # generate a code sequence that does not end with OP_Column.  So check to",
      "334: # make sure that the last instruction generated is an OP_column prior to",
      "335: # applying the OPFLAG_TYPEOFARG optimization to NOT NULL checks in the",
      "336: # PRAGMA integrity_check code.",
      "337: #",
      "338: sqlite3 db :memory:",
      "339: do_execsql_test gencol1-12.10 {",
      "340:   CREATE TABLE t0 (c0, c1 NOT NULL AS (c0==0));",
      "341:   INSERT INTO t0(c0) VALUES (0);",
      "342:   PRAGMA integrity_check;",
      "343: } {ok}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1d4b16405b1463dea57d3f704ecb38f6e3038501",
      "candidate_info": {
        "commit_hash": "1d4b16405b1463dea57d3f704ecb38f6e3038501",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1d4b16405b1463dea57d3f704ecb38f6e3038501",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "src/vdbe.c",
          "src/vdbeaux.c",
          "test/vtabdrop.test"
        ],
        "message": "Fix a problem causing the sqlite_master entry corresponding to a virtual table to be removed by a DROP TABLE even if the call to the vtabs xDestroy() method failed.\n\nFossilOrigin-Name: 0140f6dbfbea93eadcd7f727d84064a0c0d1f0806dbe3e5ef1017da603157e3b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "src/vdbe.c||src/vdbe.c",
          "src/vdbeaux.c||src/vdbeaux.c",
          "test/vtabdrop.test||test/vtabdrop.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c3a3a11194586bef80a9d7ca54caae8af30d4e7b464b8bb3d257ba2d2ec4791f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2639:   if( IsVirtual(pTab) ){",
          "2640:     sqlite3VdbeAddOp4(v, OP_VDestroy, iDb, 0, 0, pTab->zName, 0);",
          "2641:   }",
          "2642:   sqlite3VdbeAddOp4(v, OP_DropTable, iDb, 0, 0, pTab->zName, 0);",
          "2643:   sqlite3ChangeCookie(pParse, iDb);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2641:     sqlite3MayAbort(pParse);",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6849:   db->nVDestroy++;",
          "6850:   rc = sqlite3VtabCallDestroy(db, pOp->p1, pOp->p4.z);",
          "6851:   db->nVDestroy--;",
          "6852:   if( rc ) goto abort_due_to_error;",
          "6853:   break;",
          "6854: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6852:   assert( p->errorAction==OE_Abort && p->usesStmtJournal );",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "603:   while( (pOp = opIterNext(&sIter))!=0 ){",
          "604:     int opcode = pOp->opcode;",
          "605:     if( opcode==OP_Destroy || opcode==OP_VUpdate || opcode==OP_VRename",
          "606:      || ((opcode==OP_Halt || opcode==OP_HaltIfNull)",
          "607:       && ((pOp->p1&0xff)==SQLITE_CONSTRAINT && pOp->p2==OE_Abort))",
          "608:     ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606:      || opcode==OP_VDestroy",
          "",
          "---------------"
        ],
        "test/vtabdrop.test||test/vtabdrop.test": [
          "File: test/vtabdrop.test -> test/vtabdrop.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2018 December 28",
          "2: #",
          "3: #    May you do good and not evil.",
          "4: #    May you find forgiveness for yourself and forgive others.",
          "5: #    May you share freely, never taking more than you give.",
          "6: #",
          "7: #***********************************************************************",
          "8: #",
          "9: # The tests in this file test edge cases surrounding DROP TABLE on",
          "10: # virtual tables.",
          "11: #",
          "13: set testdir [file dirname $argv0]",
          "14: source $testdir/tester.tcl",
          "16: ifcapable !vtab { finish_test ; return }",
          "17: source $testdir/fts3_common.tcl",
          "18: source $testdir/malloc_common.tcl",
          "20: set testprefix vtabdrop",
          "22: #-------------------------------------------------------------------------",
          "23: # Test that if a DROP TABLE is executed against an rtree table, but the",
          "24: # xDestroy() call fails, the rtree table is not dropped, the sqlite_master",
          "25: # table is not modified and the internal schema remains intact.",
          "26: #",
          "27: ifcapable rtree {",
          "28:   do_execsql_test 1.0 {",
          "29:     CREATE VIRTUAL TABLE rt USING rtree(id, x1, x2);",
          "30:     CREATE TABLE t1(x, y);",
          "31:     INSERT INTO t1 VALUES(1, 2);",
          "32:   }",
          "34:   do_test 1.1 {",
          "35:     execsql {",
          "36:       BEGIN;",
          "37:         INSERT INTO t1 VALUES(3, 4);",
          "38:     }",
          "39:     db eval { SELECT * FROM t1 } {",
          "40:       catchsql { DROP TABLE rt }",
          "41:     }",
          "42:     execsql COMMIT",
          "43:   } {}",
          "45:   do_execsql_test 1.2 {",
          "46:     SELECT name FROM sqlite_master ORDER BY 1;",
          "47:     SELECT * FROM t1;",
          "48:     SELECT * FROM rt;",
          "49:   } {rt rt_node rt_parent rt_rowid t1 1 2 3 4}",
          "51:   db close",
          "52:   sqlite3 db test.db",
          "54:   do_execsql_test 1.3 {",
          "55:     SELECT name FROM sqlite_master ORDER BY 1;",
          "56:   } {rt rt_node rt_parent rt_rowid t1}",
          "57: }",
          "59: #-------------------------------------------------------------------------",
          "60: # Same as tests 1.*, except with fts5 instead of rtree.",
          "61: #",
          "62: ifcapable fts5 {",
          "63:   reset_db",
          "64:   do_execsql_test 2.0 {",
          "65:     CREATE VIRTUAL TABLE ft USING fts5(x);",
          "66:     CREATE TABLE t1(x, y);",
          "67:     INSERT INTO t1 VALUES(1, 2);",
          "68:   }",
          "70:   do_test 2.1 {",
          "71:     execsql {",
          "72:       BEGIN;",
          "73:         INSERT INTO t1 VALUES(3, 4);",
          "74:     }",
          "75:     db eval { SELECT * FROM t1 } {",
          "76:       catchsql { DROP TABLE ft }",
          "77:     }",
          "78:     execsql COMMIT",
          "79:   } {}",
          "81:   do_execsql_test 2.2 {",
          "82:     SELECT name FROM sqlite_master ORDER BY 1;",
          "83:   } {ft ft_config ft_content ft_data ft_docsize ft_idx t1}",
          "85:   db close",
          "86:   sqlite3 db test.db",
          "88:   do_execsql_test 2.3 {",
          "89:     SELECT name FROM sqlite_master ORDER BY 1;",
          "90:   } {ft ft_config ft_content ft_data ft_docsize ft_idx t1}",
          "91: }",
          "93: #-------------------------------------------------------------------------",
          "94: # Same as tests 1.*, except with fts3 instead of rtree.",
          "95: #",
          "96: ifcapable fts3 {",
          "97:   reset_db",
          "98:   do_execsql_test 2.0 {",
          "99:     CREATE VIRTUAL TABLE ft USING fts3(x);",
          "100:     CREATE TABLE t1(x, y);",
          "101:     INSERT INTO t1 VALUES(1, 2);",
          "102:   }",
          "104:   do_test 2.1 {",
          "105:     execsql {",
          "106:       BEGIN;",
          "107:         INSERT INTO t1 VALUES(3, 4);",
          "108:     }",
          "109:     db eval { SELECT * FROM t1 } {",
          "110:       catchsql { DROP TABLE ft }",
          "111:     }",
          "112:     execsql COMMIT",
          "113:   } {}",
          "115:   do_execsql_test 2.2 {",
          "116:     SELECT name FROM sqlite_master ORDER BY 1;",
          "117:   } {ft ft_content ft_segdir ft_segments sqlite_autoindex_ft_segdir_1 t1}",
          "119:   db close",
          "120:   sqlite3 db test.db",
          "122:   do_execsql_test 2.3 {",
          "123:     SELECT name FROM sqlite_master ORDER BY 1;",
          "124:   } {ft ft_content ft_segdir ft_segments sqlite_autoindex_ft_segdir_1 t1}",
          "125: }",
          "127: finish_test",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3993397e6c2a1f754c52b4a4a999367e2ea8f0c9",
      "candidate_info": {
        "commit_hash": "3993397e6c2a1f754c52b4a4a999367e2ea8f0c9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3993397e6c2a1f754c52b4a4a999367e2ea8f0c9",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a buffer overrun triggered by a merge operation on a corrupt fts5 database.\n\nFossilOrigin-Name: 7ee3cd5b2cdf8db35f70400b3df58f7c421c78ae77c50f22b0ee22d5a3039429",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4145:       u8 aHdr[4] = {0x00, 0x00, 0x00, 0x00};",
          "4147:       iLeafRowid = FTS5_SEGMENT_ROWID(iId, pSeg->iTermLeafPgno);",
          "4149:       if( pData ){",
          "4150:         if( iOff>pData->szLeaf ){",
          "",
          "[Removed Lines]",
          "4148:       pData = fts5DataRead(p, iLeafRowid);",
          "",
          "[Added Lines]",
          "4148:       pData = fts5LeafRead(p, iLeafRowid);",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "5820:   SELECT snippet(t1, -1, '.', '..', '', 2 ) FROM t1('g h') ORDER BY rank;",
          "5821: } {0 {{.g.. .h..} {.g.. h} {.g.. .h..}}}",
          "5823: sqlite3_fts5_may_be_corrupt 0",
          "5824: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5823: #--------------------------------------------------------------------------",
          "5824: reset_db",
          "5825: do_test 45.0 {",
          "5826:   sqlite3 db {}",
          "5827:   db deserialize [decode_hexdb {",
          "5828: | size 24576 pagesize 4096 filename crash-0b162c9e69b999.db",
          "5829: | page 1 offset 0",
          "5830: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "5831: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 06   .....@  ........",
          "5832: |     32: 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 04   ................",
          "5833: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "5834: |     96: 00 00 00 00 0d 00 00 00 06 0e 0f 00 0f aa 0f 53   ...............S",
          "5835: |    112: 0e e8 0e 8b 0e 33 0e 0f 00 00 00 00 00 00 00 00   .....3..........",
          "5836: |   3584: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 22   ................",
          "5837: |   3600: 06 06 17 11 11 01 31 74 61 62 6c 65 62 62 62 62   ......1tablebbbb",
          "5838: |   3616: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 62 62   .CREATE TABLE bb",
          "5839: |   3632: 28 61 29 56 05 06 17 1f 1f 01 7d 74 61 52 6c 65   (a)V.......taRle",
          "5840: |   3648: 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63 6f 6e 66   t1_configt1_conf",
          "5841: |   3664: 69 67 05 43 52 45 41 54 45 20 54 41 42 4c 45 20   ig.CREATE TABLE",
          "5842: |   3680: 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b 20 50 52   't1_config'(k PR",
          "5843: |   3696: 49 4d 41 52 59 20 4b 45 59 2c 20 76 29 20 57 49   IMARY KEY, v) WI",
          "5844: |   3712: 54 48 4f 55 54 20 52 4f 57 49 44 5b 04 07 17 21   THOUT ROWID[...!",
          "5845: |   3728: 21 01 81 01 74 61 62 6c 65 74 31 5f 64 6f 73 73   !...tablet1_doss",
          "5846: |   3744: 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65 04 43 52   izet1_docsize.CR",
          "5847: |   3760: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 64   EATE TABLE 't1_d",
          "5848: |   3776: 6f 63 73 69 7a 65 27 28 69 64 20 49 4e 54 45 47   ocsize'(id INTEG",
          "5849: |   3792: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "5850: |   3808: 73 7a 20 42 4c 4f 42 29 69 03 07 17 19 19 01 81   sz BLOB)i.......",
          "5851: |   3824: 2d 74 61 62 6c 65 74 31 5f 69 64 78 74 31 5f 69   -tablet1_idxt1_i",
          "5852: |   3840: 64 78 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   dx.CREATE TABLE",
          "5853: |   3856: 27 74 31 5f 69 64 78 27 28 73 65 67 69 64 2c 20   't1_idx'(segid,",
          "5854: |   3872: 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50 52 49 4d   term, pgno, PRIM",
          "5855: |   3888: 41 52 59 20 4b 45 59 28 73 65 67 69 64 2c 20 74   ARY KEY(segid, t",
          "5856: |   3904: 65 72 6d 29 29 20 57 49 54 48 4f 55 54 20 52 4f   erm)) WITHOUT RO",
          "5857: |   3920: 57 49 44 55 02 07 17 1b 1b 01 81 01 74 61 62 6c   WIDU........tabl",
          "5858: |   3936: 65 74 31 5f 64 61 74 61 74 31 5f 64 61 74 61 02   et1_datat1_data.",
          "5859: |   3952: 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74 31   CREATE TABLE 't1",
          "5860: |   3968: 5f 64 61 74 61 27 28 69 64 20 49 4e 54 45 47 45   _data'(id INTEGE",
          "5861: |   3984: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 62   R PRIMARY KEY, b",
          "5862: |   4000: 6c 6f 63 6b 20 42 4c 4f 42 29 54 01 07 17 11 11   lock BLOB)T.....",
          "5863: |   4016: 08 81 15 74 61 62 6c 65 74 31 74 31 43 52 45 41   ...tablet1t1CREA",
          "5864: |   4032: 54 45 20 56 49 52 54 55 41 4c 20 54 41 42 4c 45   TE VIRTUAL TABLE",
          "5865: |   4048: 20 74 31 20 55 53 49 4e 47 20 66 74 73 35 28 61    t1 USING fts5(a",
          "5866: |   4064: 2c 62 2c 70 72 65 66 69 78 3d 22 31 2c 32 2c 33   ,b,prefix=.1,2,3",
          "5867: |   4080: 2c 34 22 2c 20 63 6f 6e 74 65 6e 74 3d 22 22 29   ,4., content=..)",
          "5868: | page 2 offset 4096",
          "5869: |      0: 0d 0b 6a 00 37 09 4c 02 0f e7 09 4c 0f c6 0f a4   ..j.7.L....L....",
          "5870: |     16: 0f 88 0f 6d 0f 4b 0f 2c 0f 0e 0e ec 0e cd 0e ad   ...m.K.,........",
          "5871: |     32: 0e 8e 0e 6c 0e 4b 0e 29 0e 08 0d e6 0d c4 0d b5   ...l.K.)........",
          "5872: |     48: 0d 97 0d 76 0d 54 0d 31 0d 15 0c f3 0c d3 0c b5   ...v.T.1........",
          "5873: |     64: 0c 95 0c 73 0c 54 0c 32 0c 10 0b ee 0b cc 0b b0   ...s.T.2........",
          "5874: |     80: 0b 8d 0b 7e 0b 48 0b 2e 0b 0b 0a ef 0a cc 0a ad   ...~.H..........",
          "5875: |     96: 0a 8c 0a 6d 0a 4d 0a 2b 0a 0c 09 ec 09 ca 09 a8   ...m.M.+........",
          "5876: |    112: 09 86 09 63 0f f1 00 00 00 00 00 00 00 00 00 00   ...c............",
          "5877: |   2368: 00 00 00 00 00 00 00 00 00 00 00 00 15 0a 03 00   ................",
          "5878: |   2384: 30 00 00 00 01 01 03 35 00 03 01 01 12 02 01 12   0......5........",
          "5879: |   2400: 03 01 11 1c 8c 80 80 80 80 10 03 00 3e 00 00 00   ............>...",
          "5880: |   2416: 17 01 05 05 34 74 61 62 6c 03 02 03 01 04 77 68   ....4tabl.....wh",
          "5881: |   2432: 65 72 03 02 06 09 1b 8c 80 80 80 80 0f 03 00 3c   er.............<",
          "5882: |   2448: 00 00 00 16 05 34 66 75 73 34 03 02 02 01 04 6e   .....4fus4.....n",
          "5883: |   2464: 75 6d 62 03 06 01 04 09 1b 8c 80 80 80 80 0e 03   umb.............",
          "5884: |   2480: 00 3c 00 00 00 16 04 33 74 68 65 03 06 01 01 04   .<.....3the.....",
          "5885: |   2496: 01 03 77 68 65 03 02 04 04 0a 1b 8c 80 80 80 80   ..whe...........",
          "5886: |   2512: 0d 03 00 3c 00 00 00 16 04 33 6e 74 6d 03 06 01   ...<.....3ntm...",
          "5887: |   2528: 01 05 01 03 74 61 62 05 62 03 04 0a 19 8c 80 80   ....tab.b.......",
          "5888: |   2544: 80 80 0c 03 00 38 00 00 00 14 03 32 77 68 03 02   .....8.....2wh..",
          "5889: |   2560: 04 00 04 33 66 74 73 03 02 02 04 07 18 8c 80 80   ...3fts.........",
          "5890: |   2576: 80 80 0b 03 00 36 00 00 00 13 03 32 74 61 03 02   .....6.....2ta..",
          "5891: |   2592: 03 02 01 68 03 06 01 01 04 04 07 1b 8c 80 80 80   ...h............",
          "5892: |   2608: 80 0a 03 00 3c 00 00 00 16 03 32 6e 75 03 06 01   ....<.....2nu...",
          "5893: |   2624: 01 05 01 02 6f 66 03 06 01 01 06 04 09 19 8c 80   ....of..........",
          "5894: |   2640: 80 80 80 09 03 00 38 00 00 00 14 03 32 66 74 03   ......8.....2ft.",
          "5895: |   2656: 02 02 01 02 69 73 03 06 01 01 03 04 07 18 8c 80   ....is..........",
          "5896: |   2672: 80 80 80 08 03 00 36 00 00 00 13 02 31 74 03 08   ......6.....1t..",
          "5897: |   2688: 03 01 01 04 01 01 77 03 02 04 04 09 1a 8c 80 80   ......w.........",
          "5898: |   2704: 80 80 07 03 00 3a ff 00 00 15 02 31 6e 03 08 01   .....:.....1n...",
          "5899: |   2720: 01 02 05 01 01 6f 03 06 01 01 06 04 09 18 8c 80   .....o..........",
          "5900: |   2736: 80 80 80 06 03 00 36 00 00 00 13 04 02 31 66 03   ......6......1f.",
          "5901: |   2752: 02 02 01 01 69 03 06 01 01 03 05 06 1c 8c 80 80   ....i...........",
          "5902: |   2768: 80 80 05 03 00 3e 00 00 00 17 04 30 74 68 65 03   .....>.....0the.",
          "5903: |   2784: 06 01 01 04 01 05 77 68 65 72 65 03 02 04 0a 15   ......where.....",
          "5904: |   2800: 8c 80 80 80 80 04 03 00 30 00 00 00 11 01 01 06   ........0.......",
          "5905: |   2816: 06 30 74 61 62 6c 65 03 02 03 07 1c 8c 80 80 80   .0table.........",
          "5906: |   2832: 80 03 03 00 3e 00 00 00 17 07 30 6e 75 6d 62 65   ....>.....0numbe",
          "5907: |   2848: 72 03 06 01 01 05 01 02 6f 66 03 06 04 0d 13 8c   r.......of......",
          "5908: |   2864: 80 80 80 80 02 03 00 2c 00 00 00 0f 01 01 03 02   .......,........",
          "5909: |   2880: 30 6e 03 06 01 01 02 07 1b 8c 80 80 80 80 01 03   0n..............",
          "5910: |   2896: 00 3c 00 00 00 16 08 30 66 74 73 34 61 75 78 03   .<.....0fts4aux.",
          "5911: |   2912: 02 02 01 02 69 73 03 06 04 0c 00 00 00 14 2a 00   ....is........*.",
          "5912: |   2928: 00 00 01 01 02 24 00 02 01 01 12 02 01 12 08 88   .....$..........",
          "5913: |   2944: 80 80 80 80 11 03 00 16 00 00 01 05 02 1c 88 80   ................",
          "5914: |   2960: 80 80 80 11 03 00 3e 00 00 00 17 05 34 72 6f 77   ......>.....4row",
          "5915: |   2976: 73 02 06 01 01 05 01 04 74 68 65 72 02 02 04 0b   s.......ther....",
          "5916: |   2992: 15 88 80 80 80 80 10 03 00 30 00 00 00 11 02 01   .........0......",
          "5917: |   3008: 01 07 05 34 62 65 74 77 02 02 04 08 1b 88 80 80   ...4betw........",
          "5918: |   3024: 80 80 0f 03 00 3c 00 00 00 16 04 04 33 72 6f 77   .....<......3row",
          "5919: |   3040: 02 06 01 01 05 01 03 74 68 65 02 08 05 0a 1b 88   .......the......",
          "5920: |   3056: 80 80 80 80 0e 03 00 3c 00 00 00 16 02 01 02 04   .......<........",
          "5921: |   3072: 33 61 72 65 02 02 03 01 03 62 65 74 02 02 07 08   3are.....bet....",
          "5922: |   3088: 1b 88 80 80 80 80 0d 03 00 3c 00 00 00 16 03 32   .........<.....2",
          "5923: |   3104: 74 68 02 08 02 01 01 07 00 04 33 61 6e 64 02 06   th........3and..",
          "5924: |   3120: 04 0a 1b 88 80 80 80 80 0c 03 00 3c 00 00 00 16   ...........<....",
          "5925: |   3136: 03 32 69 6e 02 06 01 01 06 01 02 72 6f 02 06 01   .2in.......ro...",
          "5926: |   3152: 01 05 04 09 18 88 80 80 80 80 0b 03 00 36 00 00   .............6..",
          "5927: |   3168: 00 13 02 03 32 61 72 02 02 03 01 02 62 65 02 02   ....2ar.....be..",
          "5928: |   3184: 04 05 07 1b 88 80 80 80 80 0a 03 00 3c 00 00 00   ............<...",
          "5929: |   3200: 16 02 31 74 02 08 02 01 01 07 00 03 32 61 6e 02   ..1t........2an.",
          "5930: |   3216: 06 01 01 04 09 19 88 80 80 80 80 09 03 00 38 00   ..............8.",
          "5931: |   3232: 00 00 14 02 31 6e 02 06 01 01 03 01 01 72 02 06   ....1n.......r..",
          "5932: |   3248: 01 01 05 04 08 17 88 80 80 80 80 08 03 00 34 00   ..............4.",
          "5933: |   3264: 00 00 12 02 31 62 02 02 04 01 01 69 02 06 01 01   ....1b.....i....",
          "5934: |   3280: 06 04 06 19 88 80 80 80 80 07 03 00 38 00 00 00   ............8...",
          "5935: |   3296: 14 04 02 31 32 02 02 05 01 01 61 02 08 03 01 01   ...12.....a.....",
          "5936: |   3312: 02 05 06 1b 88 80 80 80 80 06 03 00 3c 00 00 00   ............<...",
          "5937: |   3328: 16 06 30 74 68 65 72 65 02 02 02 00 02 31 31 02   ..0there.....11.",
          "5938: |   3344: 06 01 01 04 0a 15 88 80 80 80 80 05 03 00 30 00   ..............0.",
          "5939: |   3360: 00 00 11 01 01 05 04 30 74 68 65 02 06 01 01 07   .......0the.....",
          "5940: |   3376: 07 1c 88 80 80 80 80 04 03 00 3e 00 00 00 17 01   ..........>.....",
          "5941: |   3392: 01 06 02 30 6e 02 06 01 01 03 01 04 72 6f 77 73   ...0n.......rows",
          "5942: |   3408: 02 06 07 08 1b 88 80 80 80 80 03 03 00 3c 00 00   .............<..",
          "5943: |   3424: 00 16 08 30 62 65 74 77 65 65 6e 02 02 04 01 02   ...0between.....",
          "5944: |   3440: 69 6e 02 06 04 0c 1a 88 80 80 80 80 02 03 00 3a   in.............:",
          "5945: |   3456: 00 00 00 15 04 30 61 6e 64 02 06 01 01 02 02 02   .....0and.......",
          "5946: |   3472: 72 65 02 02 03 04 0a 17 88 80 80 80 80 01 03 00   re..............",
          "5947: |   3488: 34 00 00 00 12 02 30 31 02 06 01 01 04 01 01 32   4.....01.......2",
          "5948: |   3504: 02 02 06 04 08 08 84 80 80 80 80 12 03 00 16 00   ................",
          "5949: |   3520: 00 00 05 04 1b 84 80 80 80 80 11 03 00 3c 00 00   .............<..",
          "5950: |   3536: 00 16 05 34 74 61 62 6c 01 06 01 01 05 02 03 65   ...4tabl.......e",
          "5951: |   3552: 72 6d 01 02 04 0b 1b 84 80 80 80 80 10 03 00 3c   rm.............<",
          "5952: |   3568: 00 00 00 16 05 34 65 61 63 68 01 02 03 01 04 70   .....4each.....p",
          "5953: |   3584: 72 65 73 01 02 05 04 09 1a 84 80 80 80 80 0f 03   res.............",
          "5954: |   3600: 00 3a 00 00 00 15 04 33 74 65 72 01 02 04 02 02   .:.....3ter.....",
          "5955: |   3616: 68 65 01 06 01 01 03 04 08 1b 84 80 80 80 80 0e   he..............",
          "5956: |   3632: 03 00 3c 00 00 00 16 04 33 70 72 65 01 02 05 01   ..<.....3pre....",
          "5957: |   3648: 03 74 61 62 01 06 01 01 05 04 08 1a 84 80 80 80   .tab............",
          "5958: |   3664: 80 0d 03 00 3a 00 00 00 15 04 33 66 6f 72 01 02   ....:.....3for..",
          "5959: |   3680: 02 02 02 74 73 01 06 01 01 04 04 08 1b 84 80 80   ...ts...........",
          "5960: |   3696: 80 80 0c 03 00 3c 00 00 00 16 03 32 74 68 01 06   .....<.....2th..",
          "5961: |   3712: 01 01 03 00 04 33 65 61 63 01 02 03 04 09 18 84   .....3eac.......",
          "5962: |   3728: 80 80 80 80 0b 03 00 36 00 00 00 13 03 32 74 61   .......6.....2ta",
          "5963: |   3744: 01 06 01 01 05 02 01 65 01 02 04 04 09 19 84 80   .......e........",
          "5964: |   3760: 80 80 80 0a 03 00 38 00 00 00 14 03 32 69 6e 01   ......8.....2in.",
          "5965: |   3776: 06 01 01 02 01 02 70 72 01 02 05 04 09 18 84 80   ......pr........",
          "5966: |   3792: 80 80 80 09 03 00 36 00 00 00 13 03 32 66 6f 01   ......6.....2fo.",
          "5967: |   3808: 02 02 02 01 74 01 06 01 01 04 04 07 1b 84 80 80   ....t...........",
          "5968: |   3824: 80 80 08 03 00 3c 00 00 00 16 02 31 74 01 0a 04   .....<.....1t...",
          "5969: |   3840: 01 01 03 04 00 03 32 65 61 01 02 03 04 0a 17 84   ......2ea.......",
          "5970: |   3856: 80 80 80 80 07 03 00 34 00 00 00 12 02 31 69 01   .......4.....1i.",
          "5971: |   3872: 06 01 01 02 01 01 70 01 02 05 04 08 18 84 80 80   ......p.........",
          "5972: |   3888: 80 80 06 03 00 36 00 00 00 13 02 31 65 01 02 03   .....6.....1e...",
          "5973: |   3904: 01 01 66 01 08 02 01 01 04 04 06 1b 84 80 80 80   ..f.............",
          "5974: |   3920: 80 05 03 00 3c 00 00 00 16 05 30 74 65 72 6d 01   ....<.....0term.",
          "5975: |   3936: 02 04 02 02 68 65 01 06 01 01 03 04 09 14 84 80   ....he..........",
          "5976: |   3952: 80 80 80 04 03 00 2e 00 00 00 10 06 30 74 61 62   ............0tab",
          "5977: |   3968: 6c 65 01 06 00 01 05 04 15 84 80 80 80 80 03 03   le..............",
          "5978: |   3984: 00 30 00 00 00 11 02 08 30 70 72 65 73 65 6e 74   .0......0present",
          "5979: |   4000: 01 02 05 05 1b 84 80 80 80 80 02 03 00 3c 00 00   .............<..",
          "5980: |   4016: 00 16 04 30 66 74 73 01 06 01 01 04 01 02 69 6e   ...0fts.......in",
          "5981: |   4032: 01 06 01 01 04 0a 1a 84 80 80 80 80 01 03 00 3a   ...............:",
          "5982: |   4048: 00 00 00 15 05 30 65 61 63 68 01 02 03 01 03 66   .....0each.....f",
          "5983: |   4064: 6f 72 01 02 02 04 09 06 01 03 00 12 03 0b 0f 00   or..............",
          "5984: |   4080: 00 08 8c 80 80 80 80 11 03 00 16 00 00 00 05 04   ................",
          "5985: | page 3 offset 8192",
          "5986: |      0: 0a 00 00 00 32 0e 4f 00 0f fa 10 f1 0f e9 0f e1   ....2.O.........",
          "5987: |     16: 0f d8 0f d1 0f c9 0f c1 0f b9 0f b1 0f a9 0f a0   ................",
          "5988: |     32: 0f 98 0f 90 0f 87 0f 80 0f 78 0f 71 0f 68 0f 5f   .........x.q.h._",
          "5989: |     48: bd 56 0f 4d 0f 41 0f 38 0f 2f 0f 26 0f 1d 0f 13   .V.M.A.8./.&....",
          "5990: |     64: 0f 0a 0f 01 0e f7 0e ee 0e e6 0e dd 0e d6 0e cd   ................",
          "5991: |     80: 0e c3 0e ba 0e b0 0e a8 0e 9f 0e 96 0e 8e 0e 85   ................",
          "5992: |     96: 0e 7c 0e 73 0e 6a 0e 60 0e 58 0e 4f 00 00 00 00   .|.s.j.`.X.O....",
          "5993: |   3648: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08   ................",
          "5994: |   3664: 04 01 10 2f 03 34 74 20 07 04 01 0e 01 03 34 1e   .../.4t ......4.",
          "5995: |   3680: 09 04 01 12 01 03 33 74 68 1c 08 04 01 10 01 03   ......3th.......",
          "5996: |   3696: 33 6e 1a 08 04 01 10 01 03 32 77 18 08 04 01 10   3n.......2w.....",
          "5997: |   3712: 01 03 32 74 16 08 04 01 10 01 03 32 6e 14 07 04   ..2t.......2n...",
          "5998: |   3728: 01 0e 01 03 32 12 08 04 01 10 01 03 31 74 10 08   ....2.......1t..",
          "5999: |   3744: 04 01 10 01 03 31 6e 0e 07 04 01 0e 02 03 31 0c   .....1n.......1.",
          "6000: |   3760: 09 04 01 12 01 03 30 74 68 0a 08 04 01 10 01 03   ......0th.......",
          "6001: |   3776: 30 74 08 09 04 01 12 01 03 30 6e 75 06 08 04 01   0t.......0nu....",
          "6002: |   3792: 10 01 03 30 6e 04 06 04 01 0c 01 05 52 08 04 01   ...0n.......R...",
          "6003: |   3808: 10 01 02 34 72 22 07 04 01 0e 01 02 34 20 08 04   ...4r.......4 ..",
          "6004: |   3824: 01 10 01 02 33 72 1e 09 04 01 12 01 02 33 61 72   ....3r.......3ar",
          "6005: |   3840: 1c 08 04 01 10 01 02 32 74 1a 08 04 01 10 b3 02   .......2t.......",
          "6006: |   3856: 32 69 18 09 04 01 12 01 02 32 61 72 16 08 04 01   2i.......2ar....",
          "6007: |   3872: 10 01 02 31 74 14 08 04 01 10 01 02 31 6e 12 08   ...1t.......1n..",
          "6008: |   3888: 04 01 10 01 02 31 62 10 08 04 01 10 01 02 31 32   .....1b.......12",
          "6009: |   3904: 0e 0b 04 01 16 01 02 30 74 68 65 72 0c 08 04 01   .......0ther....",
          "6010: |   3920: 10 01 02 30 74 0a 08 04 01 10 01 02 30 6e 08 08   ...0t.......0n..",
          "6011: |   3936: 04 01 10 01 02 30 62 06 08 04 01 10 01 02 30 61   .....0b.......0a",
          "6012: |   3952: 04 06 04 01 0c 01 02 02 07 04 09 10 01 34 74 22   .............4t.",
          "6013: |   3968: 06 04 09 0e 01 34 20 08 04 09 12 01 33 74 65 1e   .....4 .....3te.",
          "6014: |   3984: 07 04 09 10 01 33 70 1c 07 04 09 10 01 33 66 1a   .....3p......3f.",
          "6015: |   4000: 08 04 09 12 01 32 74 68 18 07 04 09 10 01 32 74   .....2th......2t",
          "6016: |   4016: 16 07 04 09 10 01 32 69 14 07 04 09 10 01 32 66   ......2i......2f",
          "6017: |   4032: 12 07 04 09 10 01 31 74 10 07 04 09 10 01 31 69   ......1t......1i",
          "6018: |   4048: 0e 06 04 09 0e 01 31 0c 08 04 09 12 01 30 74 65   ......1......0te",
          "6019: |   4064: 0a 07 04 09 10 01 30 74 08 07 04 09 10 01 30 70   ......0t......0p",
          "6020: |   4080: 06 08 04 09 12 01 30 66 74 04 05 04 09 0c 01 02   ......0ft.......",
          "6021: | page 4 offset 12288",
          "6022: |      0: 0d 00 00 00 03 0f eb 00 0f f9 0f f2 0f eb 00 00   ................",
          "6023: |   4064: 00 00 00 00 00 00 00 00 00 00 00 05 03 03 00 10   ................",
          "6024: |   4080: 03 05 05 02 03 00 10 04 06 05 01 03 00 10 04 04   ................",
          "6025: | page 5 offset 16384",
          "6026: |      0: 0a 00 00 00 02 0f eb 00 0f eb 0f f4 00 00 00 00   ................",
          "6027: |   4064: 00 00 00 00 00 00 00 00 00 00 00 08 03 15 01 70   ...............p",
          "6028: |   4080: 67 73 7a 18 0b 03 1b 01 76 65 72 73 69 6f 6e 04   gsz.....version.",
          "6029: | page 6 offset 20480",
          "6030: |      0: 0d 00 00 00 03 0f f2 00 0f fc 0f f7 0f f2 00 00   ................",
          "6031: |   4080: 00 00 03 03 02 01 03 03 02 02 01 02 02 01 02 09   ................",
          "6032: }]} {}",
          "6034: do_catchsql_test 45.2 {",
          "6035:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6036:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6037:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6038:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6039:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6040:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6041:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6042:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6043:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6044:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6045:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6046:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6047:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6048:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6049:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6050:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6051: } {0 {}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 119d1609fa415894fdd0aa19440ca1c658bd01910838a4cfadbe0e304b033bfd",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "873b019826a77a1f25f8b2e7a62fac49577a9057",
      "candidate_info": {
        "commit_hash": "873b019826a77a1f25f8b2e7a62fac49577a9057",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/873b019826a77a1f25f8b2e7a62fac49577a9057",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "test/corruptL.test"
        ],
        "message": "Fix a problem in the new code introduced by [658b84d7] causing corruption and other errors to be ignored.\n\nFossilOrigin-Name: 7ccf2e7d413adb109c61456a5f46e87d38884801dbaab93297a17e3050014b59",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "test/corruptL.test||test/corruptL.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ebe4845cd0ffb96b30be3c69eb399d58e93149886bc2fa60a7ebd7b4fbe447a4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4016:           VdbeBranchTaken(1,2); goto jump_to_p2;",
          "4017:           break;",
          "4018:         }else{",
          "4020:           goto seek_not_found;",
          "4021:         }",
          "4022:       }else",
          "",
          "[Removed Lines]",
          "4019:           sqlite3BtreeLast(pC->uc.pCursor, &res);",
          "",
          "[Added Lines]",
          "4019:           rc = sqlite3BtreeLast(pC->uc.pCursor, &res);",
          "4020:           if( rc!=SQLITE_OK ) goto abort_due_to_error;",
          "",
          "---------------"
        ],
        "test/corruptL.test||test/corruptL.test": [
          "File: test/corruptL.test -> test/corruptL.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "866:   ROLLBACK TO one;",
          "867: }",
          "869: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "869: #-------------------------------------------------------------------------",
          "870: reset_db",
          "871: do_test 10.0 {",
          "872:   sqlite3 db {}",
          "873:   db deserialize [decode_hexdb {",
          "874: | size 180224 pagesize 4096 filename crash-41390d95d613b6.db",
          "875: | page 1 offset 0",
          "876: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "877: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "878: |     96: 00 00 00 00 0d 00 00 00 04 0e e2 00 0f 96 0f 44   ...............D",
          "879: |    112: 0f 10 0e e2 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "880: |   3808: 00 00 2c 14 06 17 15 11 01 41 69 6e 64 65 78 74   ..,......Aindext",
          "881: |   3824: 41 78 33 74 31 06 43 52 45 41 54 45 20 49 4e 44   Ax3t1.CREATE IND",
          "882: |   3840: 45 58 20 74 31 78 32 20 4f 4e 20 74 31 28 62 29   EX t1x2 ON t1(b)",
          "883: |   3856: 32 03 06 17 15 11 01 4d 69 6e 64 65 78 74 31 88   2......Mindext1.",
          "884: |   3872: 31 74 31 05 43 52 45 41 54 45 20 49 4e 44 45 58   1t1.CREATE INDEX",
          "885: |   3888: 20 74 31 78 31 20 4f 4e 20 74 31 28 67 2b 68 2c    t1x1 ON t1(g+h,",
          "886: |   3904: 6a 2d 6b 29 50 02 06 17 2b 2b 01 59 74 61 62 6c   j-k)P...++.Ytabl",
          "887: |   3920: 65 73 71 6c 69 74 65 5e 73 65 71 74 65 6e 63 65   esqlite^seqtence",
          "888: |   3936: 73 71 6c 69 74 65 5f 73 65 71 75 65 6e 63 65 04   sqlite_sequence.",
          "889: |   3952: 43 52 45 41 54 45 20 54 41 42 4c 45 20 73 71 6c   CREATE TABLE sql",
          "890: |   3968: 69 74 65 5f 73 65 71 75 65 6e 63 65 28 6e 61 6d   ite_sequence(nam",
          "891: |   3984: 65 2c 73 65 71 29 68 00 07 17 11 11 01 81 3b 74   e,seq)h.......;t",
          "892: |   4000: 61 62 6c 65 74 31 74 31 03 43 52 45 41 54 45 20   ablet1t1.CREATE",
          "893: |   4016: 54 41 42 4c 45 20 74 31 28 61 20 49 4e 54 45 47   TABLE t1(a INTEG",
          "894: |   4032: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 20 41   ER PRIMARY KEY A",
          "895: |   4048: 55 54 4f 49 4e 43 52 45 4d 45 4e 54 2c 0a 62 2c   UTOINCREMENT,.b,",
          "896: |   4064: 63 2c 64 2c 65 2c 66 2c 67 2c 68 2c 6a 2c 6b 2c   c,d,e,f,g,h,j,k,",
          "897: |   4080: 6c 2c 6d 2c 6e 2c 6f 2c 70 2c 71 2c 72 2c 73 29   l,m,n,o,p,q,r,s)",
          "898: | page 2 offset 4096",
          "899: |      0: 01 00 00 00 00 01 00 00 10 00 01 00 00 00 00 01   ................",
          "900: |     16: 00 00 00 00 02 00 0f f0 00 15 00 00 00 03 02 00   ................",
          "901: |     32: 00 00 d9 05 00 00 00 03 02 00 00 00 00 05 00 00   ................",
          "902: |     48: 10 03 02 00 00 00 00 05 00 00 00 03 02 00 00 00   ................",
          "903: |     64: 00 05 00 00 00 02 62 00 00 00 00 05 00 00 00 03   ......b.........",
          "904: |     80: 02 00 00 00 00 05 00 00 00 03 02 00 00 00 00 05   ................",
          "905: |     96: 00 00 00 03 02 00 00 00 00 05 00 00 00 03 05 00   ................",
          "906: |    112: 00 00 03 03 01 00 00 23 02 00 00 4f 00 02 00 00   .......#...O....",
          "907: |    128: 10 25 02 00 00 00 00 03 00 00 00 23 02 00 00 00   .%.........#....",
          "908: |    144: 00 03 00 00 00 23 02 00 00 00 00 03 00 00 00 23   .....#.........#",
          "909: |    160: 05 00 08 90 06 05 00 00 00 06 01 ff 00 00 00 03   ................",
          "910: |    176: 00 00 00 06 02 00 00 00 00 02 ff 00 00 00 00 00   ................",
          "911: | page 3 offset 8192",
          "912: |      0: 05 00 00 00 09 0f d0 00 00 00 00 19 0f fb 0f f6   ................",
          "913: |     16: 0f f1 10 ec ec e7 0f e2 0f dc 0f d6 0f 00 00 00   ................",
          "914: |   1072: 00 97 4c 0a 24 00 ae 00 00 00 00 00 00 00 00 00   ..L.$...........",
          "915: |   4048: 00 00 00 16 83 39 ff ff ff 14 81 16 00 00 00 12   .....9..........",
          "916: |   4064: 81 02 00 00 00 10 6e 00 00 00 0e 5a 00 00 00 0c   ......n....Z....",
          "917: |   4080: 46 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   F...............",
          "918: | page 4 offset 12288",
          "919: |   1072: 97 4d 32 14 00 ae 00 00 00 00 00 00 00 00 00 00   .M2.............",
          "920: |   4080: 00 00 00 00 00 00 00 07 01 03 11 02 74 31 00 bd   ............t1..",
          "921: | page 5 offset 16384",
          "922: |      0: fa 0f 7c 00 0a 0f 74 00 0f f9 0f eb 0f dd 0f cf   ..|...t.........",
          "923: |     16: 0f c1 0f b3 0f a4 0e 94 0f 84 0f 74 0f 74 0f 74   ...........t.t.t",
          "924: |     32: 0f 74 0f 64 0f 00 00 00 00 00 00 00 00 00 00 00   .t.d............",
          "925: |   3952: 00 00 00 00 07 05 00 00 00 02 00 be 0f 8c 10 07   ................",
          "926: |   3968: ff ff 00 00 07 05 00 00 00 02 00 aa 0f 9b f0 08   ................",
          "927: |   3984: c8 00 00 00 37 06 00 00 00 01 00 96 0f ac 00 08   ....7...........",
          "928: |   4000: 00 00 00 b3 07 15 00 10 00 02 00 82 0f ba 00 07   ................",
          "929: |   4016: 00 00 00 06 05 00 00 00 01 6e 0f c8 00 07 00 00   .........n......",
          "930: |   4032: 00 06 05 00 00 00 01 5a 03 f6 00 07 00 00 00 06   .......Z........",
          "931: |   4048: 05 00 00 00 01 46 0f e4 00 07 00 00 10 06 05 00   .....F..........",
          "932: |   4064: 00 00 01 32 10 02 00 07 00 00 00 07 05 00 00 00   ...2............",
          "933: |   4080: 01 1d ff ff ff 07 10 00 00 06 05 00 00 00 01 0a   ................",
          "934: | page 6 offset 20480",
          "935: |    624: 00 00 00 00 00 21 97 00 00 00 00 00 00 00 00 00   .....!..........",
          "936: |   1120: 00 00 00 00 00 24 57 3e 00 00 00 00 00 00 00 00   .....$W>........",
          "937: |   1616: 00 00 00 00 1f 97 00 00 00 00 00 00 00 00 00 00   ................",
          "938: |   2112: 00 00 00 1e 97 3d 00 00 00 00 00 00 00 00 00 00   .....=..........",
          "939: |   2608: 00 1d 97 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "940: | page 8 offset 28672",
          "941: |   1184: 00 00 00 00 00 00 00 00 00 97 4d 1e 13 ff ae 7c   ..........M....|",
          "942: |   4080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 90   ................",
          "943: | page 9 offset 32768",
          "944: |    256: 0d 01 c0 00 01 04 30 00 04 30 00 00 00 00 00 00   ......0..0......",
          "945: | page 10 offset 36864",
          "946: |      0: 0d 00 22 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "947: |   4080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 05   ................",
          "948: | page 12 offset 45056",
          "949: |      0: 0d 00 00 00 01 04 30 00 00 00 00 00 00 00 00 00   ......0.........",
          "950: | page 14 offset 53248",
          "951: |      0: 0d 00 00 00 01 04 30 00 04 30 00 00 00 00 00 00   ......0..0......",
          "952: |   1072: 96 4d 5a 14 00 00 00 00 00 00 00 00 00 00 00 00   .MZ.............",
          "953: | page 16 offset 61440",
          "954: |      0: 0d 00 00 00 01 04 30 00 04 30 00 00 00 00 00 00   ......0..0......",
          "955: |   1072: 97 4d 6e 14 00 ae 7b ff ff ff ff 00 00 00 00 00   .Mn.............",
          "956: | page 18 offset 69632",
          "957: |   1056: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 97   ................",
          "958: |   1072: 4d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   M...............",
          "959: |   4080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0d   ................",
          "960: | page 20 offset 77824",
          "961: |   1056: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 97   ................",
          "962: |   1072: 4d 81 16 14 00 ae 00 00 00 00 00 00 00 00 00 00   M...............",
          "963: |   4080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0f   ................",
          "964: | page 22 offset 86016",
          "965: |      0: 0d 00 00 00 01 04 2f 00 04 2f 01 00 00 00 00 00   ....../../......",
          "966: |   1056: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 97   ................",
          "967: |   1072: 4d 81 2a 14 00 00 00 00 00 00 00 00 00 00 00 00   M.*.............",
          "968: | page 24 offset 94208",
          "969: |   1072: 00 97 4c 0a 14 00 ae 7c 00 00 00 00 00 00 00 00   ..L....|........",
          "970: | page 25 offset 98304",
          "971: |   1056: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 97   ................",
          "972: |   1072: 4d 81 3e 14 00 ae 7c 00 00 18 ff 00 00 00 00 00   M.>...|.........",
          "973: | page 27 offset 106496",
          "974: |      0: 00 00 00 00 00 00 00 12 00 00 00 07 00 00 00 1d   ................",
          "975: |     16: 00 00 00 09 00 00 00 1f 00 00 00 0b 00 00 00 21   ...............!",
          "976: |     32: 00 00 00 0d 00 10 00 25 00 00 00 0f 00 00 00 27   .......%.......'",
          "977: |     48: 00 00 00 11 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "978: | page 32 offset 126976",
          "979: |   2512: 00 00 00 00 00 00 00 45 21 00 00 00 00 00 00 00   .......E!.......",
          "980: | page 35 offset 139264",
          "981: |      0: 00 0a 08 44 00 05 02 77 00 0e 11 0a 92 00 00 00   ...D...w........",
          "982: |   1120: 00 00 00 00 00 20 97 00 00 00 00 00 00 00 00 00   ..... ..........",
          "983: |   1616: 00 00 00 00 22 00 00 00 00 00 00 00 00 00 00 00   ................",
          "984: |   2608: 00 00 00 97 3d 04 00 00 00 00 00 00 00 00 00 00   ....=...........",
          "985: |   3104: 00 1c 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "986: |   3600: 00 97 3d 04 ae 7c 00 00 00 00 00 00 00 00 00 00   ..=..|..........",
          "987: |   4080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1a   ................",
          "988: | page 36 offset 143360",
          "989: |      0: 0a 08 44 00 04 02 00 00 00 00 00 00 00 00 00 00   ..D.............",
          "990: |   1120: 00 00 00 00 00 2a 97 3e 04 00 00 00 00 00 00 00   .....*.>........",
          "991: |   1616: 00 00 00 00 2c 97 3e 00 00 00 00 00 00 00 00 00   ....,.>.........",
          "992: |   2112: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 38   ...............8",
          "993: |   2128: 00 00 05 cd 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "994: |   3600: 00 97 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "995: | page 38 offset 151552",
          "996: |   2464: 00 00 00 00 00 00 00 00 00 6e 00 00 00 00 00 00   .........n......",
          "997: | page 40 offset 159744",
          "998: |   2512: 00 00 00 00 00 00 00 00 82 00 00 00 00 00 00 00   ................",
          "999: | page 42 offset 167936",
          "1000: |   2512: 00 00 00 00 00 00 00 96 00 00 00 00 00 00 00 00   ................",
          "1001: | page 44 offset 176128",
          "1002: |   2512: 00 00 00 00 00 00 00 00 aa 00 00 00 00 00 00 00   ................",
          "1003: | end crash-41390d95d613b6.db",
          "1004: }]} {}",
          "1006: do_catchsql_test 10.1 {",
          "1007:   SELECT * FROM t1 WHERE a<='2019-05-09' ORDER BY a DESC;",
          "1008: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c51cf8642f867050c8cb9e330582605dabeff76c",
      "candidate_info": {
        "commit_hash": "c51cf8642f867050c8cb9e330582605dabeff76c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c51cf8642f867050c8cb9e330582605dabeff76c",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "A new implementation for the sqlite3ExprImpliesExpr() theorem prover that does a better job of answering TRUE to \"(NOT A) OR B\" when B is a NOT NULL expression.\n\nFossilOrigin-Name: b3413197f57711f04102d8cc6ff1e8ddbe0f5f2bcb6e1989cf314fa97f0ff7f1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1b24303220b7b4f59520176a0150fc619c668865450b4fdaa9ce4113a56e9687",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4908:              iTab);",
          "4909: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4914: static int exprImpliesNotNull(",
          "4920: ){",
          "4921:   assert( p );",
          "4922:   assert( pNN );",
          "4923:   if( sqlite3ExprCompare(pParse, p, pNN, iTab)==0 ) return 1;",
          "4924:   switch( p->op ){",
          "4925:     case TK_IN: {",
          "4926:       if( seenNot && ExprHasProperty(p, EP_xIsSelect) ) return 0;",
          "4927:       assert( ExprHasProperty(p,EP_xIsSelect)",
          "4928:            || (p->x.pList!=0 && p->x.pList->nExpr>0) );",
          "4929:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, seenNot);",
          "4930:     }",
          "4931:     case TK_BETWEEN: {",
          "4932:       ExprList *pList = p->x.pList;",
          "4933:       assert( pList!=0 );",
          "4934:       assert( pList->nExpr==2 );",
          "4935:       if( seenNot ) return 0;",
          "4936:       if( exprImpliesNotNull(pParse, pList->a[0].pExpr, pNN, iTab, seenNot)",
          "4937:        || exprImpliesNotNull(pParse, pList->a[1].pExpr, pNN, iTab, seenNot)",
          "4938:       ){",
          "4939:         return 1;",
          "4940:       }",
          "4941:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, seenNot);",
          "4942:     }",
          "4943:     case TK_EQ:",
          "4944:     case TK_NE:",
          "4945:     case TK_LT:",
          "4946:     case TK_LE:",
          "4947:     case TK_GT:",
          "4948:     case TK_GE:",
          "4949:     case TK_PLUS:",
          "4950:     case TK_MINUS:",
          "4951:     case TK_STAR:",
          "4952:     case TK_REM:",
          "4953:     case TK_BITAND:",
          "4954:     case TK_BITOR:",
          "4955:     case TK_SLASH:",
          "4956:     case TK_LSHIFT:",
          "4957:     case TK_RSHIFT:",
          "4958:     case TK_CONCAT: {",
          "4959:       if( exprImpliesNotNull(pParse, p->pRight, pNN, iTab, seenNot) ) return 1;",
          "4961:     }",
          "4962:     case TK_SPAN:",
          "4963:     case TK_COLLATE:",
          "4964:     case TK_BITNOT:",
          "4965:     case TK_UPLUS:",
          "4966:     case TK_UMINUS: {",
          "4967:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, seenNot);",
          "4968:     }",
          "4969:     case TK_TRUTH: {",
          "4970:       if( seenNot ) return 0;",
          "4971:       if( p->op2!=TK_IS ) return 0;",
          "4972:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, seenNot);",
          "4973:     }",
          "4974:     case TK_NOT: {",
          "4975:       return exprImpliesNotNull(pParse, p->pLeft, pNN, iTab, 1);",
          "4976:     }",
          "4977:   }",
          "4978:   return 0;",
          "4979: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4944:     return 1;",
          "4945:   }",
          "4946:   if( pE2->op==TK_NOTNULL",
          "4952:   ){",
          "4956:   }",
          "4957:   return 0;",
          "4958: }",
          "",
          "[Removed Lines]",
          "4947:    && pE1->op!=TK_ISNULL",
          "4948:    && pE1->op!=TK_IS",
          "4949:    && pE1->op!=TK_ISNOT",
          "4950:    && pE1->op!=TK_OR",
          "4951:    && pE1->op!=TK_CASE",
          "4953:     Expr *pX = sqlite3ExprSkipCollate(pE1->pLeft);",
          "4954:     testcase( pX!=pE1->pLeft );",
          "4955:     if( sqlite3ExprCompare(pParse, pX, pE2->pLeft, iTab)==0 ) return 1;",
          "",
          "[Added Lines]",
          "5017:    && exprImpliesNotNull(pParse, pE1, pE2->pLeft, iTab, 0)",
          "5019:     return 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b9b71dbfd4066df5d62fd59c1f5350faca74fcd4",
      "candidate_info": {
        "commit_hash": "b9b71dbfd4066df5d62fd59c1f5350faca74fcd4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b9b71dbfd4066df5d62fd59c1f5350faca74fcd4",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix a bug preventing .recover from working on databases where the final page of the db is corrupt.\n\nFossilOrigin-Name: 959bbd11e92cc789973daf20dfcb8a6d8dc724dd603b286cbdd59e5d1fdb2909",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a50768314d10d743a0cc013b434b516f0763e0a6c5b79655d8fefde7de53e869",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "6373:   int rc = SQLITE_OK;",
          "",
          "[Removed Lines]",
          "6372: static int recoverDatabaseCmd(ShellState *pState){",
          "",
          "[Added Lines]",
          "6372: static int recoverDatabaseCmd(ShellState *pState, int nArg, char **azArg){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6408:     \"WITH pages(i, maxlen) AS (\"",
          "6411:     \"    UNION ALL\"",
          "6412:     \"  SELECT i-1, (\"",
          "6413:     \"    SELECT max(field+1) FROM sqlite_dbdata WHERE pgno=i-1\"",
          "",
          "[Removed Lines]",
          "6409:     \"  SELECT page_count, max(field+1) \"",
          "6410:     \"      FROM pragma_page_count, sqlite_dbdata WHERE pgno=page_count\"",
          "",
          "[Added Lines]",
          "6409:     \"  SELECT page_count, (\"",
          "6410:     \"    SELECT max(field+1) FROM sqlite_dbdata WHERE pgno=page_count\"",
          "6411:     \"  ) FROM pragma_page_count\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6832:   if( c=='r' && strncmp(azArg[0], \"recover\", n)==0 ){",
          "6833:     open_db(p, 0);",
          "6835:   }else",
          "6837:   if( c=='d' && strncmp(azArg[0], \"dump\", n)==0 ){",
          "",
          "[Removed Lines]",
          "6834:     rc = recoverDatabaseCmd(p);",
          "",
          "[Added Lines]",
          "6835:     rc = recoverDatabaseCmd(p, nArg, azArg);",
          "",
          "---------------"
        ]
      }
    }
  ]
}