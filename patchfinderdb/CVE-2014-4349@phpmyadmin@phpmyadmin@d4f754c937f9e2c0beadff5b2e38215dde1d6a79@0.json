{
  "cve_id": "CVE-2014-4349",
  "cve_desc": "Multiple cross-site scripting (XSS) vulnerabilities in phpMyAdmin 4.1.x before 4.1.14.1 and 4.2.x before 4.2.4 allow remote authenticated users to inject arbitrary web script or HTML via a crafted table name that is improperly handled after a (1) hide or (2) unhide action.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "d4f754c937f9e2c0beadff5b2e38215dde1d6a79",
  "patch_info": {
    "commit_hash": "d4f754c937f9e2c0beadff5b2e38215dde1d6a79",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/d4f754c937f9e2c0beadff5b2e38215dde1d6a79",
    "files": [
      "libraries/navigation/Navigation.class.php",
      "libraries/navigation/Nodes/Node_DatabaseChild.class.php"
    ],
    "message": "Fix XSS in Hide navigation items feature\n\nSigned-off-by: Ann + J.M <phpMyAdmin@ZweiSteinSoft.de>",
    "before_after_code_files": [
      "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php",
      "libraries/navigation/Nodes/Node_DatabaseChild.class.php||libraries/navigation/Nodes/Node_DatabaseChild.class.php"
    ]
  },
  "patch_diff": {
    "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php": [
      "File: libraries/navigation/Navigation.class.php -> libraries/navigation/Navigation.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "189:                         $html .= '<td style=\"width:80px\"><a href=\"navigation.php?'",
      "190:                             . PMA_URL_getCommon()",
      "191:                             . '&unhideNavItem=true'",
      "195:                             . ' class=\"unhideNavItem ajax\">'",
      "196:                             . PMA_Util::getIcon('lightbulb.png', __('Show'))",
      "197:                             .  '</a></td>';",
      "",
      "[Removed Lines]",
      "192:                             . '&itemType=' . $t",
      "193:                             . '&itemName=' . urldecode($hiddenItem)",
      "194:                             . '&dbName=' . urldecode($dbName) . '\"'",
      "",
      "[Added Lines]",
      "192:                             . '&itemType=' . urlencode($t)",
      "193:                             . '&itemName=' . urlencode($hiddenItem)",
      "194:                             . '&dbName=' . urlencode($dbName) . '\"'",
      "",
      "---------------"
    ],
    "libraries/navigation/Nodes/Node_DatabaseChild.class.php||libraries/navigation/Nodes/Node_DatabaseChild.class.php": [
      "File: libraries/navigation/Nodes/Node_DatabaseChild.class.php -> libraries/navigation/Nodes/Node_DatabaseChild.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "32:                 . '<a href=\"navigation.php?'",
      "33:                 . PMA_URL_getCommon()",
      "34:                 . '&hideNavItem=true'",
      "38:                 . ' class=\"hideNavItem ajax\">'",
      "39:                 . PMA_Util::getImage('lightbulb_off.png', __('Hide'))",
      "40:                 . '</a></span>';",
      "",
      "[Removed Lines]",
      "35:                 . '&itemType=' . urldecode($this->getItemType())",
      "36:                 . '&itemName=' . urldecode($item)",
      "37:                 . '&dbName=' . urldecode($db) . '\"'",
      "",
      "[Added Lines]",
      "35:                 . '&itemType=' . urlencode($this->getItemType())",
      "36:                 . '&itemName=' . urlencode($item)",
      "37:                 . '&dbName=' . urlencode($db) . '\"'",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "56b5c8e294bc7b8a91eed65b641b7f71e2e45e3f",
      "candidate_info": {
        "commit_hash": "56b5c8e294bc7b8a91eed65b641b7f71e2e45e3f",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/56b5c8e294bc7b8a91eed65b641b7f71e2e45e3f",
        "files": [
          "js/navigation.js",
          "libraries/navigation/Navigation.class.php",
          "libraries/navigation/Nodes/Node_Database.class.php",
          "libraries/navigation/Nodes/Node_Event.class.php",
          "libraries/navigation/Nodes/Node_Function.class.php",
          "libraries/navigation/Nodes/Node_Procedure.class.php",
          "libraries/navigation/Nodes/Node_Table.class.php",
          "libraries/navigation/Nodes/Node_View.class.php"
        ],
        "message": "Extend navigation tree item hiding to functions. procedures, events and views",
        "before_after_code_files": [
          "js/navigation.js||js/navigation.js",
          "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php",
          "libraries/navigation/Nodes/Node_Database.class.php||libraries/navigation/Nodes/Node_Database.class.php",
          "libraries/navigation/Nodes/Node_Event.class.php||libraries/navigation/Nodes/Node_Event.class.php",
          "libraries/navigation/Nodes/Node_Function.class.php||libraries/navigation/Nodes/Node_Function.class.php",
          "libraries/navigation/Nodes/Node_Procedure.class.php||libraries/navigation/Nodes/Node_Procedure.class.php",
          "libraries/navigation/Nodes/Node_Table.class.php||libraries/navigation/Nodes/Node_Table.class.php",
          "libraries/navigation/Nodes/Node_View.class.php||libraries/navigation/Nodes/Node_View.class.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php"
          ],
          "candidate": [
            "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php"
          ]
        }
      },
      "candidate_diff": {
        "js/navigation.js||js/navigation.js": [
          "File: js/navigation.js -> js/navigation.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:         dialog.editorDialog(0, $(this));",
          "180:     });",
          "190:     $('li.new_index a.ajax').live('click', function (event) {",
          "191:         event.preventDefault();",
          "",
          "[Removed Lines]",
          "183:     $('li.procedure a.ajax img, li.function a.ajax img, li.trigger a.ajax img, li.event a.ajax img').live('click', function (event) {",
          "184:         event.preventDefault();",
          "185:         var dialog = new RTE.object();",
          "186:         dialog.exportDialog($(this).parent());",
          "187:     });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "213:     });",
          "217:         event.preventDefault();",
          "218:         $.ajax({",
          "219:             url: $(this).attr('href') + '&ajax_request=true',",
          "",
          "[Removed Lines]",
          "216:     $('.hideNavItem').live('click', function (event) {",
          "",
          "[Added Lines]",
          "209:     $('a.hideNavItem.ajax').live('click', function (event) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "228:     });",
          "232:         event.preventDefault();",
          "233:         var $msg = PMA_ajaxShowMessage();",
          "234:         $.get($(this).attr('href') + '&ajax_request=1', function (data) {",
          "",
          "[Removed Lines]",
          "231:     $('.showUnhide').live('click', function (event) {",
          "",
          "[Added Lines]",
          "224:     $('a.showUnhide.ajax').live('click', function (event) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "258:     });",
          "262:         event.preventDefault();",
          "263:         var $tr = $(this).parents('tr');",
          "264:         var $msg = PMA_ajaxShowMessage();",
          "",
          "[Removed Lines]",
          "261:     $('.unhideNavItem').live('click', function (event) {",
          "",
          "[Added Lines]",
          "254:     $('a.unhideNavItem.ajax').live('click', function (event) {",
          "",
          "---------------"
        ],
        "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php": [
          "File: libraries/navigation/Navigation.class.php -> libraries/navigation/Navigation.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:             . \"'\" . PMA_Util::sqlAddSlashes($dbName) . \"',\"",
          "99:             . \"'\" . (! empty($tableName)? PMA_Util::sqlAddSlashes($tableName) : \"\" )",
          "100:             . \"')\";",
          "102:     }",
          "",
          "[Removed Lines]",
          "101:         PMA_queryAsControlUser($sqlQuery, true);",
          "",
          "[Added Lines]",
          "101:         PMA_queryAsControlUser($sqlQuery, false);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "128:                 ? \" AND `table_name`='\" . PMA_Util::sqlAddSlashes($tableName) . \"'\"",
          "129:                 : \"\"",
          "130:             );",
          "132:     }",
          "",
          "[Removed Lines]",
          "131:         PMA_queryAsControlUser($sqlQuery, true);",
          "",
          "[Added Lines]",
          "131:         PMA_queryAsControlUser($sqlQuery, false);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "154:             . \" AND `db_name`='\" . PMA_Util::sqlAddSlashes($dbName) . \"'\"",
          "155:             . \" AND `table_name`='\"",
          "156:             . (! empty($tableName) ? PMA_Util::sqlAddSlashes($tableName) : '') . \"'\";",
          "159:         $hidden = array();",
          "160:         if ($result) {",
          "",
          "[Removed Lines]",
          "157:         $result = PMA_queryAsControlUser($sqlQuery, true);",
          "",
          "[Added Lines]",
          "157:         $result = PMA_queryAsControlUser($sqlQuery, false);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "168:         }",
          "169:         $GLOBALS['dbi']->freeResult($result);",
          "171:         if (empty($tableName)) {",
          "189:                 }",
          "191:             }",
          "192:         }",
          "",
          "[Removed Lines]",
          "172:             if ((empty($itemType) || $itemType == 'table')",
          "173:                 && isset($hidden['table'])",
          "174:             ) {",
          "175:                 $html .= '<h4>' . __('Tables:') . '</h4>';",
          "176:                 $html .= '<table width=\"100%\"><tbody>';",
          "177:                 $odd = true;",
          "178:                 foreach ($hidden['table'] as $hiddenTable) {",
          "179:                     $html .= '<tr class=\"' . ($odd ? 'odd' : 'even') . '\">';",
          "180:                     $html .= '<td>' . $hiddenTable . '</td>';",
          "181:                     $html .= '<td><a href=\"navigation.php?'",
          "182:                         . PMA_generate_common_url()",
          "183:                         . '&unhideNavItem=true&itemType=table'",
          "184:                         . '&itemName=' . urldecode($hiddenTable)",
          "185:                         . '&dbName=' . urldecode($dbName) . '\"'",
          "186:                         . ' class=\"unhideNavItem ajax\">'",
          "187:                         . PMA_Util::getIcon('b_undo.png', __('Unhide'))",
          "188:                         .  '</a></td>';",
          "190:                 $html .= '</tbody></table>';",
          "",
          "[Added Lines]",
          "171:         $typeMap = array(",
          "172:             'event' => __('Events:'),",
          "173:             'function' => __('Functions:'),",
          "174:             'procedure' => __('Procedures:'),",
          "175:             'table' => __('Tables:'),",
          "176:             'view' => __('Views:'),",
          "177:         );",
          "179:             foreach ($typeMap as $t => $lable) {",
          "180:                 if ((empty($itemType) || $itemType == $t)",
          "181:                     && isset($hidden[$t])",
          "182:                 ) {",
          "183:                     $html .= '<h4>' . $lable . '</h4>';",
          "184:                     $html .= '<table width=\"100%\"><tbody>';",
          "185:                     $odd = true;",
          "186:                     foreach ($hidden[$t] as $hiddenItem) {",
          "187:                         $html .= '<tr class=\"' . ($odd ? 'odd' : 'even') . '\">';",
          "188:                         $html .= '<td>' . $hiddenItem . '</td>';",
          "189:                         $html .= '<td style=\"width:80px\"><a href=\"navigation.php?'",
          "190:                             . PMA_generate_common_url()",
          "191:                             . '&unhideNavItem=true'",
          "192:                             . '&itemType=' . $t",
          "193:                             . '&itemName=' . urldecode($hiddenItem)",
          "194:                             . '&dbName=' . urldecode($dbName) . '\"'",
          "195:                             . ' class=\"unhideNavItem ajax\">'",
          "196:                             . PMA_Util::getIcon('b_undo.png', __('Unhide'))",
          "197:                             .  '</a></td>';",
          "198:                     }",
          "199:                     $html .= '</tbody></table>';",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Database.class.php||libraries/navigation/Nodes/Node_Database.class.php": [
          "File: libraries/navigation/Nodes/Node_Database.class.php -> libraries/navigation/Nodes/Node_Database.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "234:         switch ($type) {",
          "235:         case 'tables':",
          "236:             if (! $GLOBALS['cfg']['Servers'][$GLOBALS['server']]['DisableIS']) {",
          "238:                 $query  = \"SELECT `TABLE_NAME` AS `name` \";",
          "239:                 $query .= \"FROM `INFORMATION_SCHEMA`.`TABLES` \";",
          "241:                 $query .= \"AND `TABLE_TYPE`='BASE TABLE' \";",
          "242:                 if (! empty($searchClause)) {",
          "243:                     $query .= \"AND `TABLE_NAME` LIKE '%\";",
          "",
          "[Removed Lines]",
          "237:                 $db     = PMA_Util::sqlAddSlashes($db);",
          "240:                 $query .= \"WHERE `TABLE_SCHEMA`='$db' \";",
          "",
          "[Added Lines]",
          "237:                 $escdDb = PMA_Util::sqlAddSlashes($db);",
          "240:                 $query .= \"WHERE `TABLE_SCHEMA`='$escdDb' \";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "277:             break;",
          "278:         case 'views':",
          "279:             if (! $GLOBALS['cfg']['Servers'][$GLOBALS['server']]['DisableIS']) {",
          "281:                 $query  = \"SELECT `TABLE_NAME` AS `name` \";",
          "282:                 $query .= \"FROM `INFORMATION_SCHEMA`.`TABLES` \";",
          "284:                 $query .= \"AND `TABLE_TYPE`!='BASE TABLE' \";",
          "285:                 if (! empty($searchClause)) {",
          "286:                     $query .= \"AND `TABLE_NAME` LIKE '%\";",
          "",
          "[Removed Lines]",
          "280:                 $db     = PMA_Util::sqlAddSlashes($db);",
          "283:                 $query .= \"WHERE `TABLE_SCHEMA`='$db' \";",
          "",
          "[Added Lines]",
          "280:                 $escdDb = PMA_Util::sqlAddSlashes($db);",
          "283:                 $query .= \"WHERE `TABLE_SCHEMA`='$escdDb' \";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "320:             break;",
          "321:         case 'procedures':",
          "322:             if (! $GLOBALS['cfg']['Servers'][$GLOBALS['server']]['DisableIS']) {",
          "324:                 $query  = \"SELECT `ROUTINE_NAME` AS `name` \";",
          "325:                 $query .= \"FROM `INFORMATION_SCHEMA`.`ROUTINES` \";",
          "327:                 $query .= \"AND `ROUTINE_TYPE`='PROCEDURE' \";",
          "328:                 if (! empty($searchClause)) {",
          "329:                     $query .= \"AND `ROUTINE_NAME` LIKE '%\";",
          "",
          "[Removed Lines]",
          "323:                 $db     = PMA_Util::sqlAddSlashes($db);",
          "326:                 $query .= \"WHERE `ROUTINE_SCHEMA`='$db'\";",
          "",
          "[Added Lines]",
          "323:                 $escdDb = PMA_Util::sqlAddSlashes($db);",
          "326:                 $query .= \"WHERE `ROUTINE_SCHEMA`='$escdDb'\";",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "336:                 $query .= \"LIMIT \" . intval($pos) . \", $maxItems\";",
          "337:                 $retval = $GLOBALS['dbi']->fetchResult($query);",
          "338:             } else {",
          "341:                 if (! empty($searchClause)) {",
          "342:                     $query .= \"AND `Name` LIKE '%\";",
          "343:                     $query .= PMA_Util::sqlAddSlashes(",
          "",
          "[Removed Lines]",
          "339:                 $db    = PMA_Util::sqlAddSlashes($db);",
          "340:                 $query = \"SHOW PROCEDURE STATUS WHERE `Db`='$db' \";",
          "",
          "[Added Lines]",
          "339:                 $escdDb = PMA_Util::sqlAddSlashes($db);",
          "340:                 $query  = \"SHOW PROCEDURE STATUS WHERE `Db`='$escdDb' \";",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "360:             break;",
          "361:         case 'functions':",
          "362:             if (! $GLOBALS['cfg']['Servers'][$GLOBALS['server']]['DisableIS']) {",
          "364:                 $query  = \"SELECT `ROUTINE_NAME` AS `name` \";",
          "365:                 $query .= \"FROM `INFORMATION_SCHEMA`.`ROUTINES` \";",
          "367:                 $query .= \"AND `ROUTINE_TYPE`='FUNCTION' \";",
          "368:                 if (! empty($searchClause)) {",
          "369:                     $query .= \"AND `ROUTINE_NAME` LIKE '%\";",
          "",
          "[Removed Lines]",
          "363:                 $db     = PMA_Util::sqlAddSlashes($db);",
          "366:                 $query .= \"WHERE `ROUTINE_SCHEMA`='$db' \";",
          "",
          "[Added Lines]",
          "363:                 $escdDb = PMA_Util::sqlAddSlashes($db);",
          "366:                 $query .= \"WHERE `ROUTINE_SCHEMA`='$escdDb' \";",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "376:                 $query .= \"LIMIT \" . intval($pos) . \", $maxItems\";",
          "377:                 $retval = $GLOBALS['dbi']->fetchResult($query);",
          "378:             } else {",
          "381:                 if (! empty($searchClause)) {",
          "382:                     $query .= \"AND `Name` LIKE '%\";",
          "383:                     $query .= PMA_Util::sqlAddSlashes(",
          "",
          "[Removed Lines]",
          "379:                 $db    = PMA_Util::sqlAddSlashes($db);",
          "380:                 $query = \"SHOW FUNCTION STATUS WHERE `Db`='$db' \";",
          "",
          "[Added Lines]",
          "379:                 $escdDb = PMA_Util::sqlAddSlashes($db);",
          "380:                 $query  = \"SHOW FUNCTION STATUS WHERE `Db`='$escdDb' \";",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "400:             break;",
          "401:         case 'events':",
          "402:             if (! $GLOBALS['cfg']['Servers'][$GLOBALS['server']]['DisableIS']) {",
          "404:                 $query  = \"SELECT `EVENT_NAME` AS `name` \";",
          "405:                 $query .= \"FROM `INFORMATION_SCHEMA`.`EVENTS` \";",
          "407:                 if (! empty($searchClause)) {",
          "408:                     $query .= \"AND `EVENT_NAME` LIKE '%\";",
          "409:                     $query .= PMA_Util::sqlAddSlashes(",
          "",
          "[Removed Lines]",
          "403:                 $db     = PMA_Util::sqlAddSlashes($db);",
          "406:                 $query .= \"WHERE `EVENT_SCHEMA`='$db' \";",
          "",
          "[Added Lines]",
          "403:                 $escdDb = PMA_Util::sqlAddSlashes($db);",
          "406:                 $query .= \"WHERE `EVENT_SCHEMA`='$escdDb' \";",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "415:                 $query .= \"LIMIT \" . intval($pos) . \", $maxItems\";",
          "416:                 $retval = $GLOBALS['dbi']->fetchResult($query);",
          "417:             } else {",
          "420:                 if (! empty($searchClause)) {",
          "421:                     $query .= \"WHERE `Name` LIKE '%\";",
          "422:                     $query .= PMA_Util::sqlAddSlashes(",
          "",
          "[Removed Lines]",
          "418:                 $db    = PMA_Util::backquote($db);",
          "419:                 $query = \"SHOW EVENTS FROM $db \";",
          "",
          "[Added Lines]",
          "418:                 $escdDb = PMA_Util::backquote($db);",
          "419:                 $query  = \"SHOW EVENTS FROM $escdDb \";",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Event.class.php||libraries/navigation/Nodes/Node_Event.class.php": [
          "File: libraries/navigation/Nodes/Node_Event.class.php -> libraries/navigation/Nodes/Node_Event.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:         $query .= \"AND `EVENT_NAME`='$event' \";",
          "62:         return $GLOBALS['dbi']->fetchValue($query);",
          "63:     }",
          "64: }",
          "66: ?>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:     public function getHtmlForControlButtons()",
          "71:     {",
          "72:         $ret = '';",
          "73:         $cfgRelation = PMA_getRelationsParam();",
          "74:         if ($cfgRelation['navwork']) {",
          "75:             $db    = $this->realParent()->real_name;",
          "76:             $event = $this->real_name;",
          "77:             $ret   = '<span class=\"navItemControls\">'",
          "78:                 . '<a href=\"navigation.php?'",
          "79:                 . PMA_generate_common_url()",
          "80:                 . '&hideNavItem=true&itemType=event'",
          "81:                 . '&itemName=' . urldecode($event)",
          "82:                 . '&dbName=' . urldecode($db) . '\"'",
          "83:                 . ' class=\"hideNavItem ajax\">'",
          "84:                 . PMA_Util::getImage('b_close', 'Hide')",
          "85:                 . '</a></span>';",
          "86:         }",
          "87:         return $ret;",
          "88:     }",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Function.class.php||libraries/navigation/Nodes/Node_Function.class.php": [
          "File: libraries/navigation/Nodes/Node_Function.class.php -> libraries/navigation/Nodes/Node_Function.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:         $query .= \"AND `ROUTINE_TYPE`='FUNCTION' \";",
          "63:         return $GLOBALS['dbi']->fetchValue($query);",
          "64:     }",
          "65: }",
          "67: ?>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     public function getHtmlForControlButtons()",
          "72:     {",
          "73:         $ret = '';",
          "74:         $cfgRelation = PMA_getRelationsParam();",
          "75:         if ($cfgRelation['navwork']) {",
          "76:             $db       = $this->realParent()->real_name;",
          "77:             $function = $this->real_name;",
          "78:             $ret      = '<span class=\"navItemControls\">'",
          "79:                 . '<a href=\"navigation.php?'",
          "80:                 . PMA_generate_common_url()",
          "81:                 . '&hideNavItem=true&itemType=function'",
          "82:                 . '&itemName=' . urldecode($function)",
          "83:                 . '&dbName=' . urldecode($db) . '\"'",
          "84:                 . ' class=\"hideNavItem ajax\">'",
          "85:                 . PMA_Util::getImage('b_close', 'Hide')",
          "86:                 . '</a></span>';",
          "87:         }",
          "88:         return $ret;",
          "89:     }",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Procedure.class.php||libraries/navigation/Nodes/Node_Procedure.class.php": [
          "File: libraries/navigation/Nodes/Node_Procedure.class.php -> libraries/navigation/Nodes/Node_Procedure.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:         $query .= \"AND `ROUTINE_TYPE`='PROCEDURE' \";",
          "63:         return $GLOBALS['dbi']->fetchValue($query);",
          "64:     }",
          "65: }",
          "67: ?>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     public function getHtmlForControlButtons()",
          "72:     {",
          "73:         $ret = '';",
          "74:         $cfgRelation = PMA_getRelationsParam();",
          "75:         if ($cfgRelation['navwork']) {",
          "76:             $db        = $this->realParent()->real_name;",
          "77:             $procedure = $this->real_name;",
          "78:             $ret       = '<span class=\"navItemControls\">'",
          "79:                 . '<a href=\"navigation.php?'",
          "80:                 . PMA_generate_common_url()",
          "81:                 . '&hideNavItem=true&itemType=procedure'",
          "82:                 . '&itemName=' . urldecode($procedure)",
          "83:                 . '&dbName=' . urldecode($db) . '\"'",
          "84:                 . ' class=\"hideNavItem ajax\">'",
          "85:                 . PMA_Util::getImage('b_close', 'Hide')",
          "86:                 . '</a></span>';",
          "87:         }",
          "88:         return $ret;",
          "89:     }",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Table.class.php||libraries/navigation/Nodes/Node_Table.class.php": [
          "File: libraries/navigation/Nodes/Node_Table.class.php -> libraries/navigation/Nodes/Node_Table.class.php"
        ],
        "libraries/navigation/Nodes/Node_View.class.php||libraries/navigation/Nodes/Node_View.class.php": [
          "File: libraries/navigation/Nodes/Node_View.class.php -> libraries/navigation/Nodes/Node_View.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:                     . '&amp;token=' . $GLOBALS['token']",
          "40:         );",
          "41:     }",
          "42: }",
          "44: ?>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:     public function getHtmlForControlButtons()",
          "49:     {",
          "50:         $ret = '';",
          "51:         $cfgRelation = PMA_getRelationsParam();",
          "52:         if ($cfgRelation['navwork']) {",
          "53:             $db    = $this->realParent()->real_name;",
          "54:             $view  = $this->real_name;",
          "55:             $ret   = '<span class=\"navItemControls\">'",
          "56:                 . '<a href=\"navigation.php?'",
          "57:                 . PMA_generate_common_url()",
          "58:                 . '&hideNavItem=true&itemType=view'",
          "59:                 . '&itemName=' . urldecode($view)",
          "60:                 . '&dbName=' . urldecode($db) . '\"'",
          "61:                 . ' class=\"hideNavItem ajax\">'",
          "62:                 . PMA_Util::getImage('b_close', 'Hide')",
          "63:                 . '</a></span>';",
          "64:         }",
          "65:         return $ret;",
          "66:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "989161e2bdf7a7e907e4da48beba16433ad6fcb1",
      "candidate_info": {
        "commit_hash": "989161e2bdf7a7e907e4da48beba16433ad6fcb1",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/989161e2bdf7a7e907e4da48beba16433ad6fcb1",
        "files": [
          "libraries/navigation/Nodes/Node_DatabaseChild.class.php",
          "libraries/navigation/Nodes/Node_Event.class.php",
          "libraries/navigation/Nodes/Node_Function.class.php",
          "libraries/navigation/Nodes/Node_Procedure.class.php",
          "libraries/navigation/Nodes/Node_Table.class.php",
          "libraries/navigation/Nodes/Node_View.class.php"
        ],
        "message": "Move common code to a common ancestor",
        "before_after_code_files": [
          "libraries/navigation/Nodes/Node_DatabaseChild.class.php||libraries/navigation/Nodes/Node_DatabaseChild.class.php",
          "libraries/navigation/Nodes/Node_Event.class.php||libraries/navigation/Nodes/Node_Event.class.php",
          "libraries/navigation/Nodes/Node_Function.class.php||libraries/navigation/Nodes/Node_Function.class.php",
          "libraries/navigation/Nodes/Node_Procedure.class.php||libraries/navigation/Nodes/Node_Procedure.class.php",
          "libraries/navigation/Nodes/Node_Table.class.php||libraries/navigation/Nodes/Node_Table.class.php",
          "libraries/navigation/Nodes/Node_View.class.php||libraries/navigation/Nodes/Node_View.class.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/navigation/Nodes/Node_DatabaseChild.class.php||libraries/navigation/Nodes/Node_DatabaseChild.class.php"
          ],
          "candidate": [
            "libraries/navigation/Nodes/Node_DatabaseChild.class.php||libraries/navigation/Nodes/Node_DatabaseChild.class.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/navigation/Nodes/Node_DatabaseChild.class.php||libraries/navigation/Nodes/Node_DatabaseChild.class.php": [
          "File: libraries/navigation/Nodes/Node_DatabaseChild.class.php -> libraries/navigation/Nodes/Node_DatabaseChild.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "8: if (! defined('PHPMYADMIN')) {",
          "9:     exit;",
          "10: }",
          "17: abstract class Node_DatabaseChild extends Node",
          "18: {",
          "24:     public function getHtmlForControlButtons()",
          "25:     {",
          "26:         $ret = '';",
          "27:         $cfgRelation = PMA_getRelationsParam();",
          "28:         if ($cfgRelation['navwork']) {",
          "29:             $db   = $this->realParent()->real_name;",
          "30:             $item = $this->real_name;",
          "31:             $ret  = '<span class=\"navItemControls\">'",
          "32:                 . '<a href=\"navigation.php?'",
          "33:                 . PMA_generate_common_url()",
          "34:                 . '&hideNavItem=true'",
          "35:                 . '&itemType=' . urldecode($this->getItemType())",
          "36:                 . '&itemName=' . urldecode($item)",
          "37:                 . '&dbName=' . urldecode($db) . '\"'",
          "38:                 . ' class=\"hideNavItem ajax\">'",
          "39:                 . PMA_Util::getImage('b_close', 'Hide')",
          "40:                 . '</a></span>';",
          "41:         }",
          "42:         return $ret;",
          "43:     }",
          "50:     protected abstract function getItemType();",
          "51: }",
          "52: ?>",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Event.class.php||libraries/navigation/Nodes/Node_Event.class.php": [
          "File: libraries/navigation/Nodes/Node_Event.class.php -> libraries/navigation/Nodes/Node_Event.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:     exit;",
          "10: }",
          "18: {",
          "",
          "[Removed Lines]",
          "17: class Node_Event extends Node",
          "",
          "[Added Lines]",
          "12: require_once 'libraries/navigation/Nodes/Node_DatabaseChild.class.php';",
          "19: class Node_Event extends Node_DatabaseChild",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:     }",
          "71:     {",
          "88:     }",
          "89: }",
          "",
          "[Removed Lines]",
          "70:     public function getHtmlForControlButtons()",
          "72:         $ret = '';",
          "73:         $cfgRelation = PMA_getRelationsParam();",
          "74:         if ($cfgRelation['navwork']) {",
          "75:             $db    = $this->realParent()->real_name;",
          "76:             $event = $this->real_name;",
          "77:             $ret   = '<span class=\"navItemControls\">'",
          "78:                 . '<a href=\"navigation.php?'",
          "79:                 . PMA_generate_common_url()",
          "80:                 . '&hideNavItem=true&itemType=event'",
          "81:                 . '&itemName=' . urldecode($event)",
          "82:                 . '&dbName=' . urldecode($db) . '\"'",
          "83:                 . ' class=\"hideNavItem ajax\">'",
          "84:                 . PMA_Util::getImage('b_close', 'Hide')",
          "85:                 . '</a></span>';",
          "86:         }",
          "87:         return $ret;",
          "",
          "[Added Lines]",
          "72:     protected function getItemType()",
          "74:         return 'event';",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Function.class.php||libraries/navigation/Nodes/Node_Function.class.php": [
          "File: libraries/navigation/Nodes/Node_Function.class.php -> libraries/navigation/Nodes/Node_Function.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:     exit;",
          "10: }",
          "18: {",
          "",
          "[Removed Lines]",
          "17: class Node_Function extends Node",
          "",
          "[Added Lines]",
          "12: require_once 'libraries/navigation/Nodes/Node_DatabaseChild.class.php';",
          "19: class Node_Function extends Node_DatabaseChild",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:     }",
          "72:     {",
          "89:     }",
          "90: }",
          "",
          "[Removed Lines]",
          "71:     public function getHtmlForControlButtons()",
          "73:         $ret = '';",
          "74:         $cfgRelation = PMA_getRelationsParam();",
          "75:         if ($cfgRelation['navwork']) {",
          "76:             $db       = $this->realParent()->real_name;",
          "77:             $function = $this->real_name;",
          "78:             $ret      = '<span class=\"navItemControls\">'",
          "79:                 . '<a href=\"navigation.php?'",
          "80:                 . PMA_generate_common_url()",
          "81:                 . '&hideNavItem=true&itemType=function'",
          "82:                 . '&itemName=' . urldecode($function)",
          "83:                 . '&dbName=' . urldecode($db) . '\"'",
          "84:                 . ' class=\"hideNavItem ajax\">'",
          "85:                 . PMA_Util::getImage('b_close', 'Hide')",
          "86:                 . '</a></span>';",
          "87:         }",
          "88:         return $ret;",
          "",
          "[Added Lines]",
          "73:     protected function getItemType()",
          "75:         return 'function';",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Procedure.class.php||libraries/navigation/Nodes/Node_Procedure.class.php": [
          "File: libraries/navigation/Nodes/Node_Procedure.class.php -> libraries/navigation/Nodes/Node_Procedure.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:     exit;",
          "10: }",
          "18: {",
          "",
          "[Removed Lines]",
          "17: class Node_Procedure extends Node",
          "",
          "[Added Lines]",
          "12: require_once 'libraries/navigation/Nodes/Node_DatabaseChild.class.php';",
          "19: class Node_Procedure extends Node_DatabaseChild",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:     }",
          "72:     {",
          "89:     }",
          "90: }",
          "",
          "[Removed Lines]",
          "71:     public function getHtmlForControlButtons()",
          "73:         $ret = '';",
          "74:         $cfgRelation = PMA_getRelationsParam();",
          "75:         if ($cfgRelation['navwork']) {",
          "76:             $db        = $this->realParent()->real_name;",
          "77:             $procedure = $this->real_name;",
          "78:             $ret       = '<span class=\"navItemControls\">'",
          "79:                 . '<a href=\"navigation.php?'",
          "80:                 . PMA_generate_common_url()",
          "81:                 . '&hideNavItem=true&itemType=procedure'",
          "82:                 . '&itemName=' . urldecode($procedure)",
          "83:                 . '&dbName=' . urldecode($db) . '\"'",
          "84:                 . ' class=\"hideNavItem ajax\">'",
          "85:                 . PMA_Util::getImage('b_close', 'Hide')",
          "86:                 . '</a></span>';",
          "87:         }",
          "88:         return $ret;",
          "",
          "[Added Lines]",
          "73:     protected function getItemType()",
          "75:         return 'procedure';",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Table.class.php||libraries/navigation/Nodes/Node_Table.class.php": [
          "File: libraries/navigation/Nodes/Node_Table.class.php -> libraries/navigation/Nodes/Node_Table.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:     exit;",
          "10: }",
          "18: {",
          "",
          "[Removed Lines]",
          "17: class Node_Table extends Node",
          "",
          "[Added Lines]",
          "12: require_once 'libraries/navigation/Nodes/Node_DatabaseChild.class.php';",
          "19: class Node_Table extends Node_DatabaseChild",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232:     }",
          "240:     {",
          "257:     }",
          "258: }",
          "",
          "[Removed Lines]",
          "239:     public function getHtmlForControlButtons()",
          "241:         $ret = '';",
          "242:         $cfgRelation = PMA_getRelationsParam();",
          "243:         if ($cfgRelation['navwork']) {",
          "244:             $db    = $this->realParent()->real_name;",
          "245:             $table = $this->real_name;",
          "246:             $ret   = '<span class=\"navItemControls\">'",
          "247:                 . '<a href=\"navigation.php?'",
          "248:                 . PMA_generate_common_url()",
          "249:                 . '&hideNavItem=true&itemType=table'",
          "250:                 . '&itemName=' . urldecode($table)",
          "251:                 . '&dbName=' . urldecode($db) . '\"'",
          "252:                 . ' class=\"hideNavItem ajax\">'",
          "253:                 . PMA_Util::getImage('b_close', 'Hide')",
          "254:                 . '</a></span>';",
          "255:         }",
          "256:         return $ret;",
          "",
          "[Added Lines]",
          "241:     protected function getItemType()",
          "243:         return 'table';",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_View.class.php||libraries/navigation/Nodes/Node_View.class.php": [
          "File: libraries/navigation/Nodes/Node_View.class.php -> libraries/navigation/Nodes/Node_View.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:     exit;",
          "10: }",
          "18: {",
          "",
          "[Removed Lines]",
          "17: class Node_View extends Node",
          "",
          "[Added Lines]",
          "12: require_once 'libraries/navigation/Nodes/Node_DatabaseChild.class.php';",
          "19: class Node_View extends Node_DatabaseChild",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:     }",
          "49:     {",
          "66:     }",
          "67: }",
          "",
          "[Removed Lines]",
          "48:     public function getHtmlForControlButtons()",
          "50:         $ret = '';",
          "51:         $cfgRelation = PMA_getRelationsParam();",
          "52:         if ($cfgRelation['navwork']) {",
          "53:             $db    = $this->realParent()->real_name;",
          "54:             $view  = $this->real_name;",
          "55:             $ret   = '<span class=\"navItemControls\">'",
          "56:                 . '<a href=\"navigation.php?'",
          "57:                 . PMA_generate_common_url()",
          "58:                 . '&hideNavItem=true&itemType=view'",
          "59:                 . '&itemName=' . urldecode($view)",
          "60:                 . '&dbName=' . urldecode($db) . '\"'",
          "61:                 . ' class=\"hideNavItem ajax\">'",
          "62:                 . PMA_Util::getImage('b_close', 'Hide')",
          "63:                 . '</a></span>';",
          "64:         }",
          "65:         return $ret;",
          "",
          "[Added Lines]",
          "50:     protected function getItemType()",
          "52:         return 'view';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1282a3877f5459278399f621f65fe7ecef08da26",
      "candidate_info": {
        "commit_hash": "1282a3877f5459278399f621f65fe7ecef08da26",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/1282a3877f5459278399f621f65fe7ecef08da26",
        "files": [
          "js/messages.php",
          "js/navigation.js",
          "libraries/navigation/Navigation.class.php",
          "libraries/navigation/NavigationTree.class.php",
          "libraries/navigation/Nodes/Node.class.php",
          "libraries/navigation/Nodes/Node_Database.class.php",
          "libraries/navigation/Nodes/Node_Table.class.php",
          "navigation.php",
          "themes/original/css/navigation.css.php",
          "themes/original/img/b_undo.png",
          "themes/pmahomme/css/navigation.css.php",
          "themes/pmahomme/img/b_undo.png"
        ],
        "message": "Add a dialog to unhide hidden navigation tree items",
        "before_after_code_files": [
          "js/messages.php||js/messages.php",
          "js/navigation.js||js/navigation.js",
          "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php",
          "libraries/navigation/NavigationTree.class.php||libraries/navigation/NavigationTree.class.php",
          "libraries/navigation/Nodes/Node.class.php||libraries/navigation/Nodes/Node.class.php",
          "libraries/navigation/Nodes/Node_Database.class.php||libraries/navigation/Nodes/Node_Database.class.php",
          "libraries/navigation/Nodes/Node_Table.class.php||libraries/navigation/Nodes/Node_Table.class.php",
          "navigation.php||navigation.php",
          "themes/original/css/navigation.css.php||themes/original/css/navigation.css.php",
          "themes/pmahomme/css/navigation.css.php||themes/pmahomme/css/navigation.css.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php"
          ],
          "candidate": [
            "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php"
          ]
        }
      },
      "candidate_diff": {
        "js/messages.php||js/messages.php": [
          "File: js/messages.php -> js/messages.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "367: $js_messages['strShowPanel'] = __('Show Panel');",
          "368: $js_messages['strHidePanel'] = __('Hide Panel');",
          "371: $js_messages['strInvalidPage'] = __('The requested page was not found in the history, it may have expired.');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "369: $js_messages['strUnhideNavItem'] = __('Unhide navigation tree items');",
          "",
          "---------------"
        ],
        "js/navigation.js||js/navigation.js": [
          "File: js/navigation.js -> js/navigation.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:             }",
          "227:         });",
          "228:     });",
          "229: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:     $('.showUnhide').live('click', function (event) {",
          "232:         event.preventDefault();",
          "233:         var $msg = PMA_ajaxShowMessage();",
          "234:         $.get($(this).attr('href') + '&ajax_request=1', function (data) {",
          "235:             if (data.success === true) {",
          "236:                 PMA_ajaxRemoveMessage($msg);",
          "237:                 var buttonOptions = {};",
          "238:                 buttonOptions[PMA_messages.strClose] = function () {",
          "239:                     $(this).dialog(\"close\");",
          "240:                 };",
          "241:                 var $dialog = $('<div/>')",
          "242:                     .attr('id', 'unhideNavItemDialog')",
          "243:                     .append(data.message)",
          "244:                     .dialog({",
          "245:                         width: 400,",
          "246:                         minWidth: 200,",
          "247:                         modal: true,",
          "248:                         buttons: buttonOptions,",
          "249:                         title: PMA_messages.strUnhideNavItem,",
          "250:                         close: function () {",
          "251:                             $(this).remove();",
          "252:                         }",
          "253:                 });",
          "254:             } else {",
          "255:                 PMA_ajaxShowMessage(data.error);",
          "256:             }",
          "257:         });",
          "258:     });",
          "261:     $('.unhideNavItem').live('click', function (event) {",
          "262:         event.preventDefault();",
          "263:         var $tr = $(this).parents('tr');",
          "264:         var $msg = PMA_ajaxShowMessage();",
          "265:         $.ajax({",
          "266:             url: $(this).attr('href') + '&ajax_request=true',",
          "267:             success: function(data) {",
          "268:                 PMA_ajaxRemoveMessage($msg);",
          "269:                 if (data.success === true) {",
          "270:                     $tr.remove();",
          "271:                     PMA_reloadNavigation();",
          "272:                 } else {",
          "273:                     PMA_ajaxShowMessage(data.error);",
          "274:                 }",
          "275:             }",
          "276:         });",
          "277:     });",
          "",
          "---------------"
        ],
        "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php": [
          "File: libraries/navigation/Navigation.class.php -> libraries/navigation/Navigation.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:         return $retval;",
          "75:     }",
          "76: }",
          "77: ?>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:     public function hideNavigationItem(",
          "88:         $itemName, $itemType, $dbName, $tableName = null",
          "89:     ) {",
          "90:         $navTable = PMA_Util::backquote($GLOBALS['cfgRelation']['db'])",
          "91:             . \".\" . PMA_Util::backquote($GLOBALS['cfgRelation']['navigation']);",
          "92:         $sqlQuery = \"INSERT INTO \" . $navTable",
          "93:             . \"(`username`, `item_name`, `item_type`, `db_name`, `table_name`)\"",
          "94:             . \" VALUES (\"",
          "95:             . \"'\" . PMA_Util::sqlAddSlashes($GLOBALS['cfg']['Server']['user']) . \"',\"",
          "96:             . \"'\" . PMA_Util::sqlAddSlashes($itemName) . \"',\"",
          "97:             . \"'\" . PMA_Util::sqlAddSlashes($itemType) . \"',\"",
          "98:             . \"'\" . PMA_Util::sqlAddSlashes($dbName) . \"',\"",
          "99:             . \"'\" . (! empty($tableName)? PMA_Util::sqlAddSlashes($tableName) : \"\" )",
          "100:             . \"')\";",
          "101:         PMA_queryAsControlUser($sqlQuery, true);",
          "102:     }",
          "115:     public function unhideNavigationItem(",
          "116:         $itemName, $itemType, $dbName, $tableName = null",
          "117:     ) {",
          "118:         $navTable = PMA_Util::backquote($GLOBALS['cfgRelation']['db'])",
          "119:             . \".\" . PMA_Util::backquote($GLOBALS['cfgRelation']['navigation']);",
          "120:         $sqlQuery = \"DELETE FROM \" . $navTable",
          "121:             . \" WHERE \"",
          "122:             . \" `username`='\"",
          "123:             . PMA_Util::sqlAddSlashes($GLOBALS['cfg']['Server']['user']) . \"'\"",
          "124:             . \" AND `item_name`='\" . PMA_Util::sqlAddSlashes($itemName) . \"'\"",
          "125:             . \" AND `item_type`='\" . PMA_Util::sqlAddSlashes($itemType) . \"'\"",
          "126:             . \" AND `db_name`='\" . PMA_Util::sqlAddSlashes($dbName) . \"'\"",
          "127:             . (! empty($tableName)",
          "128:                 ? \" AND `table_name`='\" . PMA_Util::sqlAddSlashes($tableName) . \"'\"",
          "129:                 : \"\"",
          "130:             );",
          "131:         PMA_queryAsControlUser($sqlQuery, true);",
          "132:     }",
          "143:     public function getItemUnhideDialog($dbName, $itemType = null, $tableName = null)",
          "144:     {",
          "145:         $html  = '<form method=\"post\" action=\"navigation.php\" class=\"ajax\">';",
          "146:         $html .= '<fieldset>';",
          "147:         $html .= PMA_generate_common_hidden_inputs($dbName, $tableName);",
          "149:         $navTable = PMA_Util::backquote($GLOBALS['cfgRelation']['db'])",
          "150:             . \".\" . PMA_Util::backquote($GLOBALS['cfgRelation']['navigation']);",
          "151:         $sqlQuery = \"SELECT `item_name`, `item_type` FROM \" . $navTable",
          "152:             . \" WHERE `username`='\"",
          "153:             . PMA_Util::sqlAddSlashes($GLOBALS['cfg']['Server']['user']) .\"'\"",
          "154:             . \" AND `db_name`='\" . PMA_Util::sqlAddSlashes($dbName) . \"'\"",
          "155:             . \" AND `table_name`='\"",
          "156:             . (! empty($tableName) ? PMA_Util::sqlAddSlashes($tableName) : '') . \"'\";",
          "157:         $result = PMA_queryAsControlUser($sqlQuery, true);",
          "159:         $hidden = array();",
          "160:         if ($result) {",
          "161:             while ($row = $GLOBALS['dbi']->fetchArray($result)) {",
          "162:                 $type = $row['item_type'];",
          "163:                 if (! isset($hidden[$type])) {",
          "164:                     $hidden[$type] = array();",
          "165:                 }",
          "166:                 $hidden[$type][] = $row['item_name'];",
          "167:             }",
          "168:         }",
          "169:         $GLOBALS['dbi']->freeResult($result);",
          "171:         if (empty($tableName)) {",
          "172:             if ((empty($itemType) || $itemType == 'table')",
          "173:                 && isset($hidden['table'])",
          "174:             ) {",
          "175:                 $html .= '<h4>' . __('Tables:') . '</h4>';",
          "176:                 $html .= '<table width=\"100%\"><tbody>';",
          "177:                 $odd = true;",
          "178:                 foreach ($hidden['table'] as $hiddenTable) {",
          "179:                     $html .= '<tr class=\"' . ($odd ? 'odd' : 'even') . '\">';",
          "180:                     $html .= '<td>' . $hiddenTable . '</td>';",
          "181:                     $html .= '<td><a href=\"navigation.php?'",
          "182:                         . PMA_generate_common_url()",
          "183:                         . '&unhideNavItem=true&itemType=table'",
          "184:                         . '&itemName=' . urldecode($hiddenTable)",
          "185:                         . '&dbName=' . urldecode($dbName) . '\"'",
          "186:                         . ' class=\"unhideNavItem ajax\">'",
          "187:                         . PMA_Util::getIcon('b_undo.png', __('Unhide'))",
          "188:                         .  '</a></td>';",
          "189:                 }",
          "190:                 $html .= '</tbody></table>';",
          "191:             }",
          "192:         }",
          "194:         $html .= '</fieldset>';",
          "195:         $html .= '</form>';",
          "196:         return $html;",
          "197:     }",
          "",
          "---------------"
        ],
        "libraries/navigation/NavigationTree.class.php||libraries/navigation/NavigationTree.class.php": [
          "File: libraries/navigation/NavigationTree.class.php -> libraries/navigation/NavigationTree.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "949:             if ($node->type == Node::CONTAINER) {",
          "950:                 $retval .= \"</i>\";",
          "951:             }",
          "953:             $wrap = true;",
          "954:         } else {",
          "955:             $node->visible = true;",
          "",
          "[Removed Lines]",
          "952:             $retval .= $node->getHtmlForHideButton();",
          "",
          "[Added Lines]",
          "952:             $retval .= $node->getHtmlForControlButtons();",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node.class.php||libraries/navigation/Nodes/Node.class.php": [
          "File: libraries/navigation/Nodes/Node.class.php -> libraries/navigation/Nodes/Node.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "452:     }",
          "460:     {",
          "461:         return '';",
          "462:     }",
          "",
          "[Removed Lines]",
          "459:     public function getHtmlForHideButton()",
          "",
          "[Added Lines]",
          "459:     public function getHtmlForControlButtons()",
          "460:     {",
          "461:         return '';",
          "462:     }",
          "471:     public function getHtmlForUnhideDialog($type = null)",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Database.class.php||libraries/navigation/Nodes/Node_Database.class.php": [
          "File: libraries/navigation/Nodes/Node_Database.class.php -> libraries/navigation/Nodes/Node_Database.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "479:     {",
          "480:         return PMA_getDbComment($this->real_name);",
          "481:     }",
          "482: }",
          "484: ?>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "488:     public function getHtmlForControlButtons()",
          "489:     {",
          "490:         $ret = '';",
          "491:         $db = $this->real_name;",
          "493:         $cfgRelation = PMA_getRelationsParam();",
          "494:         if ($cfgRelation['navwork']) {",
          "495:             $navTable = PMA_Util::backquote($cfgRelation['db'])",
          "496:                 . \".\" . PMA_Util::backquote($cfgRelation['navigation']);",
          "497:             $sqlQuery = \"SELECT COUNT(*) FROM \" . $navTable",
          "498:                 . \" WHERE `username`='\"",
          "499:                 . PMA_Util::sqlAddSlashes($GLOBALS['cfg']['Server']['user']) .\"'\"",
          "500:                 . \" AND `db_name`='\" . PMA_Util::sqlAddSlashes($db) . \"'\";",
          "501:             $result = PMA_queryAsControlUser($sqlQuery, false);",
          "503:             if ($result) {",
          "504:                 $count = $GLOBALS['dbi']->fetchValue($result);",
          "505:                 if ($count > 0) {",
          "506:                     $ret = '<span class=\"dbItemControls\">'",
          "507:                         . '<a href=\"navigation.php?'",
          "508:                         . PMA_generate_common_url()",
          "509:                         . '&showUnhideDialog=true'",
          "510:                         . '&dbName=' . urldecode($db) . '\"'",
          "511:                         . ' class=\"showUnhide ajax\">'",
          "512:                         . PMA_Util::getImage('b_undo.png', 'Unhide')",
          "513:                         . '</a></span>';",
          "514:                 }",
          "515:             }",
          "516:             $GLOBALS['dbi']->freeResult($result);",
          "517:         }",
          "518:         return $ret;",
          "519:     }",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_Table.class.php||libraries/navigation/Nodes/Node_Table.class.php": [
          "File: libraries/navigation/Nodes/Node_Table.class.php -> libraries/navigation/Nodes/Node_Table.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "240:     {",
          "252:     }",
          "253: }",
          "",
          "[Removed Lines]",
          "239:     public function getHtmlForHideButton()",
          "241:         $db    = $this->realParent()->real_name;",
          "242:         $table = $this->real_name;",
          "243:         return '<span class=\"tableControls\">'",
          "244:             . '<a href=\"navigation.php?'",
          "245:             . PMA_generate_common_url()",
          "246:             . '&hideNavItem=true&itemType=table'",
          "247:             . '&itemName=' . urldecode($table)",
          "248:             . '&dbName=' . urldecode($db) . '\"'",
          "249:             . ' class=\"hideNavItem ajax\">'",
          "250:             . PMA_Util::getImage('b_close', 'Hide')",
          "251:             . '</a></span>';",
          "",
          "[Added Lines]",
          "239:     public function getHtmlForControlButtons()",
          "241:         $ret = '';",
          "242:         $cfgRelation = PMA_getRelationsParam();",
          "243:         if ($cfgRelation['navwork']) {",
          "244:             $db    = $this->realParent()->real_name;",
          "245:             $table = $this->real_name;",
          "246:             $ret   = '<span class=\"navItemControls\">'",
          "247:                 . '<a href=\"navigation.php?'",
          "248:                 . PMA_generate_common_url()",
          "249:                 . '&hideNavItem=true&itemType=table'",
          "250:                 . '&itemName=' . urldecode($table)",
          "251:                 . '&dbName=' . urldecode($db) . '\"'",
          "252:                 . ' class=\"hideNavItem ajax\">'",
          "253:                 . PMA_Util::getImage('b_close', 'Hide')",
          "254:                 . '</a></span>';",
          "255:         }",
          "256:         return $ret;",
          "",
          "---------------"
        ],
        "navigation.php||navigation.php": [
          "File: navigation.php -> navigation.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: require_once './libraries/navigation/Navigation.class.php';",
          "35: $response = PMA_Response::getInstance();",
          "40:     $response->addHTML(",
          "41:         PMA_Message::error(",
          "42:             __('Fatal error: The navigation can only be accessed via AJAX')",
          "43:         )",
          "44:     );",
          "45: }",
          "46: ?>",
          "",
          "[Removed Lines]",
          "15: $cfgRelation = PMA_getRelationsParam();",
          "16: if (isset($_REQUEST['hideNavItem']) && $cfgRelation['navwork']) {",
          "17:     if (! empty($_REQUEST['itemName']) && ! empty($_REQUEST['itemType'])) {",
          "18:         $navTable = PMA_Util::backquote($cfgRelation['db'])",
          "19:             . \".\" . PMA_Util::backquote($cfgRelation['navigation']);",
          "20:         $sqlQuery = \"INSERT INTO \" . $navTable",
          "21:             . \"(`username`, `item_name`, `item_type`, `db_name`, `table_name`)\"",
          "22:             . \" VALUES (\"",
          "23:             . \"'\" . $GLOBALS['cfg']['Server']['user'] . \"',\"",
          "24:             . \"'\" . $_REQUEST['itemName'] . \"',\"",
          "25:             . \"'\" . $_REQUEST['itemType'] . \"',\"",
          "26:             . \"'\" . (! empty($_REQUEST['dbName']) ? $_REQUEST['dbName'] : \"\") . \"',\"",
          "27:             . \"'\" . (! empty($_REQUEST['tableName']) ? $_REQUEST['tableName'] : \"\")",
          "28:             . \"')\";",
          "29:         PMA_queryAsControlUser($sqlQuery, true);",
          "30:     }",
          "31:     exit;",
          "32: }",
          "36: if ($response->isAjax()) {",
          "37:     $navigation = new PMA_Navigation();",
          "38:     $response->addJSON('message', $navigation->getDisplay());",
          "39: } else {",
          "",
          "[Added Lines]",
          "16: $navigation = new PMA_Navigation();",
          "17: if (! $response->isAjax()) {",
          "23:     exit;",
          "26: $cfgRelation = PMA_getRelationsParam();",
          "27: if ($cfgRelation['navwork']) {",
          "28:     if (isset($_REQUEST['hideNavItem'])) {",
          "29:         if (! empty($_REQUEST['itemName'])",
          "30:             && ! empty($_REQUEST['itemType'])",
          "31:             && ! empty($_REQUEST['dbName'])",
          "32:         ) {",
          "33:             $navigation->hideNavigationItem(",
          "34:                 $_REQUEST['itemName'],",
          "35:                 $_REQUEST['itemType'],",
          "36:                 $_REQUEST['dbName'],",
          "37:                 (! empty($_REQUEST['tableName']) ? $_REQUEST['tableName'] : null)",
          "38:             );",
          "39:         }",
          "40:         exit;",
          "41:     }",
          "43:     if (isset($_REQUEST['unhideNavItem'])) {",
          "44:         if (! empty($_REQUEST['itemName'])",
          "45:             && ! empty($_REQUEST['itemType'])",
          "46:             && ! empty($_REQUEST['dbName'])",
          "47:         ) {",
          "48:             $navigation->unhideNavigationItem(",
          "49:                 $_REQUEST['itemName'],",
          "50:                 $_REQUEST['itemType'],",
          "51:                 $_REQUEST['dbName'],",
          "52:                 (! empty($_REQUEST['tableName']) ? $_REQUEST['tableName'] : null)",
          "53:             );",
          "54:         }",
          "55:         exit;",
          "56:     }",
          "58:     if (isset($_REQUEST['showUnhideDialog'])) {",
          "59:         if (! empty($_REQUEST['dbName'])) {",
          "60:             $response->addJSON(",
          "61:                 'message',",
          "62:                 $navigation->getItemUnhideDialog($_REQUEST['dbName'])",
          "63:             );",
          "64:         }",
          "65:         exit;",
          "66:     }",
          "67: }",
          "70: $response->addJSON('message', $navigation->getDisplay());",
          "",
          "---------------"
        ],
        "themes/original/css/navigation.css.php||themes/original/css/navigation.css.php": [
          "File: themes/original/css/navigation.css.php -> themes/original/css/navigation.css.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:     color: <?php echo $GLOBALS['cfg']['NaviPointerColor']; ?>;",
          "120:     background-color: <?php echo $GLOBALS['cfg']['NaviPointerBackground']; ?>;",
          "121: }",
          "123:     display: none;",
          "124:     padding-left: 4px;",
          "125: }",
          "127:     display: inline;",
          "128:     opacity: 0.5;",
          "129: }",
          "131:     display: inline;",
          "132:     opacity: 1.0;",
          "133: }",
          "",
          "[Removed Lines]",
          "122: #pma_navigation_tree li .tableControls {",
          "126: #pma_navigation_tree li.activePointer .tableControls {",
          "130: #pma_navigation_tree li.activePointer .tableControls:hover {",
          "",
          "[Added Lines]",
          "122: #pma_navigation_tree li .dbItemControls {",
          "123:     padding-left: 4px;",
          "124: }",
          "125: #pma_navigation_tree li .navItemControls {",
          "129: #pma_navigation_tree li.activePointer .navItemControls {",
          "133: #pma_navigation_tree li.activePointer .navItemControls:hover {",
          "",
          "---------------"
        ],
        "themes/pmahomme/css/navigation.css.php||themes/pmahomme/css/navigation.css.php": [
          "File: themes/pmahomme/css/navigation.css.php -> themes/pmahomme/css/navigation.css.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:     color: <?php echo $GLOBALS['cfg']['NaviPointerColor']; ?>;",
          "105:     background-color: <?php echo $GLOBALS['cfg']['NaviPointerBackground']; ?>;",
          "106: }",
          "108:     display: none;",
          "109:     padding-left: 4px;",
          "110: }",
          "112:     display: inline;",
          "113:     opacity: 0.5;",
          "114: }",
          "116:     display: inline;",
          "117:     opacity: 1.0;",
          "118: }",
          "",
          "[Removed Lines]",
          "107: #pma_navigation_tree li .tableControls {",
          "111: #pma_navigation_tree li.activePointer .tableControls {",
          "115: #pma_navigation_tree li.activePointer .tableControls:hover {",
          "",
          "[Added Lines]",
          "107: #pma_navigation_tree li .dbItemControls {",
          "108:     padding-left: 4px;",
          "109: }",
          "110: #pma_navigation_tree li .navItemControls {",
          "114: #pma_navigation_tree li.activePointer .navItemControls {",
          "118: #pma_navigation_tree li.activePointer .navItemControls:hover {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "daa98d0c7ed24b529dc5df0d5905873acd0b00be",
      "candidate_info": {
        "commit_hash": "daa98d0c7ed24b529dc5df0d5905873acd0b00be",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/daa98d0c7ed24b529dc5df0d5905873acd0b00be",
        "files": [
          "libraries/navigation/Navigation.class.php",
          "libraries/navigation/Nodes/Node_DatabaseChild.class.php"
        ],
        "message": "Fix XSS in Hide navigation items feature\n\nSigned-off-by: Ann + J.M <phpMyAdmin@ZweiSteinSoft.de>",
        "before_after_code_files": [
          "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php",
          "libraries/navigation/Nodes/Node_DatabaseChild.class.php||libraries/navigation/Nodes/Node_DatabaseChild.class.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php",
            "libraries/navigation/Nodes/Node_DatabaseChild.class.php||libraries/navigation/Nodes/Node_DatabaseChild.class.php"
          ],
          "candidate": [
            "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php",
            "libraries/navigation/Nodes/Node_DatabaseChild.class.php||libraries/navigation/Nodes/Node_DatabaseChild.class.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/navigation/Navigation.class.php||libraries/navigation/Navigation.class.php": [
          "File: libraries/navigation/Navigation.class.php -> libraries/navigation/Navigation.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "189:                         $html .= '<td style=\"width:80px\"><a href=\"navigation.php?'",
          "190:                             . PMA_URL_getCommon()",
          "191:                             . '&unhideNavItem=true'",
          "195:                             . ' class=\"unhideNavItem ajax\">'",
          "196:                             . PMA_Util::getIcon('lightbulb.png', __('Show'))",
          "197:                             .  '</a></td>';",
          "",
          "[Removed Lines]",
          "192:                             . '&itemType=' . $t",
          "193:                             . '&itemName=' . urldecode($hiddenItem)",
          "194:                             . '&dbName=' . urldecode($dbName) . '\"'",
          "",
          "[Added Lines]",
          "192:                             . '&itemType=' . urlencode($t)",
          "193:                             . '&itemName=' . urlencode($hiddenItem)",
          "194:                             . '&dbName=' . urlencode($dbName) . '\"'",
          "",
          "---------------"
        ],
        "libraries/navigation/Nodes/Node_DatabaseChild.class.php||libraries/navigation/Nodes/Node_DatabaseChild.class.php": [
          "File: libraries/navigation/Nodes/Node_DatabaseChild.class.php -> libraries/navigation/Nodes/Node_DatabaseChild.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:                 . '<a href=\"navigation.php?'",
          "33:                 . PMA_URL_getCommon()",
          "34:                 . '&hideNavItem=true'",
          "38:                 . ' class=\"hideNavItem ajax\">'",
          "39:                 . PMA_Util::getImage('lightbulb_off', __('Hide'))",
          "40:                 . '</a></span>';",
          "",
          "[Removed Lines]",
          "35:                 . '&itemType=' . urldecode($this->getItemType())",
          "36:                 . '&itemName=' . urldecode($item)",
          "37:                 . '&dbName=' . urldecode($db) . '\"'",
          "",
          "[Added Lines]",
          "35:                 . '&itemType=' . urlencode($this->getItemType())",
          "36:                 . '&itemName=' . urlencode($item)",
          "37:                 . '&dbName=' . urlencode($db) . '\"'",
          "",
          "---------------"
        ]
      }
    }
  ]
}