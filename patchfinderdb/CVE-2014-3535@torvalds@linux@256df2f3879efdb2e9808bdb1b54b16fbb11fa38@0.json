{
  "cve_id": "CVE-2014-3535",
  "cve_desc": "include/linux/netdevice.h in the Linux kernel before 2.6.36 incorrectly uses macros for netdev_printk and its related logging implementation, which allows remote attackers to cause a denial of service (NULL pointer dereference and system crash) by sending invalid packets to a VxLAN interface.",
  "repo": "torvalds/linux",
  "patch_hash": "256df2f3879efdb2e9808bdb1b54b16fbb11fa38",
  "patch_info": {
    "commit_hash": "256df2f3879efdb2e9808bdb1b54b16fbb11fa38",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/256df2f3879efdb2e9808bdb1b54b16fbb11fa38",
    "files": [
      "include/linux/netdevice.h",
      "net/core/dev.c"
    ],
    "message": "netdevice.h net/core/dev.c: Convert netdev_<level> logging macros to functions\n\nReduces an x86 defconfig text and data ~2k.\ntext is smaller, data is larger.\n\n$ size vmlinux*\n   text\t   data\t    bss\t    dec\t    hex\tfilename\n7198862\t 720112\t1366288\t9285262\t 8dae8e\tvmlinux\n7205273\t 716016\t1366288\t9287577\t 8db799\tvmlinux.device_h\n\nUses %pV and struct va_format\nFormat arguments are verified before printk\n\nSigned-off-by: Joe Perches <joe@perches.com>\nAcked-by: Greg Kroah-Hartman <gregkh@suse.de>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "include/linux/netdevice.h||include/linux/netdevice.h",
      "net/core/dev.c||net/core/dev.c"
    ]
  },
  "patch_diff": {
    "include/linux/netdevice.h||include/linux/netdevice.h": [
      "File: include/linux/netdevice.h -> include/linux/netdevice.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "2250:  return dev->name;",
      "2251: }",
      "2273: #if defined(DEBUG)",
      "2274: #define netdev_dbg(__dev, format, args...)   \\",
      "",
      "[Removed Lines]",
      "2253: #define netdev_printk(level, netdev, format, args...)  \\",
      "2254:  dev_printk(level, (netdev)->dev.parent,   \\",
      "2255:      \"%s: \" format,    \\",
      "2256:      netdev_name(netdev), ##args)",
      "2258: #define netdev_emerg(dev, format, args...)   \\",
      "2259:  netdev_printk(KERN_EMERG, dev, format, ##args)",
      "2260: #define netdev_alert(dev, format, args...)   \\",
      "2261:  netdev_printk(KERN_ALERT, dev, format, ##args)",
      "2262: #define netdev_crit(dev, format, args...)   \\",
      "2263:  netdev_printk(KERN_CRIT, dev, format, ##args)",
      "2264: #define netdev_err(dev, format, args...)   \\",
      "2265:  netdev_printk(KERN_ERR, dev, format, ##args)",
      "2266: #define netdev_warn(dev, format, args...)   \\",
      "2267:  netdev_printk(KERN_WARNING, dev, format, ##args)",
      "2268: #define netdev_notice(dev, format, args...)   \\",
      "2269:  netdev_printk(KERN_NOTICE, dev, format, ##args)",
      "2270: #define netdev_info(dev, format, args...)   \\",
      "2271:  netdev_printk(KERN_INFO, dev, format, ##args)",
      "",
      "[Added Lines]",
      "2253: extern int netdev_printk(const char *level, const struct net_device *dev,",
      "2254:     const char *format, ...)",
      "2255:  __attribute__ ((format (printf, 3, 4)));",
      "2256: extern int netdev_emerg(const struct net_device *dev, const char *format, ...)",
      "2257:  __attribute__ ((format (printf, 2, 3)));",
      "2258: extern int netdev_alert(const struct net_device *dev, const char *format, ...)",
      "2259:  __attribute__ ((format (printf, 2, 3)));",
      "2260: extern int netdev_crit(const struct net_device *dev, const char *format, ...)",
      "2261:  __attribute__ ((format (printf, 2, 3)));",
      "2262: extern int netdev_err(const struct net_device *dev, const char *format, ...)",
      "2263:  __attribute__ ((format (printf, 2, 3)));",
      "2264: extern int netdev_warn(const struct net_device *dev, const char *format, ...)",
      "2265:  __attribute__ ((format (printf, 2, 3)));",
      "2266: extern int netdev_notice(const struct net_device *dev, const char *format, ...)",
      "2267:  __attribute__ ((format (printf, 2, 3)));",
      "2268: extern int netdev_info(const struct net_device *dev, const char *format, ...)",
      "2269:  __attribute__ ((format (printf, 2, 3)));",
      "",
      "---------------"
    ],
    "net/core/dev.c||net/core/dev.c": [
      "File: net/core/dev.c -> net/core/dev.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "5802:  return buffer;",
      "5803: }",
      "5805: static void __net_exit netdev_exit(struct net *net)",
      "5806: {",
      "5807:  kfree(net->dev_name_head);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5805: static int __netdev_printk(const char *level, const struct net_device *dev,",
      "5806:       struct va_format *vaf)",
      "5807: {",
      "5808:  int r;",
      "5810:  if (dev && dev->dev.parent)",
      "5811:   r = dev_printk(level, dev->dev.parent, \"%s: %pV\",",
      "5812:           netdev_name(dev), vaf);",
      "5813:  else if (dev)",
      "5814:   r = printk(\"%s%s: %pV\", level, netdev_name(dev), vaf);",
      "5815:  else",
      "5816:   r = printk(\"%s(NULL net_device): %pV\", level, vaf);",
      "5818:  return r;",
      "5819: }",
      "5821: int netdev_printk(const char *level, const struct net_device *dev,",
      "5822:     const char *format, ...)",
      "5823: {",
      "5824:  struct va_format vaf;",
      "5825:  va_list args;",
      "5826:  int r;",
      "5828:  va_start(args, format);",
      "5830:  vaf.fmt = format;",
      "5831:  vaf.va = &args;",
      "5833:  r = __netdev_printk(level, dev, &vaf);",
      "5834:  va_end(args);",
      "5836:  return r;",
      "5837: }",
      "5838: EXPORT_SYMBOL(netdev_printk);",
      "5840: #define define_netdev_printk_level(func, level)   \\",
      "5841: int func(const struct net_device *dev, const char *fmt, ...) \\",
      "5842: {        \\",
      "5843:  int r;       \\",
      "5844:  struct va_format vaf;     \\",
      "5845:  va_list args;      \\",
      "5846:         \\",
      "5847:  va_start(args, fmt);     \\",
      "5848:         \\",
      "5849:  vaf.fmt = fmt;      \\",
      "5850:  vaf.va = &args;      \\",
      "5851:         \\",
      "5852:  r = __netdev_printk(level, dev, &vaf);   \\",
      "5853:  va_end(args);      \\",
      "5854:         \\",
      "5855:  return r;      \\",
      "5856: }        \\",
      "5857: EXPORT_SYMBOL(func);",
      "5859: define_netdev_printk_level(netdev_emerg, KERN_EMERG);",
      "5860: define_netdev_printk_level(netdev_alert, KERN_ALERT);",
      "5861: define_netdev_printk_level(netdev_crit, KERN_CRIT);",
      "5862: define_netdev_printk_level(netdev_err, KERN_ERR);",
      "5863: define_netdev_printk_level(netdev_warn, KERN_WARNING);",
      "5864: define_netdev_printk_level(netdev_notice, KERN_NOTICE);",
      "5865: define_netdev_printk_level(netdev_info, KERN_INFO);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "571ba42303813106d533bf6bda929d8e289f51bf",
      "candidate_info": {
        "commit_hash": "571ba42303813106d533bf6bda929d8e289f51bf",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/571ba42303813106d533bf6bda929d8e289f51bf",
        "files": [
          "include/linux/netdevice.h"
        ],
        "message": "netdevice.h: Add netdev_printk helpers like dev_printk\n\nThese netdev_printk routines take a struct net_device * and emit\ndev_printk logging messages adding \"%s: \" ... netdev->dev.parent\nto the dev_printk format and arguments.\n\nThis can create some uniformity in the output message log.\n\nThese helpers should not be used until a successful alloc_netdev.\n\nSigned-off-by: Joe Perches <joe@perches.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "include/linux/netdevice.h||include/linux/netdevice.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/linux/netdevice.h||include/linux/netdevice.h"
          ],
          "candidate": [
            "include/linux/netdevice.h||include/linux/netdevice.h"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/netdevice.h||include/linux/netdevice.h": [
          "File: include/linux/netdevice.h -> include/linux/netdevice.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2095:   return 0;",
          "2096:  return dev->ethtool_ops->get_flags(dev);",
          "2097: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2103: static inline const char *netdev_name(const struct net_device *dev)",
          "2104: {",
          "2105:  if (dev->reg_state != NETREG_REGISTERED)",
          "2106:   return \"(unregistered net_device)\";",
          "2107:  return dev->name;",
          "2108: }",
          "2110: #define netdev_printk(level, netdev, format, args...)  \\",
          "2111:  dev_printk(level, (netdev)->dev.parent,   \\",
          "2112:      \"%s: \" format,    \\",
          "2113:      netdev_name(netdev), ##args)",
          "2115: #define netdev_emerg(dev, format, args...)   \\",
          "2116:  netdev_printk(KERN_EMERG, dev, format, ##args)",
          "2117: #define netdev_alert(dev, format, args...)   \\",
          "2118:  netdev_printk(KERN_ALERT, dev, format, ##args)",
          "2119: #define netdev_crit(dev, format, args...)   \\",
          "2120:  netdev_printk(KERN_CRIT, dev, format, ##args)",
          "2121: #define netdev_err(dev, format, args...)   \\",
          "2122:  netdev_printk(KERN_ERR, dev, format, ##args)",
          "2123: #define netdev_warn(dev, format, args...)   \\",
          "2124:  netdev_printk(KERN_WARNING, dev, format, ##args)",
          "2125: #define netdev_notice(dev, format, args...)   \\",
          "2126:  netdev_printk(KERN_NOTICE, dev, format, ##args)",
          "2127: #define netdev_info(dev, format, args...)   \\",
          "2128:  netdev_printk(KERN_INFO, dev, format, ##args)",
          "2130: #if defined(DEBUG)",
          "2131: #define netdev_dbg(__dev, format, args...)   \\",
          "2132:  netdev_printk(KERN_DEBUG, __dev, format, ##args)",
          "2133: #elif defined(CONFIG_DYNAMIC_DEBUG)",
          "2134: #define netdev_dbg(__dev, format, args...)   \\",
          "2135: do {        \\",
          "2136:  dynamic_dev_dbg((__dev)->dev.parent, \"%s: \" format, \\",
          "2137:    netdev_name(__dev), ##args);  \\",
          "2138: } while (0)",
          "2139: #else",
          "2140: #define netdev_dbg(__dev, format, args...)   \\",
          "2141: ({        \\",
          "2142:  if (0)       \\",
          "2143:   netdev_printk(KERN_DEBUG, __dev, format, ##args); \\",
          "2144:  0;       \\",
          "2145: })",
          "2146: #endif",
          "2148: #if defined(VERBOSE_DEBUG)",
          "2149: #define netdev_vdbg netdev_dbg",
          "2150: #else",
          "2152: #define netdev_vdbg(dev, format, args...)   \\",
          "2153: ({        \\",
          "2154:  if (0)       \\",
          "2155:   netdev_printk(KERN_DEBUG, dev, format, ##args); \\",
          "2156:  0;       \\",
          "2157: })",
          "2158: #endif",
          "2165: #define netdev_WARN(dev, format, args...)   \\",
          "2166:  WARN(1, \"netdevice: %s\\n\" format, netdev_name(dev), ##args);",
          "",
          "---------------"
        ]
      }
    }
  ]
}