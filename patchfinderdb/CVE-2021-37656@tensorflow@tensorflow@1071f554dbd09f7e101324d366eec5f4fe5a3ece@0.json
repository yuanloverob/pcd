{
  "cve_id": "CVE-2021-37656",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToSparse`. The [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc#L30) has an incomplete validation of the splits values: it does not check that they are in increasing order. We have patched the issue in GitHub commit 1071f554dbd09f7e101324d366eec5f4fe5a3ece. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "1071f554dbd09f7e101324d366eec5f4fe5a3ece",
  "patch_info": {
    "commit_hash": "1071f554dbd09f7e101324d366eec5f4fe5a3ece",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/1071f554dbd09f7e101324d366eec5f4fe5a3ece",
    "files": [
      "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
    ],
    "message": "Add missing validation to `RaggedTensorToSparse`.\n\nThere needs to be a check that the splits allow for valid ragged tensors.\n\nPiperOrigin-RevId: 387712169\nChange-Id: I2499175324b82b65d159a260c7f83b98ceb5cc7d",
    "before_after_code_files": [
      "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc": [
      "File: tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc -> tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: #include \"tensorflow/core/framework/register_types.h\"",
      "22: #include \"tensorflow/core/framework/tensor.h\"",
      "23: #include \"tensorflow/core/framework/tensor_shape.h\"",
      "25: namespace tensorflow {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24: #include \"tensorflow/core/platform/errors.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "38:     OP_REQUIRES_OK(",
      "39:         context, context->input_list(\"rt_nested_splits\", &rt_nested_splits_in));",
      "40:     const int rt_nested_splits_len = rt_nested_splits_in.size();",
      "42:     std::vector<ConstFlatSplits> rt_nested_splits;",
      "43:     rt_nested_splits.reserve(rt_nested_splits_len);",
      "44:     for (int i = 0; i < rt_nested_splits_len; ++i) {",
      "",
      "[Removed Lines]",
      "41:     DCHECK_GT(rt_nested_splits_len, 0);  // Enforced by REGISTER_OP.",
      "",
      "[Added Lines]",
      "42:     OP_REQUIRES(context, rt_nested_splits_len > 0,",
      "43:                 errors::InvalidArgument(\"rt_nested_splits must be non empty\"));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "162:       if (rt_nested_splits[i](0) != 0) {",
      "163:         return InvalidArgument(\"First value of ragged splits must be 0.\");",
      "164:       }",
      "165:       if (i > 0) {",
      "166:         SPLITS_TYPE last_split =",
      "167:             rt_nested_splits[i - 1](rt_nested_splits[i - 1].size() - 1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "167:       for (int j = 1; j < rt_nested_splits[i].size(); ++j) {",
      "168:         if (rt_nested_splits[i](j) < rt_nested_splits[i](j - 1)) {",
      "169:           return InvalidArgument(",
      "170:               \"Ragged splits should be non decreasing, but we got \",",
      "171:               rt_nested_splits[i](j - 1), \" followed by \",",
      "172:               rt_nested_splits[i](j));",
      "173:         }",
      "174:       }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b58bfcc5139907a254b55c856f602ad57de50361",
      "candidate_info": {
        "commit_hash": "b58bfcc5139907a254b55c856f602ad57de50361",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/b58bfcc5139907a254b55c856f602ad57de50361",
        "files": [
          "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
        ],
        "message": "Add missing validation to `RaggedTensorToSparse`.\n\nThere needs to be a check that the splits allow for valid ragged tensors.\n\nPiperOrigin-RevId: 387712169\nChange-Id: I2499175324b82b65d159a260c7f83b98ceb5cc7d",
        "before_after_code_files": [
          "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc": [
          "File: tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc -> tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include \"tensorflow/core/framework/register_types.h\"",
          "22: #include \"tensorflow/core/framework/tensor.h\"",
          "23: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "25: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:     OP_REQUIRES_OK(",
          "39:         context, context->input_list(\"rt_nested_splits\", &rt_nested_splits_in));",
          "40:     const int rt_nested_splits_len = rt_nested_splits_in.size();",
          "42:     std::vector<ConstFlatSplits> rt_nested_splits;",
          "43:     rt_nested_splits.reserve(rt_nested_splits_len);",
          "44:     for (int i = 0; i < rt_nested_splits_len; ++i) {",
          "",
          "[Removed Lines]",
          "41:     DCHECK_GT(rt_nested_splits_len, 0);  // Enforced by REGISTER_OP.",
          "",
          "[Added Lines]",
          "42:     OP_REQUIRES(context, rt_nested_splits_len > 0,",
          "43:                 errors::InvalidArgument(\"rt_nested_splits must be non empty\"));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "161:       if (rt_nested_splits[i](0) != 0) {",
          "162:         return InvalidArgument(\"First value of ragged splits must be 0.\");",
          "163:       }",
          "164:       if (i > 0) {",
          "165:         SPLITS_TYPE last_split =",
          "166:             rt_nested_splits[i - 1](rt_nested_splits[i - 1].size() - 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:       for (int j = 1; j < rt_nested_splits[i].size(); ++j) {",
          "167:         if (rt_nested_splits[i](j) < rt_nested_splits[i](j - 1)) {",
          "168:           return InvalidArgument(",
          "169:               \"Ragged splits should be non decreasing, but we got \",",
          "170:               rt_nested_splits[i](j - 1), \" followed by \",",
          "171:               rt_nested_splits[i](j));",
          "172:         }",
          "173:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba78d7426bf8b275b2002f8bbbdf6bb00fedc796",
      "candidate_info": {
        "commit_hash": "ba78d7426bf8b275b2002f8bbbdf6bb00fedc796",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ba78d7426bf8b275b2002f8bbbdf6bb00fedc796",
        "files": [
          "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
        ],
        "message": "Add missing validation to `RaggedTensorToSparse`.\n\nThere needs to be a check that the splits allow for valid ragged tensors.\n\nPiperOrigin-RevId: 387712169\nChange-Id: I2499175324b82b65d159a260c7f83b98ceb5cc7d",
        "before_after_code_files": [
          "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc": [
          "File: tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc -> tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include \"tensorflow/core/framework/register_types.h\"",
          "22: #include \"tensorflow/core/framework/tensor.h\"",
          "23: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "25: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:     OP_REQUIRES_OK(",
          "39:         context, context->input_list(\"rt_nested_splits\", &rt_nested_splits_in));",
          "40:     const int rt_nested_splits_len = rt_nested_splits_in.size();",
          "42:     std::vector<ConstFlatSplits> rt_nested_splits;",
          "43:     rt_nested_splits.reserve(rt_nested_splits_len);",
          "44:     for (int i = 0; i < rt_nested_splits_len; ++i) {",
          "",
          "[Removed Lines]",
          "41:     DCHECK_GT(rt_nested_splits_len, 0);  // Enforced by REGISTER_OP.",
          "",
          "[Added Lines]",
          "42:     OP_REQUIRES(context, rt_nested_splits_len > 0,",
          "43:                 errors::InvalidArgument(\"rt_nested_splits must be non empty\"));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "161:       if (rt_nested_splits[i](0) != 0) {",
          "162:         return InvalidArgument(\"First value of ragged splits must be 0.\");",
          "163:       }",
          "164:       if (i > 0) {",
          "165:         SPLITS_TYPE last_split =",
          "166:             rt_nested_splits[i - 1](rt_nested_splits[i - 1].size() - 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:       for (int j = 1; j < rt_nested_splits[i].size(); ++j) {",
          "167:         if (rt_nested_splits[i](j) < rt_nested_splits[i](j - 1)) {",
          "168:           return InvalidArgument(",
          "169:               \"Ragged splits should be non decreasing, but we got \",",
          "170:               rt_nested_splits[i](j - 1), \" followed by \",",
          "171:               rt_nested_splits[i](j));",
          "172:         }",
          "173:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a921837ca23f605904ef827cc25b4a40e3ebbabc",
      "candidate_info": {
        "commit_hash": "a921837ca23f605904ef827cc25b4a40e3ebbabc",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/a921837ca23f605904ef827cc25b4a40e3ebbabc",
        "files": [
          "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
        ],
        "message": "Add missing validation to `RaggedTensorToSparse`.\n\nThere needs to be a check that the splits allow for valid ragged tensors.\n\nPiperOrigin-RevId: 387712169\nChange-Id: I2499175324b82b65d159a260c7f83b98ceb5cc7d",
        "before_after_code_files": [
          "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc": [
          "File: tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc -> tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include \"tensorflow/core/framework/register_types.h\"",
          "22: #include \"tensorflow/core/framework/tensor.h\"",
          "23: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "25: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:     OP_REQUIRES_OK(",
          "39:         context, context->input_list(\"rt_nested_splits\", &rt_nested_splits_in));",
          "40:     const int rt_nested_splits_len = rt_nested_splits_in.size();",
          "42:     std::vector<ConstFlatSplits> rt_nested_splits;",
          "43:     rt_nested_splits.reserve(rt_nested_splits_len);",
          "44:     for (int i = 0; i < rt_nested_splits_len; ++i) {",
          "",
          "[Removed Lines]",
          "41:     DCHECK_GT(rt_nested_splits_len, 0);  // Enforced by REGISTER_OP.",
          "",
          "[Added Lines]",
          "42:     OP_REQUIRES(context, rt_nested_splits_len > 0,",
          "43:                 errors::InvalidArgument(\"rt_nested_splits must be non empty\"));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "161:       if (rt_nested_splits[i](0) != 0) {",
          "162:         return InvalidArgument(\"First value of ragged splits must be 0.\");",
          "163:       }",
          "164:       if (i > 0) {",
          "165:         SPLITS_TYPE last_split =",
          "166:             rt_nested_splits[i - 1](rt_nested_splits[i - 1].size() - 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:       for (int j = 1; j < rt_nested_splits[i].size(); ++j) {",
          "167:         if (rt_nested_splits[i](j) < rt_nested_splits[i](j - 1)) {",
          "168:           return InvalidArgument(",
          "169:               \"Ragged splits should be non decreasing, but we got \",",
          "170:               rt_nested_splits[i](j - 1), \" followed by \",",
          "171:               rt_nested_splits[i](j));",
          "172:         }",
          "173:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c1c820ed7ea8db8e514093af5f43f8f2cd7088e",
      "candidate_info": {
        "commit_hash": "3c1c820ed7ea8db8e514093af5f43f8f2cd7088e",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/3c1c820ed7ea8db8e514093af5f43f8f2cd7088e",
        "files": [
          "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
        ],
        "message": "Add missing validation to `RaggedTensorToSparse`.\n\nThere needs to be a check that the splits allow for valid ragged tensors.\n\nPiperOrigin-RevId: 387712169\nChange-Id: I2499175324b82b65d159a260c7f83b98ceb5cc7d",
        "before_after_code_files": [
          "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc||tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc": [
          "File: tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc -> tensorflow/core/kernels/ragged_tensor_to_sparse_kernel.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include \"tensorflow/core/framework/register_types.h\"",
          "22: #include \"tensorflow/core/framework/tensor.h\"",
          "23: #include \"tensorflow/core/framework/tensor_shape.h\"",
          "25: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:     OP_REQUIRES_OK(",
          "39:         context, context->input_list(\"rt_nested_splits\", &rt_nested_splits_in));",
          "40:     const int rt_nested_splits_len = rt_nested_splits_in.size();",
          "42:     std::vector<ConstFlatSplits> rt_nested_splits;",
          "43:     rt_nested_splits.reserve(rt_nested_splits_len);",
          "44:     for (int i = 0; i < rt_nested_splits_len; ++i) {",
          "",
          "[Removed Lines]",
          "41:     DCHECK_GT(rt_nested_splits_len, 0);  // Enforced by REGISTER_OP.",
          "",
          "[Added Lines]",
          "42:     OP_REQUIRES(context, rt_nested_splits_len > 0,",
          "43:                 errors::InvalidArgument(\"rt_nested_splits must be non empty\"));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "161:       if (rt_nested_splits[i](0) != 0) {",
          "162:         return InvalidArgument(\"First value of ragged splits must be 0.\");",
          "163:       }",
          "164:       if (i > 0) {",
          "165:         SPLITS_TYPE last_split =",
          "166:             rt_nested_splits[i - 1](rt_nested_splits[i - 1].size() - 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:       for (int j = 1; j < rt_nested_splits[i].size(); ++j) {",
          "167:         if (rt_nested_splits[i](j) < rt_nested_splits[i](j - 1)) {",
          "168:           return InvalidArgument(",
          "169:               \"Ragged splits should be non decreasing, but we got \",",
          "170:               rt_nested_splits[i](j - 1), \" followed by \",",
          "171:               rt_nested_splits[i](j));",
          "172:         }",
          "173:       }",
          "",
          "---------------"
        ]
      }
    }
  ]
}