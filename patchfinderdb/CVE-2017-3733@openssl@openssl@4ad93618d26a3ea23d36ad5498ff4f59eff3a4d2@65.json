{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a84627454ba887bee7b6563a5101c2ce065ae386",
      "candidate_info": {
        "commit_hash": "a84627454ba887bee7b6563a5101c2ce065ae386",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a84627454ba887bee7b6563a5101c2ce065ae386",
        "files": [
          "crypto/asn1/a_int.c"
        ],
        "message": "asn1/a_int.c: don't write result if returning error.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3192)\n\n(cherry picked from commit b997adb3a518b065240e70acf38ec5f77a937f53)",
        "before_after_code_files": [
          "crypto/asn1/a_int.c||crypto/asn1/a_int.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_int.c||crypto/asn1/a_int.c": [
          "File: crypto/asn1/a_int.c -> crypto/asn1/a_int.c"
        ]
      }
    },
    {
      "candidate_hash": "8d92311c50e58dee074bbbf7fa390e592ee8df77",
      "candidate_info": {
        "commit_hash": "8d92311c50e58dee074bbbf7fa390e592ee8df77",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8d92311c50e58dee074bbbf7fa390e592ee8df77",
        "files": [
          "Configurations/unix-Makefile.tmpl",
          "doc/crypto/ASN1_STRING_print_ex.pod",
          "doc/crypto/BN_BLINDING_new.pod",
          "doc/crypto/BN_CTX_new.pod",
          "doc/crypto/BN_add.pod",
          "doc/crypto/BN_add_word.pod",
          "doc/crypto/BN_bn2bin.pod",
          "doc/crypto/BN_cmp.pod",
          "doc/crypto/BN_copy.pod",
          "doc/crypto/BN_generate_prime.pod",
          "doc/crypto/BN_mod_inverse.pod",
          "doc/crypto/BN_mod_mul_montgomery.pod",
          "doc/crypto/BN_mod_mul_reciprocal.pod",
          "doc/crypto/BN_new.pod",
          "doc/crypto/BN_num_bytes.pod",
          "doc/crypto/BN_rand.pod",
          "doc/crypto/BN_set_bit.pod",
          "doc/crypto/BN_swap.pod",
          "doc/crypto/BN_zero.pod",
          "doc/crypto/CONF_modules_load_file.pod",
          "doc/crypto/CRYPTO_get_ex_new_index.pod",
          "doc/crypto/ECPKParameters_print.pod",
          "doc/crypto/EC_GFp_simple_method.pod",
          "doc/crypto/EC_GROUP_copy.pod",
          "doc/crypto/EC_GROUP_new.pod",
          "doc/crypto/EC_KEY_get_enc_flags.pod",
          "doc/crypto/EC_KEY_new.pod",
          "doc/crypto/EC_POINT_add.pod",
          "doc/crypto/EC_POINT_new.pod",
          "doc/crypto/OPENSSL_init_crypto.pod",
          "doc/crypto/SCT_new.pod",
          "doc/crypto/SMIME_read_PKCS7.pod",
          "doc/crypto/UI_new.pod",
          "doc/crypto/X509_LOOKUP_hash_dir.pod",
          "doc/crypto/X509_digest.pod",
          "doc/crypto/ct.pod",
          "doc/crypto/d2i_PrivateKey.pod",
          "doc/crypto/x509.pod",
          "doc/ssl/SSL_CTX_set_ct_validation_callback.pod",
          "doc/ssl/SSL_CTX_set_verify.pod",
          "doc/ssl/SSL_set_bio.pod",
          "doc/ssl/ssl.pod",
          "util/find-doc-nits",
          "util/find-doc-nits.pl"
        ],
        "message": "Fix many doc L<> errors\n\nAdd 2017 copyright year\nAdd missing typedef to NAME\nRemove ec(7) and bn(7) doc links\nRemove .pod link errors, bogus links, make a few typo corrections\nFix some typo's in links and some missing items.\nDon't link to C runtime functions (See OPENSSL_malloc for example/precedent)\nDocument ASN1_tag2str(), add a few typedef's that were missing from NAME\nUpdate doc-nits target; addresses\n    https://github.com/openssl/openssl/pull/1900#issuecomment-259943891,\nMerge check-doc-links into find-doc-nits; if run regularly, would have found\n    https://github.com/openssl/openssl/pull/2825\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2862)\n(cherry picked from commit 9e183d2271653cbba2d9cf56d40c1356705207aa)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "284:  -$(RM) `find . -name '*{- $depext -}' -a \\! -path \"./.git/*\"`",
          "285:  -$(RM) `find . -name '*{- $objext -}' -a \\! -path \"./.git/*\"`",
          "286:  $(RM) core",
          "288:  $(RM) test/.rnd",
          "289:  $(RM) openssl.pc libcrypto.pc libssl.pc",
          "290:  -$(RM) `find . -type l -a \\! -path \"./.git/*\"`",
          "",
          "[Removed Lines]",
          "287:  $(RM) tags TAGS",
          "",
          "[Added Lines]",
          "287:  $(RM) tags TAGS doc-nits",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "581: generate: generate_apps generate_crypto_bn generate_crypto_objects \\",
          "582:           generate_crypto_conf generate_crypto_asn1",
          "584: # Test coverage is a good idea for the future",
          "585: #coverage: $(PROGRAMS) $(TESTPROGRAMS)",
          "586: # ...",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "584: doc-nits:",
          "585:  (cd $(SRCDIR); $(PERL) util/find-doc-nits.pl -n ) >doc-nits",
          "586:  if [ -s doc-nits ] ; then cat doc-nits; rm doc-nits ; exit 1; fi",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "85342b7d4ffa26fb0316c9cb5574a0d0bedc8a1e",
      "candidate_info": {
        "commit_hash": "85342b7d4ffa26fb0316c9cb5574a0d0bedc8a1e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/85342b7d4ffa26fb0316c9cb5574a0d0bedc8a1e",
        "files": [
          "apps/req.c",
          "doc/apps/req.pod"
        ],
        "message": "Fix parsing of serial# in req\n\nReported by Jakub Wilk.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2556)\n(cherry picked from commit be4c82aa767998ce2a5717fc895482052373f1b1)",
        "before_after_code_files": [
          "apps/req.c||apps/req.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/req.c||apps/req.c": [
          "File: apps/req.c -> apps/req.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:     {\"multivalue-rdn\", OPT_MULTIVALUE_RDN, '-',",
          "122:      \"Enable support for multivalued RDNs\"},",
          "123:     {\"days\", OPT_DAYS, 'p', \"Number of days cert is valid for\"},",
          "125:     {\"extensions\", OPT_EXTENSIONS, 's',",
          "126:      \"Cert extension section (override value in config file)\"},",
          "127:     {\"reqexts\", OPT_REQEXTS, 's',",
          "",
          "[Removed Lines]",
          "124:     {\"set_serial\", OPT_SET_SERIAL, 'p', \"Serial number to use\"},",
          "",
          "[Added Lines]",
          "124:     {\"set_serial\", OPT_SET_SERIAL, 's', \"Serial number to use\"},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "72afe2fdc7ae856155aea0efb8a33ad8bc128233",
      "candidate_info": {
        "commit_hash": "72afe2fdc7ae856155aea0efb8a33ad8bc128233",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/72afe2fdc7ae856155aea0efb8a33ad8bc128233",
        "files": [
          "crypto/x509/x509_lu.c"
        ],
        "message": "Remove duplicate X509_OBJECT free function.\n\nThese two functions do the same thing.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3001)\n(cherry picked from commit b6ef12c4baa3a2c1ff0e3ac71270588dfcfe8cbd)",
        "before_after_code_files": [
          "crypto/x509/x509_lu.c||crypto/x509/x509_lu.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/x509_lu.c||crypto/x509/x509_lu.c": [
          "File: crypto/x509/x509_lu.c -> crypto/x509/x509_lu.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "172:     return NULL;",
          "173: }",
          "190: void X509_STORE_free(X509_STORE *vfy)",
          "191: {",
          "192:     int i;",
          "",
          "[Removed Lines]",
          "175: static void cleanup(X509_OBJECT *a)",
          "176: {",
          "177:     if (!a)",
          "178:         return;",
          "179:     if (a->type == X509_LU_X509) {",
          "180:         X509_free(a->data.x509);",
          "181:     } else if (a->type == X509_LU_CRL) {",
          "182:         X509_CRL_free(a->data.crl);",
          "183:     } else {",
          "185:     }",
          "187:     OPENSSL_free(a);",
          "188: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "209:         X509_LOOKUP_free(lu);",
          "210:     }",
          "211:     sk_X509_LOOKUP_free(sk);",
          "214:     CRYPTO_free_ex_data(CRYPTO_EX_INDEX_X509_STORE, vfy, &vfy->ex_data);",
          "215:     X509_VERIFY_PARAM_free(vfy->param);",
          "",
          "[Removed Lines]",
          "212:     sk_X509_OBJECT_pop_free(vfy->objs, cleanup);",
          "",
          "[Added Lines]",
          "197:     sk_X509_OBJECT_pop_free(vfy->objs, X509_OBJECT_free);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "027211787a0388bae578f153e7b15b4eb30f352e",
      "candidate_info": {
        "commit_hash": "027211787a0388bae578f153e7b15b4eb30f352e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/027211787a0388bae578f153e7b15b4eb30f352e",
        "files": [
          "test/recipes/04-test_pem.t",
          "test/recipes/04-test_pem_data/beermug.pem"
        ],
        "message": "Add AGL's \"beer mug\" PEM file as another test input\n\nAGL has a history of pointing out the idiosynchronies/laxness of the\nopenssl PEM parser in amusing ways.  If we want this functionality to\nstay present, we should test that it works.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2756)\n(cherry picked from commit a00b9560f7ece1e51bd7a8dc6a7ffb7a3d20cf86)",
        "before_after_code_files": [
          "test/recipes/04-test_pem.t||test/recipes/04-test_pem.t",
          "test/recipes/04-test_pem_datbeermug.pem||test/recipes/04-test_pem_data/beermug.pem"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/04-test_pem.t||test/recipes/04-test_pem.t": [
          "File: test/recipes/04-test_pem.t -> test/recipes/04-test_pem.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     \"dsa.pem\" => 1",
          "77: );",
          "81: foreach my $input (keys %cert_expected) {",
          "82:     my @common = ($cmd, \"x509\", \"-text\", \"-noout\", \"-inform\", \"PEM\", \"-in\");",
          "",
          "[Removed Lines]",
          "79: plan tests =>  scalar keys(%cert_expected) + scalar keys(%dsa_expected);",
          "",
          "[Added Lines]",
          "79: plan tests =>  scalar keys(%cert_expected) + scalar keys(%dsa_expected) + 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:         is((scalar @match > 0 ? 1 : 0), $dsa_expected{$input});",
          "94:     }",
          "95: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96: SKIP: {",
          "97:     skip \"RSA support disabled, skipping...\", 1 unless !disabled(\"rsa\");",
          "98:     my @common = ($cmd, \"pkey\", \"-inform\", \"PEM\", \"-noout\", \"-text\", \"-in\");",
          "99:     my @data = run(app([@common, data_file(\"beermug.pem\")], stderr => undef), capture => 1);",
          "100:     my @match = grep /00:a0:3a:21:14:5d:cd:b6:d5:a0:3e:49:23:c1:3a:/, @data;",
          "101:     ok(scalar @match > 0 ? 1 : 0);",
          "102: }",
          "",
          "---------------"
        ],
        "test/recipes/04-test_pem_datbeermug.pem||test/recipes/04-test_pem_data/beermug.pem": [
          "File: test/recipes/04-test_pem_datbeermug.pem -> test/recipes/04-test_pem_data/beermug.pem",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: -----BEGIN RSA PRIVATE KEY-----",
          "2: MIICXQIBAAKBgQC+qeXl4ZUfQZFmcGAPwdt7Mza4NQ6mJHehc4V/hVYc6eepvL/5",
          "3: uyyflzuhVy5ufctdi92FlXcIct5nNPdqK0PPdWH5Uzw0t/OjI5y/SJh8ur20krqw",
          "4: j/N1IOs63AcGLIVSkwx89iQbxj+2tV+YxFpGunUYyR/bJJWczuDMA/CujQIDAQAB",
          "5: AoGBAKA6IRRdzbbVoD5JI8E6NZtEP7DwDZ57uPk6Hq86u1JTEzcmguJ4dJitPBRr",
          "6: Mn7yQgwcNQ5EvCKifdqXvXBAaZuiiPFuCS/gfUw04jVHXWvG8ZvBQC3dutUYnFW7",
          "7: hdun8QU/Z6a1BethvESi1J1vgY2+XC4cBIvbutTc9HhMhbQ1AkEA8YTKGsVEYoKE",
          "8: d7sSx4qjeN4bgzeVgIwRt01wJ1EJN62LhwO+pYSXvTt14aHxiascejJqUhtuWvzR",
          "9: nuwydqiDpwJBAMoYgUoWdgW4O/C5ZXjiSia54jzrt7upxSq88njTRo/MCQfuJVbc",
          "10: 3GUD+15V0zNhx9D7lcI+1uxhfcD7jWbJEqsCQBrE/SG6e7nvfX9H3O0BEN10wNfq",
          "11: cUeuPshybNvuv3bMZYqxf5AZAjiXPpmjuYHo1V8191Lid3jeTN2wkGdWhkECQQCI",
          "12: Rj3oV3z+Hl1M1bc27GBT/MQxkEE0qiXpy780+kJ6dHsifdNv3z4+X5EA656e5zB2",
          "13: Gy/A697BRnwlxXpz9OJBAkAUe7Ap0yU8aO6g5g+gsH+18bF0MftWh81VLOo09rRp",
          "14: SOHxNGGJLE5As5XkCGUZVIass1r8Q4N22Wip0QzeSWDi",
          "16: -          .   *   ..  . *  *",
          "18: -            (Q@*0CG*O()  ___",
          "19: -           |\\_________/|/ _ \\",
          "20: -           |  |  |  |  | / | |",
          "21: -           |  |  |  |  | | | |",
          "22: -           |  |  |  |  | | | |",
          "23: -           |  |  |  |  | | | |",
          "24: -           |  |  |  |  | | | |",
          "25: -           |  |  |  |  | \\_| |",
          "26: -           |  |  |  |  |\\___/",
          "27: -           |\\_|__|__|_/|",
          "28: -            \\_________/",
          "30: -----END RSA PRIVATE KEY-----",
          "",
          "---------------"
        ]
      }
    }
  ]
}