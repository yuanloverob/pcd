{
  "cve_id": "CVE-2013-6376",
  "cve_desc": "The recalculate_apic_map function in arch/x86/kvm/lapic.c in the KVM subsystem in the Linux kernel through 3.12.5 allows guest OS users to cause a denial of service (host OS crash) via a crafted ICR write operation in x2apic mode.",
  "repo": "torvalds/linux",
  "patch_hash": "17d68b763f09a9ce824ae23eb62c9efc57b69271",
  "patch_info": {
    "commit_hash": "17d68b763f09a9ce824ae23eb62c9efc57b69271",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/17d68b763f09a9ce824ae23eb62c9efc57b69271",
    "files": [
      "arch/x86/kvm/lapic.c"
    ],
    "message": "KVM: x86: fix guest-initiated crash with x2apic (CVE-2013-6376)\n\nA guest can cause a BUG_ON() leading to a host kernel crash.\nWhen the guest writes to the ICR to request an IPI, while in x2apic\nmode the following things happen, the destination is read from\nICR2, which is a register that the guest can control.\n\nkvm_irq_delivery_to_apic_fast uses the high 16 bits of ICR2 as the\ncluster id.  A BUG_ON is triggered, which is a protection against\naccessing map->logical_map with an out-of-bounds access and manages\nto avoid that anything really unsafe occurs.\n\nThe logic in the code is correct from real HW point of view. The problem\nis that KVM supports only one cluster with ID 0 in clustered mode, but\nthe code that has the bug does not take this into account.\n\nReported-by: Lars Bull <larsbull@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Gleb Natapov <gleb@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "before_after_code_files": [
      "arch/x86/kvm/lapic.c||arch/x86/kvm/lapic.c"
    ]
  },
  "patch_diff": {
    "arch/x86/kvm/lapic.c||arch/x86/kvm/lapic.c": [
      "File: arch/x86/kvm/lapic.c -> arch/x86/kvm/lapic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "143:  return (kvm_apic_get_reg(apic, APIC_ID) >> 24) & 0xff;",
      "144: }",
      "146: static void recalculate_apic_map(struct kvm *kvm)",
      "147: {",
      "148:  struct kvm_apic_map *new, *old = NULL;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "146: #define KVM_X2APIC_CID_BITS 0",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "180:   if (apic_x2apic_mode(apic)) {",
      "181:    new->ldr_bits = 32;",
      "182:    new->cid_shift = 16;",
      "184:   } else if (kvm_apic_sw_enabled(apic) &&",
      "185:     !new->cid_mask /* flat mode */ &&",
      "186:     kvm_apic_get_reg(apic, APIC_DFR) == APIC_DFR_CLUSTER) {",
      "",
      "[Removed Lines]",
      "183:    new->cid_mask = new->lid_mask = 0xffff;",
      "",
      "[Added Lines]",
      "185:    new->cid_mask = (1 << KVM_X2APIC_CID_BITS) - 1;",
      "186:    new->lid_mask = 0xffff;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "45c3094a6424614e6fea135e4e1afd8e0a65f468",
      "candidate_info": {
        "commit_hash": "45c3094a6424614e6fea135e4e1afd8e0a65f468",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/45c3094a6424614e6fea135e4e1afd8e0a65f468",
        "files": [
          "arch/x86/kvm/lapic.c",
          "arch/x86/kvm/lapic.h"
        ],
        "message": "KVM: x86: allow 256 logical x2APICs again\n\nWhile fixing an x2apic bug,\n 17d68b7 KVM: x86: fix guest-initiated crash with x2apic (CVE-2013-6376)\nwe've made only one cluster available.  This means that the amount of\nlogically addressible x2APICs was reduced to 16 and VCPUs kept\noverwriting themselves in that region, so even the first cluster wasn't\nset up correctly.\n\nThis patch extends x2APIC support back to the logical_map's limit, and\nkeeps the CVE fixed as messages for non-present APICs are dropped.\n\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
        "before_after_code_files": [
          "arch/x86/kvm/lapic.c||arch/x86/kvm/lapic.c",
          "arch/x86/kvm/lapic.h||arch/x86/kvm/lapic.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "arch/x86/kvm/lapic.c||arch/x86/kvm/lapic.c"
          ],
          "candidate": [
            "arch/x86/kvm/lapic.c||arch/x86/kvm/lapic.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/x86/kvm/lapic.c||arch/x86/kvm/lapic.c": [
          "File: arch/x86/kvm/lapic.c -> arch/x86/kvm/lapic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:  return (kvm_apic_get_reg(apic, APIC_ID) >> 24) & 0xff;",
          "133: }",
          "137: static void recalculate_apic_map(struct kvm *kvm)",
          "138: {",
          "139:  struct kvm_apic_map *new, *old = NULL;",
          "",
          "[Removed Lines]",
          "135: #define KVM_X2APIC_CID_BITS 0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "163:   if (apic_x2apic_mode(apic)) {",
          "164:    new->ldr_bits = 32;",
          "165:    new->cid_shift = 16;",
          "168:    new->broadcast = X2APIC_BROADCAST;",
          "169:   } else if (kvm_apic_get_reg(apic, APIC_LDR)) {",
          "170:    if (kvm_apic_get_reg(apic, APIC_DFR) ==",
          "",
          "[Removed Lines]",
          "166:    new->cid_mask = (1 << KVM_X2APIC_CID_BITS) - 1;",
          "167:    new->lid_mask = 0xffff;",
          "",
          "[Added Lines]",
          "164:    new->cid_mask = new->lid_mask = 0xffff;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "700:   dst = &map->phys_map[irq->dest_id];",
          "701:  } else {",
          "702:   u32 mda = irq->dest_id << (32 - map->ldr_bits);",
          "706:   bitmap = apic_logical_id(map, mda);",
          "",
          "[Removed Lines]",
          "704:   dst = map->logical_map[apic_cluster_id(map, mda)];",
          "",
          "[Added Lines]",
          "700:   u16 cid = apic_cluster_id(map, mda);",
          "702:   if (cid >= ARRAY_SIZE(map->logical_map))",
          "703:    goto out;",
          "705:   dst = map->logical_map[cid];",
          "",
          "---------------"
        ],
        "arch/x86/kvm/lapic.h||arch/x86/kvm/lapic.h": [
          "File: arch/x86/kvm/lapic.h -> arch/x86/kvm/lapic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:  ldr >>= 32 - map->ldr_bits;",
          "155:  cid = (ldr >> map->cid_shift) & map->cid_mask;",
          "159:  return cid;",
          "160: }",
          "",
          "[Removed Lines]",
          "157:  BUG_ON(cid >= ARRAY_SIZE(map->logical_map));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}