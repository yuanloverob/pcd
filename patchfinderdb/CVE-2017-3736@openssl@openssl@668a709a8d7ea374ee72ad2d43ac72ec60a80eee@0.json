{
  "cve_id": "CVE-2017-3736",
  "cve_desc": "There is a carry propagating bug in the x86_64 Montgomery squaring procedure in OpenSSL before 1.0.2m and 1.1.0 before 1.1.0g. No EC algorithms are affected. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be very significant and likely only accessible to a limited number of attackers. An attacker would additionally need online access to an unpatched system using the target private key in a scenario with persistent DH parameters and a private key that is shared between multiple clients. This only affects processors that support the BMI1, BMI2 and ADX extensions like Intel Broadwell (5th generation) and later or AMD Ryzen.",
  "repo": "openssl/openssl",
  "patch_hash": "668a709a8d7ea374ee72ad2d43ac72ec60a80eee",
  "patch_info": {
    "commit_hash": "668a709a8d7ea374ee72ad2d43ac72ec60a80eee",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/668a709a8d7ea374ee72ad2d43ac72ec60a80eee",
    "files": [
      "crypto/bn/asm/x86_64-mont5.pl"
    ],
    "message": "bn/asm/x86_64-mont5.pl: fix carry bug in bn_sqrx8x_internal.\n\nCredit to OSS-Fuzz for finding this.\n\nCVE-2017-3736\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl"
    ]
  },
  "patch_diff": {
    "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl": [
      "File: crypto/bn/asm/x86_64-mont5.pl -> crypto/bn/asm/x86_64-mont5.pl",
      "--- Hunk 1 ---",
      "[Context before]",
      "3206:  .byte 0x67",
      "3207:  sbb %rax,%rax  # mov %cf,%rax",
      "3208:  xor %ebx,%ebx  # cf=0, of=0",
      "3210:  jmp .Lsqrx8x_loop",
      "3213: .Lsqrx8x_break:",
      "3214:  sub 16+8(%rsp),%r8  # consume last carry",
      "3215:  mov 24+8(%rsp),$carry # initial $tptr, borrow $carry",
      "3216:  mov 0*8($aptr),%rdx  # a[8], modulo-scheduled",
      "",
      "[Removed Lines]",
      "3209:  mov %rax,16+8(%rsp)  # offload carry",
      "3212: .align 32",
      "",
      "[Added Lines]",
      "3209:  mov %rax,16+8(%rsp)  # offload carry",
      "3210:  jmp .Lsqrx8x_loop",
      "3213: .Lsqrx8x_break:",
      "3215:  sub 16+8(%rsp),%rbx  # mov 16(%rsp),%cf",
      "3217:  mov 24+8(%rsp),$carry # initial $tptr, borrow $carry",
      "3218:  adcx $zero,%r9",
      "3219:  mov 0*8($aptr),%rdx  # a[8], modulo-scheduled",
      "3220:  adc \\$0,%r10",
      "3221:  mov %r8,0*8($tptr)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "38d600147331d36e74174ebbd4008b63188b321b",
      "candidate_info": {
        "commit_hash": "38d600147331d36e74174ebbd4008b63188b321b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/38d600147331d36e74174ebbd4008b63188b321b",
        "files": [
          "crypto/bn/asm/x86_64-mont5.pl"
        ],
        "message": "bn/asm/x86_64-mont5.pl: fix carry bug in bn_sqrx8x_internal.\n\nCredit to OSS-Fuzz for finding this.\n\nCVE-2017-3736\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl"
          ],
          "candidate": [
            "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl"
          ]
        }
      },
      "candidate_diff": {
        "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl": [
          "File: crypto/bn/asm/x86_64-mont5.pl -> crypto/bn/asm/x86_64-mont5.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "3090:  .byte 0x67",
          "3091:  sbb %rax,%rax  # mov %cf,%rax",
          "3092:  xor %ebx,%ebx  # cf=0, of=0",
          "3094:  jmp .Lsqrx8x_loop",
          "3097: .Lsqrx8x_break:",
          "3098:  sub 16+8(%rsp),%r8  # consume last carry",
          "3099:  mov 24+8(%rsp),$carry # initial $tptr, borrow $carry",
          "3100:  mov 0*8($aptr),%rdx  # a[8], modulo-scheduled",
          "",
          "[Removed Lines]",
          "3093:  mov %rax,16+8(%rsp)  # offload carry",
          "3096: .align 32",
          "",
          "[Added Lines]",
          "3093:  mov %rax,16+8(%rsp)  # offload carry",
          "3094:  jmp .Lsqrx8x_loop",
          "3097: .Lsqrx8x_break:",
          "3099:  sub 16+8(%rsp),%rbx  # mov 16(%rsp),%cf",
          "3101:  mov 24+8(%rsp),$carry # initial $tptr, borrow $carry",
          "3102:  adcx $zero,%r9",
          "3103:  mov 0*8($aptr),%rdx  # a[8], modulo-scheduled",
          "3104:  adc \\$0,%r10",
          "3105:  mov %r8,0*8($tptr)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4443cf7aa0099e5ce615c18cee249fff77fb0871",
      "candidate_info": {
        "commit_hash": "4443cf7aa0099e5ce615c18cee249fff77fb0871",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4443cf7aa0099e5ce615c18cee249fff77fb0871",
        "files": [
          "crypto/bn/asm/x86_64-mont5.pl"
        ],
        "message": "bn/asm/x86_64-mont5.pl: fix carry bug in bn_sqrx8x_internal.\n\nCredit to OSS-Fuzz for finding this.\n\nCVE-2017-3736\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl"
          ],
          "candidate": [
            "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl"
          ]
        }
      },
      "candidate_diff": {
        "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl": [
          "File: crypto/bn/asm/x86_64-mont5.pl -> crypto/bn/asm/x86_64-mont5.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "3099:  .byte 0x67",
          "3100:  sbb %rax,%rax  # mov %cf,%rax",
          "3101:  xor %ebx,%ebx  # cf=0, of=0",
          "3103:  jmp .Lsqrx8x_loop",
          "3106: .Lsqrx8x_break:",
          "3107:  sub 16+8(%rsp),%r8  # consume last carry",
          "3108:  mov 24+8(%rsp),$carry # initial $tptr, borrow $carry",
          "3109:  mov 0*8($aptr),%rdx  # a[8], modulo-scheduled",
          "",
          "[Removed Lines]",
          "3102:  mov %rax,16+8(%rsp)  # offload carry",
          "3105: .align 32",
          "",
          "[Added Lines]",
          "3102:  mov %rax,16+8(%rsp)  # offload carry",
          "3103:  jmp .Lsqrx8x_loop",
          "3106: .Lsqrx8x_break:",
          "3108:  sub 16+8(%rsp),%rbx  # mov 16(%rsp),%cf",
          "3110:  mov 24+8(%rsp),$carry # initial $tptr, borrow $carry",
          "3111:  adcx $zero,%r9",
          "3112:  mov 0*8($aptr),%rdx  # a[8], modulo-scheduled",
          "3113:  adc \\$0,%r10",
          "3114:  mov %r8,0*8($tptr)",
          "",
          "---------------"
        ]
      }
    }
  ]
}