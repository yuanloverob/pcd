{
  "cve_id": "CVE-2017-18043",
  "cve_desc": "Integer overflow in the macro ROUND_UP (n, d) in Quick Emulator (Qemu) allows a user to cause a denial of service (Qemu process crash).",
  "repo": "qemu/qemu",
  "patch_hash": "2098b073f398cd628c09c5a78537a6854e85830d",
  "patch_info": {
    "commit_hash": "2098b073f398cd628c09c5a78537a6854e85830d",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/2098b073f398cd628c09c5a78537a6854e85830d",
    "files": [
      "include/qemu/osdep.h"
    ],
    "message": "osdep: Fix ROUND_UP(64-bit, 32-bit)\n\nWhen using bit-wise operations that exploit the power-of-two\nnature of the second argument of ROUND_UP(), we still need to\nensure that the mask is as wide as the first argument (done\nby using a ternary to force proper arithmetic promotion).\nUnpatched, ROUND_UP(2ULL*1024*1024*1024*1024, 512U) produces 0,\ninstead of the intended 2TiB, because negation of an unsigned\n32-bit quantity followed by widening to 64-bits does not\nsign-extend the mask.\n\nBroken since its introduction in commit 292c8e50 (v1.5.0).\nCallers that passed the same width type to both macro parameters,\nor that had other code to ensure the first parameter's maximum\nruntime value did not exceed the second parameter's width, are\nunaffected, but I did not audit to see which (if any) existing\nclients of the macro could trigger incorrect behavior (I found\nthe bug while adding a new use of the macro).\n\nWhile preparing the patch, checkpatch complained about poor\nspacing, so I also fixed that here and in the nearby DIV_ROUND_UP.\n\nCC: qemu-trivial@nongnu.org\nCC: qemu-stable@nongnu.org\nSigned-off-by: Eric Blake <eblake@redhat.com>\nReviewed-by: Laszlo Ersek <lersek@redhat.com>\nReviewed-by: Richard Henderson <richard.henderson@linaro.org>\nSigned-off-by: Michael Tokarev <mjt@tls.msk.ru>",
    "before_after_code_files": [
      "include/qemu/osdep.h||include/qemu/osdep.h"
    ]
  },
  "patch_diff": {
    "include/qemu/osdep.h||include/qemu/osdep.h": [
      "File: include/qemu/osdep.h -> include/qemu/osdep.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "209: #ifndef ROUND_UP",
      "211: #endif",
      "213: #ifndef DIV_ROUND_UP",
      "215: #endif",
      "",
      "[Removed Lines]",
      "210: #define ROUND_UP(n,d) (((n) + (d) - 1) & -(d))",
      "214: #define DIV_ROUND_UP(n,d) (((n) + (d) - 1) / (d))",
      "",
      "[Added Lines]",
      "210: #define ROUND_UP(n, d) (((n) + (d) - 1) & -(0 ? (n) : (d)))",
      "214: #define DIV_ROUND_UP(n, d) (((n) + (d) - 1) / (d))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "33a599667a9e70588483a31286dfff8cfc27d513",
      "candidate_info": {
        "commit_hash": "33a599667a9e70588483a31286dfff8cfc27d513",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/33a599667a9e70588483a31286dfff8cfc27d513",
        "files": [
          "include/qemu/osdep.h"
        ],
        "message": "osdep: Fix ROUND_UP(64-bit, 32-bit)\n\nWhen using bit-wise operations that exploit the power-of-two\nnature of the second argument of ROUND_UP(), we still need to\nensure that the mask is as wide as the first argument (done\nby using a ternary to force proper arithmetic promotion).\nUnpatched, ROUND_UP(2ULL*1024*1024*1024*1024, 512U) produces 0,\ninstead of the intended 2TiB, because negation of an unsigned\n32-bit quantity followed by widening to 64-bits does not\nsign-extend the mask.\n\nBroken since its introduction in commit 292c8e50 (v1.5.0).\nCallers that passed the same width type to both macro parameters,\nor that had other code to ensure the first parameter's maximum\nruntime value did not exceed the second parameter's width, are\nunaffected, but I did not audit to see which (if any) existing\nclients of the macro could trigger incorrect behavior (I found\nthe bug while adding a new use of the macro).\n\nWhile preparing the patch, checkpatch complained about poor\nspacing, so I also fixed that here and in the nearby DIV_ROUND_UP.\n\nCC: qemu-trivial@nongnu.org\nCC: qemu-stable@nongnu.org\nSigned-off-by: Eric Blake <eblake@redhat.com>\nReviewed-by: Laszlo Ersek <lersek@redhat.com>\nReviewed-by: Richard Henderson <richard.henderson@linaro.org>\nSigned-off-by: Michael Tokarev <mjt@tls.msk.ru>\n(cherry picked from commit 2098b073f398cd628c09c5a78537a6854e85830d)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "include/qemu/osdep.h||include/qemu/osdep.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "include/qemu/osdep.h||include/qemu/osdep.h"
          ],
          "candidate": [
            "include/qemu/osdep.h||include/qemu/osdep.h"
          ]
        }
      },
      "candidate_diff": {
        "include/qemu/osdep.h||include/qemu/osdep.h": [
          "File: include/qemu/osdep.h -> include/qemu/osdep.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "193: #ifndef ROUND_UP",
          "195: #endif",
          "197: #ifndef DIV_ROUND_UP",
          "199: #endif",
          "",
          "[Removed Lines]",
          "194: #define ROUND_UP(n,d) (((n) + (d) - 1) & -(d))",
          "198: #define DIV_ROUND_UP(n,d) (((n) + (d) - 1) / (d))",
          "",
          "[Added Lines]",
          "194: #define ROUND_UP(n, d) (((n) + (d) - 1) & -(0 ? (n) : (d)))",
          "198: #define DIV_ROUND_UP(n, d) (((n) + (d) - 1) / (d))",
          "",
          "---------------"
        ]
      }
    }
  ]
}