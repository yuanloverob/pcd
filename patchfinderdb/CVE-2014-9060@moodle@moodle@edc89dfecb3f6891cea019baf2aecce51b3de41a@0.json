{
  "cve_id": "CVE-2014-9060",
  "cve_desc": "The LTI module in Moodle through 2.4.11, 2.5.x before 2.5.9, 2.6.x before 2.6.6, and 2.7.x before 2.7.3 does not properly restrict the parameters used in a return URL, which allows remote attackers to trigger the generation of arbitrary messages via a modified URL, related to mod/lti/locallib.php and mod/lti/return.php.",
  "repo": "moodle/moodle",
  "patch_hash": "edc89dfecb3f6891cea019baf2aecce51b3de41a",
  "patch_info": {
    "commit_hash": "edc89dfecb3f6891cea019baf2aecce51b3de41a",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/edc89dfecb3f6891cea019baf2aecce51b3de41a",
    "files": [
      "mod/lti/locallib.php",
      "mod/lti/return.php"
    ],
    "message": "MDL-47927 LTI: Use PARAM_TEXT and p() for returned messages and errors",
    "before_after_code_files": [
      "mod/lti/locallib.php||mod/lti/locallib.php",
      "mod/lti/return.php||mod/lti/return.php"
    ]
  },
  "patch_diff": {
    "mod/lti/locallib.php||mod/lti/locallib.php": [
      "File: mod/lti/locallib.php -> mod/lti/locallib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "179:         $instance->instructorcustomparameters, $islti2));",
      "181:     $launchcontainer = lti_get_launch_container($instance, $typeconfig);",
      "185:     $url = new \\moodle_url('/mod/lti/return.php', $returnurlparams);",
      "",
      "[Removed Lines]",
      "182:     $returnurlparams = array('course' => $course->id, 'launch_container' => $launchcontainer, 'instanceid' => $instance->id);",
      "",
      "[Added Lines]",
      "182:     $returnurlparams = array('course' => $course->id,",
      "183:                              'launch_container' => $launchcontainer,",
      "184:                              'instanceid' => $instance->id,",
      "185:                              'sesskey' => sesskey());",
      "",
      "---------------"
    ],
    "mod/lti/return.php||mod/lti/return.php": [
      "File: mod/lti/return.php -> mod/lti/return.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: $courseid = required_param('course', PARAM_INT);",
      "31: $instanceid = optional_param('instanceid', 0, PARAM_INT);",
      "35: $unsigned = optional_param('unsigned', '0', PARAM_INT);",
      "37: $launchcontainer = optional_param('launch_container', LTI_LAUNCH_CONTAINER_WINDOW, PARAM_INT);",
      "",
      "[Removed Lines]",
      "33: $errormsg = optional_param('lti_errormsg', '', PARAM_RAW);",
      "34: $msg = optional_param('lti_msg', '', PARAM_RAW);",
      "",
      "[Added Lines]",
      "33: $errormsg = optional_param('lti_errormsg', '', PARAM_TEXT);",
      "34: $msg = optional_param('lti_msg', '', PARAM_TEXT);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "49: require_login($course);",
      "51: if (!empty($errormsg) || !empty($msg)) {",
      "52:     $url = new moodle_url('/mod/lti/return.php', array('course' => $courseid));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "50: require_sesskey();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "72: if (!empty($errormsg)) {",
      "73:     echo get_string('lti_launch_error', 'lti');",
      "77:     if ($unsigned == 1) {",
      "",
      "[Removed Lines]",
      "75:     echo htmlspecialchars($errormsg);",
      "",
      "[Added Lines]",
      "76:     p($errormsg);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "99:     echo $OUTPUT->footer();",
      "100: } else if (!empty($msg)) {",
      "104:     echo $OUTPUT->footer();",
      "",
      "[Removed Lines]",
      "102:     echo htmlspecialchars($msg);",
      "",
      "[Added Lines]",
      "103:     p($msg);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1dbc4f289400bad5b9cfa2db6cf7b93f9fc2dafc",
      "candidate_info": {
        "commit_hash": "1dbc4f289400bad5b9cfa2db6cf7b93f9fc2dafc",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/1dbc4f289400bad5b9cfa2db6cf7b93f9fc2dafc",
        "files": [
          "mod/lti/return.php"
        ],
        "message": "MDL-45982: Implement displaying of non error messages from a provider.",
        "before_after_code_files": [
          "mod/lti/return.php||mod/lti/return.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/lti/return.php||mod/lti/return.php"
          ],
          "candidate": [
            "mod/lti/return.php||mod/lti/return.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lti/return.php||mod/lti/return.php": [
          "File: mod/lti/return.php -> mod/lti/return.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: $instanceid = optional_param('instanceid', 0, PARAM_INT);",
          "33: $errormsg = optional_param('lti_errormsg', '', PARAM_RAW);",
          "34: $unsigned = optional_param('unsigned', '0', PARAM_INT);",
          "36: $launchcontainer = optional_param('launch_container', LTI_LAUNCH_CONTAINER_WINDOW, PARAM_INT);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: $msg = optional_param('lti_msg', '', PARAM_RAW);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: require_login($course);",
          "51:     $url = new moodle_url('/mod/lti/return.php', array('course' => $courseid));",
          "52:     $PAGE->set_url($url);",
          "",
          "[Removed Lines]",
          "50: if (!empty($errormsg)) {",
          "",
          "[Added Lines]",
          "51: if (!empty($errormsg) || !empty($msg)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "66:     if (!empty($lti) and !empty($context)) {",
          "67:         echo $OUTPUT->heading(format_string($lti->name, true, array('context' => $context)));",
          "68:     }",
          "70:     echo get_string('lti_launch_error', 'lti');",
          "72:     echo htmlspecialchars($errormsg);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70: }",
          "72: if (!empty($errormsg)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "90:     }",
          "92:     echo $OUTPUT->footer();",
          "93: } else {",
          "94:     $courseurl = new moodle_url('/course/view.php', array('id' => $courseid));",
          "95:     $url = $courseurl->out();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96: } else if (!empty($msg)) {",
          "98:     echo htmlspecialchars($msg);",
          "100:     echo $OUTPUT->footer();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "339c6eca3c881742178637cb41cc7ebbe4a3b6b0",
      "candidate_info": {
        "commit_hash": "339c6eca3c881742178637cb41cc7ebbe4a3b6b0",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/339c6eca3c881742178637cb41cc7ebbe4a3b6b0",
        "files": [
          "mod/lti/locallib.php",
          "mod/lti/return.php"
        ],
        "message": "MDL-47927 LTI: Use PARAM_TEXT and p() for returned messages and errors",
        "before_after_code_files": [
          "mod/lti/locallib.php||mod/lti/locallib.php",
          "mod/lti/return.php||mod/lti/return.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/lti/locallib.php||mod/lti/locallib.php",
            "mod/lti/return.php||mod/lti/return.php"
          ],
          "candidate": [
            "mod/lti/locallib.php||mod/lti/locallib.php",
            "mod/lti/return.php||mod/lti/return.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lti/locallib.php||mod/lti/locallib.php": [
          "File: mod/lti/locallib.php -> mod/lti/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:     $requestparams = lti_build_request($instance, $typeconfig, $course);",
          "156:     $launchcontainer = lti_get_launch_container($instance, $typeconfig);",
          "159:     if ( $orgid ) {",
          "160:         $requestparams[\"tool_consumer_instance_guid\"] = $orgid;",
          "",
          "[Removed Lines]",
          "157:     $returnurlparams = array('course' => $course->id, 'launch_container' => $launchcontainer, 'instanceid' => $instance->id);",
          "",
          "[Added Lines]",
          "157:     $returnurlparams = array('course' => $course->id,",
          "158:                              'launch_container' => $launchcontainer,",
          "159:                              'instanceid' => $instance->id,",
          "160:                              'sesskey' => sesskey());",
          "",
          "---------------"
        ],
        "mod/lti/return.php||mod/lti/return.php": [
          "File: mod/lti/return.php -> mod/lti/return.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: $courseid = required_param('course', PARAM_INT);",
          "32: $instanceid = optional_param('instanceid', 0, PARAM_INT);",
          "36: $unsigned = optional_param('unsigned', '0', PARAM_INT);",
          "38: $launchcontainer = optional_param('launch_container', LTI_LAUNCH_CONTAINER_WINDOW, PARAM_INT);",
          "",
          "[Removed Lines]",
          "34: $errormsg = optional_param('lti_errormsg', '', PARAM_RAW);",
          "35: $msg = optional_param('lti_msg', '', PARAM_RAW);",
          "",
          "[Added Lines]",
          "34: $errormsg = optional_param('lti_errormsg', '', PARAM_TEXT);",
          "35: $msg = optional_param('lti_msg', '', PARAM_TEXT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50: require_login($course);",
          "52: if (!empty($errormsg) || !empty($msg)) {",
          "53:     $url = new moodle_url('/mod/lti/return.php', array('course' => $courseid));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: require_sesskey();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73: if (!empty($errormsg)) {",
          "74:     echo get_string('lti_launch_error', 'lti');",
          "78:     if ($unsigned == 1) {",
          "",
          "[Removed Lines]",
          "76:     echo htmlspecialchars($errormsg);",
          "",
          "[Added Lines]",
          "77:     p($errormsg);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "100:     echo $OUTPUT->footer();",
          "101: } else if (!empty($msg)) {",
          "105:     echo $OUTPUT->footer();",
          "",
          "[Removed Lines]",
          "103:     echo htmlspecialchars($msg);",
          "",
          "[Added Lines]",
          "104:     p($msg);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "15bde5352bd4bdb54105c0fdfd956c9ca420e4c6",
      "candidate_info": {
        "commit_hash": "15bde5352bd4bdb54105c0fdfd956c9ca420e4c6",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/15bde5352bd4bdb54105c0fdfd956c9ca420e4c6",
        "files": [
          "mod/lti/locallib.php",
          "mod/lti/return.php"
        ],
        "message": "MDL-47927 LTI: Use PARAM_TEXT and p() for returned messages and errors",
        "before_after_code_files": [
          "mod/lti/locallib.php||mod/lti/locallib.php",
          "mod/lti/return.php||mod/lti/return.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/lti/locallib.php||mod/lti/locallib.php",
            "mod/lti/return.php||mod/lti/return.php"
          ],
          "candidate": [
            "mod/lti/locallib.php||mod/lti/locallib.php",
            "mod/lti/return.php||mod/lti/return.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lti/locallib.php||mod/lti/locallib.php": [
          "File: mod/lti/locallib.php -> mod/lti/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:     $requestparams = lti_build_request($instance, $typeconfig, $course);",
          "156:     $launchcontainer = lti_get_launch_container($instance, $typeconfig);",
          "159:     if ( $orgid ) {",
          "160:         $requestparams[\"tool_consumer_instance_guid\"] = $orgid;",
          "",
          "[Removed Lines]",
          "157:     $returnurlparams = array('course' => $course->id, 'launch_container' => $launchcontainer, 'instanceid' => $instance->id);",
          "",
          "[Added Lines]",
          "157:     $returnurlparams = array('course' => $course->id,",
          "158:                              'launch_container' => $launchcontainer,",
          "159:                              'instanceid' => $instance->id,",
          "160:                              'sesskey' => sesskey());",
          "",
          "---------------"
        ],
        "mod/lti/return.php||mod/lti/return.php": [
          "File: mod/lti/return.php -> mod/lti/return.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: $courseid = required_param('course', PARAM_INT);",
          "32: $instanceid = required_param('instanceid', PARAM_INT);",
          "35: $unsigned = optional_param('unsigned', '0', PARAM_INT);",
          "37: $launchcontainer = optional_param('launch_container', LTI_LAUNCH_CONTAINER_WINDOW, PARAM_INT);",
          "",
          "[Removed Lines]",
          "34: $errormsg = optional_param('lti_errormsg', '', PARAM_RAW);",
          "",
          "[Added Lines]",
          "34: $errormsg = optional_param('lti_errormsg', '', PARAM_TEXT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: $course = $DB->get_record('course', array('id' => $courseid));",
          "41: require_login($course);",
          "43: if (!empty($errormsg)) {",
          "44:     $url = new moodle_url('/mod/lti/return.php', array('course' => $courseid));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: require_sesskey();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60:     echo get_string('lti_launch_error', 'lti');",
          "64:     if ($unsigned == 1) {",
          "",
          "[Removed Lines]",
          "62:     echo htmlspecialchars($errormsg);",
          "",
          "[Added Lines]",
          "63:     p($errormsg);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "44e712e9b72a30c6bc01112040854e91f5758605",
      "candidate_info": {
        "commit_hash": "44e712e9b72a30c6bc01112040854e91f5758605",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/44e712e9b72a30c6bc01112040854e91f5758605",
        "files": [
          "mod/lti/locallib.php",
          "mod/lti/return.php"
        ],
        "message": "MDL-47927 LTI: Use PARAM_TEXT and p() for returned messages and errors",
        "before_after_code_files": [
          "mod/lti/locallib.php||mod/lti/locallib.php",
          "mod/lti/return.php||mod/lti/return.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mod/lti/locallib.php||mod/lti/locallib.php",
            "mod/lti/return.php||mod/lti/return.php"
          ],
          "candidate": [
            "mod/lti/locallib.php||mod/lti/locallib.php",
            "mod/lti/return.php||mod/lti/return.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/lti/locallib.php||mod/lti/locallib.php": [
          "File: mod/lti/locallib.php -> mod/lti/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:     $requestparams = lti_build_request($instance, $typeconfig, $course);",
          "155:     $launchcontainer = lti_get_launch_container($instance, $typeconfig);",
          "158:     if ( $orgid ) {",
          "159:         $requestparams[\"tool_consumer_instance_guid\"] = $orgid;",
          "",
          "[Removed Lines]",
          "156:     $returnurlparams = array('course' => $course->id, 'launch_container' => $launchcontainer, 'instanceid' => $instance->id);",
          "",
          "[Added Lines]",
          "156:     $returnurlparams = array('course' => $course->id,",
          "157:                              'launch_container' => $launchcontainer,",
          "158:                              'instanceid' => $instance->id,",
          "159:                              'sesskey' => sesskey());",
          "",
          "---------------"
        ],
        "mod/lti/return.php||mod/lti/return.php": [
          "File: mod/lti/return.php -> mod/lti/return.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: $courseid = required_param('course', PARAM_INT);",
          "31: $instanceid = optional_param('instanceid', 0, PARAM_INT);",
          "35: $unsigned = optional_param('unsigned', '0', PARAM_INT);",
          "37: $launchcontainer = optional_param('launch_container', LTI_LAUNCH_CONTAINER_WINDOW, PARAM_INT);",
          "",
          "[Removed Lines]",
          "33: $errormsg = optional_param('lti_errormsg', '', PARAM_RAW);",
          "34: $msg = optional_param('lti_msg', '', PARAM_RAW);",
          "",
          "[Added Lines]",
          "33: $errormsg = optional_param('lti_errormsg', '', PARAM_TEXT);",
          "34: $msg = optional_param('lti_msg', '', PARAM_TEXT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49: require_login($course);",
          "51: if (!empty($errormsg) || !empty($msg)) {",
          "52:     $url = new moodle_url('/mod/lti/return.php', array('course' => $courseid));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: require_sesskey();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72: if (!empty($errormsg)) {",
          "73:     echo get_string('lti_launch_error', 'lti');",
          "77:     if ($unsigned == 1) {",
          "",
          "[Removed Lines]",
          "75:     echo htmlspecialchars($errormsg);",
          "",
          "[Added Lines]",
          "76:     p($errormsg);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "99:     echo $OUTPUT->footer();",
          "100: } else if (!empty($msg)) {",
          "104:     echo $OUTPUT->footer();",
          "",
          "[Removed Lines]",
          "102:     echo htmlspecialchars($msg);",
          "",
          "[Added Lines]",
          "103:     p($msg);",
          "",
          "---------------"
        ]
      }
    }
  ]
}