{
  "cve_id": "CVE-2019-19646",
  "cve_desc": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
  "repo": "sqlite/sqlite",
  "patch_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
  "patch_info": {
    "commit_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/pragma.c",
      "test/gencol1.test"
    ],
    "message": "Fix the NOT NULL verification logic in PRAGMA integrity_check so that it works for generated columns whose value is the result of a comparison operator. Ticket [bd8c280671ba44a7]\n\nFossilOrigin-Name: f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/pragma.c||src/pragma.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/pragma.c||src/pragma.c": [
      "File: src/pragma.c -> src/pragma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1596:           if( j==pTab->iPKey ) continue;",
      "1597:           if( pTab->aCol[j].notNull==0 ) continue;",
      "1598:           sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);",
      "1600:           jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);",
      "1601:           zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,",
      "1602:                               pTab->aCol[j].zName);",
      "",
      "[Removed Lines]",
      "1599:           sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "",
      "[Added Lines]",
      "1599:           if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){",
      "1600:             sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "1601:           }",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
      "329: } {1 {FOREIGN KEY constraint failed}}",
      "331: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331: # 2019-12-09 ticket bd8c280671ba44a7",
      "332: # With generated columns, the sqlite3ExprGetColumnOfTable() routine might",
      "333: # generate a code sequence that does not end with OP_Column.  So check to",
      "334: # make sure that the last instruction generated is an OP_column prior to",
      "335: # applying the OPFLAG_TYPEOFARG optimization to NOT NULL checks in the",
      "336: # PRAGMA integrity_check code.",
      "337: #",
      "338: sqlite3 db :memory:",
      "339: do_execsql_test gencol1-12.10 {",
      "340:   CREATE TABLE t0 (c0, c1 NOT NULL AS (c0==0));",
      "341:   INSERT INTO t0(c0) VALUES (0);",
      "342:   PRAGMA integrity_check;",
      "343: } {ok}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9889ede28dd20ca1a2093a125cb38160eeb2c01a",
      "candidate_info": {
        "commit_hash": "9889ede28dd20ca1a2093a125cb38160eeb2c01a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9889ede28dd20ca1a2093a125cb38160eeb2c01a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/window8.tcl",
          "test/window8.test"
        ],
        "message": "Add test case to window8.test. Also fix an error in a comment in window.c.\n\nFossilOrigin-Name: 2925bfa5971c8557ecaa6ac18df0825ebbbd1622017509e83451d90640146fa8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/window8.tcl||test/window8.tcl",
          "test/window8.test||test/window8.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 596ac2a4eab28b74f4050fb4eb71883f2a1421fdbccf302413e4653391bb52c9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c"
        ],
        "test/window8.tcl||test/window8.tcl": [
          "File: test/window8.tcl -> test/window8.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "344: ==========",
          "347: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346: execsql_test 7.0 {",
          "347:   DROP TABLE IF EXISTS t2;",
          "348:   CREATE TABLE t2(a INTEGER, b INTEGER);",
          "350:   INSERT INTO t2 VALUES(1, 65);",
          "351:   INSERT INTO t2 VALUES(2, NULL);",
          "352:   INSERT INTO t2 VALUES(3, NULL);",
          "353:   INSERT INTO t2 VALUES(4, NULL);",
          "354: }",
          "356: execsql_test 7.1 {",
          "357:   SELECT sum(a) OVER win FROM t2",
          "358:   WINDOW win AS (",
          "359:       ORDER BY b NULLS LAST RANGE BETWEEN 6 FOLLOWING AND UNBOUNDED FOLLOWING",
          "360:   );",
          "361: }",
          "",
          "---------------"
        ],
        "test/window8.test||test/window8.test": [
          "File: test/window8.test -> test/window8.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "6206: #==========================================================================",
          "6208: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6208: do_execsql_test 7.0 {",
          "6209:   DROP TABLE IF EXISTS t2;",
          "6210:   CREATE TABLE t2(a INTEGER, b INTEGER);",
          "6212:   INSERT INTO t2 VALUES(1, 65);",
          "6213:   INSERT INTO t2 VALUES(2, NULL);",
          "6214:   INSERT INTO t2 VALUES(3, NULL);",
          "6215:   INSERT INTO t2 VALUES(4, NULL);",
          "6216: } {}",
          "6218: do_execsql_test 7.1 {",
          "6219:   SELECT sum(a) OVER win FROM t2",
          "6220:   WINDOW win AS (",
          "6221:       ORDER BY b NULLS LAST RANGE BETWEEN 6 FOLLOWING AND UNBOUNDED FOLLOWING",
          "6222:   );",
          "6223: } {9   9   9   9}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "232f278084b4cf54f21882248dcd961fc84c22d7",
      "candidate_info": {
        "commit_hash": "232f278084b4cf54f21882248dcd961fc84c22d7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/232f278084b4cf54f21882248dcd961fc84c22d7",
        "files": [
          "ext/rtree/geopoly.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix the geopoly_svg() function so that it returns NULL when given zero arguments.\n\nFossilOrigin-Name: 120cb1768338eb86412fb69d4c7677247775bb37875ab3a98766cffd535f04cf",
        "before_after_code_files": [
          "ext/rtree/geopoly.c||ext/rtree/geopoly.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/geopoly.c||ext/rtree/geopoly.c": [
          "File: ext/rtree/geopoly.c -> ext/rtree/geopoly.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "395:   int argc,",
          "396:   sqlite3_value **argv",
          "397: ){",
          "399:   if( p ){",
          "400:     sqlite3 *db = sqlite3_context_db_handle(context);",
          "401:     sqlite3_str *x = sqlite3_str_new(db);",
          "",
          "[Removed Lines]",
          "398:   GeoPoly *p = geopolyFuncParam(context, argv[0], 0);",
          "",
          "[Added Lines]",
          "398:   GeoPoly *p;",
          "399:   if( argc<1 ) return;",
          "400:   p = geopolyFuncParam(context, argv[0], 0);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 703029ac6d24860230a8c30fcbf5e7e1da619e84f1cc9b9e65ebc74879a184d2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d1c472dab66d0e583082d96a3f40630ac6a3529d",
      "candidate_info": {
        "commit_hash": "d1c472dab66d0e583082d96a3f40630ac6a3529d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d1c472dab66d0e583082d96a3f40630ac6a3529d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Increase the precision of floating point value display in VDBE debugging output.  No changes to normally deployed code.\n\nFossilOrigin-Name: a561a656ff50efc0103da3988626cea3ef05757403b83960f2aa6c0a48c2765e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3934d2d08ee14d644dc01f967c10f219b76b172c963c90a7a8141f2b08a7d5bf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "554:     printf(\" i:%lld\", p->u.i);",
          "555: #ifndef SQLITE_OMIT_FLOATING_POINT",
          "556:   }else if( p->flags & MEM_Real ){",
          "558: #endif",
          "559:   }else if( sqlite3VdbeMemIsRowSet(p) ){",
          "560:     printf(\" (rowset)\");",
          "",
          "[Removed Lines]",
          "557:     printf(\" r:%g\", p->u.r);",
          "",
          "[Added Lines]",
          "557:     printf(\" r:%.17g\", p->u.r);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21826f44bfe1551240713c0332f3db92de3fd80f",
      "candidate_info": {
        "commit_hash": "21826f44bfe1551240713c0332f3db92de3fd80f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/21826f44bfe1551240713c0332f3db92de3fd80f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Improved VDBE branch coverage in the run-time frame-spec error detection logic of window functions.\n\nFossilOrigin-Name: f56d305a7bad6608d51d8c8cef417ddb66cff50f0a75d28554ea669e47f3d90d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8681750e855a020ee374cb9f973f701a72068e33f97d0101a4fab3a228e5ebda",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1309:     int regString = sqlite3GetTempReg(pParse);",
          "1310:     sqlite3VdbeAddOp4(v, OP_String8, 0, regString, 0, \"\", P4_STATIC);",
          "1311:     sqlite3VdbeAddOp3(v, OP_Ge, regString, sqlite3VdbeCurrentAddr(v)+2, reg);",
          "1313:     VdbeCoverage(v);",
          "1314:     assert( eCond==3 || eCond==4 );",
          "1315:     VdbeCoverageIf(v, eCond==3);",
          "",
          "[Removed Lines]",
          "1312:     sqlite3VdbeChangeP5(v, SQLITE_AFF_NUMERIC);",
          "",
          "[Added Lines]",
          "1312:     sqlite3VdbeChangeP5(v, SQLITE_AFF_NUMERIC|SQLITE_JUMPIFNULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1323:     VdbeCoverageIf(v, eCond==2);",
          "1324:   }",
          "1325:   sqlite3VdbeAddOp3(v, aOp[eCond], regZero, sqlite3VdbeCurrentAddr(v)+2, reg);",
          "1331:   sqlite3MayAbort(pParse);",
          "1332:   sqlite3VdbeAddOp2(v, OP_Halt, SQLITE_ERROR, OE_Abort);",
          "1333:   sqlite3VdbeAppendP4(v, (void*)azErr[eCond], P4_STATIC);",
          "",
          "[Removed Lines]",
          "1326:   VdbeCoverageIf(v, eCond==0);",
          "1327:   VdbeCoverageIf(v, eCond==1);",
          "1328:   VdbeCoverageIf(v, eCond==2);",
          "1329:   VdbeCoverageIf(v, eCond==3);",
          "1330:   VdbeCoverageIf(v, eCond==4);",
          "",
          "[Added Lines]",
          "1328:   VdbeCoverageNeverNullIf(v, eCond==2);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94f4f873b2bed7fac3df8e96125d087eb9de9532",
      "candidate_info": {
        "commit_hash": "94f4f873b2bed7fac3df8e96125d087eb9de9532",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/94f4f873b2bed7fac3df8e96125d087eb9de9532",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "test/misc1.test"
        ],
        "message": "Do not set the Cursor.seekOp test variable in the OP_NotExists opcode. This is a change to test logic only and does not affect deliverable builds.\n\nFossilOrigin-Name: 98f343077887c4d3fc2ca3bbc7f20c80ec37b0e521d70af9c986ab80bb2c7903",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "test/misc1.test||test/misc1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 16fff05347f42fe9fa0f3150290b98b59a9bb921e49dc07ca397aa1de7a7e17d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4342:   pC = p->apCsr[pOp->p1];",
          "4343:   assert( pC!=0 );",
          "4344: #ifdef SQLITE_DEBUG",
          "4346: #endif",
          "4347:   assert( pC->isTable );",
          "4348:   assert( pC->eCurType==CURTYPE_BTREE );",
          "",
          "[Removed Lines]",
          "4345:   pC->seekOp = OP_SeekRowid;",
          "",
          "[Added Lines]",
          "4345:   if( pOp->opcode==OP_SeekRowid ) pC->seekOp = OP_SeekRowid;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5250:   assert( pOp->opcode!=OP_Next",
          "5251:        || pC->seekOp==OP_SeekGT || pC->seekOp==OP_SeekGE",
          "5252:        || pC->seekOp==OP_Rewind || pC->seekOp==OP_Found",
          "5254:   assert( pOp->opcode!=OP_Prev",
          "5255:        || pC->seekOp==OP_SeekLT || pC->seekOp==OP_SeekLE",
          "5256:        || pC->seekOp==OP_Last",
          "",
          "[Removed Lines]",
          "5253:        || pC->seekOp==OP_NullRow);",
          "",
          "[Added Lines]",
          "5253:        || pC->seekOp==OP_NullRow|| pC->seekOp==OP_SeekRowid);",
          "",
          "---------------"
        ],
        "test/misc1.test||test/misc1.test": [
          "File: test/misc1.test -> test/misc1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "744:   SELECT a,b,c FROM dup1;",
          "745: } {10 11 12}",
          "748: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "747: # 2018-12-20",
          "748: #",
          "749: # The Cursor.seekOp debugging value set incorrectly",
          "750: # in OP_NotExists.",
          "751: #",
          "752: sqlite3 db :memory:",
          "753: do_execsql_test misc1-28.0 {",
          "754:   CREATE TABLE t1(x);",
          "755:   CREATE UNIQUE INDEX t1x ON t1(x) WHERE x=1;",
          "756:   INSERT OR ABORT INTO t1 DEFAULT VALUES;",
          "757:   UPDATE OR REPLACE t1 SET x = 1;",
          "758:   PRAGMA integrity_check;",
          "759:   SELECT * FROM t1;",
          "760: } {ok 1}",
          "",
          "---------------"
        ]
      }
    }
  ]
}