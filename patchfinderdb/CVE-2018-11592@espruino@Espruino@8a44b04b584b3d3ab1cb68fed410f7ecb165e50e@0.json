{
  "cve_id": "CVE-2018-11592",
  "cve_desc": "Espruino before 1.98 allows attackers to cause a denial of service (application crash) with a user crafted input file via an Out-of-bounds Read during syntax parsing in which certain height validation is missing in libs/graphics/jswrap_graphics.c.",
  "repo": "espruino/Espruino",
  "patch_hash": "8a44b04b584b3d3ab1cb68fed410f7ecb165e50e",
  "patch_info": {
    "commit_hash": "8a44b04b584b3d3ab1cb68fed410f7ecb165e50e",
    "repo": "espruino/Espruino",
    "commit_url": "https://github.com/espruino/Espruino/commit/8a44b04b584b3d3ab1cb68fed410f7ecb165e50e",
    "files": [
      "ChangeLog",
      "libs/graphics/jswrap_graphics.c",
      "libs/graphics/lcd_arraybuffer.c"
    ],
    "message": "Add height check for Graphics.createArrayBuffer(...vertical_byte:true) (fix #1421)",
    "before_after_code_files": [
      "libs/graphics/jswrap_graphics.c||libs/graphics/jswrap_graphics.c",
      "libs/graphics/lcd_arraybuffer.c||libs/graphics/lcd_arraybuffer.c"
    ]
  },
  "patch_diff": {
    "libs/graphics/jswrap_graphics.c||libs/graphics/jswrap_graphics.c": [
      "File: libs/graphics/jswrap_graphics.c -> libs/graphics/jswrap_graphics.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "129:     if (jsvGetBoolAndUnLock(jsvObjectGetChild(options, \"vertical_byte\", 0))) {",
      "130:       if (gfx.data.bpp==1)",
      "131:         gfx.data.flags = (JsGraphicsFlags)(gfx.data.flags | JSGRAPHICSFLAGS_ARRAYBUFFER_VERTICAL_BYTE);",
      "134:     }",
      "135:     JsVar *colorv = jsvObjectGetChild(options, \"color_order\", 0);",
      "136:     if (colorv) {",
      "",
      "[Removed Lines]",
      "132:       else",
      "133:         jsWarn(\"vertical_byte only works for 1bpp ArrayBuffers\\n\");",
      "",
      "[Added Lines]",
      "132:       else {",
      "133:         jsExceptionHere(JSET_ERROR, \"vertical_byte only works for 1bpp ArrayBuffers\\n\");",
      "134:         return 0;",
      "135:       }",
      "136:       if (gfx.data.height&7) {",
      "137:         jsExceptionHere(JSET_ERROR, \"height must be a multiple of 8 when using vertical_byte\\n\");",
      "138:         return 0;",
      "139:       }",
      "",
      "---------------"
    ],
    "libs/graphics/lcd_arraybuffer.c||libs/graphics/lcd_arraybuffer.c": [
      "File: libs/graphics/lcd_arraybuffer.c -> libs/graphics/lcd_arraybuffer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "161:       unsigned int mask = (unsigned int)(1<<gfx->data.bpp)-1;",
      "162:       unsigned int existing = (unsigned int)*ptr;",
      "163:       unsigned int bitIdx = (gfx->data.flags & JSGRAPHICSFLAGS_ARRAYBUFFER_MSB) ? 8-(idx+gfx->data.bpp) : idx;",
      "165:       if (gfx->data.flags & JSGRAPHICSFLAGS_ARRAYBUFFER_VERTICAL_BYTE) {",
      "166:         ptr++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "164:       assert(ptr>=gfx->backendData && ptr<((char*)gfx->backendData + graphicsGetMemoryRequired(gfx)));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8bfa213157fc49f30fb7fc6f5756a4d89dbe3a40",
      "candidate_info": {
        "commit_hash": "8bfa213157fc49f30fb7fc6f5756a4d89dbe3a40",
        "repo": "espruino/Espruino",
        "commit_url": "https://github.com/espruino/Espruino/commit/8bfa213157fc49f30fb7fc6f5756a4d89dbe3a40",
        "files": [
          "libs/graphics/lcd_arraybuffer.c"
        ],
        "message": "fix types lacks a cast\n\nwarning: comparison of distinct pointer types lacks a cast [enabled by default]",
        "before_after_code_files": [
          "libs/graphics/lcd_arraybuffer.c||libs/graphics/lcd_arraybuffer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libs/graphics/lcd_arraybuffer.c||libs/graphics/lcd_arraybuffer.c"
          ],
          "candidate": [
            "libs/graphics/lcd_arraybuffer.c||libs/graphics/lcd_arraybuffer.c"
          ]
        }
      },
      "candidate_diff": {
        "libs/graphics/lcd_arraybuffer.c||libs/graphics/lcd_arraybuffer.c": [
          "File: libs/graphics/lcd_arraybuffer.c -> libs/graphics/lcd_arraybuffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:       unsigned int mask = (unsigned int)(1<<gfx->data.bpp)-1;",
          "162:       unsigned int existing = (unsigned int)*ptr;",
          "163:       unsigned int bitIdx = (gfx->data.flags & JSGRAPHICSFLAGS_ARRAYBUFFER_MSB) ? 8-(idx+gfx->data.bpp) : idx;",
          "166:       if (gfx->data.flags & JSGRAPHICSFLAGS_ARRAYBUFFER_VERTICAL_BYTE) {",
          "167:         ptr++;",
          "",
          "[Removed Lines]",
          "164:       assert(ptr>=gfx->backendData && ptr<((char*)gfx->backendData + graphicsGetMemoryRequired(gfx)));",
          "",
          "[Added Lines]",
          "164:       assert(ptr>=(unsigned char*)gfx->backendData && ptr<((unsigned char*)gfx->backendData + graphicsGetMemoryRequired(gfx)));",
          "",
          "---------------"
        ]
      }
    }
  ]
}