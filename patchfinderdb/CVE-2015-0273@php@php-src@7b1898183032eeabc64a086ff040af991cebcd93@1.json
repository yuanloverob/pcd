{
  "cve_id": "CVE-2015-0273",
  "cve_desc": "Multiple use-after-free vulnerabilities in ext/date/php_date.c in PHP before 5.4.38, 5.5.x before 5.5.22, and 5.6.x before 5.6.6 allow remote attackers to execute arbitrary code via crafted serialized input containing a (1) R or (2) r type specifier in (a) DateTimeZone data handled by the php_date_timezone_initialize_from_hash function or (b) DateTime data handled by the php_date_initialize_from_hash function.",
  "repo": "php/php-src",
  "patch_hash": "7b1898183032eeabc64a086ff040af991cebcd93",
  "patch_info": {
    "commit_hash": "7b1898183032eeabc64a086ff040af991cebcd93",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/7b1898183032eeabc64a086ff040af991cebcd93",
    "files": [
      "ext/date/php_date.c",
      "ext/date/tests/bug68942_2.phpt"
    ],
    "message": "Fix bug #68942 (Use after free vulnerability in unserialize() with DateTimeZone)\n\nConflicts:\n\text/date/php_date.c",
    "before_after_code_files": [
      "ext/date/php_date.c||ext/date/php_date.c",
      "ext/date/tests/bug68942_2.phpt||ext/date/tests/bug68942_2.phpt"
    ]
  },
  "patch_diff": {
    "ext/date/php_date.c||ext/date/php_date.c": [
      "File: ext/date/php_date.c -> ext/date/php_date.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2575:  timelib_tzinfo   *tzi;",
      "2576:  php_timezone_obj *tzobj;",
      "2585:     switch (Z_LVAL_PP(z_timezone_type)) {",
      "2586:      case TIMELIB_ZONETYPE_OFFSET:",
      "",
      "[Removed Lines]",
      "2578:  if (zend_hash_find(myht, \"date\", 5, (void**) &z_date) == SUCCESS) {",
      "2579:   convert_to_string(*z_date);",
      "2580:   if (zend_hash_find(myht, \"timezone_type\", 14, (void**) &z_timezone_type) == SUCCESS) {",
      "2581:    convert_to_long(*z_timezone_type);",
      "2582:    if (zend_hash_find(myht, \"timezone\", 9, (void**) &z_timezone) == SUCCESS) {",
      "2583:     convert_to_string(*z_timezone);",
      "",
      "[Added Lines]",
      "2578:  if (zend_hash_find(myht, \"date\", 5, (void**) &z_date) == SUCCESS && Z_TYPE_PP(z_date) == IS_STRING) {",
      "2579:   if (zend_hash_find(myht, \"timezone_type\", 14, (void**) &z_timezone_type) == SUCCESS && Z_TYPE_PP(z_timezone_type) == IS_LONG) {",
      "2580:    if (zend_hash_find(myht, \"timezone\", 9, (void**) &z_timezone) == SUCCESS && Z_TYPE_PP(z_timezone) == IS_STRING) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2596:      case TIMELIB_ZONETYPE_ID: {",
      "2597:       int ret;",
      "2600:       tzi = php_date_parse_tzfile(Z_STRVAL_PP(z_timezone), DATE_TIMEZONEDB TSRMLS_CC);",
      "",
      "[Removed Lines]",
      "2598:       convert_to_string(*z_timezone);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "ext/date/tests/bug68942_2.phpt||ext/date/tests/bug68942_2.phpt": [
      "File: ext/date/tests/bug68942_2.phpt -> ext/date/tests/bug68942_2.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #68942 (Use after free vulnerability in unserialize() with DateTime).",
      "3: --FILE--",
      "4: <?php",
      "5: $data = unserialize('a:2:{i:0;O:8:\"DateTime\":3:{s:4:\"date\";s:26:\"2000-01-01 00:00:00.000000\";s:13:\"timezone_type\";a:2:{i:0;i:1;i:1;i:2;}s:8:\"timezone\";s:1:\"A\";}i:1;R:5;}');",
      "6: var_dump($data);",
      "7: ?>",
      "8: --EXPECTF--",
      "9: Fatal error: Invalid serialization data for DateTime object in %s/bug68942_2.php on line %d",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "71335e6ebabc1b12c057d8017fd811892ecdfd24",
      "candidate_info": {
        "commit_hash": "71335e6ebabc1b12c057d8017fd811892ecdfd24",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/71335e6ebabc1b12c057d8017fd811892ecdfd24",
        "files": [
          "ext/date/php_date.c",
          "ext/date/tests/bug68942.phpt",
          "ext/date/tests/bug68942_2.phpt"
        ],
        "message": "Fix bug #68942 (Use after free vulnerability in unserialize() with DateTimeZone)",
        "before_after_code_files": [
          "ext/date/php_date.c||ext/date/php_date.c",
          "ext/date/tests/bug68942.phpt||ext/date/tests/bug68942.phpt",
          "ext/date/tests/bug68942_2.phpt||ext/date/tests/bug68942_2.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "ext/date/php_date.c||ext/date/php_date.c",
            "ext/date/tests/bug68942_2.phpt||ext/date/tests/bug68942_2.phpt"
          ],
          "candidate": [
            "ext/date/php_date.c||ext/date/php_date.c",
            "ext/date/tests/bug68942_2.phpt||ext/date/tests/bug68942_2.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/date/php_date.c||ext/date/php_date.c": [
          "File: ext/date/php_date.c -> ext/date/php_date.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2807:  timelib_tzinfo   *tzi;",
          "2808:  php_timezone_obj *tzobj;",
          "2817:     switch (Z_LVAL_PP(z_timezone_type)) {",
          "2818:      case TIMELIB_ZONETYPE_OFFSET:",
          "",
          "[Removed Lines]",
          "2810:  if (zend_hash_find(myht, \"date\", 5, (void**) &z_date) == SUCCESS) {",
          "2811:   convert_to_string(*z_date);",
          "2812:   if (zend_hash_find(myht, \"timezone_type\", 14, (void**) &z_timezone_type) == SUCCESS) {",
          "2813:    convert_to_long(*z_timezone_type);",
          "2814:    if (zend_hash_find(myht, \"timezone\", 9, (void**) &z_timezone) == SUCCESS) {",
          "2815:     convert_to_string(*z_timezone);",
          "",
          "[Added Lines]",
          "2810:  if (zend_hash_find(myht, \"date\", 5, (void**) &z_date) == SUCCESS && Z_TYPE_PP(z_date) == IS_STRING) {",
          "2811:   if (zend_hash_find(myht, \"timezone_type\", 14, (void**) &z_timezone_type) == SUCCESS && Z_TYPE_PP(z_timezone_type) == IS_LONG) {",
          "2812:    if (zend_hash_find(myht, \"timezone\", 9, (void**) &z_timezone) == SUCCESS && Z_TYPE_PP(z_timezone) == IS_STRING) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2828:      case TIMELIB_ZONETYPE_ID: {",
          "2829:       int ret;",
          "2832:       tzi = php_date_parse_tzfile(Z_STRVAL_PP(z_timezone), DATE_TIMEZONEDB TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2830:       convert_to_string(*z_timezone);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3744:  zval            **z_timezone = NULL;",
          "3745:  zval            **z_timezone_type = NULL;",
          "3748:   if (zend_hash_find(myht, \"timezone\", 9, (void**) &z_timezone) == SUCCESS) {",
          "3750:    if (SUCCESS == timezone_initialize(*tzobj, Z_STRVAL_PP(z_timezone) TSRMLS_CC)) {",
          "3751:     return SUCCESS;",
          "3752:    }",
          "",
          "[Removed Lines]",
          "3747:  if (zend_hash_find(myht, \"timezone_type\", 14, (void**) &z_timezone_type) == SUCCESS) {",
          "3749:    convert_to_long(*z_timezone_type);",
          "",
          "[Added Lines]",
          "3743:  if (zend_hash_find(myht, \"timezone_type\", 14, (void**) &z_timezone_type) == SUCCESS && Z_TYPE_PP(z_timezone_type) == IS_LONG) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3772:  php_date_instantiate(date_ce_timezone, return_value TSRMLS_CC);",
          "3773:  tzobj = (php_timezone_obj *) zend_object_store_get_object(return_value TSRMLS_CC);",
          "3775: }",
          "",
          "[Removed Lines]",
          "3774:  php_date_timezone_initialize_from_hash(&return_value, &tzobj, myht TSRMLS_CC);",
          "",
          "[Added Lines]",
          "3769:  if(php_date_timezone_initialize_from_hash(&return_value, &tzobj, myht TSRMLS_CC) != SUCCESS) {",
          "3770:   php_error_docref(NULL, E_ERROR, \"Timezone initialization failed\");",
          "3771:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3788:  myht = Z_OBJPROP_P(object);",
          "3791: }",
          "",
          "[Removed Lines]",
          "3790:  php_date_timezone_initialize_from_hash(&return_value, &tzobj, myht TSRMLS_CC);",
          "",
          "[Added Lines]",
          "3787:  if(php_date_timezone_initialize_from_hash(&return_value, &tzobj, myht TSRMLS_CC) != SUCCESS) {",
          "3788:   php_error_docref(NULL, E_ERROR, \"Timezone initialization failed\");",
          "3789:  }",
          "",
          "---------------"
        ],
        "ext/date/tests/bug68942.phpt||ext/date/tests/bug68942.phpt": [
          "File: ext/date/tests/bug68942.phpt -> ext/date/tests/bug68942.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #68942 (Use after free vulnerability in unserialize() with DateTimeZone).",
          "3: --FILE--",
          "4: <?php",
          "5: $data = unserialize('a:2:{i:0;O:12:\"DateTimeZone\":2:{s:13:\"timezone_type\";a:2:{i:0;i:1;i:1;i:2;}s:8:\"timezone\";s:1:\"A\";}i:1;R:4;}');",
          "6: var_dump($data);",
          "7: ?>",
          "8: --EXPECTF--",
          "9: Fatal error: DateTimeZone::__wakeup(): Timezone initialization failed in %s/bug68942.php on line %d",
          "",
          "---------------"
        ],
        "ext/date/tests/bug68942_2.phpt||ext/date/tests/bug68942_2.phpt": [
          "File: ext/date/tests/bug68942_2.phpt -> ext/date/tests/bug68942_2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #68942 (Use after free vulnerability in unserialize() with DateTime).",
          "3: --FILE--",
          "4: <?php",
          "5: $data = unserialize('a:2:{i:0;O:8:\"DateTime\":3:{s:4:\"date\";s:26:\"2000-01-01 00:00:00.000000\";s:13:\"timezone_type\";a:2:{i:0;i:1;i:1;i:2;}s:8:\"timezone\";s:1:\"A\";}i:1;R:5;}');",
          "6: var_dump($data);",
          "7: ?>",
          "8: --EXPECTF--",
          "9: Fatal error: Invalid serialization data for DateTime object in %s/bug68942_2.php on line %d",
          "",
          "---------------"
        ]
      }
    }
  ]
}