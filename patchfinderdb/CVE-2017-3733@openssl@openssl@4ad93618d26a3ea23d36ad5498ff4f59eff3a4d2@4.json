{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "22e9f9211de80d7edcb1bd3b86eef7611718ab5c",
      "candidate_info": {
        "commit_hash": "22e9f9211de80d7edcb1bd3b86eef7611718ab5c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/22e9f9211de80d7edcb1bd3b86eef7611718ab5c",
        "files": [
          "crypto/evp/evp_err.c",
          "crypto/evp/pmeth_fn.c",
          "include/openssl/evp.h"
        ],
        "message": "M_check_autoarg: sanity check the key\n\nFor now, checking that the size is non-zero will suffice.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2120)\n(cherry picked from commit d7c8f142ea5953bf260b70a58739c1c9b0f038eb)",
        "before_after_code_files": [
          "crypto/evp/evp_err.c||crypto/evp/evp_err.c",
          "crypto/evp/pmeth_fn.c||crypto/evp/pmeth_fn.c",
          "include/openssl/evp.h||include/openssl/evp.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/evp_err.c||crypto/evp/evp_err.c": [
          "File: crypto/evp/evp_err.c -> crypto/evp/evp_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:     {ERR_REASON(EVP_R_INPUT_NOT_INITIALIZED), \"input not initialized\"},",
          "121:     {ERR_REASON(EVP_R_INVALID_DIGEST), \"invalid digest\"},",
          "122:     {ERR_REASON(EVP_R_INVALID_FIPS_MODE), \"invalid fips mode\"},",
          "123:     {ERR_REASON(EVP_R_INVALID_KEY_LENGTH), \"invalid key length\"},",
          "124:     {ERR_REASON(EVP_R_INVALID_OPERATION), \"invalid operation\"},",
          "125:     {ERR_REASON(EVP_R_KEYGEN_FAILURE), \"keygen failure\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:     {ERR_REASON(EVP_R_INVALID_KEY), \"invalid key\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "135:     {ERR_REASON(EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE),",
          "136:      \"operation not supported for this keytype\"},",
          "137:     {ERR_REASON(EVP_R_OPERATON_NOT_INITIALIZED), \"operaton not initialized\"},",
          "139:     {ERR_REASON(EVP_R_PRIVATE_KEY_DECODE_ERROR), \"private key decode error\"},",
          "140:     {ERR_REASON(EVP_R_PRIVATE_KEY_ENCODE_ERROR), \"private key encode error\"},",
          "141:     {ERR_REASON(EVP_R_PUBLIC_KEY_NOT_RSA), \"public key not rsa\"},",
          "",
          "[Removed Lines]",
          "138:     {ERR_REASON(EVP_R_PARTIALLY_OVERLAPPING), \"partially overlapping buffers\"},",
          "",
          "[Added Lines]",
          "139:     {ERR_REASON(EVP_R_PARTIALLY_OVERLAPPING),",
          "140:      \"partially overlapping buffers\"},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "143:     {ERR_REASON(EVP_R_UNKNOWN_DIGEST), \"unknown digest\"},",
          "144:     {ERR_REASON(EVP_R_UNKNOWN_OPTION), \"unknown option\"},",
          "145:     {ERR_REASON(EVP_R_UNKNOWN_PBE_ALGORITHM), \"unknown pbe algorithm\"},",
          "148:     {ERR_REASON(EVP_R_UNSUPPORTED_ALGORITHM), \"unsupported algorithm\"},",
          "149:     {ERR_REASON(EVP_R_UNSUPPORTED_CIPHER), \"unsupported cipher\"},",
          "150:     {ERR_REASON(EVP_R_UNSUPPORTED_KEYLENGTH), \"unsupported keylength\"},",
          "151:     {ERR_REASON(EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION),",
          "152:      \"unsupported key derivation function\"},",
          "153:     {ERR_REASON(EVP_R_UNSUPPORTED_KEY_SIZE), \"unsupported key size\"},",
          "154:     {ERR_REASON(EVP_R_UNSUPPORTED_PRF), \"unsupported prf\"},",
          "155:     {ERR_REASON(EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM),",
          "156:      \"unsupported private key algorithm\"},",
          "",
          "[Removed Lines]",
          "146:     {ERR_REASON(EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS),",
          "147:      \"unsupported number of rounds\"},",
          "",
          "[Added Lines]",
          "154:     {ERR_REASON(EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS),",
          "155:      \"unsupported number of rounds\"},",
          "",
          "---------------"
        ],
        "crypto/evp/pmeth_fn.c||crypto/evp/pmeth_fn.c": [
          "File: crypto/evp/pmeth_fn.c -> crypto/evp/pmeth_fn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:         if (ctx->pmeth->flags & EVP_PKEY_FLAG_AUTOARGLEN) \\",
          "19:                 { \\",
          "20:                 size_t pksize = (size_t)EVP_PKEY_size(ctx->pkey); \\",
          "22:                         { \\",
          "24:                         return 1; \\",
          "",
          "[Removed Lines]",
          "21:                 if (!arg) \\",
          "",
          "[Added Lines]",
          "21:                 if (pksize == 0) \\",
          "22:                         { \\",
          "23:                         EVPerr(err, EVP_R_INVALID_KEY); /*ckerr_ignore*/\\",
          "24:                         return 0; \\",
          "25:                         } \\",
          "26:                 else if (!arg)                 \\",
          "",
          "---------------"
        ],
        "include/openssl/evp.h||include/openssl/evp.h": [
          "File: include/openssl/evp.h -> include/openssl/evp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1546: # define EVP_R_INPUT_NOT_INITIALIZED                      111",
          "1547: # define EVP_R_INVALID_DIGEST                             152",
          "1548: # define EVP_R_INVALID_FIPS_MODE                          168",
          "1549: # define EVP_R_INVALID_KEY_LENGTH                         130",
          "1550: # define EVP_R_INVALID_OPERATION                          148",
          "1551: # define EVP_R_KEYGEN_FAILURE                             120",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1549: # define EVP_R_INVALID_KEY                                163",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1568: # define EVP_R_UNKNOWN_DIGEST                             161",
          "1569: # define EVP_R_UNKNOWN_OPTION                             169",
          "1570: # define EVP_R_UNKNOWN_PBE_ALGORITHM                      121",
          "1572: # define EVP_R_UNSUPPORTED_ALGORITHM                      156",
          "1573: # define EVP_R_UNSUPPORTED_CIPHER                         107",
          "1574: # define EVP_R_UNSUPPORTED_KEYLENGTH                      123",
          "1575: # define EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION        124",
          "1576: # define EVP_R_UNSUPPORTED_KEY_SIZE                       108",
          "1577: # define EVP_R_UNSUPPORTED_PRF                            125",
          "1578: # define EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM          118",
          "1579: # define EVP_R_UNSUPPORTED_SALT_TYPE                      126",
          "",
          "[Removed Lines]",
          "1571: # define EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS               135",
          "",
          "[Added Lines]",
          "1577: # define EVP_R_UNSUPPORTED_NUMBER_OF_ROUNDS               135",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9d522f08817b6e706ae54c2688b215ff1c631b49",
      "candidate_info": {
        "commit_hash": "9d522f08817b6e706ae54c2688b215ff1c631b49",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9d522f08817b6e706ae54c2688b215ff1c631b49",
        "files": [
          "ssl/s3_lib.c"
        ],
        "message": "Remove ECDH(E) ciphers from SSLv3\n\nSSLv3 does not support TLS extensions, and thus, cannot provide any\ncurves for ECDH(E). With the removal of the default (all) list of curves\nbeing used for connections that didn't provide any curves, ECDHE is no\nlonger possible.\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3181)\n(cherry picked from commit fe55c4a20f79c77c64a082c5df2c5e8a61317162)",
        "before_after_code_files": [
          "ssl/s3_lib.c||ssl/s3_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/s3_lib.c||ssl/s3_lib.c": [
          "File: ssl/s3_lib.c -> ssl/s3_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "844:      SSL_aECDSA,",
          "845:      SSL_eNULL,",
          "846:      SSL_SHA1,",
          "848:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "849:      SSL_STRONG_NONE | SSL_FIPS,",
          "850:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "847:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "847:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "860:      SSL_aECDSA,",
          "861:      SSL_3DES,",
          "862:      SSL_SHA1,",
          "864:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "865:      SSL_NOT_DEFAULT | SSL_MEDIUM | SSL_FIPS,",
          "866:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "863:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "863:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "876:      SSL_aECDSA,",
          "877:      SSL_AES128,",
          "878:      SSL_SHA1,",
          "880:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "881:      SSL_HIGH | SSL_FIPS,",
          "882:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "879:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "879:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "891:      SSL_aECDSA,",
          "892:      SSL_AES256,",
          "893:      SSL_SHA1,",
          "895:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "896:      SSL_HIGH | SSL_FIPS,",
          "897:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "894:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "894:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "906:      SSL_aRSA,",
          "907:      SSL_eNULL,",
          "908:      SSL_SHA1,",
          "910:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "911:      SSL_STRONG_NONE | SSL_FIPS,",
          "912:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "909:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "909:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "922:      SSL_aRSA,",
          "923:      SSL_3DES,",
          "924:      SSL_SHA1,",
          "926:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "927:      SSL_NOT_DEFAULT | SSL_MEDIUM | SSL_FIPS,",
          "928:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "925:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "925:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "938:      SSL_aRSA,",
          "939:      SSL_AES128,",
          "940:      SSL_SHA1,",
          "942:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "943:      SSL_HIGH | SSL_FIPS,",
          "944:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "941:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "941:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "953:      SSL_aRSA,",
          "954:      SSL_AES256,",
          "955:      SSL_SHA1,",
          "957:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "958:      SSL_HIGH | SSL_FIPS,",
          "959:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "956:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "956:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "968:      SSL_aNULL,",
          "969:      SSL_eNULL,",
          "970:      SSL_SHA1,",
          "972:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "973:      SSL_STRONG_NONE | SSL_FIPS,",
          "974:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "971:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "971:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "984:      SSL_aNULL,",
          "985:      SSL_3DES,",
          "986:      SSL_SHA1,",
          "988:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "989:      SSL_NOT_DEFAULT | SSL_MEDIUM | SSL_FIPS,",
          "990:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "987:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "987:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1000:      SSL_aNULL,",
          "1001:      SSL_AES128,",
          "1002:      SSL_SHA1,",
          "1004:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "1005:      SSL_NOT_DEFAULT | SSL_HIGH | SSL_FIPS,",
          "1006:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "1003:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "1003:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1015:      SSL_aNULL,",
          "1016:      SSL_AES256,",
          "1017:      SSL_SHA1,",
          "1019:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "1020:      SSL_NOT_DEFAULT | SSL_HIGH | SSL_FIPS,",
          "1021:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "1018:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "1018:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1611:      SSL_aPSK,",
          "1612:      SSL_3DES,",
          "1613:      SSL_SHA1,",
          "1615:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "1616:      SSL_NOT_DEFAULT | SSL_MEDIUM | SSL_FIPS,",
          "1617:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "1614:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "1614:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1627:      SSL_aPSK,",
          "1628:      SSL_AES128,",
          "1629:      SSL_SHA1,",
          "1631:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "1632:      SSL_HIGH | SSL_FIPS,",
          "1633:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "1630:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "1630:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1642:      SSL_aPSK,",
          "1643:      SSL_AES256,",
          "1644:      SSL_SHA1,",
          "1646:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "1647:      SSL_HIGH | SSL_FIPS,",
          "1648:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "1645:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "1645:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1687:      SSL_aPSK,",
          "1688:      SSL_eNULL,",
          "1689:      SSL_SHA1,",
          "1691:      DTLS1_BAD_VER, DTLS1_2_VERSION,",
          "1692:      SSL_STRONG_NONE | SSL_FIPS,",
          "1693:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "1690:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "1690:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2614:      SSL_aPSK,",
          "2615:      SSL_RC4,",
          "2616:      SSL_SHA1,",
          "2618:      0, 0,",
          "2619:      SSL_NOT_DEFAULT | SSL_MEDIUM,",
          "2620:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "2617:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "2617:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2629:      SSL_aNULL,",
          "2630:      SSL_RC4,",
          "2631:      SSL_SHA1,",
          "2633:      0, 0,",
          "2634:      SSL_NOT_DEFAULT | SSL_MEDIUM,",
          "2635:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "2632:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "2632:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2644:      SSL_aECDSA,",
          "2645:      SSL_RC4,",
          "2646:      SSL_SHA1,",
          "2648:      0, 0,",
          "2649:      SSL_NOT_DEFAULT | SSL_MEDIUM,",
          "2650:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "2647:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "2647:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2659:      SSL_aRSA,",
          "2660:      SSL_RC4,",
          "2661:      SSL_SHA1,",
          "2663:      0, 0,",
          "2664:      SSL_NOT_DEFAULT | SSL_MEDIUM,",
          "2665:      SSL_HANDSHAKE_MAC_DEFAULT | TLS1_PRF,",
          "",
          "[Removed Lines]",
          "2662:      SSL3_VERSION, TLS1_2_VERSION,",
          "",
          "[Added Lines]",
          "2662:      TLS1_VERSION, TLS1_2_VERSION,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3dca6ca0df0facedabcc5d9733b304e507f796db",
      "candidate_info": {
        "commit_hash": "3dca6ca0df0facedabcc5d9733b304e507f796db",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3dca6ca0df0facedabcc5d9733b304e507f796db",
        "files": [
          "doc/ssl/SSL_CTX_set_verify.pod",
          "include/openssl/ssl.h"
        ],
        "message": "Rename \"verify_cb\" to SSL_verify_cb\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2151)\n(cherry picked from commit 3adc41dd22080c4161d8a2af98d7b29fdbb11915)",
        "before_after_code_files": [
          "include/openssl/ssl.h||include/openssl/ssl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/ssl.h||include/openssl/ssl.h": [
          "File: include/openssl/ssl.h -> include/openssl/ssl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "263:                                     size_t inlen, int *al, void *parse_arg);",
          "269: # define SSL_OP_LEGACY_SERVER_CONNECT                    0x00000004U",
          "",
          "[Removed Lines]",
          "266: typedef int (*verify_cb)(int preverify_ok, X509_STORE_CTX *x509_ctx);",
          "",
          "[Added Lines]",
          "266: typedef int (*SSL_verify_cb)(int preverify_ok, X509_STORE_CTX *x509_ctx);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1345: void SSL_set_read_ahead(SSL *s, int yes);",
          "1346: __owur int SSL_get_verify_mode(const SSL *s);",
          "1347: __owur int SSL_get_verify_depth(const SSL *s);",
          "1350: void SSL_set_verify_depth(SSL *s, int depth);",
          "1351: void SSL_set_cert_cb(SSL *s, int (*cb) (SSL *ssl, void *arg), void *arg);",
          "1352: # ifndef OPENSSL_NO_RSA",
          "",
          "[Removed Lines]",
          "1348: __owur verify_cb SSL_get_verify_callback(const SSL *s);",
          "1349: void SSL_set_verify(SSL *s, int mode, verify_cb callback);",
          "",
          "[Added Lines]",
          "1348: __owur SSL_verify_cb SSL_get_verify_callback(const SSL *s);",
          "1349: void SSL_set_verify(SSL *s, int mode, SSL_verify_cb callback);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1446: __owur int SSL_CTX_get_verify_mode(const SSL_CTX *ctx);",
          "1447: __owur int SSL_CTX_get_verify_depth(const SSL_CTX *ctx);",
          "1450: void SSL_CTX_set_verify_depth(SSL_CTX *ctx, int depth);",
          "1451: void SSL_CTX_set_cert_verify_callback(SSL_CTX *ctx,",
          "1452:                                       int (*cb) (X509_STORE_CTX *, void *),",
          "",
          "[Removed Lines]",
          "1448: __owur verify_cb SSL_CTX_get_verify_callback(const SSL_CTX *ctx);",
          "1449: void SSL_CTX_set_verify(SSL_CTX *ctx, int mode, verify_cb callback);",
          "",
          "[Added Lines]",
          "1448: __owur SSL_verify_cb SSL_CTX_get_verify_callback(const SSL_CTX *ctx);",
          "1449: void SSL_CTX_set_verify(SSL_CTX *ctx, int mode, SSL_verify_cb callback);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf9ee8a810971b6bd7eb5fe84ac97a61514607d8",
      "candidate_info": {
        "commit_hash": "bf9ee8a810971b6bd7eb5fe84ac97a61514607d8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bf9ee8a810971b6bd7eb5fe84ac97a61514607d8",
        "files": [
          "crypto/cmac/cmac.c"
        ],
        "message": "Don't use deprecated EVP_CIPHER_CTX_cleanup() internally\n\nUse EVP_CIPHER_CTX_reset() instead\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2812)\n(cherry picked from commit 15d95dd7ea77e68bf9d8450e52230a6017735ec0)",
        "before_after_code_files": [
          "crypto/cmac/cmac.c||crypto/cmac/cmac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/cmac/cmac.c||crypto/cmac/cmac.c": [
          "File: crypto/cmac/cmac.c -> crypto/cmac/cmac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: void CMAC_CTX_cleanup(CMAC_CTX *ctx)",
          "62: {",
          "64:     OPENSSL_cleanse(ctx->tbl, EVP_MAX_BLOCK_LENGTH);",
          "65:     OPENSSL_cleanse(ctx->k1, EVP_MAX_BLOCK_LENGTH);",
          "66:     OPENSSL_cleanse(ctx->k2, EVP_MAX_BLOCK_LENGTH);",
          "",
          "[Removed Lines]",
          "63:     EVP_CIPHER_CTX_cleanup(ctx->cctx);",
          "",
          "[Added Lines]",
          "63:     EVP_CIPHER_CTX_reset(ctx->cctx);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba2efdc9ed75659a75d8b8c3cd4ae5bd3c181c65",
      "candidate_info": {
        "commit_hash": "ba2efdc9ed75659a75d8b8c3cd4ae5bd3c181c65",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ba2efdc9ed75659a75d8b8c3cd4ae5bd3c181c65",
        "files": [
          "include/internal/thread_once.h"
        ],
        "message": "Clarify what RUN_ONCE returns\n\nRUN_ONCE really just returns 0 on failure or whatever the init\nfunction returned.  By convention, however, the init function must\nreturn 0 on failure and 1 on success.  This needed to be clarified.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2225)\n(cherry picked from commit 37b8f1e21c56996644afa38816f575b05eb483ae)",
        "before_after_code_files": [
          "include/internal/thread_once.h||include/internal/thread_once.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/internal/thread_once.h||include/internal/thread_once.h": [
          "File: include/internal/thread_once.h -> include/internal/thread_once.h"
        ]
      }
    }
  ]
}