{
  "cve_id": "CVE-2016-5243",
  "cve_desc": "The tipc_nl_compat_link_dump function in net/tipc/netlink_compat.c in the Linux kernel through 4.6.3 does not properly copy a certain string, which allows local users to obtain sensitive information from kernel stack memory by reading a Netlink message.",
  "repo": "torvalds/linux",
  "patch_hash": "5d2be1422e02ccd697ccfcd45c85b4a26e6178e2",
  "patch_info": {
    "commit_hash": "5d2be1422e02ccd697ccfcd45c85b4a26e6178e2",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/5d2be1422e02ccd697ccfcd45c85b4a26e6178e2",
    "files": [
      "net/tipc/netlink_compat.c"
    ],
    "message": "tipc: fix an infoleak in tipc_nl_compat_link_dump\n\nlink_info.str is a char array of size 60. Memory after the NULL\nbyte is not initialized. Sending the whole object out can cause\na leak.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "net/tipc/netlink_compat.c||net/tipc/netlink_compat.c"
    ]
  },
  "patch_diff": {
    "net/tipc/netlink_compat.c||net/tipc/netlink_compat.c": [
      "File: net/tipc/netlink_compat.c -> net/tipc/netlink_compat.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "605:  link_info.dest = nla_get_flag(link[TIPC_NLA_LINK_DEST]);",
      "606:  link_info.up = htonl(nla_get_flag(link[TIPC_NLA_LINK_UP]));",
      "609:  return tipc_add_tlv(msg->rep, TIPC_TLV_LINK_INFO,",
      "610:        &link_info, sizeof(link_info));",
      "",
      "[Removed Lines]",
      "607:  strcpy(link_info.str, nla_data(link[TIPC_NLA_LINK_NAME]));",
      "",
      "[Added Lines]",
      "607:  nla_strlcpy(link_info.str, nla_data(link[TIPC_NLA_LINK_NAME]),",
      "608:       TIPC_MAX_LINK_NAME);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "55e77a3e8297581c919b45adcc4d0815b69afa84",
      "candidate_info": {
        "commit_hash": "55e77a3e8297581c919b45adcc4d0815b69afa84",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/55e77a3e8297581c919b45adcc4d0815b69afa84",
        "files": [
          "net/tipc/netlink_compat.c"
        ],
        "message": "tipc: fix nl compat regression for link statistics\n\nFix incorrect use of nla_strlcpy() where the first NLA_HDRLEN bytes\nof the link name where left out.\n\nMaking the output of tipc-config -ls look something like:\nLink statistics:\ndcast-link\n1:data0-1.1.2:data0\n1:data0-1.1.3:data0\n\nAlso, for the record, the patch that introduce this regression\nclaims \"Sending the whole object out can cause a leak\". Which isn't\nvery likely as this is a compat layer, where the data we are parsing\nis generated by us and we know the string to be NULL terminated. But\nyou can of course never be to secure.\n\nFixes: 5d2be1422e02 (tipc: fix an infoleak in tipc_nl_compat_link_dump)\nSigned-off-by: Richard Alpe <richard.alpe@ericsson.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "net/tipc/netlink_compat.c||net/tipc/netlink_compat.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/tipc/netlink_compat.c||net/tipc/netlink_compat.c"
          ],
          "candidate": [
            "net/tipc/netlink_compat.c||net/tipc/netlink_compat.c"
          ]
        }
      },
      "candidate_diff": {
        "net/tipc/netlink_compat.c||net/tipc/netlink_compat.c": [
          "File: net/tipc/netlink_compat.c -> net/tipc/netlink_compat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "605:  link_info.dest = nla_get_flag(link[TIPC_NLA_LINK_DEST]);",
          "606:  link_info.up = htonl(nla_get_flag(link[TIPC_NLA_LINK_UP]));",
          "608:       TIPC_MAX_LINK_NAME);",
          "610:  return tipc_add_tlv(msg->rep, TIPC_TLV_LINK_INFO,",
          "",
          "[Removed Lines]",
          "607:  nla_strlcpy(link_info.str, nla_data(link[TIPC_NLA_LINK_NAME]),",
          "",
          "[Added Lines]",
          "607:  nla_strlcpy(link_info.str, link[TIPC_NLA_LINK_NAME],",
          "",
          "---------------"
        ]
      }
    }
  ]
}