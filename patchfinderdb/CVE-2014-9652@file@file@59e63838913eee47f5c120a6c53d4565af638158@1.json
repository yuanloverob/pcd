{
  "cve_id": "CVE-2014-9652",
  "cve_desc": "The mconvert function in softmagic.c in file before 5.21, as used in the Fileinfo component in PHP before 5.4.37, 5.5.x before 5.5.21, and 5.6.x before 5.6.5, does not properly handle a certain string-length field during a copy of a truncated version of a Pascal string, which might allow remote attackers to cause a denial of service (out-of-bounds memory access and application crash) via a crafted file.",
  "repo": "file/file",
  "patch_hash": "59e63838913eee47f5c120a6c53d4565af638158",
  "patch_info": {
    "commit_hash": "59e63838913eee47f5c120a6c53d4565af638158",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/59e63838913eee47f5c120a6c53d4565af638158",
    "files": [
      "src/softmagic.c"
    ],
    "message": "PR/398: Correctly truncate pascal strings (fixes out of bounds read of 1, 2, or 4 bytes).",
    "before_after_code_files": [
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.195 2014/09/24 19:49:07 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.196 2014/11/07 15:24:14 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "964:   size_t sz = file_pstring_length_size(m);",
      "965:   char *ptr1 = p->s, *ptr2 = ptr1 + sz;",
      "966:   size_t len = file_pstring_get_length(m, ptr1);",
      "975:   }",
      "976:   while (len--)",
      "",
      "[Removed Lines]",
      "967:   if (len >= sizeof(p->s)) {",
      "974:    len = sizeof(p->s) - sz;",
      "",
      "[Added Lines]",
      "968:   if (len >= sz) {",
      "977:    len = sz;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "372d2361413ac29784a01511f215e44b7c468e39",
      "candidate_info": {
        "commit_hash": "372d2361413ac29784a01511f215e44b7c468e39",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/372d2361413ac29784a01511f215e44b7c468e39",
        "files": [
          "src/softmagic.c"
        ],
        "message": "centralize the byte swapping code.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.215 2015/05/21 18:25:29 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.216 2015/06/09 22:17:52 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63: private void cvt_64(union VALUETYPE *, const struct magic *);",
          "65: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) > ((n) - (o)))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: #define BE64(p) (((uint64_t)(p)->hq[0]<<56)|((uint64_t)(p)->hq[1]<<48)| \\",
          "67:     ((uint64_t)(p)->hq[2]<<40)|((uint64_t)(p)->hq[3]<<32)| \\",
          "68:     ((uint64_t)(p)->hq[4]<<24)|((uint64_t)(p)->hq[5]<<16)| \\",
          "69:     ((uint64_t)(p)->hq[6]<<8)|((uint64_t)(p)->hq[7]))",
          "70: #define LE64(p) (((uint64_t)(p)->hq[7]<<56)|((uint64_t)(p)->hq[6]<<48)| \\",
          "71:     ((uint64_t)(p)->hq[5]<<40)|((uint64_t)(p)->hq[4]<<32)| \\",
          "72:     ((uint64_t)(p)->hq[3]<<24)|((uint64_t)(p)->hq[2]<<16)| \\",
          "73:     ((uint64_t)(p)->hq[1]<<8)|((uint64_t)(p)->hq[0]))",
          "74: #define LE32(p) (((uint32_t)(p)->hl[3]<<24)|((uint32_t)(p)->hl[2]<<16)| \\",
          "75:      ((uint32_t)(p)->hl[1]<<8)|((uint32_t)(p)->hl[0]))",
          "76: #define BE32(p) (((uint32_t)(p)->hl[0]<<24)|((uint32_t)(p)->hl[1]<<16)| \\",
          "77:      ((uint32_t)(p)->hl[2]<<8)|((uint32_t)(p)->hl[3]))",
          "78: #define ME32(p) (((uint32_t)(p)->hl[1]<<24)|((uint32_t)(p)->hl[0]<<16)| \\",
          "79:      ((uint32_t)(p)->hl[3]<<8)|((uint32_t)(p)->hl[2]))",
          "80: #define BE16(p) (((uint16_t)(p)->hs[0]<<8)|((uint16_t)(p)->hs[1]))",
          "81: #define LE16(p) (((uint16_t)(p)->hs[1]<<8)|((uint16_t)(p)->hs[0]))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "962:   return 1;",
          "963:  }",
          "964:  case FILE_BESHORT:",
          "966:   cvt_16(p, m);",
          "967:   return 1;",
          "968:  case FILE_BELONG:",
          "969:  case FILE_BEDATE:",
          "970:  case FILE_BELDATE:",
          "973:   cvt_32(p, m);",
          "974:   return 1;",
          "975:  case FILE_BEQUAD:",
          "976:  case FILE_BEQDATE:",
          "977:  case FILE_BEQLDATE:",
          "978:  case FILE_BEQWDATE:",
          "984:   cvt_64(p, m);",
          "985:   return 1;",
          "986:  case FILE_LESHORT:",
          "988:   cvt_16(p, m);",
          "989:   return 1;",
          "990:  case FILE_LELONG:",
          "991:  case FILE_LEDATE:",
          "992:  case FILE_LELDATE:",
          "995:   cvt_32(p, m);",
          "996:   return 1;",
          "997:  case FILE_LEQUAD:",
          "998:  case FILE_LEQDATE:",
          "999:  case FILE_LEQLDATE:",
          "1000:  case FILE_LEQWDATE:",
          "1006:   cvt_64(p, m);",
          "1007:   return 1;",
          "1008:  case FILE_MELONG:",
          "1009:  case FILE_MEDATE:",
          "1010:  case FILE_MELDATE:",
          "1013:   cvt_32(p, m);",
          "1014:   return 1;",
          "1015:  case FILE_FLOAT:",
          "1016:   cvt_float(p, m);",
          "1017:   return 1;",
          "1018:  case FILE_BEFLOAT:",
          "1021:   cvt_float(p, m);",
          "1022:   return 1;",
          "1023:  case FILE_LEFLOAT:",
          "1026:   cvt_float(p, m);",
          "1027:   return 1;",
          "1028:  case FILE_DOUBLE:",
          "1029:   cvt_double(p, m);",
          "1030:   return 1;",
          "1031:  case FILE_BEDOUBLE:",
          "1036:   cvt_double(p, m);",
          "1037:   return 1;",
          "1038:  case FILE_LEDOUBLE:",
          "1043:   cvt_double(p, m);",
          "1044:   return 1;",
          "1045:  case FILE_REGEX:",
          "",
          "[Removed Lines]",
          "965:   p->h = (short)((p->hs[0]<<8)|(p->hs[1]));",
          "971:   p->l = (int32_t)",
          "972:       ((p->hl[0]<<24)|(p->hl[1]<<16)|(p->hl[2]<<8)|(p->hl[3]));",
          "979:   p->q = (uint64_t)",
          "980:       (((uint64_t)p->hq[0]<<56)|((uint64_t)p->hq[1]<<48)|",
          "981:        ((uint64_t)p->hq[2]<<40)|((uint64_t)p->hq[3]<<32)|",
          "982:        ((uint64_t)p->hq[4]<<24)|((uint64_t)p->hq[5]<<16)|",
          "983:        ((uint64_t)p->hq[6]<<8)|((uint64_t)p->hq[7]));",
          "987:   p->h = (short)((p->hs[1]<<8)|(p->hs[0]));",
          "993:   p->l = (int32_t)",
          "994:       ((p->hl[3]<<24)|(p->hl[2]<<16)|(p->hl[1]<<8)|(p->hl[0]));",
          "1001:   p->q = (uint64_t)",
          "1002:       (((uint64_t)p->hq[7]<<56)|((uint64_t)p->hq[6]<<48)|",
          "1003:        ((uint64_t)p->hq[5]<<40)|((uint64_t)p->hq[4]<<32)|",
          "1004:        ((uint64_t)p->hq[3]<<24)|((uint64_t)p->hq[2]<<16)|",
          "1005:        ((uint64_t)p->hq[1]<<8)|((uint64_t)p->hq[0]));",
          "1011:   p->l = (int32_t)",
          "1012:       ((p->hl[1]<<24)|(p->hl[0]<<16)|(p->hl[3]<<8)|(p->hl[2]));",
          "1019:   p->l =  ((uint32_t)p->hl[0]<<24)|((uint32_t)p->hl[1]<<16)|",
          "1020:    ((uint32_t)p->hl[2]<<8) |((uint32_t)p->hl[3]);",
          "1024:   p->l =  ((uint32_t)p->hl[3]<<24)|((uint32_t)p->hl[2]<<16)|",
          "1025:    ((uint32_t)p->hl[1]<<8) |((uint32_t)p->hl[0]);",
          "1032:   p->q =  ((uint64_t)p->hq[0]<<56)|((uint64_t)p->hq[1]<<48)|",
          "1033:    ((uint64_t)p->hq[2]<<40)|((uint64_t)p->hq[3]<<32)|",
          "1034:    ((uint64_t)p->hq[4]<<24)|((uint64_t)p->hq[5]<<16)|",
          "1035:    ((uint64_t)p->hq[6]<<8) |((uint64_t)p->hq[7]);",
          "1039:   p->q =  ((uint64_t)p->hq[7]<<56)|((uint64_t)p->hq[6]<<48)|",
          "1040:    ((uint64_t)p->hq[5]<<40)|((uint64_t)p->hq[4]<<32)|",
          "1041:    ((uint64_t)p->hq[3]<<24)|((uint64_t)p->hq[2]<<16)|",
          "1042:    ((uint64_t)p->hq[1]<<8) |((uint64_t)p->hq[0]);",
          "",
          "[Added Lines]",
          "981:   p->h = (short)BE16(p);",
          "987:   p->l = (int32_t)BE32(p);",
          "994:   p->q = (uint64_t)BE64(p);",
          "998:   p->h = (short)LE16(p);",
          "1004:   p->l = (int32_t)LE32(p);",
          "1011:   p->q = (uint64_t)LE64(p);",
          "1017:   p->l = (int32_t)ME32(p);",
          "1024:   p->l = BE32(p);",
          "1028:   p->l = LE32(p);",
          "1035:   p->q = BE64(p);",
          "1039:   p->q = LE64(p);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1239:     off = q->h;",
          "1240:     break;",
          "1241:    case FILE_BESHORT:",
          "1243:     break;",
          "1244:    case FILE_LESHORT:",
          "1246:     break;",
          "1247:    case FILE_LONG:",
          "1248:     off = q->l;",
          "1249:     break;",
          "1250:    case FILE_BELONG:",
          "1251:    case FILE_BEID3:",
          "1254:     break;",
          "1255:    case FILE_LEID3:",
          "1256:    case FILE_LELONG:",
          "1259:     break;",
          "1260:    case FILE_MELONG:",
          "1263:     break;",
          "1264:    }",
          "1265:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "",
          "[Removed Lines]",
          "1242:     off = (short)((q->hs[0]<<8)|(q->hs[1]));",
          "1245:     off = (short)((q->hs[1]<<8)|(q->hs[0]));",
          "1252:     off = (int32_t)((q->hl[0]<<24)|(q->hl[1]<<16)|",
          "1253:        (q->hl[2]<<8)|(q->hl[3]));",
          "1257:     off = (int32_t)((q->hl[3]<<24)|(q->hl[2]<<16)|",
          "1258:        (q->hl[1]<<8)|(q->hl[0]));",
          "1261:     off = (int32_t)((q->hl[1]<<24)|(q->hl[0]<<16)|",
          "1262:        (q->hl[3]<<8)|(q->hl[2]));",
          "",
          "[Added Lines]",
          "1239:     off = (short)BE16(q);",
          "1242:     off = (short)LE16(q);",
          "1249:     off = (int32_t)BE32(q);",
          "1253:     off = (int32_t)LE32(q);",
          "1256:     off = (int32_t)ME32(q);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1413:   case FILE_BEID3:",
          "1414:    if (OFFSET_OOB(nbytes, offset, 4))",
          "1415:     return 0;",
          "1418:    if (off) {",
          "1419:     switch (m->in_op & FILE_OPS_MASK) {",
          "1420:     case FILE_OPAND:",
          "",
          "[Removed Lines]",
          "1416:    lhs = (p->hl[0] << 24) | (p->hl[1] << 16) |",
          "1417:        (p->hl[2] << 8) | p->hl[3];",
          "",
          "[Added Lines]",
          "1410:    lhs = BE32(p);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1451:   case FILE_LEID3:",
          "1452:    if (OFFSET_OOB(nbytes, offset, 4))",
          "1453:     return 0;",
          "1456:    if (off) {",
          "1457:     switch (m->in_op & FILE_OPS_MASK) {",
          "1458:     case FILE_OPAND:",
          "",
          "[Removed Lines]",
          "1454:    lhs = (p->hl[3] << 24) | (p->hl[2] << 16) |",
          "1455:        (p->hl[1] << 8) | p->hl[0];",
          "",
          "[Added Lines]",
          "1447:    lhs = LE32(p);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1488:   case FILE_MELONG:",
          "1489:    if (OFFSET_OOB(nbytes, offset, 4))",
          "1490:     return 0;",
          "1493:    if (off) {",
          "1494:     switch (m->in_op & FILE_OPS_MASK) {",
          "1495:     case FILE_OPAND:",
          "",
          "[Removed Lines]",
          "1491:    lhs = (p->hl[1] << 24) | (p->hl[0] << 16) |",
          "1492:        (p->hl[3] << 8) | p->hl[2];",
          "",
          "[Added Lines]",
          "1483:    lhs = ME32(p);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1565:   case FILE_LEID3:",
          "1566:   case FILE_BEID3:",
          "1567:    offset = ((((offset >>  0) & 0x7f) <<  0) |",
          "1571:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1572:     fprintf(stderr, \"id3 offs=%u\\n\", offset);",
          "1573:    break;",
          "",
          "[Removed Lines]",
          "1568:      (((offset >>  8) & 0x7f) <<  7) |",
          "1569:      (((offset >> 16) & 0x7f) << 14) |",
          "1570:      (((offset >> 24) & 0x7f) << 21));",
          "",
          "[Added Lines]",
          "1559:       (((offset >>  8) & 0x7f) <<  7) |",
          "1560:       (((offset >> 16) & 0x7f) << 14) |",
          "1561:       (((offset >> 24) & 0x7f) << 21));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b71174f3ec9a134361e39948c0fec59b37a2f587",
      "candidate_info": {
        "commit_hash": "b71174f3ec9a134361e39948c0fec59b37a2f587",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/b71174f3ec9a134361e39948c0fec59b37a2f587",
        "files": [
          "src/apprentice.c",
          "src/cdf.c",
          "src/getline.c",
          "src/softmagic.c"
        ],
        "message": "PR/384: remove %z formats that break windows.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/cdf.c||src/cdf.c",
          "src/getline.c||src/getline.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.214 2014/08/04 06:48:22 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.215 2014/08/30 10:19:54 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "465:  if (action == FILE_LIST) {",
          "466:   for (i = 0; i < MAGIC_SETS; i++) {",
          "468:    apprentice_list(ms->mlist[i], BINTEST);",
          "469:    printf(\"Text patterns:\\n\");",
          "470:    apprentice_list(ms->mlist[i], TEXTTEST);",
          "",
          "[Removed Lines]",
          "467:    printf(\"Set %zu:\\nBinary patterns:\\n\", i);",
          "",
          "[Added Lines]",
          "467:    printf(\"Set %\" SIZE_T_FORMAT \"u:\\nBinary patterns:\\n\",",
          "468:        i);",
          "",
          "---------------"
        ],
        "src/cdf.c||src/cdf.c": [
          "File: src/cdf.c -> src/cdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "39: #endif",
          "41: #include <assert.h>",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.65 2014/08/07 09:38:35 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.66 2014/08/27 06:59:35 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1156:  for (i = 0; i < __arraycount(h->h_master_sat); i++) {",
          "1157:   if (h->h_master_sat[i] == CDF_SECID_FREE)",
          "1158:    break;",
          "1160:       \"master_sat\", i, h->h_master_sat[i]);",
          "1161:  }",
          "1162: }",
          "",
          "[Removed Lines]",
          "1159:   (void)fprintf(stderr, \"%35.35s[%.3zu] = %d\\n\",",
          "",
          "[Added Lines]",
          "1159:   (void)fprintf(stderr, \"%35.35s[%.3\" SIZE_T_FORMAT \"u] = %d\\n\",",
          "",
          "---------------"
        ],
        "src/getline.c||src/getline.c": [
          "File: src/getline.c -> src/getline.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:  size_t n = 0;",
          "99:  while ((len = getline(&p, &n, stdin)) != -1)",
          "101:  free(p);",
          "102:  return 0;",
          "103: }",
          "",
          "[Removed Lines]",
          "100:   (void)printf(\"%zd %s\", len, p);",
          "",
          "[Added Lines]",
          "100:   (void)printf(\"%\" SIZE_T_FORMAT \"d %s\", len, p);",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.193 2014/09/10 18:41:51 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.194 2014/09/22 18:26:19 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:  const char *ptr = fmtcheck(m->desc, def);",
          "96:  if (ptr == def)",
          "97:   file_magerror(ms,",
          "100:  return ptr;",
          "101: }",
          "102: #else",
          "",
          "[Removed Lines]",
          "98:       \"%s, %zu: format `%s' does not match with `%s'\",",
          "99:       file, line, m->desc, def);",
          "",
          "[Added Lines]",
          "98:       \"%s, %\" SIZE_T_FORMAT \"u: format `%s' does not match\"",
          "99:       \" with `%s'\", file, line, m->desc, def);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1057: private void",
          "1058: mdebug(uint32_t offset, const char *str, size_t len)",
          "1059: {",
          "1061:  file_showstr(stderr, str, len);",
          "1062:  (void) fputc('\\n', stderr);",
          "1063:  (void) fputc('\\n', stderr);",
          "",
          "[Removed Lines]",
          "1060:  (void) fprintf(stderr, \"mget/%zu @%d: \", len, offset);",
          "",
          "[Added Lines]",
          "1060:  (void) fprintf(stderr, \"mget/%\" SIZE_T_FORMAT \"u @%d: \", len, offset);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1207:   return -1;",
          "1209:  if ((ms->flags & MAGIC_DEBUG) != 0) {",
          "1212:   mdebug(offset, (char *)(void *)p, sizeof(union VALUETYPE));",
          "1213: #ifndef COMPILE_ONLY",
          "1214:   file_mdump(m);",
          "",
          "[Removed Lines]",
          "1210:   fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%zu, \"",
          "1211:       \"nbytes=%zu)\\n\", m->type, m->flag, offset, o, nbytes);",
          "",
          "[Added Lines]",
          "1210:   fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%\"",
          "1211:       SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT \"u)\\n\",",
          "1212:       m->type, m->flag, offset, o, nbytes);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1963:        copy = malloc(slen);",
          "1964:        if (copy == NULL)  {",
          "1965:     file_error(ms, errno,",
          "1967:     return -1;",
          "1968:        }",
          "1969:        memcpy(copy, ms->search.s, slen);",
          "",
          "[Removed Lines]",
          "1966:         \"can't allocate %zu bytes\", slen);",
          "",
          "[Added Lines]",
          "1967:         \"can't allocate %\" SIZE_T_FORMAT \"u bytes\",",
          "1968:         slen);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf0d80b4564ad2b7426ad7542f6de7f34f29eff5",
      "candidate_info": {
        "commit_hash": "cf0d80b4564ad2b7426ad7542f6de7f34f29eff5",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/cf0d80b4564ad2b7426ad7542f6de7f34f29eff5",
        "files": [
          "src/softmagic.c"
        ],
        "message": "Fix: perl -e 'print \"\\x0\" x 8, \"bad\", \"\\x0\" x 1013, \"H+\", \"\\x0\" x 6, \"good\"' | ./file printing bad... Reset the continuation offset. From Christoph Biedl",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.208 2015/01/05 00:16:01 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.209 2015/01/05 20:05:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:   if ((ms->flags & MAGIC_CONTINUE) == 0 && *printed_something) {",
          "363:   }",
          "364:  }",
          "366: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "364:   cont_level = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d566272d582d02e4729b33266171454bb5a2057e",
      "candidate_info": {
        "commit_hash": "d566272d582d02e4729b33266171454bb5a2057e",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/d566272d582d02e4729b33266171454bb5a2057e",
        "files": [
          "src/softmagic.c"
        ],
        "message": "PR/318: Klortho: if handle_annotation prints something, mark it as printed.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.169 2013/12/05 17:02:34 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.170 2014/01/06 02:25:32 christos Exp $\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ce24f35cd4a43c4bdd249e8e0c4952c1f8eac67",
      "candidate_info": {
        "commit_hash": "6ce24f35cd4a43c4bdd249e8e0c4952c1f8eac67",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/6ce24f35cd4a43c4bdd249e8e0c4952c1f8eac67",
        "files": [
          "ChangeLog",
          "doc/file.man",
          "doc/libmagic.man",
          "src/apprentice.c",
          "src/ascmagic.c",
          "src/elfclass.h",
          "src/file.c",
          "src/file.h",
          "src/funcs.c",
          "src/magic.c",
          "src/magic.h.in",
          "src/softmagic.c"
        ],
        "message": "Kill -R and replace with -P param=value. Allow setting of 4 parameters:     indir, name, shnum, phnum.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/ascmagic.c||src/ascmagic.c",
          "src/elfclass.h||src/elfclass.h",
          "src/file.c||src/file.c",
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/magic.c||src/magic.c",
          "src/magic.h.in||src/magic.h.in",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.223 2014/11/12 15:28:34 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.224 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "524:   ms->mlist[i] = NULL;",
          "525:  ms->file = \"unknown\";",
          "526:  ms->line = 0;",
          "528:  return ms;",
          "529: free:",
          "530:  free(ms);",
          "",
          "[Removed Lines]",
          "527:  ms->max_recursion = FILE_MAX_RECURSION;",
          "",
          "[Added Lines]",
          "527:  ms->indir_recursion = FILE_INDIR_RECURSION;",
          "528:  ms->name_recursion = FILE_NAME_RECURSION;",
          "529:  ms->shnum_max = FILE_ELF_SHNUM;",
          "530:  ms->phnum_max = FILE_ELF_PHNUM;",
          "",
          "---------------"
        ],
        "src/ascmagic.c||src/ascmagic.c": [
          "File: src/ascmagic.c -> src/ascmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.87 2013/09/17 15:51:22 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.88 2014/02/12 23:20:53 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:       == NULL)",
          "148:    goto done;",
          "149:   if ((rv = file_softmagic(ms, utf8_buf,",
          "151:    rv = -1;",
          "152:  }",
          "",
          "[Removed Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), 0, TEXTTEST, text)) == 0)",
          "",
          "[Added Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), 0, 0, TEXTTEST, text)) == 0)",
          "",
          "---------------"
        ],
        "src/elfclass.h||src/elfclass.h": [
          "File: src/elfclass.h -> src/elfclass.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: #ifdef ELFCORE",
          "37:  case ET_CORE:",
          "38:   phnum = elf_getu16(swap, elfhdr.e_phnum);",
          "40:    return toomany(ms, \"program\", phnum);",
          "41:   flags |= FLAGS_IS_CORE;",
          "42:   if (dophn_core(ms, clazz, swap, fd,",
          "",
          "[Removed Lines]",
          "39:   if (phnum > MAX_PHNUM)",
          "",
          "[Added Lines]",
          "39:   if (phnum > ms->phnum_max)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:  case ET_EXEC:",
          "50:  case ET_DYN:",
          "51:   phnum = elf_getu16(swap, elfhdr.e_phnum);",
          "53:    return toomany(ms, \"program\", phnum);",
          "54:   shnum = elf_getu16(swap, elfhdr.e_shnum);",
          "56:    return toomany(ms, \"section\", shnum);",
          "57:   if (dophn_exec(ms, clazz, swap, fd,",
          "58:       (off_t)elf_getu(swap, elfhdr.e_phoff), phnum,",
          "",
          "[Removed Lines]",
          "52:   if (phnum > MAX_PHNUM)",
          "55:   if (shnum > MAX_SHNUM)",
          "",
          "[Added Lines]",
          "52:   if (phnum > ms->phnum_max)",
          "55:   if (shnum > ms->shnum_max)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:  case ET_REL:",
          "64:   shnum = elf_getu16(swap, elfhdr.e_shnum);",
          "66:    return toomany(ms, \"section\", shnum);",
          "67:   if (doshn(ms, clazz, swap, fd,",
          "68:       (off_t)elf_getu(swap, elfhdr.e_shoff), shnum,",
          "",
          "[Removed Lines]",
          "65:   if (shnum > MAX_SHNUM)",
          "",
          "[Added Lines]",
          "65:   if (shnum > ms->shnum_max)",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.155 2014/10/11 15:03:16 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.156 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98: #undef OPT_LONGONLY",
          "99:     {0, 0, NULL, 0}",
          "100: };",
          "103: private const struct {",
          "104:  const char *name;",
          "",
          "[Removed Lines]",
          "101: #define OPTSTRING \"bcCde:Ef:F:hiklLm:nNprR:svz0\"",
          "",
          "[Added Lines]",
          "101: #define OPTSTRING \"bcCde:Ef:F:hiklLm:nNpP:rsvz0\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "117: };",
          "121: private void usage(void);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119: private struct {",
          "120:  const char *name;",
          "121:  int tag;",
          "122:  size_t value;",
          "123: } pm[] = {",
          "124:  { \"indir\", MAGIC_PARAM_INDIR_RECURSION, 0 },",
          "125:  { \"name\", MAGIC_PARAM_NAME_RECURSION, 0 },",
          "126:  { \"phnum\", MAGIC_PARAM_PHNUM_MAX, 0 },",
          "127:  { \"shnum\", MAGIC_PARAM_SHNUM_MAX, 0 },",
          "128: };",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "125: private int unwrap(struct magic_set *, const char *);",
          "126: private int process(struct magic_set *ms, const char *, int);",
          "127: private struct magic_set *load(const char *, int);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139: private void setparam(const char *);",
          "140: private void applyparam(magic_t);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "137:  size_t i;",
          "138:  int action = 0, didsomefiles = 0, errflg = 0;",
          "139:  int flags = 0, e = 0;",
          "141:  struct magic_set *magic = NULL;",
          "142:  int longindex;",
          "",
          "[Removed Lines]",
          "140:  size_t max_recursion = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "243:    flags |= MAGIC_PRESERVE_ATIME;",
          "244:    break;",
          "245: #endif",
          "246:   case 'r':",
          "247:    flags |= MAGIC_RAW;",
          "248:    break;",
          "251:    break;",
          "252:   case 's':",
          "253:    flags |= MAGIC_DEVICES;",
          "",
          "[Removed Lines]",
          "249:   case 'R':",
          "250:    max_recursion = atoi(optarg);",
          "",
          "[Added Lines]",
          "258:   case 'P':",
          "259:    setparam(optarg);",
          "260:    break;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "326:   if (magic == NULL)",
          "327:    if ((magic = load(magicfile, flags)) == NULL)",
          "328:     return 1;",
          "339:  }",
          "341:  if (optind == argc) {",
          "",
          "[Removed Lines]",
          "329:   if (max_recursion) {",
          "330:    if (magic_setparam(magic, MAGIC_PARAM_MAX_RECURSION,",
          "331:        &max_recursion) == -1) {",
          "332:     (void)fprintf(stderr,",
          "333:         \"%s: Can't set recurision %s\\n\", progname,",
          "334:         strerror(errno));",
          "335:     return 1;",
          "336:    }",
          "337:   }",
          "338:   break;",
          "",
          "[Added Lines]",
          "342:   applyparam(magic);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "365:  return e;",
          "366: }",
          "369: private struct magic_set *",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "372: private void",
          "373: applyparam(magic_t magic)",
          "374: {",
          "375:  size_t i;",
          "377:  for (i = 0; i < __arraycount(pm); i++) {",
          "378:   if (pm[i].value == 0)",
          "379:    continue;",
          "380:   if (magic_setparam(magic, pm[i].tag, &pm[i].value) == -1) {",
          "381:    (void)fprintf(stderr, \"%s: Can't set %s %s\\n\", progname,",
          "382:     pm[i].name, strerror(errno));",
          "383:    exit(1);",
          "384:   }",
          "385:  }",
          "386: }",
          "388: private void",
          "389: setparam(const char *p)",
          "390: {",
          "391:  size_t i;",
          "392:  char *s;",
          "394:  if ((s = strchr(p, '=')) == NULL)",
          "395:   goto badparm;",
          "397:  for (i = 0; i < __arraycount(pm); i++) {",
          "398:   if (strncmp(p, pm[i].name, s - p) != 0)",
          "399:    continue;",
          "400:   pm[i].value = atoi(s + 1);",
          "401:   return;",
          "402:  }",
          "403: badparm:",
          "404:  (void)fprintf(stderr, \"%s: Unknown param %s\\n\", progname, p);",
          "405:  exit(1);",
          "406: }",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "406: };",
          "",
          "[Removed Lines]",
          "404:  size_t max_recursion;",
          "405: #define FILE_MAX_RECURSION 15",
          "",
          "[Added Lines]",
          "404:  uint16_t indir_recursion;",
          "405:  uint16_t name_recursion;",
          "406:  uint16_t shnum_max;",
          "407:  uint16_t phnum_max;",
          "408: #define FILE_INDIR_RECURSION 15",
          "409: #define FILE_NAME_RECURSION 40",
          "410: #define FILE_ELF_SHNUM  32768",
          "411: #define FILE_ELF_PHNUM  128",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "442:     unichar **, size_t *, const char **, const char **, const char **);",
          "443: protected int file_is_tar(struct magic_set *, const unsigned char *, size_t);",
          "444: protected int file_softmagic(struct magic_set *, const unsigned char *, size_t,",
          "446: protected int file_apprentice(struct magic_set *, const char *, int);",
          "447: protected int buffer_apprentice(struct magic_set *, struct magic **,",
          "448:     size_t *, size_t);",
          "",
          "[Removed Lines]",
          "445:     size_t, int, int);",
          "",
          "[Added Lines]",
          "451:     uint16_t, uint16_t, int, int);",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.73 2014/09/10 18:41:51 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.74 2014/11/23 13:54:27 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:  if ((ms->flags & MAGIC_NO_CHECK_SOFT) == 0)",
          "231:       looks_text)) != 0) {",
          "232:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "233:     (void)fprintf(stderr, \"softmagic %d\\n\", m);",
          "",
          "[Removed Lines]",
          "230:   if ((m = file_softmagic(ms, ubuf, nb, 0, BINTEST,",
          "",
          "[Added Lines]",
          "230:   if ((m = file_softmagic(ms, ubuf, nb, 0, 0, BINTEST,",
          "",
          "---------------"
        ],
        "src/magic.c||src/magic.c": [
          "File: src/magic.c -> src/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"file.h\"",
          "35: #ifndef lint",
          "39: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.85 2014/08/04 06:19:44 christos Exp $\")",
          "",
          "[Added Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.86 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "541: magic_setparam(struct magic_set *ms, int param, const void *val)",
          "542: {",
          "543:  switch (param) {",
          "546:   return 0;",
          "547:  default:",
          "548:   errno = EINVAL;",
          "",
          "[Removed Lines]",
          "544:  case MAGIC_PARAM_MAX_RECURSION:",
          "545:   ms->max_recursion = *(const size_t *)val;",
          "",
          "[Added Lines]",
          "544:  case MAGIC_PARAM_INDIR_RECURSION:",
          "545:   ms->indir_recursion = *(const size_t *)val;",
          "546:   return 0;",
          "547:  case MAGIC_PARAM_NAME_RECURSION:",
          "548:   ms->name_recursion = *(const size_t *)val;",
          "549:   return 0;",
          "550:  case MAGIC_PARAM_PHNUM_MAX:",
          "551:   ms->phnum_max = *(const size_t *)val;",
          "552:   return 0;",
          "553:  case MAGIC_PARAM_SHNUM_MAX:",
          "554:   ms->shnum_max = *(const size_t *)val;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "554: magic_getparam(struct magic_set *ms, int param, void *val)",
          "555: {",
          "556:  switch (param) {",
          "559:   return 0;",
          "560:  default:",
          "561:   errno = EINVAL;",
          "",
          "[Removed Lines]",
          "557:  case MAGIC_PARAM_MAX_RECURSION:",
          "",
          "[Added Lines]",
          "566:  case MAGIC_PARAM_INDIR_RECURSION:",
          "568:   return 0;",
          "569:  case MAGIC_PARAM_NAME_RECURSION:",
          "571:   return 0;",
          "572:  case MAGIC_PARAM_PHNUM_MAX:",
          "574:   return 0;",
          "575:  case MAGIC_PARAM_SHNUM_MAX:",
          "",
          "---------------"
        ],
        "src/magic.h.in||src/magic.h.in": [
          "File: src/magic.h.in -> src/magic.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: int magic_list(magic_t, const char *);",
          "104: int magic_errno(magic_t);",
          "107: int magic_setparam(magic_t, int, const void *);",
          "108: int magic_getparam(magic_t, int, void *);",
          "",
          "[Removed Lines]",
          "106: #define MAGIC_PARAM_MAX_RECURSION 0",
          "",
          "[Added Lines]",
          "106: #define MAGIC_PARAM_INDIR_RECURSION 0",
          "107: #define MAGIC_PARAM_NAME_RECURSION 1",
          "108: #define MAGIC_PARAM_PHNUM_MAX  2",
          "109: #define MAGIC_PARAM_SHNUM_MAX  3",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.198 2014/11/23 13:54:27 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.199 2014/11/27 15:40:36 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: #include <time.h>",
          "45: private int match(struct magic_set *, struct magic *, uint32_t,",
          "48: private int mget(struct magic_set *, const unsigned char *,",
          "51: private int magiccheck(struct magic_set *, struct magic *);",
          "52: private int32_t mprint(struct magic_set *, struct magic *);",
          "53: private int32_t moffset(struct magic_set *, struct magic *);",
          "",
          "[Removed Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, size_t, int *, int *,",
          "47:     int *);",
          "49:     struct magic *, size_t, size_t, unsigned int, int, int, int, size_t, int *,",
          "50:     int *, int *);",
          "",
          "[Added Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, uint16_t, uint16_t,",
          "47:     int *, int *, int *);",
          "49:     struct magic *, size_t, size_t, unsigned int, int, int, int, uint16_t,",
          "50:     uint16_t, int *, int *, int *);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72: protected int",
          "73: file_softmagic(struct magic_set *ms, const unsigned char *buf, size_t nbytes,",
          "75: {",
          "76:  struct mlist *ml;",
          "77:  int rv, printed_something = 0, need_separator = 0;",
          "79:  for (ml = ms->mlist[0]->next; ml != ms->mlist[0]; ml = ml->next)",
          "80:   if ((rv = match(ms, ml->magic, ml->nmagic, buf, nbytes, 0, mode,",
          "83:    return rv;",
          "85:  return 0;",
          "",
          "[Removed Lines]",
          "74:     size_t level, int mode, int text)",
          "81:       text, 0, level, &printed_something, &need_separator,",
          "82:       NULL)) != 0)",
          "",
          "[Added Lines]",
          "74:     uint16_t indir_level, uint16_t name_level, int mode, int text)",
          "81:       text, 0, indir_level, name_level, &printed_something,",
          "82:       &need_separator, NULL)) != 0)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "134: private int",
          "135: match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,",
          "136:     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,",
          "138:     int *need_separator, int *returnval)",
          "139: {",
          "140:  uint32_t magindex = 0;",
          "",
          "[Removed Lines]",
          "137:     int flip, size_t recursion_level, int *printed_something,",
          "",
          "[Added Lines]",
          "137:     int flip, uint16_t indir_level, uint16_t name_level, int *printed_something,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "174:   switch (mget(ms, s, m, nbytes, offset, cont_level, mode, text,",
          "176:       need_separator, returnval)) {",
          "177:   case -1:",
          "178:    return -1;",
          "",
          "[Removed Lines]",
          "175:       flip, recursion_level + 1, printed_something,",
          "",
          "[Added Lines]",
          "175:       flip, indir_level, name_level, printed_something,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "261:    }",
          "262: #endif",
          "263:    switch (mget(ms, s, m, nbytes, offset, cont_level, mode,",
          "266:    case -1:",
          "267:     return -1;",
          "268:    case 0:",
          "",
          "[Removed Lines]",
          "264:        text, flip, recursion_level + 1, printed_something,",
          "265:        need_separator, returnval)) {",
          "",
          "[Added Lines]",
          "264:        text, flip, indir_level, name_level,",
          "265:        printed_something, need_separator, returnval)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1215: private int",
          "1216: mget(struct magic_set *ms, const unsigned char *s, struct magic *m,",
          "1217:     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,",
          "1219:     int *need_separator, int *returnval)",
          "1220: {",
          "1221:  uint32_t offset = ms->offset;",
          "",
          "[Removed Lines]",
          "1218:     int flip, size_t recursion_level, int *printed_something,",
          "",
          "[Added Lines]",
          "1218:     int flip, uint16_t indir_level, uint16_t name_level, int *printed_something,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1226:  union VALUETYPE *p = &ms->ms_value;",
          "1227:  struct mlist ml;",
          "1232:   return -1;",
          "1233:  }",
          "",
          "[Removed Lines]",
          "1229:  if (recursion_level >= ms->max_recursion) {",
          "1230:   file_error(ms, 0, \"recursion nesting (%zu) exceeded\",",
          "1231:       recursion_level);",
          "",
          "[Added Lines]",
          "1229:  if (indir_level >= ms->indir_recursion) {",
          "1230:   file_error(ms, 0, \"indirect recursion nesting (%hu) exceeded\",",
          "1231:       indir_level);",
          "1232:   return -1;",
          "1233:  }",
          "1235:  if (name_level >= ms->name_recursion) {",
          "1236:   file_error(ms, 0, \"name recursion nesting (%hu) exceeded\",",
          "1237:       name_level);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1680:    return -1;",
          "1682:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
          "1685:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1686:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
          "",
          "[Removed Lines]",
          "1683:       recursion_level, BINTEST, text);",
          "",
          "[Added Lines]",
          "1689:       indir_level + 1, name_level, BINTEST, text);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1720:   if (m->flag & NOSPACE)",
          "1722:   rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,",
          "1725:   if (rv != 1)",
          "1727:   return rv;",
          "",
          "[Removed Lines]",
          "1723:       mode, text, flip, recursion_level, printed_something,",
          "1724:       need_separator, returnval);",
          "",
          "[Added Lines]",
          "1729:       mode, text, flip, indir_level, name_level + 1,",
          "1730:       printed_something, need_separator, returnval);",
          "",
          "---------------"
        ]
      }
    }
  ]
}