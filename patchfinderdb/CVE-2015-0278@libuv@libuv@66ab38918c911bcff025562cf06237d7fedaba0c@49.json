{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2f3124a8c1a66367b6f4d638228490d5e1f8d6fe",
      "candidate_info": {
        "commit_hash": "2f3124a8c1a66367b6f4d638228490d5e1f8d6fe",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/2f3124a8c1a66367b6f4d638228490d5e1f8d6fe",
        "files": [
          ".gitignore",
          "Makefile.am",
          "autogen.sh",
          "configure.ac",
          "m4/dtrace.m4"
        ],
        "message": "build: add DTrace detection for autotools",
        "before_after_code_files": [
          "Makefile.am||Makefile.am",
          "autogen.sh||autogen.sh",
          "configure.ac||configure.ac",
          "m4/dtrace.m4||m4/dtrace.m4"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: include_HEADERS=include/uv.h include/uv-unix.h",
          "23: lib_LTLIBRARIES = libuv.la",
          "24: libuv_la_CFLAGS = @CFLAGS@",
          "25: libuv_la_LDFLAGS = -no-undefined -version-info 11:0:0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: CLEANFILES =",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189: libuv_la_CFLAGS += -D__EXTENSIONS__ -D_XOPEN_SOURCE=500",
          "190: libuv_la_SOURCES += src/unix/sunos.c",
          "191: endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195: if HAVE_DTRACE",
          "196: BUILT_SOURCES = include/uv-dtrace.h",
          "197: CLEANFILES += include/uv-dtrace.h",
          "198: endif",
          "200: if DTRACE_NEEDS_OBJECTS",
          "201: libuv_la_SOURCES += src/unix/uv-dtrace.d",
          "202: libuv_la_DEPENDENCIES = src/unix/uv-dtrace.o",
          "203: libuv_la_LIBADD = src/unix/uv-dtrace.lo",
          "204: CLEANFILES += src/unix/uv-dtrace.o src/unix/uv-dtrace.lo",
          "205: endif",
          "207: SUFFIXES = .d",
          "209: include/uv-dtrace.h: src/unix/uv-dtrace.d",
          "210:  $(AM_V_GEN)$(DTRACE) $(DTRACEFLAGS) -h -xnolibs -s $< -o $@",
          "212: src/unix/uv-dtrace.o: src/unix/uv-dtrace.d ${libuv_la_OBJECTS}",
          "214: .d.o:",
          "215:  $(AM_V_GEN)$(DTRACE) $(DTRACEFLAGS) -G -o $@ -s $< \\",
          "216:   `grep '^pic_object' ${top_builddir}/*.lo | cut -f 2 -d\\'`",
          "217:  $(AM_V_GEN)printf %s\\\\n \\",
          "218:   '# $(patsubst %.o, %.lo, $@) - a libtool object file' \\",
          "219:   '# Generated by libtool (GNU libtool) 2.4' \\",
          "220:   '# libtool wants a .lo not a .o' \\",
          "221:   \"pic_object='uv-dtrace.o'\" \\",
          "222:   \"non_pic_object='uv-dtrace.o'\" \\",
          "223:  > $(patsubst %.o, %.lo, $@)",
          "",
          "---------------"
        ],
        "autogen.sh||autogen.sh": [
          "File: autogen.sh -> autogen.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: set -ex",
          "22: ${LIBTOOLIZE:-libtoolize}",
          "24: ${AUTOCONF:-autoconf}",
          "25: ${AUTOMAKE:-automake} --add-missing",
          "",
          "[Removed Lines]",
          "23: ${ACLOCAL:-aclocal}",
          "",
          "[Added Lines]",
          "23: ${ACLOCAL:-aclocal -I m4}",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: AM_CONDITIONAL([NETBSD],  [AS_CASE([$host_os], [netbsd*],  [true], [false])])",
          "43: AM_CONDITIONAL([OPENBSD], [AS_CASE([$host_os], [openbsd*], [true], [false])])",
          "44: AM_CONDITIONAL([SUNOS],   [AS_CASE([$host_os], [solaris*], [true], [false])])",
          "45: AC_CONFIG_FILES([Makefile])",
          "46: AC_OUTPUT",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: PANDORA_ENABLE_DTRACE",
          "",
          "---------------"
        ],
        "m4/dtrace.m4||m4/dtrace.m4": [
          "File: m4/dtrace.m4 -> m4/dtrace.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: dnl  Copyright (C) 2009 Sun Microsystems",
          "2: dnl This file is free software; Sun Microsystems",
          "3: dnl gives unlimited permission to copy and/or distribute it,",
          "4: dnl with or without modifications, as long as this notice is preserved.",
          "6: dnl ---------------------------------------------------------------------------",
          "7: dnl Macro: PANDORA_ENABLE_DTRACE",
          "8: dnl ---------------------------------------------------------------------------",
          "9: AC_DEFUN([PANDORA_ENABLE_DTRACE],[",
          "10:   AC_ARG_ENABLE([dtrace],",
          "11:     [AS_HELP_STRING([--disable-dtrace],",
          "12:             [enable DTrace USDT probes. @<:@default=yes@:>@])],",
          "13:     [ac_cv_enable_dtrace=\"$enableval\"],",
          "14:     [ac_cv_enable_dtrace=\"yes\"])",
          "16:   AS_IF([test \"$ac_cv_enable_dtrace\" = \"yes\"],[",
          "17:     AC_CHECK_PROGS([DTRACE], [dtrace])",
          "18:     AS_IF([test \"x$ac_cv_prog_DTRACE\" = \"xdtrace\"],[",
          "20:       AC_CACHE_CHECK([if dtrace works],[ac_cv_dtrace_works],[",
          "21:         cat >conftest.d <<_ACEOF",
          "22: provider Example {",
          "23:   probe increment(int);",
          "24: };",
          "25: _ACEOF",
          "26:         $DTRACE -h -o conftest.h -s conftest.d 2>/dev/zero",
          "27:         AS_IF([test $? -eq 0],[ac_cv_dtrace_works=yes],",
          "28:           [ac_cv_dtrace_works=no])",
          "29:         rm -f conftest.h conftest.d",
          "30:       ])",
          "31:       AS_IF([test \"x$ac_cv_dtrace_works\" = \"xyes\"],[",
          "32:         AC_DEFINE([HAVE_DTRACE], [1], [Enables DTRACE Support])",
          "33:       ])",
          "34:       AC_CACHE_CHECK([if dtrace should instrument object files],",
          "35:         [ac_cv_dtrace_needs_objects],[",
          "36:           dnl DTrace on MacOSX does not use -G option",
          "37:           cat >conftest.d <<_ACEOF",
          "38: provider Example {",
          "39:   probe increment(int);",
          "40: };",
          "41: _ACEOF",
          "42:           $DTRACE -G -o conftest.d.o -s conftest.d 2>/dev/zero",
          "43:           AS_IF([test $? -eq 0],[ac_cv_dtrace_needs_objects=yes],",
          "44:             [ac_cv_dtrace_needs_objects=no])",
          "45:           rm -f conftest.d.o conftest.d",
          "46:       ])",
          "47:       AC_SUBST(DTRACEFLAGS) dnl TODO: test for -G on OSX",
          "48:       ac_cv_have_dtrace=yes",
          "49:     ])])",
          "51: AM_CONDITIONAL([HAVE_DTRACE], [test \"x$ac_cv_dtrace_works\" = \"xyes\"])",
          "52: AM_CONDITIONAL([DTRACE_NEEDS_OBJECTS],",
          "53:                [test \"x$ac_cv_dtrace_needs_objects\" = \"xyes\"])",
          "55: ])",
          "56: dnl ---------------------------------------------------------------------------",
          "57: dnl End Macro: PANDORA_ENABLE_DTRACE",
          "58: dnl ---------------------------------------------------------------------------",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "36b38cbdba5638bb03be116270fa8282a391ecae",
      "candidate_info": {
        "commit_hash": "36b38cbdba5638bb03be116270fa8282a391ecae",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/36b38cbdba5638bb03be116270fa8282a391ecae",
        "files": [
          "src/unix/freebsd.c",
          "src/unix/openbsd.c",
          "src/win/core.c",
          "src/win/fs.c",
          "src/win/handle-inl.h",
          "src/win/internal.h",
          "src/win/process.c",
          "src/win/tcp.c"
        ],
        "message": "style: remove trailing whitespace\n\nSigned-off-by: Fedor Indutny <fedor@indutny.com>",
        "before_after_code_files": [
          "src/unix/freebsd.c||src/unix/freebsd.c",
          "src/unix/openbsd.c||src/unix/openbsd.c",
          "src/win/core.c||src/win/core.c",
          "src/win/fs.c||src/win/fs.c",
          "src/win/handle-inl.h||src/win/handle-inl.h",
          "src/win/internal.h||src/win/internal.h",
          "src/win/process.c||src/win/process.c",
          "src/win/tcp.c||src/win/tcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/freebsd.c||src/unix/freebsd.c": [
          "File: src/unix/freebsd.c -> src/unix/freebsd.c"
        ],
        "src/unix/openbsd.c||src/unix/openbsd.c": [
          "File: src/unix/openbsd.c -> src/unix/openbsd.c"
        ],
        "src/win/core.c||src/win/core.c": [
          "File: src/win/core.c -> src/win/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: static int uv__crt_dbg_report_handler(int report_type, char *message, int *ret_val) {",
          "54:   if (uv__crt_assert_enabled || report_type != _CRT_ASSERT)",
          "55:     return FALSE;",
          "57:   if (ret_val) {",
          "63:     else",
          "65:   }",
          "",
          "[Removed Lines]",
          "61:     if(IsDebuggerPresent())",
          "",
          "[Added Lines]",
          "61:     if(IsDebuggerPresent())",
          "",
          "---------------"
        ],
        "src/win/fs.c||src/win/fs.c": [
          "File: src/win/fs.c -> src/win/fs.c"
        ],
        "src/win/handle-inl.h||src/win/handle-inl.h": [
          "File: src/win/handle-inl.h -> src/win/handle-inl.h"
        ],
        "src/win/internal.h||src/win/internal.h": [
          "File: src/win/internal.h -> src/win/internal.h"
        ],
        "src/win/process.c||src/win/process.c": [
          "File: src/win/process.c -> src/win/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1011:   CloseHandle(info.hThread);",
          "1017:   uv__handle_start(process);",
          "",
          "[Removed Lines]",
          "1013:   assert(!err);",
          "",
          "[Added Lines]",
          "1013:   assert(!err);",
          "",
          "---------------"
        ],
        "src/win/tcp.c||src/win/tcp.c": [
          "File: src/win/tcp.c -> src/win/tcp.c"
        ]
      }
    },
    {
      "candidate_hash": "c18205a1c588b5cfb7ea74c67b5e2974ebeff7ab",
      "candidate_info": {
        "commit_hash": "c18205a1c588b5cfb7ea74c67b5e2974ebeff7ab",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/c18205a1c588b5cfb7ea74c67b5e2974ebeff7ab",
        "files": [
          "docs/src/fs.rst",
          "include/uv-win.h",
          "include/uv.h",
          "src/unix/fs.c",
          "src/win/fs.c",
          "test/test-fs.c",
          "test/test-list.h"
        ],
        "message": "unix, windows: add uv_fs_access()",
        "before_after_code_files": [
          "include/uv-win.h||include/uv-win.h",
          "include/uv.h||include/uv.h",
          "src/unix/fs.c||src/unix/fs.c",
          "src/win/fs.c||src/win/fs.c",
          "test/test-fs.c||test/test-fs.c",
          "test/test-list.h||test/test-list.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv-win.h||include/uv-win.h": [
          "File: include/uv-win.h -> include/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "639: int uv_utf8_to_utf16(const char* utf8Buffer, WCHAR* utf16Buffer,",
          "640:     size_t utf16Size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "642: #ifndef F_OK",
          "643: #define F_OK 0",
          "644: #endif",
          "645: #ifndef R_OK",
          "646: #define R_OK 4",
          "647: #endif",
          "648: #ifndef W_OK",
          "649: #define W_OK 2",
          "650: #endif",
          "651: #ifndef X_OK",
          "652: #define X_OK 1",
          "653: #endif",
          "",
          "---------------"
        ],
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1022:   UV_FS_FTRUNCATE,",
          "1023:   UV_FS_UTIME,",
          "1024:   UV_FS_FUTIME,",
          "1025:   UV_FS_CHMOD,",
          "1026:   UV_FS_FCHMOD,",
          "1027:   UV_FS_FSYNC,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1025:   UV_FS_ACCESS,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1134:                              int64_t in_offset,",
          "1135:                              size_t length,",
          "1136:                              uv_fs_cb cb);",
          "1137: UV_EXTERN int uv_fs_chmod(uv_loop_t* loop,",
          "1138:                           uv_fs_t* req,",
          "1139:                           const char* path,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1138: UV_EXTERN int uv_fs_access(uv_loop_t* loop,",
          "1139:                            uv_fs_t* req,",
          "1140:                            const char* path,",
          "1141:                            int flags,",
          "1142:                            uv_fs_cb cb);",
          "",
          "---------------"
        ],
        "src/unix/fs.c||src/unix/fs.c": [
          "File: src/unix/fs.c -> src/unix/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "763:     break;",
          "765:     switch (req->fs_type) {",
          "766:     X(CHMOD, chmod(req->path, req->mode));",
          "767:     X(CHOWN, chown(req->path, req->uid, req->gid));",
          "768:     X(CLOSE, close(req->file));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "766:     X(ACCESS, access(req->path, req->flags));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "853: }",
          "856: int uv_fs_chmod(uv_loop_t* loop,",
          "857:                 uv_fs_t* req,",
          "858:                 const char* path,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "857: int uv_fs_access(uv_loop_t* loop,",
          "858:                  uv_fs_t* req,",
          "859:                  const char* path,",
          "860:                  int flags,",
          "861:                  uv_fs_cb cb) {",
          "862:   INIT(ACCESS);",
          "863:   PATH;",
          "864:   req->flags = flags;",
          "865:   POST;",
          "866: }",
          "",
          "---------------"
        ],
        "src/win/fs.c||src/win/fs.c": [
          "File: src/win/fs.c -> src/win/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1220: }",
          "1223: static void fs__chmod(uv_fs_t* req) {",
          "1224:   int result = _wchmod(req->pathw, req->mode);",
          "1225:   SET_REQ_RESULT(req, result);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1223: static void fs__access(uv_fs_t* req) {",
          "1224:   DWORD attr = GetFileAttributesW(req->pathw);",
          "1226:   if (attr == INVALID_FILE_ATTRIBUTES) {",
          "1227:     SET_REQ_WIN32_ERROR(req, GetLastError());",
          "1228:     return;",
          "1229:   }",
          "1231:   if ((req->flags & W_OK) &&",
          "1232:       ((attr & FILE_ATTRIBUTE_READONLY) ||",
          "1233:       (attr & FILE_ATTRIBUTE_DIRECTORY))) {",
          "1234:     SET_REQ_WIN32_ERROR(req, UV_EPERM);",
          "1235:     return;",
          "1236:   }",
          "1238:   SET_REQ_RESULT(req, 0);",
          "1239: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1595:     XX(FTRUNCATE, ftruncate)",
          "1596:     XX(UTIME, utime)",
          "1597:     XX(FUTIME, futime)",
          "1598:     XX(CHMOD, chmod)",
          "1599:     XX(FCHMOD, fchmod)",
          "1600:     XX(FSYNC, fsync)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1617:     XX(ACCESS, access)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2102: }",
          "2105: int uv_fs_chmod(uv_loop_t* loop, uv_fs_t* req, const char* path, int mode,",
          "2106:     uv_fs_cb cb) {",
          "2107:   int err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2125: int uv_fs_access(uv_loop_t* loop,",
          "2126:                  uv_fs_t* req,",
          "2127:                  const char* path,",
          "2128:                  int flags,",
          "2129:                  uv_fs_cb cb) {",
          "2130:   int err;",
          "2132:   uv_fs_req_init(loop, req, UV_FS_ACCESS, cb);",
          "2134:   err = fs__capture_path(loop, req, path, NULL, cb != NULL);",
          "2135:   if (err)",
          "2136:     return uv_translate_sys_error(err);",
          "2138:   req->flags = flags;",
          "2140:   if (cb) {",
          "2141:     QUEUE_FS_TP_JOB(loop, req);",
          "2142:     return 0;",
          "2143:   }",
          "2145:   fs__access(req);",
          "2146:   return req->result;",
          "2147: }",
          "",
          "---------------"
        ],
        "test/test-fs.c||test/test-fs.c": [
          "File: test/test-fs.c -> test/test-fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75: static int ftruncate_cb_count;",
          "76: static int sendfile_cb_count;",
          "77: static int fstat_cb_count;",
          "78: static int chmod_cb_count;",
          "79: static int fchmod_cb_count;",
          "80: static int chown_cb_count;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78: static int access_cb_count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:   uv_fs_req_cleanup(req);",
          "165: }",
          "167: static void fchmod_cb(uv_fs_t* req) {",
          "168:   ASSERT(req->fs_type == UV_FS_FCHMOD);",
          "169:   ASSERT(req->result == 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "169: static void access_cb(uv_fs_t* req) {",
          "170:   ASSERT(req->fs_type == UV_FS_ACCESS);",
          "171:   access_cb_count++;",
          "172:   uv_fs_req_cleanup(req);",
          "173: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1119: }",
          "1122: TEST_IMPL(fs_chmod) {",
          "1123:   int r;",
          "1124:   uv_fs_t req;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1128: }",
          "1131: TEST_IMPL(fs_access) {",
          "1132:   int r;",
          "1133:   uv_fs_t req;",
          "1134:   uv_file file;",
          "1137:   unlink(\"test_file\");",
          "1139:   loop = uv_default_loop();",
          "1142:   r = uv_fs_access(loop, &req, \"test_file\", F_OK, NULL);",
          "1143:   ASSERT(r < 0);",
          "1144:   ASSERT(req.result < 0);",
          "1145:   uv_fs_req_cleanup(&req);",
          "1148:   r = uv_fs_access(loop, &req, \"test_file\", F_OK, access_cb);",
          "1149:   ASSERT(r == 0);",
          "1150:   uv_run(loop, UV_RUN_DEFAULT);",
          "1151:   ASSERT(access_cb_count == 1);",
          "1155:   r = uv_fs_open(loop, &req, \"test_file\", O_RDWR | O_CREAT,",
          "1156:                  S_IWUSR | S_IRUSR, NULL);",
          "1157:   ASSERT(r >= 0);",
          "1158:   ASSERT(req.result >= 0);",
          "1159:   file = req.result;",
          "1160:   uv_fs_req_cleanup(&req);",
          "1163:   r = uv_fs_access(loop, &req, \"test_file\", F_OK, NULL);",
          "1164:   ASSERT(r == 0);",
          "1165:   ASSERT(req.result == 0);",
          "1166:   uv_fs_req_cleanup(&req);",
          "1169:   r = uv_fs_access(loop, &req, \"test_file\", F_OK, access_cb);",
          "1170:   ASSERT(r == 0);",
          "1171:   uv_run(loop, UV_RUN_DEFAULT);",
          "1172:   ASSERT(access_cb_count == 1);",
          "1176:   r = uv_fs_close(loop, &req, file, NULL);",
          "1177:   ASSERT(r == 0);",
          "1178:   ASSERT(req.result == 0);",
          "1179:   uv_fs_req_cleanup(&req);",
          "1185:   uv_run(loop, UV_RUN_DEFAULT);",
          "1188:   unlink(\"test_file\");",
          "",
          "---------------"
        ],
        "test/test-list.h||test/test-list.h": [
          "File: test/test-list.h -> test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "218: TEST_DECLARE   (fs_async_sendfile)",
          "219: TEST_DECLARE   (fs_mkdtemp)",
          "220: TEST_DECLARE   (fs_fstat)",
          "221: TEST_DECLARE   (fs_chmod)",
          "222: TEST_DECLARE   (fs_chown)",
          "223: TEST_DECLARE   (fs_link)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221: TEST_DECLARE   (fs_access)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "590:   TEST_ENTRY  (fs_async_sendfile)",
          "591:   TEST_ENTRY  (fs_mkdtemp)",
          "592:   TEST_ENTRY  (fs_fstat)",
          "593:   TEST_ENTRY  (fs_chmod)",
          "594:   TEST_ENTRY  (fs_chown)",
          "595:   TEST_ENTRY  (fs_utime)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "594:   TEST_ENTRY  (fs_access)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "da9a2b1d3d86eeeeaea6380620c7ab315e8c142d",
      "candidate_info": {
        "commit_hash": "da9a2b1d3d86eeeeaea6380620c7ab315e8c142d",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/da9a2b1d3d86eeeeaea6380620c7ab315e8c142d",
        "files": [
          "include/uv.h",
          "src/unix/core.c",
          "src/win/util.c",
          "test/test-platform-output.c"
        ],
        "message": "unix, windows: add uv_getrusage() function",
        "before_after_code_files": [
          "include/uv.h||include/uv.h",
          "src/unix/core.c||src/unix/core.c",
          "src/win/util.c||src/win/util.c",
          "test/test-platform-output.c||test/test-platform-output.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1669: UV_EXTERN int uv_resident_set_memory(size_t* rss);",
          "1670: UV_EXTERN int uv_uptime(double* uptime);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1672: typedef struct {",
          "1673:   long tv_sec;",
          "1674:   long tv_usec;",
          "1675: } uv_timeval_t;",
          "1677: typedef struct {",
          "1694: } uv_rusage_t;",
          "1700: UV_EXTERN int uv_getrusage(uv_rusage_t* rusage);",
          "",
          "---------------"
        ],
        "src/unix/core.c||src/unix/core.c": [
          "File: src/unix/core.c -> src/unix/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "785:   assert(0 != events);",
          "786:   return 0 != (w->pevents & events);",
          "787: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "791: int uv_getrusage(uv_rusage_t* rusage) {",
          "792:   struct rusage usage;",
          "794:   if (getrusage(RUSAGE_SELF, &usage))",
          "795:     return -errno;",
          "797:   rusage->ru_utime.tv_sec = usage.ru_utime.tv_sec;",
          "798:   rusage->ru_utime.tv_usec = usage.ru_utime.tv_usec;",
          "800:   rusage->ru_stime.tv_sec = usage.ru_stime.tv_sec;",
          "801:   rusage->ru_stime.tv_usec = usage.ru_stime.tv_usec;",
          "803:   rusage->ru_maxrss = usage.ru_maxrss;",
          "804:   rusage->ru_ixrss = usage.ru_ixrss;",
          "805:   rusage->ru_idrss = usage.ru_idrss;",
          "806:   rusage->ru_isrss = usage.ru_isrss;",
          "807:   rusage->ru_minflt = usage.ru_minflt;",
          "808:   rusage->ru_majflt = usage.ru_majflt;",
          "809:   rusage->ru_nswap = usage.ru_nswap;",
          "810:   rusage->ru_inblock = usage.ru_inblock;",
          "811:   rusage->ru_oublock = usage.ru_oublock;",
          "812:   rusage->ru_msgsnd = usage.ru_msgsnd;",
          "813:   rusage->ru_msgrcv = usage.ru_msgrcv;",
          "814:   rusage->ru_nsignals = usage.ru_nsignals;",
          "815:   rusage->ru_nvcsw = usage.ru_nvcsw;",
          "816:   rusage->ru_nivcsw = usage.ru_nivcsw;",
          "818:   return 0;",
          "819: }",
          "",
          "---------------"
        ],
        "src/win/util.c||src/win/util.c": [
          "File: src/win/util.c -> src/win/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: #include <iphlpapi.h>",
          "37: #include <psapi.h>",
          "38: #include <tlhelp32.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: #include <windows.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "988:     int count) {",
          "989:   free(addresses);",
          "990: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "994: int uv_getrusage(uv_rusage_t *uv_rusage) {",
          "995:   FILETIME createTime, exitTime, kernelTime, userTime;",
          "996:   SYSTEMTIME kernelSystemTime, userSystemTime;",
          "997:   int ret;",
          "999:   ret = GetProcessTimes(GetCurrentProcess(), &createTime, &exitTime, &kernelTime, &userTime);",
          "1000:   if (ret == 0) {",
          "1001:     return uv_translate_sys_error(GetLastError());",
          "1002:   }",
          "1004:   ret = FileTimeToSystemTime(&kernelTime, &kernelSystemTime);",
          "1005:   if (ret == 0) {",
          "1006:     return uv_translate_sys_error(GetLastError());",
          "1007:   }",
          "1009:   ret = FileTimeToSystemTime(&userTime, &userSystemTime);",
          "1010:   if (ret == 0) {",
          "1011:     return uv_translate_sys_error(GetLastError());",
          "1012:   }",
          "1014:   memset(uv_rusage, 0, sizeof(*uv_rusage));",
          "1016:   uv_rusage->ru_utime.tv_sec = userSystemTime.wHour * 3600 +",
          "1017:                                userSystemTime.wMinute * 60 +",
          "1018:                                userSystemTime.wSecond;",
          "1019:   uv_rusage->ru_utime.tv_usec = userSystemTime.wMilliseconds * 1000;",
          "1021:   uv_rusage->ru_stime.tv_sec = kernelSystemTime.wHour * 3600 +",
          "1022:                                kernelSystemTime.wMinute * 60 +",
          "1023:                                kernelSystemTime.wSecond;",
          "1024:   uv_rusage->ru_stime.tv_usec = kernelSystemTime.wMilliseconds * 1000;",
          "1026:   return 0;",
          "1027: }",
          "",
          "---------------"
        ],
        "test/test-platform-output.c||test/test-platform-output.c": [
          "File: test/test-platform-output.c -> test/test-platform-output.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:   char buffer[512];",
          "29:   size_t rss;",
          "30:   double uptime;",
          "31:   uv_cpu_info_t* cpus;",
          "32:   uv_interface_address_t* interfaces;",
          "33:   int count;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:   uv_rusage_t rusage;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:   ASSERT(uptime > 0);",
          "48:   printf(\"uv_uptime: %f\\n\", uptime);",
          "50:   err = uv_cpu_info(&cpus, &count);",
          "51:   ASSERT(err == 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:   err = uv_getrusage(&rusage);",
          "52:   ASSERT(err == 0);",
          "53:   ASSERT(rusage.ru_utime.tv_sec >= 0);",
          "54:   ASSERT(rusage.ru_utime.tv_usec >= 0);",
          "55:   ASSERT(rusage.ru_stime.tv_sec >= 0);",
          "56:   ASSERT(rusage.ru_stime.tv_usec >= 0);",
          "57:   printf(\"uv_getrusage:\\n\");",
          "58:   printf(\"  user: %llu sec %llu microsec\\n\",",
          "59:          (unsigned long long) rusage.ru_utime.tv_sec,",
          "60:          (unsigned long long) rusage.ru_utime.tv_usec);",
          "61:   printf(\"  system: %llu sec %llu microsec\\n\",",
          "62:          (unsigned long long) rusage.ru_stime.tv_sec,",
          "63:          (unsigned long long) rusage.ru_stime.tv_usec);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e4c1483b48c4d3eb6e1692aed8c2e183386d2c0a",
      "candidate_info": {
        "commit_hash": "e4c1483b48c4d3eb6e1692aed8c2e183386d2c0a",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/e4c1483b48c4d3eb6e1692aed8c2e183386d2c0a",
        "files": [
          "configure.ac"
        ],
        "message": "build: serial-tests was added in automake v1.12\n\nCommit a97685e added a check that tries to ascertain whether the\nserial-tests option is supported by automake. It assumed that said\noption was added in automake v1.11 but it turns out that's wrong, it\nwasn't added until v1.12. Update the check.\n\nOf course, none of this would have been necessary if the automake people\nhad simply added a macro that tells you if serial-tests is supported or\nnot.",
        "before_after_code_files": [
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: AC_PREREQ(2.57)",
          "16: AC_INIT([libuv], [0.11.5], [https://github.com/joyent/libuv/issues])",
          "20:                           [-Wall -Werror foreign subdir-objects serial-tests],",
          "21:                           [-Wall -Werror foreign subdir-objects]))",
          "22: AC_CONFIG_MACRO_DIR([m4])",
          "",
          "[Removed Lines]",
          "17: # Use AM_SILENT_RULES as an ad-hoc version check to find out if it's safe",
          "18: # to use the serial-tests directive. Both were added in automake v0.11.",
          "19: AM_INIT_AUTOMAKE(m4_ifdef([AM_SILENT_RULES],",
          "",
          "[Added Lines]",
          "17: # Use AM_PROG_AR as an ad-hoc version check to find out if it's safe",
          "18: # to use the serial-tests directive. Both were added in automake v0.12.",
          "19: AM_INIT_AUTOMAKE(m4_ifdef([AM_PROG_AR],",
          "",
          "---------------"
        ]
      }
    }
  ]
}