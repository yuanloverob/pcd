{
  "cve_id": "CVE-2019-1010305",
  "cve_desc": "libmspack 0.9.1alpha is affected by: Buffer Overflow. The impact is: Information Disclosure. The component is: function chmd_read_headers() in libmspack(file libmspack/mspack/chmd.c). The attack vector is: the victim must open a specially crafted chm file. The fixed version is: after commit 2f084136cfe0d05e5bf5703f3e83c6d955234b4d.",
  "repo": "kyz/libmspack",
  "patch_hash": "2f084136cfe0d05e5bf5703f3e83c6d955234b4d",
  "patch_info": {
    "commit_hash": "2f084136cfe0d05e5bf5703f3e83c6d955234b4d",
    "repo": "kyz/libmspack",
    "commit_url": "https://github.com/kyz/libmspack/commit/2f084136cfe0d05e5bf5703f3e83c6d955234b4d",
    "files": [
      "libmspack/ChangeLog",
      "libmspack/mspack/chmd.c"
    ],
    "message": "length checks when looking for control files",
    "before_after_code_files": [
      "libmspack/mspack/chmd.c||libmspack/mspack/chmd.c"
    ]
  },
  "patch_diff": {
    "libmspack/mspack/chmd.c||libmspack/mspack/chmd.c": [
      "File: libmspack/mspack/chmd.c -> libmspack/mspack/chmd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "484:       if (name[0] == ':' && name[1] == ':') {",
      "499:         }",
      "500:         fi->next = chm->sysfiles;",
      "501:         chm->sysfiles = fi;",
      "",
      "[Removed Lines]",
      "486:         if (memcmp(&name[2], &content_name[2], 31L) == 0) {",
      "487:           if (memcmp(&name[33], &content_name[33], 8L) == 0) {",
      "488:             chm->sec1.content = fi;",
      "489:           }",
      "490:           else if (memcmp(&name[33], &control_name[33], 11L) == 0) {",
      "491:             chm->sec1.control = fi;",
      "492:           }",
      "493:           else if (memcmp(&name[33], &spaninfo_name[33], 8L) == 0) {",
      "494:             chm->sec1.spaninfo = fi;",
      "495:           }",
      "496:           else if (memcmp(&name[33], &rtable_name[33], 72L) == 0) {",
      "497:             chm->sec1.rtable = fi;",
      "498:           }",
      "",
      "[Added Lines]",
      "486:         if (name_len == 40 && memcmp(name, content_name, 40) == 0) {",
      "487:           chm->sec1.content = fi;",
      "488:         }",
      "489:         else if (name_len == 44 && memcmp(name, control_name, 44) == 0) {",
      "490:           chm->sec1.control = fi;",
      "491:         }",
      "492:         else if (name_len == 41 && memcmp(name, spaninfo_name, 41) == 0) {",
      "493:           chm->sec1.spaninfo = fi;",
      "494:         }",
      "495:         else if (name_len == 105 && memcmp(name, rtable_name, 105) == 0) {",
      "496:           chm->sec1.rtable = fi;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9b6c627ba121f2db25b16ec7e59cf152adb1f783",
      "candidate_info": {
        "commit_hash": "9b6c627ba121f2db25b16ec7e59cf152adb1f783",
        "repo": "kyz/libmspack",
        "commit_url": "https://github.com/kyz/libmspack/commit/9b6c627ba121f2db25b16ec7e59cf152adb1f783",
        "files": [
          "cabextract/ChangeLog",
          "cabextract/amibuild.sh",
          "cabextract/configure.ac",
          "cabextract/getopt.c",
          "cabextract/md5.c",
          "cabextract/md5.h",
          "cabextract/src/cabextract.c",
          "cabextract/src/cabinfo.c",
          "libmspack/ChangeLog",
          "libmspack/configure.ac",
          "libmspack/mspack/chmd.c",
          "libmspack/mspack/system.h",
          "libmspack/mspack/szddd.c",
          "libmspack/src/chmextract.c",
          "libmspack/test/md5.c",
          "libmspack/test/md5.h",
          "libmspack/winbuild.sh"
        ],
        "message": "remove obsolescent C library tests",
        "before_after_code_files": [
          "cabextract/amibuild.sh||cabextract/amibuild.sh",
          "cabextract/configure.ac||cabextract/configure.ac",
          "cabextract/getopt.c||cabextract/getopt.c",
          "cabextract/md5.c||cabextract/md5.c",
          "cabextract/md5.h||cabextract/md5.h",
          "cabextract/src/cabextract.c||cabextract/src/cabextract.c",
          "cabextract/src/cabinfo.c||cabextract/src/cabinfo.c",
          "libmspack/configure.ac||libmspack/configure.ac",
          "libmspack/mspack/chmd.c||libmspack/mspack/chmd.c",
          "libmspack/mspack/system.h||libmspack/mspack/system.h",
          "libmspack/mspack/szddd.c||libmspack/mspack/szddd.c",
          "libmspack/src/chmextract.c||libmspack/src/chmextract.c",
          "libmspack/test/md5.c||libmspack/test/md5.c",
          "libmspack/test/md5.h||libmspack/test/md5.h",
          "libmspack/winbuild.sh||libmspack/winbuild.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libmspack/mspack/chmd.c||libmspack/mspack/chmd.c"
          ],
          "candidate": [
            "libmspack/mspack/chmd.c||libmspack/mspack/chmd.c"
          ]
        }
      },
      "candidate_diff": {
        "cabextract/amibuild.sh||cabextract/amibuild.sh": [
          "File: cabextract/amibuild.sh -> cabextract/amibuild.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # see https://github.com/cahirwpz/amigaos-cross-toolchain",
          "4: cat >config.h <<EOF",
          "13: #define HAVE_MKDIR 1",
          "23: #define HAVE_UTIME 1",
          "24: #define HAVE_UTIMES 1",
          "25: #define HAVE_UTIME_H 1",
          "26: #define ICONV_CONST const",
          "27: #define LATIN1_FILENAMES 1",
          "30: #define VERSION \"1.8\"",
          "31: #define WORDS_BIGENDIAN 1",
          "32: EOF",
          "",
          "[Removed Lines]",
          "5: #define HAVE_CTYPE_H 1",
          "6: #define HAVE_DIRENT_H 1",
          "7: #define HAVE_ERRNO_H 1",
          "8: #define HAVE_FNMATCH_H 1",
          "9: #define HAVE_LIMITS_H 1",
          "10: #define HAVE_LOCALE_H 1",
          "11: #define HAVE_MEMCPY 1",
          "12: #define HAVE_MEMMOVE 1",
          "14: #define HAVE_STDARG_H 1",
          "15: #define HAVE_STDLIB_H 1",
          "16: #define HAVE_STRCASECMP 1",
          "17: #define HAVE_STRCHR 1",
          "18: #define HAVE_STRINGS_H 1",
          "19: #define HAVE_STRING_H 1",
          "20: #define HAVE_SYS_STAT_H 1",
          "21: #define HAVE_SYS_TIME_H 1",
          "22: #define HAVE_SYS_TYPES_H 1",
          "28: #define STDC_HEADERS 1",
          "29: #define TIME_WITH_SYS_TIME 1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42: ppc-amigaos-gcc $CFLAGS -DHAVE_FSEEKO src/cabinfo.c -o cabinfo &&",
          "43: lha a cabextract_OS4.lha cabextract cabinfo",
          "47: lha a cabextract.lha cabextract cabinfo",
          "",
          "[Removed Lines]",
          "45: m68k-amigaos-gcc $CFLAGS -DNDEBUG -noixemul $SRCS getopt.c getopt1.c -o cabextract &&",
          "46: m68k-amigaos-gcc $CFLAGS -DNDEBUG -noixemul src/cabinfo.c -o cabinfo &&",
          "",
          "[Added Lines]",
          "26: m68k-amigaos-gcc $CFLAGS -noixemul $SRCS getopt.c getopt1.c -o cabextract &&",
          "27: m68k-amigaos-gcc $CFLAGS -noixemul src/cabinfo.c -o cabinfo &&",
          "",
          "---------------"
        ],
        "cabextract/configure.ac||cabextract/configure.ac": [
          "File: cabextract/configure.ac -> cabextract/configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: AC_EXEEXT",
          "16: # Checks for header files.",
          "24: # Checks for typedefs, structures, and compiler characteristics.",
          "25: AC_C_CONST",
          "",
          "[Removed Lines]",
          "17: AC_HEADER_STDC",
          "18: AC_HEADER_TIME",
          "19: AC_HEADER_DIRENT",
          "20: AC_CHECK_HEADERS([ctype.h errno.h fnmatch.h libintl.h limits.h locale.h stdlib.h \\",
          "21:  string.h strings.h utime.h stdarg.h sys/stat.h sys/time.h sys/types.h \\",
          "22:  getopt.h wchar.h wctype.h inttypes.h])",
          "",
          "[Added Lines]",
          "17: AC_CHECK_HEADERS([getopt.h inttypes.h strings.h])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34: AC_FUNC_FNMATCH",
          "35: AC_FUNC_FSEEKO",
          "36: AX_FUNC_MKDIR",
          "38: AC_CHECK_FUNCS([getopt_long],,[AC_CHECK_LIB([gnugetopt], [getopt_long],",
          "39:   [AC_DEFINE([HAVE_GETOPT_LONG])],[AC_LIBOBJ(getopt) AC_LIBOBJ(getopt1)])])",
          "40: AC_REPLACE_FNMATCH",
          "",
          "[Removed Lines]",
          "37: AC_CHECK_FUNCS([memcpy memmove strcasecmp strchr towlower umask utime utimes])",
          "",
          "[Added Lines]",
          "32: AC_CHECK_FUNCS([towlower umask utime utimes])",
          "",
          "---------------"
        ],
        "cabextract/getopt.c||cabextract/getopt.c": [
          "File: cabextract/getopt.c -> cabextract/getopt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "199: # include <string.h>",
          "200: # define my_index strchr",
          "204: #  include <string.h>",
          "205: # endif",
          "206: # if HAVE_STRINGS_H",
          "",
          "[Removed Lines]",
          "201: #else",
          "203: # if HAVE_STRING_H",
          "",
          "[Added Lines]",
          "201: #else",
          "",
          "---------------"
        ],
        "cabextract/md5.c||cabextract/md5.c": [
          "File: cabextract/md5.c -> cabextract/md5.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #endif",
          "27: #include <sys/types.h>",
          "35: # endif",
          "36: #endif",
          "40: #ifdef WORDS_BIGENDIAN",
          "41: # define SWAP(n)       \\",
          "42:     (((n) << 24) | (((n) & 0xff00) << 8) | (((n) >> 8) & 0xff00) | ((n) >> 24))",
          "",
          "[Removed Lines]",
          "29: #if STDC_HEADERS",
          "30: # include <stdlib.h>",
          "31: # include <string.h>",
          "32: #else",
          "33: # ifndef HAVE_MEMCPY",
          "34: #  define memcpy(d, s, n) bcopy ((s), (d), (n))",
          "38: #include <md5.h>",
          "",
          "[Added Lines]",
          "28: #include <stdlib.h>",
          "29: #include <string.h>",
          "31: #include <md5.h>",
          "33: #ifdef _LIBC",
          "34: # include <endian.h>",
          "35: # if __BYTE_ORDER == __BIG_ENDIAN",
          "36: #  define WORDS_BIGENDIAN 1",
          "40: # define md5_init_ctx __md5_init_ctx",
          "41: # define md5_process_block __md5_process_block",
          "42: # define md5_process_bytes __md5_process_bytes",
          "43: # define md5_finish_ctx __md5_finish_ctx",
          "44: # define md5_read_ctx __md5_read_ctx",
          "45: # define md5_stream __md5_stream",
          "46: # define md5_buffer __md5_buffer",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47: #define BLOCKSIZE 4096",
          "49: #if BLOCKSIZE % 64 != 0",
          "51: #endif",
          "",
          "[Removed Lines]",
          "50: #error \"invalid BLOCKSIZE\"",
          "",
          "[Added Lines]",
          "60: \"invalid BLOCKSIZE\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60: void",
          "63: {",
          "64:   ctx->A = 0x67452301;",
          "65:   ctx->B = 0xefcdab89;",
          "",
          "[Removed Lines]",
          "61: md5_init_ctx (ctx)",
          "62:      struct md5_ctx *ctx;",
          "",
          "[Added Lines]",
          "71: md5_init_ctx (struct md5_ctx *ctx)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "76:    IMPORTANT: On some systems it is required that RESBUF is correctly",
          "78: void *",
          "82: {",
          "83:   ((md5_uint32 *) resbuf)[0] = SWAP (ctx->A);",
          "84:   ((md5_uint32 *) resbuf)[1] = SWAP (ctx->B);",
          "",
          "[Removed Lines]",
          "79: md5_read_ctx (ctx, resbuf)",
          "80:      const struct md5_ctx *ctx;",
          "81:      void *resbuf;",
          "",
          "[Added Lines]",
          "88: md5_read_ctx (const struct md5_ctx *ctx, void *resbuf)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "94:    IMPORTANT: On some systems it is required that RESBUF is correctly",
          "96: void *",
          "100: {",
          "102:   md5_uint32 bytes = ctx->buflen;",
          "",
          "[Removed Lines]",
          "97: md5_finish_ctx (ctx, resbuf)",
          "98:      struct md5_ctx *ctx;",
          "99:      void *resbuf;",
          "",
          "[Added Lines]",
          "104: md5_finish_ctx (struct md5_ctx *ctx, void *resbuf)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "121:   return md5_read_ctx (ctx, resbuf);",
          "122: }",
          "124: void",
          "129: {",
          "",
          "[Removed Lines]",
          "125: md5_process_bytes (buffer, len, ctx)",
          "126:      const void *buffer;",
          "127:      size_t len;",
          "128:      struct md5_ctx *ctx;",
          "",
          "[Added Lines]",
          "130:    resulting message digest number will be written into the 16 bytes",
          "132: int",
          "133: md5_stream (FILE *stream, void *resblock)",
          "134: {",
          "135:   struct md5_ctx ctx;",
          "136:   char buffer[BLOCKSIZE + 72];",
          "137:   size_t sum;",
          "140:   md5_init_ctx (&ctx);",
          "143:   while (1)",
          "144:     {",
          "146:   computation function processes the whole buffer so that with the",
          "148:       size_t n;",
          "149:       sum = 0;",
          "152:       while (1)",
          "153:  {",
          "154:    n = fread (buffer + sum, 1, BLOCKSIZE - sum, stream);",
          "156:    sum += n;",
          "158:    if (sum == BLOCKSIZE)",
          "159:      break;",
          "161:    if (n == 0)",
          "162:      {",
          "164:    exit the loop after a partial read due to e.g., EAGAIN",
          "166:        if (ferror (stream))",
          "167:   return 1;",
          "168:        goto process_partial_block;",
          "169:      }",
          "172:       check for EOF, since feof may be true even though N > 0.",
          "174:    if (feof (stream))",
          "175:      goto process_partial_block;",
          "176:  }",
          "179:    BLOCKSIZE % 64 == 0",
          "181:       md5_process_block (buffer, BLOCKSIZE, &ctx);",
          "182:     }",
          "184:  process_partial_block:;",
          "187:   if (sum > 0)",
          "188:     md5_process_bytes (buffer, sum, &ctx);",
          "191:   md5_finish_ctx (&ctx, resblock);",
          "192:   return 0;",
          "193: }",
          "196:    result is always in little endian byte order, so that a byte-wise",
          "197:    output yields to the wanted ASCII representation of the message",
          "199: void *",
          "200: md5_buffer (const char *buffer, size_t len, void *resblock)",
          "201: {",
          "202:   struct md5_ctx ctx;",
          "205:   md5_init_ctx (&ctx);",
          "208:   md5_process_bytes (buffer, len, &ctx);",
          "211:   return md5_finish_ctx (&ctx, resblock);",
          "212: }",
          "216: md5_process_bytes ( const void *buffer, size_t len, struct md5_ctx *ctx)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "212: void",
          "217: {",
          "218:   md5_uint32 correct_words[16];",
          "220:   size_t nwords = len / sizeof (md5_uint32);",
          "221:   const md5_uint32 *endp = words + nwords;",
          "222:   md5_uint32 A = ctx->A;",
          "",
          "[Removed Lines]",
          "213: md5_process_block (buffer, len, ctx)",
          "214:      const void *buffer;",
          "215:      size_t len;",
          "216:      struct md5_ctx *ctx;",
          "219:   const md5_uint32 *words = buffer;",
          "",
          "[Added Lines]",
          "301: md5_process_block (const void *buffer, size_t len, struct md5_ctx *ctx)",
          "304:   const md5_uint32 *words = (const md5_uint32 *) buffer;",
          "",
          "---------------"
        ],
        "cabextract/md5.h||cabextract/md5.h": [
          "File: cabextract/md5.h -> cabextract/md5.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #define _MD5_H 1",
          "24: #include <stdio.h>",
          "31:    to determine an unsigned integral type that is 32 bits wide.  An",
          "",
          "[Removed Lines]",
          "26: #if defined HAVE_LIMITS_H || _LIBC",
          "27: # include <limits.h>",
          "28: #endif",
          "",
          "[Added Lines]",
          "25: #include <limits.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:    the resulting executable.  Locally running cross-compiled executables",
          "39: typedef uint32_t md5_uint32;",
          "40: typedef uintptr_t md5_uintptr;",
          "41: #else",
          "",
          "[Removed Lines]",
          "37: #ifdef _LIBC",
          "38: # include <stdint.h>",
          "",
          "[Added Lines]",
          "34: #if HAVE_INTTYPES_H || HAVE_STDINT_H",
          "35: # if HAVE_INTTYPES_H",
          "36: #  include <inttypes.h>",
          "37: # else",
          "38: #  include <stdint.h>",
          "39: # endif",
          "",
          "---------------"
        ],
        "cabextract/src/cabextract.c||cabextract/src/cabextract.c": [
          "File: cabextract/src/cabextract.c -> cabextract/src/cabextract.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: # include <config.h>",
          "27: #endif",
          "49: #endif",
          "51: #if HAVE_ICONV",
          "52: # include <iconv.h>",
          "53: #endif",
          "77: #endif",
          "81: #endif",
          "84: # include <sys/time.h>",
          "131: #endif",
          "133: #if HAVE_MKDIR",
          "134: # if MKDIR_TAKES_ONE_ARG",
          "135: #  define mkdir(a, b) mkdir(a)",
          "",
          "[Removed Lines]",
          "31: #if HAVE_SYS_TYPES_H",
          "32: # include <sys/types.h>",
          "33: #endif",
          "35: #if HAVE_CTYPE_H",
          "36: # include <ctype.h>",
          "37: #endif",
          "39: #if HAVE_WCTYPE_H",
          "40: # include <wctype.h>",
          "41: #endif",
          "43: #if HAVE_ERRNO_H",
          "44: # include <errno.h>",
          "45: #endif",
          "47: #if HAVE_FNMATCH_H",
          "48: # include <fnmatch.h>",
          "55: #if HAVE_LIMITS_H",
          "56: # include <limits.h>",
          "57: #endif",
          "59: #if HAVE_LOCALE_H",
          "60: # include <locale.h>",
          "61: #endif",
          "63: #if HAVE_STDARG_H",
          "64: # include <stdarg.h>",
          "65: #endif",
          "67: #if HAVE_STDLIB_H",
          "68: # include <stdlib.h>",
          "69: #endif",
          "71: #if HAVE_STRING_H",
          "72: # include <string.h>",
          "73: #endif",
          "75: #if HAVE_STRINGS_H",
          "76: # include <strings.h>",
          "79: #if HAVE_SYS_STAT_H",
          "80: # include <sys/stat.h>",
          "83: #if TIME_WITH_SYS_TIME",
          "85: # include <time.h>",
          "86: #else",
          "87: # if HAVE_SYS_TIME_H",
          "88: #  include <sys/time.h>",
          "89: # else",
          "90: #  include <time.h>",
          "91: # endif",
          "92: #endif",
          "94: #if HAVE_UTIME || HAVE_UTIMES",
          "95: # if HAVE_UTIME_H",
          "96: #  include <utime.h>",
          "97: # else",
          "98: #  include <sys/utime.h>",
          "99: # endif",
          "100: #endif",
          "102: #if HAVE_DIRENT_H",
          "103: # include <dirent.h>",
          "104: #else",
          "105: # define dirent direct",
          "106: # if HAVE_SYS_NDIR_H",
          "107: #  include <sys/ndir.h>",
          "108: # endif",
          "109: # if HAVE_SYS_DIR_H",
          "110: #  include <sys/dir.h>",
          "111: # endif",
          "112: # if HAVE_NDIR_H",
          "113: #  include <ndir.h>",
          "114: # endif",
          "115: #endif",
          "117: #if !STDC_HEADERS",
          "118: # if !HAVE_STRCHR",
          "119: #  define strchr index",
          "120: #  define strrchr rindex",
          "121: # endif",
          "122: # if !HAVE_STRCASECMP",
          "123: #  define strcasecmp strcmpi",
          "124: # endif",
          "125: # if !HAVE_MEMCPY",
          "126: #  define memcpy(d,s,n) bcopy((s),(d),(n))",
          "127: # endif",
          "128: # if !HAVE_MEMMOVE",
          "129: #  define memmove(d,s,n) bcopy((s),(d),(n))",
          "130: # endif",
          "",
          "[Added Lines]",
          "29: #include <sys/types.h>",
          "31: #include <ctype.h>",
          "32: #include <dirent.h>",
          "33: #include <errno.h>",
          "34: #include <fnmatch.h>",
          "35: #include <limits.h>",
          "36: #include <locale.h>",
          "37: #include <stdarg.h>",
          "38: #include <stdio.h>",
          "39: #include <stdlib.h>",
          "40: #include <string.h>",
          "41: #ifdef HAVE_STRINGS_H",
          "44: #include <sys/stat.h>",
          "45: #include <time.h>",
          "50: #if HAVE_TOWLOWER",
          "51: # include <wctype.h>",
          "53: #if HAVE_UTIME",
          "54: # include <utime.h>",
          "56: #if HAVE_UTIMES",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "275: int main(int argc, char *argv[]) {",
          "276:   int i, err;",
          "",
          "[Removed Lines]",
          "278: #if HAVE_LOCALE_H",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "290:    for (i = 0; i < (sizeof(locales)/sizeof(*locales)); i++) {",
          "291:       if (setlocale(LC_CTYPE, locales[i])) break;",
          "292:    }",
          "296:   while ((i = getopt_long(argc, argv, OPTSTRING, optlist, NULL)) != -1) {",
          "",
          "[Removed Lines]",
          "293: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cabextract/src/cabinfo.c||cabextract/src/cabinfo.c": [
          "File: cabextract/src/cabinfo.c -> cabextract/src/cabinfo.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: # include <config.h>",
          "21: #endif",
          "22: #include <stdio.h>",
          "37: #include <mspack/system.h>",
          "",
          "[Removed Lines]",
          "23: #if HAVE_SYS_TYPES_H",
          "24: # include <sys/types.h>",
          "25: #endif",
          "26: #if HAVE_STDLIB_H",
          "27: # include <stdlib.h>",
          "28: #endif",
          "29: #if HAVE_STRING_H",
          "30: # include <string.h>",
          "31: #endif",
          "32: #if HAVE_STRINGS_H",
          "33: # include <strings.h>",
          "34: #endif",
          "",
          "[Added Lines]",
          "23: #include <stdlib.h>",
          "24: #include <string.h>",
          "25: #include <sys/types.h>",
          "",
          "---------------"
        ],
        "libmspack/configure.ac||libmspack/configure.ac": [
          "File: libmspack/configure.ac -> libmspack/configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: AC_EXEEXT",
          "32: # Checks for header files.",
          "36: # Checks for typedefs, structures, and compiler characteristics.",
          "37: AC_C_CONST",
          "",
          "[Removed Lines]",
          "33: AC_HEADER_STDC",
          "34: AC_CHECK_HEADERS([ctype.h inttypes.h limits.h stdlib.h wctype.h])",
          "",
          "[Added Lines]",
          "33: AC_CHECK_HEADERS([inttypes.h])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: AC_TYPE_MODE_T",
          "40: AC_TYPE_OFF_T",
          "41: AC_TYPE_SIZE_T",
          "44: # Checks for library functions",
          "45: AX_FUNC_MKDIR",
          "48: # largefile support",
          "49: AC_SYS_LARGEFILE",
          "",
          "[Removed Lines]",
          "42: AC_CHECK_SIZEOF([off_t])",
          "46: AC_CHECK_FUNCS([tolower towlower])",
          "",
          "[Added Lines]",
          "44: AC_CHECK_FUNCS([towlower])",
          "",
          "---------------"
        ],
        "libmspack/mspack/chmd.c||libmspack/mspack/chmd.c": [
          "File: libmspack/mspack/chmd.c -> libmspack/mspack/chmd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "292:   }",
          "296:     D((\"incorrect GUIDs\"))",
          "297:     return MSPACK_ERR_SIGNATURE;",
          "298:   }",
          "",
          "[Removed Lines]",
          "295:   if (mspack_memcmp(&buf[chmhead_GUID1], &guids[0], 32L) != 0) {",
          "",
          "[Added Lines]",
          "295:   if (memcmp(&buf[chmhead_GUID1], &guids[0], 32L) != 0) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "484:       if (name[0] == ':' && name[1] == ':') {",
          "488:      chm->sec1.content = fi;",
          "489:    }",
          "491:      chm->sec1.control = fi;",
          "492:    }",
          "494:      chm->sec1.spaninfo = fi;",
          "495:    }",
          "497:      chm->sec1.rtable = fi;",
          "498:    }",
          "499:  }",
          "",
          "[Removed Lines]",
          "486:  if (mspack_memcmp(&name[2], &content_name[2], 31L) == 0) {",
          "487:    if (mspack_memcmp(&name[33], &content_name[33], 8L) == 0) {",
          "490:    else if (mspack_memcmp(&name[33], &control_name[33], 11L) == 0) {",
          "493:    else if (mspack_memcmp(&name[33], &spaninfo_name[33], 8L) == 0) {",
          "496:    else if (mspack_memcmp(&name[33], &rtable_name[33], 72L) == 0) {",
          "",
          "[Added Lines]",
          "486:  if (memcmp(&name[2], &content_name[2], 31L) == 0) {",
          "487:    if (memcmp(&name[33], &content_name[33], 8L) == 0) {",
          "490:    else if (memcmp(&name[33], &control_name[33], 11L) == 0) {",
          "493:    else if (memcmp(&name[33], &spaninfo_name[33], 8L) == 0) {",
          "496:    else if (memcmp(&name[33], &rtable_name[33], 72L) == 0) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "827: }",
          "829: #if HAVE_TOWLOWER",
          "833: # define TOLOWER(x) towlower(x)",
          "839: #else",
          "859: #endif",
          "",
          "[Removed Lines]",
          "830: # if HAVE_WCTYPE_H",
          "831: #  include <wctype.h>",
          "832: # endif",
          "834: #elif HAVE_TOLOWER",
          "835: # if HAVE_CTYPE_H",
          "836: #  include <ctype.h>",
          "837: # endif",
          "838: # define TOLOWER(x) tolower(x)",
          "840: # define TOLOWER(x) (((x)<0||(x)>255)?(x):mspack_tolower_map[(x)])",
          "844: static const unsigned char mspack_tolower_map[256] = {",
          "845:     0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,",
          "846:     28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,",
          "847:     53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,104,105,106,",
          "848:     107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,",
          "849:     95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,",
          "850:     115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,",
          "851:     134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,",
          "852:     153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,",
          "853:     172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,",
          "854:     191,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,",
          "855:     242,243,244,245,246,215,248,249,250,251,252,253,254,223,224,225,226,227,228,",
          "856:     229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,",
          "857:     248,249,250,251,252,253,254,255",
          "858: };",
          "",
          "[Added Lines]",
          "830: # include <wctype.h>",
          "833: # include <ctype.h>",
          "834: # define TOLOWER(x) tolower(x)",
          "",
          "---------------"
        ],
        "libmspack/mspack/system.h||libmspack/mspack/system.h": [
          "File: libmspack/mspack/system.h -> libmspack/mspack/system.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include <mspack.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: #include <string.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: #if HAVE_INTTYPES_H",
          "62: # include <inttypes.h>",
          "63: #else",
          "",
          "[Removed Lines]",
          "57: #if HAVE_LIMITS_H",
          "58: # include <limits.h>",
          "59: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "67: # define PRIu32 \"lu\"",
          "68: #endif",
          "70: #if ((defined(_FILE_OFFSET_BITS) && _FILE_OFFSET_BITS >= 64) || \\",
          "71:      (defined(FILESIZEBITS)      && FILESIZEBITS      >= 64) || \\",
          "73:      defined(_LARGEFILE_SOURCE) || defined(_LARGEFILE64_SOURCE))",
          "74: # define LARGEFILE_SUPPORT 1",
          "75: # define LD PRId64",
          "",
          "[Removed Lines]",
          "72:      (defined(SIZEOF_OFF_T)      && SIZEOF_OFF_T      >= 8)  || \\",
          "",
          "[Added Lines]",
          "69: #include <limits.h>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "107: extern int mspack_valid_system(struct mspack_system *sys);",
          "130: #ifdef __cplusplus",
          "131: }",
          "132: #endif",
          "",
          "[Removed Lines]",
          "109: #if HAVE_STRINGS_H",
          "110: # include <strings.h>",
          "111: #endif",
          "113: #if HAVE_STRING_H",
          "114: # include <string.h>",
          "115: #endif",
          "117: #if HAVE_MEMCMP",
          "118: # define mspack_memcmp memcmp",
          "119: #else",
          "121: static inline int mspack_memcmp(const void *s1, const void *s2, size_t n) {",
          "122:   unsigned char *c1 = (unsigned char *) s1;",
          "123:   unsigned char *c2 = (unsigned char *) s2;",
          "124:   if (n == 0) return 0;",
          "125:   while (--n && (*c1 == *c2)) c1++, c2++;",
          "126:   return *c1 - *c2;",
          "127: }",
          "128: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libmspack/mspack/szddd.c||libmspack/mspack/szddd.c": [
          "File: libmspack/mspack/szddd.c -> libmspack/mspack/szddd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:     if (sys->read(fh, buf, 8) != 8) return MSPACK_ERR_READ;",
          "155:  hdr->format = MSSZDD_FMT_NORMAL;",
          "",
          "[Removed Lines]",
          "153:     if ((mspack_memcmp(buf, szdd_signature_expand, 8) == 0)) {",
          "",
          "[Added Lines]",
          "153:     if ((memcmp(buf, szdd_signature_expand, 8) == 0)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:  hdr->missing_char = buf[1];",
          "161:  hdr->length = EndGetI32(&buf[2]);",
          "162:     }",
          "165:  hdr->format = MSSZDD_FMT_QBASIC;",
          "166:  if (sys->read(fh, buf, 4) != 4) return MSPACK_ERR_READ;",
          "",
          "[Removed Lines]",
          "163:     else if ((mspack_memcmp(buf, szdd_signature_qbasic, 8) == 0)) {",
          "",
          "[Added Lines]",
          "163:     else if ((memcmp(buf, szdd_signature_qbasic, 8) == 0)) {",
          "",
          "---------------"
        ],
        "libmspack/src/chmextract.c||libmspack/src/chmextract.c": [
          "File: libmspack/src/chmextract.c -> libmspack/src/chmextract.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: #include <stdlib.h>",
          "7: #include <string.h>",
          "8: #include <mspack.h>",
          "10: #include <sys/stat.h>",
          "12: #include <error.h>",
          "",
          "[Removed Lines]",
          "9: #include <ctype.h>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "libmspack/test/md5.c||libmspack/test/md5.c": [
          "File: libmspack/test/md5.c -> libmspack/test/md5.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #endif",
          "27: #include <sys/types.h>",
          "38: #include <md5.h>",
          "",
          "[Removed Lines]",
          "29: #if STDC_HEADERS || defined _LIBC",
          "30: # include <stdlib.h>",
          "31: # include <string.h>",
          "32: #else",
          "33: # ifndef HAVE_MEMCPY",
          "34: #  define memcpy(d, s, n) bcopy ((s), (d), (n))",
          "35: # endif",
          "36: #endif",
          "",
          "[Added Lines]",
          "28: #include <stdlib.h>",
          "29: #include <string.h>",
          "",
          "---------------"
        ],
        "libmspack/test/md5.h||libmspack/test/md5.h": [
          "File: libmspack/test/md5.h -> libmspack/test/md5.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #define _MD5_H 1",
          "24: #include <stdio.h>",
          "31:    to determine an unsigned integral type that is 32 bits wide.  An",
          "",
          "[Removed Lines]",
          "26: #if defined HAVE_LIMITS_H || _LIBC",
          "27: # include <limits.h>",
          "28: #endif",
          "",
          "[Added Lines]",
          "25: #include <limits.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:    the resulting executable.  Locally running cross-compiled executables",
          "39: typedef uint32_t md5_uint32;",
          "40: typedef uintptr_t md5_uintptr;",
          "41: #else",
          "",
          "[Removed Lines]",
          "37: #ifdef _LIBC",
          "38: # include <stdint.h>",
          "",
          "[Added Lines]",
          "34: #if HAVE_INTTYPES_H || HAVE_STDINT_H",
          "35: # if HAVE_INTTYPES_H",
          "36: #  include <inttypes.h>",
          "37: # else",
          "38: #  include <stdint.h>",
          "39: # endif",
          "",
          "---------------"
        ],
        "libmspack/winbuild.sh||libmspack/winbuild.sh": [
          "File: libmspack/winbuild.sh -> libmspack/winbuild.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: cat >config.h <<END",
          "12: #define inline __inline",
          "16: END",
          "18: cd mspack",
          "",
          "[Removed Lines]",
          "13: #define HAVE_STRING_H 1",
          "14: #define HAVE_LIMITS_H 1",
          "15: #define HAVE_MEMCMP 1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}