{
  "cve_id": "CVE-2017-11664",
  "cve_desc": "The _WM_SetupMidiEvent function in internal_midi.c:2122 in WildMIDI 0.4.2 can cause a denial of service (invalid memory read and application crash) via a crafted mid file.",
  "repo": "Mindwerks/wildmidi",
  "patch_hash": "ad6d7cf88d6673167ca1f517248af9409a9f1be1",
  "patch_info": {
    "commit_hash": "ad6d7cf88d6673167ca1f517248af9409a9f1be1",
    "repo": "Mindwerks/wildmidi",
    "commit_url": "https://github.com/Mindwerks/wildmidi/commit/ad6d7cf88d6673167ca1f517248af9409a9f1be1",
    "files": [
      "include/internal_midi.h",
      "src/f_hmi.c",
      "src/f_hmp.c",
      "src/f_midi.c",
      "src/f_mus.c",
      "src/f_xmidi.c",
      "src/internal_midi.c"
    ],
    "message": "Fix bug #175:\n\nCVE-2017-11661, CVE-2017-11662, CVE-2017-11663, CVE-2017-11664:\nAdd a new size parameter to _WM_SetupMidiEvent() so that it\nknows where to stop reading, and adjust its clients properly.",
    "before_after_code_files": [
      "include/internal_midi.h||include/internal_midi.h",
      "src/f_hmi.c||src/f_hmi.c",
      "src/f_hmp.c||src/f_hmp.c",
      "src/f_midi.c||src/f_midi.c",
      "src/f_mus.c||src/f_mus.c",
      "src/f_xmidi.c||src/f_xmidi.c",
      "src/internal_midi.c||src/internal_midi.c"
    ]
  },
  "patch_diff": {
    "include/internal_midi.h||include/internal_midi.h": [
      "File: include/internal_midi.h -> include/internal_midi.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "192: extern struct _mdi * _WM_initMDI(void);",
      "193: extern void _WM_freeMDI(struct _mdi *mdi);",
      "195: extern void _WM_ResetToStart(struct _mdi *mdi);",
      "196: extern void _WM_do_pan_adjust(struct _mdi *mdi, uint8_t ch);",
      "197: extern void _WM_do_note_off_extra(struct _note *nte);",
      "",
      "[Removed Lines]",
      "194: extern uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t running_event);",
      "",
      "[Added Lines]",
      "194: extern uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t siz, uint8_t running_event);",
      "",
      "---------------"
    ],
    "src/f_hmi.c||src/f_hmi.c": [
      "File: src/f_hmi.c -> src/f_hmi.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "42: _WM_ParseNewHmi(uint8_t *hmi_data, uint32_t hmi_size) {",
      "43:     uint32_t hmi_tmp = 0;",
      "44:     uint8_t *hmi_base = hmi_data;",
      "45:     uint16_t hmi_bpm = 0;",
      "46:     uint16_t hmi_division = 0;",
      "49:     uint32_t hmi_track_cnt = 0;",
      "50:     uint32_t *hmi_track_offset = NULL;",
      "51:     uint32_t i = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "45:     uint32_t data_siz;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "74:         uint8_t channel;",
      "75:     } *note;",
      "80:     if (memcmp(hmi_data, \"HMI-MIDISONG061595\", 18)) {",
      "81:         _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, NULL, 0);",
      "",
      "[Removed Lines]",
      "78:     UNUSED(hmi_size);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "216:             do {",
      "217:                 hmi_data = hmi_base + hmi_track_offset[i];",
      "218:                 hmi_delta[i] = 0;",
      "220:                 if (hmi_data[0] == 0xfe) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "217:                 if (hmi_track_offset[i] >= hmi_size) {",
      "218:                     _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, \"file too short\", 0);",
      "219:                     goto _hmi_end;",
      "220:                 }",
      "221:                 data_siz = hmi_size - hmi_track_offset[i];",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "223:                         hmi_tmp = (hmi_data[4] + 5);",
      "224:                         hmi_data += hmi_tmp;",
      "225:                         hmi_track_offset[i] += hmi_tmp;",
      "226:                     } else if (hmi_data[1] == 0x15) {",
      "227:                         hmi_data += 4;",
      "228:                         hmi_track_offset[i] += 4;",
      "229:                     }",
      "230:                     hmi_data += 4;",
      "231:                     hmi_track_offset[i] += 4;",
      "232:                 } else {",
      "234:                         goto _hmi_end;",
      "235:                     }",
      "236:                     if ((hmi_data[0] == 0xff) && (hmi_data[1] == 0x2f) && (hmi_data[2] == 0x00)) {",
      "",
      "[Removed Lines]",
      "233:                     if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,hmi_running_event[i])) == 0) {",
      "",
      "[Added Lines]",
      "229:                         hmi_tmp += 4;",
      "233:                         hmi_tmp = 8;",
      "234:                     } else {",
      "235:                         hmi_tmp = 4;",
      "239:                     if (hmi_tmp > data_siz) {",
      "240:                         _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, \"file too short\", 0);",
      "241:                         goto _hmi_end;",
      "242:                     }",
      "243:                     data_siz -= hmi_tmp;",
      "245:                     if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,data_siz,hmi_running_event[i])) == 0) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "270:                         hmi_data += setup_ret;",
      "271:                         hmi_track_offset[i] += setup_ret;",
      "273:                         note[hmi_tmp].length = 0;",
      "275:                             do {",
      "276:                                 note[hmi_tmp].length = (note[hmi_tmp].length << 7) | (*hmi_data & 0x7F);",
      "277:                                 hmi_data++;",
      "278:                                 hmi_track_offset[i]++;",
      "279:                             } while (*hmi_data > 0x7F);",
      "280:                         }",
      "281:                         note[hmi_tmp].length = (note[hmi_tmp].length << 7) | (*hmi_data & 0x7F);",
      "282:                         hmi_data++;",
      "283:                         hmi_track_offset[i]++;",
      "285:                         if (note[hmi_tmp].length) {",
      "",
      "[Removed Lines]",
      "274:                         if (*hmi_data > 0x7f) {",
      "",
      "[Added Lines]",
      "284:                         data_siz -= setup_ret;",
      "287:                         if (data_siz && *hmi_data > 0x7f) {",
      "289:                                 if (!data_siz) break;",
      "292:                                 data_siz--;",
      "296:                         if (!data_siz) {",
      "297:                             _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, \"file too short\", 0);",
      "298:                             goto _hmi_end;",
      "299:                         }",
      "302:                         data_siz--;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "293:                     } else {",
      "294:                         hmi_data += setup_ret;",
      "295:                         hmi_track_offset[i] += setup_ret;",
      "296:                     }",
      "297:                 }",
      "302:                     do {",
      "303:                         hmi_delta[i] = (hmi_delta[i] << 7) | (*hmi_data & 0x7F);",
      "304:                         hmi_data++;",
      "305:                         hmi_track_offset[i]++;",
      "306:                     } while (*hmi_data > 0x7F);",
      "307:                 }",
      "308:                 hmi_delta[i] = (hmi_delta[i] << 7) | (*hmi_data & 0x7F);",
      "309:                 hmi_data++;",
      "310:                 hmi_track_offset[i]++;",
      "311:             } while (!hmi_delta[i]);",
      "312:             if ((!smallest_delta) || (smallest_delta > hmi_delta[i])) {",
      "",
      "[Removed Lines]",
      "301:                 if (*hmi_data > 0x7f) {",
      "",
      "[Added Lines]",
      "316:                         data_siz -= setup_ret;",
      "322:                 if (data_siz && *hmi_data > 0x7f) {",
      "324:                         if (!data_siz) break;",
      "327:                         data_siz--;",
      "331:                 if (!data_siz) {",
      "332:                     _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, \"file too short\", 0);",
      "333:                     goto _hmi_end;",
      "334:                 }",
      "337:                 data_siz--;",
      "",
      "---------------"
    ],
    "src/f_hmp.c||src/f_hmp.c": [
      "File: src/f_hmp.c -> src/f_hmp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "237:         hmp_data = hmp_chunk[i] + chunk_length[i];",
      "238:         hmp_chunk[i] += chunk_ofs[i]++;",
      "239:         chunk_end[i] = 0;",
      "240:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "238:         chunk_length[i] -= chunk_ofs[i];",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "275:                     hmp_chunk[i] += 3;",
      "276:                 } else {",
      "277:                     uint32_t setup_ret = 0;",
      "280:                         goto _hmp_end;",
      "281:                     }",
      "",
      "[Removed Lines]",
      "279:                     if ((setup_ret = _WM_SetupMidiEvent(hmp_mdi, hmp_chunk[i], 0)) == 0) {",
      "",
      "[Added Lines]",
      "277:                     chunk_length[i] -= 3;",
      "281:                     if ((setup_ret = _WM_SetupMidiEvent(hmp_mdi, hmp_chunk[i], chunk_length[i], 0)) == 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "285:                         end_of_chunks++;",
      "286:                         chunk_end[i] = 1;",
      "287:                         hmp_chunk[i] += 3;",
      "288:                         goto NEXT_CHUNK;",
      "289:                     } else if ((hmp_chunk[i][0] == 0xff) && (hmp_chunk[i][1] == 0x51) && (hmp_chunk[i][2] == 0x03)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "289:                         chunk_length[i] -= 3;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "296:                         fprintf(stderr,\"DEBUG: Tempo change %f\\r\\n\", tempo_f);",
      "297:                     }",
      "298:                     hmp_chunk[i] += setup_ret;",
      "299:                 }",
      "300:                 var_len_shift = 0;",
      "301:                 chunk_delta[i] = 0;",
      "303:                     do {",
      "304:                         chunk_delta[i] = chunk_delta[i] + ((*hmp_chunk[i] & 0x7F) << var_len_shift);",
      "305:                         var_len_shift += 7;",
      "306:                         hmp_chunk[i]++;",
      "307:                     } while (*hmp_chunk[i] < 0x80);",
      "308:                 }",
      "309:                 chunk_delta[i] = chunk_delta[i] + ((*hmp_chunk[i] & 0x7F) << var_len_shift);",
      "310:                 hmp_chunk[i]++;",
      "311:             } while (!chunk_delta[i]);",
      "313:             if ((!smallest_delta) || (smallest_delta > chunk_delta[i])) {",
      "",
      "[Removed Lines]",
      "302:                 if (*hmp_chunk[i] < 0x80) {",
      "",
      "[Added Lines]",
      "302:                     chunk_length[i] -= setup_ret;",
      "306:                 if (chunk_length[i] && *hmp_chunk[i] < 0x80) {",
      "308:                         if (! chunk_length[i]) break;",
      "312:                         chunk_length[i]--;",
      "315:                 if (! chunk_length[i]) {",
      "316:                     _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMP, \"file too short\", 0);",
      "317:                     goto _hmp_end;",
      "318:                 }",
      "321:                 chunk_length[i]--;",
      "",
      "---------------"
    ],
    "src/f_midi.c||src/f_midi.c": [
      "File: src/f_midi.c -> src/f_midi.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:     uint32_t tmp_val;",
      "45:     uint32_t midi_type;",
      "47:     uint8_t **tracks;",
      "48:     uint32_t end_of_tracks = 0;",
      "49:     uint32_t no_tracks;",
      "50:     uint32_t i;",
      "",
      "[Removed Lines]",
      "46:     uint32_t track_size;",
      "",
      "[Added Lines]",
      "47:     uint32_t *track_size;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "151:     _WM_midi_setup_divisions(mdi,divisions);",
      "153:     tracks = malloc(sizeof(uint8_t *) * no_tracks);",
      "154:     track_delta = malloc(sizeof(uint32_t) * no_tracks);",
      "155:     track_end = malloc(sizeof(uint8_t) * no_tracks);",
      "156:     running_event = malloc(sizeof(uint8_t) * no_tracks);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "150:     track_size = malloc(sizeof(uint32_t) * no_tracks);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "168:         midi_data += 4;",
      "169:         midi_size -= 4;",
      "175:         midi_size -= 4;",
      "177:             _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(too short)\", 0);",
      "178:             goto _end;",
      "179:         }",
      "181:             _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(bad track size)\", 0);",
      "182:             goto _end;",
      "183:         }",
      "187:             _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(missing EOT)\", 0);",
      "188:             goto _end;",
      "189:         }",
      "190:         tracks[i] = midi_data;",
      "193:         track_end[i] = 0;",
      "194:         running_event[i] = 0;",
      "195:         track_delta[i] = 0;",
      "",
      "[Removed Lines]",
      "171:         track_size = *midi_data++ << 24;",
      "172:         track_size |= *midi_data++ << 16;",
      "173:         track_size |= *midi_data++ << 8;",
      "174:         track_size |= *midi_data++;",
      "176:         if (midi_size < track_size) {",
      "180:         if (track_size < 3) {",
      "184:         if ((midi_data[track_size - 3] != 0xFF)",
      "185:                 || (midi_data[track_size - 2] != 0x2F)",
      "186:                 || (midi_data[track_size - 1] != 0x00)) {",
      "191:         midi_data += track_size;",
      "192:         midi_size -= track_size;",
      "",
      "[Added Lines]",
      "169:         tmp_val = *midi_data++ << 24;",
      "170:         tmp_val |= *midi_data++ << 16;",
      "171:         tmp_val |= *midi_data++ << 8;",
      "172:         tmp_val |= *midi_data++;",
      "174:         if (midi_size < tmp_val) {",
      "178:         if (tmp_val < 3) {",
      "182:         if ((midi_data[tmp_val - 3] != 0xFF)",
      "183:                 || (midi_data[tmp_val - 2] != 0x2F)",
      "184:                 || (midi_data[tmp_val - 1] != 0x00)) {",
      "189:         track_size[i] = tmp_val;",
      "190:         midi_data += tmp_val;",
      "191:         midi_size -= tmp_val;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "197:         while (*tracks[i] > 0x7F) {",
      "198:             track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);",
      "199:             tracks[i]++;",
      "200:         }",
      "201:         track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);",
      "202:         tracks[i]++;",
      "204:         if (midi_type == 1 ) {",
      "205:             if (track_delta[i] < smallest_delta) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "199:             track_size[i]--;",
      "203:         track_size[i]--;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "243:                     }",
      "244:                 }",
      "245:                 do {",
      "247:                     if (setup_ret == 0) {",
      "248:                         goto _end;",
      "249:                     }",
      "",
      "[Removed Lines]",
      "246:                     setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], running_event[i]);",
      "",
      "[Added Lines]",
      "247:                     setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], track_size[i], running_event[i]);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "259:                             end_of_tracks++;",
      "260:                             track_end[i] = 1;",
      "261:                             tracks[i] += 3;",
      "262:                             goto NEXT_TRACK;",
      "263:                         } else if ((tracks[i][0] == 0xff) && (tracks[i][1] == 0x51) && (tracks[i][2] == 0x03)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "263:                             track_size[i] -= 3;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "270:                         }",
      "271:                     }",
      "272:                     tracks[i] += setup_ret;",
      "274:                     if (*tracks[i] > 0x7f) {",
      "275:                         do {",
      "276:                             track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);",
      "277:                             tracks[i]++;",
      "278:                         } while (*tracks[i] > 0x7f);",
      "279:                     }",
      "280:                     track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);",
      "281:                     tracks[i]++;",
      "282:                 } while (!track_delta[i]);",
      "283:                 if ((!smallest_delta) || (smallest_delta > track_delta[i])) {",
      "284:                     smallest_delta = track_delta[i];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "275:                     track_size[i] -= setup_ret;",
      "279:                             if (!track_size[i]) break;",
      "282:                             track_size[i]--;",
      "285:                     if (!track_size[i]) {",
      "286:                         _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(too short)\", 0);",
      "287:                         goto _end;",
      "288:                     }",
      "291:                     track_size[i]--;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "304:         for (i = 0; i < no_tracks; i++) {",
      "305:             running_event[i] = 0;",
      "306:             do {",
      "308:                 if (setup_ret == 0) {",
      "309:                     goto _end;",
      "310:                 }",
      "",
      "[Removed Lines]",
      "307:                 setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], running_event[i]);",
      "",
      "[Added Lines]",
      "317:                 setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], track_size[i], running_event[i]);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "329:                     }",
      "330:                 }",
      "331:                 tracks[i] += setup_ret;",
      "333:                 track_delta[i] = 0;",
      "334:                 if (*tracks[i] > 0x7f) {",
      "335:                     do {",
      "336:                         track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);",
      "337:                         tracks[i]++;",
      "338:                     } while (*tracks[i] > 0x7f);",
      "339:                 }",
      "340:                 track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);",
      "341:                 tracks[i]++;",
      "343:                 sample_count_f = (((float) track_delta[i] * samples_per_delta_f)",
      "344:                                   + sample_remainder);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "342:                 track_size[i] -= setup_ret;",
      "347:                         if (!track_size[i]) break;",
      "350:                         track_size[i]--;",
      "353:                 if (!track_size[i]) {",
      "354:                     _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(too short)\", 0);",
      "355:                     goto _end;",
      "356:                 }",
      "359:                 track_size[i]--;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "372:     free(track_delta);",
      "373:     free(running_event);",
      "374:     free(tracks);",
      "375:     if (mdi->reverb) return (mdi);",
      "376:     _WM_freeMDI(mdi);",
      "377:     return (NULL);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "393:     free(track_size);",
      "",
      "---------------"
    ],
    "src/f_mus.c||src/f_mus.c": [
      "File: src/f_mus.c -> src/f_mus.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "61:     float tempo_f = 0.0;",
      "62:     uint16_t mus_freq = 0;",
      "63:     float samples_per_tick_f = 0.0;",
      "65:     uint8_t mus_event_size = 0;",
      "66:     uint8_t mus_prev_vol[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };",
      "67:     uint32_t setup_ret = 0;",
      "",
      "[Removed Lines]",
      "64:     uint8_t mus_event[] = { 0, 0, 0, 0 };",
      "",
      "[Added Lines]",
      "64: #define MUS_SZ 4",
      "65:     uint8_t mus_event[MUS_SZ] = { 0, 0, 0, 0 };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "314:                 break;",
      "315:         }",
      "318:         if (setup_ret == 0) {",
      "319:             goto _mus_end;",
      "320:         }",
      "",
      "[Removed Lines]",
      "317:         setup_ret = _WM_SetupMidiEvent(mus_mdi, (uint8_t *)mus_event, 0);",
      "",
      "[Added Lines]",
      "318:         setup_ret = _WM_SetupMidiEvent(mus_mdi, (uint8_t *)mus_event, MUS_SZ, 0);",
      "",
      "---------------"
    ],
    "src/f_xmidi.c||src/f_xmidi.c": [
      "File: src/f_xmidi.c -> src/f_xmidi.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "267:                             setup_ret = 6;",
      "268:                             goto _XMI_Next_Event;",
      "269:                         }",
      "271:                             goto _xmi_end;",
      "272:                         }",
      "",
      "[Removed Lines]",
      "270:                         if ((setup_ret = _WM_SetupMidiEvent(xmi_mdi,xmi_data,0)) == 0) {",
      "",
      "[Added Lines]",
      "270:                         if ((setup_ret = _WM_SetupMidiEvent(xmi_mdi,xmi_data, xmi_size, 0)) == 0) {",
      "",
      "---------------"
    ],
    "src/internal_midi.c||src/internal_midi.c": [
      "File: src/internal_midi.c -> src/internal_midi.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1962:     free(mdi);",
      "1963: }",
      "1967:      Only add standard MIDI and Sysex events in here.",
      "1968:      Non-standard events need to be handled by calling function",
      "",
      "[Removed Lines]",
      "1965: uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t running_event) {",
      "",
      "[Added Lines]",
      "1965: uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t siz, uint8_t running_event) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1978:     uint8_t data_2 = 0;",
      "1979:     char *text = NULL;",
      "1981:     if (event_data[0] >= 0x80) {",
      "1982:         command = *event_data & 0xf0;",
      "1983:         channel = *event_data++ & 0x0f;",
      "1984:         ret_cnt++;",
      "1985:     } else {",
      "1986:         command = running_event & 0xf0;",
      "1987:         channel = running_event & 0x0f;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1981:     if (!siz) goto shortbuf;",
      "1987:         if (--siz == 0) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1990:     switch(command) {",
      "1991:         case 0x80:",
      "1992:         _SETUP_NOTEOFF:",
      "1993:             data_1 = *event_data++;",
      "1994:             data_2 = *event_data++;",
      "1995:             _WM_midi_setup_noteoff(mdi, channel, data_1, data_2);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1996:             if (siz < 2) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1997:             break;",
      "1998:         case 0x90:",
      "2000:             data_1 = *event_data++;",
      "2001:             data_2 = *event_data++;",
      "2002:             midi_setup_noteon(mdi, channel, data_1, data_2);",
      "2003:             ret_cnt += 2;",
      "2004:             break;",
      "2005:         case 0xa0:",
      "2006:             data_1 = *event_data++;",
      "2007:             data_2 = *event_data++;",
      "2008:             midi_setup_aftertouch(mdi, channel, data_1, data_2);",
      "2009:             ret_cnt += 2;",
      "2010:             break;",
      "2011:         case 0xb0:",
      "2012:             data_1 = *event_data++;",
      "2013:             data_2 = *event_data++;",
      "2014:             midi_setup_control(mdi, channel, data_1, data_2);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2004:             if (siz < 2) goto shortbuf;",
      "2011:             if (siz < 2) goto shortbuf;",
      "2018:             if (siz < 2) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2025:             ret_cnt++;",
      "2026:             break;",
      "2027:         case 0xe0:",
      "2028:             data_1 = *event_data++;",
      "2029:             data_2 = *event_data++;",
      "2030:             midi_setup_pitch(mdi, channel, ((data_2 << 7) | (data_1 & 0x7f)));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2035:             if (siz < 2) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2041:                      Sequence Number",
      "2042:                      We only setting this up here for WM_Event2Midi function",
      "2044:                     midi_setup_sequenceno(mdi, ((event_data[2] << 8) + event_data[3]));",
      "2045:                     ret_cnt += 4;",
      "2046:                 } else if (event_data[0] == 0x01) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2052:                     if (siz < 4) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2049:                     event_data++;",
      "2050:                     ret_cnt++;",
      "2052:                         do {",
      "2053:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2054:                             event_data++;",
      "2055:                             ret_cnt++;",
      "2056:                         } while (*event_data > 0x7f);",
      "2057:                     }",
      "2058:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2059:                     event_data++;",
      "2060:                     ret_cnt++;",
      "2062:                     text = malloc(tmp_length + 1);",
      "2063:                     memcpy(text, event_data, tmp_length);",
      "",
      "[Removed Lines]",
      "2051:                     if (*event_data > 0x7f) {",
      "",
      "[Added Lines]",
      "2060:                     if (--siz && *event_data > 0x7f) {",
      "2062:                             if (!siz) break;",
      "2065:                             siz--;",
      "2069:                     if (!siz) goto shortbuf;",
      "2073:                     if (--siz < tmp_length) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2072:                     event_data++;",
      "2073:                     ret_cnt++;",
      "2075:                         do {",
      "2076:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2077:                             event_data++;",
      "2078:                             ret_cnt++;",
      "2079:                         } while (*event_data > 0x7f);",
      "2080:                     }",
      "2081:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2082:                     event_data++;",
      "2083:                     ret_cnt++;",
      "2086:                     if (mdi->extra_info.copyright) {",
      "",
      "[Removed Lines]",
      "2074:                     if (*event_data > 0x7f) {",
      "",
      "[Added Lines]",
      "2088:                     if (--siz && *event_data > 0x7f) {",
      "2090:                             if (!siz) break;",
      "2093:                             siz--;",
      "2097:                     if (!siz) goto shortbuf;",
      "2101:                     if (--siz < tmp_length) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2108:                     event_data++;",
      "2109:                     ret_cnt++;",
      "2111:                         do {",
      "2112:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2113:                             event_data++;",
      "2114:                             ret_cnt++;",
      "2115:                         } while (*event_data > 0x7f);",
      "2116:                     }",
      "2117:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2118:                     event_data++;",
      "2119:                     ret_cnt++;",
      "2121:                     text = malloc(tmp_length + 1);",
      "2122:                     memcpy(text, event_data, tmp_length);",
      "",
      "[Removed Lines]",
      "2110:                     if (*event_data > 0x7f) {",
      "",
      "[Added Lines]",
      "2129:                     if (--siz && *event_data > 0x7f) {",
      "2131:                             if (!siz) break;",
      "2134:                             siz--;",
      "2138:                     if (!siz) goto shortbuf;",
      "2142:                     if (--siz < tmp_length) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2131:                     event_data++;",
      "2132:                     ret_cnt++;",
      "2134:                         do {",
      "2135:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2136:                             event_data++;",
      "2137:                             ret_cnt++;",
      "2138:                         } while (*event_data > 0x7f);",
      "2139:                     }",
      "2140:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2141:                     event_data++;",
      "2142:                     ret_cnt++;",
      "2144:                     text = malloc(tmp_length + 1);",
      "2145:                     memcpy(text, event_data, tmp_length);",
      "",
      "[Removed Lines]",
      "2133:                     if (*event_data > 0x7f) {",
      "",
      "[Added Lines]",
      "2157:                     if (--siz && *event_data > 0x7f) {",
      "2159:                             if (!siz) break;",
      "2162:                             siz--;",
      "2166:                     if (!siz) goto shortbuf;",
      "2170:                     if (--siz < tmp_length) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2154:                     event_data++;",
      "2155:                     ret_cnt++;",
      "2157:                         do {",
      "2158:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2159:                             event_data++;",
      "2160:                             ret_cnt++;",
      "2161:                         } while (*event_data > 0x7f);",
      "2162:                     }",
      "2163:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2164:                     event_data++;",
      "2165:                     ret_cnt++;",
      "2167:                     text = malloc(tmp_length + 1);",
      "2168:                     memcpy(text, event_data, tmp_length);",
      "",
      "[Removed Lines]",
      "2156:                     if (*event_data > 0x7f) {",
      "",
      "[Added Lines]",
      "2185:                     if (--siz && *event_data > 0x7f) {",
      "2187:                             if (!siz) break;",
      "2190:                             siz--;",
      "2194:                     if (!siz) goto shortbuf;",
      "2198:                     if (--siz < tmp_length) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2177:                     event_data++;",
      "2178:                     ret_cnt++;",
      "2180:                         do {",
      "2181:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2182:                             event_data++;",
      "2183:                             ret_cnt++;",
      "2184:                         } while (*event_data > 0x7f);",
      "2185:                     }",
      "2186:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2187:                     event_data++;",
      "2188:                     ret_cnt++;",
      "2190:                     text = malloc(tmp_length + 1);",
      "2191:                     memcpy(text, event_data, tmp_length);",
      "",
      "[Removed Lines]",
      "2179:                     if (*event_data > 0x7f) {",
      "",
      "[Added Lines]",
      "2213:                     if (--siz && *event_data > 0x7f) {",
      "2215:                             if (!siz) break;",
      "2218:                             siz--;",
      "2222:                     if (!siz) goto shortbuf;",
      "2226:                     if (--siz < tmp_length) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2200:                     event_data++;",
      "2201:                     ret_cnt++;",
      "2203:                         do {",
      "2204:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2205:                             event_data++;",
      "2206:                             ret_cnt++;",
      "2207:                         } while (*event_data > 0x7f);",
      "2208:                     }",
      "2209:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2210:                     event_data++;",
      "2211:                     ret_cnt++;",
      "2213:                     text = malloc(tmp_length + 1);",
      "2214:                     memcpy(text, event_data, tmp_length);",
      "",
      "[Removed Lines]",
      "2202:                     if (*event_data > 0x7f) {",
      "",
      "[Added Lines]",
      "2241:                     if (--siz && *event_data > 0x7f) {",
      "2243:                             if (!siz) break;",
      "2246:                             siz--;",
      "2250:                     if (!siz) goto shortbuf;",
      "2254:                     if (--siz < tmp_length) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "2222:                      Channel Prefix",
      "2223:                      We only setting this up here for WM_Event2Midi function",
      "2225:                     midi_setup_channelprefix(mdi, event_data[2]);",
      "2226:                     ret_cnt += 3;",
      "2227:                 } else if ((event_data[0] == 0x21) && (event_data[1] == 0x01)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2269:                     if (siz < 3) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "2229:                      Port Prefix",
      "2230:                      We only setting this up here for WM_Event2Midi function",
      "2232:                     midi_setup_portprefix(mdi, event_data[2]);",
      "2233:                     ret_cnt += 3;",
      "2234:                 } else if ((event_data[0] == 0x2F) && (event_data[1] == 0x00)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2277:                     if (siz < 3) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "2237:                      Deal with this inside calling function",
      "2238:                      We only setting this up here for _WM_Event2Midi function",
      "2240:                     _WM_midi_setup_endoftrack(mdi);",
      "2241:                     ret_cnt += 2;",
      "2242:                 } else if ((event_data[0] == 0x51) && (event_data[1] == 0x03)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2286:                     if (siz < 2) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "2245:                      Deal with this inside calling function.",
      "2246:                      We only setting this up here for _WM_Event2Midi function",
      "2248:                     _WM_midi_setup_tempo(mdi, ((event_data[2] << 16) + (event_data[3] << 8) + event_data[4]));",
      "2249:                     ret_cnt += 5;",
      "2250:                 } else if ((event_data[0] == 0x54) && (event_data[1] == 0x05)) {",
      "2252:                      SMPTE Offset",
      "2253:                      We only setting this up here for WM_Event2Midi function",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2295:                     if (siz < 5) goto shortbuf;",
      "2299:                     if (siz < 7) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "2265:                      Time Signature",
      "2266:                      We only setting this up here for WM_Event2Midi function",
      "2268:                     midi_setup_timesignature(mdi, ((event_data[2] << 24) + (event_data[3] << 16) + (event_data[4] << 8) + event_data[5]));",
      "2269:                     ret_cnt += 6;",
      "2270:                 } else if ((event_data[0] == 0x59) && (event_data[1] == 0x02)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2317:                     if (siz < 6) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "2272:                      Key Signature",
      "2273:                      We only setting this up here for WM_Event2Midi function",
      "2275:                     midi_setup_keysignature(mdi, ((event_data[2] << 8) + event_data[3]));",
      "2276:                     ret_cnt += 4;",
      "2277:                 } else {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2325:                     if (siz < 4) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "2281:                     event_data++;",
      "2282:                     ret_cnt++;",
      "2284:                         do {",
      "2285:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2286:                             event_data++;",
      "2287:                             ret_cnt++;",
      "2288:                         } while (*event_data > 0x7f);",
      "2289:                     }",
      "2290:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
      "2291:                     ret_cnt++;",
      "2292:                     ret_cnt += tmp_length;",
      "2293:                 }",
      "2295:             } else if ((channel == 0) || (channel == 7)) {",
      "",
      "[Removed Lines]",
      "2283:                     if (*event_data > 0x7f) {",
      "",
      "[Added Lines]",
      "2334:                     if (--siz && *event_data > 0x7f) {",
      "2336:                             if (!siz) break;",
      "2339:                             siz--;",
      "2343:                     if (!siz) goto shortbuf;",
      "2347:                     if (--siz < tmp_length) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "2302:                 if (*event_data > 0x7f) {",
      "2303:                     do {",
      "2304:                         sysex_len = (sysex_len << 7) + (*event_data & 0x7F);",
      "2305:                         event_data++;",
      "2306:                         ret_cnt++;",
      "2307:                     } while (*event_data > 0x7f);",
      "2308:                 }",
      "2309:                 sysex_len = (sysex_len << 7) + (*event_data & 0x7F);",
      "2310:                 event_data++;",
      "2312:                 ret_cnt++;",
      "2314:                 sysex_store = malloc(sizeof(uint8_t) * sysex_len);",
      "2315:                 memcpy(sysex_store, event_data, sysex_len);",
      "",
      "[Removed Lines]",
      "2311:                 if (!sysex_len) break;",
      "",
      "[Added Lines]",
      "2359:                         if (!siz) break;",
      "2362:                         siz--;",
      "2366:                 if (!siz) goto shortbuf;",
      "2370:                 if (--siz < sysex_len) goto shortbuf;",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "2381:     if (ret_cnt == 0)",
      "2382:         _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(missing event)\", 0);",
      "2383:     return ret_cnt;",
      "2384: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2444: shortbuf:",
      "2445:     _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(input too short)\", 0);",
      "2446:     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "79209648408b42e8457b6ed0b08f94b643ab9a72",
      "candidate_info": {
        "commit_hash": "79209648408b42e8457b6ed0b08f94b643ab9a72",
        "repo": "Mindwerks/wildmidi",
        "commit_url": "https://github.com/Mindwerks/wildmidi/commit/79209648408b42e8457b6ed0b08f94b643ab9a72",
        "files": [
          "include/internal_midi.h",
          "src/f_hmi.c",
          "src/f_hmp.c",
          "src/internal_midi.c"
        ],
        "message": "cosmetic cleanups after the bug175 patch. remove unused local vars from f_hmp.c.",
        "before_after_code_files": [
          "include/internal_midi.h||include/internal_midi.h",
          "src/f_hmi.c||src/f_hmi.c",
          "src/f_hmp.c||src/f_hmp.c",
          "src/internal_midi.c||src/internal_midi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/internal_midi.h||include/internal_midi.h",
            "src/f_hmi.c||src/f_hmi.c",
            "src/f_hmp.c||src/f_hmp.c",
            "src/internal_midi.c||src/internal_midi.c"
          ],
          "candidate": [
            "include/internal_midi.h||include/internal_midi.h",
            "src/f_hmi.c||src/f_hmi.c",
            "src/f_hmp.c||src/f_hmp.c",
            "src/internal_midi.c||src/internal_midi.c"
          ]
        }
      },
      "candidate_diff": {
        "include/internal_midi.h||include/internal_midi.h": [
          "File: include/internal_midi.h -> include/internal_midi.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "192: extern struct _mdi * _WM_initMDI(void);",
          "193: extern void _WM_freeMDI(struct _mdi *mdi);",
          "195: extern void _WM_ResetToStart(struct _mdi *mdi);",
          "196: extern void _WM_do_pan_adjust(struct _mdi *mdi, uint8_t ch);",
          "197: extern void _WM_do_note_off_extra(struct _note *nte);",
          "",
          "[Removed Lines]",
          "194: extern uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t siz, uint8_t running_event);",
          "",
          "[Added Lines]",
          "194: extern uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t *event_data, uint32_t inlen, uint8_t running_event);",
          "",
          "---------------"
        ],
        "src/f_hmi.c||src/f_hmi.c": [
          "File: src/f_hmi.c -> src/f_hmi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: _WM_ParseNewHmi(uint8_t *hmi_data, uint32_t hmi_size) {",
          "43:     uint32_t hmi_tmp = 0;",
          "44:     uint8_t *hmi_base = hmi_data;",
          "46:     uint16_t hmi_bpm = 0;",
          "47:     uint16_t hmi_division = 0;",
          "",
          "[Removed Lines]",
          "45:     uint32_t data_siz;",
          "",
          "[Added Lines]",
          "45:     uint32_t data_size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:                     _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, \"file too short\", 0);",
          "219:                     goto _hmi_end;",
          "220:                 }",
          "223:                 if (hmi_data[0] == 0xfe) {",
          "",
          "[Removed Lines]",
          "221:                 data_siz = hmi_size - hmi_track_offset[i];",
          "",
          "[Added Lines]",
          "221:                 data_size = hmi_size - hmi_track_offset[i];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "236:                     }",
          "237:                     hmi_data += 4;",
          "238:                     hmi_track_offset[i] += 4;",
          "240:                         _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, \"file too short\", 0);",
          "241:                         goto _hmi_end;",
          "242:                     }",
          "244:                 } else {",
          "246:                         goto _hmi_end;",
          "247:                     }",
          "248:                     if ((hmi_data[0] == 0xff) && (hmi_data[1] == 0x2f) && (hmi_data[2] == 0x00)) {",
          "",
          "[Removed Lines]",
          "239:                     if (hmi_tmp > data_siz) {",
          "243:                     data_siz -= hmi_tmp;",
          "245:                     if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,data_siz,hmi_running_event[i])) == 0) {",
          "",
          "[Added Lines]",
          "239:                     if (hmi_tmp > data_size) {",
          "243:                     data_size -= hmi_tmp;",
          "245:                     if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,data_size,hmi_running_event[i])) == 0) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "282:                         hmi_data += setup_ret;",
          "283:                         hmi_track_offset[i] += setup_ret;",
          "286:                         note[hmi_tmp].length = 0;",
          "288:                             do {",
          "290:                                 note[hmi_tmp].length = (note[hmi_tmp].length << 7) | (*hmi_data & 0x7F);",
          "291:                                 hmi_data++;",
          "293:                                 hmi_track_offset[i]++;",
          "294:                             } while (*hmi_data > 0x7F);",
          "295:                         }",
          "297:                             _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, \"file too short\", 0);",
          "298:                             goto _hmi_end;",
          "299:                         }",
          "300:                         note[hmi_tmp].length = (note[hmi_tmp].length << 7) | (*hmi_data & 0x7F);",
          "301:                         hmi_data++;",
          "303:                         hmi_track_offset[i]++;",
          "305:                         if (note[hmi_tmp].length) {",
          "",
          "[Removed Lines]",
          "284:                         data_siz -= setup_ret;",
          "287:                         if (data_siz && *hmi_data > 0x7f) {",
          "289:                                 if (!data_siz) break;",
          "292:                                 data_siz--;",
          "296:                         if (!data_siz) {",
          "302:                         data_siz--;",
          "",
          "[Added Lines]",
          "284:                         data_size -= setup_ret;",
          "287:                         if (data_size && *hmi_data > 0x7f) {",
          "289:                                 if (!data_size) break;",
          "292:                                 data_size--;",
          "296:                         if (!data_size) {",
          "302:                         data_size--;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "313:                     } else {",
          "314:                         hmi_data += setup_ret;",
          "315:                         hmi_track_offset[i] += setup_ret;",
          "317:                     }",
          "318:                 }",
          "323:                     do {",
          "325:                         hmi_delta[i] = (hmi_delta[i] << 7) | (*hmi_data & 0x7F);",
          "326:                         hmi_data++;",
          "328:                         hmi_track_offset[i]++;",
          "329:                     } while (*hmi_data > 0x7F);",
          "330:                 }",
          "332:                     _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, \"file too short\", 0);",
          "333:                     goto _hmi_end;",
          "334:                 }",
          "335:                 hmi_delta[i] = (hmi_delta[i] << 7) | (*hmi_data & 0x7F);",
          "336:                 hmi_data++;",
          "338:                 hmi_track_offset[i]++;",
          "339:             } while (!hmi_delta[i]);",
          "340:             if ((!smallest_delta) || (smallest_delta > hmi_delta[i])) {",
          "",
          "[Removed Lines]",
          "316:                         data_siz -= setup_ret;",
          "322:                 if (data_siz && *hmi_data > 0x7f) {",
          "324:                         if (!data_siz) break;",
          "327:                         data_siz--;",
          "331:                 if (!data_siz) {",
          "337:                 data_siz--;",
          "",
          "[Added Lines]",
          "316:                         data_size -= setup_ret;",
          "322:                 if (data_size && *hmi_data > 0x7f) {",
          "324:                         if (!data_size) break;",
          "327:                         data_size--;",
          "331:                 if (!data_size) {",
          "337:                 data_size--;",
          "",
          "---------------"
        ],
        "src/f_hmp.c||src/f_hmp.c": [
          "File: src/f_hmp.c -> src/f_hmp.c"
        ],
        "src/internal_midi.c||src/internal_midi.c": [
          "File: src/internal_midi.c -> src/internal_midi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1962:     free(mdi);",
          "1963: }",
          "1967:      Only add standard MIDI and Sysex events in here.",
          "1968:      Non-standard events need to be handled by calling function",
          "",
          "[Removed Lines]",
          "1965: uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t siz, uint8_t running_event) {",
          "",
          "[Added Lines]",
          "1965: uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t inlen, uint8_t running_event) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1978:     uint8_t data_2 = 0;",
          "1979:     char *text = NULL;",
          "1983:     if (event_data[0] >= 0x80) {",
          "1984:         command = *event_data & 0xf0;",
          "1985:         channel = *event_data++ & 0x0f;",
          "1986:         ret_cnt++;",
          "1988:     } else {",
          "1989:         command = running_event & 0xf0;",
          "1990:         channel = running_event & 0x0f;",
          "",
          "[Removed Lines]",
          "1981:     if (!siz) goto shortbuf;",
          "1987:         if (--siz == 0) goto shortbuf;",
          "",
          "[Added Lines]",
          "1981:     if (!inlen) goto shortbuf;",
          "1987:         if (--inlen == 0) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1993:     switch(command) {",
          "1994:         case 0x80:",
          "1995:         _SETUP_NOTEOFF:",
          "1997:             data_1 = *event_data++;",
          "1998:             data_2 = *event_data++;",
          "1999:             _WM_midi_setup_noteoff(mdi, channel, data_1, data_2);",
          "",
          "[Removed Lines]",
          "1996:             if (siz < 2) goto shortbuf;",
          "",
          "[Added Lines]",
          "1996:             if (inlen < 2) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2001:             break;",
          "2002:         case 0x90:",
          "2005:             data_1 = *event_data++;",
          "2006:             data_2 = *event_data++;",
          "2007:             midi_setup_noteon(mdi, channel, data_1, data_2);",
          "2008:             ret_cnt += 2;",
          "2009:             break;",
          "2010:         case 0xa0:",
          "2012:             data_1 = *event_data++;",
          "2013:             data_2 = *event_data++;",
          "2014:             midi_setup_aftertouch(mdi, channel, data_1, data_2);",
          "2015:             ret_cnt += 2;",
          "2016:             break;",
          "2017:         case 0xb0:",
          "2019:             data_1 = *event_data++;",
          "2020:             data_2 = *event_data++;",
          "2021:             midi_setup_control(mdi, channel, data_1, data_2);",
          "",
          "[Removed Lines]",
          "2004:             if (siz < 2) goto shortbuf;",
          "2011:             if (siz < 2) goto shortbuf;",
          "2018:             if (siz < 2) goto shortbuf;",
          "",
          "[Added Lines]",
          "2004:             if (inlen < 2) goto shortbuf;",
          "2011:             if (inlen < 2) goto shortbuf;",
          "2018:             if (inlen < 2) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2032:             ret_cnt++;",
          "2033:             break;",
          "2034:         case 0xe0:",
          "2036:             data_1 = *event_data++;",
          "2037:             data_2 = *event_data++;",
          "2038:             midi_setup_pitch(mdi, channel, ((data_2 << 7) | (data_1 & 0x7f)));",
          "",
          "[Removed Lines]",
          "2035:             if (siz < 2) goto shortbuf;",
          "",
          "[Added Lines]",
          "2035:             if (inlen < 2) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2049:                      Sequence Number",
          "2050:                      We only setting this up here for WM_Event2Midi function",
          "2053:                     midi_setup_sequenceno(mdi, ((event_data[2] << 8) + event_data[3]));",
          "2054:                     ret_cnt += 4;",
          "2055:                 } else if (event_data[0] == 0x01) {",
          "",
          "[Removed Lines]",
          "2052:                     if (siz < 4) goto shortbuf;",
          "",
          "[Added Lines]",
          "2052:                     if (inlen < 4) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2058:                     event_data++;",
          "2059:                     ret_cnt++;",
          "2061:                         do {",
          "2063:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2064:                             event_data++;",
          "2066:                             ret_cnt++;",
          "2067:                         } while (*event_data > 0x7f);",
          "2068:                     }",
          "2070:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2071:                     event_data++;",
          "2072:                     ret_cnt++;",
          "2076:                     text = malloc(tmp_length + 1);",
          "2077:                     memcpy(text, event_data, tmp_length);",
          "",
          "[Removed Lines]",
          "2060:                     if (--siz && *event_data > 0x7f) {",
          "2062:                             if (!siz) break;",
          "2065:                             siz--;",
          "2069:                     if (!siz) goto shortbuf;",
          "2073:                     if (--siz < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2060:                     if (--inlen && *event_data > 0x7f) {",
          "2062:                             if (!inlen) break;",
          "2065:                             inlen--;",
          "2069:                     if (!inlen) goto shortbuf;",
          "2073:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2086:                     event_data++;",
          "2087:                     ret_cnt++;",
          "2089:                         do {",
          "2091:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2092:                             event_data++;",
          "2094:                             ret_cnt++;",
          "2095:                         } while (*event_data > 0x7f);",
          "2096:                     }",
          "2098:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2099:                     event_data++;",
          "2100:                     ret_cnt++;",
          "2105:                     if (mdi->extra_info.copyright) {",
          "",
          "[Removed Lines]",
          "2088:                     if (--siz && *event_data > 0x7f) {",
          "2090:                             if (!siz) break;",
          "2093:                             siz--;",
          "2097:                     if (!siz) goto shortbuf;",
          "2101:                     if (--siz < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2088:                     if (--inlen && *event_data > 0x7f) {",
          "2090:                             if (!inlen) break;",
          "2093:                             inlen--;",
          "2097:                     if (!inlen) goto shortbuf;",
          "2101:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2127:                     event_data++;",
          "2128:                     ret_cnt++;",
          "2130:                         do {",
          "2132:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2133:                             event_data++;",
          "2135:                             ret_cnt++;",
          "2136:                         } while (*event_data > 0x7f);",
          "2137:                     }",
          "2139:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2140:                     event_data++;",
          "2141:                     ret_cnt++;",
          "2145:                     text = malloc(tmp_length + 1);",
          "2146:                     memcpy(text, event_data, tmp_length);",
          "",
          "[Removed Lines]",
          "2129:                     if (--siz && *event_data > 0x7f) {",
          "2131:                             if (!siz) break;",
          "2134:                             siz--;",
          "2138:                     if (!siz) goto shortbuf;",
          "2142:                     if (--siz < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2129:                     if (--inlen && *event_data > 0x7f) {",
          "2131:                             if (!inlen) break;",
          "2134:                             inlen--;",
          "2138:                     if (!inlen) goto shortbuf;",
          "2142:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2155:                     event_data++;",
          "2156:                     ret_cnt++;",
          "2158:                         do {",
          "2160:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2161:                             event_data++;",
          "2163:                             ret_cnt++;",
          "2164:                         } while (*event_data > 0x7f);",
          "2165:                     }",
          "2167:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2168:                     event_data++;",
          "2169:                     ret_cnt++;",
          "2173:                     text = malloc(tmp_length + 1);",
          "2174:                     memcpy(text, event_data, tmp_length);",
          "",
          "[Removed Lines]",
          "2157:                     if (--siz && *event_data > 0x7f) {",
          "2159:                             if (!siz) break;",
          "2162:                             siz--;",
          "2166:                     if (!siz) goto shortbuf;",
          "2170:                     if (--siz < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2157:                     if (--inlen && *event_data > 0x7f) {",
          "2159:                             if (!inlen) break;",
          "2162:                             inlen--;",
          "2166:                     if (!inlen) goto shortbuf;",
          "2170:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2183:                     event_data++;",
          "2184:                     ret_cnt++;",
          "2186:                         do {",
          "2188:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2189:                             event_data++;",
          "2191:                             ret_cnt++;",
          "2192:                         } while (*event_data > 0x7f);",
          "2193:                     }",
          "2195:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2196:                     event_data++;",
          "2197:                     ret_cnt++;",
          "2201:                     text = malloc(tmp_length + 1);",
          "2202:                     memcpy(text, event_data, tmp_length);",
          "",
          "[Removed Lines]",
          "2185:                     if (--siz && *event_data > 0x7f) {",
          "2187:                             if (!siz) break;",
          "2190:                             siz--;",
          "2194:                     if (!siz) goto shortbuf;",
          "2198:                     if (--siz < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2185:                     if (--inlen && *event_data > 0x7f) {",
          "2187:                             if (!inlen) break;",
          "2190:                             inlen--;",
          "2194:                     if (!inlen) goto shortbuf;",
          "2198:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2211:                     event_data++;",
          "2212:                     ret_cnt++;",
          "2214:                         do {",
          "2216:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2217:                             event_data++;",
          "2219:                             ret_cnt++;",
          "2220:                         } while (*event_data > 0x7f);",
          "2221:                     }",
          "2223:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2224:                     event_data++;",
          "2225:                     ret_cnt++;",
          "2229:                     text = malloc(tmp_length + 1);",
          "2230:                     memcpy(text, event_data, tmp_length);",
          "",
          "[Removed Lines]",
          "2213:                     if (--siz && *event_data > 0x7f) {",
          "2215:                             if (!siz) break;",
          "2218:                             siz--;",
          "2222:                     if (!siz) goto shortbuf;",
          "2226:                     if (--siz < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2213:                     if (--inlen && *event_data > 0x7f) {",
          "2215:                             if (!inlen) break;",
          "2218:                             inlen--;",
          "2222:                     if (!inlen) goto shortbuf;",
          "2226:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2239:                     event_data++;",
          "2240:                     ret_cnt++;",
          "2242:                         do {",
          "2244:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2245:                             event_data++;",
          "2247:                             ret_cnt++;",
          "2248:                         } while (*event_data > 0x7f);",
          "2249:                     }",
          "2251:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2252:                     event_data++;",
          "2253:                     ret_cnt++;",
          "2257:                     text = malloc(tmp_length + 1);",
          "2258:                     memcpy(text, event_data, tmp_length);",
          "",
          "[Removed Lines]",
          "2241:                     if (--siz && *event_data > 0x7f) {",
          "2243:                             if (!siz) break;",
          "2246:                             siz--;",
          "2250:                     if (!siz) goto shortbuf;",
          "2254:                     if (--siz < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2241:                     if (--inlen && *event_data > 0x7f) {",
          "2243:                             if (!inlen) break;",
          "2246:                             inlen--;",
          "2250:                     if (!inlen) goto shortbuf;",
          "2254:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2266:                      Channel Prefix",
          "2267:                      We only setting this up here for WM_Event2Midi function",
          "2270:                     midi_setup_channelprefix(mdi, event_data[2]);",
          "2271:                     ret_cnt += 3;",
          "2272:                 } else if ((event_data[0] == 0x21) && (event_data[1] == 0x01)) {",
          "",
          "[Removed Lines]",
          "2269:                     if (siz < 3) goto shortbuf;",
          "",
          "[Added Lines]",
          "2269:                     if (inlen < 3) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2274:                      Port Prefix",
          "2275:                      We only setting this up here for WM_Event2Midi function",
          "2278:                     midi_setup_portprefix(mdi, event_data[2]);",
          "2279:                     ret_cnt += 3;",
          "2280:                 } else if ((event_data[0] == 0x2F) && (event_data[1] == 0x00)) {",
          "",
          "[Removed Lines]",
          "2277:                     if (siz < 3) goto shortbuf;",
          "",
          "[Added Lines]",
          "2277:                     if (inlen < 3) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2283:                      Deal with this inside calling function",
          "2284:                      We only setting this up here for _WM_Event2Midi function",
          "2287:                     _WM_midi_setup_endoftrack(mdi);",
          "2288:                     ret_cnt += 2;",
          "2289:                 } else if ((event_data[0] == 0x51) && (event_data[1] == 0x03)) {",
          "",
          "[Removed Lines]",
          "2286:                     if (siz < 2) goto shortbuf;",
          "",
          "[Added Lines]",
          "2286:                     if (inlen < 2) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2292:                      Deal with this inside calling function.",
          "2293:                      We only setting this up here for _WM_Event2Midi function",
          "2296:                     _WM_midi_setup_tempo(mdi, ((event_data[2] << 16) + (event_data[3] << 8) + event_data[4]));",
          "2297:                     ret_cnt += 5;",
          "2298:                 } else if ((event_data[0] == 0x54) && (event_data[1] == 0x05)) {",
          "2301:                      SMPTE Offset",
          "2302:                      We only setting this up here for WM_Event2Midi function",
          "",
          "[Removed Lines]",
          "2295:                     if (siz < 5) goto shortbuf;",
          "2299:                     if (siz < 7) goto shortbuf;",
          "",
          "[Added Lines]",
          "2295:                     if (inlen < 5) goto shortbuf;",
          "2299:                     if (inlen < 7) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2314:                      Time Signature",
          "2315:                      We only setting this up here for WM_Event2Midi function",
          "2318:                     midi_setup_timesignature(mdi, ((event_data[2] << 24) + (event_data[3] << 16) + (event_data[4] << 8) + event_data[5]));",
          "2319:                     ret_cnt += 6;",
          "2320:                 } else if ((event_data[0] == 0x59) && (event_data[1] == 0x02)) {",
          "",
          "[Removed Lines]",
          "2317:                     if (siz < 6) goto shortbuf;",
          "",
          "[Added Lines]",
          "2317:                     if (inlen < 6) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2322:                      Key Signature",
          "2323:                      We only setting this up here for WM_Event2Midi function",
          "2326:                     midi_setup_keysignature(mdi, ((event_data[2] << 8) + event_data[3]));",
          "2327:                     ret_cnt += 4;",
          "2328:                 } else {",
          "",
          "[Removed Lines]",
          "2325:                     if (siz < 4) goto shortbuf;",
          "",
          "[Added Lines]",
          "2325:                     if (inlen < 4) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2332:                     event_data++;",
          "2333:                     ret_cnt++;",
          "2335:                         do {",
          "2337:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2338:                             event_data++;",
          "2340:                             ret_cnt++;",
          "2341:                         } while (*event_data > 0x7f);",
          "2342:                     }",
          "2344:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2345:                     ret_cnt++;",
          "2346:                     ret_cnt += tmp_length;",
          "2348:                 }",
          "2350:             } else if ((channel == 0) || (channel == 7)) {",
          "",
          "[Removed Lines]",
          "2334:                     if (--siz && *event_data > 0x7f) {",
          "2336:                             if (!siz) break;",
          "2339:                             siz--;",
          "2343:                     if (!siz) goto shortbuf;",
          "2347:                     if (--siz < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2334:                     if (--inlen && *event_data > 0x7f) {",
          "2336:                             if (!inlen) break;",
          "2339:                             inlen--;",
          "2343:                     if (!inlen) goto shortbuf;",
          "2347:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2357:                 if (*event_data > 0x7f) {",
          "2358:                     do {",
          "2360:                         sysex_len = (sysex_len << 7) + (*event_data & 0x7F);",
          "2361:                         event_data++;",
          "2363:                         ret_cnt++;",
          "2364:                     } while (*event_data > 0x7f);",
          "2365:                 }",
          "2367:                 sysex_len = (sysex_len << 7) + (*event_data & 0x7F);",
          "2368:                 event_data++;",
          "2369:                 ret_cnt++;",
          "2373:                 sysex_store = malloc(sizeof(uint8_t) * sysex_len);",
          "2374:                 memcpy(sysex_store, event_data, sysex_len);",
          "",
          "[Removed Lines]",
          "2359:                         if (!siz) break;",
          "2362:                         siz--;",
          "2366:                 if (!siz) goto shortbuf;",
          "2370:                 if (--siz < sysex_len) goto shortbuf;",
          "",
          "[Added Lines]",
          "2359:                         if (!inlen) break;",
          "2362:                         inlen--;",
          "2366:                 if (!inlen) goto shortbuf;",
          "2370:                 if (--inlen < sysex_len) goto shortbuf;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a83ebc91e39a1282b922479f8a42c9057408e550",
      "candidate_info": {
        "commit_hash": "a83ebc91e39a1282b922479f8a42c9057408e550",
        "repo": "Mindwerks/wildmidi",
        "commit_url": "https://github.com/Mindwerks/wildmidi/commit/a83ebc91e39a1282b922479f8a42c9057408e550",
        "files": [
          "src/internal_midi.c"
        ],
        "message": "cosmetic change for readability",
        "before_after_code_files": [
          "src/internal_midi.c||src/internal_midi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/internal_midi.c||src/internal_midi.c"
          ],
          "candidate": [
            "src/internal_midi.c||src/internal_midi.c"
          ]
        }
      },
      "candidate_diff": {
        "src/internal_midi.c||src/internal_midi.c": [
          "File: src/internal_midi.c -> src/internal_midi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1962:     free(mdi);",
          "1963: }",
          "1967:      Only add standard MIDI and Sysex events in here.",
          "1968:      Non-standard events need to be handled by calling function",
          "",
          "[Removed Lines]",
          "1965: uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t inlen, uint8_t running_event) {",
          "",
          "[Added Lines]",
          "1965: uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t input_length, uint8_t running_event) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1978:     uint8_t data_2 = 0;",
          "1979:     char *text = NULL;",
          "1983:     if (event_data[0] >= 0x80) {",
          "1984:         command = *event_data & 0xf0;",
          "1985:         channel = *event_data++ & 0x0f;",
          "1986:         ret_cnt++;",
          "1988:     } else {",
          "1989:         command = running_event & 0xf0;",
          "1990:         channel = running_event & 0x0f;",
          "",
          "[Removed Lines]",
          "1981:     if (!inlen) goto shortbuf;",
          "1987:         if (--inlen == 0) goto shortbuf;",
          "",
          "[Added Lines]",
          "1981:     if (!input_length) goto shortbuf;",
          "1987:         if (--input_length == 0) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1993:     switch(command) {",
          "1994:         case 0x80:",
          "1995:         _SETUP_NOTEOFF:",
          "1997:             data_1 = *event_data++;",
          "1998:             data_2 = *event_data++;",
          "1999:             _WM_midi_setup_noteoff(mdi, channel, data_1, data_2);",
          "",
          "[Removed Lines]",
          "1996:             if (inlen < 2) goto shortbuf;",
          "",
          "[Added Lines]",
          "1996:             if (input_length < 2) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2001:             break;",
          "2002:         case 0x90:",
          "2005:             data_1 = *event_data++;",
          "2006:             data_2 = *event_data++;",
          "2007:             midi_setup_noteon(mdi, channel, data_1, data_2);",
          "2008:             ret_cnt += 2;",
          "2009:             break;",
          "2010:         case 0xa0:",
          "2012:             data_1 = *event_data++;",
          "2013:             data_2 = *event_data++;",
          "2014:             midi_setup_aftertouch(mdi, channel, data_1, data_2);",
          "2015:             ret_cnt += 2;",
          "2016:             break;",
          "2017:         case 0xb0:",
          "2019:             data_1 = *event_data++;",
          "2020:             data_2 = *event_data++;",
          "2021:             midi_setup_control(mdi, channel, data_1, data_2);",
          "",
          "[Removed Lines]",
          "2004:             if (inlen < 2) goto shortbuf;",
          "2011:             if (inlen < 2) goto shortbuf;",
          "2018:             if (inlen < 2) goto shortbuf;",
          "",
          "[Added Lines]",
          "2004:             if (input_length < 2) goto shortbuf;",
          "2011:             if (input_length < 2) goto shortbuf;",
          "2018:             if (input_length < 2) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2032:             ret_cnt++;",
          "2033:             break;",
          "2034:         case 0xe0:",
          "2036:             data_1 = *event_data++;",
          "2037:             data_2 = *event_data++;",
          "2038:             midi_setup_pitch(mdi, channel, ((data_2 << 7) | (data_1 & 0x7f)));",
          "",
          "[Removed Lines]",
          "2035:             if (inlen < 2) goto shortbuf;",
          "",
          "[Added Lines]",
          "2035:             if (input_length < 2) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2049:                      Sequence Number",
          "2050:                      We only setting this up here for WM_Event2Midi function",
          "2053:                     midi_setup_sequenceno(mdi, ((event_data[2] << 8) + event_data[3]));",
          "2054:                     ret_cnt += 4;",
          "2055:                 } else if (event_data[0] == 0x01) {",
          "",
          "[Removed Lines]",
          "2052:                     if (inlen < 4) goto shortbuf;",
          "",
          "[Added Lines]",
          "2052:                     if (input_length < 4) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2058:                     event_data++;",
          "2059:                     ret_cnt++;",
          "2061:                         do {",
          "2063:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2064:                             event_data++;",
          "2066:                             ret_cnt++;",
          "2067:                         } while (*event_data > 0x7f);",
          "2068:                     }",
          "2070:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2071:                     event_data++;",
          "2072:                     ret_cnt++;",
          "2076:                     text = malloc(tmp_length + 1);",
          "",
          "[Removed Lines]",
          "2060:                     if (--inlen && *event_data > 0x7f) {",
          "2062:                             if (!inlen) break;",
          "2065:                             inlen--;",
          "2069:                     if (!inlen) goto shortbuf;",
          "2073:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2060:                     if (--input_length && *event_data > 0x7f) {",
          "2062:                             if (!input_length) break;",
          "2065:                             input_length--;",
          "2069:                     if (!input_length) goto shortbuf;",
          "2073:                     if (--input_length < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2086:                     event_data++;",
          "2087:                     ret_cnt++;",
          "2089:                         do {",
          "2091:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2092:                             event_data++;",
          "2094:                             ret_cnt++;",
          "2095:                         } while (*event_data > 0x7f);",
          "2096:                     }",
          "2098:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2099:                     event_data++;",
          "2100:                     ret_cnt++;",
          "",
          "[Removed Lines]",
          "2088:                     if (--inlen && *event_data > 0x7f) {",
          "2090:                             if (!inlen) break;",
          "2093:                             inlen--;",
          "2097:                     if (!inlen) goto shortbuf;",
          "2101:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2088:                     if (--input_length && *event_data > 0x7f) {",
          "2090:                             if (!input_length) break;",
          "2093:                             input_length--;",
          "2097:                     if (!input_length) goto shortbuf;",
          "2101:                     if (--input_length < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2127:                     event_data++;",
          "2128:                     ret_cnt++;",
          "2130:                         do {",
          "2132:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2133:                             event_data++;",
          "2135:                             ret_cnt++;",
          "2136:                         } while (*event_data > 0x7f);",
          "2137:                     }",
          "2139:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2140:                     event_data++;",
          "2141:                     ret_cnt++;",
          "2145:                     text = malloc(tmp_length + 1);",
          "",
          "[Removed Lines]",
          "2129:                     if (--inlen && *event_data > 0x7f) {",
          "2131:                             if (!inlen) break;",
          "2134:                             inlen--;",
          "2138:                     if (!inlen) goto shortbuf;",
          "2142:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2129:                     if (--input_length && *event_data > 0x7f) {",
          "2131:                             if (!input_length) break;",
          "2134:                             input_length--;",
          "2138:                     if (!input_length) goto shortbuf;",
          "2142:                     if (--input_length < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2155:                     event_data++;",
          "2156:                     ret_cnt++;",
          "2158:                         do {",
          "2160:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2161:                             event_data++;",
          "2163:                             ret_cnt++;",
          "2164:                         } while (*event_data > 0x7f);",
          "2165:                     }",
          "2167:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2168:                     event_data++;",
          "2169:                     ret_cnt++;",
          "2173:                     text = malloc(tmp_length + 1);",
          "",
          "[Removed Lines]",
          "2157:                     if (--inlen && *event_data > 0x7f) {",
          "2159:                             if (!inlen) break;",
          "2162:                             inlen--;",
          "2166:                     if (!inlen) goto shortbuf;",
          "2170:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2157:                     if (--input_length && *event_data > 0x7f) {",
          "2159:                             if (!input_length) break;",
          "2162:                             input_length--;",
          "2166:                     if (!input_length) goto shortbuf;",
          "2170:                     if (--input_length < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2183:                     event_data++;",
          "2184:                     ret_cnt++;",
          "2186:                         do {",
          "2188:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2189:                             event_data++;",
          "2191:                             ret_cnt++;",
          "2192:                         } while (*event_data > 0x7f);",
          "2193:                     }",
          "2195:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2196:                     event_data++;",
          "2197:                     ret_cnt++;",
          "2201:                     text = malloc(tmp_length + 1);",
          "",
          "[Removed Lines]",
          "2185:                     if (--inlen && *event_data > 0x7f) {",
          "2187:                             if (!inlen) break;",
          "2190:                             inlen--;",
          "2194:                     if (!inlen) goto shortbuf;",
          "2198:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2185:                     if (--input_length && *event_data > 0x7f) {",
          "2187:                             if (!input_length) break;",
          "2190:                             input_length--;",
          "2194:                     if (!input_length) goto shortbuf;",
          "2198:                     if (--input_length < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2211:                     event_data++;",
          "2212:                     ret_cnt++;",
          "2214:                         do {",
          "2216:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2217:                             event_data++;",
          "2219:                             ret_cnt++;",
          "2220:                         } while (*event_data > 0x7f);",
          "2221:                     }",
          "2223:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2224:                     event_data++;",
          "2225:                     ret_cnt++;",
          "2229:                     text = malloc(tmp_length + 1);",
          "",
          "[Removed Lines]",
          "2213:                     if (--inlen && *event_data > 0x7f) {",
          "2215:                             if (!inlen) break;",
          "2218:                             inlen--;",
          "2222:                     if (!inlen) goto shortbuf;",
          "2226:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2213:                     if (--input_length && *event_data > 0x7f) {",
          "2215:                             if (!input_length) break;",
          "2218:                             input_length--;",
          "2222:                     if (!input_length) goto shortbuf;",
          "2226:                     if (--input_length < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2239:                     event_data++;",
          "2240:                     ret_cnt++;",
          "2242:                         do {",
          "2244:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2245:                             event_data++;",
          "2247:                             ret_cnt++;",
          "2248:                         } while (*event_data > 0x7f);",
          "2249:                     }",
          "2251:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2252:                     event_data++;",
          "2253:                     ret_cnt++;",
          "2257:                     text = malloc(tmp_length + 1);",
          "",
          "[Removed Lines]",
          "2241:                     if (--inlen && *event_data > 0x7f) {",
          "2243:                             if (!inlen) break;",
          "2246:                             inlen--;",
          "2250:                     if (!inlen) goto shortbuf;",
          "2254:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2241:                     if (--input_length && *event_data > 0x7f) {",
          "2243:                             if (!input_length) break;",
          "2246:                             input_length--;",
          "2250:                     if (!input_length) goto shortbuf;",
          "2254:                     if (--input_length < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2266:                      Channel Prefix",
          "2267:                      We only setting this up here for WM_Event2Midi function",
          "2270:                     midi_setup_channelprefix(mdi, event_data[2]);",
          "2271:                     ret_cnt += 3;",
          "2272:                 } else if ((event_data[0] == 0x21) && (event_data[1] == 0x01)) {",
          "",
          "[Removed Lines]",
          "2269:                     if (inlen < 3) goto shortbuf;",
          "",
          "[Added Lines]",
          "2269:                     if (input_length < 3) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2274:                      Port Prefix",
          "2275:                      We only setting this up here for WM_Event2Midi function",
          "2278:                     midi_setup_portprefix(mdi, event_data[2]);",
          "2279:                     ret_cnt += 3;",
          "2280:                 } else if ((event_data[0] == 0x2F) && (event_data[1] == 0x00)) {",
          "",
          "[Removed Lines]",
          "2277:                     if (inlen < 3) goto shortbuf;",
          "",
          "[Added Lines]",
          "2277:                     if (input_length < 3) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2283:                      Deal with this inside calling function",
          "2284:                      We only setting this up here for _WM_Event2Midi function",
          "2287:                     _WM_midi_setup_endoftrack(mdi);",
          "2288:                     ret_cnt += 2;",
          "2289:                 } else if ((event_data[0] == 0x51) && (event_data[1] == 0x03)) {",
          "",
          "[Removed Lines]",
          "2286:                     if (inlen < 2) goto shortbuf;",
          "",
          "[Added Lines]",
          "2286:                     if (input_length < 2) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2292:                      Deal with this inside calling function.",
          "2293:                      We only setting this up here for _WM_Event2Midi function",
          "2296:                     _WM_midi_setup_tempo(mdi, ((event_data[2] << 16) + (event_data[3] << 8) + event_data[4]));",
          "2297:                     ret_cnt += 5;",
          "2298:                 } else if ((event_data[0] == 0x54) && (event_data[1] == 0x05)) {",
          "2301:                      SMPTE Offset",
          "2302:                      We only setting this up here for WM_Event2Midi function",
          "",
          "[Removed Lines]",
          "2295:                     if (inlen < 5) goto shortbuf;",
          "2299:                     if (inlen < 7) goto shortbuf;",
          "",
          "[Added Lines]",
          "2295:                     if (input_length < 5) goto shortbuf;",
          "2299:                     if (input_length < 7) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2314:                      Time Signature",
          "2315:                      We only setting this up here for WM_Event2Midi function",
          "2318:                     midi_setup_timesignature(mdi, ((event_data[2] << 24) + (event_data[3] << 16) + (event_data[4] << 8) + event_data[5]));",
          "2319:                     ret_cnt += 6;",
          "2320:                 } else if ((event_data[0] == 0x59) && (event_data[1] == 0x02)) {",
          "",
          "[Removed Lines]",
          "2317:                     if (inlen < 6) goto shortbuf;",
          "",
          "[Added Lines]",
          "2317:                     if (input_length < 6) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2322:                      Key Signature",
          "2323:                      We only setting this up here for WM_Event2Midi function",
          "2326:                     midi_setup_keysignature(mdi, ((event_data[2] << 8) + event_data[3]));",
          "2327:                     ret_cnt += 4;",
          "2328:                 } else {",
          "",
          "[Removed Lines]",
          "2325:                     if (inlen < 4) goto shortbuf;",
          "",
          "[Added Lines]",
          "2325:                     if (input_length < 4) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2332:                     event_data++;",
          "2333:                     ret_cnt++;",
          "2335:                         do {",
          "2337:                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2338:                             event_data++;",
          "2340:                             ret_cnt++;",
          "2341:                         } while (*event_data > 0x7f);",
          "2342:                     }",
          "2344:                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);",
          "2345:                     ret_cnt++;",
          "2346:                     ret_cnt += tmp_length;",
          "2348:                 }",
          "2350:             } else if ((channel == 0) || (channel == 7)) {",
          "",
          "[Removed Lines]",
          "2334:                     if (--inlen && *event_data > 0x7f) {",
          "2336:                             if (!inlen) break;",
          "2339:                             inlen--;",
          "2343:                     if (!inlen) goto shortbuf;",
          "2347:                     if (--inlen < tmp_length) goto shortbuf;",
          "",
          "[Added Lines]",
          "2334:                     if (--input_length && *event_data > 0x7f) {",
          "2336:                             if (!input_length) break;",
          "2339:                             input_length--;",
          "2343:                     if (!input_length) goto shortbuf;",
          "2347:                     if (--input_length < tmp_length) goto shortbuf;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2357:                 if (*event_data > 0x7f) {",
          "2358:                     do {",
          "2360:                         sysex_len = (sysex_len << 7) + (*event_data & 0x7F);",
          "2361:                         event_data++;",
          "2363:                         ret_cnt++;",
          "2364:                     } while (*event_data > 0x7f);",
          "2365:                 }",
          "2367:                 sysex_len = (sysex_len << 7) + (*event_data & 0x7F);",
          "2368:                 event_data++;",
          "2369:                 ret_cnt++;",
          "2373:                 sysex_store = malloc(sizeof(uint8_t) * sysex_len);",
          "",
          "[Removed Lines]",
          "2359:                         if (!inlen) break;",
          "2362:                         inlen--;",
          "2366:                 if (!inlen) goto shortbuf;",
          "2370:                 if (--inlen < sysex_len) goto shortbuf;",
          "",
          "[Added Lines]",
          "2359:                         if (!input_length) break;",
          "2362:                         input_length--;",
          "2366:                 if (!input_length) goto shortbuf;",
          "2370:                 if (--input_length < sysex_len) goto shortbuf;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "060b0d4dadae6280ff897715a8ef4101984cef17",
      "candidate_info": {
        "commit_hash": "060b0d4dadae6280ff897715a8ef4101984cef17",
        "repo": "Mindwerks/wildmidi",
        "commit_url": "https://github.com/Mindwerks/wildmidi/commit/060b0d4dadae6280ff897715a8ef4101984cef17",
        "files": [
          "build/src/ALL_BUILD_macosx10.13-x86_64.xctestrun",
          "src/f_midi.c"
        ],
        "message": "fix missing bracket and integer precision warning",
        "before_after_code_files": [
          "build/src/ALL_BUILD_macosx10.13-x86_64.xctestrun||build/src/ALL_BUILD_macosx10.13-x86_64.xctestrun",
          "src/f_midi.c||src/f_midi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/f_midi.c||src/f_midi.c"
          ],
          "candidate": [
            "src/f_midi.c||src/f_midi.c"
          ]
        }
      },
      "candidate_diff": {
        "build/src/ALL_BUILD_macosx10.13-x86_64.xctestrun||build/src/ALL_BUILD_macosx10.13-x86_64.xctestrun": [
          "File: build/src/ALL_BUILD_macosx10.13-x86_64.xctestrun -> build/src/ALL_BUILD_macosx10.13-x86_64.xctestrun",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
          "2: <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">",
          "3: <plist version=\"1.0\">",
          "4: <dict/>",
          "5: </plist>",
          "",
          "---------------"
        ],
        "src/f_midi.c||src/f_midi.c": [
          "File: src/f_midi.c -> src/f_midi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "366:                     } while (*tracks[i] > 0x7f);",
          "367:                 }",
          "368:                 if (!track_size[i]) {",
          "370:                         _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(too short)\", 0);",
          "371:                         goto _end;",
          "375:                 }",
          "376:                 track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);",
          "377:                 tracks[i]++;",
          "",
          "[Removed Lines]",
          "369:                     if (midi_type != 0)",
          "372:                 } else {",
          "373:                     track_end[i] = 1;",
          "374:                     goto NEXT_TRACK2;",
          "",
          "[Added Lines]",
          "369:                     if (midi_type != 0) {",
          "372:                     } else {",
          "373:                         track_end[i] = 1;",
          "374:                         goto NEXT_TRACK2;",
          "375:                     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:     uint32_t divisions = 96;",
          "440:     uint32_t tempo = 500000;",
          "441:     float samples_per_tick = 0;",
          "443:     float value_f = 0;",
          "444:     struct _event *event = mdi->events;",
          "445:     uint32_t track_size = 0;",
          "",
          "[Removed Lines]",
          "442:     uint32_t value = 0;",
          "",
          "[Added Lines]",
          "443:     unsigned long int value = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}