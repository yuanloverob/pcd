{
  "cve_id": "CVE-2019-8906",
  "cve_desc": "do_core_note in readelf.c in libmagic.a in file 5.35 has an out-of-bounds read because memcpy is misused.",
  "repo": "file/file",
  "patch_hash": "2858eaf99f6cc5aae129bcbf1e24ad160240185f",
  "patch_info": {
    "commit_hash": "2858eaf99f6cc5aae129bcbf1e24ad160240185f",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/2858eaf99f6cc5aae129bcbf1e24ad160240185f",
    "files": [
      "src/readelf.c"
    ],
    "message": "Avoid OOB read (found by ASAN reported by F. Alonso)",
    "before_after_code_files": [
      "src/readelf.c||src/readelf.c"
    ]
  },
  "patch_diff": {
    "src/readelf.c||src/readelf.c": [
      "File: src/readelf.c -> src/readelf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "31: #endif",
      "33: #ifdef BUILTIN_ELF",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.156 2018/10/19 00:33:04 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.157 2019/01/02 19:44:14 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "752:    char sbuf[512];",
      "753:    struct NetBSD_elfcore_procinfo pi;",
      "754:    memset(&pi, 0, sizeof(pi));",
      "757:    if (file_printf(ms, \", from '%.31s', pid=%u, uid=%u, \"",
      "758:        \"gid=%u, nlwps=%u, lwp=%u (signal %u/code %u)\",",
      "",
      "[Removed Lines]",
      "755:    memcpy(&pi, nbuf + doff, descsz);",
      "",
      "[Added Lines]",
      "755:    memcpy(&pi, nbuf + doff, MIN(descsz, sizeof(pi)));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "76c55eae2f9b0b378332762f6dce544d05eb24d7",
      "candidate_info": {
        "commit_hash": "76c55eae2f9b0b378332762f6dce544d05eb24d7",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/76c55eae2f9b0b378332762f6dce544d05eb24d7",
        "files": [
          "src/readelf.c",
          "src/readelf.h"
        ],
        "message": "Print the Go Build-ID like we do for other elf binaries",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c",
          "src/readelf.h||src/readelf.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.143 2018/06/09 16:00:06 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.144 2018/07/08 23:37:33 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "556:    return 1;",
          "557:   return 1;",
          "558:  }",
          "559:  return 0;",
          "560: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "559:  if (namesz == 4 && strcmp((char *)&nbuf[noff], \"Go\") == 0 &&",
          "560:      type == NT_GO_BUILD_ID && descsz < 128) {",
          "561:   if (file_printf(ms, \", Go BuildID=%s\",",
          "562:       (char *)&nbuf[doff]) == -1)",
          "563:    return 1;",
          "564:   return 1;",
          "565:  }",
          "",
          "---------------"
        ],
        "src/readelf.h||src/readelf.h": [
          "File: src/readelf.h -> src/readelf.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "356: #define NT_NETBSD_CMODEL 6",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365: #define NT_GO_BUILD_ID 4",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03084b161cf888b5286dbbcd964c31ccad4f64d9",
      "candidate_info": {
        "commit_hash": "03084b161cf888b5286dbbcd964c31ccad4f64d9",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/03084b161cf888b5286dbbcd964c31ccad4f64d9",
        "files": [
          "src/readelf.c"
        ],
        "message": "For dynamic binaries let the df_1 pie flag determine if we are pie or a shared object, and ignore the mode bits.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.158 2019/01/22 16:28:42 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.159 2019/02/01 17:58:48 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1096:  switch (xdh_tag) {",
          "1097:  case DT_FLAGS_1:",
          "1099:    ms->mode |= 0111;",
          "1100:   else",
          "1101:    ms->mode &= ~0111;",
          "",
          "[Removed Lines]",
          "1098:   if (xdh_val == DF_1_PIE)",
          "",
          "[Added Lines]",
          "1098:   if (xdh_val & DF_1_PIE)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1658:   switch (xph_type) {",
          "1659:   case PT_DYNAMIC:",
          "1660:    offset = 0;",
          "1661:    for (;;) {",
          "1662:     if (offset >= (size_t)bufsize)",
          "1663:      break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1662:    ms->mode &= ~0111;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b64482c5467b8022d71dce286226cfc0c880428c",
      "candidate_info": {
        "commit_hash": "b64482c5467b8022d71dce286226cfc0c880428c",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/b64482c5467b8022d71dce286226cfc0c880428c",
        "files": [
          "src/readelf.c"
        ],
        "message": "Add FreeBSD-specific core file support (John Baldwin)",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.152 2018/09/09 20:33:28 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.153 2018/09/11 00:37:33 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "772:   }",
          "773:   break;",
          "775:  default:",
          "776:   if (type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {",
          "777:    size_t i, j;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "775:  case OS_STYLE_FREEBSD:",
          "776:   if (type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {",
          "777:    size_t argoff, pidoff;",
          "779:    if (clazz == ELFCLASS32)",
          "780:     argoff = 4 + 4 + 17;",
          "781:    else",
          "782:     argoff = 4 + 4 + 8 + 17;",
          "783:    if (file_printf(ms, \", from '%.80s'\", nbuf + doff +",
          "784:        argoff) == -1)",
          "785:     return 1;",
          "786:    pidoff = argoff + 81 + 2;",
          "787:    if (doff + pidoff + 4 <= size) {",
          "788:     if (file_printf(ms, \", pid=%u\",",
          "789:         elf_getu32(swap, *(uint32_t *)(nbuf +",
          "790:         doff + pidoff))) == -1)",
          "791:      return 1;",
          "792:    }",
          "794:   }",
          "795:   break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa28a784c7a7c4ba3e60e09db485e781cbb667b0",
      "candidate_info": {
        "commit_hash": "aa28a784c7a7c4ba3e60e09db485e781cbb667b0",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/aa28a784c7a7c4ba3e60e09db485e781cbb667b0",
        "files": [
          "src/readelf.c"
        ],
        "message": "PR/118: atrosinenko: Avoid using offsets larger than the file size that cause integer overflow.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.166 2019/07/23 21:33:45 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.167 2019/11/09 00:30:44 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1345:  }",
          "1346:  name_off = xsh_offset;",
          "1348:  for ( ; num; num--) {",
          "1350:   if ((namesize = pread(fd, name, sizeof(name) - 1,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1348:  if (fsize != SIZE_UNKNOWN && fsize < name_off) {",
          "1349:   if (file_printf(ms, \", too large section header offset %td\",",
          "1350:       name_off) == -1)",
          "1351:    return -1;",
          "1352:   return 0;",
          "1353:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94b7501f48e134e77716e7ebefc73d6bbe72ba55",
      "candidate_info": {
        "commit_hash": "94b7501f48e134e77716e7ebefc73d6bbe72ba55",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/94b7501f48e134e77716e7ebefc73d6bbe72ba55",
        "files": [
          "src/readelf.c"
        ],
        "message": "PR/62: spinpx: Avoid non-nul-terminated string read.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.159 2019/02/01 17:58:48 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.160 2019/02/18 17:30:41 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "566:  }",
          "567:  if (namesz == 4 && strcmp((char *)&nbuf[noff], \"Go\") == 0 &&",
          "568:      type == NT_GO_BUILD_ID && descsz < 128) {",
          "571:    return -1;",
          "572:   return 1;",
          "573:  }",
          "",
          "[Removed Lines]",
          "569:   if (file_printf(ms, \", Go BuildID=%s\",",
          "570:       (char *)&nbuf[doff]) == -1)",
          "",
          "[Added Lines]",
          "569:   if (file_printf(ms, \", Go BuildID=%.*s\",",
          "570:       CAST(int, descsz), CAST(char *, &nbuf[doff])) == -1)",
          "",
          "---------------"
        ]
      }
    }
  ]
}