{
  "cve_id": "CVE-2018-20847",
  "cve_desc": "An improper computation of p_tx0, p_tx1, p_ty0 and p_ty1 in the function opj_get_encoding_parameters in openjp2/pi.c in OpenJPEG through 2.3.0 can lead to an integer overflow.",
  "repo": "uclouvain/openjpeg",
  "patch_hash": "5d00b719f4b93b1445e6fb4c766b9a9883c57949",
  "patch_info": {
    "commit_hash": "5d00b719f4b93b1445e6fb4c766b9a9883c57949",
    "repo": "uclouvain/openjpeg",
    "commit_url": "https://github.com/uclouvain/openjpeg/commit/5d00b719f4b93b1445e6fb4c766b9a9883c57949",
    "files": [
      "src/lib/openjp2/pi.c",
      "src/lib/openjp2/tcd.c"
    ],
    "message": "[trunk] fixed a buffer overflow in opj_tcd_init_decode_tile\n\nUpdate issue 431",
    "before_after_code_files": [
      "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c",
      "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
    ]
  },
  "patch_diff": {
    "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c": [
      "File: src/lib/openjp2/pi.c -> src/lib/openjp2/pi.c"
    ],
    "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c": [
      "File: src/lib/openjp2/tcd.c -> src/lib/openjp2/tcd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "709:  if (l_tccp->numresolutions == 0) {",
      "710:   fprintf(stderr, \"tiles require at least one resolution\\n\");",
      "",
      "[Removed Lines]",
      "704:  l_tile->x0 = opj_int_max((OPJ_INT32)(l_cp->tx0 + p * l_cp->tdx), (OPJ_INT32)l_image->x0);",
      "705:  l_tile->y0 = opj_int_max((OPJ_INT32)(l_cp->ty0 + q * l_cp->tdy), (OPJ_INT32)l_image->y0);",
      "706:  l_tile->x1 = opj_int_min((OPJ_INT32)(l_cp->tx0 + (p + 1) * l_cp->tdx), (OPJ_INT32)l_image->x1);",
      "707:  l_tile->y1 = opj_int_min((OPJ_INT32)(l_cp->ty0 + (q + 1) * l_cp->tdy), (OPJ_INT32)l_image->y1);",
      "",
      "[Added Lines]",
      "704:  l_tile->x0 = (OPJ_INT32)opj_uint_max(l_cp->tx0 + p * l_cp->tdx, l_image->x0);",
      "705:  l_tile->y0 = (OPJ_INT32)opj_uint_max(l_cp->ty0 + q * l_cp->tdy, l_image->y0);",
      "706:  l_tile->x1 = (OPJ_INT32)opj_uint_min(l_cp->tx0 + (p + 1) * l_cp->tdx, l_image->x1);",
      "707:  l_tile->y1 = (OPJ_INT32)opj_uint_min(l_cp->ty0 + (q + 1) * l_cp->tdy, l_image->y1);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2d24b6000d5611615e3e6d799e20d5fdbe4e2a1e",
      "candidate_info": {
        "commit_hash": "2d24b6000d5611615e3e6d799e20d5fdbe4e2a1e",
        "repo": "uclouvain/openjpeg",
        "commit_url": "https://github.com/uclouvain/openjpeg/commit/2d24b6000d5611615e3e6d799e20d5fdbe4e2a1e",
        "files": [
          "src/lib/openjp2/opj_intmath.h",
          "src/lib/openjp2/pi.c",
          "src/lib/openjp2/tcd.c"
        ],
        "message": "[trunk] added overflow checks (fixes issue 431)\n\nThanks mdarbois",
        "before_after_code_files": [
          "src/lib/openjp2/opj_intmath.h||src/lib/openjp2/opj_intmath.h",
          "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c",
          "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c",
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ],
          "candidate": [
            "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c",
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/openjp2/opj_intmath.h||src/lib/openjp2/opj_intmath.h": [
          "File: src/lib/openjp2/opj_intmath.h -> src/lib/openjp2/opj_intmath.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:  return (a > b) ? a : b;",
          "82: }",
          "85: Clamp an integer inside an interval",
          "86: @return",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:  Get the saturated sum of two unsigned integers",
          "86:  @return Returns saturated sum of a+b",
          "88: static INLINE OPJ_UINT32 opj_uint_adds(OPJ_UINT32 a, OPJ_UINT32 b) {",
          "89:  OPJ_UINT64 sum = (OPJ_UINT64)a + (OPJ_UINT64)b;",
          "90:  return -(OPJ_UINT32)(sum >> 32) | (OPJ_UINT32)sum;",
          "91: }",
          "",
          "---------------"
        ],
        "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c": [
          "File: src/lib/openjp2/pi.c -> src/lib/openjp2/pi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "694:  OPJ_UINT32 p, q;",
          "697:  assert(p_cp != 00);",
          "698:  assert(p_image != 00);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "697:  OPJ_UINT32 l_tx0, l_ty0;",
          "",
          "---------------"
        ],
        "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c": [
          "File: src/lib/openjp2/tcd.c -> src/lib/openjp2/tcd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "675:  OPJ_UINT32 l_pdx, l_pdy;",
          "676:  OPJ_UINT32 l_gain;",
          "677:  OPJ_INT32 l_x0b, l_y0b;",
          "679:  OPJ_INT32 l_tl_prc_x_start, l_tl_prc_y_start, l_br_prc_x_end, l_br_prc_y_end;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "678:  OPJ_UINT32 l_tx0, l_ty0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "710:  if (l_tccp->numresolutions == 0) {",
          "",
          "[Removed Lines]",
          "704:  l_tile->x0 = (OPJ_INT32)opj_uint_max(l_cp->tx0 + p * l_cp->tdx, l_image->x0);",
          "705:  l_tile->y0 = (OPJ_INT32)opj_uint_max(l_cp->ty0 + q * l_cp->tdy, l_image->y0);",
          "706:  l_tile->x1 = (OPJ_INT32)opj_uint_min(l_cp->tx0 + (p + 1) * l_cp->tdx, l_image->x1);",
          "707:  l_tile->y1 = (OPJ_INT32)opj_uint_min(l_cp->ty0 + (q + 1) * l_cp->tdy, l_image->y1);",
          "",
          "[Added Lines]",
          "706:  l_tile->x0 = (OPJ_INT32)opj_uint_max(l_tx0, l_image->x0);",
          "707:  l_tile->x1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(l_tx0, l_cp->tdx), l_image->x1);",
          "709:  l_tile->y0 = (OPJ_INT32)opj_uint_max(l_ty0, l_image->y0);",
          "710:  l_tile->y1 = (OPJ_INT32)opj_uint_min(opj_uint_adds(l_ty0, l_cp->tdy), l_image->y1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7247543da37bea539149f3391a529e5a0739beff",
      "candidate_info": {
        "commit_hash": "7247543da37bea539149f3391a529e5a0739beff",
        "repo": "uclouvain/openjpeg",
        "commit_url": "https://github.com/uclouvain/openjpeg/commit/7247543da37bea539149f3391a529e5a0739beff",
        "files": [
          "src/lib/openjp2/tcd.c"
        ],
        "message": "[trunk] Import patch from sumatrapdf team. This handle testcase 1888.pdf.asan.35.988 Update issue 225",
        "before_after_code_files": [
          "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ],
          "candidate": [
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c": [
          "File: src/lib/openjp2/tcd.c -> src/lib/openjp2/tcd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "663:         l_tile->y0 = opj_int_max(l_cp->ty0 + q * l_cp->tdy, l_image->y0);                                                                                                                                             \\",
          "664:         l_tile->x1 = opj_int_min(l_cp->tx0 + (p + 1) * l_cp->tdx, l_image->x1);                                                                                                                                       \\",
          "665:         l_tile->y1 = opj_int_min(l_cp->ty0 + (q + 1) * l_cp->tdy, l_image->y1);                                                                                                                                       \\",
          "667:                                                                     \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "667:         if (l_tccp->numresolutions == 0) { \\",
          "668:             fprintf(stderr, \"tiles require at least one resolution\\n\"); \\",
          "669:             return OPJ_FALSE; \\",
          "670:         } \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d72940c56b542799024f3c304187386866052651",
      "candidate_info": {
        "commit_hash": "d72940c56b542799024f3c304187386866052651",
        "repo": "uclouvain/openjpeg",
        "commit_url": "https://github.com/uclouvain/openjpeg/commit/d72940c56b542799024f3c304187386866052651",
        "files": [
          "src/lib/openjp2/tcd.c"
        ],
        "message": "[trunk] resets code-blocks reused for other tiles than the first one (fixes issue 418)",
        "before_after_code_files": [
          "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/openjp2/tcd.c||src/lib/openjp2/tcd.c"
          ],
          "candidate": [
            "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/openjp2/tcd.c||src/liopenjp2/tcd.c": [
          "File: src/lib/openjp2/tcd.c -> src/liopenjp2/tcd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "970:                                                 OPJ_INT32 cblkxend = cblkxstart + (1 << cblkwidthexpn);                                                                                                           \\",
          "971:                                                 OPJ_INT32 cblkyend = cblkystart + (1 << cblkheightexpn);                                                                                                          \\",
          "972:                                                                                                                                                                                                                   \\",
          "974:                                                 l_code_block->x0 = opj_int_max(cblkxstart, l_current_precinct->x0);                                                                                                   \\",
          "975:                                                 l_code_block->y0 = opj_int_max(cblkystart, l_current_precinct->y0);                                                                                                   \\",
          "976:                                                 l_code_block->x1 = opj_int_min(cblkxend, l_current_precinct->x1);                                                                                                     \\",
          "977:                                                 l_code_block->y1 = opj_int_min(cblkyend, l_current_precinct->y1);                                                                                                     \\",
          "982:                                                 ++l_code_block;                                                                                                                                                   \\",
          "983:                                         }                                                                                                                                                                         \\",
          "984:                                         ++l_current_precinct;                                                                                                                                                     \\",
          "",
          "[Removed Lines]",
          "978:                                                                                                                                                                                                                   \\",
          "979:                                                 if (! FUNCTION_ELEMENT(l_code_block)) {                                                                                                                           \\",
          "980:                                                         return OPJ_FALSE;                                                                                                                                         \\",
          "981:                                                 }                                                                                                                                                                 \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1055:                 p_code_block->m_current_max_segs = OPJ_J2K_DEFAULT_NB_SEGS;",
          "1061:         return OPJ_TRUE;",
          "1062: }",
          "",
          "[Removed Lines]",
          "1057:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}