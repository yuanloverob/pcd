{
  "cve_id": "CVE-2012-2797",
  "cve_desc": "Unspecified vulnerability in the decode_frame_mp3on4 function in libavcodec/mpegaudiodec.c in FFmpeg before 0.11 and Libav 0.8.x before 0.8.5 has unknown impact and attack vectors related to a calculation that prevents a frame from being \"large enough.\"",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "cca9528524c7a4b91451f4322bd50849af5d057e",
  "patch_info": {
    "commit_hash": "cca9528524c7a4b91451f4322bd50849af5d057e",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/cca9528524c7a4b91451f4322bd50849af5d057e",
    "files": [
      "libavcodec/mpegaudiodec.c"
    ],
    "message": "mp3on4: allocate a large enough frame.\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/mpegaudiodec.c||libavcodec/mpegaudiodec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/mpegaudiodec.c||libavcodec/mpegaudiodec.c": [
      "File: libavcodec/mpegaudiodec.c -> libavcodec/mpegaudiodec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1898:     int fr, j, n, ch, ret;",
      "1902:     if ((ret = avctx->get_buffer(avctx, s->frame)) < 0) {",
      "1903:         av_log(avctx, AV_LOG_ERROR, \"get_buffer() failed\\n\");",
      "1904:         return ret;",
      "",
      "[Removed Lines]",
      "1901:     s->frame->nb_samples = MPA_FRAME_SIZE;",
      "",
      "[Added Lines]",
      "1901:     s->frame->nb_samples = s->frames * MPA_FRAME_SIZE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "53c8443ad2376a50c76e5d7c69435bd01b0abc42",
      "candidate_info": {
        "commit_hash": "53c8443ad2376a50c76e5d7c69435bd01b0abc42",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/53c8443ad2376a50c76e5d7c69435bd01b0abc42",
        "files": [
          "libavcodec/mpegaudiodec.c"
        ],
        "message": "mp3on4: ensure that the frame channel count does not exceed the codec channel count.\n\nThis also allows for checking output data size based on the actual\nnumber of channel instead of the maximum number of channels.",
        "before_after_code_files": [
          "libavcodec/mpegaudiodec.c||libavcodec/mpegaudiodec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mpegaudiodec.c||libavcodec/mpegaudiodec.c"
          ],
          "candidate": [
            "libavcodec/mpegaudiodec.c||libavcodec/mpegaudiodec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mpegaudiodec.c||libavcodec/mpegaudiodec.c": [
          "File: libavcodec/mpegaudiodec.c -> libavcodec/mpegaudiodec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2016:     uint32_t header;",
          "2017:     OUT_INT *out_samples = data;",
          "2018:     OUT_INT *outptr, *bp;",
          "",
          "[Removed Lines]",
          "2019:     int fr, j, n;",
          "2021:     if(*data_size < MPA_FRAME_SIZE * MPA_MAX_CHANNELS * s->frames * sizeof(OUT_INT))",
          "2022:         return -1;",
          "",
          "[Added Lines]",
          "2019:     int fr, j, n, ch;",
          "2021:     if (*data_size < MPA_FRAME_SIZE * avctx->channels * sizeof(OUT_INT)) {",
          "2022:         av_log(avctx, AV_LOG_ERROR, \"output buffer is too small\\n\");",
          "2023:         return AVERROR(EINVAL);",
          "2024:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2032:     avctx->bit_rate = 0;",
          "2034:     for (fr = 0; fr < s->frames; fr++) {",
          "2035:         fsize = AV_RB16(buf) >> 4;",
          "2036:         fsize = FFMIN3(fsize, len, MPA_MAX_CODED_FRAME_SIZE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2036:     ch = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2043:             break;",
          "2045:         avpriv_mpegaudio_decode_header((MPADecodeHeader *)m, header);",
          "2046:         out_size += mp_decode_frame(m, outptr, buf, fsize);",
          "2047:         buf += fsize;",
          "2048:         len -= fsize;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2050:         if (ch + m->nb_channels > avctx->channels) {",
          "2051:             av_log(avctx, AV_LOG_ERROR, \"frame channel count exceeds codec \"",
          "2052:                                         \"channel count\\n\");",
          "2053:             return AVERROR_INVALIDDATA;",
          "2054:         }",
          "2055:         ch += m->nb_channels;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4e0738cec9df382ed1edee26effe0b40ea22a3cd",
      "candidate_info": {
        "commit_hash": "4e0738cec9df382ed1edee26effe0b40ea22a3cd",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/4e0738cec9df382ed1edee26effe0b40ea22a3cd",
        "files": [
          "libavcodec/mpegaudiodec.c"
        ],
        "message": "mpegaudiodec/mp3on4: fix buffer size.\n\nThe larger (and really ugly) size is not needed anymore.\n\nFound-by: Justin Ruggles\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/mpegaudiodec.c||libavcodec/mpegaudiodec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/mpegaudiodec.c||libavcodec/mpegaudiodec.c"
          ],
          "candidate": [
            "libavcodec/mpegaudiodec.c||libavcodec/mpegaudiodec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/mpegaudiodec.c||libavcodec/mpegaudiodec.c": [
          "File: libavcodec/mpegaudiodec.c -> libavcodec/mpegaudiodec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1934:     int fr, ch, ret;",
          "1938:     if ((ret = ff_get_buffer(avctx, s->frame)) < 0) {",
          "1939:         av_log(avctx, AV_LOG_ERROR, \"get_buffer() failed\\n\");",
          "1940:         return ret;",
          "",
          "[Removed Lines]",
          "1937:     s->frame->nb_samples = s->frames * MPA_FRAME_SIZE;",
          "",
          "[Added Lines]",
          "1937:     s->frame->nb_samples = MPA_FRAME_SIZE;",
          "",
          "---------------"
        ]
      }
    }
  ]
}