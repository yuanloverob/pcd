{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9f8c0282216be13e2cd32fedc9504d9fc7b7abb5",
      "candidate_info": {
        "commit_hash": "9f8c0282216be13e2cd32fedc9504d9fc7b7abb5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9f8c0282216be13e2cd32fedc9504d9fc7b7abb5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "src/global.c",
          "src/main.c",
          "src/os.c",
          "src/shell.c.in",
          "src/sqlite.h.in",
          "src/sqliteInt.h",
          "src/test1.c",
          "test/dbfuzz2.c",
          "test/fuzzcheck.c"
        ],
        "message": "Add the SQLITE_TESTCTRL_PRNG_SEED which can control the PRNG seed either directly or through the schema cookie of a supplied database connection.\n\nFossilOrigin-Name: 2660e9292ae2c229eb7c57a6a79bb19f0c970072f86750fbe9cca3113d44ffe4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "src/global.c||src/global.c",
          "src/main.c||src/main.c",
          "src/os.c||src/os.c",
          "src/shell.c.in||src/shell.c.in",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/test1.c||src/test1.c",
          "test/dbfuzz2.c||test/dbfuzz2.c",
          "test/fuzzcheck.c||test/fuzzcheck.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: faaaae4940b5f4f70e4988ad5b45582410b381ace0031e6abcde0b9217c06796",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6897:   assert( i<iEnd );",
          "6898:   j = get2byte(&aData[hdr+5]);",
          "6900:   memcpy(&pTmp[j], &aData[j], usableSize - j);",
          "6902:   for(k=0; pCArray->ixNx[k]<=i && ALWAYS(k<NB*2); k++){}",
          "",
          "[Removed Lines]",
          "6899:   if( NEVER(j>(u32)usableSize) ){ j = 0; }",
          "",
          "[Added Lines]",
          "6899:   if( j>(u32)usableSize ){ j = 0; }",
          "",
          "---------------"
        ],
        "src/global.c||src/global.c": [
          "File: src/global.c -> src/global.c"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3824:       break;",
          "3825:     }",
          "3833:       sqlite3_randomness(0,0);",
          "3834:       break;",
          "3835:     }",
          "",
          "[Removed Lines]",
          "3832:     case SQLITE_TESTCTRL_PRNG_RESET: {",
          "",
          "[Added Lines]",
          "3847:     case SQLITE_TESTCTRL_PRNG_SEED: {",
          "3848:       int x = va_arg(ap, int);",
          "3849:       int y;",
          "3850:       sqlite3 *db = va_arg(ap, sqlite3*);",
          "3851:       assert( db==0 || db->aDb[0].pSchema!=0 );",
          "3852:       if( db && (y = db->aDb[0].pSchema->schema_cookie)!=0 ){ x = y; }",
          "3853:       sqlite3Config.iPrngSeed = x;",
          "",
          "---------------"
        ],
        "src/os.c||src/os.c": [
          "File: src/os.c -> src/os.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "258: }",
          "260: int sqlite3OsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){",
          "262: }",
          "263: int sqlite3OsSleep(sqlite3_vfs *pVfs, int nMicro){",
          "264:   return pVfs->xSleep(pVfs, nMicro);",
          "",
          "[Removed Lines]",
          "261:   return pVfs->xRandomness(pVfs, nByte, zBufOut);",
          "",
          "[Added Lines]",
          "261:   if( sqlite3Config.iPrngSeed ){",
          "262:     memset(zBufOut, 0, nByte);",
          "263:     if( ALWAYS(nByte>sizeof(unsigned)) ) nByte = sizeof(unsigned int);",
          "264:     memcpy(zBufOut, &sqlite3Config.iPrngSeed, nByte);",
          "265:     return SQLITE_OK;",
          "266:   }else{",
          "267:     return pVfs->xRandomness(pVfs, nByte, zBufOut);",
          "268:   }",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "9150:       { \"parser_coverage\",    SQLITE_TESTCTRL_PARSER_COVERAGE, \"\"                 },",
          "9151: #endif",
          "9152:       { \"pending_byte\",       SQLITE_TESTCTRL_PENDING_BYTE,  \"OFFSET  \"           },",
          "9154:       { \"prng_restore\",       SQLITE_TESTCTRL_PRNG_RESTORE,  \"\"                   },",
          "9155:       { \"prng_save\",          SQLITE_TESTCTRL_PRNG_SAVE,     \"\"                   },",
          "9156:       { \"reserve\",            SQLITE_TESTCTRL_RESERVE,       \"BYTES-OF-RESERVE\"   },",
          "9157:     };",
          "9158:     int testctrl = -1;",
          "",
          "[Removed Lines]",
          "9153:       { \"prng_reset\",         SQLITE_TESTCTRL_PRNG_RESET,    \"\"                   },",
          "",
          "[Added Lines]",
          "9155:       { \"prng_seed\",          SQLITE_TESTCTRL_PRNG_SEED,     \"SEED ?db?\"          },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9234:           }",
          "9235:           break;",
          "9238:         case SQLITE_TESTCTRL_ASSERT:",
          "9239:         case SQLITE_TESTCTRL_ALWAYS:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9238:         case SQLITE_TESTCTRL_PRNG_SEED:",
          "9239:           if( nArg==3 || nArg==4 ){",
          "9240:             int i = (int)integerValue(azArg[2]);",
          "9241:             sqlite3 *db;",
          "9242:             if( nArg==3 ){",
          "9243:               db = 0;",
          "9244:             }else{",
          "9245:               db = p->db;",
          "9247:               sqlite3_table_column_metadata(db, 0, \"x\", 0, 0, 0, 0, 0, 0);",
          "9248:             }",
          "9249:             rc2 = sqlite3_test_control(testctrl, i, db);",
          "9250:             isOk = 3;",
          "9251:           }",
          "9252:           break;",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "7335: #define SQLITE_TESTCTRL_FIRST                    5",
          "7336: #define SQLITE_TESTCTRL_PRNG_SAVE                5",
          "7337: #define SQLITE_TESTCTRL_PRNG_RESTORE             6",
          "7339: #define SQLITE_TESTCTRL_BITVEC_TEST              8",
          "7340: #define SQLITE_TESTCTRL_FAULT_INSTALL            9",
          "7341: #define SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS     10",
          "",
          "[Removed Lines]",
          "7338: #define SQLITE_TESTCTRL_PRNG_RESET               7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7358: #define SQLITE_TESTCTRL_IMPOSTER                25",
          "7359: #define SQLITE_TESTCTRL_PARSER_COVERAGE         26",
          "7360: #define SQLITE_TESTCTRL_RESULT_INTREAL          27",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7361: #define SQLITE_TESTCTRL_PRNG_SEED               28",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h"
        ],
        "src/test1.c||src/test1.c": [
          "File: src/test1.c -> src/test1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6375: ){",
          "6377:   return TCL_OK;",
          "6378: }",
          "",
          "[Removed Lines]",
          "6376:   sqlite3_test_control(SQLITE_TESTCTRL_PRNG_RESET);",
          "",
          "[Added Lines]",
          "6376:   sqlite3_randomness(0,0);",
          "6377:   return TCL_OK;",
          "6378: }",
          "6394: static int SQLITE_TCLAPI prng_seed(",
          "6399: ){",
          "6400:   int i = 0;",
          "6401:   sqlite3 *db = 0;",
          "6402:   if( objc!=2 && objc!=3 ){",
          "6403:     Tcl_WrongNumArgs(interp, 1, objv, \"SEED ?DB?\");",
          "6404:     return TCL_ERROR;",
          "6405:   }",
          "6406:   if( Tcl_GetIntFromObj(interp,objv[0],&i) ) return TCL_ERROR;",
          "6407:   if( objc==3 && getDbPointer(interp, Tcl_GetString(objv[2]), &db) ){",
          "6408:     return TCL_ERROR;",
          "6409:   }",
          "6410:   sqlite3_test_control(SQLITE_TESTCTRL_PRNG_SEED, i, db);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7923:      { \"save_prng_state\",               save_prng_state,    0 },",
          "7924:      { \"restore_prng_state\",            restore_prng_state, 0 },",
          "7925:      { \"reset_prng_state\",              reset_prng_state,   0 },",
          "7926:      { \"database_never_corrupt\",        database_never_corrupt, 0},",
          "7927:      { \"database_may_be_corrupt\",       database_may_be_corrupt, 0},",
          "7928:      { \"optimization_control\",          optimization_control,0},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7960:      { \"prng_seed\",                     prng_seed,          0 },",
          "",
          "---------------"
        ],
        "test/dbfuzz2.c||test/dbfuzz2.c": [
          "File: test/dbfuzz2.c -> test/dbfuzz2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:   if( mxCb>0 ){",
          "212:     sqlite3_progress_handler(db, 10, progress_handler, 0);",
          "213:   }",
          "214:   for(i=0; i<sizeof(azSql)/sizeof(azSql[0]); i++){",
          "215:     if( eVerbosity>=1 ){",
          "216:       printf(\"%s\\n\", azSql[i]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214: #ifdef SQLITE_TESTCTRL_PRNG_SEED",
          "215:   sqlite3_test_control(SQLITE_TESTCTRL_PRNG_SEED, 1, db);",
          "216: #endif",
          "",
          "---------------"
        ],
        "test/fuzzcheck.c||test/fuzzcheck.c": [
          "File: test/fuzzcheck.c -> test/fuzzcheck.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1805:             sqlite3_progress_handler(db, 100000, progressHandler,",
          "1806:                                      &vdbeLimitFlag);",
          "1807:           }",
          "1808: #endif",
          "1809:           do{",
          "1810:             runSql(db, (char*)pSql->a, runFlags);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1808: #endif",
          "1809: #ifdef SQLITE_TESTCTRL_PRNG_SEED",
          "1810:           sqlite3_test_control(SQLITE_TESTCTRL_PRNG_SEED, 1, db);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ac4085bc2c018c430c3f7d5bd21a5ad6bb64eabb",
      "candidate_info": {
        "commit_hash": "ac4085bc2c018c430c3f7d5bd21a5ad6bb64eabb",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ac4085bc2c018c430c3f7d5bd21a5ad6bb64eabb",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/view.test"
        ],
        "message": "Fix a problem where self-joins on views that are aggregate queries may return the wrong result.\n\nFossilOrigin-Name: 74ef97bf51dd531a277cf22fa4d42043d93799d5a5bd550812648834460fe0b7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/view.test||test/view.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9b5d943426c9273162ecb4c561eb3b25e843318dd438239c882c9db50f788454",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5482:       continue;",
          "5483:     }",
          "5487:       continue;",
          "",
          "[Removed Lines]",
          "5484:     if( sqlite3ExprCompare(0, pThis->pSelect->pWhere, pS1->pWhere, -1) ){",
          "",
          "[Added Lines]",
          "5484:     if( sqlite3ExprCompare(0, pThis->pSelect->pWhere, pS1->pWhere, -1)",
          "5485:      || sqlite3ExprCompare(0, pThis->pSelect->pHaving, pS1->pHaving, -1)",
          "5486:     ){",
          "",
          "---------------"
        ],
        "test/view.test||test/view.test": [
          "File: test/view.test -> test/view.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "701:   set log",
          "702: } $res",
          "704: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "704: #-------------------------------------------------------------------------",
          "705: do_execsql_test view-26.0 {",
          "706:   CREATE TABLE t16(a, b, c UNIQUE);",
          "707:   INSERT INTO t16 VALUES(1, 1, 1);",
          "708:   INSERT INTO t16 VALUES(2, 2, 2);",
          "709:   INSERT INTO t16 VALUES(3, 3, 3);",
          "710:   CREATE VIEW v16 AS SELECT max(a) AS mx, min(b) AS mn FROM t16 GROUP BY c;",
          "712:   SELECT * FROM v16 AS one, v16 AS two WHERE one.mx=1;",
          "713: } {",
          "714:   1 1 1 1",
          "715:   1 1 2 2",
          "716:   1 1 3 3",
          "717: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d2d71a02cac0e4a13d54ae1bd3b3351abbf9828",
      "candidate_info": {
        "commit_hash": "1d2d71a02cac0e4a13d54ae1bd3b3351abbf9828",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1d2d71a02cac0e4a13d54ae1bd3b3351abbf9828",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Mark a single branch as no longer reachable.\n\nFossilOrigin-Name: 4f35b3b78a461b0617a5cd04f60d2ab277bcc7c994dae463851a3cb5d041a723",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6cf16703fd4a835c249c947006ae4a4bf81873c8ca1803945453c9845f882dc1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c"
        ]
      }
    },
    {
      "candidate_hash": "dcc2700d7e1c0e4fc885dffbc4406bdc1e4c4e9b",
      "candidate_info": {
        "commit_hash": "dcc2700d7e1c0e4fc885dffbc4406bdc1e4c4e9b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/dcc2700d7e1c0e4fc885dffbc4406bdc1e4c4e9b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "The page size becomes fixed as soon as page1 from a non-empty database file is read.\n\nFossilOrigin-Name: 6064584d578f0ac7aba3f67912a5d9eb1a3c6001469f6b9becbe68871131f887",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a874c649960ba2e2b2fd380d08c02a45884a1060d3922be8847729008ca6766e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3100:     ){",
          "3101:       goto page1_init_failed;",
          "3102:     }",
          "3103:     assert( (pageSize & 7)==0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3103:     pBt->btsFlags |= BTS_PAGESIZE_FIXED;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c19e22f397958a29a549639d66b825cf9b8379ea",
      "candidate_info": {
        "commit_hash": "c19e22f397958a29a549639d66b825cf9b8379ea",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c19e22f397958a29a549639d66b825cf9b8379ea",
        "files": [
          "ext/fts5/fts5_expr.c",
          "ext/fts5/test/fts5eb.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix possible null pointer dereferences in the fts5_expr() scalar function.\n\nFossilOrigin-Name: c5d44143599f3fe98492b2b900fa3d77925c7be545096251055ceeab899a41f1",
        "before_after_code_files": [
          "ext/fts5/fts5_expr.c||ext/fts5/fts5_expr.c",
          "ext/fts5/test/fts5eb.test||ext/fts5/test/fts5eb.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_expr.c||ext/fts5/fts5_expr.c": [
          "File: ext/fts5/fts5_expr.c -> ext/fts5/fts5_expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2516:   azConfig[1] = \"main\";",
          "2517:   azConfig[2] = \"tbl\";",
          "2518:   for(i=3; iArg<nArg; iArg++){",
          "2520:   }",
          "2522:   zExpr = (const char*)sqlite3_value_text(apVal[0]);",
          "2524:   rc = sqlite3Fts5ConfigParse(pGlobal, db, nConfig, azConfig, &pConfig, &zErr);",
          "2525:   if( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "2519:     azConfig[i++] = (const char*)sqlite3_value_text(apVal[iArg]);",
          "",
          "[Added Lines]",
          "2519:     const char *z = (const char*)sqlite3_value_text(apVal[iArg]);",
          "2520:     azConfig[i++] = (z ? z : \"\");",
          "2524:   if( zExpr==0 ) zExpr = \"\";",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5eb.test||ext/fts5/test/fts5eb.test": [
          "File: ext/fts5/test/fts5eb.test -> ext/fts5/test/fts5eb.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:   SELECT fts5_expr()",
          "60: } {1 {wrong number of arguments to function fts5_expr}}",
          "63:   SELECT fts5_expr_tcl()",
          "64: } {1 {wrong number of arguments to function fts5_expr_tcl}}",
          "67: do_execsql_test 3.0 {",
          "68:   CREATE VIRTUAL TABLE e1 USING fts5(text, tokenize = 'porter unicode61');",
          "",
          "[Removed Lines]",
          "62: do_catchsql_test 2.1 {",
          "",
          "[Added Lines]",
          "62: do_catchsql_test 2.2 {",
          "66: do_catchsql_test 2.3 {",
          "67:   SELECT fts5_expr('')",
          "68: } {1 {fts5: syntax error near \"\"}}",
          "70: do_catchsql_test 2.4 {",
          "71:   SELECT fts5_expr(NULL)",
          "72: } {1 {fts5: syntax error near \"\"}}",
          "74: do_catchsql_test 2.5 {",
          "75:   SELECT fts5_expr(NULL, NULL)",
          "76: } {1 {parse error in \"\"}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9d75e1ccc72e9f536f45df3b24e9ecd25076cc1f7cf16b806b19e0e1b68e8326",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}