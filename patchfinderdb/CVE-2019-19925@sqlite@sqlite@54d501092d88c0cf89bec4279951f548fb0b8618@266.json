{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2a71b17f2f879d89cb2dd5e6515d28e87d0fc316",
      "candidate_info": {
        "commit_hash": "2a71b17f2f879d89cb2dd5e6515d28e87d0fc316",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2a71b17f2f879d89cb2dd5e6515d28e87d0fc316",
        "files": [
          "ext/fts5/fts5_vocab.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a problem with corrupt db handling in the fts5_vocab module.\n\nFossilOrigin-Name: 456ced57774a92acff23cad975b78ff0e5cbbf5204ea48599fe1761a018a92e4",
        "before_after_code_files": [
          "ext/fts5/fts5_vocab.c||ext/fts5/fts5_vocab.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_vocab.c||ext/fts5/fts5_vocab.c": [
          "File: ext/fts5/fts5_vocab.c -> ext/fts5/fts5_vocab.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "573:   }",
          "575:   if( rc==SQLITE_OK && pCsr->bEof==0 && pTab->eType==FTS5_VOCAB_COL ){",
          "578:   }",
          "579:   return rc;",
          "580: }",
          "",
          "[Removed Lines]",
          "576:     while( pCsr->aDoc[pCsr->iCol]==0 ) pCsr->iCol++;",
          "577:     assert( pCsr->iCol<pCsr->pFts5->pConfig->nCol );",
          "",
          "[Added Lines]",
          "576:     for(/* noop */; pCsr->iCol<nCol && pCsr->aDoc[pCsr->iCol]==0; pCsr->iCol++);",
          "577:     if( pCsr->iCol==nCol ){",
          "578:       rc = FTS5_CORRUPT;",
          "579:     }",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "8753:   SELECT (matchinfo(t1,591)) FROM t1 WHERE t1 MATCH 'e*e\u009f'",
          "8754: } {0 {}}",
          "8756: sqlite3_fts5_may_be_corrupt 0",
          "8757: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8756: #-------------------------------------------------------------------------",
          "8757: do_test 61.0 {",
          "8758:   sqlite3 db {}",
          "8759:   db deserialize [decode_hexdb {",
          "8760: .open --hexdb",
          "8761: | size 28672 pagesize 4096 filename crash-e5fa281edabddf.db",
          "8762: | page 1 offset 0",
          "8763: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "8764: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "8765: |     96: 00 00 00 00 0d 0f c7 00 06 0d b6 00 0f 8d 0f 36   ...............6",
          "8766: |    112: 0e cb 0e 6b 0e 0e 0d b6 00 00 00 00 00 00 00 00   ...k............",
          "8767: |   3504: 00 00 00 00 00 00 56 07 06 17 1f 1f 01 7d 74 61   ......V.......ta",
          "8768: |   3520: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "8769: |   3536: 6f 6e 66 69 67 07 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "8770: |   3552: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "8771: |   3568: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "8772: |   3584: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 06    WITHOUT ROWID[.",
          "8773: |   3600: 07 17 21 21 01 81 01 74 51 62 6c 65 74 31 5f 64   ..!!...tQblet1_d",
          "8774: |   3616: 6f 63 73 69 7a 65 74 31 5f 63 6f 63 73 69 7a 65   ocsizet1_cocsize",
          "8775: |   3632: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "8776: |   3648: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "8777: |   3664: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "8778: |   3680: 59 2c 20 73 7a 20 42 4c 4f 42 29 5e 05 07 17 21   Y, sz BLOB)^...!",
          "8779: |   3696: 21 01 81 07 74 61 62 6c 65 74 31 5f 63 6f 6e 74   !...tablet1_cont",
          "8780: |   3712: 65 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 05 43 52   entt1_content.CR",
          "8781: |   3728: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63   EATE TABLE 't1_c",
          "8782: |   3744: 6f 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47   ontent'(id INTEG",
          "8783: |   3760: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "8784: |   3776: 63 30 2c 20 63 31 2c 20 63 32 29 69 04 07 17 19   c0, c1, c2)i....",
          "8785: |   3792: 19 01 81 2d 74 61 62 6c 65 74 31 5f 69 64 78 74   ...-tablet1_idxt",
          "8786: |   3808: 31 5f 69 64 78 04 43 52 45 41 54 45 20 54 41 42   1_idx.CREATE TAB",
          "8787: |   3824: 4c 45 20 27 74 31 5f 69 64 78 27 28 73 65 67 69   LE 't1_idx'(segi",
          "8788: |   3840: 64 2c 20 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50   d, term, pgno, P",
          "8789: |   3856: 52 49 4d 41 52 59 20 4b 45 59 28 73 65 67 69 64   RIMARY KEY(segid",
          "8790: |   3872: 2c 20 74 65 72 6d 29 29 20 57 49 54 48 4f 55 54   , term)) WITHOUT",
          "8791: |   3888: 20 52 4f 57 49 44 55 03 07 17 1b 1b 01 81 01 74    ROWIDU........t",
          "8792: |   3904: 61 62 6c 65 74 31 5f 64 61 74 61 74 31 5f 64 61   ablet1_datat1_da",
          "8793: |   3920: 74 61 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   ta.CREATE TABLE",
          "8794: |   3936: 27 74 31 5f 64 61 74 61 27 28 69 64 20 49 4e 54   't1_data'(id INT",
          "8795: |   3952: 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59   EGER PRIMARY KEY",
          "8796: |   3968: 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42 29 38 02 06   , block BLOB)8..",
          "8797: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 ea 74 31 43 52   ...._tablet.t1CR",
          "8798: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "8799: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 35   LE t1 USING fts5",
          "8800: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "8801: | page 3 offset 8192",
          "8802: |      0: 0d 00 00 00 03 0c 94 00 0f e6 0f ef 0c 94 00 00   ................",
          "8803: |   3216: 00 00 00 00 86 4a 84 80 80 80 80 01 04 00 8d 18   .....J..........",
          "8804: |   3232: 00 00 03 2b 02 30 30 01 02 06 01 02 06 01 02 06   ...+.00.........",
          "8805: |   3248: 1f 02 13 01 02 03 01 02 03 01 08 32 30 31 36 30   ...........20160",
          "8806: |   3264: 36 30 39 01 02 07 01 02 07 01 02 07 01 01 34 01   609...........4.",
          "8807: |   3280: 02 05 01 02 05 01 02 05 01 01 35 01 02 04 01 02   ..........5.....",
          "8808: |   3296: 04 01 02 04 02 07 30 30 30 30 30 30 30 1c 02 04   ......0000000...",
          "8809: |   3312: 01 02 04 01 02 04 01 06 62 69 6e 61 72 79 03 06   ........binary..",
          "8810: |   3328: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "8811: |   3344: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "8812: |   3360: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "8813: |   3376: 03 06 01 02 02 03 06 01 02 02 01 08 63 6f 6d 70   ............comp",
          "8814: |   3392: 69 6c 65 72 01 02 02 01 02 02 01 02 02 01 06 64   iler...........d",
          "8815: |   3408: 62 73 74 61 74 07 02 03 01 02 03 01 02 03 02 04   bstat...........",
          "8816: |   3424: 65 62 75 67 04 02 02 01 02 02 01 02 02 01 06 65   ebug...........e",
          "8817: |   3440: 6e 61 62 6c 65 07 02 02 01 02 02 01 02 02 01 02   nable...........",
          "8818: |   3456: 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02   ................",
          "8819: |   3472: 01 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01   ................",
          "8820: |   3488: 02 02 01 02 02 01 02 02 01 02 02 01 02 02 01 02   ................",
          "8821: |   3504: 02 01 02 02 02 08 78 74 65 6e 73 69 6f 6e 1f 02   ......xtension..",
          "8822: |   3520: 04 01 02 04 01 02 04 01 04 66 74 73 34 0a 02 03   .........fts4...",
          "8823: |   3536: 01 02 03 01 02 03 04 01 35 0d 02 03 01 02 03 01   ........5.......",
          "8824: |   3552: 02 03 01 03 67 63 63 01 02 03 01 02 03 01 02 03   ....gcc.........",
          "8825: |   3568: 02 06 65 6f 70 6f 6c 79 10 02 03 01 02 03 01 02   ..eopoly........",
          "8826: |   3584: 03 01 05 6a 73 6f 6e 31 13 02 03 01 02 03 01 02   ...json1........",
          "8827: |   3600: 03 01 04 6c 6f 61 64 1f 02 03 01 02 03 01 02 03   ...load.........",
          "8828: |   3616: 01 03 6d 61 78 1c 02 02 01 02 02 01 02 02 02 05   ..max...........",
          "8829: |   3632: 65 6d 6f 72 79 1c 02 03 01 02 03 01 02 03 04 04   emory...........",
          "8830: |   3648: 73 79 73 35 16 02 03 01 02 03 11 02 03 01 06 6e   sys5...........n",
          "8831: |   3664: 6f 63 61 73 65 02 06 01 02 02 03 06 01 02 02 03   ocase...........",
          "8832: |   3680: 06 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06   ................",
          "8833: |   3696: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "8834: |   3712: 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02   ................",
          "8835: |   3728: 02 01 04 6f 6d 69 74 1f 02 02 01 02 02 01 02 02   ...omit.........",
          "8836: |   3744: 01 05 72 74 72 65 65 19 02 03 01 02 03 01 02 03   ..rtree.........",
          "8837: |   3760: 04 02 69 6d 01 06 01 02 02 03 06 01 02 02 03 06   ..im............",
          "8838: |   3776: 01 02 02 03 06 01 02 02 03 06 01 02 02 03 06 01   ................",
          "8839: |   3792: 02 02 03 06 01 02 02 03 06 01 02 01 13 05 01 02   ................",
          "8840: |   3808: 02 03 06 01 02 02 03 06 01 02 02 03 06 01 02 02   ................",
          "8841: |   3824: 01 0a 74 68 72 65 61 64 73 61 66 65 22 02 02 01   ..threadsafe....",
          "8842: |   3840: 02 02 01 01 02 01 04 76 74 61 62 07 02 04 01 02   .......vtab.....",
          "8843: |   3856: 04 01 02 04 01 01 78 01 06 01 01 02 01 06 01 01   ......x.........",
          "8844: |   3872: 02 0e 16 01 01 02 01 06 01 01 02 01 06 01 02 02   ................",
          "8845: |   3888: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "8846: |   3904: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "8847: |   3920: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01   ................",
          "8848: |   3936: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "8849: |   3952: 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02   ................",
          "8850: |   3968: 01 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01   ................",
          "8851: |   3984: 06 01 01 02 01 06 01 01 02 01 06 01 01 02 01 06   ................",
          "8852: |   4000: 01 01 02 01 06 01 01 02 01 06 01 01 02 01 07 01   ................",
          "8853: |   4016: 01 02 01 06 01 01 02 01 06 01 01 02 01 06 01 01   ................",
          "8854: |   4032: 02 01 06 01 01 02 01 06 01 01 02 04 15 13 0c 0c   ................",
          "8855: |   4048: 12 44 13 11 0f 47 13 0f 0c 0e 11 10 0f 0e 10 0f   .D...G..........",
          "8856: |   4064: 44 0f 10 40 15 0f 07 01 03 00 14 24 5a 24 24 0f   D..@.......$Z$$.",
          "8857: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "8858: | page 4 offset 12288",
          "8859: |      0: 0a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "8860: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "8861: | page 5 offset 16384",
          "8862: |      0: 0d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "8863: |   3072: 00 00 00 00 00 00 00 00 00 00 18 24 05 00 25 0f   ...........$..%.",
          "8864: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "8865: |   3104: 4e 41 52 59 18 e2 05 00 25 0f 19 54 48 52 45 41   NARY....%..THREA",
          "8866: |   3120: 44 53 41 46 45 3d 30 58 4e 4f 43 41 53 45 17 22   DSAFE=0XNOCASE..",
          "8867: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 45 3d   ..%..THREADSAFE=",
          "8868: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "8869: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49 4f   IT LOAD EXTENSIO",
          "8870: |   3184: 4e 58 42 49 4e 40 52 59 1f 20 05 00 33 0f 19 4f   NXBIN@RY. ..3..O",
          "8871: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "8872: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "8873: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "8874: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "8875: |   3264: 4d 41 58 20 4e 45 4d 4f 52 59 3d 35 30 30 30 30   MAX NEMORY=50000",
          "8876: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "8877: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 45 30 30 30   .MAX MEMORY=E000",
          "8878: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 33   0000XNOCASE....3",
          "8879: |   3328: 0f 17 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MAX MEMORY=500",
          "8880: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "8881: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "8882: |   3376: 49 4e 41 52 59 18 1a 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "8883: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 43 41 53 45 17   LE RTREEXNOCASE.",
          "8884: |   3408: 19 05 00 25 0f 17 45 4e 41 42 4c 45 20 20 54 52   ...%..ENABLE  TR",
          "8885: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "8886: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "8887: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "8888: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "8889: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "8890: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 15 05 00 25   MSYS5XRTRIM....%",
          "8891: |   3520: 0f 19 45 4e 41 42 4c 45 20 4a 53 4f 4e 31 58 42   ..ENABLE JSON1XB",
          "8892: |   3536: 49 4e 41 52 59 18 14 05 00 25 0f 19 45 4e 41 42   INARY....%..ENAB",
          "8893: |   3552: 4c 45 20 4a 53 4f 4e 31 58 4e 4f 43 41 53 45 17   LE JSON1XNOCASE.",
          "8894: |   3568: 13 05 00 25 0f 17 45 4e 41 42 4c 45 20 4a 53 4f   ...%..ENABLE JSO",
          "8895: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 00 29 0f 19 45   N1XRTRIM....)..E",
          "8896: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "8897: |   3616: 4e 41 52 59 1a 11 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "8898: |   3632: 45 20 47 45 4f 50 4f 4c 59 58 4e 4f 43 41 53 45   E GEOPOLYXNOCASE",
          "8899: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "8900: |   3664: 4f 50 4f 4c 59 58 52 54 52 49 4d 17 0f 05 00 23   OPOLYXRTRIM....#",
          "8901: |   3680: 0f 19 45 4e 41 42 4c 45 20 e5 54 53 35 58 42 49   ..ENABLE .TS5XBI",
          "8902: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4d   NARY....#..ENABM",
          "8903: |   3712: 45 b5 46 54 53 35 58 4e 4f 43 41 53 45 16 0d 05   E.FTS5XNOCASE...",
          "8904: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "8905: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "8906: |   3760: 4c 45 20 46 54 53 34 58 42 b7 4e 41 52 59 17 0b   LE FTS4XB.NARY..",
          "8907: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 34   ..#..ENABLE FTS4",
          "8908: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   XNOCASE....#..EN",
          "8909: |   3808: 41 42 4c 45 20 46 54 53 34 58 52 54 52 49 4d 1e   ABLE FTS4XRTRIM.",
          "8910: |   3824: 09 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "8911: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "8912: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "8913: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "8914: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "8915: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 49 4d 11 06   TAT VTABXRTRIM..",
          "8916: |   3920: 05 00 17 0f 19 44 45 42 55 47 58 42 49 4e 41 52   .....DEBUGXBINAR",
          "8917: |   3936: 59 11 05 05 00 17 0f 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "8918: |   3952: 43 41 53 45 10 04 05 00 17 0f 17 44 45 42 55 47   CASE.......DEBUG",
          "8919: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "8920: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "8921: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "8922: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3d 67   ...C..COMPILER=g",
          "8923: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "8924: |   4048: 39 58 4e 4f 43 41 53 45 26 01 05 00 43 0f 17 53   9XNOCASE&...C..S",
          "8925: |   4064: 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e   OMPILER=gcc-5.4.",
          "8926: |   4080: 30 20 32 2f 31 00 00 00 00 00 00 00 00 00 00 00   0 2/1...........",
          "8927: | page 6 offset 20480",
          "8928: |   3808: 06 24 03 00 12 02 01 01 06 23 03 00 12 02 01 01   .$.......#......",
          "8929: |   3824: 06 22 03 00 12 02 01 01 06 21 03 00 12 03 01 01   .........!......",
          "8930: |   3840: 06 20 03 00 12 03 01 01 06 1f 03 00 12 03 01 01   . ..............",
          "8931: |   3856: 06 1e 03 00 12 03 01 01 06 1d 03 00 12 03 01 01   ................",
          "8932: |   3872: 06 1c 03 00 12 03 01 01 06 1b 03 00 12 02 01 01   ................",
          "8933: |   3888: 06 1a 03 00 12 02 01 01 06 19 03 10 12 02 01 01   ................",
          "8934: |   3904: 06 18 03 00 12 02 01 01 06 17 03 00 12 02 01 01   ................",
          "8935: |   3920: 06 16 03 00 12 02 01 01 06 15 03 00 12 02 01 01   ................",
          "8936: |   3936: 06 14 03 00 12 02 01 01 06 13 03 00 12 02 01 01   ................",
          "8937: |   3952: 06 12 03 00 12 02 01 01 06 11 03 00 12 02 01 01   ................",
          "8938: |   3968: 06 10 03 00 12 02 01 01 06 0f 03 00 12 02 01 01   ................",
          "8939: |   3984: 06 0e 03 00 12 02 01 01 06 0d 03 00 12 02 01 01   ................",
          "8940: |   4000: 06 0c 03 00 12 02 01 01 06 0b 03 00 12 02 01 01   ................",
          "8941: |   4016: 06 0a 03 00 12 02 01 01 06 09 03 00 12 03 01 01   ................",
          "8942: |   4032: 06 08 03 00 12 03 01 01 06 07 03 00 12 03 01 01   ................",
          "8943: |   4048: 06 06 03 00 12 01 01 01 06 05 03 01 12 01 01 01   ................",
          "8944: |   4064: 06 04 03 00 12 01 01 01 06 03 03 00 12 06 01 01   ................",
          "8945: |   4080: 06 02 03 00 12 06 01 01 06 01 03 00 12 06 01 01   ................",
          "8946: | page 7 offset 24576",
          "8947: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "8948: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "8949: | end crash-e5fa281edabddf.db",
          "8950: }]} {}",
          "8952: do_execsql_test 61.1 {",
          "8953:   CREATE VIRTUAL TABLE t3 USING fts5vocab('t1'(),'col' );",
          "8954: }",
          "8956: do_catchsql_test 62.2 {",
          "8957:   SELECT * FROM t3 ORDER BY rowid;",
          "8958: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8be8bd0d562e571b73a93f4ed18258ebd114bbab67ee3cdcd66a4c8f2987f8dc",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0ed86bc372b5a14ab81027644c2bc37e62556da",
      "candidate_info": {
        "commit_hash": "a0ed86bc372b5a14ab81027644c2bc37e62556da",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a0ed86bc372b5a14ab81027644c2bc37e62556da",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/printf.c",
          "test/round1.test"
        ],
        "message": "Improvements to rounding behavior in the round() and printf() functions.\n\nFossilOrigin-Name: 641b2d210541b4d5a1a9e57d7dcf5ce5dfd7ff4d2dc6277ba0582869f48fc946",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/printf.c||src/printf.c",
          "test/round1.test||test/round1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 600daa9c27206628bf74892376ded35dac11fe0a34894fcd975ad5041a0a0fda",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/printf.c||src/printf.c": [
          "File: src/printf.c -> src/printf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:   {  'r', 10, 1, etORDINAL,    0,  0 },",
          "100: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103: static const double arRound[] = {",
          "104:   5.0e-01, 5.0e-02, 5.0e-03, 5.0e-04, 5.0e-05,",
          "105:   5.0e-06, 5.0e-07, 5.0e-08, 5.0e-09, 5.0e-10,",
          "106: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "517:         }",
          "518:         if( xtype==etGENERIC && precision>0 ) precision--;",
          "519:         testcase( precision>0xfff );",
          "523:         exp = 0;",
          "524:         if( sqlite3IsNaN((double)realvalue) ){",
          "",
          "[Removed Lines]",
          "520:         for(idx=precision&0xfff, rounder=0.5; idx>0; idx--, rounder*=0.1){}",
          "521:         if( xtype==etFLOAT ) realvalue += rounder;",
          "",
          "[Added Lines]",
          "526:         idx = precision & 0xfff;",
          "527:         rounder = arRound[idx%10];",
          "528:         while( idx>=10 ){ rounder *= 1.0e-10; idx -= 10; }",
          "529:         if( xtype==etFLOAT ){",
          "530:           if( precision<17) rounder += realvalue*2.0e-16;",
          "531:           realvalue += rounder;",
          "532:         }",
          "",
          "---------------"
        ],
        "test/round1.test||test/round1.test": [
          "File: test/round1.test -> test/round1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2019-05-24",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #***********************************************************************",
          "11: # Test cases for rounding behavior of floating point values.",
          "12: #",
          "14: set testdir [file dirname $argv0]",
          "15: source $testdir/tester.tcl",
          "16: set testprefix round1",
          "18: expr srand(0)",
          "19: unset -nocomplain iTest",
          "20: for {set iTest 1} {$iTest<=10000} {incr iTest} {",
          "21:    set x1 [expr int(rand()*100000)]",
          "22:    set x2 [expr int(rand()*100000)+1000*int(rand()*10000)]",
          "23:    set n [expr int(rand()*8)+1]",
          "24:    set x3 [string range [format %09d $x2] [expr {9-$n}] end]",
          "25:    set r $x1.$x3",
          "26:    set ans [string trimright $r 0]",
          "27:    if {[string match *. $ans]} {set ans ${ans}0}",
          "28:    do_test $iTest/$n/${r}4=>$ans {",
          "29:      set x [db one \"SELECT round(${r}4,$n)\"]",
          "30:    } $ans",
          "31:    set x4 [string range [format %09d [expr {$x2+1}]] [expr {9-$n}] end]",
          "32:    if {[string trim $x3 9]==\"\"} {incr x1}",
          "33:    set r2 $x1.$x4",
          "34:    set ans [string trimright $r2 0]",
          "35:    if {[string match *. $ans]} {set ans ${ans}0}",
          "36:    do_test $iTest/$n/${r}5=>$ans {",
          "37:      set x [db one \"SELECT round(${r}5,$n)\"]",
          "38:    } $ans",
          "39: }",
          "41: finish_test",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fcc057db259c9a85fa2fdd6017bb479f72ff06b6",
      "candidate_info": {
        "commit_hash": "fcc057db259c9a85fa2fdd6017bb479f72ff06b6",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fcc057db259c9a85fa2fdd6017bb479f72ff06b6",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/window1.test"
        ],
        "message": "Fix a double-free that could occur when a component of a compound SELECT with an ORDER BY clause uses named window definitions.\n\nFossilOrigin-Name: 92893b7980cbb0c6e26bc0b21390a717193205c9897fea5f26476462928897f9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/window1.test||test/window1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c4cb9708d48ead10ee9543f86878be8382cd6e850950d5384c95254bac4a8d6e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4569:   p->pPrior = 0;",
          "4570:   p->pNext = 0;",
          "4571:   p->pWith = 0;",
          "4572:   p->selFlags &= ~SF_Compound;",
          "4573:   assert( (p->selFlags & SF_Converted)==0 );",
          "4574:   p->selFlags |= SF_Converted;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4572: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "4573:   p->pWinDefn = 0;",
          "4574: #endif",
          "",
          "---------------"
        ],
        "test/window1.test||test/window1.test": [
          "File: test/window1.test -> test/window1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1272:   FROM t1;",
          "1273: }",
          "1275: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1275: #-------------------------------------------------------------------------",
          "1276: reset_db",
          "1277: do_catchsql_test 35.0 {",
          "1278:   SELECT * WINDOW f AS () ORDER BY name COLLATE nocase;",
          "1279: } {1 {no tables specified}}",
          "1281: do_catchsql_test 35.1 {",
          "1282:   VALUES(1) INTERSECT SELECT * WINDOW f AS () ORDER BY x COLLATE nocase;",
          "1283: } {1 {no tables specified}}",
          "1285: do_execsql_test 35.2 {",
          "1286:   CREATE TABLE t1(x);",
          "1287:   INSERT INTO t1 VALUES(1), (2), (3);",
          "1288:   VALUES(1) INTERSECT",
          "1289:   SELECT sum(x) OVER f FROM t1 WINDOW f AS (ORDER BY x) ORDER BY 1;",
          "1290: } {1}",
          "1292: do_execsql_test 35.3 {",
          "1293:   VALUES(8) EXCEPT",
          "1294:   SELECT sum(x) OVER f FROM t1 WINDOW f AS (ORDER BY x) ORDER BY 1;",
          "1295: } {8}",
          "1297: do_execsql_test 35.4 {",
          "1298:   VALUES(1) UNION",
          "1299:   SELECT sum(x) OVER f FROM t1 WINDOW f AS (ORDER BY x) ORDER BY 1;",
          "1300: } {1 3 6}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd79010964231114a6e370852c28aae8adcb5dfd",
      "candidate_info": {
        "commit_hash": "cd79010964231114a6e370852c28aae8adcb5dfd",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cd79010964231114a6e370852c28aae8adcb5dfd",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fts3misc.test"
        ],
        "message": "Fix a problem in the fts3 integrity-check routine causing it to report as corrupt tables that contain values with embedded 0x00 bytes.\n\nFossilOrigin-Name: 629e20c9880acc2cb9e2fa6da39a15a90483e9a8f433df29d285c23bdfb03b0b",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3misc.test||test/fts3misc.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5244:       for(iCol=0; rc==SQLITE_OK && iCol<p->nColumn; iCol++){",
          "5245:         if( p->abNotindexed[iCol]==0 ){",
          "5246:           const char *zText = (const char *)sqlite3_column_text(pStmt, iCol+1);",
          "5248:           sqlite3_tokenizer_cursor *pT = 0;",
          "5251:           while( rc==SQLITE_OK ){",
          "",
          "[Removed Lines]",
          "5247:           int nText = sqlite3_column_bytes(pStmt, iCol+1);",
          "5250:           rc = sqlite3Fts3OpenTokenizer(p->pTokenizer, iLang, zText, nText,&pT);",
          "",
          "[Added Lines]",
          "5249:           rc = sqlite3Fts3OpenTokenizer(p->pTokenizer, iLang, zText, -1, &pT);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ccba7202b69d239724c3b589439c9c3b0e1bba237accfeb11c39d492522b8719",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3misc.test||test/fts3misc.test": [
          "File: test/fts3misc.test -> test/fts3misc.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:   SELECT rowid FROM t6 WHERE t6 MATCH 'b OR \"x a\"'",
          "227: } {50001 50002 50003 50004}",
          "230: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "229: #-------------------------------------------------------------------------",
          "230: #",
          "231: reset_db",
          "232: do_execsql_test 7.0 {",
          "233:   CREATE VIRTUAL TABLE vt0 USING fts3(c0);",
          "234:   INSERT INTO vt0 VALUES (x'00');",
          "235: }",
          "236: do_execsql_test 7.1 {",
          "237:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "238: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4658b68fa906229797f6411e92a4cf15598528b",
      "candidate_info": {
        "commit_hash": "f4658b68fa906229797f6411e92a4cf15598528b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f4658b68fa906229797f6411e92a4cf15598528b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c"
        ],
        "message": "Tighten the generated column requirement such that every table must have at least one non-generated column.  Ticket [166347c6fc994155].\n\nFossilOrigin-Name: 4fba090e678ef184736277c9ec9a9374c8bd4df4d41f51a3dc6818e2efcc103b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 361ea81ae8a13e7d2ec4c2412f30e049bb6ee320980d502c86bedc315cdd3bc0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2243: #ifndef SQLITE_OMIT_GENERATED_COLUMNS",
          "2244:   if( p->tabFlags & TF_HasGenerated ){",
          "2246:     testcase( p->tabFlags & TF_HasVirtual );",
          "2247:     testcase( p->tabFlags & TF_HasStored );",
          "2248:     for(ii=0; ii<p->nCol; ii++){",
          "",
          "[Removed Lines]",
          "2245:     int ii, nNV = 0;",
          "",
          "[Added Lines]",
          "2245:     int ii, nNG = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2252:         testcase( colFlags & COLFLAG_STORED );",
          "2253:         sqlite3ResolveSelfReference(pParse, p, NC_GenCol,",
          "2254:                                     p->aCol[ii].pDflt, 0);",
          "2255:       }",
          "2257:     }",
          "2260:       return;",
          "2261:     }",
          "2262:   }",
          "",
          "[Removed Lines]",
          "2256:       if( (colFlags & COLFLAG_VIRTUAL)==0 ) nNV++;",
          "2258:     if( nNV==0 ){",
          "2259:       sqlite3ErrorMsg(pParse, \"must have at least one non-VIRTUAL column\");",
          "",
          "[Added Lines]",
          "2255:       }else{",
          "2256:         nNG++;",
          "2259:     if( nNG==0 ){",
          "2260:       sqlite3ErrorMsg(pParse, \"must have at least one non-generated column\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}