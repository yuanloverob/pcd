{
  "cve_id": "CVE-2013-7018",
  "cve_desc": "libavcodec/jpeg2000dec.c in FFmpeg before 2.1 does not ensure the use of valid code-block dimension values, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted JPEG2000 data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "9a271a9368eaabf99e6c2046103acb33957e63b7",
  "patch_info": {
    "commit_hash": "9a271a9368eaabf99e6c2046103acb33957e63b7",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/9a271a9368eaabf99e6c2046103acb33957e63b7",
    "files": [
      "libavcodec/jpeg2000dec.c"
    ],
    "message": "jpeg2000: check log2_cblk dimensions\n\nFixes out of array access\nFixes Ticket2895\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
      "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "384:         return AVERROR_INVALIDDATA;",
      "385:     }",
      "387:     c->cblk_style = bytestream2_get_byteu(&s->g);",
      "388:     if (c->cblk_style != 0) { // cblk style",
      "389:         av_log(s->avctx, AV_LOG_WARNING, \"extra cblk styles %X\\n\", c->cblk_style);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "387:     if (c->log2_cblk_width > 6 || c->log2_cblk_height > 6) {",
      "388:         avpriv_request_sample(s->avctx, \"cblk size > 64\");",
      "389:         return AVERROR_PATCHWELCOME;",
      "390:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1025:     int bpass_csty_symbol           = codsty->cblk_style & JPEG2000_CBLK_BYPASS;",
      "1026:     int vert_causal_ctx_csty_symbol = codsty->cblk_style & JPEG2000_CBLK_VSC;",
      "1028:     for (y = 0; y < height; y++)",
      "1029:         memset(t1->data[y], 0, width * sizeof(**t1->data));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1033:     av_assert0(width  <= JPEG2000_MAX_CBLKW);",
      "1034:     av_assert0(height <= JPEG2000_MAX_CBLKH);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f9e6fb50ceac05f8e0e9ff4a9a99674407fc8b85",
      "candidate_info": {
        "commit_hash": "f9e6fb50ceac05f8e0e9ff4a9a99674407fc8b85",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f9e6fb50ceac05f8e0e9ff4a9a99674407fc8b85",
        "files": [
          "libavcodec/j2kdec.c"
        ],
        "message": "jpeg2000: check log2_cblk dimensions\n\nFixes out of array access\nFixes Ticket2895\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 9a271a9368eaabf99e6c2046103acb33957e63b7)\n\nConflicts:\n\n\tlibavcodec/jpeg2000dec.c\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/j2kdec.c||libavcodec/j2kdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libavcodec/j2kdec.c||libavcodec/j2kdec.c": [
          "File: libavcodec/j2kdec.c -> libavcodec/j2kdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #include \"avcodec.h\"",
          "31: #include \"bytestream.h\"",
          "32: #include \"j2k.h\"",
          "33: #include \"libavutil/common.h\"",
          "35: #define JP2_SIG_TYPE    0x6A502020",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: #include \"libavutil/avassert.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "294:      c->log2_cblk_width = bytestream2_get_byteu(&s->g) + 2; // cblk width",
          "295:     c->log2_cblk_height = bytestream2_get_byteu(&s->g) + 2; // cblk height",
          "297:     c->cblk_style = bytestream2_get_byteu(&s->g);",
          "298:     if (c->cblk_style != 0){ // cblk style",
          "299:         av_log(s->avctx, AV_LOG_WARNING, \"extra cblk styles %X\\n\", c->cblk_style);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "298:     if (c->log2_cblk_width > 6 || c->log2_cblk_height > 6) {",
          "299:         return AVERROR_PATCHWELCOME;",
          "300:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "711:     int bpass_csty_symbol = J2K_CBLK_BYPASS & codsty->cblk_style;",
          "712:     int vert_causal_ctx_csty_symbol = J2K_CBLK_VSC & codsty->cblk_style;",
          "714:     for (y = 0; y < height+2; y++)",
          "715:         memset(t1->flags[y], 0, (width+2)*sizeof(int));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "719:     av_assert0(width  <= J2K_MAX_CBLKW);",
          "720:     av_assert0(height <= J2K_MAX_CBLKH);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f229c598939c34df75db7845495f077b49e233d4",
      "candidate_info": {
        "commit_hash": "f229c598939c34df75db7845495f077b49e233d4",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f229c598939c34df75db7845495f077b49e233d4",
        "files": [
          "libavcodec/j2kdec.c"
        ],
        "message": "jpeg2000: check log2_cblk dimensions\n\nFixes out of array access\nFixes Ticket2895\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 9a271a9368eaabf99e6c2046103acb33957e63b7)\n\nConflicts:\n\n\tlibavcodec/jpeg2000dec.c\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/j2kdec.c||libavcodec/j2kdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libavcodec/j2kdec.c||libavcodec/j2kdec.c": [
          "File: libavcodec/j2kdec.c -> libavcodec/j2kdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #include \"avcodec.h\"",
          "31: #include \"bytestream.h\"",
          "32: #include \"j2k.h\"",
          "33: #include \"libavutil/common.h\"",
          "35: #define JP2_SIG_TYPE    0x6A502020",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: #include \"libavutil/avassert.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "298:      c->log2_cblk_width = bytestream2_get_byteu(&s->g) + 2; // cblk width",
          "299:     c->log2_cblk_height = bytestream2_get_byteu(&s->g) + 2; // cblk height",
          "301:     c->cblk_style = bytestream2_get_byteu(&s->g);",
          "302:     if (c->cblk_style != 0){ // cblk style",
          "303:         av_log(s->avctx, AV_LOG_WARNING, \"extra cblk styles %X\\n\", c->cblk_style);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:     if (c->log2_cblk_width > 6 || c->log2_cblk_height > 6) {",
          "303:         return AVERROR_PATCHWELCOME;",
          "304:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "715:     int bpass_csty_symbol = J2K_CBLK_BYPASS & codsty->cblk_style;",
          "716:     int vert_causal_ctx_csty_symbol = J2K_CBLK_VSC & codsty->cblk_style;",
          "718:     for (y = 0; y < height+2; y++)",
          "719:         memset(t1->flags[y], 0, (width+2)*sizeof(int));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "723:     av_assert0(width  <= J2K_MAX_CBLKW);",
          "724:     av_assert0(height <= J2K_MAX_CBLKH);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e817d91ef6b8b1681b4d4e5e4bdbd54a720e3de",
      "candidate_info": {
        "commit_hash": "3e817d91ef6b8b1681b4d4e5e4bdbd54a720e3de",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/3e817d91ef6b8b1681b4d4e5e4bdbd54a720e3de",
        "files": [
          "libavcodec/jpeg2000dec.c"
        ],
        "message": "jpeg2000: check log2_cblk dimensions\n\nFixes out of array access\nFixes Ticket2895\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 9a271a9368eaabf99e6c2046103acb33957e63b7)",
        "before_after_code_files": [
          "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ],
          "candidate": [
            "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/jpeg2000dec.c||libavcodec/jpeg2000dec.c": [
          "File: libavcodec/jpeg2000dec.c -> libavcodec/jpeg2000dec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "379:         return AVERROR_INVALIDDATA;",
          "380:     }",
          "382:     c->cblk_style = bytestream2_get_byteu(&s->g);",
          "383:     if (c->cblk_style != 0) { // cblk style",
          "384:         av_log(s->avctx, AV_LOG_WARNING, \"extra cblk styles %X\\n\", c->cblk_style);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "382:     if (c->log2_cblk_width > 6 || c->log2_cblk_height > 6) {",
          "383:         avpriv_request_sample(s->avctx, \"cblk size > 64\");",
          "384:         return AVERROR_PATCHWELCOME;",
          "385:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1020:     int bpass_csty_symbol           = codsty->cblk_style & JPEG2000_CBLK_BYPASS;",
          "1021:     int vert_causal_ctx_csty_symbol = codsty->cblk_style & JPEG2000_CBLK_VSC;",
          "1023:     for (y = 0; y < height; y++)",
          "1024:         memset(t1->data[y], 0, width * sizeof(**t1->data));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1028:     av_assert0(width  <= JPEG2000_MAX_CBLKW);",
          "1029:     av_assert0(height <= JPEG2000_MAX_CBLKH);",
          "",
          "---------------"
        ]
      }
    }
  ]
}