{
  "cve_id": "CVE-2019-11937",
  "cve_desc": "In Mcrouter prior to v0.41.0, a large struct input provided to the Carbon protocol reader could result in stack exhaustion and denial of service.",
  "repo": "facebook/mcrouter",
  "patch_hash": "97e033b3bb0cb16b61bf49f0dc7f311a3e0edd1b",
  "patch_info": {
    "commit_hash": "97e033b3bb0cb16b61bf49f0dc7f311a3e0edd1b",
    "repo": "facebook/mcrouter",
    "commit_url": "https://github.com/facebook/mcrouter/commit/97e033b3bb0cb16b61bf49f0dc7f311a3e0edd1b",
    "files": [
      "mcrouter/lib/carbon/CarbonProtocolReader.cpp",
      "mcrouter/lib/carbon/CarbonProtocolReader.h"
    ],
    "message": "Attempt to make CarbonProtocolReader::skip tail recursive\n\nReviewed By: edenzik\n\nDifferential Revision: D17967570\n\nfbshipit-source-id: fdc32e190a521349c7c8f4d6081902fa18eb0284",
    "before_after_code_files": [
      "mcrouter/lib/carbon/CarbonProtocolReader.cpp||mcrouter/lib/carbon/CarbonProtocolReader.cpp",
      "mcrouter/lib/carbon/CarbonProtocolReader.h||mcrouter/lib/carbon/CarbonProtocolReader.h"
    ]
  },
  "patch_diff": {
    "mcrouter/lib/carbon/CarbonProtocolReader.cpp||mcrouter/lib/carbon/CarbonProtocolReader.cpp": [
      "File: mcrouter/lib/carbon/CarbonProtocolReader.cpp -> mcrouter/lib/carbon/CarbonProtocolReader.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "78:     }",
      "79:     case FieldType::Struct: {",
      "80:       readStructBegin();",
      "88:       readStructEnd();",
      "89:       break;",
      "90:     }",
      "",
      "[Removed Lines]",
      "81:       while (true) {",
      "82:         const auto fieldType = readFieldHeader().first;",
      "83:         if (fieldType == FieldType::Stop) {",
      "84:           break;",
      "85:         }",
      "86:         skip(fieldType);",
      "87:       }",
      "",
      "[Added Lines]",
      "81:       const auto next = readFieldHeader().first;",
      "82:       skip(next);",
      "83:       break;",
      "84:     }",
      "85:     case FieldType::Stop: {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "96:       skipKVContainer();",
      "97:       break;",
      "98:     }",
      "100:   }",
      "101: }",
      "",
      "[Removed Lines]",
      "99:     default: { break; }",
      "103: } // carbon",
      "",
      "[Added Lines]",
      "97:     default: {",
      "98:       break;",
      "99:     }",
      "103: } // namespace carbon",
      "",
      "---------------"
    ],
    "mcrouter/lib/carbon/CarbonProtocolReader.h||mcrouter/lib/carbon/CarbonProtocolReader.h": [
      "File: mcrouter/lib/carbon/CarbonProtocolReader.h -> mcrouter/lib/carbon/CarbonProtocolReader.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "245:   }",
      "247:   void readStructEnd() {",
      "250:   }",
      "252:   std::pair<std::pair<FieldType, FieldType>, uint32_t>",
      "",
      "[Removed Lines]",
      "248:     lastFieldId_ = nestedStructFieldIds_.back();",
      "249:     nestedStructFieldIds_.pop_back();",
      "",
      "[Added Lines]",
      "248:     if (!nestedStructFieldIds_.empty()) {",
      "249:       lastFieldId_ = nestedStructFieldIds_.back();",
      "250:       nestedStructFieldIds_.pop_back();",
      "251:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1666de159eaa083bac1fd5e00292979423c5814b",
      "candidate_info": {
        "commit_hash": "1666de159eaa083bac1fd5e00292979423c5814b",
        "repo": "facebook/mcrouter",
        "commit_url": "https://github.com/facebook/mcrouter/commit/1666de159eaa083bac1fd5e00292979423c5814b",
        "files": [
          "mcrouter/lib/carbon/CarbonProtocolReader.cpp",
          "mcrouter/lib/carbon/CarbonProtocolReader.h"
        ],
        "message": "Back out \"Attempt to make CarbonProtocolReader::skip tail recursive\"\n\nSummary: Original commit changeset: fdc32e190a52\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D20671255\n\nfbshipit-source-id: 63f30c28197b6dafaafe4fd9c7a3b04cdba3f3e3",
        "before_after_code_files": [
          "mcrouter/lib/carbon/CarbonProtocolReader.cpp||mcrouter/licarbon/CarbonProtocolReader.cpp",
          "mcrouter/lib/carbon/CarbonProtocolReader.h||mcrouter/licarbon/CarbonProtocolReader.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "mcrouter/lib/carbon/CarbonProtocolReader.cpp||mcrouter/licarbon/CarbonProtocolReader.cpp": [
          "File: mcrouter/lib/carbon/CarbonProtocolReader.cpp -> mcrouter/licarbon/CarbonProtocolReader.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     }",
          "79:     case FieldType::Struct: {",
          "80:       readStructBegin();",
          "86:       readStructEnd();",
          "87:       break;",
          "88:     }",
          "",
          "[Removed Lines]",
          "81:       const auto next = readFieldHeader().first;",
          "82:       skip(next);",
          "83:       break;",
          "84:     }",
          "85:     case FieldType::Stop: {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:       skipKVContainer();",
          "95:       break;",
          "96:     }",
          "100:   }",
          "101: }",
          "",
          "[Removed Lines]",
          "97:     default: {",
          "98:       break;",
          "99:     }",
          "103: } // namespace carbon",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mcrouter/lib/carbon/CarbonProtocolReader.h||mcrouter/licarbon/CarbonProtocolReader.h": [
          "File: mcrouter/lib/carbon/CarbonProtocolReader.h -> mcrouter/licarbon/CarbonProtocolReader.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "245:   }",
          "247:   void readStructEnd() {",
          "252:   }",
          "254:   std::pair<std::pair<FieldType, FieldType>, uint32_t>",
          "",
          "[Removed Lines]",
          "248:     if (!nestedStructFieldIds_.empty()) {",
          "249:       lastFieldId_ = nestedStructFieldIds_.back();",
          "250:       nestedStructFieldIds_.pop_back();",
          "251:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}