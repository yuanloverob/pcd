{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f096bbd71984fa8311939ff7422975e1c88d8362",
      "candidate_info": {
        "commit_hash": "f096bbd71984fa8311939ff7422975e1c88d8362",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f096bbd71984fa8311939ff7422975e1c88d8362",
        "files": [
          "crypto/rsa/rsa_err.c",
          "crypto/rsa/rsa_pmeth.c",
          "include/openssl/rsa.h"
        ],
        "message": "Check input length to pkey_rsa_verify()\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2065)\n(cherry picked from commit 71bbc79b7d3b1195a7a7dd5f547d52ddce32d6f0)",
        "before_after_code_files": [
          "crypto/rsrsa_err.c||crypto/rsa/rsa_err.c",
          "crypto/rsrsa_pmeth.c||crypto/rsa/rsa_pmeth.c",
          "include/openssl/rsa.h||include/openssl/rsa.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rsrsa_err.c||crypto/rsa/rsa_err.c": [
          "File: crypto/rsrsa_err.c -> crypto/rsa/rsa_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:     {ERR_FUNC(RSA_F_PKEY_RSA_VERIFY), \"pkey_rsa_verify\"},",
          "",
          "---------------"
        ],
        "crypto/rsrsa_pmeth.c||crypto/rsa/rsa_pmeth.c": [
          "File: crypto/rsrsa_pmeth.c -> crypto/rsa/rsa_pmeth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "232:         if (tbslen != (size_t)EVP_MD_size(rctx->md)) {",
          "233:             RSAerr(RSA_F_PKEY_RSA_VERIFY, RSA_R_INVALID_DIGEST_LENGTH);",
          "234:             return -1;",
          "235:         }",
          "",
          "---------------"
        ],
        "include/openssl/rsa.h||include/openssl/rsa.h": [
          "File: include/openssl/rsa.h -> include/openssl/rsa.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "468: # define RSA_F_PKEY_RSA_CTRL                              143",
          "469: # define RSA_F_PKEY_RSA_CTRL_STR                          144",
          "470: # define RSA_F_PKEY_RSA_SIGN                              142",
          "471: # define RSA_F_PKEY_RSA_VERIFYRECOVER                     141",
          "472: # define RSA_F_RSA_ALGOR_TO_MD                            156",
          "473: # define RSA_F_RSA_BUILTIN_KEYGEN                         129",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "471: # define RSA_F_PKEY_RSA_VERIFY                            149",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dca39445fc4ef95adc46d0ba33491934adfbef77",
      "candidate_info": {
        "commit_hash": "dca39445fc4ef95adc46d0ba33491934adfbef77",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dca39445fc4ef95adc46d0ba33491934adfbef77",
        "files": [
          "test/evp_test.c"
        ],
        "message": "Catch EC_R_UNKNOWN_GROUP in check_unsupported()\n\nIf EC support is enabled we should catch also EC_R_UNKNOWN_GROUP as an hint to\nan unsupported algorithm/curve (e.g. if binary EC support is disabled).\n\nBefore this commit the issue arise for example if binary EC keys are added in\nevptests.txt, and the test is run when EC is enabled but EC2m is disabled.\n\nE.g. adding these lines to evptests.txt would reproduce the issue:\n\n~~~\n\nPrivateKey=KAS-ECC-CDH_K-163_C0\n-----BEGIN PRIVATE KEY-----\nMGMCAQAwEAYHKoZIzj0CAQYFK4EEAAEETDBKAgEBBBUAZlO2B3OY+tx79eYBWBcB\nSMPcRSehLgMsAAQHH4sod9YCfZwa3kJE8t6hJpLvI9UFwV7ndiIccrhLNHzjg/OA\nZ7icPpo=\n-----END PRIVATE KEY-----\n\nPublicKey=KAS-ECC-CDH_K-163_C0-PUBLIC\n-----BEGIN PUBLIC KEY-----\nMEAwEAYHKoZIzj0CAQYFK4EEAAEDLAAEBx+LKHfWAn2cGt5CRPLeoSaS7yPVBcFe\n53YiHHK4SzR844PzgGe4nD6a\n-----END PUBLIC KEY-----\n\nPublicKey=KAS-ECC-CDH_K-163_C0-Peer-PUBLIC\n-----BEGIN PUBLIC KEY-----\nMEAwEAYHKoZIzj0CAQYFK4EEAAEDLAAEBXQjbxQoxDITCUZ4Ols6q7bCfqXWB5CM\nJRuNoCHLrCgfEj969PrFs9u4\n-----END PUBLIC KEY-----\n\nDerive=KAS-ECC-CDH_K-163_C0\nPeerKey=KAS-ECC-CDH_K-163_C0-Peer-PUBLIC\nCtrl=ecdh_cofactor_mode:1\nSharedSecret=04325bff38f1b0c83c27f554a6c972a80f14bc23bc\n\n~~~\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3226)\n\n(cherry picked from commit 0c44545c0f5781b1d2401b0d3c93c0376399c8e5)",
        "before_after_code_files": [
          "test/evp_test.c||test/evp_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/evp_test.c||test/evp_test.c": [
          "File: test/evp_test.c -> test/evp_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "469:         ERR_clear_error();",
          "470:         return 1;",
          "471:     }",
          "472:     return 0;",
          "473: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "472: #ifndef OPENSSL_NO_EC",
          "478:     if (ERR_GET_LIB(err) == ERR_LIB_EC",
          "479:         && ERR_GET_REASON(err) == EC_R_UNKNOWN_GROUP) {",
          "480:         ERR_clear_error();",
          "481:         return 1;",
          "482:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c2e8be7543952675059c12a828d438646562f94d",
      "candidate_info": {
        "commit_hash": "c2e8be7543952675059c12a828d438646562f94d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c2e8be7543952675059c12a828d438646562f94d",
        "files": [
          "crypto/asn1/a_int.c"
        ],
        "message": "asn1/a_int.c: simplify asn1_put_uint64.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3192)\n\n(cherry picked from commit 6d4321fc242829490e1e7a36358eb12874c9b9e0)",
        "before_after_code_files": [
          "crypto/asn1/a_int.c||crypto/asn1/a_int.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_int.c||crypto/asn1/a_int.c": [
          "File: crypto/asn1/a_int.c -> crypto/asn1/a_int.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "196: static int asn1_get_uint64(uint64_t *pr, const unsigned char *b, size_t blen)",
          "197: {",
          "198:     size_t i;",
          "199:     if (blen > sizeof(*pr)) {",
          "200:         ASN1err(ASN1_F_ASN1_GET_UINT64, ASN1_R_TOO_LARGE);",
          "201:         return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "199:     uint64_t r;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "204:     if (b == NULL)",
          "205:         return 0;",
          "209:     }",
          "210:     return 1;",
          "211: }",
          "214: {",
          "240: }",
          "",
          "[Removed Lines]",
          "206:     for (i = 0; i < blen; i++) {",
          "213: static size_t asn1_put_uint64(unsigned char *b, uint64_t r)",
          "215:     if (r >= 0x100) {",
          "216:         unsigned char *p;",
          "217:         uint64_t rtmp = r;",
          "218:         size_t i = 0;",
          "221:         while (rtmp) {",
          "222:             rtmp >>= 8;",
          "223:             i++;",
          "224:         }",
          "227:         p = b + i - 1;",
          "229:         do {",
          "231:             r >>= 8;",
          "232:         } while (p >= b);",
          "234:         return i;",
          "235:     }",
          "237:     b[0] = (unsigned char)r;",
          "238:     return 1;",
          "",
          "[Added Lines]",
          "208:     for (r = 0, i = 0; i < blen; i++) {",
          "209:         r <<= 8;",
          "210:         r |= b[i];",
          "221: static size_t asn1_put_uint64(unsigned char b[sizeof(uint64_t)], uint64_t r)",
          "223:     size_t off = sizeof(uint64_t);",
          "225:     do {",
          "226:         b[--off] = (unsigned char)r;",
          "227:     } while (r >>= 8);",
          "229:     return off;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "326: static int asn1_string_set_int64(ASN1_STRING *a, int64_t r, int itype)",
          "327: {",
          "328:     unsigned char tbuf[sizeof(r)];",
          "330:     a->type = itype;",
          "331:     if (r < 0) {",
          "333:         a->type |= V_ASN1_NEG;",
          "334:     } else {",
          "336:         a->type &= ~V_ASN1_NEG;",
          "337:     }",
          "341: }",
          "343: static int asn1_string_get_uint64(uint64_t *pr, const ASN1_STRING *a,",
          "",
          "[Removed Lines]",
          "329:     size_t l;",
          "332:         l = asn1_put_uint64(tbuf, -r);",
          "335:         l = asn1_put_uint64(tbuf, r);",
          "338:     if (l == 0)",
          "339:         return 0;",
          "340:     return ASN1_STRING_set(a, tbuf, l);",
          "",
          "[Added Lines]",
          "319:     size_t off;",
          "323:         off = asn1_put_uint64(tbuf, -r);",
          "326:         off = asn1_put_uint64(tbuf, r);",
          "329:     return ASN1_STRING_set(a, tbuf + off, sizeof(tbuf) - off);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "361: static int asn1_string_set_uint64(ASN1_STRING *a, uint64_t r, int itype)",
          "362: {",
          "363:     unsigned char tbuf[sizeof(r)];",
          "365:     a->type = itype;",
          "370: }",
          "",
          "[Removed Lines]",
          "364:     size_t l;",
          "366:     l = asn1_put_uint64(tbuf, r);",
          "367:     if (l == 0)",
          "368:         return 0;",
          "369:     return ASN1_STRING_set(a, tbuf, l);",
          "",
          "[Added Lines]",
          "353:     size_t off;",
          "356:     off = asn1_put_uint64(tbuf, r);",
          "357:     return ASN1_STRING_set(a, tbuf + off, sizeof(tbuf) - off);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "613: int i2c_uint64_int(unsigned char *p, uint64_t r, int neg)",
          "614: {",
          "615:     unsigned char buf[sizeof(uint64_t)];",
          "620: }",
          "",
          "[Removed Lines]",
          "616:     size_t buflen;",
          "618:     buflen = asn1_put_uint64(buf, r);",
          "619:     return i2c_ibuf(buf, buflen, neg, &p);",
          "",
          "[Added Lines]",
          "604:     size_t off;",
          "606:     off = asn1_put_uint64(buf, r);",
          "607:     return i2c_ibuf(buf + off, sizeof(buf) - off, neg, &p);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "46766d003666da5f90346da7e6d09e109355f5c6",
      "candidate_info": {
        "commit_hash": "46766d003666da5f90346da7e6d09e109355f5c6",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/46766d003666da5f90346da7e6d09e109355f5c6",
        "files": [
          "crypto/bio/b_addr.c"
        ],
        "message": "HP-UX doesn't have hstrerror(), so make our own for that platform\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2092)",
        "before_after_code_files": [
          "crypto/bio/b_addr.c||crypto/bio/b_addr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/b_addr.c||crypto/bio/b_addr.c": [
          "File: crypto/bio/b_addr.c -> crypto/bio/b_addr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include <internal/thread_once.h>",
          "19: #include <ctype.h>",
          "21: CRYPTO_RWLOCK *bio_lookup_lock;",
          "22: static CRYPTO_ONCE bio_lookup_init = CRYPTO_ONCE_STATIC_INIT;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: #ifdef _HPUX_SOURCE",
          "22: static const char *ossl_hstrerror(int herr)",
          "23: {",
          "24:     switch (herr) {",
          "25:     case -1:",
          "26:         return strerror(errno);",
          "27:     case 0:",
          "28:         return \"No error\";",
          "29:     case HOST_NOT_FOUND:",
          "30:         return \"Host not found\";",
          "32:         return \"No data\";",
          "33:     case NO_RECOVERY:",
          "34:         return \"Non recoverable error\";",
          "35:     case TRY_AGAIN:",
          "36:         return \"Try again\";",
          "37:     default:",
          "38:         break;",
          "39:     }",
          "40:     return \"unknown error\";",
          "41: }",
          "42: # define hstrerror(e) ossl_hstrerror(e)",
          "43: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f567076cf343cbfe084c133c5bfc59b3d55122ef",
      "candidate_info": {
        "commit_hash": "f567076cf343cbfe084c133c5bfc59b3d55122ef",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f567076cf343cbfe084c133c5bfc59b3d55122ef",
        "files": [
          "crypto/ct/ct_policy.c"
        ],
        "message": "Convert C++ comments to C-style comments\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit 08e588b7d5cefbfd107c88416900165a28a5b59e)",
        "before_after_code_files": [
          "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c": [
          "File: crypto/ct/ct_policy.c -> crypto/ct/ct_policy.c"
        ]
      }
    }
  ]
}