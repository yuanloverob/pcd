{
  "cve_id": "CVE-2014-9730",
  "cve_desc": "The udf_pc_to_char function in fs/udf/symlink.c in the Linux kernel before 3.18.2 relies on component lengths that are unused, which allows local users to cause a denial of service (system crash) via a crafted UDF filesystem image.",
  "repo": "torvalds/linux",
  "patch_hash": "e237ec37ec154564f8690c5bd1795339955eeef9",
  "patch_info": {
    "commit_hash": "e237ec37ec154564f8690c5bd1795339955eeef9",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/e237ec37ec154564f8690c5bd1795339955eeef9",
    "files": [
      "fs/udf/symlink.c"
    ],
    "message": "udf: Check component length before reading it\n\nCheck that length specified in a component of a symlink fits in the\ninput buffer we are reading. Also properly ignore component length for\ncomponent types that do not use it. Otherwise we read memory after end\nof buffer for corrupted udf image.\n\nReported-by: Carl Henrik Lunde <chlunde@ping.uio.no>\nCC: stable@vger.kernel.org\nSigned-off-by: Jan Kara <jack@suse.cz>",
    "before_after_code_files": [
      "fs/udf/symlink.c||fs/udf/symlink.c"
    ]
  },
  "patch_diff": {
    "fs/udf/symlink.c||fs/udf/symlink.c": [
      "File: fs/udf/symlink.c -> fs/udf/symlink.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "42:  tolen--;",
      "43:  while (elen < fromlen) {",
      "44:   pc = (struct pathComponent *)(from + elen);",
      "45:   switch (pc->componentType) {",
      "46:   case 1:",
      "52:     break;",
      "54:   case 2:",
      "55:    if (tolen == 0)",
      "",
      "[Removed Lines]",
      "51:    if (pc->lengthComponentIdent > 0)",
      "",
      "[Added Lines]",
      "45:   elen += sizeof(struct pathComponent);",
      "52:    if (pc->lengthComponentIdent > 0) {",
      "53:     elen += pc->lengthComponentIdent;",
      "55:    }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75:    break;",
      "76:   case 5:",
      "77:    comp_len = udf_get_filename(sb, pc->componentIdent,",
      "78:           pc->lengthComponentIdent,",
      "79:           p, tolen);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80:    elen += pc->lengthComponentIdent;",
      "81:    if (elen > fromlen)",
      "82:     return -EIO;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "85:    tolen--;",
      "86:    break;",
      "87:   }",
      "89:  }",
      "90:  if (p > to + 1)",
      "91:   p[-1] = '\\0';",
      "",
      "[Removed Lines]",
      "88:   elen += sizeof(struct pathComponent) + pc->lengthComponentIdent;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0e5cc9a40ada6046e6bc3bdfcd0c0d7e4b706b14",
      "candidate_info": {
        "commit_hash": "0e5cc9a40ada6046e6bc3bdfcd0c0d7e4b706b14",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/0e5cc9a40ada6046e6bc3bdfcd0c0d7e4b706b14",
        "files": [
          "fs/udf/dir.c",
          "fs/udf/namei.c",
          "fs/udf/symlink.c",
          "fs/udf/udfdecl.h",
          "fs/udf/unicode.c"
        ],
        "message": "udf: Check path length when reading symlink\n\nSymlink reading code does not check whether the resulting path fits into\nthe page provided by the generic code. This isn't as easy as just\nchecking the symlink size because of various encoding conversions we\nperform on path. So we have to check whether there is still enough space\nin the buffer on the fly.\n\nCC: stable@vger.kernel.org\nReported-by: Carl Henrik Lunde <chlunde@ping.uio.no>\nSigned-off-by: Jan Kara <jack@suse.cz>",
        "before_after_code_files": [
          "fs/udf/dir.c||fs/udf/dir.c",
          "fs/udf/namei.c||fs/udf/namei.c",
          "fs/udf/symlink.c||fs/udf/symlink.c",
          "fs/udf/udfdecl.h||fs/udf/udfdecl.h",
          "fs/udf/unicode.c||fs/udf/unicode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/udf/symlink.c||fs/udf/symlink.c"
          ],
          "candidate": [
            "fs/udf/symlink.c||fs/udf/symlink.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/udf/dir.c||fs/udf/dir.c": [
          "File: fs/udf/dir.c -> fs/udf/dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:    continue;",
          "168:   }",
          "171:   if (!flen)",
          "172:    continue;",
          "",
          "[Removed Lines]",
          "170:   flen = udf_get_filename(dir->i_sb, nameptr, fname, lfi);",
          "",
          "[Added Lines]",
          "170:   flen = udf_get_filename(dir->i_sb, nameptr, lfi, fname,",
          "171:      UDF_NAME_LEN);",
          "",
          "---------------"
        ],
        "fs/udf/namei.c||fs/udf/namei.c": [
          "File: fs/udf/namei.c -> fs/udf/namei.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "233:   if (!lfi)",
          "234:    continue;",
          "237:   if (flen && udf_match(flen, fname, child->len, child->name))",
          "238:    goto out_ok;",
          "239:  }",
          "",
          "[Removed Lines]",
          "236:   flen = udf_get_filename(dir->i_sb, nameptr, fname, lfi);",
          "",
          "[Added Lines]",
          "236:   flen = udf_get_filename(dir->i_sb, nameptr, lfi, fname,",
          "237:      UDF_NAME_LEN);",
          "",
          "---------------"
        ],
        "fs/udf/symlink.c||fs/udf/symlink.c": [
          "File: fs/udf/symlink.c -> fs/udf/symlink.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #include <linux/buffer_head.h>",
          "31: #include \"udf_i.h\"",
          "35: {",
          "36:  struct pathComponent *pc;",
          "37:  int elen = 0;",
          "38:  unsigned char *p = to;",
          "40:  while (elen < fromlen) {",
          "41:   pc = (struct pathComponent *)(from + elen);",
          "42:   switch (pc->componentType) {",
          "",
          "[Removed Lines]",
          "33: static void udf_pc_to_char(struct super_block *sb, unsigned char *from,",
          "34:       int fromlen, unsigned char *to)",
          "",
          "[Added Lines]",
          "33: static int udf_pc_to_char(struct super_block *sb, unsigned char *from,",
          "34:      int fromlen, unsigned char *to, int tolen)",
          "38:  int comp_len;",
          "42:  tolen--;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:     break;",
          "51:   case 2:",
          "52:    p = to;",
          "54:    break;",
          "55:   case 3:",
          "56:    memcpy(p, \"../\", 3);",
          "57:    p += 3;",
          "58:    break;",
          "59:   case 4:",
          "60:    memcpy(p, \"./\", 2);",
          "61:    p += 2;",
          "63:    break;",
          "64:   case 5:",
          "68:    break;",
          "69:   }",
          "70:   elen += sizeof(struct pathComponent) + pc->lengthComponentIdent;",
          "",
          "[Removed Lines]",
          "65:    p += udf_get_filename(sb, pc->componentIdent, p,",
          "66:            pc->lengthComponentIdent);",
          "",
          "[Added Lines]",
          "55:    if (tolen == 0)",
          "56:     return -ENAMETOOLONG;",
          "59:    tolen--;",
          "62:    if (tolen < 3)",
          "63:     return -ENAMETOOLONG;",
          "66:    tolen -= 3;",
          "69:    if (tolen < 2)",
          "70:     return -ENAMETOOLONG;",
          "73:    tolen -= 2;",
          "77:    comp_len = udf_get_filename(sb, pc->componentIdent,",
          "78:           pc->lengthComponentIdent,",
          "79:           p, tolen);",
          "80:    p += comp_len;",
          "81:    tolen -= comp_len;",
          "82:    if (tolen == 0)",
          "83:     return -ENAMETOOLONG;",
          "85:    tolen--;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73:   p[-1] = '\\0';",
          "74:  else",
          "75:   p[0] = '\\0';",
          "76: }",
          "78: static int udf_symlink_filler(struct file *file, struct page *page)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:  return 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108:   symlink = bh->b_data;",
          "109:  }",
          "112:  brelse(bh);",
          "114:  up_read(&iinfo->i_data_sem);",
          "115:  SetPageUptodate(page);",
          "",
          "[Removed Lines]",
          "111:  udf_pc_to_char(inode->i_sb, symlink, inode->i_size, p);",
          "",
          "[Added Lines]",
          "130:  err = udf_pc_to_char(inode->i_sb, symlink, inode->i_size, p, PAGE_SIZE);",
          "132:  if (err)",
          "133:   goto out_unlock_inode;",
          "",
          "---------------"
        ],
        "fs/udf/udfdecl.h||fs/udf/udfdecl.h": [
          "File: fs/udf/udfdecl.h -> fs/udf/udfdecl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "211: }",
          "215: extern int udf_put_filename(struct super_block *, const uint8_t *, uint8_t *,",
          "216:        int);",
          "217: extern int udf_build_ustr(struct ustr *, dstring *, int);",
          "",
          "[Removed Lines]",
          "214: extern int udf_get_filename(struct super_block *, uint8_t *, uint8_t *, int);",
          "",
          "[Added Lines]",
          "214: extern int udf_get_filename(struct super_block *, uint8_t *, int, uint8_t *,",
          "215:        int);",
          "",
          "---------------"
        ],
        "fs/udf/unicode.c||fs/udf/unicode.c": [
          "File: fs/udf/unicode.c -> fs/udf/unicode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #include \"udf_sb.h\"",
          "33: static int udf_char_to_ustr(struct ustr *dest, const uint8_t *src, int strlen)",
          "34: {",
          "",
          "[Removed Lines]",
          "31: static int udf_translate_to_linux(uint8_t *, uint8_t *, int, uint8_t *, int);",
          "",
          "[Added Lines]",
          "31: static int udf_translate_to_linux(uint8_t *, int, uint8_t *, int, uint8_t *,",
          "32:       int);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "333:  return u_len + 1;",
          "334: }",
          "338: {",
          "339:  struct ustr *filename, *unifilename;",
          "340:  int len = 0;",
          "",
          "[Removed Lines]",
          "336: int udf_get_filename(struct super_block *sb, uint8_t *sname, uint8_t *dname,",
          "337:        int flen)",
          "",
          "[Added Lines]",
          "337: int udf_get_filename(struct super_block *sb, uint8_t *sname, int slen,",
          "338:        uint8_t *dname, int dlen)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "347:  if (!unifilename)",
          "348:   goto out1;",
          "351:   goto out2;",
          "353:  if (UDF_QUERY_FLAG(sb, UDF_FLAG_UTF8)) {",
          "",
          "[Removed Lines]",
          "350:  if (udf_build_ustr_exact(unifilename, sname, flen))",
          "",
          "[Added Lines]",
          "351:  if (udf_build_ustr_exact(unifilename, sname, slen))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "366:  } else",
          "367:   goto out2;",
          "370:          unifilename->u_name, unifilename->u_len);",
          "371: out2:",
          "372:  kfree(unifilename);",
          "",
          "[Removed Lines]",
          "369:  len = udf_translate_to_linux(dname, filename->u_name, filename->u_len,",
          "",
          "[Added Lines]",
          "370:  len = udf_translate_to_linux(dname, dlen,",
          "371:          filename->u_name, filename->u_len,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "403: #define EXT_MARK  '.'",
          "404: #define CRC_MARK  '#'",
          "405: #define EXT_SIZE   5",
          "410: {",
          "411:  int index, newIndex = 0, needsCRC = 0;",
          "412:  int extIndex = 0, newExtIndex = 0, hasExt = 0;",
          "",
          "[Removed Lines]",
          "407: static int udf_translate_to_linux(uint8_t *newName, uint8_t *udfName,",
          "408:       int udfLen, uint8_t *fidName,",
          "409:       int fidNameLen)",
          "",
          "[Added Lines]",
          "409: #define CRC_LEN   5",
          "411: static int udf_translate_to_linux(uint8_t *newName, int newLen,",
          "412:       uint8_t *udfName, int udfLen,",
          "413:       uint8_t *fidName, int fidNameLen)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "439:      newExtIndex = newIndex;",
          "440:     }",
          "441:    }",
          "443:     newName[newIndex++] = curr;",
          "444:    else",
          "445:     needsCRC = 1;",
          "",
          "[Removed Lines]",
          "442:    if (newIndex < 256)",
          "",
          "[Added Lines]",
          "446:    if (newIndex < newLen)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "467:     }",
          "468:     ext[localExtIndex++] = curr;",
          "469:    }",
          "471:    if (newIndex > maxFilenameLen)",
          "472:     newIndex = maxFilenameLen;",
          "473:    else",
          "474:     newIndex = newExtIndex;",
          "477:   newName[newIndex++] = CRC_MARK;",
          "478:   valueCRC = crc_itu_t(0, fidName, fidNameLen);",
          "479:   newName[newIndex++] = hex_asc_upper_hi(valueCRC >> 8);",
          "",
          "[Removed Lines]",
          "470:    maxFilenameLen = 250 - localExtIndex;",
          "475:   } else if (newIndex > 250)",
          "476:    newIndex = 250;",
          "",
          "[Added Lines]",
          "474:    maxFilenameLen = newLen - CRC_LEN - localExtIndex;",
          "479:   } else if (newIndex > newLen - CRC_LEN)",
          "480:    newIndex = newLen - CRC_LEN;",
          "",
          "---------------"
        ]
      }
    }
  ]
}