{
  "cve_id": "CVE-2019-19926",
  "cve_desc": "multiSelect in select.c in SQLite 3.30.1 mishandles certain errors during parsing, as demonstrated by errors from sqlite3WindowRewrite() calls. NOTE: this vulnerability exists because of an incomplete fix for CVE-2019-19880.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
  "patch_info": {
    "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c"
    ],
    "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2809:     }",
      "2810:   #endif",
      "2811:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2812:   if( pParse->nErr ) goto multi_select_end;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f20bbc5f69186e9f04b498b7de2488f3c02f7364",
      "candidate_info": {
        "commit_hash": "f20bbc5f69186e9f04b498b7de2488f3c02f7364",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f20bbc5f69186e9f04b498b7de2488f3c02f7364",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Fix a failure in sqlite3ExprCompare()\n\nFossilOrigin-Name: 835e2cc55feea2f2426c99816c27f9c35d2fd4cdd9bf1c7f46f889ecfd222778",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ca7b7aaed010ec67bec5355a9ac1d7f229d6d5f2ba2d796b76f5e908b1267688",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4858:         if( sqlite3WindowCompare(pParse,pA->y.pWin,pB->y.pWin)!=0 ) return 2;",
          "4859:       }",
          "4860: #endif",
          "4861:     }else if( pA->op==TK_COLLATE ){",
          "4862:       if( sqlite3_stricmp(pA->u.zToken,pB->u.zToken)!=0 ) return 2;",
          "4864:       return 2;",
          "4865:     }",
          "4866:   }",
          "",
          "[Removed Lines]",
          "4863:     }else if( strcmp(pA->u.zToken,pB->u.zToken)!=0 ){",
          "",
          "[Added Lines]",
          "4861:     }else if( pA->op==TK_NULL ){",
          "4862:       return 0;",
          "4865:     }else if( ALWAYS(pB->u.zToken!=0) && strcmp(pA->u.zToken,pB->u.zToken)!=0 ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b4e5039316e0c8fee98913d6f3433074d28a4b6b",
      "candidate_info": {
        "commit_hash": "b4e5039316e0c8fee98913d6f3433074d28a4b6b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b4e5039316e0c8fee98913d6f3433074d28a4b6b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Add the \".eqp trace\" command to the CLI when using SQLITE_DEBUG, as a convenient shorthand for \"PRAGMA vdbe_debug=ON\" but with automatic indentation feature for program listings provided by the CLI.\n\nFossilOrigin-Name: 626502faa17b5b7a0fa36cabfd12e463eb09aec048d01c587a18d3977cf04662",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 13f6942eb0da2d92a0830f18640ce64208bd0cd6ff6d0c97e4a4c57ac3d65ba6",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3401:   \"     --newlines             Allow unescaped newline characters in output\",",
          "3402:   \"   TABLE is LIKE pattern for the tables to dump\",",
          "3403:   \".echo on|off             Turn command echo on or off\",",
          "3405:   \".excel                   Display the output of next command in a spreadsheet\",",
          "3406:   \".exit ?CODE?             Exit this program with return-code CODE\",",
          "3407:   \".expert                  EXPERIMENTAL. Suggest indexes for specified queries\",",
          "",
          "[Removed Lines]",
          "3404:   \".eqp on|off|full         Enable or disable automatic EXPLAIN QUERY PLAN\",",
          "",
          "[Added Lines]",
          "3405:   \".eqp on|off|full|...     Enable or disable automatic EXPLAIN QUERY PLAN\",",
          "3406:   \"   Other Modes:\",",
          "3407: #ifdef SQLITE_DEBUG",
          "3408:   \"      test                  Show raw EXPLAIN QUERY PLAN output\",",
          "3409:   \"      trace                 Like \\\"full\\\" but also enable \\\"PRAGMA vdbe_trace\\\"\",",
          "3410: #endif",
          "3411:   \"      trigger               Like \\\"full\\\" but also show trigger bytecode\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6264:   if( c=='e' && strncmp(azArg[0], \"eqp\", n)==0 ){",
          "6265:     if( nArg==2 ){",
          "6266:       p->autoEQPtest = 0;",
          "6267:       if( strcmp(azArg[1],\"full\")==0 ){",
          "6268:         p->autoEQP = AUTOEQP_full;",
          "6269:       }else if( strcmp(azArg[1],\"trigger\")==0 ){",
          "6270:         p->autoEQP = AUTOEQP_trigger;",
          "6271:       }else if( strcmp(azArg[1],\"test\")==0 ){",
          "6272:         p->autoEQP = AUTOEQP_on;",
          "6273:         p->autoEQPtest = 1;",
          "6274:       }else{",
          "6275:         p->autoEQP = (u8)booleanValue(azArg[1]);",
          "6276:       }",
          "6277:     }else{",
          "6279:       rc = 1;",
          "6280:     }",
          "6281:   }else",
          "",
          "[Removed Lines]",
          "6278:       raw_printf(stderr, \"Usage: .eqp off|on|trigger|full\\n\");",
          "",
          "[Added Lines]",
          "6274:       if( p->autoEQPtrace ){",
          "6275:         if( p->db ) sqlite3_exec(p->db, \"PRAGMA vdbe_trace=OFF;\", 0, 0, 0);",
          "6276:         p->autoEQPtrace = 0;",
          "6277:       }",
          "6282: #ifdef SQLITE_DEBUG",
          "6286:       }else if( strcmp(azArg[1],\"trace\")==0 ){",
          "6287:         p->autoEQP = AUTOEQP_full;",
          "6288:         p->autoEQPtrace = 1;",
          "6289:         open_db(p, 0);",
          "6290:         (void)sqlite3_table_column_metadata(p->db, \"x\",\"x\",0,0,0,0,0,0);",
          "6291:         sqlite3_exec(p->db, \"PRAGMA vdbe_trace=ON;\", 0, 0, 0);",
          "6292: #endif",
          "6297:       raw_printf(stderr, \"Usage: .eqp off|on|trace|trigger|full\\n\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d79cd92b237d51aeb5f6eb7b68acee27e1c6c279",
      "candidate_info": {
        "commit_hash": "d79cd92b237d51aeb5f6eb7b68acee27e1c6c279",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d79cd92b237d51aeb5f6eb7b68acee27e1c6c279",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c"
        ],
        "message": "Test for an OOM condition in resolveAlias().\n\nFossilOrigin-Name: 322eca7f6ad2234059669015aabb773a790e8bc3da95431c9c851ff5342c969b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1cc6cf6407c6e25aeafeca379a93d0ad2614839c07fb3644e46926fce5f1cfab",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:       pExpr->flags |= EP_MemToken;",
          "98:     }",
          "99:     if( ExprHasProperty(pExpr, EP_WinFunc) ){",
          "101:     }",
          "102:     sqlite3DbFree(db, pDup);",
          "103:   }",
          "",
          "[Removed Lines]",
          "100:       pExpr->y.pWin->pOwner = pExpr;",
          "",
          "[Added Lines]",
          "100:       if( pExpr->y.pWin!=0 ){",
          "101:         pExpr->y.pWin->pOwner = pExpr;",
          "102:       }else{",
          "103:         assert( db->mallocFailed );",
          "104:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "276d7f78470002e09ede5bd96556cddbc23cd678",
      "candidate_info": {
        "commit_hash": "276d7f78470002e09ede5bd96556cddbc23cd678",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/276d7f78470002e09ede5bd96556cddbc23cd678",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/lempar.c"
        ],
        "message": "Try to fix a harmless compiler warning reported by ICC.\n\nFossilOrigin-Name: 7f41b44ca2ecb907ea0fd09a974ac9dbdf911463a94f0f77c826cf1b1d9c3e8c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/lempar.c||tool/lempar.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b528bdcd45db1b783ecd9739c3d3c890f04de7003f079668970eafaf8e23b2f3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/lempar.c||tool/lempar.c": [
          "File: tool/lempar.c -> tool/lempar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1068:   return yyFallback[iToken];",
          "1069: #else",
          "1070:   (void)iToken;",
          "1072:   return 0;",
          "1073: }",
          "",
          "[Removed Lines]",
          "1071: #endif",
          "",
          "[Added Lines]",
          "1072: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2b6806b3e4dd2d39b2d776e7eaecff17bc2d086",
      "candidate_info": {
        "commit_hash": "a2b6806b3e4dd2d39b2d776e7eaecff17bc2d086",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a2b6806b3e4dd2d39b2d776e7eaecff17bc2d086",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c"
        ],
        "message": "If the string formatter in sqlite3NestedParse() fails due to an over-length string, make sure this error is recorded by the parser so that it knows to fail.\n\nFossilOrigin-Name: 85e53ff13300132250221de769a2aa7d92d81bb48d60f6e99000bc69a5b1e6fb",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bbdbaf84a52937ccf877072a8b01b07f7b9c037c59ba54df72ca888d5404cbad",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "266:     if( !db->mallocFailed ) pParse->rc = SQLITE_TOOBIG;",
          "267:     return;",
          "268:   }",
          "269:   pParse->nested++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "267:     pParse->nErr++;",
          "",
          "---------------"
        ]
      }
    }
  ]
}