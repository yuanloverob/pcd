{
  "cve_id": "CVE-2015-0274",
  "cve_desc": "The XFS implementation in the Linux kernel before 3.15 improperly uses an old size value during remote attribute replacement, which allows local users to cause a denial of service (transaction overrun and data corruption) or possibly gain privileges by leveraging XFS filesystem access.",
  "repo": "torvalds/linux",
  "patch_hash": "8275cdd0e7ac550dcce2b3ef6d2fb3b808c1ae59",
  "patch_info": {
    "commit_hash": "8275cdd0e7ac550dcce2b3ef6d2fb3b808c1ae59",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/8275cdd0e7ac550dcce2b3ef6d2fb3b808c1ae59",
    "files": [
      "fs/xfs/xfs_attr.c",
      "fs/xfs/xfs_attr_leaf.c",
      "fs/xfs/xfs_attr_list.c",
      "fs/xfs/xfs_attr_remote.c",
      "fs/xfs/xfs_da_btree.h"
    ],
    "message": "xfs: remote attribute overwrite causes transaction overrun\n\nCommit e461fcb (\"xfs: remote attribute lookups require the value\nlength\") passes the remote attribute length in the xfs_da_args\nstructure on lookup so that CRC calculations and validity checking\ncan be performed correctly by related code. This, unfortunately has\nthe side effect of changing the args->valuelen parameter in cases\nwhere it shouldn't.\n\nThat is, when we replace a remote attribute, the incoming\nreplacement stores the value and length in args->value and\nargs->valuelen, but then the lookup which finds the existing remote\nattribute overwrites args->valuelen with the length of the remote\nattribute being replaced. Hence when we go to create the new\nattribute, we create it of the size of the existing remote\nattribute, not the size it is supposed to be. When the new attribute\nis much smaller than the old attribute, this results in a\ntransaction overrun and an ASSERT() failure on a debug kernel:\n\nXFS: Assertion failed: tp->t_blk_res_used <= tp->t_blk_res, file: fs/xfs/xfs_trans.c, line: 331\n\nFix this by keeping the remote attribute value length separate to\nthe attribute value length in the xfs_da_args structure. The enables\nus to pass the length of the remote attribute to be removed without\noverwriting the new attribute's length.\n\nAlso, ensure that when we save remote block contexts for a later\nrename we zero the original state variables so that we don't confuse\nthe state of the attribute to be removes with the state of the new\nattribute that we just added. [Spotted by Brain Foster.]\n\nSigned-off-by: Dave Chinner <dchinner@redhat.com>\nReviewed-by: Brian Foster <bfoster@redhat.com>\nSigned-off-by: Dave Chinner <david@fromorbit.com>",
    "before_after_code_files": [
      "fs/xfs/xfs_attr.c||fs/xfs/xfs_attr.c",
      "fs/xfs/xfs_attr_leaf.c||fs/xfs/xfs_attr_leaf.c",
      "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c",
      "fs/xfs/xfs_attr_remote.c||fs/xfs/xfs_attr_remote.c",
      "fs/xfs/xfs_da_btree.h||fs/xfs/xfs_da_btree.h"
    ]
  },
  "patch_diff": {
    "fs/xfs/xfs_attr.c||fs/xfs/xfs_attr.c": [
      "File: fs/xfs/xfs_attr.c -> fs/xfs/xfs_attr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "217:   nblks += dblocks;",
      "218:   nblks += XFS_NEXTENTADD_SPACE_RES(mp, dblocks, XFS_ATTR_FORK);",
      "219:  }",
      "",
      "[Removed Lines]",
      "216:   uint dblocks = XFS_B_TO_FSB(mp, valuelen);",
      "",
      "[Added Lines]",
      "216:   uint dblocks = xfs_attr3_rmt_blocks(mp, valuelen);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "699:   trace_xfs_attr_leaf_replace(args);",
      "703:   args->index2 = args->index;",
      "704:   args->rmtblkno2 = args->rmtblkno;",
      "705:   args->rmtblkcnt2 = args->rmtblkcnt;",
      "706:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "707:   args->rmtvaluelen2 = args->rmtvaluelen;",
      "714:   args->rmtblkno = 0;",
      "715:   args->rmtblkcnt = 0;",
      "716:   args->rmtvaluelen = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "794:   args->blkno = args->blkno2;",
      "795:   args->rmtblkno = args->rmtblkno2;",
      "796:   args->rmtblkcnt = args->rmtblkcnt2;",
      "797:   if (args->rmtblkno) {",
      "798:    error = xfs_attr_rmtval_remove(args);",
      "799:    if (error)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "808:   args->rmtvaluelen = args->rmtvaluelen2;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1000:   trace_xfs_attr_node_replace(args);",
      "1004:   args->index2 = args->index;",
      "1005:   args->rmtblkno2 = args->rmtblkno;",
      "1006:   args->rmtblkcnt2 = args->rmtblkcnt;",
      "1007:   args->rmtblkno = 0;",
      "1008:   args->rmtblkcnt = 0;",
      "1009:  }",
      "1011:  retval = xfs_attr3_leaf_add(blk->bp, state->args);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1020:   args->rmtvaluelen2 = args->rmtvaluelen;",
      "1029:   args->rmtvaluelen = 0;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1133:   args->blkno = args->blkno2;",
      "1134:   args->rmtblkno = args->rmtblkno2;",
      "1135:   args->rmtblkcnt = args->rmtblkcnt2;",
      "1136:   if (args->rmtblkno) {",
      "1137:    error = xfs_attr_rmtval_remove(args);",
      "1138:    if (error)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1157:   args->rmtvaluelen = args->rmtvaluelen2;",
      "",
      "---------------"
    ],
    "fs/xfs/xfs_attr_leaf.c||fs/xfs/xfs_attr_leaf.c": [
      "File: fs/xfs/xfs_attr_leaf.c -> fs/xfs/xfs_attr_leaf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1229:   name_rmt->valueblk = 0;",
      "1230:   args->rmtblkno = 1;",
      "1231:   args->rmtblkcnt = xfs_attr3_rmt_blocks(mp, args->valuelen);",
      "1232:  }",
      "1233:  xfs_trans_log_buf(args->trans, bp,",
      "1234:       XFS_DA_LOGRANGE(leaf, xfs_attr3_leaf_name(leaf, args->index),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1232:   args->rmtvaluelen = args->valuelen;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2167:    if (!xfs_attr_namesp_match(args->flags, entry->flags))",
      "2168:     continue;",
      "2169:    args->index = probe;",
      "2171:    args->rmtblkno = be32_to_cpu(name_rmt->valueblk);",
      "2172:    args->rmtblkcnt = xfs_attr3_rmt_blocks(",
      "2173:        args->dp->i_mount,",
      "2175:    return XFS_ERROR(EEXIST);",
      "2176:   }",
      "2177:  }",
      "",
      "[Removed Lines]",
      "2170:    args->valuelen = be32_to_cpu(name_rmt->valuelen);",
      "2174:        args->valuelen);",
      "",
      "[Added Lines]",
      "2171:    args->rmtvaluelen = be32_to_cpu(name_rmt->valuelen);",
      "2175:        args->rmtvaluelen);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2220:   name_rmt = xfs_attr3_leaf_name_remote(leaf, args->index);",
      "2221:   ASSERT(name_rmt->namelen == args->namelen);",
      "2222:   ASSERT(memcmp(args->name, name_rmt->name, args->namelen) == 0);",
      "2224:   args->rmtblkno = be32_to_cpu(name_rmt->valueblk);",
      "2225:   args->rmtblkcnt = xfs_attr3_rmt_blocks(args->dp->i_mount,",
      "2227:   if (args->flags & ATTR_KERNOVAL) {",
      "2229:    return 0;",
      "2230:   }",
      "2233:    return XFS_ERROR(ERANGE);",
      "2234:   }",
      "2236:  }",
      "2237:  return 0;",
      "2238: }",
      "",
      "[Removed Lines]",
      "2223:   valuelen = be32_to_cpu(name_rmt->valuelen);",
      "2226:              valuelen);",
      "2228:    args->valuelen = valuelen;",
      "2231:   if (args->valuelen < valuelen) {",
      "2232:    args->valuelen = valuelen;",
      "2235:   args->valuelen = valuelen;",
      "",
      "[Added Lines]",
      "2224:   args->rmtvaluelen = be32_to_cpu(name_rmt->valuelen);",
      "2227:              args->rmtvaluelen);",
      "2229:    args->valuelen = args->rmtvaluelen;",
      "2232:   if (args->valuelen < args->rmtvaluelen) {",
      "2233:    args->valuelen = args->rmtvaluelen;",
      "2236:   args->valuelen = args->rmtvaluelen;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2519:   ASSERT((entry->flags & XFS_ATTR_LOCAL) == 0);",
      "2520:   name_rmt = xfs_attr3_leaf_name_remote(leaf, args->index);",
      "2521:   name_rmt->valueblk = cpu_to_be32(args->rmtblkno);",
      "2523:   xfs_trans_log_buf(args->trans, bp,",
      "2524:     XFS_DA_LOGRANGE(leaf, name_rmt, sizeof(*name_rmt)));",
      "2525:  }",
      "",
      "[Removed Lines]",
      "2522:   name_rmt->valuelen = cpu_to_be32(args->valuelen);",
      "",
      "[Added Lines]",
      "2523:   name_rmt->valuelen = cpu_to_be32(args->rmtvaluelen);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2677:   ASSERT((entry1->flags & XFS_ATTR_LOCAL) == 0);",
      "2678:   name_rmt = xfs_attr3_leaf_name_remote(leaf1, args->index);",
      "2679:   name_rmt->valueblk = cpu_to_be32(args->rmtblkno);",
      "2681:   xfs_trans_log_buf(args->trans, bp1,",
      "2682:     XFS_DA_LOGRANGE(leaf1, name_rmt, sizeof(*name_rmt)));",
      "2683:  }",
      "",
      "[Removed Lines]",
      "2680:   name_rmt->valuelen = cpu_to_be32(args->valuelen);",
      "",
      "[Added Lines]",
      "2681:   name_rmt->valuelen = cpu_to_be32(args->rmtvaluelen);",
      "",
      "---------------"
    ],
    "fs/xfs/xfs_attr_list.c||fs/xfs/xfs_attr_list.c": [
      "File: fs/xfs/xfs_attr_list.c -> fs/xfs/xfs_attr_list.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "447:     args.dp = context->dp;",
      "448:     args.whichfork = XFS_ATTR_FORK;",
      "449:     args.valuelen = valuelen;",
      "450:     args.value = kmem_alloc(valuelen, KM_SLEEP | KM_NOFS);",
      "451:     args.rmtblkno = be32_to_cpu(name_rmt->valueblk);",
      "452:     args.rmtblkcnt = xfs_attr3_rmt_blocks(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "450:     args.rmtvaluelen = valuelen;",
      "",
      "---------------"
    ],
    "fs/xfs/xfs_attr_remote.c||fs/xfs/xfs_attr_remote.c": [
      "File: fs/xfs/xfs_attr_remote.c -> fs/xfs/xfs_attr_remote.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "337:  struct xfs_buf  *bp;",
      "338:  xfs_dablk_t  lblkno = args->rmtblkno;",
      "339:  __uint8_t  *dst = args->value;",
      "341:  int   nmap;",
      "342:  int   error;",
      "343:  int   blkcnt = args->rmtblkcnt;",
      "",
      "[Removed Lines]",
      "340:  int   valuelen = args->valuelen;",
      "",
      "[Added Lines]",
      "340:  int   valuelen;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "347:  trace_xfs_attr_rmtval_get(args);",
      "349:  ASSERT(!(args->flags & ATTR_KERNOVAL));",
      "351:  while (valuelen > 0) {",
      "352:   nmap = ATTR_RMTVALUE_MAPSIZE;",
      "353:   error = xfs_bmapi_read(args->dp, (xfs_fileoff_t)lblkno,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "350:  ASSERT(args->rmtvaluelen == args->valuelen);",
      "352:  valuelen = args->rmtvaluelen;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "419:  error = xfs_bmap_first_unused(args->trans, args->dp, blkcnt, &lfileoff,",
      "420:          XFS_ATTR_FORK);",
      "421:  if (error)",
      "",
      "[Removed Lines]",
      "418:  blkcnt = xfs_attr3_rmt_blocks(mp, args->valuelen);",
      "",
      "[Added Lines]",
      "420:  blkcnt = xfs_attr3_rmt_blocks(mp, args->rmtvaluelen);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "481:  lblkno = args->rmtblkno;",
      "482:  blkcnt = args->rmtblkcnt;",
      "484:  while (valuelen > 0) {",
      "485:   struct xfs_buf *bp;",
      "486:   xfs_daddr_t dblkno;",
      "",
      "[Removed Lines]",
      "483:  valuelen = args->valuelen;",
      "",
      "[Added Lines]",
      "485:  valuelen = args->rmtvaluelen;",
      "",
      "---------------"
    ],
    "fs/xfs/xfs_da_btree.h||fs/xfs/xfs_da_btree.h": [
      "File: fs/xfs/xfs_da_btree.h -> fs/xfs/xfs_da_btree.h"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7bc0dc271e494e12be3afd3c6431e5216347c624",
      "candidate_info": {
        "commit_hash": "7bc0dc271e494e12be3afd3c6431e5216347c624",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7bc0dc271e494e12be3afd3c6431e5216347c624",
        "files": [
          "fs/xfs/xfs_attr_leaf.c",
          "fs/xfs/xfs_attr_remote.c",
          "fs/xfs/xfs_attr_remote.h",
          "fs/xfs/xfs_buf.c"
        ],
        "message": "xfs: rework remote attr CRCs\n\nNote: this changes the on-disk remote attribute format. I assert\nthat this is OK to do as CRCs are marked experimental and the first\nkernel it is included in has not yet reached release yet. Further,\nthe userspace utilities are still evolving and so anyone using this\nstuff right now is a developer or tester using volatile filesystems\nfor testing this feature. Hence changing the format right now to\nsave longer term pain is the right thing to do.\n\nThe fundamental change is to move from a header per extent in the\nattribute to a header per filesytem block in the attribute. This\nmeans there are more header blocks and the parsing of the attribute\ndata is slightly more complex, but it has the advantage that we\nalways know the size of the attribute on disk based on the length of\nthe data it contains.\n\nThis is where the header-per-extent method has problems. We don't\nknow the size of the attribute on disk without first knowing how\nmany extents are used to hold it. And we can't tell from a\nmapping lookup, either, because remote attributes can be allocated\ncontiguously with other attribute blocks and so there is no obvious\nway of determining the actual size of the atribute on disk short of\nwalking and mapping buffers.\n\nThe problem with this approach is that if we map a buffer\nincorrectly (e.g. we make the last buffer for the attribute data too\nlong), we then get buffer cache lookup failure when we map it\ncorrectly. i.e. we get a size mismatch on lookup. This is not\nnecessarily fatal, but it's a cache coherency problem that can lead\nto returning the wrong data to userspace or writing the wrong data\nto disk. And debug kernels will assert fail if this occurs.\n\nI found lots of niggly little problems trying to fix this issue on a\n4k block size filesystem, finally getting it to pass with lots of\nfixes. The thing is, 1024 byte filesystems still failed, and it was\ngetting really complex handling all the corner cases that were\nshowing up. And there were clearly more that I hadn't found yet.\n\nIt is complex, fragile code, and if we don't fix it now, it will be\ncomplex, fragile code forever more.\n\nHence the simple fix is to add a header to each filesystem block.\nThis gives us the same relationship between the attribute data\nlength and the number of blocks on disk as we have without CRCs -\nit's a linear mapping and doesn't require us to guess anything. It\nis simple to implement, too - the remote block count calculated at\nlookup time can be used by the remote attribute set/get/remove code\nwithout modification for both CRC and non-CRC filesystems. The world\nbecomes sane again.\n\nBecause the copy-in and copy-out now need to iterate over each\nfilesystem block, I moved them into helper functions so we separate\nthe block mapping and buffer manupulations from the attribute data\nand CRC header manipulations. The code becomes much clearer as a\nresult, and it is a lot easier to understand and debug. It also\nappears to be much more robust - once it worked on 4k block size\nfilesystems, it has worked without failure on 1k block size\nfilesystems, too.\n\nSigned-off-by: Dave Chinner <dchinner@redhat.com>\nReviewed-by: Ben Myers <bpm@sgi.com>\nSigned-off-by: Ben Myers <bpm@sgi.com>\n\n(cherry picked from commit ad1858d77771172e08016890f0eb2faedec3ecee)",
        "before_after_code_files": [
          "fs/xfs/xfs_attr_leaf.c||fs/xfs/xfs_attr_leaf.c",
          "fs/xfs/xfs_attr_remote.c||fs/xfs/xfs_attr_remote.c",
          "fs/xfs/xfs_attr_remote.h||fs/xfs/xfs_attr_remote.h",
          "fs/xfs/xfs_buf.c||fs/xfs/xfs_buf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/xfs/xfs_attr_leaf.c||fs/xfs/xfs_attr_leaf.c",
            "fs/xfs/xfs_attr_remote.c||fs/xfs/xfs_attr_remote.c"
          ],
          "candidate": [
            "fs/xfs/xfs_attr_leaf.c||fs/xfs/xfs_attr_leaf.c",
            "fs/xfs/xfs_attr_remote.c||fs/xfs/xfs_attr_remote.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/xfs/xfs_attr_leaf.c||fs/xfs/xfs_attr_leaf.c": [
          "File: fs/xfs/xfs_attr_leaf.c -> fs/xfs/xfs_attr_leaf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1412:   name_rmt->valuelen = 0;",
          "1413:   name_rmt->valueblk = 0;",
          "1414:   args->rmtblkno = 1;",
          "1416:  }",
          "1417:  xfs_trans_log_buf(args->trans, bp,",
          "1418:       XFS_DA_LOGRANGE(leaf, xfs_attr3_leaf_name(leaf, args->index),",
          "",
          "[Removed Lines]",
          "1415:   args->rmtblkcnt = XFS_B_TO_FSB(mp, args->valuelen);",
          "",
          "[Added Lines]",
          "1415:   args->rmtblkcnt = xfs_attr3_rmt_blocks(mp, args->valuelen);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2354:    args->index = probe;",
          "2355:    args->valuelen = be32_to_cpu(name_rmt->valuelen);",
          "2356:    args->rmtblkno = be32_to_cpu(name_rmt->valueblk);",
          "2359:    return XFS_ERROR(EEXIST);",
          "2360:   }",
          "2361:  }",
          "",
          "[Removed Lines]",
          "2357:    args->rmtblkcnt = XFS_B_TO_FSB(args->dp->i_mount,",
          "2358:              args->valuelen);",
          "",
          "[Added Lines]",
          "2357:    args->rmtblkcnt = xfs_attr3_rmt_blocks(",
          "2358:        args->dp->i_mount,",
          "2359:        args->valuelen);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2406:   ASSERT(memcmp(args->name, name_rmt->name, args->namelen) == 0);",
          "2407:   valuelen = be32_to_cpu(name_rmt->valuelen);",
          "2408:   args->rmtblkno = be32_to_cpu(name_rmt->valueblk);",
          "2410:   if (args->flags & ATTR_KERNOVAL) {",
          "2411:    args->valuelen = valuelen;",
          "2412:    return 0;",
          "",
          "[Removed Lines]",
          "2409:   args->rmtblkcnt = XFS_B_TO_FSB(args->dp->i_mount, valuelen);",
          "",
          "[Added Lines]",
          "2410:   args->rmtblkcnt = xfs_attr3_rmt_blocks(args->dp->i_mount,",
          "2411:              valuelen);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2732:     args.valuelen = valuelen;",
          "2733:     args.value = kmem_alloc(valuelen, KM_SLEEP | KM_NOFS);",
          "2734:     args.rmtblkno = be32_to_cpu(name_rmt->valueblk);",
          "2736:     retval = xfs_attr_rmtval_get(&args);",
          "2737:     if (retval)",
          "2738:      return retval;",
          "",
          "[Removed Lines]",
          "2735:     args.rmtblkcnt = XFS_B_TO_FSB(args.dp->i_mount, valuelen);",
          "",
          "[Added Lines]",
          "2737:     args.rmtblkcnt = xfs_attr3_rmt_blocks(",
          "2738:        args.dp->i_mount, valuelen);",
          "",
          "---------------"
        ],
        "fs/xfs/xfs_attr_remote.c||fs/xfs/xfs_attr_remote.c": [
          "File: fs/xfs/xfs_attr_remote.c -> fs/xfs/xfs_attr_remote.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: xfs_attr3_rmt_blocks(",
          "52:  struct xfs_mount *mp,",
          "53:  int  attrlen)",
          "",
          "[Removed Lines]",
          "50: static int",
          "",
          "[Added Lines]",
          "50: int",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:  return XFS_B_TO_FSB(mp, attrlen);",
          "60: }",
          "62: static bool",
          "63: xfs_attr3_rmt_verify(",
          "65: {",
          "69:  if (!xfs_sb_version_hascrc(&mp->m_sb))",
          "70:   return false;",
          "",
          "[Removed Lines]",
          "64:  struct xfs_buf  *bp)",
          "66:  struct xfs_mount *mp = bp->b_target->bt_mount;",
          "67:  struct xfs_attr3_rmt_hdr *rmt = bp->b_addr;",
          "",
          "[Added Lines]",
          "67: static bool",
          "68: xfs_attr3_rmt_hdr_ok(",
          "69:  struct xfs_mount *mp,",
          "70:  void   *ptr,",
          "71:  xfs_ino_t  ino,",
          "72:  uint32_t  offset,",
          "73:  uint32_t  size,",
          "74:  xfs_daddr_t  bno)",
          "75: {",
          "76:  struct xfs_attr3_rmt_hdr *rmt = ptr;",
          "78:  if (bno != be64_to_cpu(rmt->rm_blkno))",
          "79:   return false;",
          "80:  if (offset != be32_to_cpu(rmt->rm_offset))",
          "81:   return false;",
          "82:  if (size != be32_to_cpu(rmt->rm_bytes))",
          "83:   return false;",
          "84:  if (ino != be64_to_cpu(rmt->rm_owner))",
          "85:   return false;",
          "88:  return true;",
          "89: }",
          "93:  struct xfs_mount *mp,",
          "94:  void   *ptr,",
          "95:  int   fsbsize,",
          "96:  xfs_daddr_t  bno)",
          "98:  struct xfs_attr3_rmt_hdr *rmt = ptr;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72:   return false;",
          "73:  if (!uuid_equal(&rmt->rm_uuid, &mp->m_sb.sb_uuid))",
          "74:   return false;",
          "76:   return false;",
          "77:  if (be32_to_cpu(rmt->rm_offset) +",
          "78:     be32_to_cpu(rmt->rm_bytes) >= XATTR_SIZE_MAX)",
          "",
          "[Removed Lines]",
          "75:  if (bp->b_bn != be64_to_cpu(rmt->rm_blkno))",
          "",
          "[Added Lines]",
          "106:  if (be64_to_cpu(rmt->rm_blkno) != bno)",
          "107:   return false;",
          "108:  if (be32_to_cpu(rmt->rm_bytes) > fsbsize - sizeof(*rmt))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88:  struct xfs_buf *bp)",
          "89: {",
          "90:  struct xfs_mount *mp = bp->b_target->bt_mount;",
          "93:  if (!xfs_sb_version_hascrc(&mp->m_sb))",
          "94:   return;",
          "99:   XFS_CORRUPTION_ERROR(__func__, XFS_ERRLEVEL_LOW, mp, bp->b_addr);",
          "100:   xfs_buf_ioerror(bp, EFSCORRUPTED);",
          "102: }",
          "104: static void",
          "",
          "[Removed Lines]",
          "96:  if (!xfs_verify_cksum(bp->b_addr, BBTOB(bp->b_length),",
          "97:          XFS_ATTR3_RMT_CRC_OFF) ||",
          "98:      !xfs_attr3_rmt_verify(bp)) {",
          "101:  }",
          "",
          "[Added Lines]",
          "124:  char  *ptr;",
          "125:  int  len;",
          "126:  bool  corrupt = false;",
          "127:  xfs_daddr_t bno;",
          "133:  ptr = bp->b_addr;",
          "134:  bno = bp->b_bn;",
          "135:  len = BBTOB(bp->b_length);",
          "136:  ASSERT(len >= XFS_LBSIZE(mp));",
          "138:  while (len > 0) {",
          "139:   if (!xfs_verify_cksum(ptr, XFS_LBSIZE(mp),",
          "140:           XFS_ATTR3_RMT_CRC_OFF)) {",
          "141:    corrupt = true;",
          "142:    break;",
          "143:   }",
          "144:   if (!xfs_attr3_rmt_verify(mp, ptr, XFS_LBSIZE(mp), bno)) {",
          "145:    corrupt = true;",
          "146:    break;",
          "147:   }",
          "148:   len -= XFS_LBSIZE(mp);",
          "149:   ptr += XFS_LBSIZE(mp);",
          "150:   bno += mp->m_bsize;",
          "151:  }",
          "153:  if (corrupt) {",
          "156:  } else",
          "157:   ASSERT(len == 0);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "107: {",
          "108:  struct xfs_mount *mp = bp->b_target->bt_mount;",
          "109:  struct xfs_buf_log_item *bip = bp->b_fspriv;",
          "112:  if (!xfs_sb_version_hascrc(&mp->m_sb))",
          "113:   return;",
          "124:  }",
          "127: }",
          "129: const struct xfs_buf_ops xfs_attr3_rmt_buf_ops = {",
          "",
          "[Removed Lines]",
          "115:  if (!xfs_attr3_rmt_verify(bp)) {",
          "116:   XFS_CORRUPTION_ERROR(__func__, XFS_ERRLEVEL_LOW, mp, bp->b_addr);",
          "117:   xfs_buf_ioerror(bp, EFSCORRUPTED);",
          "118:   return;",
          "119:  }",
          "121:  if (bip) {",
          "122:   struct xfs_attr3_rmt_hdr *rmt = bp->b_addr;",
          "123:   rmt->rm_lsn = cpu_to_be64(bip->bli_item.li_lsn);",
          "125:  xfs_update_cksum(bp->b_addr, BBTOB(bp->b_length),",
          "126:     XFS_ATTR3_RMT_CRC_OFF);",
          "",
          "[Added Lines]",
          "166:  char  *ptr;",
          "167:  int  len;",
          "168:  xfs_daddr_t bno;",
          "174:  ptr = bp->b_addr;",
          "175:  bno = bp->b_bn;",
          "176:  len = BBTOB(bp->b_length);",
          "177:  ASSERT(len >= XFS_LBSIZE(mp));",
          "179:  while (len > 0) {",
          "180:   if (!xfs_attr3_rmt_verify(mp, ptr, XFS_LBSIZE(mp), bno)) {",
          "181:    XFS_CORRUPTION_ERROR(__func__,",
          "182:          XFS_ERRLEVEL_LOW, mp, bp->b_addr);",
          "183:    xfs_buf_ioerror(bp, EFSCORRUPTED);",
          "184:    return;",
          "185:   }",
          "186:   if (bip) {",
          "187:    struct xfs_attr3_rmt_hdr *rmt;",
          "189:    rmt = (struct xfs_attr3_rmt_hdr *)ptr;",
          "190:    rmt->rm_lsn = cpu_to_be64(bip->bli_item.li_lsn);",
          "191:   }",
          "192:   xfs_update_cksum(ptr, XFS_LBSIZE(mp), XFS_ATTR3_RMT_CRC_OFF);",
          "194:   len -= XFS_LBSIZE(mp);",
          "195:   ptr += XFS_LBSIZE(mp);",
          "196:   bno += mp->m_bsize;",
          "198:  ASSERT(len == 0);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "131:  .verify_write = xfs_attr3_rmt_write_verify,",
          "132: };",
          "135: xfs_attr3_rmt_hdr_set(",
          "136:  struct xfs_mount *mp,",
          "137:  xfs_ino_t  ino,",
          "138:  uint32_t  offset,",
          "139:  uint32_t  size,",
          "141: {",
          "144:  if (!xfs_sb_version_hascrc(&mp->m_sb))",
          "145:   return 0;",
          "",
          "[Removed Lines]",
          "134: static int",
          "140:  struct xfs_buf  *bp)",
          "142:  struct xfs_attr3_rmt_hdr *rmt = bp->b_addr;",
          "",
          "[Added Lines]",
          "206: STATIC int",
          "209:  void   *ptr,",
          "213:  xfs_daddr_t  bno)",
          "215:  struct xfs_attr3_rmt_hdr *rmt = ptr;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "149:  rmt->rm_bytes = cpu_to_be32(size);",
          "150:  uuid_copy(&rmt->rm_uuid, &mp->m_sb.sb_uuid);",
          "151:  rmt->rm_owner = cpu_to_be64(ino);",
          "155:  return sizeof(struct xfs_attr3_rmt_hdr);",
          "156: }",
          "170: {",
          "182: }",
          "",
          "[Removed Lines]",
          "152:  rmt->rm_blkno = cpu_to_be64(bp->b_bn);",
          "153:  bp->b_ops = &xfs_attr3_rmt_buf_ops;",
          "163: static bool",
          "164: xfs_attr3_rmt_hdr_ok(",
          "165:  struct xfs_mount *mp,",
          "166:  xfs_ino_t  ino,",
          "167:  uint32_t  offset,",
          "168:  uint32_t  size,",
          "169:  struct xfs_buf  *bp)",
          "171:  struct xfs_attr3_rmt_hdr *rmt = bp->b_addr;",
          "173:  if (offset != be32_to_cpu(rmt->rm_offset))",
          "174:   return false;",
          "175:  if (size != be32_to_cpu(rmt->rm_bytes))",
          "176:   return false;",
          "177:  if (ino != be64_to_cpu(rmt->rm_owner))",
          "178:   return false;",
          "181:  return true;",
          "",
          "[Added Lines]",
          "225:  rmt->rm_blkno = cpu_to_be64(bno);",
          "233: STATIC int",
          "234: xfs_attr_rmtval_copyout(",
          "235:  struct xfs_mount *mp,",
          "236:  struct xfs_buf *bp,",
          "237:  xfs_ino_t ino,",
          "238:  int  *offset,",
          "239:  int  *valuelen,",
          "240:  char  **dst)",
          "242:  char  *src = bp->b_addr;",
          "243:  xfs_daddr_t bno = bp->b_bn;",
          "244:  int  len = BBTOB(bp->b_length);",
          "246:  ASSERT(len >= XFS_LBSIZE(mp));",
          "248:  while (len > 0 && *valuelen > 0) {",
          "249:   int hdr_size = 0;",
          "250:   int byte_cnt = XFS_ATTR3_RMT_BUF_SPACE(mp, XFS_LBSIZE(mp));",
          "252:   byte_cnt = min_t(int, *valuelen, byte_cnt);",
          "254:   if (xfs_sb_version_hascrc(&mp->m_sb)) {",
          "255:    if (!xfs_attr3_rmt_hdr_ok(mp, src, ino, *offset,",
          "256:         byte_cnt, bno)) {",
          "257:     xfs_alert(mp,",
          "258: \"remote attribute header mismatch bno/off/len/owner (0x%llx/0x%x/Ox%x/0x%llx)\",",
          "259:      bno, *offset, byte_cnt, ino);",
          "260:     return EFSCORRUPTED;",
          "261:    }",
          "262:    hdr_size = sizeof(struct xfs_attr3_rmt_hdr);",
          "263:   }",
          "265:   memcpy(*dst, src + hdr_size, byte_cnt);",
          "268:   len -= XFS_LBSIZE(mp);",
          "269:   src += XFS_LBSIZE(mp);",
          "270:   bno += mp->m_bsize;",
          "276:  }",
          "277:  return 0;",
          "278: }",
          "280: STATIC void",
          "281: xfs_attr_rmtval_copyin(",
          "282:  struct xfs_mount *mp,",
          "283:  struct xfs_buf *bp,",
          "284:  xfs_ino_t ino,",
          "285:  int  *offset,",
          "286:  int  *valuelen,",
          "287:  char  **src)",
          "288: {",
          "289:  char  *dst = bp->b_addr;",
          "290:  xfs_daddr_t bno = bp->b_bn;",
          "291:  int  len = BBTOB(bp->b_length);",
          "293:  ASSERT(len >= XFS_LBSIZE(mp));",
          "295:  while (len > 0 && *valuelen > 0) {",
          "296:   int hdr_size;",
          "297:   int byte_cnt = XFS_ATTR3_RMT_BUF_SPACE(mp, XFS_LBSIZE(mp));",
          "299:   byte_cnt = min(*valuelen, byte_cnt);",
          "300:   hdr_size = xfs_attr3_rmt_hdr_set(mp, dst, ino, *offset,",
          "301:        byte_cnt, bno);",
          "303:   memcpy(dst + hdr_size, *src, byte_cnt);",
          "309:   if (byte_cnt + hdr_size < XFS_LBSIZE(mp)) {",
          "310:    ASSERT(*valuelen - byte_cnt == 0);",
          "311:    ASSERT(len == XFS_LBSIZE(mp));",
          "312:    memset(dst + hdr_size + byte_cnt, 0,",
          "313:      XFS_LBSIZE(mp) - hdr_size - byte_cnt);",
          "314:   }",
          "317:   len -= XFS_LBSIZE(mp);",
          "318:   dst += XFS_LBSIZE(mp);",
          "319:   bno += mp->m_bsize;",
          "325:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "192:  struct xfs_bmbt_irec map[ATTR_RMTVALUE_MAPSIZE];",
          "193:  struct xfs_mount *mp = args->dp->i_mount;",
          "194:  struct xfs_buf  *bp;",
          "196:  xfs_dablk_t  lblkno = args->rmtblkno;",
          "198:  int   valuelen = args->valuelen;",
          "199:  int   nmap;",
          "200:  int   error;",
          "202:  int   i;",
          "203:  int   offset = 0;",
          "",
          "[Removed Lines]",
          "195:  xfs_daddr_t  dblkno;",
          "197:  void   *dst = args->value;",
          "201:  int   blkcnt;",
          "",
          "[Added Lines]",
          "340:  char   *dst = args->value;",
          "344:  int   blkcnt = args->rmtblkcnt;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "209:  while (valuelen > 0) {",
          "210:   nmap = ATTR_RMTVALUE_MAPSIZE;",
          "212:   error = xfs_bmapi_read(args->dp, (xfs_fileoff_t)lblkno,",
          "213:            blkcnt, map, &nmap,",
          "214:            XFS_BMAPI_ATTRFORK);",
          "",
          "[Removed Lines]",
          "211:   blkcnt = xfs_attr3_rmt_blocks(mp, valuelen);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "217:   ASSERT(nmap >= 1);",
          "219:   for (i = 0; (i < nmap) && (valuelen > 0); i++) {",
          "223:    ASSERT((map[i].br_startblock != DELAYSTARTBLOCK) &&",
          "224:           (map[i].br_startblock != HOLESTARTBLOCK));",
          "225:    dblkno = XFS_FSB_TO_DADDR(mp, map[i].br_startblock);",
          "227:    error = xfs_trans_read_buf(mp, NULL, mp->m_ddev_targp,",
          "229:          &xfs_attr3_rmt_buf_ops);",
          "230:    if (error)",
          "231:     return error;",
          "252:    xfs_buf_relse(bp);",
          "258:    lblkno += map[i].br_blockcount;",
          "259:   }",
          "260:  }",
          "261:  ASSERT(valuelen == 0);",
          "",
          "[Removed Lines]",
          "220:    int byte_cnt;",
          "221:    char *src;",
          "226:    blkcnt = XFS_FSB_TO_BB(mp, map[i].br_blockcount);",
          "228:          dblkno, blkcnt, 0, &bp,",
          "233:    byte_cnt = XFS_ATTR3_RMT_BUF_SPACE(mp, BBTOB(bp->b_length));",
          "234:    byte_cnt = min_t(int, valuelen, byte_cnt);",
          "236:    src = bp->b_addr;",
          "237:    if (xfs_sb_version_hascrc(&mp->m_sb)) {",
          "238:     if (!xfs_attr3_rmt_hdr_ok(mp, args->dp->i_ino,",
          "239:        offset, byte_cnt, bp)) {",
          "240:      xfs_alert(mp,",
          "241: \"remote attribute header does not match required off/len/owner (0x%x/Ox%x,0x%llx)\",",
          "242:       offset, byte_cnt, args->dp->i_ino);",
          "243:      xfs_buf_relse(bp);",
          "244:      return EFSCORRUPTED;",
          "246:     }",
          "248:     src += sizeof(struct xfs_attr3_rmt_hdr);",
          "249:    }",
          "251:    memcpy(dst, src, byte_cnt);",
          "254:    offset += byte_cnt;",
          "255:    dst += byte_cnt;",
          "256:    valuelen -= byte_cnt;",
          "",
          "[Added Lines]",
          "362:    xfs_daddr_t dblkno;",
          "363:    int  dblkcnt;",
          "368:    dblkcnt = XFS_FSB_TO_BB(mp, map[i].br_blockcount);",
          "370:          dblkno, dblkcnt, 0, &bp,",
          "375:    error = xfs_attr_rmtval_copyout(mp, bp, args->dp->i_ino,",
          "376:        &offset, &valuelen,",
          "377:        &dst);",
          "379:    if (error)",
          "380:     return error;",
          "384:    blkcnt -= map[i].br_blockcount;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "273:  struct xfs_inode *dp = args->dp;",
          "274:  struct xfs_mount *mp = dp->i_mount;",
          "275:  struct xfs_bmbt_irec map;",
          "278:  xfs_dablk_t  lblkno;",
          "279:  xfs_fileoff_t  lfileoff = 0;",
          "281:  int   blkcnt;",
          "282:  int   valuelen;",
          "283:  int   nmap;",
          "284:  int   error;",
          "287:  int   offset = 0;",
          "289:  trace_xfs_attr_rmtval_set(args);",
          "",
          "[Removed Lines]",
          "276:  struct xfs_buf  *bp;",
          "277:  xfs_daddr_t  dblkno;",
          "280:  void   *src = args->value;",
          "285:  int   hdrcnt = 0;",
          "286:  bool   crcs = xfs_sb_version_hascrc(&mp->m_sb);",
          "",
          "[Added Lines]",
          "404:  char   *src = args->value;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "299:  blkcnt = xfs_attr3_rmt_blocks(mp, args->valuelen);",
          "301:  error = xfs_bmap_first_unused(args->trans, args->dp, blkcnt, &lfileoff,",
          "302:          XFS_ATTR_FORK);",
          "303:  if (error)",
          "304:   return error;",
          "310:  args->rmtblkno = lblkno = (xfs_dablk_t)lfileoff;",
          "311:  args->rmtblkcnt = blkcnt;",
          "",
          "[Removed Lines]",
          "307:  if (crcs)",
          "308:   blkcnt = XFS_B_TO_FSB(mp, args->valuelen);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "349:          (map.br_startblock != HOLESTARTBLOCK));",
          "350:   lblkno += map.br_blockcount;",
          "351:   blkcnt -= map.br_blockcount;",
          "",
          "[Removed Lines]",
          "352:   hdrcnt++;",
          "368:   if (crcs && blkcnt == 0) {",
          "369:    int total_len;",
          "371:    total_len = args->valuelen +",
          "372:         hdrcnt * sizeof(struct xfs_attr3_rmt_hdr);",
          "373:    blkcnt = XFS_B_TO_FSB(mp, total_len);",
          "374:    blkcnt -= args->rmtblkcnt;",
          "375:    args->rmtblkcnt += blkcnt;",
          "376:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "392:  lblkno = args->rmtblkno;",
          "394:  blkcnt = args->rmtblkcnt;",
          "395:  while (valuelen > 0) {",
          "404:   xfs_bmap_init(args->flist, args->firstblock);",
          "405:   nmap = 1;",
          "406:   error = xfs_bmapi_read(dp, (xfs_fileoff_t)lblkno,",
          "",
          "[Removed Lines]",
          "393:  valuelen = args->valuelen;",
          "396:   int byte_cnt;",
          "397:   int hdr_size;",
          "398:   int dblkcnt;",
          "399:   char *buf;",
          "",
          "[Added Lines]",
          "484:  valuelen = args->valuelen;",
          "486:   struct xfs_buf *bp;",
          "487:   xfs_daddr_t dblkno;",
          "488:   int  dblkcnt;",
          "490:   ASSERT(blkcnt > 0);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "419:   if (!bp)",
          "420:    return ENOMEM;",
          "421:   bp->b_ops = &xfs_attr3_rmt_buf_ops;",
          "437:   xfs_buf_relse(bp);",
          "438:   if (error)",
          "439:    return error;",
          "445:   lblkno += map.br_blockcount;",
          "446:   blkcnt -= map.br_blockcount;",
          "447:  }",
          "",
          "[Removed Lines]",
          "422:   buf = bp->b_addr;",
          "424:   byte_cnt = XFS_ATTR3_RMT_BUF_SPACE(mp, BBTOB(bp->b_length));",
          "425:   byte_cnt = min_t(int, valuelen, byte_cnt);",
          "426:   hdr_size = xfs_attr3_rmt_hdr_set(mp, dp->i_ino, offset,",
          "427:           byte_cnt, bp);",
          "428:   ASSERT(hdr_size + byte_cnt <= BBTOB(bp->b_length));",
          "430:   memcpy(buf + hdr_size, src, byte_cnt);",
          "432:   if (byte_cnt + hdr_size < BBTOB(bp->b_length))",
          "433:    xfs_buf_zero(bp, byte_cnt + hdr_size,",
          "434:          BBTOB(bp->b_length) - byte_cnt - hdr_size);",
          "441:   src += byte_cnt;",
          "442:   valuelen -= byte_cnt;",
          "443:   offset += byte_cnt;",
          "",
          "[Added Lines]",
          "511:   xfs_attr_rmtval_copyin(mp, bp, args->dp->i_ino, &offset,",
          "512:            &valuelen, &src);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "456: int",
          "458: {",
          "466:  trace_xfs_attr_rmtval_remove(args);",
          "",
          "[Removed Lines]",
          "457: xfs_attr_rmtval_remove(xfs_da_args_t *args)",
          "459:  xfs_mount_t *mp;",
          "460:  xfs_bmbt_irec_t map;",
          "461:  xfs_buf_t *bp;",
          "462:  xfs_daddr_t dblkno;",
          "463:  xfs_dablk_t lblkno;",
          "464:  int valuelen, blkcnt, nmap, error, done, committed;",
          "468:  mp = args->dp->i_mount;",
          "",
          "[Added Lines]",
          "533: xfs_attr_rmtval_remove(",
          "534:  struct xfs_da_args *args)",
          "536:  struct xfs_mount *mp = args->dp->i_mount;",
          "537:  xfs_dablk_t  lblkno;",
          "538:  int   blkcnt;",
          "539:  int   error;",
          "540:  int   done;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "478:  lblkno = args->rmtblkno;",
          "",
          "[Removed Lines]",
          "479:  valuelen = args->valuelen;",
          "480:  blkcnt = xfs_attr3_rmt_blocks(mp, valuelen);",
          "481:  while (valuelen > 0) {",
          "482:   int dblkcnt;",
          "",
          "[Added Lines]",
          "553:  blkcnt = args->rmtblkcnt;",
          "554:  while (blkcnt > 0) {",
          "555:   struct xfs_bmbt_irec map;",
          "556:   struct xfs_buf  *bp;",
          "557:   xfs_daddr_t  dblkno;",
          "558:   int   dblkcnt;",
          "559:   int   nmap;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "506:    bp = NULL;",
          "507:   }",
          "512:   lblkno += map.br_blockcount;",
          "513:   blkcnt -= map.br_blockcount;",
          "515:  }",
          "521:  lblkno = args->rmtblkno;",
          "522:  done = 0;",
          "523:  while (!done) {",
          "524:   xfs_bmap_init(args->flist, args->firstblock);",
          "525:   error = xfs_bunmapi(args->trans, args->dp, lblkno, blkcnt,",
          "526:         XFS_BMAPI_ATTRFORK | XFS_BMAPI_METADATA,",
          "",
          "[Removed Lines]",
          "509:   valuelen -= XFS_ATTR3_RMT_BUF_SPACE(mp,",
          "510:      XFS_FSB_TO_B(mp, map.br_blockcount));",
          "514:   blkcnt = max(blkcnt, xfs_attr3_rmt_blocks(mp, valuelen));",
          "520:  blkcnt = lblkno - args->rmtblkno;",
          "",
          "[Added Lines]",
          "594:  blkcnt = args->rmtblkcnt;",
          "597:   int committed;",
          "",
          "---------------"
        ],
        "fs/xfs/xfs_attr_remote.h||fs/xfs/xfs_attr_remote.h": [
          "File: fs/xfs/xfs_attr_remote.h -> fs/xfs/xfs_attr_remote.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: extern const struct xfs_buf_ops xfs_attr3_rmt_buf_ops;",
          "42: int xfs_attr_rmtval_get(struct xfs_da_args *args);",
          "43: int xfs_attr_rmtval_set(struct xfs_da_args *args);",
          "44: int xfs_attr_rmtval_remove(struct xfs_da_args *args);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: int xfs_attr3_rmt_blocks(struct xfs_mount *mp, int attrlen);",
          "",
          "---------------"
        ],
        "fs/xfs/xfs_buf.c||fs/xfs/xfs_buf.c": [
          "File: fs/xfs/xfs_buf.c -> fs/xfs/xfs_buf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "513:   xfs_alert(btp->bt_mount,",
          "514:      \"%s: Block out of range: block 0x%llx, EOFS 0x%llx \",",
          "515:      __func__, blkno, eofs);",
          "516:   return NULL;",
          "517:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "516:   WARN_ON(1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ae077802c9f12959a81fa1a16c1ec2842dbae05",
      "candidate_info": {
        "commit_hash": "7ae077802c9f12959a81fa1a16c1ec2842dbae05",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7ae077802c9f12959a81fa1a16c1ec2842dbae05",
        "files": [
          "fs/xfs/xfs_attr_leaf.c"
        ],
        "message": "xfs: remote attribute lookups require the value length\n\nWhen reading a remote attribute, to correctly calculate the length\nof the data buffer for CRC enable filesystems, we need to know the\nlength of the attribute data. We get this information when we look\nup the attribute, but we don't store it in the args structure along\nwith the other remote attr information we get from the lookup. Add\nthis information to the args structure so we can use it\nappropriately.\n\nSigned-off-by: Dave Chinner <dchinner@redhat.com>\nReviewed-by: Ben Myers <bpm@sgi.com>\nSigned-off-by: Ben Myers <bpm@sgi.com>\n\n(cherry picked from commit e461fcb194172b3f709e0b478d2ac1bdac7ab9a3)",
        "before_after_code_files": [
          "fs/xfs/xfs_attr_leaf.c||fs/xfs/xfs_attr_leaf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/xfs/xfs_attr_leaf.c||fs/xfs/xfs_attr_leaf.c"
          ],
          "candidate": [
            "fs/xfs/xfs_attr_leaf.c||fs/xfs/xfs_attr_leaf.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/xfs/xfs_attr_leaf.c||fs/xfs/xfs_attr_leaf.c": [
          "File: fs/xfs/xfs_attr_leaf.c -> fs/xfs/xfs_attr_leaf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2332:    if (!xfs_attr_namesp_match(args->flags, entry->flags))",
          "2333:     continue;",
          "2334:    args->index = probe;",
          "2335:    args->rmtblkno = be32_to_cpu(name_rmt->valueblk);",
          "2336:    args->rmtblkcnt = XFS_B_TO_FSB(args->dp->i_mount,",
          "2338:    return XFS_ERROR(EEXIST);",
          "2339:   }",
          "2340:  }",
          "",
          "[Removed Lines]",
          "2337:          be32_to_cpu(name_rmt->valuelen));",
          "",
          "[Added Lines]",
          "2335:    args->valuelen = be32_to_cpu(name_rmt->valuelen);",
          "2338:              args->valuelen);",
          "",
          "---------------"
        ]
      }
    }
  ]
}