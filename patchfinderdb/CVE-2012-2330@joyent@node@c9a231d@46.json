{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6e435da7f90b71c8a4459e12649d40de3254384c",
      "candidate_info": {
        "commit_hash": "6e435da7f90b71c8a4459e12649d40de3254384c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/6e435da7f90b71c8a4459e12649d40de3254384c",
        "files": [
          "test/simple/test-child-process-fork-exec-argv.js"
        ],
        "message": "remove race from test-child-process-fork-exec-argv test",
        "before_after_code_files": [
          "test/simple/test-child-process-fork-exec-argv.js||test/simple/test-child-process-fork-exec-argv.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-child-process-fork-exec-argv.js||test/simple/test-child-process-fork-exec-argv.js": [
          "File: test/simple/test-child-process-fork-exec-argv.js -> test/simple/test-child-process-fork-exec-argv.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: var fork = child_process.fork;",
          "27: if (process.argv[2] === 'fork') {",
          "30: } else if (process.argv[2] === 'child') {",
          "31:   fork(__filename, ['fork']);",
          "32: } else {",
          "",
          "[Removed Lines]",
          "28:   process.stdout.write(JSON.stringify(process.execArgv));",
          "29:   process.exit();",
          "",
          "[Added Lines]",
          "28:   process.stdout.write(JSON.stringify(process.execArgv), function() {",
          "29:     process.exit();",
          "30:   });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "33be3016fb145d697187c14acf79485f408af5cb",
      "candidate_info": {
        "commit_hash": "33be3016fb145d697187c14acf79485f408af5cb",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/33be3016fb145d697187c14acf79485f408af5cb",
        "files": [
          "deps/v8/src/globals.h",
          "deps/v8/src/objects.h",
          "deps/v8/src/v8utils.h"
        ],
        "message": "Force inlining CopyChars and String::Get.\n\nBUG=\nTEST=\n\nReview URL: https://chromiumcodereview.appspot.com/10332054\n\ngit-svn-id: https://v8.googlecode.com/svn/branches/bleeding_edge@11527 ce2b1a6d-e550-0410-aec6-3dcde31c8c00",
        "before_after_code_files": [
          "deps/v8/src/globals.h||deps/v8/src/globals.h",
          "deps/v8/src/objects.h||deps/v8/src/objects.h",
          "deps/v8/src/v8utils.h||deps/v8/src/v8utils.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/src/globals.h||deps/v8/src/globals.h": [
          "File: deps/v8/src/globals.h -> deps/v8/src/globals.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "345: #define INLINE(header) inline __attribute__((always_inline)) header",
          "346: #define NO_INLINE(header) __attribute__((noinline)) header",
          "347: #endif",
          "348: #else",
          "349: #define INLINE(header) inline header",
          "350: #define NO_INLINE(header) header",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "348: #elif defined(_MSC_VER) && !defined(DEBUG)",
          "349: #define INLINE(header) __forceinline header",
          "350: #define NO_INLINE(header) header",
          "",
          "---------------"
        ],
        "deps/v8/src/objects.h||deps/v8/src/objects.h": [
          "File: deps/v8/src/objects.h -> deps/v8/src/objects.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "6844:   inline void Set(int index, uint16_t value);",
          "",
          "[Removed Lines]",
          "6847:   inline uint16_t Get(int index);",
          "",
          "[Added Lines]",
          "6847:   INLINE(uint16_t Get(int index));",
          "",
          "---------------"
        ],
        "deps/v8/src/v8utils.h||deps/v8/src/v8utils.h": [
          "File: deps/v8/src/v8utils.h -> deps/v8/src/v8utils.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "199:                             bool verbose = true);",
          "204: template <typename sourcechar, typename sinkchar>",
          "206:   sinkchar* limit = dest + chars;",
          "207: #ifdef V8_HOST_CAN_READ_UNALIGNED",
          "208:   if (sizeof(*dest) == sizeof(*src)) {",
          "",
          "[Removed Lines]",
          "205: inline void CopyChars(sinkchar* dest, const sourcechar* src, int chars) {",
          "",
          "[Added Lines]",
          "204: INLINE(void CopyChars(sinkchar* dest, const sourcechar* src, int chars));",
          "207: template <typename sourcechar, typename sinkchar>",
          "208: void CopyChars(sinkchar* dest, const sourcechar* src, int chars) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c945eae9421c94590bd8736e903551fac8a0c885",
      "candidate_info": {
        "commit_hash": "c945eae9421c94590bd8736e903551fac8a0c885",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/c945eae9421c94590bd8736e903551fac8a0c885",
        "files": [
          "deps/openssl/openssl/crypto/bio/b_sock.c",
          "deps/openssl/openssl/ssl/bio_ssl.c"
        ],
        "message": "deps: fix -DOPENSSL_NO_SOCK on sunos\n\nThe OPENSSL_NO_SOCK macro in OpenSSL missed a couple of networking functions\nthat called other functions that OPENSSL_NO_SOCK *had* filtered out. None of\nthe functions (filtered or not) were actually used but it was enough to trip\nup the Solaris linker.",
        "before_after_code_files": [
          "deps/openssl/openssl/crypto/bio/b_sock.c||deps/openssl/openssl/crypto/bio/b_sock.c",
          "deps/openssl/openssl/ssl/bio_ssl.c||deps/openssl/openssl/ssl/bio_ssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/openssl/crypto/bio/b_sock.c||deps/openssl/openssl/crypto/bio/b_sock.c": [
          "File: deps/openssl/openssl/crypto/bio/b_sock.c -> deps/openssl/openssl/crypto/bio/b_sock.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "960: #endif",
          "961:  return(ret == 0);",
          "962:  }",
          "965: int BIO_socket_nbio(int s, int mode)",
          "966:  {",
          "",
          "[Removed Lines]",
          "963: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "973: #endif",
          "974:  return(ret == 0);",
          "975:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "975: #endif",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/ssl/bio_ssl.c||deps/openssl/openssl/ssl/bio_ssl.c": [
          "File: deps/openssl/openssl/ssl/bio_ssl.c -> deps/openssl/openssl/ssl/bio_ssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "539: BIO *BIO_new_ssl_connect(SSL_CTX *ctx)",
          "540:  {",
          "541:  BIO *ret=NULL,*con=NULL,*ssl=NULL;",
          "543:  if ((con=BIO_new(BIO_s_connect())) == NULL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "541: #ifndef OPENSSL_NO_SOCK",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "549:  return(ret);",
          "550: err:",
          "551:  if (con != NULL) BIO_free(con);",
          "552:  return(NULL);",
          "553:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "553: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a33d1c959a449115883b42753f5140541561ba2b",
      "candidate_info": {
        "commit_hash": "a33d1c959a449115883b42753f5140541561ba2b",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a33d1c959a449115883b42753f5140541561ba2b",
        "files": [
          "test/simple/test-repl-options.js"
        ],
        "message": "repl: add test case verifying the repl options usage",
        "before_after_code_files": [
          "test/simple/test-repl-options.js||test/simple/test-repl-options.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-repl-options.js||test/simple/test-repl-options.js": [
          "File: test/simple/test-repl-options.js -> test/simple/test-repl-options.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common'),",
          "23:     assert = require('assert'),",
          "24:     Stream = require('stream'),",
          "25:     repl = require('repl');",
          "28: var stream = new Stream();",
          "29: stream.write = stream.pause = stream.resume = function(){};",
          "30: stream.readable = stream.writable = true;",
          "33: var r1 = repl.start({",
          "34:   input: stream,",
          "35:   output: stream,",
          "36:   terminal: true",
          "37: });",
          "38: assert.equal(r1.rli.input, stream);",
          "39: assert.equal(r1.rli.output, stream);",
          "40: assert.equal(r1.rli.input, r1.inputStream);",
          "41: assert.equal(r1.rli.output, r1.outputStream);",
          "42: assert.equal(r1.rli.terminal, true);",
          "43: assert.equal(r1.useGlobal, false);",
          "44: assert.equal(r1.ignoreUndefined, false);",
          "47: function writer() {}",
          "48: function evaler() {}",
          "49: var r2 = repl.start({",
          "50:   input: stream,",
          "51:   output: stream,",
          "52:   terminal: false,",
          "53:   useGlobal: true,",
          "54:   ignoreUndefined: true,",
          "55:   eval: evaler,",
          "56:   writer: writer",
          "57: });",
          "58: assert.equal(r2.rli.input, stream);",
          "59: assert.equal(r2.rli.output, stream);",
          "60: assert.equal(r2.rli.input, r2.inputStream);",
          "61: assert.equal(r2.rli.output, r2.outputStream);",
          "62: assert.equal(r2.rli.terminal, false);",
          "63: assert.equal(r2.useGlobal, true);",
          "64: assert.equal(r2.ignoreUndefined, true);",
          "65: assert.equal(r2.eval, evaler);",
          "66: assert.equal(r2.writer, writer);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d52968d1dbd04053356d62dc0804bcc68deed8a",
      "candidate_info": {
        "commit_hash": "1d52968d1dbd04053356d62dc0804bcc68deed8a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1d52968d1dbd04053356d62dc0804bcc68deed8a",
        "files": [
          "deps/v8/build/common.gypi"
        ],
        "message": "v8: Replace VFP by VFP2 in common.gypi\n\nThis fixes an omission in cl 10818026.\nPatch by Nathan Rajlich.\n\nReview URL: http://codereview.chromium.org/10913256",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     # access is allowed for all CPUs.",
          "44:     'v8_can_use_unaligned_accesses%': 'default',",
          "47:     # instructions in the V8 generated code. VFP instructions will be enabled",
          "48:     # both for the snapshot and for the ARM target. Leaving the default value",
          "49:     # of 'false' will avoid VFP instructions in the snapshot and use CPU feature",
          "",
          "[Removed Lines]",
          "46:     # Setting 'v8_can_use_vfp_instructions' to 'true' will enable use of ARM VFP",
          "",
          "[Added Lines]",
          "46:     # Setting 'v8_can_use_vfp2_instructions' to 'true' will enable use of ARM VFP",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "139:           [ 'v8_use_arm_eabi_hardfloat==\"true\"', {",
          "140:             'defines': [",
          "141:               'USE_EABI_HARDFLOAT=1',",
          "143:             ],",
          "144:             'target_conditions': [",
          "145:               ['_toolset==\"target\"', {",
          "",
          "[Removed Lines]",
          "142:               'CAN_USE_VFP_INSTRUCTIONS',",
          "",
          "[Added Lines]",
          "142:               'CAN_USE_VFP2_INSTRUCTIONS',",
          "",
          "---------------"
        ]
      }
    }
  ]
}