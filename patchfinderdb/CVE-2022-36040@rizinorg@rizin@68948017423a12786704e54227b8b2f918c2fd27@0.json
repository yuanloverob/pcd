{
  "cve_id": "CVE-2022-36040",
  "cve_desc": "Rizin is a UNIX-like reverse engineering framework and command-line toolset. Versions 0.4.0 and prior are vulnerable to an out-of-bounds write when getting data from PYC(python) files. A user opening a malicious PYC file could be affected by this vulnerability, allowing an attacker to execute code on the user's machine. Commit number 68948017423a12786704e54227b8b2f918c2fd27 contains a patch.",
  "repo": "rizinorg/rizin",
  "patch_hash": "68948017423a12786704e54227b8b2f918c2fd27",
  "patch_info": {
    "commit_hash": "68948017423a12786704e54227b8b2f918c2fd27",
    "repo": "rizinorg/rizin",
    "commit_url": "https://github.com/rizinorg/rizin/commit/68948017423a12786704e54227b8b2f918c2fd27",
    "files": [
      "librz/bin/format/pyc/marshal.c"
    ],
    "message": "fix #2963 - oob write (1 byte) in pyc/marshal.c",
    "before_after_code_files": [
      "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c"
    ]
  },
  "patch_diff": {
    "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c": [
      "File: librz/bin/format/pyc/marshal.c -> librz/bin/format/pyc/marshal.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "313: static pyc_object *get_complex_object(RzBinPycObj *pyc, RzBuffer *buffer) {",
      "314:  pyc_object *ret = NULL;",
      "315:  bool error = false;",
      "317:  ut32 n1 = 0;",
      "318:  ut32 n2 = 0;",
      "",
      "[Removed Lines]",
      "316:  ut32 size = 0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "327:  } else {",
      "328:   n1 = get_st32(buffer, &error);",
      "329:  }",
      "331:   free(ret);",
      "332:   return NULL;",
      "333:  }",
      "",
      "[Removed Lines]",
      "330:  if (error) {",
      "",
      "[Added Lines]",
      "329:  if (error || UT32_ADD_OVFCHK(n1, 1)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "336:   return NULL;",
      "337:  }",
      "341:   RZ_FREE(s1);",
      "342:   RZ_FREE(ret);",
      "343:   return NULL;",
      "",
      "[Removed Lines]",
      "339:  size = rz_buf_read(buffer, s1, n1);",
      "340:  if (size != n1) {",
      "",
      "[Added Lines]",
      "338:  if (rz_buf_read(buffer, s1, n1) != n1) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "347:  if ((pyc->magic_int & 0xffff) <= 62061) {",
      "348:   n2 = get_ut8(buffer, &error);",
      "350:   n2 = get_st32(buffer, &error);",
      "352:   return NULL;",
      "353:  }",
      "354:  ut8 *s2 = malloc(n2 + 1);",
      "",
      "[Removed Lines]",
      "349:  } else",
      "351:  if (error) {",
      "",
      "[Added Lines]",
      "347:  } else {",
      "349:  }",
      "350:  if (error || UT32_ADD_OVFCHK(n2, 1)) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "356:   return NULL;",
      "357:  }",
      "361:   RZ_FREE(s1);",
      "362:   RZ_FREE(s2);",
      "363:   RZ_FREE(ret);",
      "",
      "[Removed Lines]",
      "359:  size = rz_buf_read(buffer, s2, n2);",
      "360:  if (size != n2) {",
      "",
      "[Added Lines]",
      "358:  if (rz_buf_read(buffer, s2, n2) != n2) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bfb5f751e6fc720b61829aab84eb3749cd8f696a",
      "candidate_info": {
        "commit_hash": "bfb5f751e6fc720b61829aab84eb3749cd8f696a",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/bfb5f751e6fc720b61829aab84eb3749cd8f696a",
        "files": [
          "librz/bin/format/pyc/marshal.c"
        ],
        "message": "fix #2963 - oob write (1 byte) in pyc/marshal.c",
        "before_after_code_files": [
          "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c"
          ],
          "candidate": [
            "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c"
          ]
        }
      },
      "candidate_diff": {
        "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c": [
          "File: librz/bin/format/pyc/marshal.c -> librz/bin/format/pyc/marshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "321: static pyc_object *get_complex_object(RzBuffer *buffer) {",
          "322:  pyc_object *ret = NULL;",
          "323:  bool error = false;",
          "325:  ut32 n1 = 0;",
          "326:  ut32 n2 = 0;",
          "",
          "[Removed Lines]",
          "324:  ut32 size = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "335:  } else {",
          "336:   n1 = get_st32(buffer, &error);",
          "337:  }",
          "339:   free(ret);",
          "340:   return NULL;",
          "341:  }",
          "",
          "[Removed Lines]",
          "338:  if (error) {",
          "",
          "[Added Lines]",
          "337:  if (error || UT32_ADD_OVFCHK(n1, 1)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "344:   return NULL;",
          "345:  }",
          "349:   RZ_FREE(s1);",
          "350:   RZ_FREE(ret);",
          "351:   return NULL;",
          "",
          "[Removed Lines]",
          "347:  size = rz_buf_read(buffer, s1, n1);",
          "348:  if (size != n1) {",
          "",
          "[Added Lines]",
          "346:  if (rz_buf_read(buffer, s1, n1) != n1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "355:  if ((magic_int & 0xffff) <= 62061) {",
          "356:   n2 = get_ut8(buffer, &error);",
          "358:   n2 = get_st32(buffer, &error);",
          "360:   return NULL;",
          "361:  }",
          "362:  ut8 *s2 = malloc(n2 + 1);",
          "",
          "[Removed Lines]",
          "357:  } else",
          "359:  if (error) {",
          "",
          "[Added Lines]",
          "355:  } else {",
          "357:  }",
          "358:  if (error || UT32_ADD_OVFCHK(n2, 1)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "364:   return NULL;",
          "365:  }",
          "369:   RZ_FREE(s1);",
          "370:   RZ_FREE(s2);",
          "371:   RZ_FREE(ret);",
          "",
          "[Removed Lines]",
          "367:  size = rz_buf_read(buffer, s2, n2);",
          "368:  if (size != n2) {",
          "",
          "[Added Lines]",
          "366:  if (rz_buf_read(buffer, s2, n2) != n2) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38d8006cd609ac75de82b705891d3508d2c218d5",
      "candidate_info": {
        "commit_hash": "38d8006cd609ac75de82b705891d3508d2c218d5",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/38d8006cd609ac75de82b705891d3508d2c218d5",
        "files": [
          "librz/bin/format/pyc/marshal.c"
        ],
        "message": "fix #2963 - oob write (1 byte) in pyc/marshal.c",
        "before_after_code_files": [
          "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c"
          ],
          "candidate": [
            "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c"
          ]
        }
      },
      "candidate_diff": {
        "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c": [
          "File: librz/bin/format/pyc/marshal.c -> librz/bin/format/pyc/marshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "313: static pyc_object *get_complex_object(RzBinPycObj *pyc, RzBuffer *buffer) {",
          "314:  pyc_object *ret = NULL;",
          "315:  bool error = false;",
          "317:  ut32 n1 = 0;",
          "318:  ut32 n2 = 0;",
          "",
          "[Removed Lines]",
          "316:  ut32 size = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "327:  } else {",
          "328:   n1 = get_st32(buffer, &error);",
          "329:  }",
          "331:   free(ret);",
          "332:   return NULL;",
          "333:  }",
          "",
          "[Removed Lines]",
          "330:  if (error) {",
          "",
          "[Added Lines]",
          "329:  if (error || UT32_ADD_OVFCHK(n1, 1)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "336:   return NULL;",
          "337:  }",
          "341:   RZ_FREE(s1);",
          "342:   RZ_FREE(ret);",
          "343:   return NULL;",
          "",
          "[Removed Lines]",
          "339:  size = rz_buf_read(buffer, s1, n1);",
          "340:  if (size != n1) {",
          "",
          "[Added Lines]",
          "338:  if (rz_buf_read(buffer, s1, n1) != n1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "347:  if ((pyc->magic_int & 0xffff) <= 62061) {",
          "348:   n2 = get_ut8(buffer, &error);",
          "350:   n2 = get_st32(buffer, &error);",
          "352:   return NULL;",
          "353:  }",
          "354:  ut8 *s2 = malloc(n2 + 1);",
          "",
          "[Removed Lines]",
          "349:  } else",
          "351:  if (error) {",
          "",
          "[Added Lines]",
          "347:  } else {",
          "349:  }",
          "350:  if (error || UT32_ADD_OVFCHK(n2, 1)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "356:   return NULL;",
          "357:  }",
          "361:   RZ_FREE(s1);",
          "362:   RZ_FREE(s2);",
          "363:   RZ_FREE(ret);",
          "",
          "[Removed Lines]",
          "359:  size = rz_buf_read(buffer, s2, n2);",
          "360:  if (size != n2) {",
          "",
          "[Added Lines]",
          "358:  if (rz_buf_read(buffer, s2, n2) != n2) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}