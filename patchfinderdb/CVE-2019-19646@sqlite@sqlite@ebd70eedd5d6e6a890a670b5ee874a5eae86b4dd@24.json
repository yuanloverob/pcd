{
  "cve_id": "CVE-2019-19646",
  "cve_desc": "pragma.c in SQLite through 3.30.1 mishandles NOT NULL in an integrity_check PRAGMA command in certain cases of generated columns.",
  "repo": "sqlite/sqlite",
  "patch_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
  "patch_info": {
    "commit_hash": "ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/ebd70eedd5d6e6a890a670b5ee874a5eae86b4dd",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/pragma.c",
      "test/gencol1.test"
    ],
    "message": "Fix the NOT NULL verification logic in PRAGMA integrity_check so that it works for generated columns whose value is the result of a comparison operator. Ticket [bd8c280671ba44a7]\n\nFossilOrigin-Name: f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/pragma.c||src/pragma.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: e3398c5ffb060b2b26334b8598e2c63953741e2d6f5124dbd6bdfc8e94742539",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/pragma.c||src/pragma.c": [
      "File: src/pragma.c -> src/pragma.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1596:           if( j==pTab->iPKey ) continue;",
      "1597:           if( pTab->aCol[j].notNull==0 ) continue;",
      "1598:           sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);",
      "1600:           jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);",
      "1601:           zErr = sqlite3MPrintf(db, \"NULL value in %s.%s\", pTab->zName,",
      "1602:                               pTab->aCol[j].zName);",
      "",
      "[Removed Lines]",
      "1599:           sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "",
      "[Added Lines]",
      "1599:           if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){",
      "1600:             sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);",
      "1601:           }",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:   INSERT OR REPLACE INTO t0(c0, c1) VALUES (2, 1), (1, 0)",
      "329: } {1 {FOREIGN KEY constraint failed}}",
      "331: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331: # 2019-12-09 ticket bd8c280671ba44a7",
      "332: # With generated columns, the sqlite3ExprGetColumnOfTable() routine might",
      "333: # generate a code sequence that does not end with OP_Column.  So check to",
      "334: # make sure that the last instruction generated is an OP_column prior to",
      "335: # applying the OPFLAG_TYPEOFARG optimization to NOT NULL checks in the",
      "336: # PRAGMA integrity_check code.",
      "337: #",
      "338: sqlite3 db :memory:",
      "339: do_execsql_test gencol1-12.10 {",
      "340:   CREATE TABLE t0 (c0, c1 NOT NULL AS (c0==0));",
      "341:   INSERT INTO t0(c0) VALUES (0);",
      "342:   PRAGMA integrity_check;",
      "343: } {ok}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "01325a3f756501a8929c0642eb69734667f24289",
      "candidate_info": {
        "commit_hash": "01325a3f756501a8929c0642eb69734667f24289",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/01325a3f756501a8929c0642eb69734667f24289",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Fix an issue (discovered by OSSFuzz) in the enhanced OP_Concat operator from check-in [713caa382cf7dd] earlier today.\n\nFossilOrigin-Name: 3e897702f8f789fe5119b9042fb93eca3fbfcc44564fbfa66c65628725b1157d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ece481695fc3c959c3eba0fb485cdda43a10b06d17259b0121e15bfc5e8e8b9f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1476:   }",
          "1477:   if( (flags1 & (MEM_Str|MEM_Blob))==0 ){",
          "1478:     if( sqlite3VdbeMemStringify(pIn1,encoding,0) ) goto no_mem;",
          "1479:   }else if( (flags1 & MEM_Zero)!=0 ){",
          "1480:     if( sqlite3VdbeMemExpandBlob(pIn1) ) goto no_mem;",
          "1481:   }",
          "1482:   flags2 = pIn2->flags;",
          "1483:   if( (flags2 & (MEM_Str|MEM_Blob))==0 ){",
          "1484:     if( sqlite3VdbeMemStringify(pIn2,encoding,0) ) goto no_mem;",
          "1485:   }else if( (flags2 & MEM_Zero)!=0 ){",
          "1486:     if( sqlite3VdbeMemExpandBlob(pIn2) ) goto no_mem;",
          "1487:   }",
          "1488:   nByte = pIn1->n + pIn2->n;",
          "1489:   if( nByte>db->aLimit[SQLITE_LIMIT_LENGTH] ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1479:     flags1 = pIn1->flags & ~MEM_Str;",
          "1482:     flags1 = pIn1->flags & ~MEM_Str;",
          "1487:     flags2 = pIn2->flags & ~MEM_Str;",
          "1490:     flags2 = pIn2->flags & ~MEM_Str;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "908e7c43a7386594926bdfce4029884cd20ea012",
      "candidate_info": {
        "commit_hash": "908e7c43a7386594926bdfce4029884cd20ea012",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/908e7c43a7386594926bdfce4029884cd20ea012",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/memjournal.c"
        ],
        "message": "Always check for reads past the end of the file on the in-memory journal driver.  This used to be an assert().\n\nFossilOrigin-Name: 4d41ca7d6efbdac70890a8d4159488fc7f59bf78a550b00597b4df990c4fcaef",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/memjournal.c||src/memjournal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a21d1dde73f811244b5b43f9fed5877263a9c5061470221f417e501f5530edfa",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/memjournal.c||src/memjournal.c": [
          "File: src/memjournal.c -> src/memjournal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:   int iChunkOffset;",
          "97:   FileChunk *pChunk;",
          "101:   if( (iAmt+iOfst)>p->endpoint.iOffset ){",
          "102:     return SQLITE_IOERR_SHORT_READ;",
          "103:   }",
          "107:   assert( p->readpoint.iOffset==0 || p->readpoint.pChunk!=0 );",
          "108:   if( p->readpoint.iOffset!=iOfst || iOfst==0 ){",
          "109:     sqlite3_int64 iOff = 0;",
          "",
          "[Removed Lines]",
          "99: #if defined(SQLITE_ENABLE_ATOMIC_WRITE) \\",
          "100:  || defined(SQLITE_ENABLE_BATCH_ATOMIC_WRITE)",
          "104: #endif",
          "106:   assert( (iAmt+iOfst)<=p->endpoint.iOffset );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e2754c1fba842a72fd783363e28193026dbf3bbf",
      "candidate_info": {
        "commit_hash": "e2754c1fba842a72fd783363e28193026dbf3bbf",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e2754c1fba842a72fd783363e28193026dbf3bbf",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Enforce 80-character line discipline in the CLI.  Minor improvements to the CLI built-in help.\n\nFossilOrigin-Name: 9690013a00d73a8047b25149ded50d20c74b5c62c0725eec50ed8477688e58a0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d7434cae3edc321e2f1f8d340a0e656b1613b736f8400fb271a0e80f59401b9e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1766:   for(pRow = eqp_next_row(p, iEqpId, 0); pRow; pRow = pNext){",
          "1767:     pNext = eqp_next_row(p, iEqpId, pRow);",
          "1768:     z = pRow->zText;",
          "1770:     if( n<(int)sizeof(p->sGraph.zPrefix)-7 ){",
          "1771:       memcpy(&p->sGraph.zPrefix[n], pNext ? \"|  \" : \"   \", 4);",
          "1772:       eqp_render_level(p, pRow->iEqpId);",
          "",
          "[Removed Lines]",
          "1769:     utf8_printf(p->out, \"%s%s%s\\n\", p->sGraph.zPrefix, pNext ? \"|--\" : \"`--\", z);",
          "",
          "[Added Lines]",
          "1769:     utf8_printf(p->out, \"%s%s%s\\n\", p->sGraph.zPrefix,",
          "1770:                 pNext ? \"|--\" : \"`--\", z);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2536:     raw_printf(pArg->out, \"Autoindex Inserts:                   %d\\n\", iCur);",
          "2537:     iCur = sqlite3_stmt_status(pArg->pStmt, SQLITE_STMTSTATUS_VM_STEP, bReset);",
          "2538:     raw_printf(pArg->out, \"Virtual Machine Steps:               %d\\n\", iCur);",
          "2540:     raw_printf(pArg->out, \"Reprepare operations:                %d\\n\", iCur);",
          "2541:     iCur = sqlite3_stmt_status(pArg->pStmt, SQLITE_STMTSTATUS_RUN, bReset);",
          "2542:     raw_printf(pArg->out, \"Number of times run:                 %d\\n\", iCur);",
          "",
          "[Removed Lines]",
          "2539:     iCur = sqlite3_stmt_status(pArg->pStmt, SQLITE_STMTSTATUS_REPREPARE, bReset);",
          "",
          "[Added Lines]",
          "2540:     iCur = sqlite3_stmt_status(pArg->pStmt, SQLITE_STMTSTATUS_REPREPARE,bReset);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3459:   \".archive ...             Manage SQL archives\",",
          "3460:   \"   Each command must have exactly one of the following options:\",",
          "3461:   \"     -c, --create               Create a new archive\",",
          "3464:   \"     -t, --list                 List contents of archive\",",
          "3465:   \"     -x, --extract              Extract files from archive\",",
          "3466:   \"   Optional arguments:\",",
          "3467:   \"     -v, --verbose              Print each filename as it is processed\",",
          "3471:   \"     -n, --dryrun               Show the SQL that would have occurred\",",
          "3472:   \"   Examples:\",",
          "3476:   \"   See also:\",",
          "3477:   \"      http://sqlite.org/cli.html#sqlar_archive_support\",",
          "3478: #endif",
          "",
          "[Removed Lines]",
          "3462:   \"     -u, --update               Add files or update files with changed mtime\",",
          "3463:   \"     -i, --insert               Like -u but always add even if mtime unchanged\",",
          "3468:   \"     -f FILE, --file FILE       Operate on archive FILE (default is current db)\",",
          "3469:   \"     -a FILE, --append FILE     Operate on FILE opened using the apndvfs VFS\",",
          "3470:   \"     -C DIR, --directory DIR    Change to directory DIR to read/extract files\",",
          "3473:   \"     .ar -cf archive.sar foo bar  # Create archive.sar from files foo and bar\",",
          "3474:   \"     .ar -tf archive.sar          # List members of archive.sar\",",
          "3475:   \"     .ar -xvf archive.sar         # Verbosely extract files from archive.sar\",",
          "",
          "[Added Lines]",
          "3463:   \"     -u, --update               Add or update files with changed mtime\",",
          "3464:   \"     -i, --insert               Like -u but always add even if unchanged\",",
          "3469:   \"     -f FILE, --file FILE       Use archive FILE (default is current db)\",",
          "3470:   \"     -a FILE, --append FILE     Open FILE using the apndvfs VFS\",",
          "3471:   \"     -C DIR, --directory DIR    Read/extract files from directory DIR\",",
          "3474:   \"     .ar -cf ARCHIVE foo bar  # Create ARCHIVE from files foo and bar\",",
          "3475:   \"     .ar -tf ARCHIVE          # List members of ARCHIVE\",",
          "3476:   \"     .ar -xvf ARCHIVE         # Verbosely extract files from ARCHIVE\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3481: #endif",
          "3482:   \".backup ?DB? FILE        Backup DB (default \\\"main\\\") to FILE\",",
          "3483:   \"       --append            Use the appendvfs\",",
          "3485:   \".bail on|off             Stop after hitting an error.  Default OFF\",",
          "3486:   \".binary on|off           Turn binary output on or off.  Default OFF\",",
          "3487:   \".cd DIRECTORY            Change the working directory to DIRECTORY\",",
          "",
          "[Removed Lines]",
          "3484:   \"       --async             Write to FILE without a journal and without fsync()\",",
          "",
          "[Added Lines]",
          "3485:   \"       --async             Write to FILE without journal and fsync()\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3501:   \"   Other Modes:\",",
          "3502: #ifdef SQLITE_DEBUG",
          "3503:   \"      test                  Show raw EXPLAIN QUERY PLAN output\",",
          "3505: #endif",
          "3506:   \"      trigger               Like \\\"full\\\" but also show trigger bytecode\",",
          "3508:   \".exit ?CODE?             Exit this program with return-code CODE\",",
          "3513:   \".filectrl CMD ...        Run various sqlite3_file_control() operations\",",
          "3514:   \"                           Run \\\".filectrl\\\" with no arguments for details\",",
          "3515:   \".fullschema ?--indent?   Show schema and the content of sqlite_stat tables\",",
          "",
          "[Removed Lines]",
          "3504:   \"      trace                 Like \\\"full\\\" but also enable \\\"PRAGMA vdbe_trace\\\"\",",
          "3507:   \".excel                   Display the output of next command in a spreadsheet\",",
          "3509:   \".expert                  EXPERIMENTAL. Suggest indexes for specified queries\",",
          "",
          "[Added Lines]",
          "3505:   \"      trace                 Like \\\"full\\\" but enable \\\"PRAGMA vdbe_trace\\\"\",",
          "3508:   \".excel                   Display the output of next command in spreadsheet\",",
          "3510:   \".expert                  EXPERIMENTAL. Suggest indexes for queries\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3556:   \"        --append        Use appendvfs to append database to the end of FILE\",",
          "3557: #ifdef SQLITE_ENABLE_DESERIALIZE",
          "3558:   \"        --deserialize   Load into memory useing sqlite3_deserialize()\",",
          "3560:   \"        --maxsize N     Maximum size for --hexdb or --deserialized database\",",
          "3561: #endif",
          "3562:   \"        --new           Initialize FILE to an empty database\",",
          "",
          "[Removed Lines]",
          "3559:   \"        --hexdb         Load the output of \\\"dbtotxt\\\" as an in-memory database\",",
          "",
          "[Added Lines]",
          "3560:   \"        --hexdb         Load the output of \\\"dbtotxt\\\" as an in-memory db\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3569:   \"   init                    Initialize the TEMP table that holds bindings\",",
          "3570:   \"   list                    List the current parameter bindings\",",
          "3571:   \"   set PARAMETER VALUE     Given SQL parameter PARAMETER a value of VALUE\",",
          "3573:   \"   unset PARAMETER         Remove PARAMETER from the binding table\",",
          "3574:   \".print STRING...         Print literal STRING\",",
          "3575: #ifndef SQLITE_OMIT_PROGRESS_CALLBACK",
          "",
          "[Removed Lines]",
          "3572:   \"                           PARAMETER should start with '$', ':', '@', or '?'\",",
          "",
          "[Added Lines]",
          "3573:   \"                           PARAMETER should start with one of: $ : @ ?\",",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3584:   \".read FILE               Read input from FILE\",",
          "3585: #if !defined(SQLITE_OMIT_VIRTUALTABLE) && defined(SQLITE_ENABLE_DBPAGE_VTAB)",
          "3586:   \".recover                 Recover as much data as possible from corrupt db.\",",
          "3587: #endif",
          "3588:   \".restore ?DB? FILE       Restore content of DB (default \\\"main\\\") from FILE\",",
          "3589:   \".save FILE               Write in-memory database into FILE\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3588:   \"   --freelist-corrupt       Assume the freelist is corrupt\",",
          "3589:   \"   --recovery-db NAME       Store recovery metadata in database file NAME\",",
          "3590:   \"   --lost-and-found TABLE   Alternative name for the lost-and-found table\",",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3615:   \"    Options:\",",
          "3616:   \"      --schema              Also hash the sqlite_master table\",",
          "3617:   \"      --sha3-224            Use the sha3-224 algorithm\",",
          "3619:   \"      --sha3-384            Use the sha3-384 algorithm\",",
          "3620:   \"      --sha3-512            Use the sha3-512 algorithm\",",
          "3621:   \"    Any other argument is a LIKE pattern for tables to hash\",",
          "",
          "[Removed Lines]",
          "3618:   \"      --sha3-256            Use the sha3-256 algorithm.  This is the default.\",",
          "",
          "[Added Lines]",
          "3622:   \"      --sha3-256            Use the sha3-256 algorithm (default)\",",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "5721:                 i = n;",
          "5722:               }else{",
          "5723:                 if( iArg>=(nArg-1) ){",
          "5725:                 }",
          "5726:                 zArg = azArg[++iArg];",
          "5727:               }",
          "",
          "[Removed Lines]",
          "5724:                   return arErrorMsg(pAr, \"option requires an argument: %c\",z[i]);",
          "",
          "[Added Lines]",
          "5728:                   return arErrorMsg(pAr, \"option requires an argument: %c\",",
          "5729:                                     z[i]);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "6604:       zLostAndFound = azArg[i];",
          "6605:     }",
          "6606:     else{",
          "6612:       return 1;",
          "6613:     }",
          "6614:   }",
          "",
          "[Removed Lines]",
          "6607:       raw_printf(stderr, \"unexpected option: %s\\n\", azArg[i]);",
          "6608:       raw_printf(stderr, \"options are:\\n\");",
          "6609:       raw_printf(stderr, \"    --freelist-corrupt\\n\");",
          "6610:       raw_printf(stderr, \"    --recovery-db DATABASE\\n\");",
          "6611:       raw_printf(stderr, \"    --lost-and-found TABLE-NAME\\n\");",
          "",
          "[Added Lines]",
          "6612:       utf8_printf(stderr, \"unexpected option: %s\\n\", azArg[i]);",
          "6613:       showHelp(pState->out, azArg[0]);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "8467:       if( zName ){",
          "8468:         appendText(&sSelect,",
          "8469:            \" UNION ALL SELECT shell_module_schema(name),\"",
          "8471:       }",
          "8472: #endif",
          "8473:       appendText(&sSelect, \") WHERE \", 0);",
          "",
          "[Removed Lines]",
          "8470:            \" 'table', name, name, name, 9e+99, 'main' FROM pragma_module_list\", 0);",
          "",
          "[Added Lines]",
          "8472:            \" 'table', name, name, name, 9e+99, 'main' FROM pragma_module_list\",",
          "8473:         0);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "8566:       if( pSession->p==0 ) goto session_not_open;",
          "8567:       out = fopen(azCmd[1], \"wb\");",
          "8568:       if( out==0 ){",
          "8570:       }else{",
          "8571:         int szChng;",
          "8572:         void *pChng;",
          "",
          "[Removed Lines]",
          "8569:         utf8_printf(stderr, \"ERROR: cannot open \\\"%s\\\" for writing\\n\", azCmd[1]);",
          "",
          "[Added Lines]",
          "8572:         utf8_printf(stderr, \"ERROR: cannot open \\\"%s\\\" for writing\\n\",",
          "8573:                     azCmd[1]);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "8887:         {",
          "8888:           utf8_printf(stderr, \"Unknown option \\\"%s\\\" on \\\"%s\\\"\\n\",",
          "8889:                       azArg[i], azArg[0]);",
          "8892:           rc = 1;",
          "8893:           goto meta_command_exit;",
          "8894:         }",
          "",
          "[Removed Lines]",
          "8890:           raw_printf(stderr, \"Should be one of: --schema\"",
          "8891:                              \" --sha3-224 --sha3-256 --sha3-384 --sha3-512\\n\");",
          "",
          "[Added Lines]",
          "8894:           showHelp(p->out, azArg[0]);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "9168:     } aCtrl[] = {",
          "9181: #ifdef YYCOVERAGE",
          "9183: #endif",
          "9189:     };",
          "9190:     int testctrl = -1;",
          "9191:     int iCtrl = -1;",
          "",
          "[Removed Lines]",
          "9169:       { \"always\",             SQLITE_TESTCTRL_ALWAYS,        \"BOOLEAN\"            },",
          "9170:       { \"assert\",             SQLITE_TESTCTRL_ASSERT,        \"BOOLEAN\"            },",
          "9173:       { \"byteorder\",          SQLITE_TESTCTRL_BYTEORDER,     \"\"                   },",
          "9174:       { \"extra_schema_checks\",SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS,\"BOOLEAN\"       },",
          "9176:       { \"imposter\",           SQLITE_TESTCTRL_IMPOSTER,   \"SCHEMA ON/OFF ROOTPAGE\"},",
          "9177:       { \"internal_functions\", SQLITE_TESTCTRL_INTERNAL_FUNCTIONS, \"BOOLEAN\"       },",
          "9178:       { \"localtime_fault\",    SQLITE_TESTCTRL_LOCALTIME_FAULT,\"BOOLEAN\"           },",
          "9179:       { \"never_corrupt\",      SQLITE_TESTCTRL_NEVER_CORRUPT, \"BOOLEAN\"            },",
          "9180:       { \"optimizations\",      SQLITE_TESTCTRL_OPTIMIZATIONS, \"DISABLE-MASK\"       },",
          "9182:       { \"parser_coverage\",    SQLITE_TESTCTRL_PARSER_COVERAGE, \"\"                 },",
          "9184:       { \"pending_byte\",       SQLITE_TESTCTRL_PENDING_BYTE,  \"OFFSET  \"           },",
          "9185:       { \"prng_restore\",       SQLITE_TESTCTRL_PRNG_RESTORE,  \"\"                   },",
          "9186:       { \"prng_save\",          SQLITE_TESTCTRL_PRNG_SAVE,     \"\"                   },",
          "9187:       { \"prng_seed\",          SQLITE_TESTCTRL_PRNG_SEED,     \"SEED ?db?\"          },",
          "9188:       { \"reserve\",            SQLITE_TESTCTRL_RESERVE,       \"BYTES-OF-RESERVE\"   },",
          "",
          "[Added Lines]",
          "9172:       { \"always\",             SQLITE_TESTCTRL_ALWAYS,        \"BOOLEAN\"        },",
          "9173:       { \"assert\",             SQLITE_TESTCTRL_ASSERT,        \"BOOLEAN\"        },",
          "9176:       { \"byteorder\",          SQLITE_TESTCTRL_BYTEORDER,     \"\"               },",
          "9177:       { \"extra_schema_checks\",SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS,\"BOOLEAN\"   },",
          "9179:       { \"imposter\",         SQLITE_TESTCTRL_IMPOSTER, \"SCHEMA ON/OFF ROOTPAGE\"},",
          "9180:       { \"internal_functions\", SQLITE_TESTCTRL_INTERNAL_FUNCTIONS, \"BOOLEAN\"   },",
          "9181:       { \"localtime_fault\",    SQLITE_TESTCTRL_LOCALTIME_FAULT,\"BOOLEAN\"       },",
          "9182:       { \"never_corrupt\",      SQLITE_TESTCTRL_NEVER_CORRUPT, \"BOOLEAN\"        },",
          "9183:       { \"optimizations\",      SQLITE_TESTCTRL_OPTIMIZATIONS, \"DISABLE-MASK\"   },",
          "9185:       { \"parser_coverage\",    SQLITE_TESTCTRL_PARSER_COVERAGE, \"\"             },",
          "9187:       { \"pending_byte\",       SQLITE_TESTCTRL_PENDING_BYTE,  \"OFFSET  \"       },",
          "9188:       { \"prng_restore\",       SQLITE_TESTCTRL_PRNG_RESTORE,  \"\"               },",
          "9189:       { \"prng_save\",          SQLITE_TESTCTRL_PRNG_SAVE,     \"\"               },",
          "9190:       { \"prng_seed\",          SQLITE_TESTCTRL_PRNG_SEED,     \"SEED ?db?\"      },",
          "9191:       { \"reserve\",            SQLITE_TESTCTRL_RESERVE,      \"BYTES-OF-RESERVE\"},",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "9328:       }",
          "9329:     }",
          "9330:     if( isOk==0 && iCtrl>=0 ){",
          "9332:       rc = 1;",
          "9333:     }else if( isOk==1 ){",
          "9334:       raw_printf(p->out, \"%d\\n\", rc2);",
          "",
          "[Removed Lines]",
          "9331:       utf8_printf(p->out, \"Usage: .testctrl %s %s\\n\", zCmd, aCtrl[iCtrl].zUsage);",
          "",
          "[Added Lines]",
          "9334:       utf8_printf(p->out, \"Usage: .testctrl %s %s\\n\", zCmd,aCtrl[iCtrl].zUsage);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "9445:         rc = 1;",
          "9446:         goto meta_command_exit;",
          "9447:       }",
          "9449:       if( rc ){",
          "9450:         utf8_printf(stderr, \"Authentication failed for user %s\\n\", azArg[2]);",
          "9451:         rc = 1;",
          "",
          "[Removed Lines]",
          "9448:       rc = sqlite3_user_authenticate(p->db, azArg[2], azArg[3], strlen30(azArg[3]));",
          "",
          "[Added Lines]",
          "9451:       rc = sqlite3_user_authenticate(p->db, azArg[2], azArg[3],",
          "9452:                                      strlen30(azArg[3]));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "00267b8a7b55ac0b34a37acc5e08f024722125bd",
      "candidate_info": {
        "commit_hash": "00267b8a7b55ac0b34a37acc5e08f024722125bd",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/00267b8a7b55ac0b34a37acc5e08f024722125bd",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c"
        ],
        "message": "Simplify the window function code generator some more.\n\nFossilOrigin-Name: 45cbd3b4498cea8856f189e9d0a192556d4f15212055b8328a1beca6083fc47a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e8eee566dfca6f4c8af074731dfe91f7fbcd9ca72f0303235b52e4e2e80d5b71",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1863:   return 0;",
          "1864: }",
          "1866: static void windowCodeStep(",
          "1867:   Parse *pParse,",
          "1868:   Select *p,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1866: typedef struct WindowCodeArg WindowCodeArg;",
          "1867: struct WindowCodeArg {",
          "1868:   Parse *pParse;",
          "1869:   Window *pMWin;",
          "1870:   Vdbe *pVdbe;",
          "1871:   int regGosub;",
          "1872:   int addrGosub;",
          "1873:   int regArg;",
          "1874: };",
          "1876: #define WINDOW_RETURN_ROW 1",
          "1877: #define WINDOW_AGGINVERSE 2",
          "1878: #define WINDOW_AGGSTEP    3",
          "1880: static int windowCodeOp(",
          "1881:  WindowCodeArg *p,",
          "1882:  int op,",
          "1883:  int csr,",
          "1884:  int regCountdown,",
          "1885:  int jumpOnEof",
          "1886: ){",
          "1887:   int ret = 0;",
          "1888:   Vdbe *v = p->pVdbe;",
          "1889:   int addrIf = 0;",
          "1891:   if( regCountdown>0 ){",
          "1892:     addrIf = sqlite3VdbeAddOp3(v, OP_IfPos, regCountdown, 0, 1);",
          "1893:   }",
          "1895:   if( jumpOnEof ){",
          "1896:     sqlite3VdbeAddOp2(v, OP_Next, csr, sqlite3VdbeCurrentAddr(v)+2);",
          "1897:     ret = sqlite3VdbeAddOp0(v, OP_Goto);",
          "1898:   }else{",
          "1899:     sqlite3VdbeAddOp2(v, OP_Next, csr, sqlite3VdbeCurrentAddr(v)+1);",
          "1900:   }",
          "1902:   switch( op ){",
          "1903:     case WINDOW_RETURN_ROW:",
          "1904:       windowAggFinal(p->pParse, p->pMWin, 0);",
          "1905:       windowReturnOneRow(p->pParse, p->pMWin, p->regGosub, p->addrGosub);",
          "1906:       break;",
          "1908:     case WINDOW_AGGINVERSE:",
          "1909:       windowAggStep(p->pParse, p->pMWin, csr, 1, p->regArg, p->pMWin->regSize);",
          "1910:       break;",
          "1912:     case WINDOW_AGGSTEP:",
          "1913:       windowAggStep(p->pParse, p->pMWin, csr, 0, p->regArg, p->pMWin->regSize);",
          "1914:       break;",
          "1915:   }",
          "1917:   if( ret ){",
          "1918:     sqlite3VdbeJumpHere(v, ret);",
          "1919:   }",
          "1920:   if( regCountdown>0 ){",
          "1921:     sqlite3VdbeJumpHere(v, addrIf);",
          "1922:   }",
          "1923:   return ret;",
          "1924: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1890:   int addrGoto;",
          "1891:   int addrIf;",
          "1894:   int addrGosubFlush;",
          "1895:   int addrInteger;",
          "1896:   int addrCacheRewind;",
          "",
          "[Removed Lines]",
          "1886:   int iSubCsr = p->pSrc->a[0].iCursor;",
          "1887:   int nSub = p->pSrc->a[0].pTab->nCol;",
          "1888:   int k;",
          "1892:   int addrIfEnd;",
          "1893:   int addrIfStart;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1903:   int reg = pParse->nMem+1;",
          "1904:   int regRecord = reg+nSub;",
          "1905:   int regRowid = regRecord+1;",
          "1909:   pParse->nMem += 1 + nSub + 1;",
          "",
          "[Removed Lines]",
          "1907:   bCache = 1;",
          "",
          "[Added Lines]",
          "2033:   WindowCodeArg s;",
          "2035:   memset(&s, 0, sizeof(WindowCodeArg));",
          "2036:   s.pParse = pParse;",
          "2037:   s.pMWin = pMWin;",
          "2038:   s.pVdbe = v;",
          "2039:   s.regGosub = regGosub;",
          "2040:   s.addrGosub = addrGosub;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1923:        || pMWin->eEnd==TK_PRECEDING",
          "1924:   );",
          "1931:   }",
          "1932:   sqlite3VdbeAddOp3(v, OP_MakeRecord, reg, nSub, regRecord);",
          "",
          "[Removed Lines]",
          "1929:   for(k=0; k<nSub; k++){",
          "1930:     sqlite3VdbeAddOp3(v, OP_Column, iSubCsr, k, reg+k);",
          "",
          "[Added Lines]",
          "2063:   for(iCol=0; iCol<nSub; iCol++){",
          "2064:     sqlite3VdbeAddOp3(v, OP_Column, iSubCsr, iCol, reg+iCol);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1973:   }",
          "1978:   sqlite3ExprCode(pParse, pMWin->pStart, regStart);",
          "1979:   windowCheckIntValue(pParse, regStart, 0);",
          "1980:   sqlite3ExprCode(pParse, pMWin->pEnd, regEnd);",
          "1981:   windowCheckIntValue(pParse, regEnd, 1);",
          "1984:     int op = ((pMWin->eStart==TK_FOLLOWING) ? OP_Ge : OP_Le);",
          "1985:     int addrGe = sqlite3VdbeAddOp3(v, op, regStart, 0, regEnd);",
          "1986:     windowAggFinal(pParse, pMWin, 0);",
          "",
          "[Removed Lines]",
          "1976:   regArg = windowInitAccum(pParse, pMWin);",
          "1983:   if( pMWin->eStart==TK_FOLLOWING || pMWin->eEnd==TK_PRECEDING ){",
          "",
          "[Added Lines]",
          "2110:   s.regArg = regArg = windowInitAccum(pParse, pMWin);",
          "2117:   if( pMWin->eStart==pMWin->eEnd",
          "2118:    && pMWin->eStart!=TK_CURRENT && pMWin->eStart!=TK_UNBOUNDED",
          "2119:   ){",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2008:   sqlite3VdbeAddOp2(v, OP_Integer, 0, pMWin->regFirst);",
          "2009:   addrGoto = sqlite3VdbeAddOp0(v, OP_Goto);",
          "2012:   if( bCache ){",
          "2013:     addrCacheNext = sqlite3VdbeCurrentAddr(v);",
          "2014:   }else{",
          "2015:     sqlite3VdbeJumpHere(v, addrIf);",
          "2016:   }",
          "2018:   if( pMWin->eStart==TK_FOLLOWING ){",
          "2029:   }else",
          "2030:   if( pMWin->eEnd==TK_PRECEDING ){",
          "2044:   }else{",
          "2054:   }",
          "2056:   sqlite3VdbeJumpHere(v, addrGoto);",
          "2057:   if( pMWin->eEnd!=TK_PRECEDING ){",
          "2060:   }",
          "2063:   if( bCache ){",
          "",
          "[Removed Lines]",
          "2019:     addrIfEnd = sqlite3VdbeAddOp3(v, OP_IfPos, regEnd, 0, 1);",
          "2020:     windowAggFinal(pParse, pMWin, 0);",
          "2021:     sqlite3VdbeAddOp2(v, OP_Next, csrCurrent, sqlite3VdbeCurrentAddr(v)+1);",
          "2022:     windowReturnOneRow(pParse, pMWin, regGosub, addrGosub);",
          "2023:     sqlite3VdbeJumpHere(v, addrIfEnd);",
          "2025:     addrIfStart = sqlite3VdbeAddOp3(v, OP_IfPos, regStart, 0, 1);",
          "2026:     sqlite3VdbeAddOp2(v, OP_Next, csrStart, sqlite3VdbeCurrentAddr(v)+1);",
          "2027:     windowAggStep(pParse, pMWin, csrStart, 1, regArg, pMWin->regSize);",
          "2028:     sqlite3VdbeJumpHere(v, addrIfStart);",
          "2031:     addrIfEnd = sqlite3VdbeAddOp3(v, OP_IfPos, regEnd, 0, 1);",
          "2032:     sqlite3VdbeAddOp2(v, OP_Next, csrEnd, sqlite3VdbeCurrentAddr(v)+1);",
          "2033:     windowAggStep(pParse, pMWin, csrEnd, 0, regArg, pMWin->regSize);",
          "2034:     sqlite3VdbeJumpHere(v, addrIfEnd);",
          "2036:     windowAggFinal(pParse, pMWin, 0);",
          "2037:     sqlite3VdbeAddOp2(v, OP_Next, csrCurrent, sqlite3VdbeCurrentAddr(v)+1);",
          "2038:     windowReturnOneRow(pParse, pMWin, regGosub, addrGosub);",
          "2040:     addrIfStart = sqlite3VdbeAddOp3(v, OP_IfPos, regStart, 0, 1);",
          "2041:     sqlite3VdbeAddOp2(v, OP_Next, csrStart, sqlite3VdbeCurrentAddr(v)+1);",
          "2042:     windowAggStep(pParse, pMWin, csrStart, 1, regArg, pMWin->regSize);",
          "2043:     sqlite3VdbeJumpHere(v, addrIfStart);",
          "2045:     addrIfEnd = sqlite3VdbeAddOp3(v, OP_IfPos, regEnd, 0, 1);",
          "2046:     windowAggFinal(pParse, pMWin, 0);",
          "2047:     sqlite3VdbeAddOp2(v, OP_Next, csrCurrent, sqlite3VdbeCurrentAddr(v)+1);",
          "2048:     windowReturnOneRow(pParse, pMWin, regGosub, addrGosub);",
          "2049:     addrIfStart = sqlite3VdbeAddOp3(v, OP_IfPos, regStart, 0, 1);",
          "2050:     sqlite3VdbeAddOp2(v, OP_Next, csrStart, sqlite3VdbeCurrentAddr(v)+1);",
          "2051:     windowAggStep(pParse, pMWin, csrStart, 1, regArg, pMWin->regSize);",
          "2052:     sqlite3VdbeJumpHere(v, addrIfStart);",
          "2053:     sqlite3VdbeJumpHere(v, addrIfEnd);",
          "2058:     sqlite3VdbeAddOp2(v, OP_Next, csrEnd, sqlite3VdbeCurrentAddr(v)+1);",
          "2059:     windowAggStep(pParse, pMWin, csrEnd, 0, regArg, pMWin->regSize);",
          "",
          "[Added Lines]",
          "2148:   VdbeModuleComment((pParse->pVdbe, \"Begin windowCodeStep.SECOND_ROW_CODE\"));",
          "2155:     windowCodeOp(&s, WINDOW_RETURN_ROW, csrCurrent, regEnd, 0);",
          "2156:     windowCodeOp(&s, WINDOW_AGGINVERSE, csrStart, regStart, 0);",
          "2159:     windowCodeOp(&s, WINDOW_AGGSTEP, csrEnd, regEnd, 0);",
          "2160:     windowCodeOp(&s, WINDOW_RETURN_ROW, csrCurrent, 0, 0);",
          "2161:     windowCodeOp(&s, WINDOW_AGGINVERSE, csrStart, regStart, 0);",
          "2163:     int addr = sqlite3VdbeAddOp3(v, OP_IfPos, regEnd, 0, 1);",
          "2164:     windowCodeOp(&s, WINDOW_RETURN_ROW, csrCurrent, 0, 0);",
          "2165:     windowCodeOp(&s, WINDOW_AGGINVERSE, csrStart, regStart, 0);",
          "2166:     sqlite3VdbeJumpHere(v, addr);",
          "2168:   VdbeModuleComment((pParse->pVdbe, \"End windowCodeStep.SECOND_ROW_CODE\"));",
          "2170:   VdbeModuleComment((pParse->pVdbe, \"Begin windowCodeStep.ALL_ROW_CODE\"));",
          "2173:     windowCodeOp(&s, WINDOW_AGGSTEP, csrEnd, 0, 0);",
          "2175:   VdbeModuleComment((pParse->pVdbe, \"End windowCodeStep.ALL_ROW_CODE\"));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2073:   if( pMWin->pPartition && bCache==0 ){",
          "2074:     addrInteger = sqlite3VdbeAddOp2(v, OP_Integer, 0, regFlushPart);",
          "2075:     sqlite3VdbeJumpHere(v, addrGosubFlush);",
          "2076:   }",
          "2096:   }else{",
          "2106:     }else{",
          "2114:     }",
          "2116:   }",
          "2119:   if( bCache && addrShortcut>0 ) sqlite3VdbeJumpHere(v, addrShortcut);",
          "2120:   sqlite3VdbeAddOp1(v, OP_ResetSorter, csrCurrent);",
          "2121:   sqlite3VdbeAddOp2(v, OP_Integer, 0, pMWin->regSize);",
          "2122:   if( bCache==0 ) sqlite3VdbeAddOp2(v, OP_Integer, 1, pMWin->regFirst);",
          "2123:   if( pMWin->pPartition ){",
          "2124:     sqlite3VdbeChangeP1(v, addrInteger, sqlite3VdbeCurrentAddr(v));",
          "2125:     sqlite3VdbeAddOp1(v, OP_Return, regFlushPart);",
          "",
          "[Removed Lines]",
          "2078:   if( pMWin->eStart==TK_FOLLOWING ){",
          "2079:     int addrBreak;",
          "2080:     addrIfEnd = sqlite3VdbeAddOp3(v, OP_IfPos, regEnd, 0, 1);",
          "2081:     sqlite3VdbeAddOp2(v, OP_Next, csrCurrent, sqlite3VdbeCurrentAddr(v)+2);",
          "2082:     addrBreak = sqlite3VdbeAddOp0(v, OP_Goto);",
          "2083:     windowAggFinal(pParse, pMWin, 0);",
          "2084:     windowReturnOneRow(pParse, pMWin, regGosub, addrGosub);",
          "2085:     sqlite3VdbeJumpHere(v, addrIfEnd);",
          "2087:     addrIfStart = sqlite3VdbeAddOp3(v, OP_IfPos, regStart, 0, 1);",
          "2088:     sqlite3VdbeAddOp2(v, OP_Next, csrStart, sqlite3VdbeCurrentAddr(v)+2);",
          "2089:     sqlite3VdbeAddOp0(v, OP_Goto);",
          "2090:     windowAggStep(pParse, pMWin, csrStart, 1, regArg, pMWin->regSize);",
          "2091:     sqlite3VdbeJumpHere(v, addrIfStart);",
          "2092:     sqlite3VdbeJumpHere(v, addrIfStart+2);",
          "2094:     sqlite3VdbeAddOp2(v, OP_Goto, 0, addrIfEnd);",
          "2095:     sqlite3VdbeJumpHere(v, addrBreak);",
          "2097:     sqlite3VdbeAddOp2(v, OP_Next, csrCurrent, sqlite3VdbeCurrentAddr(v)+2);",
          "2098:     addrGoto = sqlite3VdbeAddOp0(v, OP_Goto);",
          "2099:     if( pMWin->eEnd==TK_PRECEDING ){",
          "2100:       addrIfEnd = sqlite3VdbeAddOp3(v, OP_IfPos, regEnd, 0, 1);",
          "2101:       sqlite3VdbeAddOp2(v, OP_Next, csrEnd, sqlite3VdbeCurrentAddr(v)+1);",
          "2102:       windowAggStep(pParse, pMWin, csrEnd, 0, regArg, pMWin->regSize);",
          "2103:       sqlite3VdbeJumpHere(v, addrIfEnd);",
          "2104:       windowAggFinal(pParse, pMWin, 0);",
          "2105:       windowReturnOneRow(pParse, pMWin, regGosub, addrGosub);",
          "2107:       windowAggFinal(pParse, pMWin, 0);",
          "2108:       windowReturnOneRow(pParse, pMWin, regGosub, addrGosub);",
          "2109:       addrIfStart = sqlite3VdbeAddOp3(v, OP_IfPos, regStart, 0, 1);",
          "2110:       sqlite3VdbeAddOp2(v, OP_Next, csrStart, sqlite3VdbeCurrentAddr(v)+1);",
          "2111:       windowAggStep(pParse, pMWin, csrStart, 1, regArg, pMWin->regSize);",
          "2112:       sqlite3VdbeJumpHere(v, addrIfStart);",
          "2113:       sqlite3VdbeAddOp2(v, OP_Goto, 0, addrGoto-1);",
          "2115:     sqlite3VdbeJumpHere(v, addrGoto);",
          "",
          "[Added Lines]",
          "2188:   VdbeModuleComment((pParse->pVdbe, \"Begin windowCodeStep.FLUSH_CODE\"));",
          "2194:   if( pMWin->eEnd==TK_PRECEDING ){",
          "2195:     windowCodeOp(&s, WINDOW_AGGSTEP, csrEnd, regEnd, 1);",
          "2196:     windowCodeOp(&s, WINDOW_RETURN_ROW, csrCurrent, 0, 1);",
          "2198:     int addrBreak;",
          "2199:     int addrStart = sqlite3VdbeCurrentAddr(v);",
          "2200:     if( pMWin->eStart==TK_FOLLOWING ){",
          "2201:       addrBreak = windowCodeOp(&s, WINDOW_RETURN_ROW, csrCurrent, regEnd, 1);",
          "2202:       windowCodeOp(&s, WINDOW_AGGINVERSE, csrStart, regStart, 1);",
          "2204:       addrBreak = windowCodeOp(&s, WINDOW_RETURN_ROW, csrCurrent, 0, 1);",
          "2205:       windowCodeOp(&s, WINDOW_AGGINVERSE, csrStart, regStart, 0);",
          "2207:     sqlite3VdbeAddOp2(v, OP_Goto, 0, addrStart);",
          "2208:     sqlite3VdbeJumpHere(v, addrBreak);",
          "2215:   VdbeModuleComment((pParse->pVdbe, \"End windowCodeStep.FLUSH_CODE\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a27cce76bfd20e59311dd780c779b5eacf38e516",
      "candidate_info": {
        "commit_hash": "a27cce76bfd20e59311dd780c779b5eacf38e516",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a27cce76bfd20e59311dd780c779b5eacf38e516",
        "files": [
          "ext/fts5/fts5_buffer.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a problem in fts5 where a corrupt position list could lead to a buffer overwrite.\n\nFossilOrigin-Name: 516ca8945150bdc1363603e234be5f3f4a3861f581d7cc9455da3e87b9974309",
        "before_after_code_files": [
          "ext/fts5/fts5_buffer.c||ext/fts5/fts5_buffer.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_buffer.c||ext/fts5/fts5_buffer.c": [
          "File: ext/fts5/fts5_buffer.c -> ext/fts5/fts5_buffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:     i64 iOff = *piOff;",
          "179:     int iVal;",
          "180:     fts5FastGetVarint32(a, i, iVal);",
          "182:       fts5FastGetVarint32(a, i, iVal);",
          "183:       iOff = ((i64)iVal) << 32;",
          "184:       fts5FastGetVarint32(a, i, iVal);",
          "",
          "[Removed Lines]",
          "181:     if( iVal==1 ){",
          "",
          "[Added Lines]",
          "181:     if( iVal<=1 ){",
          "182:       if( iVal==0 ){",
          "184:         return 0;",
          "185:       }",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "8128:   INSERT INTO t1(t1) VALUES('optimize')",
          "8129: } {1 {database disk image is malformed}}",
          "8132: sqlite3_fts5_may_be_corrupt 0",
          "8133: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8131: #-------------------------------------------------------------------------",
          "8132: reset_db",
          "8133: do_test 58.0 {",
          "8134:   sqlite3 db {}",
          "8135:   db deserialize [decode_hexdb {",
          "8136: .open --hexdb",
          "8137: | size 24576 pagesize 4096 filename crash-5a5acd0ab42d31.db",
          "8138: | page 1 offset 0",
          "8139: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "8140: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "8141: |     96: 00 00 00 00 0d 00 00 00 06 0e 0f 00 0f aa 0f 53   ...............S",
          "8142: |    112: 0e e8 0e 8b 0e 33 0e 0f 00 00 00 00 00 00 00 00   .....3..........",
          "8143: |   3584: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 22   ................",
          "8144: |   3600: 06 06 17 11 11 01 31 74 61 62 6c 65 62 62 62 62   ......1tablebbbb",
          "8145: |   3616: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 62 62   .CREATE TABLE bb",
          "8146: |   3632: 28 61 29 56 05 06 17 1f 1f 01 7d 74 61 62 6c 65   (a)V.......table",
          "8147: |   3648: 74 31 5f 63 2a 6e 66 69 68 74 31 5f 63 6f 6e 66   t1_c*nfiht1_conf",
          "8148: |   3664: 69 67 05 43 52 45 41 54 45 20 54 41 42 4c 45 20   ig.CREATE TABLE",
          "8149: |   3680: 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b 20 50 52   't1_config'(k PR",
          "8150: |   3696: 49 4d 41 52 59 20 4b 45 59 2c 20 76 29 20 57 49   IMARY KEY, v) WI",
          "8151: |   3712: 54 48 4f 55 54 20 52 4f 57 49 44 5b 04 07 17 21   THOUT ROWID[...!",
          "8152: |   3728: 21 01 81 01 74 61 62 6c 65 74 31 5f 64 6f 73 73   !...tablet1_doss",
          "8153: |   3744: 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65 04 43 52   izet1_docsize.CR",
          "8154: |   3760: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 64   EATE TABLE 't1_d",
          "8155: |   3776: 6f 63 73 69 7a 65 27 28 69 64 20 49 4e 54 45 47   ocsize'(id INTEG",
          "8156: |   3792: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "8157: |   3808: 73 7a 20 42 4c 4f 42 29 69 03 07 17 19 19 01 81   sz BLOB)i.......",
          "8158: |   3824: 2d 74 61 62 6c 65 74 31 5f 69 64 78 74 31 5f 69   -tablet1_idxt1_i",
          "8159: |   3840: 64 78 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   dx.CREATE TABLE",
          "8160: |   3856: 27 74 31 5f 69 64 78 27 28 73 65 67 69 64 2c 20   't1_idx'(segid,",
          "8161: |   3872: 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50 52 49 4d   term, pgno, PRIM",
          "8162: |   3888: 41 52 59 20 4b 45 59 28 73 65 67 69 64 2c 20 74   ARY KEY(segid, t",
          "8163: |   3904: 65 72 6d 29 29 20 57 49 54 48 4f 55 54 20 52 4f   erm)) WITHOUT RO",
          "8164: |   3920: 57 49 44 55 02 07 17 1b 1b 01 81 01 74 61 62 6c   WIDU........tabl",
          "8165: |   3936: 65 74 31 5f 64 61 74 61 74 31 5f 64 61 74 61 02   et1_datat1_data.",
          "8166: |   3952: 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74 31   CREATE TABLE 't1",
          "8167: |   3968: 5f 64 61 74 61 27 28 69 64 20 49 4e 54 45 47 45   _data'(id INTEGE",
          "8168: |   3984: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 62   R PRIMARY KEY, b",
          "8169: |   4000: 6c 6f 63 6b 20 42 4c 4f 42 29 54 01 07 17 11 11   lock BLOB)T.....",
          "8170: |   4016: 08 81 15 74 61 62 6c 65 74 31 74 31 43 52 45 41   ...tablet1t1CREA",
          "8171: |   4032: 54 45 20 56 49 52 54 55 41 4c 20 54 41 42 4c 45   TE VIRTUAL TABLE",
          "8172: |   4048: 20 74 31 20 55 53 49 4e 47 20 66 74 73 35 28 61    t1 USING fts5(a",
          "8173: |   4064: 2c 62 2c 70 72 65 66 69 78 3d 22 32 2c 32 2c 33   ,b,prefix=.2,2,3",
          "8174: |   4080: 2c 34 22 2c 20 63 6f 6e 74 65 6e 74 3d 22 22 29   ,4., content=..)",
          "8175: | page 2 offset 4096",
          "8176: |      0: 0d 0b 6a 00 37 09 4c 02 0f e7 09 4c 0f c6 0f a4   ..j.7.L....L....",
          "8177: |     16: 0f 88 0f 6d 0f 4b 0f 2c 0f 0e 0e ec 0e cd 0e ae   ...m.K.,........",
          "8178: |     32: 0e 8e 0e 6c 0e 4b 0e 29 0e 08 0d e6 0d c4 0d b5   ...l.K.)........",
          "8179: |     48: 0d 97 0d 76 0d 54 0d 30 fd 15 0c f3 0c d3 0c b5   ...v.T.0........",
          "8180: |     64: 0c 95 0c 73 0c 54 0c 32 0c 10 0b ee 0b cc 0b b0   ...s.T.2........",
          "8181: |     80: 0b 8d 0b 7e 0b 48 0b 2e 0b 0b 0a ef 0a cc 0a ad   ...~.H..........",
          "8182: |     96: 0a 8c 0a 6d 0a 4d 0a 2b 0a 0c 00 00 00 00 00 00   ...m.M.+........",
          "8183: |   2368: 00 00 00 00 00 00 00 00 00 00 00 00 15 0a 03 00   ................",
          "8184: |   2384: 30 00 00 00 9c 01 03 35 00 03 01 01 12 02 01 12   0......5........",
          "8185: |   2400: 03 01 11 1c 8c 80 80 80 80 10 03 00 3e 00 00 00   ............>...",
          "8186: |   2416: 17 01 05 05 34 74 61 62 6c 03 02 03 01 04 77 68   ....4tabl.....wh",
          "8187: |   2432: 65 72 03 02 06 09 1b 8c 80 80 80 80 0f 03 00 3c   er.............<",
          "8188: |   2448: 00 00 00 16 05 34 66 74 73 34 03 02 02 01 04 6e   .....4fts4.....n",
          "8189: |   2464: 75 6d 62 03 06 01 04 09 1b 8c 80 80 80 80 0e 03   umb.............",
          "8190: |   2480: 00 3c 00 00 00 16 04 33 74 68 65 03 06 01 01 04   .<.....3the.....",
          "8191: |   2496: 01 03 77 68 65 03 02 04 04 0a 1b 8c 80 80 80 80   ..whe...........",
          "8192: |   2512: 0d 03 00 3c 00 00 00 16 04 33 6e 75 6d 03 06 01   ...<.....3num...",
          "8193: |   2528: 01 05 01 03 74 61 62 05 62 03 04 0a 19 8c 80 80   ....tab.b.......",
          "8194: |   2544: 80 80 0c 03 00 38 00 00 00 14 03 39 a7 68 03 02   .....8.....9.h..",
          "8195: |   2560: 04 10 04 33 66 74 73 03 02 02 04 07 18 8c 80 80   ...3fts.........",
          "8196: |   2576: 80 80 0b 03 00 36 00 00 00 13 03 32 74 61 03 02   .....6.....2ta..",
          "8197: |   2592: 03 02 01 68 03 06 01 01 04 04 07 1b 8c 80 80 80   ...h............",
          "8198: |   2608: 80 0a 03 00 3c 00 00 00 16 03 32 6e 75 03 06 01   ....<.....2nu...",
          "8199: |   2624: 01 05 01 02 6f 66 03 06 01 01 06 04 09 19 8c 80   ....of..........",
          "8200: |   2640: 80 80 80 09 03 00 38 00 00 00 14 03 32 66 74 03   ......8.....2ft.",
          "8201: |   2656: 02 02 01 02 69 73 03 06 01 01 03 04 07 18 8c 80   ....is..........",
          "8202: |   2672: 80 80 80 08 03 00 36 00 00 00 13 02 31 74 03 08   ......6.....1t..",
          "8203: |   2688: 03 01 01 04 01 01 77 03 02 04 04 09 1a 8c 80 80   ......w.........",
          "8204: |   2704: 80 80 07 03 00 3a ff 00 00 15 02 31 6e 03 08 01   .....:.....1n...",
          "8205: |   2720: 01 02 05 01 01 6f 03 06 01 01 06 04 09 18 8c 80   .....o..........",
          "8206: |   2736: 80 80 80 06 03 00 36 00 00 00 13 04 02 31 66 03   ......6......1f.",
          "8207: |   2752: 02 01 f1 01 69 03 06 01 01 03 05 06 1c 8c 80 80   ....i...........",
          "8208: |   2768: 80 80 05 03 00 3e 00 00 00 17 04 30 74 68 65 03   .....>.....0the.",
          "8209: |   2784: 06 01 01 14 01 05 77 68 65 72 65 03 02 04 0a 15   ......where.....",
          "8210: |   2800: 8c 80 80 80 80 04 03 00 30 00 00 00 11 01 01 06   ........0.......",
          "8211: |   2816: 06 30 74 61 62 6c cc 03 02 03 07 1c 8c 80 80 80   .0tabl..........",
          "8212: |   2832: 80 03 03 00 3e 00 00 00 17 07 30 6e 75 6d 62 65   ....>.....0numbe",
          "8213: |   2848: 72 03 06 01 01 05 01 02 6f 66 02 06 04 0d 13 8c   r.......of......",
          "8214: |   2864: 80 80 80 80 02 03 00 2c 00 00 00 0f 01 01 03 02   .......,........",
          "8215: |   2880: 30 6e 03 06 01 01 02 07 1b 8c 80 80 80 80 01 03   0n..............",
          "8216: |   2896: 00 3c 00 00 00 16 08 30 66 74 73 34 61 75 78 03   .<.....0fts4aux.",
          "8217: |   2912: 02 02 01 02 69 73 03 06 04 0c 00 00 00 14 2a 00   ....is........*.",
          "8218: |   2928: 00 00 01 01 02 24 00 02 01 01 12 02 01 12 08 88   .....$..........",
          "8219: |   2944: 80 80 80 80 12 03 00 16 00 00 00 05 02 1c 88 80   ................",
          "8220: |   2960: 80 80 80 11 03 00 3e 00 00 00 17 05 34 72 6f 77   ......>.....4row",
          "8221: |   2976: 73 02 06 01 01 05 01 04 74 68 65 72 02 02 04 0b   s.......ther....",
          "8222: |   2992: 15 88 80 80 80 80 10 03 00 3e 10 00 00 11 02 01   .........>......",
          "8223: |   3008: 01 07 05 34 62 65 74 77 02 02 04 08 1b 88 80 80   ...4betw........",
          "8224: |   3024: 80 80 0f 03 00 3c 00 00 00 16 04 04 33 72 6f 77   .....<......3row",
          "8225: |   3040: 02 06 01 01 05 01 03 74 68 65 02 08 05 0a 1b 88   .......the......",
          "8226: |   3056: 80 80 80 80 0e 03 05 0c 00 00 00 16 01 01 02 04   ................",
          "8227: |   3072: 33 61 72 65 02 02 03 01 03 62 65 74 02 02 07 08   3are.....bet....",
          "8228: |   3088: 1b 88 80 80 80 80 0d 03 00 3c 00 00 00 16 03 32   .........<.....2",
          "8229: |   3104: 74 68 02 08 02 01 01 07 00 04 33 61 6e 64 02 06   th........3and..",
          "8230: |   3120: 04 01 1b 88 80 80 80 80 0c 03 00 3c 00 00 00 16   ...........<....",
          "8231: |   3136: 03 32 69 6e 02 06 01 01 06 01 02 72 6f 02 06 01   .2in.......ro...",
          "8232: |   3152: 01 05 04 09 18 88 80 80 80 80 0b 03 00 36 00 00   .............6..",
          "8233: |   3168: 00 13 02 03 32 61 72 02 02 03 01 02 62 65 02 02   ....2ar.....be..",
          "8234: |   3184: 04 05 07 1b 88 80 bf 80 80 0a 03 00 3c 00 00 00   ............<...",
          "8235: |   3200: 16 02 31 74 02 08 02 01 01 07 00 03 32 61 6e 02   ..1t........2an.",
          "8236: |   3216: 06 01 01 04 09 19 88 80 80 80 80 09 03 00 38 00   ..............8.",
          "8237: |   3232: 00 00 14 02 31 6e 02 06 01 01 03 01 01 72 02 06   ....1n.......r..",
          "8238: |   3248: 01 01 05 03 08 17 88 80 80 80 80 08 03 00 34 00   ..............4.",
          "8239: |   3264: 01 00 12 02 31 62 02 02 04 01 01 69 02 06 01 01   ....1b.....i....",
          "8240: |   3280: 06 04 06 19 88 80 80 80 80 07 03 00 38 00 00 00   ............8...",
          "8241: |   3296: 14 04 02 31 32 02 02 05 01 01 61 02 08 03 01 01   ...12.....a.....",
          "8242: |   3312: 02 05 06 1b 88 80 80 80 80 06 03 00 3c 00 00 00   ............<...",
          "8243: |   3328: 16 06 30 74 68 65 72 65 02 12 02 00 02 31 31 02   ..0there.....11.",
          "8244: |   3344: 06 01 01 04 0a 15 88 80 80 80 80 05 03 00 30 00   ..............0.",
          "8245: |   3360: 00 00 11 01 01 05 04 30 74 68 65 02 06 71 01 07   .......0the..q..",
          "8246: |   3376: 07 1c 88 80 80 80 80 04 03 00 3e 00 00 00 17 01   ..........>.....",
          "8247: |   3392: 01 06 02 30 6e 02 06 01 01 03 01 04 72 6f 77 73   ...0n.......rows",
          "8248: |   3408: 02 06 07 08 1b 88 80 80 80 80 03 03 00 3c 00 00   .............<..",
          "8249: |   3424: 00 16 08 30 62 65 74 77 65 65 6e 02 02 04 01 02   ...0between.....",
          "8250: |   3440: 69 6e 02 06 04 0c 1a 88 80 80 80 80 02 03 00 3a   in.............:",
          "8251: |   3456: 08 f0 00 15 04 30 61 6e 64 02 06 01 01 02 02 02   .....0and.......",
          "8252: |   3472: 72 65 02 02 03 04 0a 17 88 80 80 80 80 01 03 00   re..............",
          "8253: |   3488: 34 00 00 00 12 02 30 31 02 06 01 01 04 01 01 32   4.....01.......2",
          "8254: |   3504: 02 02 07 04 08 08 84 80 80 80 80 12 03 00 16 00   ................",
          "8255: |   3520: 00 00 05 04 1b 84 80 80 80 80 11 03 00 3c 00 00   .............<..",
          "8256: |   3536: 00 16 05 34 74 61 62 6c 01 06 01 01 05 02 03 65   ...4tabl.......e",
          "8257: |   3552: 72 6d 01 02 04 0b 1b 84 80 80 80 80 10 03 00 3c   rm.............<",
          "8258: |   3568: 00 00 00 16 05 34 65 61 63 68 01 02 03 01 04 70   .....4each.....p",
          "8259: |   3584: 72 65 73 01 02 05 04 09 1a 84 80 80 80 80 0f 03   res.............",
          "8260: |   3600: 00 3a 00 00 00 15 04 33 74 65 72 01 02 04 02 02   .:.....3ter.....",
          "8261: |   3616: 68 65 01 06 01 01 03 04 08 1b 84 80 80 80 80 0e   he..............",
          "8262: |   3632: 03 00 3c 00 00 00 16 04 33 70 72 65 01 02 05 01   ..<.....3pre....",
          "8263: |   3648: 03 74 61 62 01 06 01 01 05 04 08 1a 84 80 80 80   .tab............",
          "8264: |   3664: 80 0d 03 00 3a 00 00 00 15 04 33 66 6f 72 01 02   ....:.....3for..",
          "8265: |   3680: 02 02 02 74 73 01 06 01 01 04 03 f8 1b 84 80 80   ...ts...........",
          "8266: |   3696: 80 80 0c 03 00 3c 00 00 00 16 03 32 74 68 01 06   .....<.....2th..",
          "8267: |   3712: 01 01 03 00 04 33 65 61 63 01 02 03 04 09 18 84   .....3eac.......",
          "8268: |   3728: 80 80 80 80 0b 03 00 36 00 00 00 13 03 32 74 61   .......6.....2ta",
          "8269: |   3744: 01 06 01 01 05 02 01 65 00 02 04 04 09 19 84 80   .......e........",
          "8270: |   3760: 80 80 80 0a 03 10 38 00 00 00 14 03 32 69 6e 01   ......8.....2in.",
          "8271: |   3776: 06 01 01 02 01 02 70 72 01 02 05 04 09 18 84 80   ......pr........",
          "8272: |   3792: 80 80 80 09 03 00 36 00 00 00 13 03 32 66 6f 01   ......6.....2fo.",
          "8273: |   3808: 02 02 02 01 74 01 06 01 01 04 04 07 1b 84 80 80   ....t...........",
          "8274: |   3824: 80 80 08 03 00 3c 00 00 00 16 02 31 74 01 0a 04   .....<.....1t...",
          "8275: |   3840: 01 00 03 04 00 03 32 65 61 01 02 03 04 0a 17 84   ......2ea.......",
          "8276: |   3856: 80 80 80 80 07 03 00 34 00 00 00 12 02 31 69 01   .......4.....1i.",
          "8277: |   3872: 06 01 01 02 de 01 70 01 02 05 04 08 18 84 80 80   ......p.........",
          "8278: |   3888: 80 80 06 03 00 36 00 00 00 13 02 31 65 01 02 03   .....6.....1e...",
          "8279: |   3904: 01 01 66 01 08 02 01 01 04 04 06 1b 84 80 80 80   ..f.............",
          "8280: |   3920: 80 05 03 00 3c 00 00 00 16 05 30 74 65 72 6d 01   ....<.....0term.",
          "8281: |   3936: 02 04 02 02 68 65 01 06 01 01 03 04 09 14 84 80   ....he..........",
          "8282: |   3952: 80 80 80 04 03 00 2e 00 00 00 10 06 30 74 61 62   ............0tab",
          "8283: |   3968: 6c 65 01 06 01 01 05 04 15 84 80 80 80 80 03 03   le..............",
          "8284: |   3984: 00 30 00 00 00 11 02 08 30 70 72 65 73 65 6e 74   .0......0present",
          "8285: |   4000: 01 02 05 05 1b 84 80 80 80 80 02 03 00 3c 00 00   .............<..",
          "8286: |   4016: 00 16 04 30 66 74 73 01 06 01 01 04 01 02 69 6e   ...0fts.......in",
          "8287: |   4032: 01 06 01 01 04 0a 1a 84 80 80 80 80 01 03 00 3a   ...............:",
          "8288: |   4048: 00 00 00 15 05 30 65 61 63 68 00 f2 03 01 03 66   .....0each.....f",
          "8289: |   4064: 6f 72 01 02 02 04 09 06 01 03 00 12 03 0b 0f 00   or..............",
          "8290: |   4080: 00 08 8c 80 80 80 80 11 03 00 16 00 00 00 05 04   ................",
          "8291: | page 3 offset 8192",
          "8292: |      0: 0a 00 00 00 32 0e 4f 00 0f fa 0f f1 0f e9 0f e1   ....2.O.........",
          "8293: |     16: 0f d8 0f d1 0f c9 0f c1 0f b9 0f c1 0f a9 0f a0   ................",
          "8294: |     32: 0f 98 0f 90 0f 87 0f 80 0f 78 0f 71 0f 68 0f 5f   .........x.q.h._",
          "8295: |     48: 0f 56 0f 4d 0f 41 0f 38 0f 2f 0f 26 0f 1d 0f 13   .V.M.A.8./.&....",
          "8296: |     64: 0f 0a 0f 01 0e f7 0e ee 0e e6 0e dd 0e d7 0e cd   ................",
          "8297: |     80: 0e c3 0e ba 0e b0 0e a8 0e 9f 0e 96 0e 8e 0e 85   ................",
          "8298: |   3648: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08   ................",
          "8299: |   3664: 04 01 10 01 03 34 74 20 07 04 01 0e 01 03 34 1e   .....4t ......4.",
          "8300: |   3680: 09 04 01 12 34 03 33 74 68 1c 08 04 01 10 01 03   ....4.3th.......",
          "8301: |   3696: 33 6e 1a 08 04 01 10 01 03 32 77 18 08 04 01 10   3n.......2w.....",
          "8302: |   3712: 01 03 32 74 16 08 04 01 10 01 03 32 6e 14 07 04   ..2t.......2n...",
          "8303: |   3728: 01 0e 01 03 32 12 08 04 01 0f f1 03 31 74 10 08   ....2.......1t..",
          "8304: |   3744: 04 01 10 01 03 31 6e 0e 07 04 01 0e 01 03 30 fc   .....1n.......0.",
          "8305: |   3760: 09 04 01 12 01 03 30 74 68 0a 08 04 01 10 01 03   ......0th.......",
          "8306: |   3776: 30 74 08 09 04 01 12 01 03 30 6e 75 06 08 04 01   0t.......0nu....",
          "8307: |   3792: 10 01 03 30 6e 04 06 04 01 0c 01 05 52 08 04 01   ...0n.......R...",
          "8308: |   3808: 10 01 02 34 72 22 07 04 01 0e 01 02 34 20 08 04   ...4r.......4 ..",
          "8309: |   3824: 01 10 01 02 33 72 1e 09 04 01 12 01 02 33 61 72   ....3r.......3ar",
          "8310: |   3840: 1c 08 04 01 10 01 02 32 74 1a 08 04 01 10 b3 02   .......2t.......",
          "8311: |   3856: 32 69 18 09 04 01 12 01 02 32 61 72 16 08 04 01   2i.......2ar....",
          "8312: |   3872: 10 01 02 31 74 14 08 04 01 10 01 02 31 6e 12 08   ...1t.......1n..",
          "8313: |   3888: 04 01 10 01 02 31 62 10 08 04 01 10 01 02 31 32   .....1b.......12",
          "8314: |   3904: 0e 0b 04 01 16 01 02 30 74 68 65 72 0c 08 04 01   .......0ther....",
          "8315: |   3920: 10 01 02 30 74 0a 08 04 01 10 01 02 30 6e 08 08   ...0t.......0n..",
          "8316: |   3936: 04 01 10 01 02 30 62 06 09 04 01 10 01 02 30 61   .....0b.......0a",
          "8317: |   3952: 04 06 04 01 0c 01 02 02 07 04 09 10 01 34 74 22   .............4t.",
          "8318: |   3968: 06 04 09 0e 01 34 20 08 04 09 12 01 33 74 65 1e   .....4 .....3te.",
          "8319: |   3984: 07 04 09 10 01 33 70 1c 07 f4 09 11 01 33 66 1a   .....3p......3f.",
          "8320: |   4000: 08 04 09 12 01 32 74 68 18 07 04 09 10 01 32 e4   .....2th......2.",
          "8321: |   4016: 16 07 04 09 10 01 32 69 14 07 04 09 10 01 32 66   ......2i......2f",
          "8322: |   4032: 12 07 04 09 10 01 31 74 10 07 04 09 10 01 31 69   ......1t......1i",
          "8323: |   4048: 0e 06 04 09 0e 01 31 0c 08 04 09 12 01 30 74 65   ......1......0te",
          "8324: |   4064: 0a 07 04 09 10 01 30 74 08 00 00 00 00 00 00 00   ......0t........",
          "8325: | page 4 offset 12288",
          "8326: |   4064: 00 00 00 00 00 00 00 00 00 00 00 05 03 03 00 10   ................",
          "8327: |   4080: 03 05 05 02 03 00 10 04 06 05 01 03 00 10 04 04   ................",
          "8328: | page 5 offset 16384",
          "8329: |      0: 0a 00 00 00 02 0f eb 00 0f eb 0f f4 00 00 00 00   ................",
          "8330: |   4064: 00 00 00 00 00 00 00 00 00 00 00 08 03 15 01 70   ...............p",
          "8331: |   4080: 67 73 7a 18 0b 03 1b 01 76 65 72 73 69 6f 6e 04   gsz.....version.",
          "8332: | page 6 offset 20480",
          "8333: |   4080: 00 00 23 03 02 01 03 03 02 00 00 00 00 00 00 00   ..#.............",
          "8334: | end crash-5a5acd0ab42d31.db",
          "8335: }]} {}",
          "8337: do_execsql_test 58.1 {",
          "8338:   SELECT * FROM t1('t*');",
          "8339: } {{} {} {} {} {} {}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6e4a5f22811bcd1485e27073ec96821d448b91b6d1ff1659cc3772449d19a762",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}