{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f3a7e57c92b2c9b87dc4b2997f2ebda6781300d0",
      "candidate_info": {
        "commit_hash": "f3a7e57c92b2c9b87dc4b2997f2ebda6781300d0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f3a7e57c92b2c9b87dc4b2997f2ebda6781300d0",
        "files": [
          "crypto/evp/e_rc4_hmac_md5.c"
        ],
        "message": "crypto/evp: harden RC4_MD5 cipher.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory (or bogus\nMAC value is produced if x86 MD5 assembly module is involved). Since\nhash operation is read-only it is not considered to be exploitable\nbeyond a DoS condition.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "crypto/evp/e_rc4_hmac_md5.c||crypto/evp/e_rc4_hmac_md5.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/e_rc4_hmac_md5.c||crypto/evp/e_rc4_hmac_md5.c": [
          "File: crypto/evp/e_rc4_hmac_md5.c -> crypto/evp/e_rc4_hmac_md5.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "219:             len = p[arg - 2] << 8 | p[arg - 1];",
          "221:             if (!EVP_CIPHER_CTX_encrypting(ctx)) {",
          "222:                 len -= MD5_DIGEST_LENGTH;",
          "223:                 p[arg - 2] = len >> 8;",
          "224:                 p[arg - 1] = len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:                 if (len < MD5_DIGEST_LENGTH)",
          "223:                     return -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "09de9f0435790eefc082253609c8ef0ed66f8233",
      "candidate_info": {
        "commit_hash": "09de9f0435790eefc082253609c8ef0ed66f8233",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/09de9f0435790eefc082253609c8ef0ed66f8233",
        "files": [
          "crypto/aes/asm/aesni-sha1-x86_64.pl",
          "crypto/aes/asm/aesni-sha256-x86_64.pl"
        ],
        "message": "aes/asm/aesni-sha*-x86_64.pl: fix IV handling in SHAEXT paths.\n\nInitial IV was disregarded on SHAEXT-capable processors. Amazingly\nenough bulk AES128-SHA* talk-to-yourself tests were passing.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2992)\n\n(cherry picked from commit 08d09628d2c9f3ef599399d8cad021a07ab98347)",
        "before_after_code_files": [
          "crypto/aes/asm/aesni-sha1-x86_64.pl||crypto/aes/asm/aesni-sha1-x86_64.pl",
          "crypto/aes/asm/aesni-sha256-x86_64.pl||crypto/aes/asm/aesni-sha256-x86_64.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/aesni-sha1-x86_64.pl||crypto/aes/asm/aesni-sha1-x86_64.pl": [
          "File: crypto/aes/asm/aesni-sha1-x86_64.pl -> crypto/aes/asm/aesni-sha1-x86_64.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1711:  mov 240($key),$rounds",
          "1712:  sub $in0,$out",
          "1713:  movups ($key),$rndkey0   # $key[0]",
          "1714:  movups 16($key),$rndkey[0]  # forward reference",
          "1715:  lea 112($key),$key   # size optimization",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1714:  movups ($ivp),$iv   # load IV",
          "",
          "---------------"
        ],
        "crypto/aes/asm/aesni-sha256-x86_64.pl||crypto/aes/asm/aesni-sha256-x86_64.pl": [
          "File: crypto/aes/asm/aesni-sha256-x86_64.pl -> crypto/aes/asm/aesni-sha256-x86_64.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1307:  mov  240($key),$rounds",
          "1308:  sub  $in0,$out",
          "1309:  movups  ($key),$rndkey0  # $key[0]",
          "1310:  movups  16($key),$rndkey[0] # forward reference",
          "1311:  lea  112($key),$key  # size optimization",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1310:  movups  ($ivp),$iv  # load IV",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1bc45dd2cc8b4e18d8fc530f68c8949fab335643",
      "candidate_info": {
        "commit_hash": "1bc45dd2cc8b4e18d8fc530f68c8949fab335643",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1bc45dd2cc8b4e18d8fc530f68c8949fab335643",
        "files": [
          "test/testlib/OpenSSL/Test.pm"
        ],
        "message": "Test framework: Add the possibility to have a test specific data dir\n\nThis data directory is formed automatically by taking the recipe name\nand changing '.t' to '_data'.  Files in there can be reached with the\nnew function data_file()\n\n(Merged from https://github.com/openssl/openssl/pull/2027)\n(cherry picked from commit 6c6a2ae6fc964795304bbe7687e42b2b0cdf81b3)\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2802)",
        "before_after_code_files": [
          "test/testlib/OpenSSL/Test.pm||test/testliOpenSSL/Test.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/testlib/OpenSSL/Test.pm||test/testliOpenSSL/Test.pm": [
          "File: test/testlib/OpenSSL/Test.pm -> test/testliOpenSSL/Test.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:                                    run));",
          "21: @EXPORT_OK = (@Test::More::EXPORT_OK, qw(bldtop_dir bldtop_file",
          "22:                                          srctop_dir srctop_file",
          "23:                                          pipe with cmdstr quotify));",
          "25: =head1 NAME",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50: and C<$BLDTOP>.  Without one of the combinations it refuses to work.",
          "51: See L</ENVIRONMENT> below.",
          "53: =cut",
          "55: use File::Copy;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57:                              catdir catfile splitpath catpath devnull abs2rel",
          "58:                              rel2abs/;",
          "59: use File::Path 2.00 qw/rmtree mkpath/;",
          "62: # The name of the test.  This is set by setup() and is used in the other",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "507: =over 4",
          "509: =item B<pipe LIST>",
          "511: LIST is a list of CODEREFs returned by C<app> or C<test>, from which C<pipe>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "705: =cut",
          "707: sub __env {",
          "708:     $directories{SRCTOP}  = $ENV{SRCTOP} || $ENV{TOP};",
          "709:     $directories{BLDTOP}  = $ENV{BLDTOP} || $ENV{TOP};",
          "710:     $directories{BLDAPPS} = $ENV{BIN_D}  || __bldtop_dir(\"apps\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "713:     $directories{SRCFUZZ} =                 __srctop_dir(\"fuzz\");",
          "714:     $directories{BLDTEST} = $ENV{TEST_D} || __bldtop_dir(\"test\");",
          "715:     $directories{SRCTEST} =                 __srctop_dir(\"test\");",
          "716:     $directories{RESULTS} = $ENV{RESULT_D} || $directories{BLDTEST};",
          "718:     push @direnv, \"TOP\"       if $ENV{TOP};",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "806:     return ($^X, $f);",
          "807: }",
          "809: sub __results_file {",
          "810:     BAIL_OUT(\"Must run setup() first\") if (! $test_name);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "887:  print STDERR \"DEBUG: __cwd(), directories and files:\\n\";",
          "888:  print STDERR \"  \\$directories{BLDTEST} = \\\"$directories{BLDTEST}\\\"\\n\";",
          "889:  print STDERR \"  \\$directories{SRCTEST} = \\\"$directories{SRCTEST}\\\"\\n\";",
          "890:  print STDERR \"  \\$directories{RESULTS} = \\\"$directories{RESULTS}\\\"\\n\";",
          "891:  print STDERR \"  \\$directories{BLDAPPS} = \\\"$directories{BLDAPPS}\\\"\\n\";",
          "892:  print STDERR \"  \\$directories{SRCAPPS} = \\\"$directories{SRCAPPS}\\\"\\n\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b763981b76b6a97c72011c290ec574b37a15f6e4",
      "candidate_info": {
        "commit_hash": "b763981b76b6a97c72011c290ec574b37a15f6e4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b763981b76b6a97c72011c290ec574b37a15f6e4",
        "files": [
          "crypto/armcap.c"
        ],
        "message": "crypto/armcap.c: short-circuit processor capability probe in iOS builds.\n\nCapability probing by catching SIGILL appears to be problematic\non iOS. But since Apple universe is \"monocultural\", it's actually\npossible to simply set pre-defined processor capability mask.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2617)\n\n(cherry picked from commit 8653e78f4319b23d60239f9557d8c1e1d23be1a5)",
        "before_after_code_files": [
          "crypto/armcap.c||crypto/armcap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/armcap.c||crypto/armcap.c": [
          "File: crypto/armcap.c -> crypto/armcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:         return;",
          "112:     }",
          "114:     sigfillset(&all_masked);",
          "115:     sigdelset(&all_masked, SIGILL);",
          "116:     sigdelset(&all_masked, SIGTRAP);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114: # if defined(__APPLE__) && !defined(__aarch64__)",
          "120:     if (1) {",
          "121:         OPENSSL_armcap_P = ARMV7_NEON;",
          "122:         return;",
          "123:     }",
          "130: # endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75f12d7cbffcaa31cc8ff5c7fee02e614785632a",
      "candidate_info": {
        "commit_hash": "75f12d7cbffcaa31cc8ff5c7fee02e614785632a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/75f12d7cbffcaa31cc8ff5c7fee02e614785632a",
        "files": [
          "test/README.ssltest.md",
          "test/handshake_helper.c",
          "test/handshake_helper.h",
          "test/ssl_test.c",
          "test/ssl_test_ctx.c",
          "test/ssl_test_ctx.h"
        ],
        "message": "Add new ssl_test option.\n\nAdd option ExpectedTmpKeyType to test the temporary key the server\nsends is of the correct type.\n\nReviewed-by: Kurt Roeckx <kurt@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2191)\n(cherry picked from commit b93ad05dba3e3d2ceb79799a883ae43d42ba16e2)",
        "before_after_code_files": [
          "test/handshake_helper.c||test/handshake_helper.c",
          "test/handshake_helper.h||test/handshake_helper.h",
          "test/ssl_test.c||test/ssl_test.c",
          "test/ssl_test_ctx.c||test/ssl_test_ctx.c",
          "test/ssl_test_ctx.h||test/ssl_test_ctx.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/handshake_helper.c||test/handshake_helper.c": [
          "File: test/handshake_helper.c -> test/handshake_helper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "876:     const unsigned char *proto = NULL;",
          "878:     unsigned int proto_len = 0;",
          "880:     memset(&server_ctx_data, 0, sizeof(server_ctx_data));",
          "881:     memset(&server2_ctx_data, 0, sizeof(server2_ctx_data));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "879:     EVP_PKEY *tmp_key;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1035:     if (session_out != NULL)",
          "1038:     ctx_data_free_data(&server_ctx_data);",
          "1039:     ctx_data_free_data(&server2_ctx_data);",
          "1040:     ctx_data_free_data(&client_ctx_data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1039:     if (SSL_get_server_tmp_key(client.ssl, &tmp_key)) {",
          "1040:         int nid = EVP_PKEY_id(tmp_key);",
          "1042: #ifndef OPENSSL_NO_EC",
          "1043:         if (nid == EVP_PKEY_EC) {",
          "1044:             EC_KEY *ec = EVP_PKEY_get0_EC_KEY(tmp_key);",
          "1045:             nid = EC_GROUP_get_curve_name(EC_KEY_get0_group(ec));",
          "1046:         }",
          "1047: #endif",
          "1048:         EVP_PKEY_free(tmp_key);",
          "1049:         ret->tmp_key_type = nid;",
          "1050:     }",
          "",
          "---------------"
        ],
        "test/handshake_helper.h||test/handshake_helper.h": [
          "File: test/handshake_helper.h -> test/handshake_helper.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:     int client_resumed;",
          "45:     int server_resumed;",
          "46: } HANDSHAKE_RESULT;",
          "48: HANDSHAKE_RESULT *HANDSHAKE_RESULT_new(void);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:     int tmp_key_type;",
          "",
          "---------------"
        ],
        "test/ssl_test.c||test/ssl_test.c": [
          "File: test/ssl_test.c -> test/ssl_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:     return 1;",
          "199: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "201: static int check_tmp_key(HANDSHAKE_RESULT *result, SSL_TEST_CTX *test_ctx)",
          "202: {",
          "203:     if (test_ctx->expected_tmp_key_type == 0",
          "204:         || test_ctx->expected_tmp_key_type == result->tmp_key_type)",
          "205:         return 1;",
          "206:     fprintf(stderr, \"Tmp key type mismatch, %s vs %s\\n\",",
          "207:             OBJ_nid2ln(test_ctx->expected_tmp_key_type),",
          "208:             OBJ_nid2ln(result->tmp_key_type));",
          "209:     return 0;",
          "210: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218: #endif",
          "219:         ret &= check_alpn(result, test_ctx);",
          "220:         ret &= check_resumption(result, test_ctx);",
          "221:     }",
          "222:     return ret;",
          "223: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "232:         ret &= check_tmp_key(result, test_ctx);",
          "",
          "---------------"
        ],
        "test/ssl_test_ctx.c||test/ssl_test_ctx.c": [
          "File: test/ssl_test_ctx.c -> test/ssl_test_ctx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "432: IMPLEMENT_SSL_TEST_INT_OPTION(SSL_TEST_CTX, test, max_fragment_size)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "438: __owur static int parse_expected_tmp_key_type(SSL_TEST_CTX *test_ctx,",
          "439:                                               const char *value)",
          "440: {",
          "441:     int nid;",
          "443:     if (value == NULL)",
          "444:         return 0;",
          "445:     nid = OBJ_sn2nid(value);",
          "446:     if (nid == NID_undef)",
          "447:         nid = OBJ_ln2nid(value);",
          "448: #ifndef OPENSSL_NO_EC",
          "449:     if (nid == NID_undef)",
          "450:         nid = EC_curve_nist2nid(value);",
          "451: #endif",
          "452:     if (nid == NID_undef)",
          "453:         return 0;",
          "454:     test_ctx->expected_tmp_key_type = nid;",
          "455:     return 1;",
          "456: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "455:     { \"ResumptionExpected\", &parse_test_resumption_expected },",
          "456:     { \"ApplicationData\", &parse_test_app_data_size },",
          "457:     { \"MaxFragmentSize\", &parse_test_max_fragment_size },",
          "458: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "482:     { \"ExpectedTmpKeyType\", &parse_expected_tmp_key_type },",
          "",
          "---------------"
        ],
        "test/ssl_test_ctx.h||test/ssl_test_ctx.h": [
          "File: test/ssl_test_ctx.h -> test/ssl_test_ctx.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:     char *expected_alpn_protocol;",
          "161:     int resumption_expected;",
          "162: } SSL_TEST_CTX;",
          "164: const char *ssl_test_result_name(ssl_test_result_t result);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:     int expected_tmp_key_type;",
          "",
          "---------------"
        ]
      }
    }
  ]
}