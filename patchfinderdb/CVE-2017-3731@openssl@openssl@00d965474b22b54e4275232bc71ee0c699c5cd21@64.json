{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ef727bc5669182cdf8519734ae9924fc54cc4164",
      "candidate_info": {
        "commit_hash": "ef727bc5669182cdf8519734ae9924fc54cc4164",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ef727bc5669182cdf8519734ae9924fc54cc4164",
        "files": [
          "crypto/x509v3/v3_cpols.c"
        ],
        "message": "Fixed a crash in print_notice.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2935)\n(cherry picked from commit 29d1fad78899e5ae2997b19937a175784b21c996)",
        "before_after_code_files": [
          "crypto/x509v3/v3_cpols.c||crypto/x509v3/v3_cpols.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509v3/v3_cpols.c||crypto/x509v3/v3_cpols.c": [
          "File: crypto/x509v3/v3_cpols.c -> crypto/x509v3/v3_cpols.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "413:             num = sk_ASN1_INTEGER_value(ref->noticenos, i);",
          "414:             if (i)",
          "415:                 BIO_puts(out, \", \");",
          "419:         }",
          "420:         BIO_puts(out, \"\\n\");",
          "421:     }",
          "",
          "[Removed Lines]",
          "416:             tmp = i2s_ASN1_INTEGER(NULL, num);",
          "417:             BIO_puts(out, tmp);",
          "418:             OPENSSL_free(tmp);",
          "",
          "[Added Lines]",
          "416:             if (num == NULL)",
          "417:                 BIO_puts(out, \"(null)\");",
          "418:             else {",
          "419:                 tmp = i2s_ASN1_INTEGER(NULL, num);",
          "420:                 if (tmp == NULL)",
          "421:                     return;",
          "422:                 BIO_puts(out, tmp);",
          "423:                 OPENSSL_free(tmp);",
          "424:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "14cc893ca224cc89261b6e15eee3caaacb45e5e9",
      "candidate_info": {
        "commit_hash": "14cc893ca224cc89261b6e15eee3caaacb45e5e9",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/14cc893ca224cc89261b6e15eee3caaacb45e5e9",
        "files": [
          "test/recipes/15-test_rsapss.t"
        ],
        "message": "Added a test case for RSA_padding_add_PKCS1_PSS_mgf1.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2881)",
        "before_after_code_files": [
          "test/recipes/15-test_rsapss.t||test/recipes/15-test_rsapss.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/15-test_rsapss.t||test/recipes/15-test_rsapss.t": [
          "File: test/recipes/15-test_rsapss.t -> test/recipes/15-test_rsapss.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #! /usr/bin/env perl",
          "2: # Copyright 2017 The OpenSSL Project Authors. All Rights Reserved.",
          "3: #",
          "4: # Licensed under the OpenSSL license (the \"License\").  You may not use",
          "5: # this file except in compliance with the License.  You can obtain a copy",
          "6: # in the file LICENSE in the source distribution or at",
          "7: # https://www.openssl.org/source/license.html",
          "10: use strict;",
          "11: use warnings;",
          "13: use File::Spec;",
          "14: use OpenSSL::Test qw/:DEFAULT with srctop_file/;",
          "15: use OpenSSL::Test::Utils;",
          "17: setup(\"test_rsapss\");",
          "19: plan tests => 5;",
          "21: #using test/testrsa.pem which happens to be a 512 bit RSA",
          "22: ok(run(app(['openssl', 'dgst', '-sign', srctop_file('test', 'testrsa.pem'), '-sha1',",
          "23:             '-sigopt', 'rsa_padding_mode:pss', '-sigopt', 'rsa_pss_saltlen:-2',",
          "24:             '-sigopt', 'rsa_mgf1_md:sha512', srctop_file('test', 'testrsa.pem')],",
          "25:            stdout => 'testrsapss.sig')),",
          "26:    \"openssl dgst -sign\");",
          "28: with({ exit_checker => sub { return shift == 1; } },",
          "29:      sub { ok(run(app(['openssl', 'dgst', '-sign', srctop_file('test', 'testrsa.pem'), '-sha512',",
          "30:                        '-sigopt', 'rsa_padding_mode:pss', '-sigopt', 'rsa_pss_saltlen:-2',",
          "31:                        '-sigopt', 'rsa_mgf1_md:sha512', srctop_file('test', 'testrsa.pem')])),",
          "32:               \"openssl dgst -sign, expect to fail gracefully\");",
          "33:            ok(run(app(['openssl', 'dgst', '-sign', srctop_file('test', 'testrsa.pem'), '-sha512',",
          "34:                        '-sigopt', 'rsa_padding_mode:pss', '-sigopt', 'rsa_pss_saltlen:2147483647',",
          "35:                        '-sigopt', 'rsa_mgf1_md:sha1', srctop_file('test', 'testrsa.pem')])),",
          "36:               \"openssl dgst -sign, expect to fail gracefully\");",
          "37:            ok(run(app(['openssl', 'dgst', '-prverify', srctop_file('test', 'testrsa.pem'), '-sha512',",
          "38:                        '-sigopt', 'rsa_padding_mode:pss', '-sigopt', 'rsa_pss_saltlen:-2',",
          "39:                        '-sigopt', 'rsa_mgf1_md:sha512', '-signature', 'testrsapss.sig',",
          "40:                        srctop_file('test', 'testrsa.pem')])),",
          "41:               \"openssl dgst -prverify, expect to fail gracefully\");",
          "42:          });",
          "44: ok(run(app(['openssl', 'dgst', '-prverify', srctop_file('test', 'testrsa.pem'), '-sha1',",
          "45:             '-sigopt', 'rsa_padding_mode:pss', '-sigopt', 'rsa_pss_saltlen:-2',",
          "46:             '-sigopt', 'rsa_mgf1_md:sha512', '-signature', 'testrsapss.sig',",
          "47:             srctop_file('test', 'testrsa.pem')])),",
          "48:    \"openssl dgst -prverify\");",
          "49: unlink 'testrsapss.sig';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1ec9c07fe3631bce5b7c538224c080339c8fc6e",
      "candidate_info": {
        "commit_hash": "f1ec9c07fe3631bce5b7c538224c080339c8fc6e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f1ec9c07fe3631bce5b7c538224c080339c8fc6e",
        "files": [
          "test/build.info"
        ],
        "message": "test/build.info: typo, $ missing\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1832)\n(cherry picked from commit 9c89c8460a4dcf828a22e2dfc279b5ea8a80ec60)",
        "before_after_code_files": [
          "test/build.info||test/build.info"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/build.info||test/build.info": [
          "File: test/build.info -> test/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "275:   INCLUDE[bio_enc_test]=../include",
          "276:   DEPEND[bio_enc_test]=../libcrypto",
          "279:     PROGRAMS_NO_INST=shlibloadtest",
          "280:     SOURCE[shlibloadtest]=shlibloadtest.c",
          "281:     INCLUDE[shlibloadtest]=../include",
          "",
          "[Removed Lines]",
          "278:   IF[{- !disabled{shared} -}]",
          "",
          "[Added Lines]",
          "278:   IF[{- !$disabled{shared} -}]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "df0d9c6950ce194601a0513afa5af77cc9d78d8c",
      "candidate_info": {
        "commit_hash": "df0d9c6950ce194601a0513afa5af77cc9d78d8c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/df0d9c6950ce194601a0513afa5af77cc9d78d8c",
        "files": [
          "test/recipes/80-test_ssl_old.t"
        ],
        "message": "Skip ECDH tests for SSLv3\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1597)\n(cherry picked from commit 4f326dd8998d5b33f72b11432f110e0f2cfcb92b)",
        "before_after_code_files": [
          "test/recipes/80-test_ssl_old.t||test/recipes/80-test_ssl_old.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/80-test_ssl_old.t||test/recipes/80-test_ssl_old.t": [
          "File: test/recipes/80-test_ssl_old.t -> test/recipes/80-test_ssl_old.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "468:  foreach my $protocol (@protocols) {",
          "469:      note \"Testing ciphersuites for $protocol\";",
          "470:      foreach my $cipher (@{$ciphersuites{$protocol}}) {",
          "474:      }",
          "475:             is(run(test([@ssltest,",
          "476:                          \"-s_cipher\", \"EDH\",",
          "",
          "[Removed Lines]",
          "471:   ok(run(test([@ssltest, @exkeys, \"-cipher\", $cipher,",
          "472:         $protocol eq \"SSLv3\" ? (\"-ssl3\") : ()])),",
          "473:      \"Testing $cipher\");",
          "",
          "[Added Lines]",
          "471:                 if ($protocol eq \"SSLv3\" && $cipher =~ /ECDH/ ) {",
          "472:                     note \"*****SKIPPING $protocol $cipher\";",
          "473:                     ok(1);",
          "474:                 } else {",
          "475:                     ok(run(test([@ssltest, @exkeys, \"-cipher\", $cipher,",
          "476:                                  $protocol eq \"SSLv3\" ? (\"-ssl3\") : ()])),",
          "477:                        \"Testing $cipher\");",
          "478:                }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb2efacaa20987f252bc54a587619690c99dbe5f",
      "candidate_info": {
        "commit_hash": "bb2efacaa20987f252bc54a587619690c99dbe5f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bb2efacaa20987f252bc54a587619690c99dbe5f",
        "files": [
          "include/openssl/err.h",
          "util/indent.pro"
        ],
        "message": "Clean dead macros and defines\n\n... mostly related to some old discarded modules .\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1906)\n(cherry picked from commit 31a51151fc163a7f5f4d07dff9478be50e4b5707)",
        "before_after_code_files": [
          "include/openssl/err.h||include/openssl/err.h",
          "util/indent.pro||util/indent.pro"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/openssl/err.h||include/openssl/err.h": [
          "File: include/openssl/err.h -> include/openssl/err.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: # define ERR_LIB_CMS             46",
          "90: # define ERR_LIB_TS              47",
          "91: # define ERR_LIB_HMAC            48",
          "93: # define ERR_LIB_CT              50",
          "94: # define ERR_LIB_ASYNC           51",
          "95: # define ERR_LIB_KDF             52",
          "",
          "[Removed Lines]",
          "92: # define ERR_LIB_JPAKE           49",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "128: # define CMSerr(f,r) ERR_PUT_error(ERR_LIB_CMS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "129: # define TSerr(f,r) ERR_PUT_error(ERR_LIB_TS,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "130: # define HMACerr(f,r) ERR_PUT_error(ERR_LIB_HMAC,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "132: # define CTerr(f,r) ERR_PUT_error(ERR_LIB_CT,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "133: # define ASYNCerr(f,r) ERR_PUT_error(ERR_LIB_ASYNC,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "134: # define KDFerr(f,r) ERR_PUT_error(ERR_LIB_KDF,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "",
          "[Removed Lines]",
          "131: # define JPAKEerr(f,r) ERR_PUT_error(ERR_LIB_JPAKE,(f),(r),OPENSSL_FILE,OPENSSL_LINE)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "util/indent.pro||util/indent.pro": [
          "File: util/indent.pro -> util/indent.pro",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: -ts0",
          "36: -T ACCESS_DESCRIPTION",
          "37: -T ADDED_OBJ",
          "56: -T AES_KEY",
          "57: -T APP_INFO",
          "58: -T ARGS",
          "",
          "[Removed Lines]",
          "38: -T AEP_BBOOL",
          "39: -T AEP_CHAR",
          "40: -T AEP_CHAR_PTR",
          "41: -T AEP_CONNECTION_ENTRY",
          "42: -T AEP_CONNECTION_HNDL",
          "43: -T AEP_CONNECTION_HNDL_PTR",
          "44: -T AEP_FLAGS",
          "45: -T AEP_RV",
          "46: -T AEP_TRANSACTION_ID",
          "47: -T AEP_TRANSACTION_ID_PTR",
          "48: -T AEP_U16",
          "49: -T AEP_U32",
          "50: -T AEP_U32_PTR",
          "51: -T AEP_U64_PTR",
          "52: -T AEP_U8",
          "53: -T AEP_U8_PTR",
          "54: -T AEP_VOID_PTR",
          "55: -T AEP_VOID_PTR_PTR",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "285: -T HEAPLIST32",
          "286: -T HEARTBEAT_TEST_FIXTURE",
          "287: -T HMAC_CTX",
          "292: -T IDEA_KEY_SCHEDULE",
          "293: -T IPAddrBlocks",
          "294: -T IPAddressFamily",
          "",
          "[Removed Lines]",
          "288: -T ICA_KEY_RSA_CRT",
          "289: -T ICA_KEY_RSA_CRT_REC",
          "290: -T ICA_KEY_RSA_MODEXPO",
          "291: -T ICA_KEY_RSA_MODEXPO_REC",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "362: -T OPENSSL_ITEM",
          "363: -T OPENSSL_PSTRING",
          "364: -T OPENSSL_STRING",
          "366: -T OSSL_ASYNC_FD",
          "367: -T OTHERNAME",
          "368: -T P256_POINT",
          "",
          "[Removed Lines]",
          "365: -T OPENSSL_STRING",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "434: -T SSL",
          "435: -T SSL2_STATE",
          "436: -T SSL3_BUFFER",
          "439: -T SSL3_COMP",
          "440: -T SSL3_ENC_METHOD",
          "441: -T SSL3_RECORD",
          "",
          "[Removed Lines]",
          "437: -T SSL3_BUF_FREELIST",
          "438: -T SSL3_BUF_FREELIST_ENTRY",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "450: -T SSL_SESSION",
          "451: -T SSL_SESSION_ASN1",
          "452: -T STACK_OF",
          "490: -T SXNET",
          "491: -T SXNETID",
          "492: -T TCHAR",
          "",
          "[Removed Lines]",
          "453: -T STORE",
          "454: -T STORE_ATTR_INFO",
          "455: -T STORE_ATTR_TYPES",
          "456: -T STORE_CERTIFICATE_STATUS",
          "457: -T STORE_CLEANUP_FUNC_PTR",
          "458: -T STORE_CTRL_FUNC_PTR",
          "459: -T STORE_END_OBJECT_FUNC_PTR",
          "460: -T STORE_GENERATE_OBJECT_FUNC_PTR",
          "461: -T STORE_GENERIC_FUNC_PTR",
          "462: -T STORE_GET_OBJECT_FUNC_PTR",
          "463: -T STORE_HANDLE_OBJECT_FUNC_PTR",
          "464: -T STORE_INITIALISE_FUNC_PTR",
          "465: -T STORE_METHOD",
          "466: -T STORE_MODIFY_OBJECT_FUNC_PTR",
          "467: -T STORE_NEXT_OBJECT_FUNC_PTR",
          "468: -T STORE_OBJECT",
          "469: -T STORE_OBJECT_TYPES",
          "470: -T STORE_PARAM_TYPES",
          "471: -T STORE_START_OBJECT_FUNC_PTR",
          "472: -T STORE_STORE_OBJECT_FUNC_PTR",
          "473: -T SW_ALGTYPE",
          "474: -T SW_BYTE",
          "475: -T SW_COMMAND_BITMAP",
          "476: -T SW_COMMAND_CODE",
          "477: -T SW_CONTEXT_HANDLE",
          "478: -T SW_CRT",
          "479: -T SW_DSA",
          "480: -T SW_EXP",
          "481: -T SW_LARGENUMBER",
          "482: -T SW_NVDATA",
          "483: -T SW_OSHANDLE",
          "484: -T SW_PARAM",
          "485: -T SW_STATE",
          "486: -T SW_STATUS",
          "487: -T SW_U16",
          "488: -T SW_U32",
          "489: -T SW_U64",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "662: -T STACK_OF_SRTP_PROTECTION_PROFILE_",
          "663: -T STACK_OF_SSL_CIPHER_",
          "664: -T STACK_OF_SSL_COMP_",
          "666: -T STACK_OF_STRING_",
          "667: -T STACK_OF_SXNETID_",
          "668: -T STACK_OF_SingleResponse_",
          "",
          "[Removed Lines]",
          "665: -T STACK_OF_STORE_ATTR_INFO_",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}