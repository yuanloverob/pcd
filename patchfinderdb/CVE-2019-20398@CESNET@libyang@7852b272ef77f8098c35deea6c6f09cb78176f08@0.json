{
  "cve_id": "CVE-2019-20398",
  "cve_desc": "A NULL pointer dereference is present in libyang before v1.0-r3 in the function lys_extension_instances_free() due to a copy of unresolved extensions in lys_restr_dup(). Applications that use libyang to parse untrusted input yang files may crash.",
  "repo": "CESNET/libyang",
  "patch_hash": "7852b272ef77f8098c35deea6c6f09cb78176f08",
  "patch_info": {
    "commit_hash": "7852b272ef77f8098c35deea6c6f09cb78176f08",
    "repo": "CESNET/libyang",
    "commit_url": "https://github.com/CESNET/libyang/commit/7852b272ef77f8098c35deea6c6f09cb78176f08",
    "files": [
      "src/tree_schema.c"
    ],
    "message": "schema tree BUGFIX do not copy unresolved exts in groupings restrictions\n\nFixes #773",
    "before_after_code_files": [
      "src/tree_schema.c||src/tree_schema.c"
    ]
  },
  "patch_diff": {
    "src/tree_schema.c||src/tree_schema.c": [
      "File: src/tree_schema.c -> src/tree_schema.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1601:     LY_CHECK_ERR_RETURN(!result, LOGMEM(mod->ctx), NULL);",
      "1603:     for (i = 0; i < size; i++) {",
      "1606:         result[i].expr = lydict_insert(mod->ctx, old[i].expr, 0);",
      "1607:         result[i].dsc = lydict_insert(mod->ctx, old[i].dsc, 0);",
      "1608:         result[i].ref = lydict_insert(mod->ctx, old[i].ref, 0);",
      "",
      "[Removed Lines]",
      "1604:         result[i].ext_size = old[i].ext_size;",
      "1605:         lys_ext_dup(mod->ctx, mod, old[i].ext, old[i].ext_size, &result[i], LYEXT_PAR_RESTR, &result[i].ext, shallow, unres);",
      "",
      "[Added Lines]",
      "1605:         if (unres_schema_find(unres, -1, (void *)&old[i].ext, UNRES_EXT) == -1) {",
      "1606:             result[i].ext_size = old[i].ext_size;",
      "1607:             lys_ext_dup(mod->ctx, mod, old[i].ext, old[i].ext_size, &result[i], LYEXT_PAR_RESTR, &result[i].ext, shallow, unres);",
      "1608:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2d5f84c23270a6110cec14be4349fcfa531bc7a3",
      "candidate_info": {
        "commit_hash": "2d5f84c23270a6110cec14be4349fcfa531bc7a3",
        "repo": "CESNET/libyang",
        "commit_url": "https://github.com/CESNET/libyang/commit/2d5f84c23270a6110cec14be4349fcfa531bc7a3",
        "files": [
          "src/parser.c",
          "src/resolve.c",
          "src/tree_internal.h",
          "src/tree_schema.c"
        ],
        "message": "parser BUGFIX explicit context passing\n\nFixes #439",
        "before_after_code_files": [
          "src/parser.c||src/parser.c",
          "src/resolve.c||src/resolve.c",
          "src/tree_internal.h||src/tree_internal.h",
          "src/tree_schema.c||src/tree_schema.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/tree_schema.c||src/tree_schema.c"
          ],
          "candidate": [
            "src/tree_schema.c||src/tree_schema.c"
          ]
        }
      },
      "candidate_diff": {
        "src/parser.c||src/parser.c": [
          "File: src/parser.c -> src/parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3217:         target->ext[n]->arg_value = lydict_insert(ctx, rfn->ext[m]->arg_value, 0);",
          "3219:         target->ext[n]->ext_size = rfn->ext[m]->ext_size;",
          "3221:                     &target->ext[n]->ext, 0, NULL);",
          "3223:         target->ext[n]->insubstmt_index = rfn->ext[m]->insubstmt_index;",
          "",
          "[Removed Lines]",
          "3220:         lys_ext_dup(target->module, rfn->ext[m]->ext, rfn->ext[m]->ext_size, target, LYEXT_PAR_NODE,",
          "",
          "[Added Lines]",
          "3220:         lys_ext_dup(ctx, target->module, rfn->ext[m]->ext, rfn->ext[m]->ext_size, target, LYEXT_PAR_NODE,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3532:         target->ext[n]->insubstmt = substmt;",
          "3533:         target->ext[n]->insubstmt_index = dev->ext[m]->insubstmt_index;",
          "3534:         target->ext[n]->ext_size = dev->ext[m]->ext_size;",
          "3536:                     &target->ext[n]->ext, 1, NULL);",
          "3537:         target->ext[n]->nodetype = LYS_EXT;",
          "3538:         target->ext[n]->module = target->module;",
          "",
          "[Removed Lines]",
          "3535:         lys_ext_dup(target->module, dev->ext[m]->ext, dev->ext[m]->ext_size, target, LYEXT_PAR_NODE,",
          "",
          "[Added Lines]",
          "3535:         lys_ext_dup(ctx, target->module, dev->ext[m]->ext, dev->ext[m]->ext_size, target, LYEXT_PAR_NODE,",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4871:             LY_CHECK_ERR_GOTO(!must, LOGMEM, fail);",
          "4872:             for (k = 0, j = *old_size; k < rfn->must_size; k++, j++) {",
          "4873:                 must[j].ext_size = rfn->must[k].ext_size;",
          "4875:                             &must[j].ext, 0, unres);",
          "4876:                 must[j].expr = lydict_insert(ctx, rfn->must[k].expr, 0);",
          "4877:                 must[j].dsc = lydict_insert(ctx, rfn->must[k].dsc, 0);",
          "",
          "[Removed Lines]",
          "4874:                 lys_ext_dup(rfn->module, rfn->must[k].ext, rfn->must[k].ext_size, &rfn->must[k], LYEXT_PAR_RESTR,",
          "",
          "[Added Lines]",
          "4874:                 lys_ext_dup(ctx, rfn->module, rfn->must[k].ext, rfn->must[k].ext_size, &rfn->must[k], LYEXT_PAR_RESTR,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4919:                     iff[j].ext_size = rfn->iffeature[k].ext_size;",
          "4921:                                 &rfn->iffeature[k], LYEXT_PAR_IFFEATURE, &iff[j].ext, 0, unres);",
          "4922:                 }",
          "4923:                 (*old_size)++;",
          "",
          "[Removed Lines]",
          "4920:                     lys_ext_dup(rfn->module, rfn->iffeature[k].ext, rfn->iffeature[k].ext_size,",
          "",
          "[Added Lines]",
          "4920:                     lys_ext_dup(ctx, rfn->module, rfn->iffeature[k].ext, rfn->iffeature[k].ext_size,",
          "",
          "---------------"
        ],
        "src/tree_internal.h||src/tree_internal.h": [
          "File: src/tree_internal.h -> src/tree_internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:                 LYEXT_PAR parent_type, struct lys_ext_instance ***new, int shallow, struct unres_schema *unres);",
          "",
          "[Removed Lines]",
          "203: int lys_ext_dup(struct lys_module *mod, struct lys_ext_instance **orig, uint8_t size, void *parent,",
          "",
          "[Added Lines]",
          "204: int lys_ext_dup(struct ly_ctx *ctx, struct lys_module *mod, struct lys_ext_instance **orig, uint8_t size, void *parent,",
          "",
          "---------------"
        ],
        "src/tree_schema.c||src/tree_schema.c": [
          "File: src/tree_schema.c -> src/tree_schema.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1188: int",
          "1191: {",
          "1192:     int i;",
          "1193:     uint8_t u = 0;",
          "",
          "[Removed Lines]",
          "1189: lys_ext_dup(struct lys_module *mod, struct lys_ext_instance **orig, uint8_t size, void *parent, LYEXT_PAR parent_type,",
          "1190:             struct lys_ext_instance ***new, int shallow, struct unres_schema *unres)",
          "",
          "[Added Lines]",
          "1189: lys_ext_dup(struct ly_ctx *ctx, struct lys_module *mod, struct lys_ext_instance **orig, uint8_t size, void *parent,",
          "1190:             LYEXT_PAR parent_type, struct lys_ext_instance ***new, int shallow, struct unres_schema *unres)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1230:             result[u]->def = orig[u]->def;",
          "1231:             result[u]->flags = LYEXT_OPT_CONTENT;",
          "1233:             result[u]->parent = parent;",
          "1234:             result[u]->parent_type = parent_type;",
          "1235:             result[u]->insubstmt = orig[u]->insubstmt;",
          "",
          "[Removed Lines]",
          "1232:             result[u]->arg_value = lydict_insert(mod->ctx, orig[u]->arg_value, 0);",
          "",
          "[Added Lines]",
          "1232:             result[u]->arg_value = lydict_insert(ctx, orig[u]->arg_value, 0);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1243:             result[u]->ext_size = orig[u]->ext_size;",
          "1245:                             LYEXT_PAR_EXTINST, &result[u]->ext, shallow, unres)) {",
          "1246:                 goto error;",
          "1247:             }",
          "",
          "[Removed Lines]",
          "1244:             if (lys_ext_dup(mod, orig[u]->ext, orig[u]->ext_size, result[u],",
          "",
          "[Added Lines]",
          "1244:             if (lys_ext_dup(ctx, mod, orig[u]->ext, orig[u]->ext_size, result[u],",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1264:             LY_CHECK_ERR_GOTO(!info, LOGMEM, error);",
          "1265:             info->datatype = info_orig->datatype;",
          "1266:             if (info->datatype == LYS_IN_YIN) {",
          "1269:             info->parent = parent;",
          "1270:             info->mod = mod;",
          "",
          "[Removed Lines]",
          "1267:                 info->data.yin = lyxml_dup_elem(mod->ctx, info_orig->data.yin, NULL, 1);",
          "",
          "[Added Lines]",
          "1267:                 info->data.yin = lyxml_dup_elem(ctx, info_orig->data.yin, NULL, 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1281: error:",
          "1282:     (*new) = NULL;",
          "1284:     return EXIT_FAILURE;",
          "1285: }",
          "",
          "[Removed Lines]",
          "1283:     lys_extension_instances_free(mod->ctx, result, u, NULL);",
          "",
          "[Added Lines]",
          "1283:     lys_extension_instances_free(ctx, result, u, NULL);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1300:     for (i = 0; i < size; i++) {",
          "1301:         result[i].ext_size = old[i].ext_size;",
          "1303:         result[i].expr = lydict_insert(mod->ctx, old[i].expr, 0);",
          "1304:         result[i].dsc = lydict_insert(mod->ctx, old[i].dsc, 0);",
          "1305:         result[i].ref = lydict_insert(mod->ctx, old[i].ref, 0);",
          "",
          "[Removed Lines]",
          "1302:         lys_ext_dup(mod, old[i].ext, old[i].ext_size, &result[i], LYEXT_PAR_RESTR, &result[i].ext, shallow, unres);",
          "",
          "[Added Lines]",
          "1302:         lys_ext_dup(mod->ctx, mod, old[i].ext, old[i].ext_size, &result[i], LYEXT_PAR_RESTR, &result[i].ext, shallow, unres);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1370:                 new->info.bits.bit[u].flags = old->info.bits.bit[u].flags;",
          "1371:                 new->info.bits.bit[u].pos = old->info.bits.bit[u].pos;",
          "1372:                 new->info.bits.bit[u].ext_size = old->info.bits.bit[u].ext_size;",
          "1374:                                 &new->info.bits.bit[u], LYEXT_PAR_TYPE_BIT,",
          "1375:                                 &new->info.bits.bit[u].ext, shallow, unres)) {",
          "1376:                     return -1;",
          "",
          "[Removed Lines]",
          "1373:                 if (lys_ext_dup(mod, old->info.bits.bit[u].ext, old->info.bits.bit[u].ext_size,",
          "",
          "[Added Lines]",
          "1373:                 if (lys_ext_dup(mod->ctx, mod, old->info.bits.bit[u].ext, old->info.bits.bit[u].ext_size,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1400:                 new->info.enums.enm[u].flags = old->info.enums.enm[u].flags;",
          "1401:                 new->info.enums.enm[u].value = old->info.enums.enm[u].value;",
          "1402:                 new->info.enums.enm[u].ext_size = old->info.enums.enm[u].ext_size;",
          "1404:                                 &new->info.enums.enm[u], LYEXT_PAR_TYPE_ENUM,",
          "1405:                                 &new->info.enums.enm[u].ext, shallow, unres)) {",
          "1406:                     return -1;",
          "",
          "[Removed Lines]",
          "1403:                 if (lys_ext_dup(mod, old->info.enums.enm[u].ext, old->info.enums.enm[u].ext_size,",
          "",
          "[Added Lines]",
          "1403:                 if (lys_ext_dup(mod->ctx, mod, old->info.enums.enm[u].ext, old->info.enums.enm[u].ext_size,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1564:     if (type->der->module) {",
          "1566:         ext_size = type->ext_size;",
          "1568:             return -1;",
          "1569:         }",
          "1570:         if (prev_new->ext) {",
          "",
          "[Removed Lines]",
          "1567:         if (lys_ext_dup(mod, type->ext, type->ext_size, prev_new, LYEXT_PAR_TYPE, &ext, 0, unres)) {",
          "",
          "[Added Lines]",
          "1567:         if (lys_ext_dup(mod->ctx, mod, type->ext, type->ext_size, prev_new, LYEXT_PAR_TYPE, &ext, 0, unres)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1914:     new->der = old->der;",
          "1915:     new->parent = (struct lys_tpdf *)parent;",
          "1916:     new->ext_size = old->ext_size;",
          "1918:         return -1;",
          "1919:     }",
          "",
          "[Removed Lines]",
          "1917:     if (lys_ext_dup(mod, old->ext, old->ext_size, new, LYEXT_PAR_TYPE, &new->ext, shallow, unres)) {",
          "",
          "[Added Lines]",
          "1917:     if (lys_ext_dup(mod->ctx, mod, old->ext, old->ext_size, new, LYEXT_PAR_TYPE, &new->ext, shallow, unres)) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2076:     new->dsc = lydict_insert(mod->ctx, old->dsc, 0);",
          "2077:     new->ref = lydict_insert(mod->ctx, old->ref, 0);",
          "2078:     new->ext_size = old->ext_size;",
          "2081:     return new;",
          "2082: }",
          "",
          "[Removed Lines]",
          "2079:     lys_ext_dup(mod, old->ext, old->ext_size, new, LYEXT_PAR_WHEN, &new->ext, shallow, unres);",
          "",
          "[Added Lines]",
          "2079:     lys_ext_dup(mod->ctx, mod, old->ext, old->ext_size, new, LYEXT_PAR_WHEN, &new->ext, shallow, unres);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2784:     retval->prev = retval;",
          "2786:     retval->ext_size = node->ext_size;",
          "2788:         goto error;",
          "2789:     }",
          "",
          "[Removed Lines]",
          "2787:     if (lys_ext_dup(module, node->ext, node->ext_size, retval, LYEXT_PAR_NODE, &retval->ext, shallow, unres)) {",
          "",
          "[Added Lines]",
          "2787:     if (lys_ext_dup(ctx, module, node->ext, node->ext_size, retval, LYEXT_PAR_NODE, &retval->ext, shallow, unres)) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2831:             retval->iffeature[i].ext_size = node->iffeature[i].ext_size;",
          "2833:                             &retval->iffeature[i], LYEXT_PAR_IFFEATURE, &retval->iffeature[i].ext, shallow, unres)) {",
          "2834:                 goto error;",
          "2835:             }",
          "",
          "[Removed Lines]",
          "2832:             if (lys_ext_dup(module, node->iffeature[i].ext, node->iffeature[i].ext_size,",
          "",
          "[Added Lines]",
          "2832:             if (lys_ext_dup(ctx, module, node->iffeature[i].ext, node->iffeature[i].ext_size,",
          "",
          "---------------"
        ]
      }
    }
  ]
}