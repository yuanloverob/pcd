{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8fc4a11c94a7ef822d69f6a171583a3a3327f72a",
      "candidate_info": {
        "commit_hash": "8fc4a11c94a7ef822d69f6a171583a3a3327f72a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8fc4a11c94a7ef822d69f6a171583a3a3327f72a",
        "files": [
          "ext/fts3/fts3_unicode2.c",
          "ext/fts3/unicode/mkunicode.tcl",
          "ext/fts5/fts5_unicode2.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix harmless compiler warnings in the unicode2 logic of FTS3 and FTS5.\n\nFossilOrigin-Name: 703029ac6d24860230a8c30fcbf5e7e1da619e84f1cc9b9e65ebc74879a184d2",
        "before_after_code_files": [
          "ext/fts3/fts3_unicode2.c||ext/fts3/fts3_unicode2.c",
          "ext/fts3/unicode/mkunicode.tcl||ext/fts3/unicode/mkunicode.tcl",
          "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_unicode2.c||ext/fts3/fts3_unicode2.c": [
          "File: ext/fts3/fts3_unicode2.c -> ext/fts3/fts3_unicode2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:     62830, 62890, 62924, 62974, 63032, 63050, 63082, 63118,",
          "179:     63182, 63242, 63274, 63310, 63368, 63390,",
          "180:   };",
          "183:     '\\0',      'a',       'c',       'e',       'i',       'n',",
          "184:     'o',       'u',       'y',       'y',       'a',       'c',",
          "185:     'd',       'e',       'e',       'g',       'h',       'i',",
          "",
          "[Removed Lines]",
          "181: #define HIBIT ((char)0x80)",
          "182:   char aChar[] = {",
          "",
          "[Added Lines]",
          "181: #define HIBIT ((unsigned char)0x80)",
          "182:   unsigned char aChar[] = {",
          "",
          "---------------"
        ],
        "ext/fts3/unicode/mkunicode.tcl||ext/fts3/unicode/mkunicode.tcl": [
          "File: ext/fts3/unicode/mkunicode.tcl -> ext/fts3/unicode/mkunicode.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:   }",
          "64:   puts \"\"",
          "65:   puts \"  \\};\"",
          "68:   puts -nonewline \"    '\\\\0',      \"",
          "69:   set i 1",
          "70:   foreach c $aChar f $aFlag {",
          "",
          "[Removed Lines]",
          "66:   puts \"#define HIBIT ((char)0x80)\"",
          "67:   puts \"  char aChar\\[\\] = \\{\"",
          "",
          "[Added Lines]",
          "66:   puts \"#define HIBIT ((unsigned char)0x80)\"",
          "67:   puts \"  unsigned char aChar\\[\\] = \\{\"",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
          "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:     62830, 62890, 62924, 62974, 63032, 63050, 63082, 63118,",
          "48:     63182, 63242, 63274, 63310, 63368, 63390,",
          "49:   };",
          "52:     '\\0',      'a',       'c',       'e',       'i',       'n',",
          "53:     'o',       'u',       'y',       'y',       'a',       'c',",
          "54:     'd',       'e',       'e',       'g',       'h',       'i',",
          "",
          "[Removed Lines]",
          "50: #define HIBIT ((char)0x80)",
          "51:   char aChar[] = {",
          "",
          "[Added Lines]",
          "50: #define HIBIT ((unsigned char)0x80)",
          "51:   unsigned char aChar[] = {",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0465d2fc0d3f8beaa1b6b0bd7bd51d69a524f30d889c9402e7d02cc06164a310",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4fb24c82cd6bedf39e8c536eb3d1563eca11544a",
      "candidate_info": {
        "commit_hash": "4fb24c82cd6bedf39e8c536eb3d1563eca11544a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4fb24c82cd6bedf39e8c536eb3d1563eca11544a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wherecode.c",
          "test/gencol1.test"
        ],
        "message": "Fix the OP_DeferredSeek index-to-table column map in P4 so that it works with generated columns.  Ticket [ce22a07731530118]\n\nFossilOrigin-Name: 36c11ad51fe9ab1bde0b98d0ea9b8588e07d168cd8027486749372894941ad93",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wherecode.c||src/wherecode.c",
          "test/gencol1.test||test/gencol1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 77b1c90add514050fe62f22751362fecacd99f9775346cffc60e09c326e64e10",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1054:     if( ai ){",
          "1055:       ai[0] = pTab->nCol;",
          "1056:       for(i=0; i<pIdx->nColumn-1; i++){",
          "1057:         assert( pIdx->aiColumn[i]<pTab->nCol );",
          "1059:       }",
          "1060:       sqlite3VdbeChangeP4(v, -1, (char*)ai, P4_INTARRAY);",
          "1061:     }",
          "",
          "[Removed Lines]",
          "1058:         if( pIdx->aiColumn[i]>=0 ) ai[pIdx->aiColumn[i]+1] = i+1;",
          "",
          "[Added Lines]",
          "1057:         int x1, x2;",
          "1059:         x1 = pIdx->aiColumn[i];",
          "1060:         x2 = sqlite3TableColumnToStorage(pTab, x1);",
          "1061:         testcase( x1!=x2 );",
          "1062:         if( pIdx->aiColumn[i]>=0 ) ai[x2+1] = i+1;",
          "",
          "---------------"
        ],
        "test/gencol1.test||test/gencol1.test": [
          "File: test/gencol1.test -> test/gencol1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:   REPLACE INTO t0(c1) VALUES(NULL);",
          "212: } {1 {NOT NULL constraint failed: t0.c0}}",
          "214: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214: # 2019-11-06 ticket b13b7dce76e9352b34e7",
          "215: do_execsql_test gencol1-7.10 {",
          "216:   DROP TABLE IF EXISTS t0;",
          "217:   CREATE TABLE t0 (c0 GENERATED ALWAYS AS (1), c1 UNIQUE, c2 UNIQUE);",
          "218:   INSERT INTO t0(c1) VALUES (1);",
          "219:   SELECT quote(0 = t0.c2 OR t0.c1 BETWEEN t0.c2 AND 1) FROM t0;",
          "220: } {NULL}",
          "221: do_execsql_test gencol1-7.20 {",
          "222:   SELECT 99 FROM t0 WHERE 0 = t0.c2 OR t0.c1 BETWEEN t0.c2 AND 1;",
          "223: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4fc4ba771cacf109e079cdfa8de6d65853e21ac5",
      "candidate_info": {
        "commit_hash": "4fc4ba771cacf109e079cdfa8de6d65853e21ac5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4fc4ba771cacf109e079cdfa8de6d65853e21ac5",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/permutations.test"
        ],
        "message": "Do not run shmlock.test as part of the inmemory_journal permutation.\n\nFossilOrigin-Name: d3fea69cbb071867a90ad56ca05123ebf8e44689a92577a525a883c176c791bd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/permutations.test||test/permutations.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e467e4c8fa256ddd6c26c1f21bc26289a21f18b781737eaf706bc813ed8234fa",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/permutations.test||test/permutations.test": [
          "File: test/permutations.test -> test/permutations.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "752:   # the number of fsync() calls.",
          "753:   pager.test exclusive.test jrnlmode.test sync.test misc1.test",
          "754:   journal1.test conflict.test crash8.test tkt3457.test io.test",
          "757:   pager1.test async4.test corrupt.test filefmt.test pager2.test",
          "758:   corrupt5.test corruptA.test pageropt.test",
          "",
          "[Removed Lines]",
          "755:   journal3.test 8_3_names.test",
          "",
          "[Added Lines]",
          "755:   journal3.test 8_3_names.test shmlock.test",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d46b6f57c95198de8d2af1161feb516adbdb9bea",
      "candidate_info": {
        "commit_hash": "d46b6f57c95198de8d2af1161feb516adbdb9bea",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d46b6f57c95198de8d2af1161feb516adbdb9bea",
        "files": [
          "ext/misc/memtrace.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a harmless compiler warning in the memtrace.c extension.\n\nFossilOrigin-Name: 2f468da4e9fb3edb5e902fa5d3c528726d1fb64d749d29e558ba3243c76bcb95",
        "before_after_code_files": [
          "ext/misc/memtrace.c||ext/misc/memtrace.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/memtrace.c||ext/misc/memtrace.c": [
          "File: ext/misc/memtrace.c -> ext/misc/memtrace.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:   memtraceSize,",
          "78:   memtraceRoundup,",
          "79:   memtraceInit,",
          "81: };",
          "",
          "[Removed Lines]",
          "80:   memtraceShutdown",
          "",
          "[Added Lines]",
          "80:   memtraceShutdown,",
          "81:   0",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4978ee8b5405f958723b4ebbd4288bd08bff2b453da2d1c032d1ae904c2a3821",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "129371553c0c543a26678a12680c484ea0e8ad09",
      "candidate_info": {
        "commit_hash": "129371553c0c543a26678a12680c484ea0e8ad09",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/129371553c0c543a26678a12680c484ea0e8ad09",
        "files": [
          "ext/fts3/fts3.c",
          "manifest",
          "manifest.uuid",
          "test/fts3fault.test"
        ],
        "message": "Avoid deferencing a freed pointer following an OOM or SQLITE_CORRUPT error in the fts3 xDestroy method.\n\nFossilOrigin-Name: 505ed9a47825240979338a24044559613fbbd2a7850bdff70c7164da054ec63d",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3fault.test||test/fts3fault.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "564:   if( p->zContentTbl==0 ){",
          "565:     fts3DbExec(&rc, db, \"DROP TABLE IF EXISTS %Q.'%q_content'\", zDb, p->zName);",
          "566:   }",
          "567:   fts3DbExec(&rc, db, \"DROP TABLE IF EXISTS %Q.'%q_segments'\", zDb,p->zName);",
          "568:   fts3DbExec(&rc, db, \"DROP TABLE IF EXISTS %Q.'%q_segdir'\", zDb, p->zName);",
          "569:   fts3DbExec(&rc, db, \"DROP TABLE IF EXISTS %Q.'%q_docsize'\", zDb, p->zName);",
          "570:   fts3DbExec(&rc, db, \"DROP TABLE IF EXISTS %Q.'%q_stat'\", zDb, p->zName);",
          "",
          "[Added Lines]",
          "564:   fts3DbExec(&rc, db,",
          "565:     \"DROP TABLE IF EXISTS %Q.'%q_segments';\"",
          "566:     \"DROP TABLE IF EXISTS %Q.'%q_segdir';\"",
          "567:     \"DROP TABLE IF EXISTS %Q.'%q_docsize';\"",
          "568:     \"DROP TABLE IF EXISTS %Q.'%q_stat';\"",
          "569:     \"%s DROP TABLE IF EXISTS %Q.'%q_content';\",",
          "570:     zDb, p->zName,",
          "571:     zDb, p->zName,",
          "572:     zDb, p->zName,",
          "573:     zDb, p->zName,",
          "574:     (p->zContentTbl ? \"--\" : \"\"), zDb,p->zName",
          "575:   );",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6c33a303ebbb0f5193ead535280ba63118e14fb4f9977ce80dc716a0b082ec99",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3fault.test||test/fts3fault.test": [
          "File: test/fts3fault.test -> test/fts3fault.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "240:   faultsim_test_result {0 {}}",
          "241: }",
          "243: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243: #-------------------------------------------------------------------------",
          "244: reset_db",
          "245: do_execsql_test 11.0 {",
          "246:   CREATE VIRTUAL TABLE t1 USING fts3(a, b);",
          "247: }",
          "248: faultsim_save_and_close",
          "250: do_faultsim_test 11 -faults oom* -prep {",
          "251:   faultsim_restore_and_reopen",
          "252: } -body {",
          "253:   execsql { DROP TABLE t1 }",
          "254: } -test {",
          "255:   faultsim_test_result {0 {}}",
          "256: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}