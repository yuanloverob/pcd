{
  "cve_id": "CVE-2018-17205",
  "cve_desc": "An issue was discovered in Open vSwitch (OvS) 2.7.x through 2.7.6, affecting ofproto_rule_insert__ in ofproto/ofproto.c. During bundle commit, flows that are added in a bundle are applied to ofproto in order. If a flow cannot be added (e.g., the flow action is a go-to for a group id that does not exist), OvS tries to revert back all previous flows that were successfully applied from the same bundle. This is possible since OvS maintains list of old flows that were replaced by flows from the bundle. While reinserting old flows, OvS has an assertion failure due to a check on rule state != RULE_INITIALIZED. This would work for new flows, but for an old flow the rule state is RULE_REMOVED. The assertion failure causes an OvS crash.",
  "repo": "openvswitch/ovs",
  "patch_hash": "0befd1f3745055c32940f5faf9559be6a14395e6",
  "patch_info": {
    "commit_hash": "0befd1f3745055c32940f5faf9559be6a14395e6",
    "repo": "openvswitch/ovs",
    "commit_url": "https://github.com/openvswitch/ovs/commit/0befd1f3745055c32940f5faf9559be6a14395e6",
    "files": [
      "ofproto/ofproto.c"
    ],
    "message": "ofproto: Fix OVS crash when reverting old flows in bundle commit\n\nDuring bundle commit flows which are added in bundle are applied\nto ofproto in-order. In case if a flow cannot be added (e.g. flow\naction is go-to group id which does not exist), OVS tries to\nrevert back all previous flows which were successfully applied\nfrom the same bundle. This is possible since OVS maintains list\nof old flows which were replaced by flows from the bundle.\n\nWhile reinserting old flows ovs asserts due to check on rule\nstate != RULE_INITIALIZED.  This will work only for new flows, but\nfor old flow the rule state will be RULE_REMOVED. This is causing\nan assert and OVS crash.\n\nThe ovs assert check should be modified to != RULE_INSERTED to prevent\nany existing rule being re-inserted and allow new rules and old rules\n(in case of revert) to get inserted.\n\nHere is an example to trigger the assert:\n\n$ ovs-vsctl add-br br-test -- set Bridge br-test datapath_type=netdev\n\n$ cat flows.txt\nflow add table=1,priority=0,in_port=2,actions=NORMAL\nflow add table=1,priority=0,in_port=3,actions=NORMAL\n\n$ ovs-ofctl dump-flows -OOpenflow13 br-test\n cookie=0x0, duration=2.465s, table=1, n_packets=0, n_bytes=0, priority=0,in_port=2 actions=NORMAL\n cookie=0x0, duration=2.465s, table=1, n_packets=0, n_bytes=0, priority=0,in_port=3 actions=NORMAL\n\n$ cat flow-modify.txt\nflow modify table=1,priority=0,in_port=2,actions=drop\nflow modify table=1,priority=0,in_port=3,actions=group:10\n\n$ ovs-ofctl bundle br-test flow-modify.txt -OOpenflow13\n\nFirst flow rule will be modified since it is a valid rule. However second\nrule is invalid since no group with id 10 exists. Bundle commit tries to\nrevert (insert) the first rule to old flow which results in ovs_assert at\nofproto_rule_insert__() since old rule->state = RULE_REMOVED.\n\nSigned-off-by: Vishal Deep Ajmera <vishal.deep.ajmera@ericsson.com>\nSigned-off-by: Ben Pfaff <blp@ovn.org>",
    "before_after_code_files": [
      "ofproto/ofproto.c||ofproto/ofproto.c"
    ]
  },
  "patch_diff": {
    "ofproto/ofproto.c||ofproto/ofproto.c": [
      "File: ofproto/ofproto.c -> ofproto/ofproto.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "8465:     free(old_fields);",
      "8469:     if (table->eviction) {",
      "8470:         table->eviction_group_id_basis = random_uint32();",
      "8471:         CLS_FOR_EACH (rule, cr, &table->cls) {",
      "",
      "[Removed Lines]",
      "8468:     table->eviction = eviction;",
      "",
      "[Added Lines]",
      "8468:     table->eviction = eviction;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "638d406e3b647359f3d82189d7a6ee56b4a54928",
      "candidate_info": {
        "commit_hash": "638d406e3b647359f3d82189d7a6ee56b4a54928",
        "repo": "openvswitch/ovs",
        "commit_url": "https://github.com/openvswitch/ovs/commit/638d406e3b647359f3d82189d7a6ee56b4a54928",
        "files": [
          "ofproto/ofproto.c"
        ],
        "message": "ofproto: Fix OVS crash when reverting old flows in bundle commit\n\nDuring bundle commit flows which are added in bundle are applied\nto ofproto in-order. In case if a flow cannot be added (e.g. flow\naction is go-to group id which does not exist), OVS tries to\nrevert back all previous flows which were successfully applied\nfrom the same bundle. This is possible since OVS maintains list\nof old flows which were replaced by flows from the bundle.\n\nWhile reinserting old flows ovs asserts due to check on rule\nstate != RULE_INITIALIZED.  This will work only for new flows, but\nfor old flow the rule state will be RULE_REMOVED. This is causing\nan assert and OVS crash.\n\nThe ovs assert check should be modified to != RULE_INSERTED to prevent\nany existing rule being re-inserted and allow new rules and old rules\n(in case of revert) to get inserted.\n\nHere is an example to trigger the assert:\n\n$ ovs-vsctl add-br br-test -- set Bridge br-test datapath_type=netdev\n\n$ cat flows.txt\nflow add table=1,priority=0,in_port=2,actions=NORMAL\nflow add table=1,priority=0,in_port=3,actions=NORMAL\n\n$ ovs-ofctl dump-flows -OOpenflow13 br-test\n cookie=0x0, duration=2.465s, table=1, n_packets=0, n_bytes=0, priority=0,in_port=2 actions=NORMAL\n cookie=0x0, duration=2.465s, table=1, n_packets=0, n_bytes=0, priority=0,in_port=3 actions=NORMAL\n\n$ cat flow-modify.txt\nflow modify table=1,priority=0,in_port=2,actions=drop\nflow modify table=1,priority=0,in_port=3,actions=group:10\n\n$ ovs-ofctl bundle br-test flow-modify.txt -OOpenflow13\n\nFirst flow rule will be modified since it is a valid rule. However second\nrule is invalid since no group with id 10 exists. Bundle commit tries to\nrevert (insert) the first rule to old flow which results in ovs_assert at\nofproto_rule_insert__() since old rule->state = RULE_REMOVED.\n\nSigned-off-by: Vishal Deep Ajmera <vishal.deep.ajmera@ericsson.com>\nSigned-off-by: Ben Pfaff <blp@ovn.org>",
        "before_after_code_files": [
          "ofproto/ofproto.c||ofproto/ofproto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ofproto/ofproto.c||ofproto/ofproto.c"
          ],
          "candidate": [
            "ofproto/ofproto.c||ofproto/ofproto.c"
          ]
        }
      },
      "candidate_diff": {
        "ofproto/ofproto.c||ofproto/ofproto.c": [
          "File: ofproto/ofproto.c -> ofproto/ofproto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8635:     free(old_fields);",
          "8639:     if (table->eviction) {",
          "8640:         table->eviction_group_id_basis = random_uint32();",
          "8641:         CLS_FOR_EACH (rule, cr, &table->cls) {",
          "",
          "[Removed Lines]",
          "8638:     table->eviction = eviction;",
          "",
          "[Added Lines]",
          "8638:     table->eviction = eviction;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9a0ac025de9303334688ff08f01fc08604d2f624",
      "candidate_info": {
        "commit_hash": "9a0ac025de9303334688ff08f01fc08604d2f624",
        "repo": "openvswitch/ovs",
        "commit_url": "https://github.com/openvswitch/ovs/commit/9a0ac025de9303334688ff08f01fc08604d2f624",
        "files": [
          "ofproto/ofproto.c"
        ],
        "message": "ofproto: Fix OVS crash when reverting old flows in bundle commit\n\nDuring bundle commit flows which are added in bundle are applied\nto ofproto in-order. In case if a flow cannot be added (e.g. flow\naction is go-to group id which does not exist), OVS tries to\nrevert back all previous flows which were successfully applied\nfrom the same bundle. This is possible since OVS maintains list\nof old flows which were replaced by flows from the bundle.\n\nWhile reinserting old flows ovs asserts due to check on rule\nstate != RULE_INITIALIZED.  This will work only for new flows, but\nfor old flow the rule state will be RULE_REMOVED. This is causing\nan assert and OVS crash.\n\nThe ovs assert check should be modified to != RULE_INSERTED to prevent\nany existing rule being re-inserted and allow new rules and old rules\n(in case of revert) to get inserted.\n\nHere is an example to trigger the assert:\n\n$ ovs-vsctl add-br br-test -- set Bridge br-test datapath_type=netdev\n\n$ cat flows.txt\nflow add table=1,priority=0,in_port=2,actions=NORMAL\nflow add table=1,priority=0,in_port=3,actions=NORMAL\n\n$ ovs-ofctl dump-flows -OOpenflow13 br-test\n cookie=0x0, duration=2.465s, table=1, n_packets=0, n_bytes=0, priority=0,in_port=2 actions=NORMAL\n cookie=0x0, duration=2.465s, table=1, n_packets=0, n_bytes=0, priority=0,in_port=3 actions=NORMAL\n\n$ cat flow-modify.txt\nflow modify table=1,priority=0,in_port=2,actions=drop\nflow modify table=1,priority=0,in_port=3,actions=group:10\n\n$ ovs-ofctl bundle br-test flow-modify.txt -OOpenflow13\n\nFirst flow rule will be modified since it is a valid rule. However second\nrule is invalid since no group with id 10 exists. Bundle commit tries to\nrevert (insert) the first rule to old flow which results in ovs_assert at\nofproto_rule_insert__() since old rule->state = RULE_REMOVED.\n\nSigned-off-by: Vishal Deep Ajmera <vishal.deep.ajmera@ericsson.com>\nSigned-off-by: Ben Pfaff <blp@ovn.org>",
        "before_after_code_files": [
          "ofproto/ofproto.c||ofproto/ofproto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ofproto/ofproto.c||ofproto/ofproto.c"
          ],
          "candidate": [
            "ofproto/ofproto.c||ofproto/ofproto.c"
          ]
        }
      },
      "candidate_diff": {
        "ofproto/ofproto.c||ofproto/ofproto.c": [
          "File: ofproto/ofproto.c -> ofproto/ofproto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8648:     free(old_fields);",
          "8652:     if (table->eviction) {",
          "8653:         table->eviction_group_id_basis = random_uint32();",
          "8654:         CLS_FOR_EACH (rule, cr, &table->cls) {",
          "",
          "[Removed Lines]",
          "8651:     table->eviction = eviction;",
          "",
          "[Added Lines]",
          "8651:     table->eviction = eviction;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "24bf63b2132fa1d170c1f5594cb74ffa8e924092",
      "candidate_info": {
        "commit_hash": "24bf63b2132fa1d170c1f5594cb74ffa8e924092",
        "repo": "openvswitch/ovs",
        "commit_url": "https://github.com/openvswitch/ovs/commit/24bf63b2132fa1d170c1f5594cb74ffa8e924092",
        "files": [
          "ofproto/ofproto.c"
        ],
        "message": "ofproto: Fix OVS crash when reverting old flows in bundle commit\n\nDuring bundle commit flows which are added in bundle are applied\nto ofproto in-order. In case if a flow cannot be added (e.g. flow\naction is go-to group id which does not exist), OVS tries to\nrevert back all previous flows which were successfully applied\nfrom the same bundle. This is possible since OVS maintains list\nof old flows which were replaced by flows from the bundle.\n\nWhile reinserting old flows ovs asserts due to check on rule\nstate != RULE_INITIALIZED.  This will work only for new flows, but\nfor old flow the rule state will be RULE_REMOVED. This is causing\nan assert and OVS crash.\n\nThe ovs assert check should be modified to != RULE_INSERTED to prevent\nany existing rule being re-inserted and allow new rules and old rules\n(in case of revert) to get inserted.\n\nHere is an example to trigger the assert:\n\n$ ovs-vsctl add-br br-test -- set Bridge br-test datapath_type=netdev\n\n$ cat flows.txt\nflow add table=1,priority=0,in_port=2,actions=NORMAL\nflow add table=1,priority=0,in_port=3,actions=NORMAL\n\n$ ovs-ofctl dump-flows -OOpenflow13 br-test\n cookie=0x0, duration=2.465s, table=1, n_packets=0, n_bytes=0, priority=0,in_port=2 actions=NORMAL\n cookie=0x0, duration=2.465s, table=1, n_packets=0, n_bytes=0, priority=0,in_port=3 actions=NORMAL\n\n$ cat flow-modify.txt\nflow modify table=1,priority=0,in_port=2,actions=drop\nflow modify table=1,priority=0,in_port=3,actions=group:10\n\n$ ovs-ofctl bundle br-test flow-modify.txt -OOpenflow13\n\nFirst flow rule will be modified since it is a valid rule. However second\nrule is invalid since no group with id 10 exists. Bundle commit tries to\nrevert (insert) the first rule to old flow which results in ovs_assert at\nofproto_rule_insert__() since old rule->state = RULE_REMOVED.\n\nSigned-off-by: Vishal Deep Ajmera <vishal.deep.ajmera@ericsson.com>\nSigned-off-by: Ben Pfaff <blp@ovn.org>",
        "before_after_code_files": [
          "ofproto/ofproto.c||ofproto/ofproto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ofproto/ofproto.c||ofproto/ofproto.c"
          ],
          "candidate": [
            "ofproto/ofproto.c||ofproto/ofproto.c"
          ]
        }
      },
      "candidate_diff": {
        "ofproto/ofproto.c||ofproto/ofproto.c": [
          "File: ofproto/ofproto.c -> ofproto/ofproto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8645:     free(old_fields);",
          "8649:     if (table->eviction) {",
          "8650:         table->eviction_group_id_basis = random_uint32();",
          "8651:         CLS_FOR_EACH (rule, cr, &table->cls) {",
          "",
          "[Removed Lines]",
          "8648:     table->eviction = eviction;",
          "",
          "[Added Lines]",
          "8648:     table->eviction = eviction;",
          "",
          "---------------"
        ]
      }
    }
  ]
}