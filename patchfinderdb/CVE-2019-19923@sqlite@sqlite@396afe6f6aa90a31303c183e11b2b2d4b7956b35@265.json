{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6397a78b2ba93729678ef0ea68d0765e046a360e",
      "candidate_info": {
        "commit_hash": "6397a78b2ba93729678ef0ea68d0765e046a360e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6397a78b2ba93729678ef0ea68d0765e046a360e",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/attach.c",
          "src/trigger.c",
          "test/trigger1.test"
        ],
        "message": "If a TEMP TRIGGER references an auxiliary schema, and that auxiliary schema is detached, move the trigger to reference the TEMP schema before completing the detach, so that the trigger does not hold a dangling schema pointer.\n\nFossilOrigin-Name: 069c2f4c61f06211a8981abc412afcc1536ece13380b13a70aa99123f8f527cd",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/attach.c||src/attach.c",
          "src/trigger.c||src/trigger.c",
          "test/trigger1.test||test/trigger1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 279ac7fdec0b1409cd400b7b093f89089d93c49f596f378c6a3032434a85bf83",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/attach.c||src/attach.c": [
          "File: src/attach.c -> src/attach.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:   sqlite3 *db = sqlite3_context_db_handle(context);",
          "300:   int i;",
          "301:   Db *pDb = 0;",
          "302:   char zErr[128];",
          "304:   UNUSED_PARAMETER(NotUsed);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:   HashElem *pEntry;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "323:     goto detach_error;",
          "324:   }",
          "326:   sqlite3BtreeClose(pDb->pBt);",
          "327:   pDb->pBt = 0;",
          "328:   pDb->pSchema = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329:   assert( db->aDb[1].pSchema );",
          "330:   pEntry = sqliteHashFirst(&db->aDb[1].pSchema->trigHash);",
          "331:   while( pEntry ){",
          "332:     Trigger *pTrig = (Trigger*)sqliteHashData(pEntry);",
          "333:     if( pTrig->pTabSchema==pDb->pSchema ){",
          "334:       pTrig->pTabSchema = pTrig->pSchema;",
          "335:     }",
          "336:     pEntry = sqliteHashNext(pEntry);",
          "337:   }",
          "",
          "---------------"
        ],
        "src/trigger.c||src/trigger.c": [
          "File: src/trigger.c -> src/trigger.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "618:   iDb = sqlite3SchemaToIndex(pParse->db, pTrigger->pSchema);",
          "619:   assert( iDb>=0 && iDb<db->nDb );",
          "620:   pTable = tableOfTrigger(pTrigger);",
          "623: #ifndef SQLITE_OMIT_AUTHORIZATION",
          "625:     int code = SQLITE_DROP_TRIGGER;",
          "626:     const char *zDb = db->aDb[iDb].zDbSName;",
          "627:     const char *zTab = SCHEMA_TABLE(iDb);",
          "",
          "[Removed Lines]",
          "621:   assert( pTable );",
          "622:   assert( pTable->pSchema==pTrigger->pSchema || iDb==1 );",
          "624:   {",
          "",
          "[Added Lines]",
          "621:   assert( (pTable && pTable->pSchema==pTrigger->pSchema) || iDb==1 );",
          "623:   if( pTable ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "639:   if( (v = sqlite3GetVdbe(pParse))!=0 ){",
          "640:     sqlite3NestedParse(pParse,",
          "641:        \"DELETE FROM %Q.%s WHERE name=%Q AND type='trigger'\",",
          "",
          "[Removed Lines]",
          "638:   assert( pTable!=0 );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "659:   if( ALWAYS(pTrigger) ){",
          "660:     if( pTrigger->pSchema==pTrigger->pTabSchema ){",
          "661:       Table *pTab = tableOfTrigger(pTrigger);",
          "665:     }",
          "666:     sqlite3DeleteTrigger(db, pTrigger);",
          "667:     db->mDbFlags |= DBFLAG_SchemaChange;",
          "",
          "[Removed Lines]",
          "662:       Trigger **pp;",
          "663:       for(pp=&pTab->pTrigger; *pp!=pTrigger; pp=&((*pp)->pNext));",
          "",
          "[Added Lines]",
          "660:       if( pTab ){",
          "661:         Trigger **pp;",
          "662:         for(pp=&pTab->pTrigger; *pp!=pTrigger; pp=&((*pp)->pNext));",
          "664:       }",
          "",
          "---------------"
        ],
        "test/trigger1.test||test/trigger1.test": [
          "File: test/trigger1.test -> test/trigger1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "768:   SELECT * FROM t19;",
          "769: } {1 2 2}",
          "771: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "771: # 2019-08-26 Chromium sqlite3_fts3_lpm_fuzzer find.",
          "772: #",
          "773: db close",
          "774: sqlite3 db :memory:",
          "775: do_execsql_test trigger1-20.1 {",
          "776:   CREATE TABLE t20_1(x);",
          "777:   ATTACH ':memory:' AS aux;",
          "778:   CREATE TABLE aux.t20_2(y);",
          "779:   CREATE TABLE aux.t20_3(z);",
          "780:   CREATE TEMP TRIGGER r20_3 AFTER INSERT ON t20_2 BEGIN UPDATE t20_3 SET z=z+1; END;",
          "781:   DETACH aux;",
          "782:   DROP TRIGGER r20_3;",
          "783: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9e35a61e59fa735eb73c49fbad051d2f144470d3",
      "candidate_info": {
        "commit_hash": "9e35a61e59fa735eb73c49fbad051d2f144470d3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9e35a61e59fa735eb73c49fbad051d2f144470d3",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Add a new test case to fuzzdata8.db.\n\nFossilOrigin-Name: ce8e279a7d37594e865c2d9197a5efe5d647e11f074dbaf4a4ee31c74c71dbc9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6089d5dba73437d787259033e94a38cf1b0c87cac4a89c27e69d8239c22f496e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "276d7f78470002e09ede5bd96556cddbc23cd678",
      "candidate_info": {
        "commit_hash": "276d7f78470002e09ede5bd96556cddbc23cd678",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/276d7f78470002e09ede5bd96556cddbc23cd678",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/lempar.c"
        ],
        "message": "Try to fix a harmless compiler warning reported by ICC.\n\nFossilOrigin-Name: 7f41b44ca2ecb907ea0fd09a974ac9dbdf911463a94f0f77c826cf1b1d9c3e8c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/lempar.c||tool/lempar.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b528bdcd45db1b783ecd9739c3d3c890f04de7003f079668970eafaf8e23b2f3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/lempar.c||tool/lempar.c": [
          "File: tool/lempar.c -> tool/lempar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1068:   return yyFallback[iToken];",
          "1069: #else",
          "1070:   (void)iToken;",
          "1072:   return 0;",
          "1073: }",
          "",
          "[Removed Lines]",
          "1071: #endif",
          "",
          "[Added Lines]",
          "1072: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8f3b4c320f9d289e6fd75632c77874f4f253336",
      "candidate_info": {
        "commit_hash": "d8f3b4c320f9d289e6fd75632c77874f4f253336",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d8f3b4c320f9d289e6fd75632c77874f4f253336",
        "files": [
          "ext/fts3/fts3_write.c",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test"
        ],
        "message": "Fix a problem with corrupt fts3 database detection introduced by [95a9a39f].\n\nFossilOrigin-Name: c80bb15b44e9b6a3c0c5a49d5e93e66376c3520ecefc1db7425c8a7e09d3eade",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1413:    || (pReader->nPopulate==0 && pReader->aDoclist[pReader->nDoclist-1])",
          "1414:   ){",
          "1415:     return FTS_CORRUPT_VTAB;",
          "",
          "[Removed Lines]",
          "1412:   if( pReader->nDoclist-(pReader->aDoclist-pReader->aNode) > pReader->nNode",
          "",
          "[Added Lines]",
          "1412:   if( pReader->nDoclist > pReader->nNode-(pReader->aDoclist-pReader->aNode)",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 7acaed08f946633fca3ab8434dd6349ea6f1bac4fd9ec21f476db013ee06de30",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:   INSERT INTO t1(t1) VALUES('optimize');",
          "167: }",
          "170: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "169: #-------------------------------------------------------------------------",
          "170: reset_db",
          "171: do_test 5.0 {",
          "172:   sqlite3 db {}",
          "173:   db deserialize [decode_hexdb {",
          "174: | size 24576 pagesize 4096 filename c15.db",
          "175: | page 1 offset 0",
          "176: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "177: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 04   .....@  ........",
          "178: |     32: 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00 04   ................",
          "179: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "180: |     96: 00 00 00 00 0d 0e f9 00 06 0d ec 00 0f cd 0f 69   ...............i",
          "181: |    112: 0f 01 0e 10 0e c6 0d ec 00 00 00 00 00 00 00 00   ................",
          "182: |   3552: 00 00 00 00 00 00 00 00 00 00 00 00 22 06 06 17   ................",
          "183: |   3568: 11 11 01 31 74 61 62 6c 65 74 32 74 32 06 43 52   ...1tablet2t2.CR",
          "184: |   3584: 45 41 54 45 20 54 41 42 4c 45 20 74 32 28 78 29   EATE TABLE t2(x)",
          "185: |   3600: 81 33 04 07 17 1f 1f 01 82 35 74 61 62 6c 65 74   .3.......5tablet",
          "186: |   3616: 31 5f 73 65 67 64 69 72 74 31 5f 73 65 67 64 69   1_segdirt1_segdi",
          "187: |   3632: 72 04 43 52 45 41 54 45 20 54 41 42 4c 45 20 27   r.CREATE TABLE '",
          "188: |   3648: 74 31 5f 73 65 67 64 69 72 27 28 6c 65 76 65 6c   t1_segdir'(level",
          "189: |   3664: 20 49 4e 54 45 47 45 52 2c 69 64 78 20 49 4e 54    INTEGER,idx INT",
          "190: |   3680: 45 47 45 52 2c 73 74 61 72 74 5f 62 6c 6f 63 6b   EGER,start_block",
          "191: |   3696: 20 49 4e 54 45 47 45 52 2c 6c 65 61 76 65 73 5f    INTEGER,leaves_",
          "192: |   3712: 65 6e 64 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45   end_block INTEGE",
          "193: |   3728: 52 2c 65 6e 64 5f 62 6c 6f 63 6b 20 49 4e 54 45   R,end_block INTE",
          "194: |   3744: 47 45 52 2c 72 6f 6f 74 20 42 4c 4f 42 2c 50 52   GER,root BLOB,PR",
          "195: |   3760: 49 4d 41 52 59 20 4b 45 59 28 6c 65 76 65 6c 2c   IMARY KEY(level,",
          "196: |   3776: 20 69 64 78 29 29 31 05 06 17 45 1f 01 00 69 6e    idx))1...E...in",
          "197: |   3792: 64 65 78 73 71 6c 69 74 65 5f 61 75 74 6f 69 6e   dexsqlite_autoin",
          "198: |   3808: 64 65 79 5f 74 31 5f 73 65 67 64 69 72 5f 31 74   dey_t1_segdir_1t",
          "199: |   3824: 31 5f 73 65 67 64 69 72 05 00 00 00 08 00 00 00   1_segdir........",
          "200: |   3840: 00 66 03 07 17 23 23 01 81 13 74 61 62 6c 65 74   .f...##...tablet",
          "201: |   3856: 31 5f 73 65 67 6d 65 6e 74 73 74 31 5f 73 65 67   1_segmentst1_seg",
          "202: |   3872: 6d 65 6e 74 73 03 43 52 45 41 54 45 20 54 41 42   ments.CREATE TAB",
          "203: |   3888: 4c 45 20 27 74 31 5f 73 65 67 6d 65 6e 74 73 27   LE 't1_segments'",
          "204: |   3904: 28 62 6c 6f 63 6b 69 64 20 49 4e 54 45 47 45 52   (blockid INTEGER",
          "205: |   3920: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 62 6c    PRIMARY KEY, bl",
          "206: |   3936: 6f 63 6b 20 42 4c 4f 42 29 62 02 07 17 21 21 01   ock BLOB)b...!!.",
          "207: |   3952: 81 0f 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65 6e   ..tablet1_conten",
          "208: |   3968: 74 74 31 5f 63 6f 6e 74 65 6e 74 02 43 52 45 41   tt1_content.CREA",
          "209: |   3984: 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f 6e   TE TABLE 't1_con",
          "210: |   4000: 74 65 6e 74 27 28 64 6f 63 69 64 20 49 4e 54 45   tent'(docid INTE",
          "211: |   4016: 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c   GER PRIMARY KEY,",
          "212: |   4032: 20 27 63 30 63 6f 6e 74 65 6e 74 27 29 31 01 06    'c0content')1..",
          "213: |   4048: 17 11 11 08 51 74 61 62 6c 65 74 31 74 31 43 52   ....Qtablet1t1CR",
          "214: |   4064: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "215: |   4080: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 33   LE t1 USING fts3",
          "216: | page 2 offset 4096",
          "217: |      0: 0d 00 00 00 03 0f e0 00 0f f6 0f ec 0f e0 00 00   ................",
          "218: |   4064: 0a 03 03 00 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "219: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "220: | page 3 offset 8192",
          "221: |      0: 0d 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00   ................",
          "222: | page 4 offset 12288",
          "223: |      0: 0d 00 00 00 01 0f d6 00 0f d6 00 00 00 00 00 00   ................",
          "224: |   4048: 00 00 00 00 00 00 28 01 07 08 08 08 08 15 46 30   ......(.......F0",
          "225: |   4064: 20 32 39 00 05 61 62 61 63 6b 03 01 02 00 03 02    29..aback......",
          "226: |   4080: 66 74 03 02 02 00 03 04 6e 64 6f 60 30 30 20 00   ft......ndo`00 .",
          "227: | page 5 offset 16384",
          "228: |      0: a0 00 00 00 10 ff b0 00 ff fb 00 00 00 00 00 00   ................",
          "229: |   4080: 00 00 00 00 00 00 00 00 00 00 00 04 04 08 08 09   ................",
          "230: | page 6 offset 20480",
          "231: |      0: 0d 00 00 00 05 0f b8 00 0f f4 0f e9 0f d6 0f c7   ................",
          "232: |     16: 0f b8 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64   ..'t1_content'(d",
          "233: |     32: 6f 63 69 64 20 49 4e 54 45 47 45 52 20 50 52 49   ocid INTEGER PRI",
          "234: |     48: 4d 41 52 59 20 4b 45 59 2c 20 27 63 30 63 6f 6e   MARY KEY, 'c0con",
          "235: |     64: 74 65 6e 74 27 29 31 01 06 17 11 11 08 51 74 61   tent')1......Qta",
          "236: |     80: 62 6c 65 74 31 74 31 43 52 45 41 54 45 20 56 49   blet1t1CREATE VI",
          "237: |     96: 52 54 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55   RTUAL TABLE t1 U",
          "238: |    112: 53 49 4e 47 20 66 74 73 33 0d 00 00 00 03 0f e0   SING fts3.......",
          "239: |    128: 00 0f f6 0f ec 0f e0 00 00 00 00 00 00 00 00 00   ................",
          "240: |   4016: 00 00 00 00 00 00 00 00 0d 05 02 23 61 75 74 6f   ...........#auto",
          "241: |   4032: 6d 65 72 67 65 3d 35 0d 04 02 23 6d 65 72 67 65   merge=5...#merge",
          "242: |   4048: 3d 31 30 30 2c 38 11 03 02 2b 69 6e 74 65 67 72   =100,8...+integr",
          "243: |   4064: 69 74 79 2d 63 68 65 63 6b 09 02 02 1b 72 65 62   ity-check....reb",
          "244: |   4080: 75 69 6c 64 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   uild....optimize",
          "245: | end c15.db",
          "246: }]} {}",
          "248: do_catchsql_test 5.1 {",
          "249:   SELECT * FROM t1 WHERE t1 MATCH 'abandon';",
          "250: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f3f2c73575ea8ae9a46ea30b3af6dfc342cd6c9",
      "candidate_info": {
        "commit_hash": "3f3f2c73575ea8ae9a46ea30b3af6dfc342cd6c9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3f3f2c73575ea8ae9a46ea30b3af6dfc342cd6c9",
        "files": [
          "ext/fts5/fts5_main.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Ensure that the idxStr for FTS5 is always zero-terminated. Fix for check-in [e6db945454a0dae2]\n\nFossilOrigin-Name: 090cd07d37904da4610d6a6787a3cc825c9a8bdcc5f051267d4608bba9b49d03",
        "before_after_code_files": [
          "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c": [
          "File: ext/fts5/fts5_main.c -> ext/fts5/fts5_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "569:         pInfo->estimatedCost = 1e50;",
          "570:         return SQLITE_OK;",
          "571:       }else{",
          "572:         if( iCol==nCol+1 ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:         assert( iIdxStr < pInfo->nConstraint*6 + 1 );",
          "571:         idxStr[iIdxStr] = 0;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a8927d14f88c44828e794787bab080455ab62705c93f65ce7d8db83478aa5a8e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}