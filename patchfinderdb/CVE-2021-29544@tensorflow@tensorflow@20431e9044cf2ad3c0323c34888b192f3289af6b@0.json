{
  "cve_id": "CVE-2021-29544",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. An attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.QuantizeAndDequantizeV4Grad`. This is because the implementation does not validate the rank of the `input_*` tensors. In turn, this results in the tensors being passes as they are to `QuantizeAndDequantizePerChannelGradientImpl`. However, the `vec<T>` method, requires the rank to 1 and triggers a `CHECK` failure otherwise. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2 as this is the only other affected version.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "20431e9044cf2ad3c0323c34888b192f3289af6b",
  "patch_info": {
    "commit_hash": "20431e9044cf2ad3c0323c34888b192f3289af6b",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/20431e9044cf2ad3c0323c34888b192f3289af6b",
    "files": [
      "tensorflow/core/kernels/quantize_and_dequantize_op.cc"
    ],
    "message": "Fix `tf.raw_ops.QuantizeAndDequantizeV4Grad` CHECK failure.\n\nPiperOrigin-RevId: 370532425\nChange-Id: I767721be266851b63d8fe55e7ac6be0af6017f6c",
    "before_after_code_files": [
      "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc": [
      "File: tensorflow/core/kernels/quantize_and_dequantize_op.cc -> tensorflow/core/kernels/quantize_and_dequantize_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "160:         errors::InvalidArgument(\"gradient and input must be the same size\"));",
      "161:     const int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);",
      "162:     const Tensor& input_min_tensor = ctx->input(2);",
      "163:     const Tensor& input_max_tensor = ctx->input(3);",
      "164:     if (axis_ != -1) {",
      "165:       OP_REQUIRES(",
      "166:           ctx, input_min_tensor.dim_size(0) == depth,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "163:     OP_REQUIRES(ctx,",
      "164:                 input_min_tensor.dims() == 0 || input_min_tensor.dims() == 1,",
      "165:                 errors::InvalidArgument(",
      "166:                     \"Input min tensor must have dimension 1. Recieved \",",
      "167:                     input_min_tensor.dims(), \".\"));",
      "169:     OP_REQUIRES(ctx,",
      "170:                 input_max_tensor.dims() == 0 || input_max_tensor.dims() == 1,",
      "171:                 errors::InvalidArgument(",
      "172:                     \"Input max tensor must have dimension 1. Recieved \",",
      "173:                     input_max_tensor.dims(), \".\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1ca6d32e4fe99cdba637f917850312e756cf2189",
      "candidate_info": {
        "commit_hash": "1ca6d32e4fe99cdba637f917850312e756cf2189",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/1ca6d32e4fe99cdba637f917850312e756cf2189",
        "files": [
          "tensorflow/core/kernels/quantize_and_dequantize_op.cc"
        ],
        "message": "Fix `tf.raw_ops.QuantizeAndDequantizeV4Grad` CHECK failure.\n\nPiperOrigin-RevId: 370532425\nChange-Id: I767721be266851b63d8fe55e7ac6be0af6017f6c",
        "before_after_code_files": [
          "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc": [
          "File: tensorflow/core/kernels/quantize_and_dequantize_op.cc -> tensorflow/core/kernels/quantize_and_dequantize_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "160:         errors::InvalidArgument(\"gradient and input must be the same size\"));",
          "161:     const int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);",
          "162:     const Tensor& input_min_tensor = ctx->input(2);",
          "163:     const Tensor& input_max_tensor = ctx->input(3);",
          "164:     if (axis_ != -1) {",
          "165:       OP_REQUIRES(",
          "166:           ctx, input_min_tensor.dim_size(0) == depth,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:     OP_REQUIRES(ctx,",
          "164:                 input_min_tensor.dims() == 0 || input_min_tensor.dims() == 1,",
          "165:                 errors::InvalidArgument(",
          "166:                     \"Input min tensor must have dimension 1. Recieved \",",
          "167:                     input_min_tensor.dims(), \".\"));",
          "169:     OP_REQUIRES(ctx,",
          "170:                 input_max_tensor.dims() == 0 || input_max_tensor.dims() == 1,",
          "171:                 errors::InvalidArgument(",
          "172:                     \"Input max tensor must have dimension 1. Recieved \",",
          "173:                     input_max_tensor.dims(), \".\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "abd66b66190ef6a9b04224ada894c40dd1d88af0",
      "candidate_info": {
        "commit_hash": "abd66b66190ef6a9b04224ada894c40dd1d88af0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/abd66b66190ef6a9b04224ada894c40dd1d88af0",
        "files": [
          "tensorflow/core/kernels/quantize_and_dequantize_op.cc"
        ],
        "message": "Fix `tf.raw_ops.QuantizeAndDequantizeV4Grad` CHECK failure.\n\nPiperOrigin-RevId: 370532425\nChange-Id: I767721be266851b63d8fe55e7ac6be0af6017f6c",
        "before_after_code_files": [
          "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/quantize_and_dequantize_op.cc||tensorflow/core/kernels/quantize_and_dequantize_op.cc": [
          "File: tensorflow/core/kernels/quantize_and_dequantize_op.cc -> tensorflow/core/kernels/quantize_and_dequantize_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "160:         errors::InvalidArgument(\"gradient and input must be the same size\"));",
          "161:     const int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);",
          "162:     const Tensor& input_min_tensor = ctx->input(2);",
          "163:     const Tensor& input_max_tensor = ctx->input(3);",
          "164:     if (axis_ != -1) {",
          "165:       OP_REQUIRES(",
          "166:           ctx, input_min_tensor.dim_size(0) == depth,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:     OP_REQUIRES(ctx,",
          "164:                 input_min_tensor.dims() == 0 || input_min_tensor.dims() == 1,",
          "165:                 errors::InvalidArgument(",
          "166:                     \"Input min tensor must have dimension 1. Recieved \",",
          "167:                     input_min_tensor.dims(), \".\"));",
          "169:     OP_REQUIRES(ctx,",
          "170:                 input_max_tensor.dims() == 0 || input_max_tensor.dims() == 1,",
          "171:                 errors::InvalidArgument(",
          "172:                     \"Input max tensor must have dimension 1. Recieved \",",
          "173:                     input_max_tensor.dims(), \".\"));",
          "",
          "---------------"
        ]
      }
    }
  ]
}