{
  "cve_id": "CVE-2016-5351",
  "cve_desc": "epan/crypt/airpdcap.c in the IEEE 802.11 dissector in Wireshark 1.12.x before 1.12.12 and 2.x before 2.0.4 mishandles the lack of an EAPOL_RSN_KEY, which allows remote attackers to cause a denial of service (application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4",
  "patch_info": {
    "commit_hash": "9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4",
    "files": [
      "epan/crypt/airpdcap.c"
    ],
    "message": "Make sure EAPOL body is big enough for a EAPOL_RSN_KEY.\n\nA pointer to a EAPOL_RSN_KEY is set on the packet presuming the\nwhole EAPOL_RSN_KEY is there.  That's not always the case for\nfuzzed/malicious captures.\n\nBug: 11585\nChange-Id: Ib94b8aceef444c7820e43b969596efdb8dbecccd\nReviewed-on: https://code.wireshark.org/review/15540\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
    ]
  },
  "patch_diff": {
    "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
      "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9ab8209542d911de8e39cf7d1bdbec821d1060c3",
      "candidate_info": {
        "commit_hash": "9ab8209542d911de8e39cf7d1bdbec821d1060c3",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/9ab8209542d911de8e39cf7d1bdbec821d1060c3",
        "files": [
          "epan/crypt/airpdcap.c"
        ],
        "message": "Make sure EAPOL body is big enough for a EAPOL_RSN_KEY.\n\nA pointer to a EAPOL_RSN_KEY is set on the packet presuming the\nwhole EAPOL_RSN_KEY is there.  That's not always the case for\nfuzzed/malicious captures.\n\nConflicts:\n\tepan/crypt/airpdcap.c\n\nCherry picking also changes the comparison according to\ncommit f42616a6216454656b7b958955d336d7b304714f.\n\nBug: 11585\nChange-Id: Ib94b8aceef444c7820e43b969596efdb8dbecccd\nReviewed-on: https://code.wireshark.org/review/15540\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4)\nReviewed-on: https://code.wireshark.org/review/15544\n(cherry picked from commit f2c0a286479b208b2c4f68afc218dacfc4ac709e)\nReviewed-on: https://code.wireshark.org/review/16139\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
          ],
          "candidate": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
          "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "549:         bodyLength=pntoh16(data+offset+2);",
          "552:             return AIRPDCAP_RET_NO_VALID_HANDSHAKE;",
          "553:         }",
          "",
          "[Removed Lines]",
          "550:         if ((tot_len-offset-4) > bodyLength) {",
          "551:             AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapScanForGroupKey\", \"EAPOL body too short\", AIRPDCAP_DEBUG_LEVEL_3);",
          "",
          "[Added Lines]",
          "551:             AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapScanForKeys\", \"EAPOL body too short\", AIRPDCAP_DEBUG_LEVEL_3);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3456d094edad2eadfbee6ae0a1cdb34e10f40373",
      "candidate_info": {
        "commit_hash": "3456d094edad2eadfbee6ae0a1cdb34e10f40373",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/3456d094edad2eadfbee6ae0a1cdb34e10f40373",
        "files": [
          "epan/crypt/airpdcap.c"
        ],
        "message": "Make sure EAPOL body is big enough for a EAPOL_RSN_KEY.\n\nA pointer to a EAPOL_RSN_KEY is set on the packet presuming the\nwhole EAPOL_RSN_KEY is there.  That's not always the case for\nfuzzed/malicious captures.\n\nBug: 11585\nChange-Id: Ib94b8aceef444c7820e43b969596efdb8dbecccd\nReviewed-on: https://code.wireshark.org/review/15540\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4)\nReviewed-on: https://code.wireshark.org/review/15543\nReviewed-by: Jeff Morriss <jeff.morriss.ws@gmail.com>",
        "before_after_code_files": [
          "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
          ],
          "candidate": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
          "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c"
        ]
      }
    },
    {
      "candidate_hash": "f2c0a286479b208b2c4f68afc218dacfc4ac709e",
      "candidate_info": {
        "commit_hash": "f2c0a286479b208b2c4f68afc218dacfc4ac709e",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/f2c0a286479b208b2c4f68afc218dacfc4ac709e",
        "files": [
          "epan/crypt/airpdcap.c"
        ],
        "message": "Make sure EAPOL body is big enough for a EAPOL_RSN_KEY.\n\nA pointer to a EAPOL_RSN_KEY is set on the packet presuming the\nwhole EAPOL_RSN_KEY is there.  That's not always the case for\nfuzzed/malicious captures.\n\nBug: 11585\nChange-Id: Ib94b8aceef444c7820e43b969596efdb8dbecccd\nReviewed-on: https://code.wireshark.org/review/15540\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4)\nReviewed-on: https://code.wireshark.org/review/15544",
        "before_after_code_files": [
          "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
          ],
          "candidate": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
          "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c"
        ]
      }
    }
  ]
}