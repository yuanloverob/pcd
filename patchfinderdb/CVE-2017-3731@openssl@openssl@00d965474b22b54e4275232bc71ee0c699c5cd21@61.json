{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "afe2f42bfc72017a075c21b3695feeba6db27305",
      "candidate_info": {
        "commit_hash": "afe2f42bfc72017a075c21b3695feeba6db27305",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/afe2f42bfc72017a075c21b3695feeba6db27305",
        "files": [
          "engines/afalg/e_afalg.c",
          "engines/afalg/e_afalg.h"
        ],
        "message": "e_afalg.[ch]: fix --strict-warnings with gcc 4.x and 32-bit build.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit c27778d8adf7fca3128ece0b7efca09f628008b9)",
        "before_after_code_files": [
          "engines/afalg/e_afalg.c||engines/afalg/e_afalg.c",
          "engines/afalg/e_afalg.h||engines/afalg/e_afalg.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "engines/afalg/e_afalg.c||engines/afalg/e_afalg.c": [
          "File: engines/afalg/e_afalg.c -> engines/afalg/e_afalg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "236:     memset(cb, '\\0', sizeof(*cb));",
          "237:     cb->aio_fildes = sfd;",
          "238:     cb->aio_lio_opcode = IOCB_CMD_PREAD;",
          "248:     cb->aio_offset = 0;",
          "249:     cb->aio_data = 0;",
          "250:     cb->aio_nbytes = len;",
          "",
          "[Removed Lines]",
          "239:     if (sizeof(buf) != sizeof(cb->aio_buf)) {",
          "244:         cb->aio_buf = (uint64_t)(unsigned long)buf;",
          "245:     } else {",
          "246:         cb->aio_buf = (uint64_t)buf;",
          "247:     }",
          "",
          "[Added Lines]",
          "243:     cb->aio_buf = (size_t)buf;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "364:                                 const char *ciphername)",
          "365: {",
          "366:     struct sockaddr_alg sa;",
          "368:     actx->bfd = actx->sfd = -1;",
          "371:     memset(&sa, 0, sizeof(sa));",
          "372:     sa.salg_family = AF_ALG;",
          "",
          "[Removed Lines]",
          "369:     int r = -1;",
          "",
          "[Added Lines]",
          "363:     int r = -1;",
          "",
          "---------------"
        ],
        "engines/afalg/e_afalg.h||engines/afalg/e_afalg.h": [
          "File: engines/afalg/e_afalg.h -> engines/afalg/e_afalg.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #ifndef HEADER_AFALG_H",
          "11: # define HEADER_AFALG_H",
          "13: # ifdef ALG_DEBUG",
          "14: #  define ALG_DGB(x, ...) fprintf(stderr, \"ALG_DBG: \" x, __VA_ARGS__)",
          "15: #  define ALG_INFO(x, ...) fprintf(stderr, \"ALG_INFO: \" x, __VA_ARGS__)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13: # if defined(__GNUC__) && __GNUC__ >= 4 && \\",
          "14:      (!defined(__STDC_VERSION__) || __STDC_VERSION__ < 199901L)",
          "15: #  pragma GCC diagnostic ignored \"-Wvariadic-macros\"",
          "16: # endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3258e29a385f4800440a96a16889035a83aff437",
      "candidate_info": {
        "commit_hash": "3258e29a385f4800440a96a16889035a83aff437",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/3258e29a385f4800440a96a16889035a83aff437",
        "files": [
          "crypto/evp/e_aes.c",
          "crypto/evp/e_des3.c",
          "crypto/evp/evp_enc.c",
          "crypto/evp/evp_err.c",
          "crypto/evp/evp_locl.h",
          "include/openssl/evp.h",
          "test/evp_test.c"
        ],
        "message": "Fix the overlapping check for fragmented \"Update\" operations\n\nWhen doing in place encryption the overlapping buffer check can fail\nincorrectly where we have done a partial block \"Update\" operation. This\nfixes things to take account of any pending partial blocks.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2275)\n(cherry picked from commit 7141ba31969d0b378d08104a51f8f99b9187b9d5)",
        "before_after_code_files": [
          "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
          "crypto/evp/e_des3.c||crypto/evp/e_des3.c",
          "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c",
          "crypto/evp/evp_err.c||crypto/evp/evp_err.c",
          "crypto/evp/evp_locl.h||crypto/evp/evp_locl.h",
          "include/openssl/evp.h||include/openssl/evp.h",
          "test/evp_test.c||test/evp_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "crypto/evp/e_aes.c||crypto/evp/e_aes.c"
          ],
          "candidate": [
            "crypto/evp/e_aes.c||crypto/evp/e_aes.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
          "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #include \"internal/evp_int.h\"",
          "18: #include \"modes_lcl.h\"",
          "19: #include <openssl/rand.h>",
          "21: typedef struct {",
          "22:     union {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: #include \"evp_locl.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2234:     if (!pad && inlen & 0x7)",
          "2235:         return -1;",
          "2236:     if (!out) {",
          "2237:         if (EVP_CIPHER_CTX_encrypting(ctx)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2237:     if (is_partially_overlapping(out, in, inlen)) {",
          "2238:         EVPerr(EVP_F_AES_WRAP_CIPHER, EVP_R_PARTIALLY_OVERLAPPING);",
          "2239:         return 0;",
          "2240:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2551:         } else {",
          "2552:             buf = octx->data_buf;",
          "2553:             buf_len = &(octx->data_buf_len);",
          "2554:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2560:             if (is_partially_overlapping(out + *buf_len, in, len)) {",
          "2561:                 EVPerr(EVP_F_AES_OCB_CIPHER, EVP_R_PARTIALLY_OVERLAPPING);",
          "2562:                 return 0;",
          "2563:             }",
          "",
          "---------------"
        ],
        "crypto/evp/e_des3.c||crypto/evp/e_des3.c": [
          "File: crypto/evp/e_des3.c -> crypto/evp/e_des3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: # include \"internal/evp_int.h\"",
          "16: # include <openssl/des.h>",
          "17: # include <openssl/rand.h>",
          "19: typedef struct {",
          "20:     union {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: # include \"evp_locl.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "393:     if (inl >= EVP_MAXCHUNK || inl % 8)",
          "394:         return -1;",
          "395:     if (EVP_CIPHER_CTX_encrypting(ctx))",
          "396:         return des_ede3_wrap(ctx, out, in, inl);",
          "397:     else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "397:     if (is_partially_overlapping(out, in, inl)) {",
          "398:         EVPerr(EVP_F_DES_EDE3_WRAP_CIPHER, EVP_R_PARTIALLY_OVERLAPPING);",
          "399:         return 0;",
          "400:     }",
          "",
          "---------------"
        ],
        "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c": [
          "File: crypto/evp/evp_enc.c -> crypto/evp/evp_enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "276: # define PTRDIFF_T size_t",
          "277: #endif",
          "281: {",
          "282:     PTRDIFF_T diff = (PTRDIFF_T)ptr1-(PTRDIFF_T)ptr2;",
          "",
          "[Removed Lines]",
          "279: static int is_partially_overlapping(const void *ptr1, const void *ptr2,",
          "280:                                     int len)",
          "",
          "[Added Lines]",
          "279: int is_partially_overlapping(const void *ptr1, const void *ptr2, int len)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "296: {",
          "297:     int i, j, bl;",
          "299:     if (ctx->cipher->flags & EVP_CIPH_FLAG_CUSTOM_CIPHER) {",
          "301:             EVPerr(EVP_F_EVP_ENCRYPTUPDATE, EVP_R_PARTIALLY_OVERLAPPING);",
          "302:             return 0;",
          "303:         }",
          "",
          "[Removed Lines]",
          "300:         if (is_partially_overlapping(out, in, inl)) {",
          "",
          "[Added Lines]",
          "298:     bl = ctx->cipher->block_size;",
          "302:         if (bl == 1 && is_partially_overlapping(out, in, inl)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "315:         return inl == 0;",
          "316:     }",
          "318:         EVPerr(EVP_F_EVP_ENCRYPTUPDATE, EVP_R_PARTIALLY_OVERLAPPING);",
          "319:         return 0;",
          "320:     }",
          "",
          "[Removed Lines]",
          "317:     if (is_partially_overlapping(out, in, inl)) {",
          "",
          "[Added Lines]",
          "319:     if (is_partially_overlapping(out + ctx->buf_len, in, inl)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "329:         }",
          "330:     }",
          "331:     i = ctx->buf_len;",
          "333:     OPENSSL_assert(bl <= (int)sizeof(ctx->buf));",
          "334:     if (i != 0) {",
          "335:         if (bl - i > inl) {",
          "",
          "[Removed Lines]",
          "332:     bl = ctx->cipher->block_size;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "342:             memcpy(&(ctx->buf[i]), in, j);",
          "343:             inl -= j;",
          "344:             in += j;",
          "349:             if (!ctx->cipher->do_cipher(ctx, out, ctx->buf, bl))",
          "350:                 return 0;",
          "351:             out += bl;",
          "",
          "[Removed Lines]",
          "345:             if (is_partially_overlapping(out, in, bl)) {",
          "346:          EVPerr(EVP_F_EVP_ENCRYPTUPDATE, EVP_R_PARTIALLY_OVERLAPPING);",
          "347:                 return 0;",
          "348:             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "422:     int fix_len;",
          "423:     unsigned int b;",
          "425:     if (ctx->cipher->flags & EVP_CIPH_FLAG_CUSTOM_CIPHER) {",
          "427:             EVPerr(EVP_F_EVP_DECRYPTUPDATE, EVP_R_PARTIALLY_OVERLAPPING);",
          "428:             return 0;",
          "429:         }",
          "",
          "[Removed Lines]",
          "426:         if (is_partially_overlapping(out, in, inl)) {",
          "",
          "[Added Lines]",
          "422:     b = ctx->cipher->block_size;",
          "425:         if (b == 1 && is_partially_overlapping(out, in, inl)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "445:     if (ctx->flags & EVP_CIPH_NO_PADDING)",
          "446:         return EVP_EncryptUpdate(ctx, out, outl, in, inl);",
          "449:     OPENSSL_assert(b <= sizeof ctx->final);",
          "451:     if (ctx->final_used) {",
          "",
          "[Removed Lines]",
          "448:     b = ctx->cipher->block_size;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/evp/evp_err.c||crypto/evp/evp_err.c": [
          "File: crypto/evp/evp_err.c -> crypto/evp/evp_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: static ERR_STRING_DATA EVP_str_functs[] = {",
          "22:     {ERR_FUNC(EVP_F_AESNI_INIT_KEY), \"aesni_init_key\"},",
          "23:     {ERR_FUNC(EVP_F_AES_INIT_KEY), \"aes_init_key\"},",
          "24:     {ERR_FUNC(EVP_F_AES_T4_INIT_KEY), \"aes_t4_init_key\"},",
          "25:     {ERR_FUNC(EVP_F_ALG_MODULE_INIT), \"alg_module_init\"},",
          "26:     {ERR_FUNC(EVP_F_CAMELLIA_INIT_KEY), \"camellia_init_key\"},",
          "27:     {ERR_FUNC(EVP_F_CHACHA20_POLY1305_CTRL), \"chacha20_poly1305_ctrl\"},",
          "28:     {ERR_FUNC(EVP_F_CMLL_T4_INIT_KEY), \"cmll_t4_init_key\"},",
          "29:     {ERR_FUNC(EVP_F_DO_SIGVER_INIT), \"do_sigver_init\"},",
          "30:     {ERR_FUNC(EVP_F_EVP_CIPHERINIT_EX), \"EVP_CipherInit_ex\"},",
          "31:     {ERR_FUNC(EVP_F_EVP_CIPHER_CTX_COPY), \"EVP_CIPHER_CTX_copy\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:     {ERR_FUNC(EVP_F_AES_OCB_CIPHER), \"aes_ocb_cipher\"},",
          "26:     {ERR_FUNC(EVP_F_AES_WRAP_CIPHER), \"aes_wrap_cipher\"},",
          "31:     {ERR_FUNC(EVP_F_DES_EDE3_WRAP_CIPHER), \"des_ede3_wrap_cipher\"},",
          "",
          "---------------"
        ],
        "crypto/evp/evp_locl.h||crypto/evp/evp_locl.h": [
          "File: crypto/evp/evp_locl.h -> crypto/evp/evp_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: typedef struct evp_pbe_st EVP_PBE_CTL;",
          "66: DEFINE_STACK_OF(EVP_PBE_CTL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: int is_partially_overlapping(const void *ptr1, const void *ptr2, int len);",
          "",
          "---------------"
        ],
        "include/openssl/evp.h||include/openssl/evp.h": [
          "File: include/openssl/evp.h -> include/openssl/evp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1456: # define EVP_F_AESNI_INIT_KEY                             165",
          "1457: # define EVP_F_AES_INIT_KEY                               133",
          "1458: # define EVP_F_AES_T4_INIT_KEY                            178",
          "1459: # define EVP_F_ALG_MODULE_INIT                            177",
          "1460: # define EVP_F_CAMELLIA_INIT_KEY                          159",
          "1461: # define EVP_F_CHACHA20_POLY1305_CTRL                     182",
          "1462: # define EVP_F_CMLL_T4_INIT_KEY                           179",
          "1463: # define EVP_F_DO_SIGVER_INIT                             161",
          "1464: # define EVP_F_EVP_CIPHERINIT_EX                          123",
          "1465: # define EVP_F_EVP_CIPHER_CTX_COPY                        163",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1458: # define EVP_F_AES_OCB_CIPHER                             169",
          "1460: # define EVP_F_AES_WRAP_CIPHER                            170",
          "1465: # define EVP_F_DES_EDE3_WRAP_CIPHER                       171",
          "",
          "---------------"
        ],
        "test/evp_test.c||test/evp_test.c": [
          "File: test/evp_test.c -> test/evp_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1101:         static char aux_err[64];",
          "1102:         t->aux_err = aux_err;",
          "1103:         for (inp_misalign = (size_t)-1; inp_misalign != 2; inp_misalign++) {",
          "1107:             if (inp_misalign == (size_t)-1) {",
          "1109:                 BIO_snprintf(aux_err, sizeof(aux_err),",
          "",
          "[Removed Lines]",
          "1104:             if (frag && inp_misalign == (size_t)-1)",
          "1105:                  continue;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a59b90bf491410f1f2bc4540cc21f1980fd14c5b",
      "candidate_info": {
        "commit_hash": "a59b90bf491410f1f2bc4540cc21f1980fd14c5b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a59b90bf491410f1f2bc4540cc21f1980fd14c5b",
        "files": [
          "crypto/bn/asm/x86_64-mont5.pl"
        ],
        "message": "bn/asm/x86_64-mont5.pl: fix carry bug in bn_sqr8x_internal.\n\nCVE-2017-3732\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/asm/x86_64-mont5.pl||crypto/bn/asm/x86_64-mont5.pl": [
          "File: crypto/bn/asm/x86_64-mont5.pl -> crypto/bn/asm/x86_64-mont5.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1934:  mov \\$8,%ecx",
          "1935:  jmp .L8x_tail",
          "1937: .align 32",
          "1938: .L8x_tail_done:",
          "1939:  add (%rdx),%r8  # can this overflow?",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1937: .align 32",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1941:  adc \\$0,%r10",
          "1942:  adc \\$0,%r11",
          "1943:  adc \\$0,%r12",
          "1948:      # of multiplication",
          "1949:  xor %rax,%rax",
          "",
          "[Removed Lines]",
          "1944:  adc \\$0,%r13",
          "1945:  adc \\$0,%r14",
          "1946:  adc \\$0,%r15  # can't overflow, because we",
          "1947:      # started with \"overhung\" part",
          "",
          "[Added Lines]",
          "1945:  adc \\$0,%r13",
          "1946:  adc \\$0,%r14",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3384:  lea 8*8($tptr),$tptr",
          "3385:  sbb %rax,%rax",
          "3386:  sub \\$8,%rcx  # mov \\$-8,%rcx",
          "3388:  xor $carry,$carry  # of=0, cf=0",
          "3389:  mov %rax,16+8(%rsp)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3392: .align 32",
          "3393: .Lsqrx8x_tail_done:",
          "3398:  adc \\$0,%r12",
          "3399:  adc \\$0,%r13",
          "3400:  adc \\$0,%r14",
          "",
          "[Removed Lines]",
          "3394:  add 24+8(%rsp),%r8  # can this overflow?",
          "3395:  adc \\$0,%r9",
          "3396:  adc \\$0,%r10",
          "3397:  adc \\$0,%r11",
          "",
          "[Added Lines]",
          "3394:  add 24+8(%rsp),%r8  # can this overflow?",
          "3395:  adc \\$0,%r9",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3409:   movq %xmm3,%rcx",
          "3410:  adc 8*1($tptr),%r9",
          "3411:   mov 8*7($nptr),$carry",
          "3413:  adc 8*2($tptr),%r10",
          "3414:  adc 8*3($tptr),%r11",
          "3415:  adc 8*4($tptr),%r12",
          "",
          "[Removed Lines]",
          "3412:   movq %xmm2,$nptr  # restore $nptr",
          "",
          "[Added Lines]",
          "3410:   movq %xmm2,$nptr  # restore $nptr",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32ee80362c2e79ca47b02bd2cd4f22259bf66798",
      "candidate_info": {
        "commit_hash": "32ee80362c2e79ca47b02bd2cd4f22259bf66798",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/32ee80362c2e79ca47b02bd2cd4f22259bf66798",
        "files": [
          "Makefile.shared"
        ],
        "message": "HPUX: Add the forgotten $(DSTDIR) when linking DSOs\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1802)\n(cherry picked from commit f46661de7806b5bae507d17185bda2bafd6c20d8)",
        "before_after_code_files": [
          "Makefile.shared||Makefile.shared"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.shared||Makefile.shared": [
          "File: Makefile.shared -> Makefile.shared",
          "--- Hunk 1 ---",
          "[Context before]",
          "497:  expr $(PLATFORM) : 'hpux64' > /dev/null && ALLSYMSFLAGS='-Wl,+forceload'; \\",
          "498:  SHAREDFLAGS=\"$(CFLAGS) $(SHARED_LDFLAGS) -Wl,-B,symbolic,+vnocompatwarnings,-z,+s,+h,$$SHLIB$$SHLIB_SUFFIX,+cdp,../:,+cdp,./:\"; \\",
          "499:  fi; \\",
          "502: link_shlib.hpux:",
          "503:  @if $(DETECT_GNU_LD); then $(DO_GNU_SO); else \\",
          "504:  $(CALC_VERSIONS); \\",
          "",
          "[Removed Lines]",
          "500:  rm -f $$SHLIB$$SHLIB_SUFFIX || :; \\",
          "501:  $(LINK_SO_DSO) && chmod a=rx $$SHLIB$$SHLIB_SUFFIX",
          "",
          "[Added Lines]",
          "500:  rm -f $(DSTDIR)/$$SHLIB$$SHLIB_SUFFIX || :; \\",
          "501:  $(LINK_SO_DSO) && chmod a=rx $(DSTDIR)/$$SHLIB$$SHLIB_SUFFIX",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "510:  expr $(PLATFORM) : 'hpux64' > /dev/null && ALLSYMSFLAGS='-Wl,+forceload'; \\",
          "511:  SHAREDFLAGS=\"$(CFLAGS) $(SHARED_LDFLAGS) -Wl,-B,symbolic,+vnocompatwarnings,-z,+s,+h,$$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX,+cdp,../:,+cdp,./:\"; \\",
          "512:  fi; \\",
          "515: link_app.hpux:",
          "516:  @if $(DETECT_GNU_LD); then $(DO_GNU_APP); else \\",
          "517:  LDFLAGS=\"$(CFLAGS) $(LDFLAGS) -Wl,+s,+cdp,../:,+cdp,./:\"; \\",
          "",
          "[Removed Lines]",
          "513:  rm -f $$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX || :; \\",
          "514:  $(LINK_SO_SHLIB) && chmod a=rx $$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX",
          "",
          "[Added Lines]",
          "513:  rm -f $(DSTDIR)/$$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX || :; \\",
          "514:  $(LINK_SO_SHLIB) && chmod a=rx $(DSTDIR)/$$SHLIB$$SHLIB_SOVER$$SHLIB_SUFFIX",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cee0cdbc618d89f6e9eb14c360be8230b8397095",
      "candidate_info": {
        "commit_hash": "cee0cdbc618d89f6e9eb14c360be8230b8397095",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/cee0cdbc618d89f6e9eb14c360be8230b8397095",
        "files": [
          "ssl/ssl_sess.c"
        ],
        "message": "Fix a ssl session leak due to OOM in lh_SSL_SESSION_insert\n\n- s == NULL can mean c is a new session *or* lh_insert was\n  unable to create a hash entry.\n- use lh_SSL_SESSION_retrieve to check for this error condition.\n- If it happens simply remove the extra reference again.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2138)\n(cherry picked from commit 38088ce9934a90d4aea486edbff864f3935342e6)",
        "before_after_code_files": [
          "ssl/ssl_sess.c||ssl/ssl_sess.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_sess.c||ssl/ssl_sess.c": [
          "File: ssl/ssl_sess.c -> ssl/ssl_sess.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "662:         s = NULL;",
          "663:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "663:     } else if (s == NULL &&",
          "664:                lh_SSL_SESSION_retrieve(ctx->sessions, c) == NULL) {",
          "671:         s = c;",
          "",
          "---------------"
        ]
      }
    }
  ]
}