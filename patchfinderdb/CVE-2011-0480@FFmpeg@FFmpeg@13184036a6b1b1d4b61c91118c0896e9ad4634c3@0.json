{
  "cve_id": "CVE-2011-0480",
  "cve_desc": "Multiple buffer overflows in vorbis_dec.c in the Vorbis decoder in FFmpeg, as used in Google Chrome before 8.0.552.237 and Chrome OS before 8.0.552.344, allow remote attackers to cause a denial of service (memory corruption and application crash) or possibly have unspecified other impact via a crafted WebM file, related to buffers for (1) the channel floor and (2) the channel residue.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "13184036a6b1b1d4b61c91118c0896e9ad4634c3",
  "patch_info": {
    "commit_hash": "13184036a6b1b1d4b61c91118c0896e9ad4634c3",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/13184036a6b1b1d4b61c91118c0896e9ad4634c3",
    "files": [
      "libavcodec/vorbis_dec.c"
    ],
    "message": "Check rangebits to avoid a possible crash. Fixes issue 2548 (and Chrome issue 68115 and unknown CERT issues).\n\nPatch by Frank Barchard, fbarchard at google\n\nOriginally committed as revision 26365 to svn://svn.ffmpeg.org/ffmpeg/trunk",
    "before_after_code_files": [
      "libavcodec/vorbis_dec.c||libavcodec/vorbis_dec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/vorbis_dec.c||libavcodec/vorbis_dec.c": [
      "File: libavcodec/vorbis_dec.c -> libavcodec/vorbis_dec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "483:         if (floor_setup->floor_type == 1) {",
      "484:             int maximum_class = -1;",
      "485:             uint_fast8_t  rangebits;",
      "486:             uint_fast16_t floor1_values = 2;",
      "488:             floor_setup->decode = vorbis_floor1_decode;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "486:             uint_fast32_t rangemax;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "536:             rangebits = get_bits(gb, 4);",
      "537:             floor_setup->data.t1.list[0].x = 0;",
      "540:             for (j = 0; j < floor_setup->data.t1.partitions; ++j) {",
      "541:                 for (k = 0; k < floor_setup->data.t1.class_dimensions[floor_setup->data.t1.partition_class[j]]; ++k, ++floor1_values) {",
      "",
      "[Removed Lines]",
      "538:             floor_setup->data.t1.list[1].x = (1 << rangebits);",
      "",
      "[Added Lines]",
      "538:             rangemax = (1 << rangebits);",
      "539:             if (rangemax > vc->blocksize[1] / 2) {",
      "540:                 av_log(vc->avccontext, AV_LOG_ERROR,",
      "541:                        \"Floor value is too large for blocksize: %d (%d)\\n\",",
      "542:                        rangemax, vc->blocksize[1] / 2);",
      "543:                 return -1;",
      "544:             }",
      "546:             floor_setup->data.t1.list[1].x = rangemax;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5e3d023702587c137ac0a725d601d26a8978a125",
      "candidate_info": {
        "commit_hash": "5e3d023702587c137ac0a725d601d26a8978a125",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/5e3d023702587c137ac0a725d601d26a8978a125",
        "files": [
          "libavcodec/vorbis_dec.c"
        ],
        "message": "Check rangebits to avoid a possible crash.\n\nFixes issue 2548 (and Chrome issue 68115 and unknown CERT issues).\n\nPatch by Frank Barchard, fbarchard at google\n\nOriginally committed as revision 26365 to svn://svn.ffmpeg.org/ffmpeg/trunk\n(cherry picked from commit 13184036a6b1b1d4b61c91118c0896e9ad4634c3)\n\nSigned-off-by: Janne Grunau <janne-ffmpeg@jannau.net>",
        "before_after_code_files": [
          "libavcodec/vorbis_dec.c||libavcodec/vorbis_dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vorbis_dec.c||libavcodec/vorbis_dec.c"
          ],
          "candidate": [
            "libavcodec/vorbis_dec.c||libavcodec/vorbis_dec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vorbis_dec.c||libavcodec/vorbis_dec.c": [
          "File: libavcodec/vorbis_dec.c -> libavcodec/vorbis_dec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "477:         if (floor_setup->floor_type == 1) {",
          "478:             uint_fast8_t  maximum_class = 0;",
          "479:             uint_fast8_t  rangebits;",
          "480:             uint_fast16_t floor1_values = 2;",
          "482:             floor_setup->decode = vorbis_floor1_decode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "480:             uint_fast32_t rangemax;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "532:             rangebits = get_bits(gb, 4);",
          "533:             floor_setup->data.t1.list[0].x = 0;",
          "536:             for (j = 0; j < floor_setup->data.t1.partitions; ++j) {",
          "537:                 for (k = 0; k < floor_setup->data.t1.class_dimensions[floor_setup->data.t1.partition_class[j]]; ++k, ++floor1_values) {",
          "",
          "[Removed Lines]",
          "534:             floor_setup->data.t1.list[1].x = (1 << rangebits);",
          "",
          "[Added Lines]",
          "534:             rangemax = (1 << rangebits);",
          "535:             if (rangemax > vc->blocksize[1] / 2) {",
          "536:                 av_log(vc->avccontext, AV_LOG_ERROR,",
          "537:                        \"Floor value is too large for blocksize: %d (%d)\\n\",",
          "538:                        rangemax, vc->blocksize[1] / 2);",
          "539:                 return -1;",
          "540:             }",
          "542:             floor_setup->data.t1.list[1].x = rangemax;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "329e816ed7903cf078c52aecd32a3be3b5dabbee",
      "candidate_info": {
        "commit_hash": "329e816ed7903cf078c52aecd32a3be3b5dabbee",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/329e816ed7903cf078c52aecd32a3be3b5dabbee",
        "files": [
          "libavcodec/vorbis_dec.c"
        ],
        "message": "Check rangebits to avoid a possible crash. Fixes issue 2548 (and Chrome issue 68115 and unknown CERT issues).\n\nOriginally committed as revision 26365 to svn://svn.ffmpeg.org/ffmpeg/trunk\n(cherry picked from commit 13184036a6b1b1d4b61c91118c0896e9ad4634c3)\n\nAddresses: CVE-2011-0480\n\nConflicts:\n\n\tlibavcodec/vorbis_dec.c",
        "before_after_code_files": [
          "libavcodec/vorbis_dec.c||libavcodec/vorbis_dec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/vorbis_dec.c||libavcodec/vorbis_dec.c"
          ],
          "candidate": [
            "libavcodec/vorbis_dec.c||libavcodec/vorbis_dec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/vorbis_dec.c||libavcodec/vorbis_dec.c": [
          "File: libavcodec/vorbis_dec.c -> libavcodec/vorbis_dec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "466:         if (floor_setup->floor_type==1) {",
          "467:             uint_fast8_t maximum_class=0;",
          "468:             uint_fast8_t rangebits;",
          "469:             uint_fast16_t floor1_values=2;",
          "471:             floor_setup->decode=vorbis_floor1_decode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "469:             uint_fast32_t rangemax;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "528:             rangebits=get_bits(gb, 4);",
          "529:             floor_setup->data.t1.list[0].x = 0;",
          "532:             for(j=0;j<floor_setup->data.t1.partitions;++j) {",
          "533:                 for(k=0;k<floor_setup->data.t1.class_dimensions[floor_setup->data.t1.partition_class[j]];++k,++floor1_values) {",
          "",
          "[Removed Lines]",
          "530:             floor_setup->data.t1.list[1].x = (1<<rangebits);",
          "",
          "[Added Lines]",
          "530:             rangemax = (1 << rangebits);",
          "531:             if (rangemax > vc->blocksize[1] / 2) {",
          "532:                 av_log(vc->avccontext, AV_LOG_ERROR,",
          "533:                        \"Floor value is too large for blocksize: %d (%d)\\n\",",
          "534:                        rangemax, vc->blocksize[1] / 2);",
          "535:                 return -1;",
          "536:             }",
          "538:             floor_setup->data.t1.list[1].x = rangemax;",
          "",
          "---------------"
        ]
      }
    }
  ]
}