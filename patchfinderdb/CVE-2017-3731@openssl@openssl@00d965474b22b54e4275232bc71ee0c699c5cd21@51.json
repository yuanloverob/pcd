{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "030c7cc63dd6abc9a718306bf3bd34037cbfd294",
      "candidate_info": {
        "commit_hash": "030c7cc63dd6abc9a718306bf3bd34037cbfd294",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/030c7cc63dd6abc9a718306bf3bd34037cbfd294",
        "files": [
          "crypto/x509/t_x509.c"
        ],
        "message": "Print the X509 version signed, and convert to unsigned for the hex version.\n\nFound by tis-interpreter\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nGH: #1754\n(cherry picked from commit 676befbeb76ca19c9e7b2febfabda16bd26e00a0)",
        "before_after_code_files": [
          "crypto/x509/t_x509.c||crypto/x509/t_x509.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/t_x509.c||crypto/x509/t_x509.c": [
          "File: crypto/x509/t_x509.c -> crypto/x509/t_x509.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:     }",
          "72:     if (!(cflag & X509_FLAG_NO_VERSION)) {",
          "73:         l = X509_get_version(x);",
          "76:     }",
          "77:     if (!(cflag & X509_FLAG_NO_SERIAL)) {",
          "",
          "[Removed Lines]",
          "74:         if (BIO_printf(bp, \"%8sVersion: %lu (0x%lx)\\n\", \"\", l + 1, l) <= 0)",
          "75:             goto err;",
          "",
          "[Added Lines]",
          "74:         if (l >= 0 && l <= 2) {",
          "75:             if (BIO_printf(bp, \"%8sVersion: %ld (0x%lx)\\n\", \"\", l + 1, (unsigned long)l) <= 0)",
          "76:                 goto err;",
          "77:         } else {",
          "78:             if (BIO_printf(bp, \"%8sVersion: Unknown (%ld)\\n\", \"\", l) <= 0)",
          "79:                 goto err;",
          "80:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f31c714e923e76f54ff3b492f646662ef57f7d59",
      "candidate_info": {
        "commit_hash": "f31c714e923e76f54ff3b492f646662ef57f7d59",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f31c714e923e76f54ff3b492f646662ef57f7d59",
        "files": [
          "crypto/ui/ui_lib.c"
        ],
        "message": "Fix UI_get0_action_string()\n\nIt shouldn't try to return an action description for UIT_PROMPT type\nUI strings.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2904)\n(cherry picked from commit 6e470e190853f59a394dc92fefd74666c94266f4)",
        "before_after_code_files": [
          "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c": [
          "File: crypto/ui/ui_lib.c -> crypto/ui/ui_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "705: const char *UI_get0_action_string(UI_STRING *uis)",
          "706: {",
          "707:     switch (uis->type) {",
          "709:     case UIT_BOOLEAN:",
          "710:         return uis->_.boolean_data.action_desc;",
          "711:     default:",
          "",
          "[Removed Lines]",
          "708:     case UIT_PROMPT:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b757d2d82fd3ed4028d505b645258c9d97115443",
      "candidate_info": {
        "commit_hash": "b757d2d82fd3ed4028d505b645258c9d97115443",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b757d2d82fd3ed4028d505b645258c9d97115443",
        "files": [
          "crypto/ec/ec_asn1.c"
        ],
        "message": "Iterate over EC_GROUP's poly array in a safe way\n\nPrevent that memory beyond the last element is accessed if every element\nof group->poly[] is non-zero\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2689)\n\n(cherry picked from commit 57f48f939ed5d3119e3c691ea0a8a3ac2f4a1a9e)",
        "before_after_code_files": [
          "crypto/ec/ec_asn1.c||crypto/ec/ec_asn1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ec/ec_asn1.c||crypto/ec/ec_asn1.c": [
          "File: crypto/ec/ec_asn1.c -> crypto/ec/ec_asn1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: int EC_GROUP_get_basis_type(const EC_GROUP *group)",
          "17: {",
          "20:     if (EC_METHOD_get_field_type(EC_GROUP_method_of(group)) !=",
          "21:         NID_X9_62_characteristic_two_field)",
          "23:         return 0;",
          "28:     if (i == 4)",
          "29:         return NID_X9_62_ppBasis;",
          "",
          "[Removed Lines]",
          "18:     int i = 0;",
          "25:     while (group->poly[i] != 0)",
          "26:         i++;",
          "",
          "[Added Lines]",
          "18:     int i;",
          "26:     for (i = 0;",
          "27:          i < (int)OSSL_NELEM(group->poly) & group->poly[i] != 0;",
          "28:          i++)",
          "29:         continue;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2cf10e88b7221e1edbbdc8ecc89abe2953a668b1",
      "candidate_info": {
        "commit_hash": "2cf10e88b7221e1edbbdc8ecc89abe2953a668b1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2cf10e88b7221e1edbbdc8ecc89abe2953a668b1",
        "files": [
          "Configurations/descrip.mms.tmpl",
          "Configurations/unix-Makefile.tmpl",
          "Configurations/windows-makefile.tmpl"
        ],
        "message": "Enable memory debugging while testing\n\nPre 1.1.0, 'make test' would set the environment variable\nOPENSSL_DEBUG_MEMORY to \"on\".  This got lost when translating the old\nbuild files to the new templates.  This changes reintroduces that\nvariable.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1840)\n(cherry picked from commit 6d4bc8a3d2c2f7701588bbfdea80a1f7a3973f26)",
        "before_after_code_files": [
          "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl",
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl",
          "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/descrip.mms.tmpl||Configurations/descrip.mms.tmpl": [
          "File: Configurations/descrip.mms.tmpl -> Configurations/descrip.mms.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "264:         DEFINE SRCTOP {- sourcedir() -}",
          "265:         DEFINE BLDTOP {- builddir() -}",
          "266:         DEFINE OPENSSL_ENGINES {- builddir(\"engines\") -}",
          "267:         IF \"$(VERBOSE)\" .NES. \"\" THEN DEFINE VERBOSE \"$(VERBOSE)\"",
          "268:         $(PERL) {- sourcefile(\"test\", \"run_tests.pl\") -} $(TESTS)",
          "269:         DEASSIGN OPENSSL_ENGINES",
          "270:         DEASSIGN BLDTOP",
          "271:         DEASSIGN SRCTOP",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "267:         DEFINE OPENSSL_DEBUG_MEMORY \"on\"",
          "270:         DEASSIGN OPENSSL_DEBUG_MEMORY",
          "",
          "---------------"
        ],
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "246:    PERL=\"$(PERL)\" \\",
          "247:    EXE_EXT={- $exeext -} \\",
          "248:    OPENSSL_ENGINES=../$(BLDDIR)/engines \\",
          "249:      $(PERL) ../$(SRCDIR)/test/run_tests.pl $(TESTS) )",
          "250:  @ : {- if ($disabled{tests}) { output_on(); } else { output_off(); } \"\" -}",
          "251:  @echo \"Tests are not supported with your chosen Configure options\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "249:    OPENSSL_DEBUG_MEMORY=on \\",
          "",
          "---------------"
        ],
        "Configurations/windows-makefile.tmpl||Configurations/windows-makefile.tmpl": [
          "File: Configurations/windows-makefile.tmpl -> Configurations/windows-makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:  set SRCTOP=$(SRCDIR)",
          "199:  set BLDTOP=$(BLDDIR)",
          "200:  set PERL=$(PERL)",
          "201:  \"$(PERL)\" \"$(SRCDIR)\\test\\run_tests.pl\" $(TESTS)",
          "202:  @rem {- if ($disabled{tests}) { output_on(); } else { output_off(); } \"\" -}",
          "203:  @echo \"Tests are not supported with your chosen Configure options\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "201:  set OPENSSL_DEBUG_MEMORY=on",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea9b8d847f0c209e3caccb95a05fc20298c1d6eb",
      "candidate_info": {
        "commit_hash": "ea9b8d847f0c209e3caccb95a05fc20298c1d6eb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ea9b8d847f0c209e3caccb95a05fc20298c1d6eb",
        "files": [
          "apps/openssl.c"
        ],
        "message": "Remove unused variable\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2566)\n(cherry picked from commit a19a6c8179faa3da0dedaaf2effae385cf7dd65d)",
        "before_after_code_files": [
          "apps/openssl.c||apps/openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/openssl.c||apps/openssl.c": [
          "File: apps/openssl.c -> apps/openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: static void list_disabled(void);",
          "59: char *default_config_file = NULL;",
          "62: BIO *bio_in = NULL;",
          "63: BIO *bio_out = NULL;",
          "64: BIO *bio_err = NULL;",
          "",
          "[Removed Lines]",
          "61: static CONF *config = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248:  end:",
          "249:     OPENSSL_free(copied_argv);",
          "250:     OPENSSL_free(default_config_file);",
          "253:     lh_FUNCTION_free(prog);",
          "254:     OPENSSL_free(arg.argv);",
          "",
          "[Removed Lines]",
          "251:     NCONF_free(config);",
          "252:     config = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}