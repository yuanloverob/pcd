{
  "cve_id": "CVE-2021-3974",
  "cve_desc": "vim is vulnerable to Use After Free",
  "repo": "vim/vim",
  "patch_hash": "64066b9acd9f8cffdf4840f797748f938a13f2d6",
  "patch_info": {
    "commit_hash": "64066b9acd9f8cffdf4840f797748f938a13f2d6",
    "repo": "vim/vim",
    "commit_url": "https://github.com/vim/vim/commit/64066b9acd9f8cffdf4840f797748f938a13f2d6",
    "files": [
      "src/regexp.c",
      "src/regexp_nfa.c",
      "src/testdir/test_regexp_latin.vim",
      "src/version.c"
    ],
    "message": "patch 8.2.3612: using freed memory with regexp using a mark\n\nProblem:    Using freed memory with regexp using a mark.\nSolution:   Get the line again after getting the mark position.",
    "before_after_code_files": [
      "src/regexp.c||src/regexp.c",
      "src/regexp_nfa.c||src/regexp_nfa.c",
      "src/testdir/test_regexp_latin.vim||src/testdir/test_regexp_latin.vim",
      "src/version.c||src/version.c"
    ]
  },
  "patch_diff": {
    "src/regexp.c||src/regexp.c": [
      "File: src/regexp.c -> src/regexp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1130:     linenr_T lnum;  // line number, relative to first line",
      "1131:     char_u *line;  // start of current line",
      "1134:     int need_clear_subexpr; // subexpressions still need to be cleared",
      "1135: #ifdef FEAT_SYN_HL",
      "",
      "[Removed Lines]",
      "1132:     char_u *input;  // current input, points into \"regline\"",
      "",
      "[Added Lines]",
      "1132:     char_u *input;  // current input, points into \"line\"",
      "",
      "---------------"
    ],
    "src/regexp_nfa.c||src/regexp_nfa.c": [
      "File: src/regexp_nfa.c -> src/regexp_nfa.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6834:      case NFA_MARK_GT:",
      "6835:      case NFA_MARK_LT:",
      "6836:        {",
      "6837:   pos_T *pos = getmark_buf(rex.reg_buf, t->state->val, FALSE);",
      "6841:   if (pos != NULL && pos->lnum > 0)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6837:   size_t col = rex.input - rex.line;",
      "6841:   if (REG_MULTI)",
      "6842:   {",
      "6843:       rex.line = reg_getline(rex.lnum);",
      "6844:       rex.input = rex.line + col;",
      "6845:   }",
      "",
      "---------------"
    ],
    "src/testdir/test_regexp_latin.vim||src/testdir/test_regexp_latin.vim": [
      "File: src/testdir/test_regexp_latin.vim -> src/testdir/test_regexp_latin.vim",
      "--- Hunk 1 ---",
      "[Context before]",
      "1037:   set re&",
      "1038: endfunc",
      "1040: \" vim: shiftwidth=2 sts=2 expandtab",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1040: func Test_using_mark_position()",
      "1041:   \" this was using freed memory",
      "1042:   new",
      "1043:   norm O0",
      "1044:   call assert_fails(\"s/\\\\%')\", 'E486:')",
      "1045:   bwipe!",
      "1046: endfunc",
      "",
      "---------------"
    ],
    "src/version.c||src/version.c": [
      "File: src/version.c -> src/version.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "758: static int included_patches[] =",
      "761:     3611,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "761:     3612,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b4ad3b0deac12674a7773311890b48fd39c6807c",
      "candidate_info": {
        "commit_hash": "b4ad3b0deac12674a7773311890b48fd39c6807c",
        "repo": "vim/vim",
        "commit_url": "https://github.com/vim/vim/commit/b4ad3b0deac12674a7773311890b48fd39c6807c",
        "files": [
          "src/gui_athena.c",
          "src/gui_motif.c",
          "src/mark.c",
          "src/os_unix.c",
          "src/quickfix.c",
          "src/regexp_nfa.c",
          "src/register.c",
          "src/testdir/test_filechanged.vim",
          "src/version.c"
        ],
        "message": "patch 8.2.4649: various formatting problems\n\nProblem:    Various formatting problems.\nSolution:   Improve the code formatting.",
        "before_after_code_files": [
          "src/gui_athena.c||src/gui_athena.c",
          "src/gui_motif.c||src/gui_motif.c",
          "src/mark.c||src/mark.c",
          "src/os_unix.c||src/os_unix.c",
          "src/quickfix.c||src/quickfix.c",
          "src/regexp_nfa.c||src/regexp_nfa.c",
          "src/register.c||src/register.c",
          "src/testdir/test_filechanged.vim||src/testdir/test_filechanged.vim",
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/regexp_nfa.c||src/regexp_nfa.c",
            "src/version.c||src/version.c"
          ],
          "candidate": [
            "src/regexp_nfa.c||src/regexp_nfa.c",
            "src/version.c||src/version.c"
          ]
        }
      },
      "candidate_diff": {
        "src/gui_athena.c||src/gui_athena.c": [
          "File: src/gui_athena.c -> src/gui_athena.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1191: #endif",
          "1193:  menu->parent = parent;",
          "1195:  if (!XtIsManaged(toolBar)",
          "1196:       && vim_strchr(p_go, GO_TOOLBAR) != NULL)",
          "1197:      gui_mch_show_toolbar(TRUE);",
          "",
          "[Removed Lines]",
          "1194:  menu->submenu_id = NULL;",
          "",
          "[Added Lines]",
          "1194:  menu->submenu_id = (Widget)0;",
          "",
          "---------------"
        ],
        "src/gui_motif.c||src/gui_motif.c": [
          "File: src/gui_motif.c -> src/gui_motif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "944:       && tearoff_val == (int)XmTEAR_OFF_ENABLED ? 1 : 0),",
          "945: #endif",
          "946:      NULL);",
          "949:     XmStringFree(label);",
          "951:     if (menu->id == (Widget)0)  // failed",
          "952:  return;",
          "955:     gui_motif_add_actext(menu);",
          "",
          "[Removed Lines]",
          "947:     gui_motif_menu_colors(menu->id);",
          "948:     gui_motif_menu_fontlist(menu->id);",
          "",
          "[Added Lines]",
          "954:     if (parent == NULL && menu->priority >= 9999)",
          "955:  XtVaSetValues(menuBar,",
          "956:   XmNmenuHelpWidget, menu->id,",
          "957:   NULL);",
          "959:     gui_motif_menu_colors(menu->id);",
          "960:     gui_motif_menu_fontlist(menu->id);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "978:  XmNsubMenuId, menu->submenu_id,",
          "979:  NULL);",
          "994:     if (parent == NULL)",
          "995:  gui_mch_compute_menu_height(menu->id);",
          "996: }",
          "",
          "[Removed Lines]",
          "985:     if (parent == NULL && menu->priority >= 9999)",
          "986:  XtVaSetValues(menuBar,",
          "987:   XmNmenuHelpWidget, menu->id,",
          "988:   NULL);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/mark.c||src/mark.c": [
          "File: src/mark.c -> src/mark.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1003:     void",
          "1004: mark_adjust_nofold(",
          "1009: {",
          "1010:     mark_adjust_internal(line1, line2, amount, amount_after, FALSE);",
          "1011: }",
          "1013:     static void",
          "1014: mark_adjust_internal(",
          "1020: {",
          "1021:     int  i;",
          "1022:     int  fnum = curbuf->b_fnum;",
          "",
          "[Removed Lines]",
          "1005:     linenr_T line1,",
          "1006:     linenr_T line2,",
          "1007:     long amount,",
          "1008:     long amount_after)",
          "1015:     linenr_T line1,",
          "1016:     linenr_T line2,",
          "1017:     long amount,",
          "1018:     long amount_after,",
          "1019:     int adjust_folds UNUSED)",
          "",
          "[Added Lines]",
          "1005:     linenr_T line1,",
          "1006:     linenr_T line2,",
          "1007:     long amount,",
          "1008:     long amount_after)",
          "1015:     linenr_T line1,",
          "1016:     linenr_T line2,",
          "1017:     long amount,",
          "1018:     long amount_after,",
          "1019:     int  adjust_folds UNUSED)",
          "",
          "---------------"
        ],
        "src/os_unix.c||src/os_unix.c": [
          "File: src/os_unix.c -> src/os_unix.c"
        ],
        "src/quickfix.c||src/quickfix.c": [
          "File: src/quickfix.c -> src/quickfix.c"
        ],
        "src/regexp_nfa.c||src/regexp_nfa.c": [
          "File: src/regexp_nfa.c -> src/regexp_nfa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6764:      case NFA_MARK_GT:",
          "6765:      case NFA_MARK_LT:",
          "6766:        {",
          "6771:   if (REG_MULTI)",
          "",
          "[Removed Lines]",
          "6767:   size_t col = rex.input - rex.line;",
          "6768:   pos_T *pos = getmark_buf(rex.reg_buf, t->state->val, FALSE);",
          "",
          "[Added Lines]",
          "6767:   pos_T *pos;",
          "6768:   size_t col = REG_MULTI ? rex.input - rex.line : 0;",
          "6770:   pos = getmark_buf(rex.reg_buf, t->state->val, FALSE);",
          "",
          "---------------"
        ],
        "src/register.c||src/register.c": [
          "File: src/register.c -> src/register.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2399:    msg_puts_attr(\"^J\", attr);",
          "2400:    n -= 2;",
          "2401:       }",
          "2404:       {",
          "2405:    clen = (*mb_ptr2len)(p);",
          "2406:    msg_outtrans_len(p, clen);",
          "",
          "[Removed Lines]",
          "2402:       for (p = yb->y_array[j]; *p && (n -= ptr2cells(p)) >= 0;",
          "2403:             ++p)",
          "",
          "[Added Lines]",
          "2402:       for (p = yb->y_array[j];",
          "",
          "---------------"
        ],
        "src/testdir/test_filechanged.vim||src/testdir/test_filechanged.vim": [
          "File: src/testdir/test_filechanged.vim -> src/testdir/test_filechanged.vim",
          "--- Hunk 1 ---",
          "[Context before]",
          "140: func Test_FileChangedShell_edit_dialog()",
          "141:   CheckNotGui",
          "145:   new Xchanged_r",
          "146:   call setline(1, 'reload this')",
          "",
          "[Removed Lines]",
          "142:   \" FIXME: why does this not work on MS-Windows?",
          "143:   CheckUnix",
          "",
          "[Added Lines]",
          "142:   CheckUnix  \" Using low level feedkeys() does not work on MS-Windows.",
          "",
          "---------------"
        ],
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "751: static int included_patches[] =",
          "754:     4648,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "754:     4649,",
          "",
          "---------------"
        ]
      }
    }
  ]
}