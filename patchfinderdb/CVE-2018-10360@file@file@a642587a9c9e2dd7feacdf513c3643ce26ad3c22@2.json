{
  "cve_id": "CVE-2018-10360",
  "cve_desc": "The do_core_note function in readelf.c in libmagic.a in file 5.33 allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted ELF file.",
  "repo": "file/file",
  "patch_hash": "a642587a9c9e2dd7feacdf513c3643ce26ad3c22",
  "patch_info": {
    "commit_hash": "a642587a9c9e2dd7feacdf513c3643ce26ad3c22",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/a642587a9c9e2dd7feacdf513c3643ce26ad3c22",
    "files": [
      "src/readelf.c"
    ],
    "message": "Avoid reading past the end of buffer (Rui Reis)",
    "before_after_code_files": [
      "src/readelf.c||src/readelf.c"
    ]
  },
  "patch_diff": {
    "src/readelf.c||src/readelf.c": [
      "File: src/readelf.c -> src/readelf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "31: #endif",
      "33: #ifdef BUILTIN_ELF",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.142 2018/05/24 18:08:01 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.143 2018/06/09 16:00:06 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "843:     cname = (unsigned char *)",
      "844:         &nbuf[doff + prpsoffsets(i)];",
      "846:      continue;",
      "",
      "[Removed Lines]",
      "845:     for (cp = cname; *cp && isprint(*cp); cp++)",
      "",
      "[Added Lines]",
      "845:     for (cp = cname; cp < nbuf + size && *cp",
      "846:         && isprint(*cp); cp++)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bd8fafe37ff2e729732bda5ad1de92a9d69110f3",
      "candidate_info": {
        "commit_hash": "bd8fafe37ff2e729732bda5ad1de92a9d69110f3",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/bd8fafe37ff2e729732bda5ad1de92a9d69110f3",
        "files": [
          "src/readelf.c"
        ],
        "message": "check file_printf()",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.148 2018/08/01 10:02:20 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.149 2018/08/01 10:09:47 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "577:     size_t noff, size_t doff, int *flags)",
          "578: {",
          "579:  if (namesz == 5 && strcmp((char *)&nbuf[noff], \"SuSE\") == 0 &&",
          "583:      return 1;",
          "584:  }",
          "",
          "[Removed Lines]",
          "580:      type == NT_GNU_VERSION && descsz == 2) {",
          "582:      file_printf(ms, \", for SuSE %d.%d\", nbuf[doff], nbuf[doff + 1]);",
          "",
          "[Added Lines]",
          "580:   type == NT_GNU_VERSION && descsz == 2) {",
          "582:   if (file_printf(ms, \", for SuSE %d.%d\", nbuf[doff],",
          "583:       nbuf[doff + 1]) == -1)",
          "584:       return -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7af5106e1f94b17ae5635f6a5035210bc6e4491f",
      "candidate_info": {
        "commit_hash": "7af5106e1f94b17ae5635f6a5035210bc6e4491f",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/7af5106e1f94b17ae5635f6a5035210bc6e4491f",
        "files": [
          "src/readelf.c"
        ],
        "message": "check against -1 to appease coverity.",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.146 2018/07/27 07:50:14 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.147 2018/08/01 09:56:24 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1716:      && (errno == ESPIPE))",
          "1717:   fd = file_pipe2file(ms, fd, buf, nbytes);",
          "1720:     file_badread(ms);",
          "1721:   return -1;",
          "1722:  }",
          "",
          "[Removed Lines]",
          "1719:  if (fstat(fd, &st) == -1) {",
          "",
          "[Added Lines]",
          "1719:  if (fd == -1 || fstat(fd, &st) == -1) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9233f23b8ec804828e359e9184d98bef8d311550",
      "candidate_info": {
        "commit_hash": "9233f23b8ec804828e359e9184d98bef8d311550",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/9233f23b8ec804828e359e9184d98bef8d311550",
        "files": [
          "src/readelf.c"
        ],
        "message": "implement NetBSD emulation (obsolete)",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.140 2017/11/02 20:25:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.141 2018/04/12 16:50:52 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "310:  \"NetBSD\",",
          "311: };",
          "326: private int",
          "327: dophn_core(struct magic_set *ms, int clazz, int swap, int fd, off_t off,",
          "",
          "[Removed Lines]",
          "313: #define FLAGS_CORE_STYLE  0x003",
          "315: #define FLAGS_DID_CORE   0x004",
          "316: #define FLAGS_DID_OS_NOTE  0x008",
          "317: #define FLAGS_DID_BUILD_ID  0x010",
          "318: #define FLAGS_DID_CORE_STYLE  0x020",
          "319: #define FLAGS_DID_NETBSD_PAX  0x040",
          "320: #define FLAGS_DID_NETBSD_MARCH  0x080",
          "321: #define FLAGS_DID_NETBSD_CMODEL  0x100",
          "322: #define FLAGS_DID_NETBSD_UNKNOWN 0x200",
          "323: #define FLAGS_IS_CORE   0x400",
          "324: #define FLAGS_DID_AUXV   0x800",
          "",
          "[Added Lines]",
          "313: #define FLAGS_CORE_STYLE  0x0003",
          "315: #define FLAGS_DID_CORE   0x0004",
          "316: #define FLAGS_DID_OS_NOTE  0x0008",
          "317: #define FLAGS_DID_BUILD_ID  0x0010",
          "318: #define FLAGS_DID_CORE_STYLE  0x0020",
          "319: #define FLAGS_DID_NETBSD_PAX  0x0040",
          "320: #define FLAGS_DID_NETBSD_MARCH  0x0080",
          "321: #define FLAGS_DID_NETBSD_CMODEL  0x0100",
          "322: #define FLAGS_DID_NETBSD_EMULATION 0x0200",
          "323: #define FLAGS_DID_NETBSD_UNKNOWN 0x0400",
          "324: #define FLAGS_IS_CORE   0x0800",
          "325: #define FLAGS_DID_AUXV   0x1000",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1135:        (int)descsz, (const char *)&nbuf[doff]) == -1)",
          "1136:     return offset;",
          "1137:    break;",
          "1138:   default:",
          "1139:    if (*flags & FLAGS_DID_NETBSD_UNKNOWN)",
          "1140:     return offset;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1139:   case NT_NETBSD_EMULATION:",
          "1140:    if (*flags & FLAGS_DID_NETBSD_EMULATION)",
          "1141:     return offset;",
          "1143:    if (file_printf(ms, \", emulation: %.*s\",",
          "1144:        (int)descsz, (const char *)&nbuf[doff]) == -1)",
          "1145:     return offset;",
          "1146:    break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9c3137904e59d68debb97fceaced46a691ba241a",
      "candidate_info": {
        "commit_hash": "9c3137904e59d68debb97fceaced46a691ba241a",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/9c3137904e59d68debb97fceaced46a691ba241a",
        "files": [
          "src/readelf.c"
        ],
        "message": "Since this is an elf file and we produced some information for it, return 1 instead of 0. Reported by Kamil Dudka",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.145 2018/07/25 06:12:09 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.146 2018/07/27 07:50:14 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69: {",
          "70:  if (file_printf(ms, \", too many %s (%u)\", name, num) == -1)",
          "71:   return -1;",
          "73: }",
          "75: private uint16_t",
          "",
          "[Removed Lines]",
          "72:  return 0;",
          "",
          "[Added Lines]",
          "72:  return 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "813f1b8a37bc1384b33d6598ec5bad0c8e754caf",
      "candidate_info": {
        "commit_hash": "813f1b8a37bc1384b33d6598ec5bad0c8e754caf",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/813f1b8a37bc1384b33d6598ec5bad0c8e754caf",
        "files": [
          "src/readelf.c"
        ],
        "message": "correct error handling for file_printf() (coverity)",
        "before_after_code_files": [
          "src/readelf.c||src/readelf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/readelf.c||src/readelf.c"
          ],
          "candidate": [
            "src/readelf.c||src/readelf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.149 2018/08/01 10:09:47 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.150 2018/08/02 12:46:02 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "565:      type == NT_GO_BUILD_ID && descsz < 128) {",
          "566:   if (file_printf(ms, \", Go BuildID=%s\",",
          "567:       (char *)&nbuf[doff]) == -1)",
          "569:   return 1;",
          "570:  }",
          "571:  return 0;",
          "",
          "[Removed Lines]",
          "568:    return 1;",
          "",
          "[Added Lines]",
          "568:    return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1118:  }",
          "1120:  if (namesz & 0x80000000) {",
          "1123:      return 0;",
          "1124:  }",
          "1126:  if (descsz & 0x80000000) {",
          "1129:      return 0;",
          "1130:  }",
          "",
          "[Removed Lines]",
          "1121:      file_printf(ms, \", bad note name size %#lx\",",
          "1122:   CAST(unsigned long, namesz));",
          "1127:      file_printf(ms, \", bad note description size %#lx\",",
          "1128:   CAST(unsigned long, descsz));",
          "",
          "[Added Lines]",
          "1121:   if (((file_printf(ms, \", bad note name size %#lx\",",
          "1122:       CAST(unsigned long, namesz)) == -1)",
          "1123:    return -1;",
          "1128:   if (file_printf(ms, \", bad note description size %#lx\",",
          "1129:       CAST(unsigned long, descsz)) == -1)",
          "1130:        return -1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}