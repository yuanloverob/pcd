{
  "cve_id": "CVE-2017-5206",
  "cve_desc": "Firejail before 0.9.44.4, when running on a Linux kernel before 4.8, allows context-dependent attackers to bypass a seccomp-based sandbox protection mechanism via the --allow-debuggers argument.",
  "repo": "netblue30/firejail",
  "patch_hash": "6b8dba29d73257311564ee7f27b9b14758cc693e",
  "patch_info": {
    "commit_hash": "6b8dba29d73257311564ee7f27b9b14758cc693e",
    "repo": "netblue30/firejail",
    "commit_url": "https://github.com/netblue30/firejail/commit/6b8dba29d73257311564ee7f27b9b14758cc693e",
    "files": [
      "RELNOTES",
      "src/firejail/main.c",
      "src/man/firejail.txt"
    ],
    "message": "security fix",
    "before_after_code_files": [
      "src/firejail/main.c||src/firejail/main.c"
    ]
  },
  "patch_diff": {
    "src/firejail/main.c||src/firejail/main.c": [
      "File: src/firejail/main.c -> src/firejail/main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include <signal.h>",
      "36: #include <time.h>",
      "37: #include <net/if.h>",
      "39: #if 0",
      "40: #include <sys/times.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "38: #include <sys/utsname.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "803:  for (i = 1; i < argc; i++) {",
      "804:   if (strcmp(argv[i], \"--allow-debuggers\") == 0) {",
      "805:    arg_allow_debuggers = 1;",
      "806:    break;",
      "807:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "807:    struct utsname u;",
      "808:    int rv = uname(&u);",
      "809:    if (rv != 0)",
      "810:     errExit(\"uname\");",
      "811:    int major;",
      "812:    int minor;",
      "813:    if (2 != sscanf(u.release, \"%d.%d\", &major, &minor)) {",
      "814:     fprintf(stderr, \"Error: cannot extract Linux kernel version: %s\\n\", u.version);",
      "815:     exit(1);",
      "816:    }",
      "817:    if (major < 4 || (major == 4 && minor < 8)) {",
      "818:     fprintf(stderr, \"Error: --allow-debuggers is disabled on Linux kernels prior to 4.8. \"",
      "819:      \"A bug in ptrace call allows a full bypass of the seccomp filter. \"",
      "820:      \"Your current kernel version is %d.%d.\\n\", major, minor);",
      "821:     exit(1);",
      "822:    }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "38d418505e9ee2d326557e5639e8da49c298858f",
      "candidate_info": {
        "commit_hash": "38d418505e9ee2d326557e5639e8da49c298858f",
        "repo": "netblue30/firejail",
        "commit_url": "https://github.com/netblue30/firejail/commit/38d418505e9ee2d326557e5639e8da49c298858f",
        "files": [
          "src/firejail/fs_home.c"
        ],
        "message": "security fix",
        "before_after_code_files": [
          "src/firejail/fs_home.c||src/firejail/fs_home.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/firejail/fs_home.c||src/firejail/fs_home.c": [
          "File: src/firejail/fs_home.c -> src/firejail/fs_home.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:   if (stat(fname, &s) == 0)",
          "44:    return;",
          "45:   if (stat(\"/etc/skel/.zshrc\", &s) == 0) {",
          "47:    fs_logger(\"clone /etc/skel/.zshrc\");",
          "48:   }",
          "49:   else {",
          "",
          "[Removed Lines]",
          "46:    copy_file(\"/etc/skel/.zshrc\", fname, u, g, 0644);",
          "",
          "[Added Lines]",
          "45:   if (is_link(fname)) { // stat on dangling symlinks fails, try again using lstat",
          "46:    fprintf(stderr, \"Error: invalid %s file\\n\", fname);",
          "47:    exit(1);",
          "48:   }",
          "50:    copy_file_as_user(\"/etc/skel/.zshrc\", fname, u, g, 0644);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:   if (stat(fname, &s) == 0)",
          "63:    return;",
          "64:   if (stat(\"/etc/skel/.cshrc\", &s) == 0) {",
          "66:    fs_logger(\"clone /etc/skel/.cshrc\");",
          "67:   }",
          "68:   else {",
          "",
          "[Removed Lines]",
          "65:    copy_file(\"/etc/skel/.cshrc\", fname, u, g, 0644);",
          "",
          "[Added Lines]",
          "68:   if (is_link(fname)) { // stat on dangling symlinks fails, try again using lstat",
          "69:    fprintf(stderr, \"Error: invalid %s file\\n\", fname);",
          "70:    exit(1);",
          "71:   }",
          "73:    copy_file_as_user(\"/etc/skel/.cshrc\", fname, u, g, 0644);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "81:   if (stat(fname, &s) == 0)",
          "82:    return;",
          "83:   if (stat(\"/etc/skel/.bashrc\", &s) == 0) {",
          "85:    fs_logger(\"clone /etc/skel/.bashrc\");",
          "86:   }",
          "87:   free(fname);",
          "",
          "[Removed Lines]",
          "84:    copy_file(\"/etc/skel/.bashrc\", fname, u, g, 0644);",
          "",
          "[Added Lines]",
          "91:   if (is_link(fname)) { // stat on dangling symlinks fails, try again using lstat",
          "92:    fprintf(stderr, \"Error: invalid %s file\\n\", fname);",
          "93:    exit(1);",
          "94:   }",
          "96:    copy_file_as_user(\"/etc/skel/.bashrc\", fname, u, g, 0644);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4f0e977ed3c60660ef28e17af3a0c6b216a4f94c",
      "candidate_info": {
        "commit_hash": "4f0e977ed3c60660ef28e17af3a0c6b216a4f94c",
        "repo": "netblue30/firejail",
        "commit_url": "https://github.com/netblue30/firejail/commit/4f0e977ed3c60660ef28e17af3a0c6b216a4f94c",
        "files": [
          "RELNOTES",
          "src/firejail/bandwidth.c"
        ],
        "message": "security fix",
        "before_after_code_files": [
          "src/firejail/bandwidth.c||src/firejail/bandwidth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/firejail/bandwidth.c||src/firejail/bandwidth.c": [
          "File: src/firejail/bandwidth.c -> src/firejail/bandwidth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "450:  if (setregid(0, 0))",
          "451:   errExit(\"setregid\");",
          "460:  char *arg[4];",
          "462:  arg[1] = \"-c\";",
          "463:  arg[2] = cmd;",
          "464:  arg[3] = NULL;",
          "",
          "[Removed Lines]",
          "453:  if (!cfg.shell)",
          "454:   cfg.shell = guess_shell();",
          "455:  if (!cfg.shell) {",
          "456:   fprintf(stderr, \"Error: no POSIX shell found, please use --shell command line option\\n\");",
          "457:   exit(1);",
          "458:  }",
          "461:  arg[0] = cfg.shell;",
          "",
          "[Added Lines]",
          "454:  arg[0] = \"/bin/sh\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d43fdcd215203868d440ffc42036f5f5ffc89fc",
      "candidate_info": {
        "commit_hash": "5d43fdcd215203868d440ffc42036f5f5ffc89fc",
        "repo": "netblue30/firejail",
        "commit_url": "https://github.com/netblue30/firejail/commit/5d43fdcd215203868d440ffc42036f5f5ffc89fc",
        "files": [
          "RELNOTES",
          "src/firejail/bandwidth.c"
        ],
        "message": "security fix",
        "before_after_code_files": [
          "src/firejail/bandwidth.c||src/firejail/bandwidth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/firejail/bandwidth.c||src/firejail/bandwidth.c": [
          "File: src/firejail/bandwidth.c -> src/firejail/bandwidth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "435:  if (setregid(0, 0))",
          "436:   errExit(\"setregid\");",
          "445:  char *arg[4];",
          "447:  arg[1] = \"-c\";",
          "448:  arg[2] = cmd;",
          "449:  arg[3] = NULL;",
          "",
          "[Removed Lines]",
          "438:  if (!cfg.shell)",
          "439:   cfg.shell = guess_shell();",
          "440:  if (!cfg.shell) {",
          "441:   fprintf(stderr, \"Error: no POSIX shell found, please use --shell command line option\\n\");",
          "442:   exit(1);",
          "443:  }",
          "446:  arg[0] = cfg.shell;",
          "",
          "[Added Lines]",
          "439:  arg[0] = \"/bin/sh\";",
          "",
          "---------------"
        ]
      }
    }
  ]
}