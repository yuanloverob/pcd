{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "285a46d1ca4d8fe1fb7477b8fdbe1d9b377443c4",
      "candidate_info": {
        "commit_hash": "285a46d1ca4d8fe1fb7477b8fdbe1d9b377443c4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/285a46d1ca4d8fe1fb7477b8fdbe1d9b377443c4",
        "files": [
          "deps/uv/src/win/fs.c",
          "deps/uv/src/win/process-stdio.c"
        ],
        "message": "uv: upgrade to 6209fe5",
        "before_after_code_files": [
          "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c",
          "deps/uv/src/win/process-stdio.c||deps/uv/src/win/process-stdio.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/win/fs.c||deps/uv/src/win/fs.c": [
          "File: deps/uv/src/win/fs.c -> deps/uv/src/win/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "390:   DWORD access;",
          "391:   DWORD share;",
          "392:   DWORD disposition;",
          "394:   HANDLE file;",
          "395:   int result, current_umask;",
          "396:   int flags = req->file_flags;",
          "",
          "[Removed Lines]",
          "393:   DWORD attributes;",
          "",
          "[Added Lines]",
          "393:   DWORD attributes = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "404:   switch (flags & (_O_RDONLY | _O_WRONLY | _O_RDWR)) {",
          "405:   case _O_RDONLY:",
          "406:     access = FILE_GENERIC_READ;",
          "407:     break;",
          "408:   case _O_WRONLY:",
          "409:     access = FILE_GENERIC_WRITE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "407:     attributes |= FILE_FLAG_BACKUP_SEMANTICS;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "419:   if (flags & _O_APPEND) {",
          "420:     access &= ~FILE_WRITE_DATA;",
          "421:     access |= FILE_APPEND_DATA;",
          "422:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "423:     attributes &= ~FILE_FLAG_BACKUP_SEMANTICS;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "453:     goto end;",
          "454:   }",
          "457:   if (flags & _O_CREAT) {",
          "458:     if (!((req->mode & ~current_umask) & _S_IWRITE)) {",
          "459:       attributes |= FILE_ATTRIBUTE_READONLY;",
          "",
          "[Removed Lines]",
          "456:   attributes = FILE_ATTRIBUTE_NORMAL;",
          "",
          "[Added Lines]",
          "458:   attributes |= FILE_ATTRIBUTE_NORMAL;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/process-stdio.c||deps/uv/src/win/process-stdio.c": [
          "File: deps/uv/src/win/process-stdio.c -> deps/uv/src/win/process-stdio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "335:           if (fdopt.data.fd <= 2 && loop->last_err.code == UV_EBADF) {",
          "336:             CHILD_STDIO_CRT_FLAGS(buffer, i) = 0;",
          "338:             break;",
          "339:           }",
          "340:           goto error;",
          "",
          "[Removed Lines]",
          "337:             CHILD_STDIO_HANDLE(buffer, i) = NULL;",
          "",
          "[Added Lines]",
          "337:             CHILD_STDIO_HANDLE(buffer, i) = INVALID_HANDLE_VALUE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9da776b332fbb1b7443da3446de9127b98b3d94",
      "candidate_info": {
        "commit_hash": "f9da776b332fbb1b7443da3446de9127b98b3d94",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f9da776b332fbb1b7443da3446de9127b98b3d94",
        "files": [
          "src/node.js"
        ],
        "message": "process: listen for the \"exit\" even on the main repl",
        "before_after_code_files": [
          "src/node.js||src/node.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:       if (NativeModule.require('tty').isatty(0)) {",
          "102:         var repl = Module.requireRepl().start('> ', null, null, true);",
          "104:       } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:         repl.on('exit', function() {",
          "104:           process.exit();",
          "105:         });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "636add246ca78be5c374cfd951c76de7f1010fb9",
      "candidate_info": {
        "commit_hash": "636add246ca78be5c374cfd951c76de7f1010fb9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/636add246ca78be5c374cfd951c76de7f1010fb9",
        "files": [
          "src/node.cc",
          "src/req_wrap.h"
        ],
        "message": "req_wrap: share process_symbol, domain_symbol\n\nShare persistent strings process_symbol and domain_symbol across compilation\nunits. Avoids redefinition errors when src/node.cc includes src/req_wrap.h.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "src/req_wrap.h||src/req_wrap.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"node.h\"",
          "24: #include \"uv.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: #include \"handle_wrap.h\" // HandleWrap::GetActiveHandles()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91: namespace node {",
          "94: static Persistent<Object> process;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95: Persistent<String> process_symbol;",
          "96: Persistent<String> domain_symbol;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "106: static Persistent<String> uncaught_exception_symbol;",
          "107: static Persistent<String> emit_symbol;",
          "110: static Persistent<String> enter_symbol;",
          "111: static Persistent<String> exit_symbol;",
          "112: static Persistent<String> disposed_symbol;",
          "",
          "[Removed Lines]",
          "109: static Persistent<String> domain_symbol;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1020:   TryCatch try_catch;",
          "1024:     enter_symbol = NODE_PSYMBOL(\"enter\");",
          "1025:     exit_symbol = NODE_PSYMBOL(\"exit\");",
          "1026:     disposed_symbol = NODE_PSYMBOL(\"_disposed\");",
          "",
          "[Removed Lines]",
          "1022:   if (domain_symbol.IsEmpty()) {",
          "1023:     domain_symbol = NODE_PSYMBOL(\"domain\");",
          "",
          "[Added Lines]",
          "1025:   if (enter_symbol.IsEmpty()) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2866:     Persistent<Context> context = Context::New();",
          "2867:     Context::Scope context_scope(context);",
          "2870:     Handle<Object> process_l = SetupProcessObject(argc, argv);",
          "2871:     v8_typed_array::AttachBindings(context->Global());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2871:     process_symbol = NODE_PSYMBOL(\"process\");",
          "2872:     domain_symbol = NODE_PSYMBOL(\"domain\");",
          "",
          "---------------"
        ],
        "src/req_wrap.h||src/req_wrap.h": [
          "File: src/req_wrap.h -> src/req_wrap.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: namespace node {",
          "30: template <typename T>",
          "31: class ReqWrap {",
          "",
          "[Removed Lines]",
          "27: static v8::Persistent<v8::String> process_symbol;",
          "28: static v8::Persistent<v8::String> domain_symbol;",
          "",
          "[Added Lines]",
          "28: extern v8::Persistent<v8::String> process_symbol;",
          "29: extern v8::Persistent<v8::String> domain_symbol;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     v8::HandleScope scope;",
          "35:     object_ = v8::Persistent<v8::Object>::New(v8::Object::New());",
          "43:     v8::Local<v8::Value> domain = v8::Context::GetCurrent()",
          "44:                                   ->Global()",
          "45:                                   ->Get(process_symbol)",
          "",
          "[Removed Lines]",
          "38:     if (process_symbol.IsEmpty()) {",
          "39:       process_symbol = NODE_PSYMBOL(\"process\");",
          "40:       domain_symbol = NODE_PSYMBOL(\"domain\");",
          "41:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b866a96cfacf37bf40a9fd7bab6e56868e3c0800",
      "candidate_info": {
        "commit_hash": "b866a96cfacf37bf40a9fd7bab6e56868e3c0800",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b866a96cfacf37bf40a9fd7bab6e56868e3c0800",
        "files": [
          "test/simple/test-child-process-kill.js"
        ],
        "message": "test-child-process-kill: make it pass on windows\n\nThe test would fail if the child process writes anything to the stdout.\nThis doesn't happen on unix, since `cat` is spawned. However, on Windows\n`cmd` is started, which *does* write stuff to it's stdout. This\nmeanlingless assert is now removed.",
        "before_after_code_files": [
          "test/simple/test-child-process-kill.js||test/simple/test-child-process-kill.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-child-process-kill.js||test/simple/test-child-process-kill.js": [
          "File: test/simple/test-child-process-kill.js -> test/simple/test-child-process-kill.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: var cat = spawn(is_windows ? 'cmd' : 'cat');",
          "44: cat.stdout.on('end', function() {",
          "45:   gotStdoutEOF = true;",
          "46: });",
          "",
          "[Removed Lines]",
          "40: cat.stdout.on('data', function(chunk) {",
          "41:   assert.ok(false);",
          "42: });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1444801374bafb9a467a7ddeb214a9f92b311b80",
      "candidate_info": {
        "commit_hash": "1444801374bafb9a467a7ddeb214a9f92b311b80",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1444801374bafb9a467a7ddeb214a9f92b311b80",
        "files": [
          "src/v8_typed_array.cc",
          "src/v8_typed_array.h"
        ],
        "message": "typed arrays: unexport SizeOfArrayElementForType()\n\nIt isn't used anywhere else, so made it an implementation detail in\nv8_typed_array.cc.",
        "before_after_code_files": [
          "src/v8_typed_array.cc||src/v8_typed_array.cc",
          "src/v8_typed_array.h||src/v8_typed_array.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/v8_typed_array.cc||src/v8_typed_array.cc": [
          "File: src/v8_typed_array.cc -> src/v8_typed_array.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: using node::ThrowTypeError;",
          "34: using node::ThrowError;",
          "36: struct BatchedMethods {",
          "37:   const char* name;",
          "38:   v8::Handle<v8::Value> (*func)(const v8::Arguments& args);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: int SizeOfArrayElementForType(v8::ExternalArrayType type) {",
          "37:   switch (type) {",
          "38:     case v8::kExternalByteArray:",
          "39:     case v8::kExternalUnsignedByteArray:",
          "40:       return 1;",
          "41:     case v8::kExternalShortArray:",
          "42:     case v8::kExternalUnsignedShortArray:",
          "43:       return 2;",
          "44:     case v8::kExternalIntArray:",
          "45:     case v8::kExternalUnsignedIntArray:",
          "46:     case v8::kExternalFloatArray:",
          "47:       return 4;",
          "48:     case v8::kExternalDoubleArray:",
          "49:       return 8;",
          "50:     default:",
          "51:       return 0;",
          "52:   }",
          "53: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:     v8::Object* obj = v8::Object::Cast(*value);",
          "66:     void* ptr = obj->GetIndexedPropertiesExternalArrayData();",
          "68:         obj->GetIndexedPropertiesExternalArrayDataType());",
          "69:     int size =",
          "70:         obj->GetIndexedPropertiesExternalArrayDataLength() * element_size;",
          "",
          "[Removed Lines]",
          "67:     int element_size = v8_typed_array::SizeOfArrayElementForType(",
          "",
          "[Added Lines]",
          "86:     int element_size = SizeOfArrayElementForType(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "699:     unsigned int index = args[0]->Uint32Value();",
          "700:     bool little_endian = args[1]->BooleanValue();",
          "703:         args.This()->GetIndexedPropertiesExternalArrayDataType());",
          "704:     int size = args.This()->GetIndexedPropertiesExternalArrayDataLength() *",
          "705:                element_size;",
          "",
          "[Removed Lines]",
          "702:     int element_size = v8_typed_array::SizeOfArrayElementForType(",
          "",
          "[Added Lines]",
          "721:     int element_size = SizeOfArrayElementForType(",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "719:     unsigned int index = args[0]->Int32Value();",
          "720:     bool little_endian = args[2]->BooleanValue();",
          "723:         args.This()->GetIndexedPropertiesExternalArrayDataType());",
          "724:     int size = args.This()->GetIndexedPropertiesExternalArrayDataLength() *",
          "725:                element_size;",
          "",
          "[Removed Lines]",
          "722:     int element_size = v8_typed_array::SizeOfArrayElementForType(",
          "",
          "[Added Lines]",
          "741:     int element_size = SizeOfArrayElementForType(",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "829:            DataView::GetTemplate()->GetFunction());",
          "830: }",
          "851: }  // namespace v8_typed_array",
          "853: NODE_MODULE(node_typed_array, v8_typed_array::AttachBindings)",
          "",
          "[Removed Lines]",
          "832: int SizeOfArrayElementForType(v8::ExternalArrayType type) {",
          "833:   switch (type) {",
          "834:     case v8::kExternalByteArray:",
          "835:     case v8::kExternalUnsignedByteArray:",
          "836:       return 1;",
          "837:     case v8::kExternalShortArray:",
          "838:     case v8::kExternalUnsignedShortArray:",
          "839:       return 2;",
          "840:     case v8::kExternalIntArray:",
          "841:     case v8::kExternalUnsignedIntArray:",
          "842:     case v8::kExternalFloatArray:",
          "843:       return 4;",
          "844:     case v8::kExternalDoubleArray:",
          "845:       return 8;",
          "846:     default:",
          "847:       return 0;",
          "848:   }",
          "849: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/v8_typed_array.h||src/v8_typed_array.h": [
          "File: src/v8_typed_array.h -> src/v8_typed_array.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: void AttachBindings(v8::Handle<v8::Object> obj);",
          "33: }  // namespace v8_typed_array",
          "35: #endif  // V8_TYPED_ARRAY_H_",
          "",
          "[Removed Lines]",
          "31: int SizeOfArrayElementForType(v8::ExternalArrayType type);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}