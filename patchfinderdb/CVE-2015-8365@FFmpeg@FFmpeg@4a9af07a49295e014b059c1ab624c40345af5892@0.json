{
  "cve_id": "CVE-2015-8365",
  "cve_desc": "The smka_decode_frame function in libavcodec/smacker.c in FFmpeg before 2.6.5, 2.7.x before 2.7.3, and 2.8.x through 2.8.2 does not verify that the data size is consistent with the number of channels, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted Smacker data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "4a9af07a49295e014b059c1ab624c40345af5892",
  "patch_info": {
    "commit_hash": "4a9af07a49295e014b059c1ab624c40345af5892",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/4a9af07a49295e014b059c1ab624c40345af5892",
    "files": [
      "libavcodec/smacker.c"
    ],
    "message": "avcodec/smacker: Check that the data size is a multiple of a sample vector\n\nFixes out of array access\nFixes: ce19e41f0ef1e52a23edc488faecdb58/asan_heap-oob_2504e97_4202_ffa0df1baed14022b9bfd4f8ac23d0cb.smk\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavcodec/smacker.c||libavcodec/smacker.c"
    ]
  },
  "patch_diff": {
    "libavcodec/smacker.c||libavcodec/smacker.c": [
      "File: libavcodec/smacker.c -> libavcodec/smacker.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "672:     frame->nb_samples = unp_size / (avctx->channels * (bits + 1));",
      "673:     if ((ret = ff_get_buffer(avctx, frame, 0)) < 0)",
      "674:         return ret;",
      "675:     samples  = (int16_t *)frame->data[0];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "673:     if (unp_size % (avctx->channels * (bits + 1))) {",
      "674:         av_log(avctx, AV_LOG_ERROR, \"unp_size %d is odd\\n\", unp_size);",
      "675:         return AVERROR(EINVAL);",
      "676:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "10398038239b6357a6ebe6f7ba0836280a2673fc",
      "candidate_info": {
        "commit_hash": "10398038239b6357a6ebe6f7ba0836280a2673fc",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/10398038239b6357a6ebe6f7ba0836280a2673fc",
        "files": [
          "libavcodec/smacker.c"
        ],
        "message": "avcodec/smacker: Check that the data size is a multiple of a sample vector\n\nFixes out of array access\nFixes: ce19e41f0ef1e52a23edc488faecdb58/asan_heap-oob_2504e97_4202_ffa0df1baed14022b9bfd4f8ac23d0cb.smk\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 4a9af07a49295e014b059c1ab624c40345af5892)\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/smacker.c||libavcodec/smacker.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ],
          "candidate": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/smacker.c||libavcodec/smacker.c": [
          "File: libavcodec/smacker.c -> libavcodec/smacker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "670:     frame->nb_samples = unp_size / (avctx->channels * (bits + 1));",
          "671:     if ((ret = ff_get_buffer(avctx, frame, 0)) < 0)",
          "672:         return ret;",
          "673:     samples  = (int16_t *)frame->data[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "671:     if (unp_size % (avctx->channels * (bits + 1))) {",
          "672:         av_log(avctx, AV_LOG_ERROR, \"unp_size %d is odd\\n\", unp_size);",
          "673:         return AVERROR(EINVAL);",
          "674:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3449b47dc548fdc91ee46c6e3de04ad8b6b3d045",
      "candidate_info": {
        "commit_hash": "3449b47dc548fdc91ee46c6e3de04ad8b6b3d045",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/3449b47dc548fdc91ee46c6e3de04ad8b6b3d045",
        "files": [
          "libavcodec/smacker.c"
        ],
        "message": "avcodec/smacker: Check that the data size is a multiple of a sample vector\n\nFixes out of array access\nFixes: ce19e41f0ef1e52a23edc488faecdb58/asan_heap-oob_2504e97_4202_ffa0df1baed14022b9bfd4f8ac23d0cb.smk\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 4a9af07a49295e014b059c1ab624c40345af5892)\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/smacker.c||libavcodec/smacker.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ],
          "candidate": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/smacker.c||libavcodec/smacker.c": [
          "File: libavcodec/smacker.c -> libavcodec/smacker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "669:     frame->nb_samples = unp_size / (avctx->channels * (bits + 1));",
          "670:     if ((ret = ff_get_buffer(avctx, frame, 0)) < 0)",
          "671:         return ret;",
          "672:     samples  = (int16_t *)frame->data[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "670:     if (unp_size % (avctx->channels * (bits + 1))) {",
          "671:         av_log(avctx, AV_LOG_ERROR, \"unp_size %d is odd\\n\", unp_size);",
          "672:         return AVERROR(EINVAL);",
          "673:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf2d26eacf6226e525e6643dcc3919702359485a",
      "candidate_info": {
        "commit_hash": "cf2d26eacf6226e525e6643dcc3919702359485a",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/cf2d26eacf6226e525e6643dcc3919702359485a",
        "files": [
          "libavcodec/smacker.c"
        ],
        "message": "avcodec/smacker: Check that the data size is a multiple of a sample vector\n\nFixes out of array access\nFixes: ce19e41f0ef1e52a23edc488faecdb58/asan_heap-oob_2504e97_4202_ffa0df1baed14022b9bfd4f8ac23d0cb.smk\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 4a9af07a49295e014b059c1ab624c40345af5892)\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/smacker.c||libavcodec/smacker.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ],
          "candidate": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/smacker.c||libavcodec/smacker.c": [
          "File: libavcodec/smacker.c -> libavcodec/smacker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "670:     frame->nb_samples = unp_size / (avctx->channels * (bits + 1));",
          "671:     if ((ret = ff_get_buffer(avctx, frame, 0)) < 0)",
          "672:         return ret;",
          "673:     samples  = (int16_t *)frame->data[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "671:     if (unp_size % (avctx->channels * (bits + 1))) {",
          "672:         av_log(avctx, AV_LOG_ERROR, \"unp_size %d is odd\\n\", unp_size);",
          "673:         return AVERROR(EINVAL);",
          "674:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "093e58228e77f28fd8adf50435b30dcb9b246164",
      "candidate_info": {
        "commit_hash": "093e58228e77f28fd8adf50435b30dcb9b246164",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/093e58228e77f28fd8adf50435b30dcb9b246164",
        "files": [
          "libavcodec/smacker.c"
        ],
        "message": "avcodec/smacker: Check that the data size is a multiple of a sample vector\n\nFixes out of array access\nFixes: ce19e41f0ef1e52a23edc488faecdb58/asan_heap-oob_2504e97_4202_ffa0df1baed14022b9bfd4f8ac23d0cb.smk\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 4a9af07a49295e014b059c1ab624c40345af5892)\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/smacker.c||libavcodec/smacker.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ],
          "candidate": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/smacker.c||libavcodec/smacker.c": [
          "File: libavcodec/smacker.c -> libavcodec/smacker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "672:     frame->nb_samples = unp_size / (avctx->channels * (bits + 1));",
          "673:     if ((ret = ff_get_buffer(avctx, frame, 0)) < 0)",
          "674:         return ret;",
          "675:     samples  = (int16_t *)frame->data[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "673:     if (unp_size % (avctx->channels * (bits + 1))) {",
          "674:         av_log(avctx, AV_LOG_ERROR, \"unp_size %d is odd\\n\", unp_size);",
          "675:         return AVERROR(EINVAL);",
          "676:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2b0cda395f2330fc0dbebadb612b758bf46ccf47",
      "candidate_info": {
        "commit_hash": "2b0cda395f2330fc0dbebadb612b758bf46ccf47",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/2b0cda395f2330fc0dbebadb612b758bf46ccf47",
        "files": [
          "libavcodec/smacker.c"
        ],
        "message": "avcodec/smacker: Check that the data size is a multiple of a sample vector\n\nFixes out of array access\nFixes: ce19e41f0ef1e52a23edc488faecdb58/asan_heap-oob_2504e97_4202_ffa0df1baed14022b9bfd4f8ac23d0cb.smk\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 4a9af07a49295e014b059c1ab624c40345af5892)\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavcodec/smacker.c||libavcodec/smacker.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ],
          "candidate": [
            "libavcodec/smacker.c||libavcodec/smacker.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/smacker.c||libavcodec/smacker.c": [
          "File: libavcodec/smacker.c -> libavcodec/smacker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "670:     frame->nb_samples = unp_size / (avctx->channels * (bits + 1));",
          "671:     if ((ret = ff_get_buffer(avctx, frame, 0)) < 0)",
          "672:         return ret;",
          "673:     samples  = (int16_t *)frame->data[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "671:     if (unp_size % (avctx->channels * (bits + 1))) {",
          "672:         av_log(avctx, AV_LOG_ERROR, \"unp_size %d is odd\\n\", unp_size);",
          "673:         return AVERROR(EINVAL);",
          "674:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}