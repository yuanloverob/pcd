{
  "cve_id": "CVE-2022-36039",
  "cve_desc": "Rizin is a UNIX-like reverse engineering framework and command-line toolset. Versions 0.4.0 and prior are vulnerable to out-of-bounds write when parsing DEX files. A user opening a malicious DEX file could be affected by this vulnerability, allowing an attacker to execute code on the user's machine. A patch is available on the `dev` branch of the repository.",
  "repo": "rizinorg/rizin",
  "patch_hash": "1524f85211445e41506f98180f8f69f7bf115406",
  "patch_info": {
    "commit_hash": "1524f85211445e41506f98180f8f69f7bf115406",
    "repo": "rizinorg/rizin",
    "commit_url": "https://github.com/rizinorg/rizin/commit/1524f85211445e41506f98180f8f69f7bf115406",
    "files": [
      "librz/bin/format/dex/dex.c"
    ],
    "message": "fix #2969 - oob write (1 byte) in dex.c",
    "before_after_code_files": [
      "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c"
    ]
  },
  "patch_diff": {
    "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c": [
      "File: librz/bin/format/dex/dex.c -> librz/bin/format/dex/dex.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "81:  DexString *string = NULL;",
      "83:  read = rz_buf_uleb128(buf, &size);",
      "84:  data = malloc(size + 1);",
      "85:  if (!data || rz_buf_read(buf, (ut8 *)data, size) != size) {",
      "86:   free(data);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "84:  if (UT64_ADD_OVFCHK(size, 1)) {",
      "85:   return NULL;",
      "86:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "905:  }",
      "906:  char *demangled = strdup(library + 1);",
      "907:  rz_str_replace_ch(demangled, '/', '.', 1);",
      "909:  return demangled;",
      "910: }",
      "",
      "[Removed Lines]",
      "908:  demangled[strlen(demangled) - 1] = 0;",
      "",
      "[Added Lines]",
      "912:  if (RZ_STR_ISNOTEMPTY(demangled)) {",
      "913:   demangled[strlen(demangled) - 1] = 0;",
      "914:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e3a9a3aff073d92bb380242a79a4b695ed286fd8",
      "candidate_info": {
        "commit_hash": "e3a9a3aff073d92bb380242a79a4b695ed286fd8",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/e3a9a3aff073d92bb380242a79a4b695ed286fd8",
        "files": [
          "librz/bin/format/mach0/coresymbolication.c",
          "librz/bin/p/bin_dyldcache.c"
        ],
        "message": "fix #2970 - oob read in coresymbolication.c and in bin_dyldcache.c",
        "before_after_code_files": [
          "librz/bin/format/mach0/coresymbolication.c||librz/bin/format/mach0/coresymbolication.c",
          "librz/bin/p/bin_dyldcache.c||librz/bin/p/bin_dyldcache.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/rizinorg/rizin/pull/2977"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "librz/bin/format/mach0/coresymbolication.c||librz/bin/format/mach0/coresymbolication.c": [
          "File: librz/bin/format/mach0/coresymbolication.c -> librz/bin/format/mach0/coresymbolication.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "199:    RzCoreSymCacheElementSegment *seg = &result->segments[i];",
          "200:    seg->paddr = seg->vaddr = rz_read_le64(cursor);",
          "201:    cursor += 8;",
          "203:     goto beach;",
          "204:    }",
          "205:    seg->size = seg->vsize = rz_read_le64(cursor);",
          "",
          "[Removed Lines]",
          "202:    if (cursor >= end) {",
          "",
          "[Added Lines]",
          "202:    if ((cursor + 8) >= end) {",
          "",
          "---------------"
        ],
        "librz/bin/p/bin_dyldcache.c||librz/bin/p/bin_dyldcache.c": [
          "File: librz/bin/p/bin_dyldcache.c -> librz/bin/p/bin_dyldcache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "434:    ut8 *pointers_end = pointers + sections[i].size;",
          "436:    for (; cursor < pointers_end; cursor += 8) {",
          "437:     ut64 pointer_to_class = rz_read_le64(cursor);",
          "439:     RzBinClass *klass;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "437:     if ((cursor + 8) > pointers_end) {",
          "438:      MACH0_(mach0_free)",
          "439:      (mach0);",
          "440:      goto beach;",
          "441:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38d8006cd609ac75de82b705891d3508d2c218d5",
      "candidate_info": {
        "commit_hash": "38d8006cd609ac75de82b705891d3508d2c218d5",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/38d8006cd609ac75de82b705891d3508d2c218d5",
        "files": [
          "librz/bin/format/pyc/marshal.c"
        ],
        "message": "fix #2963 - oob write (1 byte) in pyc/marshal.c",
        "before_after_code_files": [
          "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/rizinorg/rizin/pull/2977"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "librz/bin/format/pyc/marshal.c||librz/bin/format/pyc/marshal.c": [
          "File: librz/bin/format/pyc/marshal.c -> librz/bin/format/pyc/marshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "313: static pyc_object *get_complex_object(RzBinPycObj *pyc, RzBuffer *buffer) {",
          "314:  pyc_object *ret = NULL;",
          "315:  bool error = false;",
          "317:  ut32 n1 = 0;",
          "318:  ut32 n2 = 0;",
          "",
          "[Removed Lines]",
          "316:  ut32 size = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "327:  } else {",
          "328:   n1 = get_st32(buffer, &error);",
          "329:  }",
          "331:   free(ret);",
          "332:   return NULL;",
          "333:  }",
          "",
          "[Removed Lines]",
          "330:  if (error) {",
          "",
          "[Added Lines]",
          "329:  if (error || UT32_ADD_OVFCHK(n1, 1)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "336:   return NULL;",
          "337:  }",
          "341:   RZ_FREE(s1);",
          "342:   RZ_FREE(ret);",
          "343:   return NULL;",
          "",
          "[Removed Lines]",
          "339:  size = rz_buf_read(buffer, s1, n1);",
          "340:  if (size != n1) {",
          "",
          "[Added Lines]",
          "338:  if (rz_buf_read(buffer, s1, n1) != n1) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "347:  if ((pyc->magic_int & 0xffff) <= 62061) {",
          "348:   n2 = get_ut8(buffer, &error);",
          "350:   n2 = get_st32(buffer, &error);",
          "352:   return NULL;",
          "353:  }",
          "354:  ut8 *s2 = malloc(n2 + 1);",
          "",
          "[Removed Lines]",
          "349:  } else",
          "351:  if (error) {",
          "",
          "[Added Lines]",
          "347:  } else {",
          "349:  }",
          "350:  if (error || UT32_ADD_OVFCHK(n2, 1)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "356:   return NULL;",
          "357:  }",
          "361:   RZ_FREE(s1);",
          "362:   RZ_FREE(s2);",
          "363:   RZ_FREE(ret);",
          "",
          "[Removed Lines]",
          "359:  size = rz_buf_read(buffer, s2, n2);",
          "360:  if (size != n2) {",
          "",
          "[Added Lines]",
          "358:  if (rz_buf_read(buffer, s2, n2) != n2) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c7f621c968bba1b24a92796bb0f4b0408c9bfb1",
      "candidate_info": {
        "commit_hash": "2c7f621c968bba1b24a92796bb0f4b0408c9bfb1",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/2c7f621c968bba1b24a92796bb0f4b0408c9bfb1",
        "files": [
          "librz/bin/bin.c",
          "librz/demangler/demangler.c"
        ],
        "message": "fix #2962 - oob read in bin.c",
        "before_after_code_files": [
          "librz/bin/bin.c||librz/bin/bin.c",
          "librz/demangler/demangler.c||librz/demangler/demangler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/rizinorg/rizin/pull/2977"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "librz/bin/bin.c||librz/bin/bin.c": [
          "File: librz/bin/bin.c -> librz/bin/bin.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1382:   if (!found) {",
          "1383:    lib = NULL;",
          "1384:   }",
          "1387:    lib = bin->file;",
          "1388:    symbol += len;",
          "1389:    if (*symbol == '_') {",
          "",
          "[Removed Lines]",
          "1385:   size_t len = strlen(bin->file);",
          "1386:   if (!rz_str_ncasecmp(symbol, bin->file, len)) {",
          "",
          "[Added Lines]",
          "1385:   size_t len = bin ? strlen(bin->file) : 0;",
          "1386:   if (bin && len > 0 && !rz_str_ncasecmp(symbol, bin->file, len)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1432:  case RZ_BIN_LANGUAGE_RUST: demangled = NULL; break;",
          "1433:  case RZ_BIN_LANGUAGE_CXX: demangled = NULL; break;",
          "1434: #endif",
          "1436:  }",
          "1437:  if (libs && demangled && lib) {",
          "1438:   char *d = rz_str_newf(\"%s_%s\", lib, demangled);",
          "",
          "[Removed Lines]",
          "1435:  default: rz_demangler_resolve(bin->demangler, symbol, language, &demangled);",
          "",
          "[Added Lines]",
          "1435:  default:",
          "1436:   if (bin) {",
          "1437:    rz_demangler_resolve(bin->demangler, symbol, language, &demangled);",
          "1438:   }",
          "1439:   break;",
          "",
          "---------------"
        ],
        "librz/demangler/demangler.c||librz/demangler/demangler.c": [
          "File: librz/demangler/demangler.c -> librz/demangler/demangler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "187: RZ_API bool rz_demangler_resolve(RZ_NONNULL RzDemangler *dem, RZ_NULLABLE const char *symbol, RZ_NONNULL const char *language, RZ_NONNULL RZ_OWN char **output) {",
          "190:  if (RZ_STR_ISEMPTY(symbol)) {",
          "",
          "[Removed Lines]",
          "188:  rz_return_val_if_fail(language && dem->plugins && output, false);",
          "",
          "[Added Lines]",
          "188:  rz_return_val_if_fail(language && dem && dem->plugins && output, false);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "58926dffbe819fe9ebf5062f7130e026351cae01",
      "candidate_info": {
        "commit_hash": "58926dffbe819fe9ebf5062f7130e026351cae01",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/58926dffbe819fe9ebf5062f7130e026351cae01",
        "files": [
          "librz/bin/p/bin_qnx.c"
        ],
        "message": "fix #2964 - double-free in bin_qnx.c",
        "before_after_code_files": [
          "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/rizinorg/rizin/pull/2977"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c": [
          "File: librz/bin/p/bin_qnx.c -> librz/bin/p/bin_qnx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "191: static RzList *relocs(RzBinFile *bf) {",
          "192:  rz_return_val_if_fail(bf && bf->o, NULL);",
          "193:  QnxObj *qo = bf->o->bin_obj;",
          "195: }",
          "197: static void header(RzBinFile *bf) {",
          "",
          "[Removed Lines]",
          "194:  return rz_list_clone(qo->fixups);",
          "",
          "[Added Lines]",
          "194:  RzBinReloc *reloc = NULL;",
          "195:  RzListIter *it = NULL;",
          "196:  RzList *relocs = rz_list_newf(free);",
          "197:  if (!relocs) {",
          "198:   return NULL;",
          "199:  }",
          "201:  rz_list_foreach (qo->fixups, it, reloc) {",
          "202:   RzBinReloc *copy = RZ_NEW0(RzBinReloc);",
          "203:   if (!copy) {",
          "204:    break;",
          "205:   }",
          "206:   copy->vaddr = reloc->vaddr;",
          "207:   copy->paddr = reloc->paddr;",
          "208:   copy->type = reloc->type;",
          "209:   rz_list_append(relocs, copy);",
          "210:  }",
          "211:  return relocs;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "738f72c7940b39c94d8ff839034cb022cf06b5d9",
      "candidate_info": {
        "commit_hash": "738f72c7940b39c94d8ff839034cb022cf06b5d9",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/738f72c7940b39c94d8ff839034cb022cf06b5d9",
        "files": [
          "librz/bin/format/dex/dex.c"
        ],
        "message": "fix #2954 - oob read in dex.c",
        "before_after_code_files": [
          "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/rizinorg/rizin/pull/2977"
        ],
        "olp_code_files": {
          "patch": [
            "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c"
          ],
          "candidate": [
            "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c"
          ]
        }
      },
      "candidate_diff": {
        "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c": [
          "File: librz/bin/format/dex/dex.c -> librz/bin/format/dex/dex.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "816:  rz_strbuf_append(sb, \"(\");",
          "817:  for (ut32 i = 0; i < proto_id->type_list_size; ++i) {",
          "818:   ut32 type_idx = proto_id->type_list[i];",
          "820:   const DexString *param = dex_resolve_string_id_native(dex, dex->types[type_idx]);",
          "821:   if (!param) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "819:   if (type_idx >= dex->type_ids_size) {",
          "820:    continue;",
          "821:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}