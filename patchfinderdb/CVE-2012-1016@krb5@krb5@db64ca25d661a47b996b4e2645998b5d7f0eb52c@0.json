{
  "cve_id": "CVE-2012-1016",
  "cve_desc": "The pkinit_server_return_padata function in plugins/preauth/pkinit/pkinit_srv.c in the PKINIT implementation in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.10.4 attempts to find an agility KDF identifier in inappropriate circumstances, which allows remote attackers to cause a denial of service (NULL pointer dereference and daemon crash) via a crafted Draft 9 request.",
  "repo": "krb5/krb5",
  "patch_hash": "db64ca25d661a47b996b4e2645998b5d7f0eb52c",
  "patch_info": {
    "commit_hash": "db64ca25d661a47b996b4e2645998b5d7f0eb52c",
    "repo": "krb5/krb5",
    "commit_url": "https://github.com/krb5/krb5/commit/db64ca25d661a47b996b4e2645998b5d7f0eb52c",
    "files": [
      "src/plugins/preauth/pkinit/pkinit_srv.c"
    ],
    "message": "PKINIT (draft9) null ptr deref [CVE-2012-1016]\n\nDon't check for an agility KDF identifier in the non-draft9 reply\nstructure when we're building a draft9 reply, because it'll be NULL.\n\nThe KDC plugin for PKINIT can dereference a null pointer when handling\na draft9 request, leading to a crash of the KDC process.  An attacker\nwould need to have a valid PKINIT certificate, or an unauthenticated\nattacker could execute the attack if anonymous PKINIT is enabled.\n\nCVSSv2 vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:P/RL:O/RC:C\n\n[tlyu@mit.edu: reformat comment and edit log message]\n\n(back ported from commit cd5ff932c9d1439c961b0cf9ccff979356686aff)\n\nticket: 7527 (new)\nversion_fixed: 1.10.4\nstatus: resolved",
    "before_after_code_files": [
      "src/plugins/preauth/pkinit/pkinit_srv.c||src/plugins/preauth/pkinit/pkinit_srv.c"
    ]
  },
  "patch_diff": {
    "src/plugins/preauth/pkinit/pkinit_srv.c||src/plugins/preauth/pkinit/pkinit_srv.c": [
      "File: src/plugins/preauth/pkinit/pkinit_srv.c -> src/plugins/preauth/pkinit/pkinit_srv.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1016:          rep9->choice == choice_pa_pk_as_rep_draft9_dhSignedData) ||",
      "1017:         (rep != NULL && rep->choice == choice_pa_pk_as_rep_dhInfo)) {",
      "1022:             secret.length = server_key_len;",
      "1024:             retval = pkinit_alg_agility_kdf(context, &secret,",
      "",
      "[Removed Lines]",
      "1020:         if (rep->u.dh_Info.kdfID) {",
      "1021:             secret.data = server_key;",
      "",
      "[Added Lines]",
      "1021:         if (rep != NULL && rep->u.dh_Info.kdfID) {",
      "1022:             secret.data = (char *)server_key;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cd5ff932c9d1439c961b0cf9ccff979356686aff",
      "candidate_info": {
        "commit_hash": "cd5ff932c9d1439c961b0cf9ccff979356686aff",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/cd5ff932c9d1439c961b0cf9ccff979356686aff",
        "files": [
          "src/plugins/preauth/pkinit/pkinit_srv.c"
        ],
        "message": "PKINIT (draft9) null ptr deref [CVE-2012-1016]\n\nDon't check for an agility KDF identifier in the non-draft9 reply\nstructure when we're building a draft9 reply, because it'll be NULL.\n\nThe KDC plugin for PKINIT can dereference a null pointer when handling\na draft9 request, leading to a crash of the KDC process.  An attacker\nwould need to have a valid PKINIT certificate, or an unauthenticated\nattacker could execute the attack if anonymous PKINIT is enabled.\n\nCVSSv2 vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:P/RL:O/RC:C\n\n[tlyu@mit.edu: reformat comment and edit log message]\n\nticket: 7506 (new)\ntarget_version: 1.11\ntags: pullup",
        "before_after_code_files": [
          "src/plugins/preauth/pkinit/pkinit_srv.c||src/plugins/preauth/pkinit/pkinit_srv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/plugins/preauth/pkinit/pkinit_srv.c||src/plugins/preauth/pkinit/pkinit_srv.c"
          ],
          "candidate": [
            "src/plugins/preauth/pkinit/pkinit_srv.c||src/plugins/preauth/pkinit/pkinit_srv.c"
          ]
        }
      },
      "candidate_diff": {
        "src/plugins/preauth/pkinit/pkinit_srv.c||src/plugins/preauth/pkinit/pkinit_srv.c": [
          "File: src/plugins/preauth/pkinit/pkinit_srv.c -> src/plugins/preauth/pkinit/pkinit_srv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1026:          rep9->choice == choice_pa_pk_as_rep_draft9_dhSignedData) ||",
          "1027:         (rep != NULL && rep->choice == choice_pa_pk_as_rep_dhInfo)) {",
          "1031:             secret.data = (char *)server_key;",
          "1032:             secret.length = server_key_len;",
          "",
          "[Removed Lines]",
          "1030:         if (rep->u.dh_Info.kdfID) {",
          "",
          "[Added Lines]",
          "1031:         if (rep != NULL && rep->u.dh_Info.kdfID) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6550da5ecc58af19bc2e4e6c1108d25b210c6ef8",
      "candidate_info": {
        "commit_hash": "6550da5ecc58af19bc2e4e6c1108d25b210c6ef8",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/6550da5ecc58af19bc2e4e6c1108d25b210c6ef8",
        "files": [
          "src/plugins/preauth/pkinit/pkinit_srv.c"
        ],
        "message": "PKINIT (draft9) null ptr deref [CVE-2012-1016]\n\nDon't check for an agility KDF identifier in the non-draft9 reply\nstructure when we're building a draft9 reply, because it'll be NULL.\n\nThe KDC plugin for PKINIT can dereference a null pointer when handling\na draft9 request, leading to a crash of the KDC process.  An attacker\nwould need to have a valid PKINIT certificate, or an unauthenticated\nattacker could execute the attack if anonymous PKINIT is enabled.\n\nCVSSv2 vector: AV:N/AC:M/Au:N/C:N/I:N/A:P/E:P/RL:O/RC:C\n\n[tlyu@mit.edu: reformat comment and edit log message]\n\n(cherry picked from commit cd5ff932c9d1439c961b0cf9ccff979356686aff)\n\nticket: 7506\nversion_fixed: 1.11\nstatus: resolved",
        "before_after_code_files": [
          "src/plugins/preauth/pkinit/pkinit_srv.c||src/plugins/preauth/pkinit/pkinit_srv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/plugins/preauth/pkinit/pkinit_srv.c||src/plugins/preauth/pkinit/pkinit_srv.c"
          ],
          "candidate": [
            "src/plugins/preauth/pkinit/pkinit_srv.c||src/plugins/preauth/pkinit/pkinit_srv.c"
          ]
        }
      },
      "candidate_diff": {
        "src/plugins/preauth/pkinit/pkinit_srv.c||src/plugins/preauth/pkinit/pkinit_srv.c": [
          "File: src/plugins/preauth/pkinit/pkinit_srv.c -> src/plugins/preauth/pkinit/pkinit_srv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1026:          rep9->choice == choice_pa_pk_as_rep_draft9_dhSignedData) ||",
          "1027:         (rep != NULL && rep->choice == choice_pa_pk_as_rep_dhInfo)) {",
          "1031:             secret.data = (char *)server_key;",
          "1032:             secret.length = server_key_len;",
          "",
          "[Removed Lines]",
          "1030:         if (rep->u.dh_Info.kdfID) {",
          "",
          "[Added Lines]",
          "1031:         if (rep != NULL && rep->u.dh_Info.kdfID) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}