{
  "cve_id": "CVE-2019-19645",
  "cve_desc": "alter.c in SQLite through 3.30.1 allows attackers to trigger infinite recursion via certain types of self-referential views in conjunction with ALTER TABLE statements.",
  "repo": "sqlite/sqlite",
  "patch_hash": "38096961c7cd109110ac21d3ed7dad7e0cb0ae06",
  "patch_info": {
    "commit_hash": "38096961c7cd109110ac21d3ed7dad7e0cb0ae06",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/38096961c7cd109110ac21d3ed7dad7e0cb0ae06",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/alter.c",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab3.test"
    ],
    "message": "Avoid infinite recursion in the ALTER TABLE code when a view contains an unused CTE that references, directly or indirectly, the view itself.\n\nFossilOrigin-Name: 1d2e53a39b87e364685e21de137655b6eee725e4c6d27fc90865072d7c5892b5",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/alter.c||src/alter.c",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: c5d44143599f3fe98492b2b900fa3d77925c7be545096251055ceeab899a41f1",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/alter.c||src/alter.c": [
      "File: src/alter.c -> src/alter.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "760:   Parse *pParse = pWalker->pParse;",
      "761:   int i;",
      "762:   if( pParse->nErr ) return WRC_Abort;",
      "763:   if( ALWAYS(p->pEList) ){",
      "764:     ExprList *pList = p->pEList;",
      "765:     for(i=0; i<pList->nExpr; i++){",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "763:   if( p->selFlags & SF_View ) return WRC_Prune;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "853: static int renameColumnSelectCb(Walker *pWalker, Select *p){",
      "854:   renameWalkWith(pWalker, p);",
      "855:   return WRC_Continue;",
      "856: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "855:   if( p->selFlags & SF_View ) return WRC_Prune;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1316:   if( sParse.pNewTable ){",
      "1317:     Select *pSelect = sParse.pNewTable->pSelect;",
      "1318:     if( pSelect ){",
      "1319:       sParse.rc = SQLITE_OK;",
      "1321:       rc = (db->mallocFailed ? SQLITE_NOMEM : sParse.rc);",
      "1322:       if( rc==SQLITE_OK ){",
      "1323:         sqlite3WalkSelect(&sWalker, pSelect);",
      "",
      "[Removed Lines]",
      "1320:       sqlite3SelectPrep(&sParse, sParse.pNewTable->pSelect, 0);",
      "",
      "[Added Lines]",
      "1321:       pSelect->selFlags &= ~SF_View;",
      "1323:       sqlite3SelectPrep(&sParse, pSelect, 0);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1434:   int i;",
      "1435:   RenameCtx *p = pWalker->u.pRename;",
      "1436:   SrcList *pSrc = pSelect->pSrc;",
      "1437:   if( pSrc==0 ){",
      "1438:     assert( pWalker->pParse->db->mallocFailed );",
      "1439:     return WRC_Abort;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1440:   if( pSelect->selFlags & SF_View ) return WRC_Prune;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1514:         if( pTab->pSelect ){",
      "1515:           if( isLegacy==0 ){",
      "1516:             NameContext sNC;",
      "1517:             memset(&sNC, 0, sizeof(sNC));",
      "1518:             sNC.pParse = &sParse;",
      "1520:             sqlite3SelectPrep(&sParse, pTab->pSelect, &sNC);",
      "1521:             if( sParse.nErr ) rc = sParse.rc;",
      "1522:             sqlite3WalkSelect(&sWalker, pTab->pSelect);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1520:             Select *pSelect = pTab->pSelect;",
      "1525:             assert( pSelect->selFlags & SF_View );",
      "1526:             pSelect->selFlags &= ~SF_View;",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2488:   if( IN_RENAME_OBJECT ){",
      "2489:     p->pSelect = pSelect;",
      "2490:     pSelect = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2488:   pSelect->selFlags |= SF_View;",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "487:   ALTER TABLE a RENAME a TO b;",
      "488: }",
      "491: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490: #------------------------------------------------------------------------",
      "491: #",
      "492: reset_db",
      "493: do_execsql_test 22.1 {",
      "494:   CREATE TABLE t1(a);",
      "495:   CREATE VIEW v2(b) AS SELECT * FROM v2;",
      "496: }",
      "498: do_catchsql_test 22.2 {",
      "499:   ALTER TABLE t1 RENAME TO t4;",
      "500: } {1 {error in view v2: view v2 is circularly defined}}",
      "502: do_execsql_test 22.3 {",
      "503:   DROP VIEW v2;",
      "504:   CREATE VIEW v2(b) AS WITH t3 AS (SELECT b FROM v2) SELECT * FROM t3;",
      "505: }",
      "507: breakpoint",
      "508: do_catchsql_test 22.4 {",
      "509:   ALTER TABLE t1 RENAME TO t4;",
      "510: } {1 {error in view v2: view v2 is circularly defined}}",
      "512: do_execsql_test 22.5 {",
      "513:   DROP VIEW v2;",
      "514:   CREATE VIEW v2(b) AS WITH t3 AS (SELECT b FROM v2) VALUES(1);",
      "515: }",
      "517: do_catchsql_test 22.6 {",
      "518:   ALTER TABLE t1 RENAME TO t4;",
      "519: } {0 {}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3728b84c03807c310fe6aacdf7211f9255ec0d4a",
      "candidate_info": {
        "commit_hash": "3728b84c03807c310fe6aacdf7211f9255ec0d4a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3728b84c03807c310fe6aacdf7211f9255ec0d4a",
        "files": [
          "ext/rbu/sqlite3rbu.c",
          "manifest",
          "manifest.uuid",
          "src/vdbe.h",
          "src/vdbeaux.c"
        ],
        "message": "Fix more compiler warnings.\n\nFossilOrigin-Name: 1b85442b614df0808c10c34ec281282e5dfd93d6d5f9737b51263ffaa4da5c72",
        "before_after_code_files": [
          "ext/rbu/sqlite3rbu.c||ext/rbu/sqlite3rbu.c",
          "manifest.uuid||manifest.uuid",
          "src/vdbe.h||src/vdbe.h",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rbu/sqlite3rbu.c||ext/rbu/sqlite3rbu.c": [
          "File: ext/rbu/sqlite3rbu.c -> ext/rbu/sqlite3rbu.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1697:     int iCid = sqlite3_column_int(pXInfo, 1);",
          "1698:     int bDesc = sqlite3_column_int(pXInfo, 3);",
          "1699:     const char *zCollate = (const char*)sqlite3_column_text(pXInfo, 4);",
          "1701:     const char *zType;",
          "1703:     if( iCid==-2 ){",
          "",
          "[Removed Lines]",
          "1700:     const char *zCol;",
          "",
          "[Added Lines]",
          "1700:     const char *zCol = 0;",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1eef4ddea9a2a8c97b97183402c774caa40ef906ea9cccade307381b29a9785d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.h||src/vdbe.h": [
          "File: src/vdbe.h -> src/vdbe.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "223: #endif",
          "224: void sqlite3VdbeAddParseSchemaOp(Vdbe*,int,char*);",
          "225: void sqlite3VdbeChangeOpcode(Vdbe*, u32 addr, u8);",
          "229: void sqlite3VdbeChangeP5(Vdbe*, u16 P5);",
          "230: void sqlite3VdbeJumpHere(Vdbe*, int addr);",
          "231: int sqlite3VdbeChangeToNoop(Vdbe*, int addr);",
          "",
          "[Removed Lines]",
          "226: void sqlite3VdbeChangeP1(Vdbe*, u32 addr, int P1);",
          "227: void sqlite3VdbeChangeP2(Vdbe*, u32 addr, int P2);",
          "228: void sqlite3VdbeChangeP3(Vdbe*, u32 addr, int P3);",
          "",
          "[Added Lines]",
          "226: void sqlite3VdbeChangeP1(Vdbe*, int addr, int P1);",
          "227: void sqlite3VdbeChangeP2(Vdbe*, int addr, int P2);",
          "228: void sqlite3VdbeChangeP3(Vdbe*, int addr, int P3);",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "980: void sqlite3VdbeChangeOpcode(Vdbe *p, u32 addr, u8 iNewOpcode){",
          "981:   sqlite3VdbeGetOp(p,addr)->opcode = iNewOpcode;",
          "982: }",
          "984:   sqlite3VdbeGetOp(p,addr)->p1 = val;",
          "985: }",
          "987:   sqlite3VdbeGetOp(p,addr)->p2 = val;",
          "988: }",
          "990:   sqlite3VdbeGetOp(p,addr)->p3 = val;",
          "991: }",
          "992: void sqlite3VdbeChangeP5(Vdbe *p, u16 p5){",
          "",
          "[Removed Lines]",
          "983: void sqlite3VdbeChangeP1(Vdbe *p, u32 addr, int val){",
          "986: void sqlite3VdbeChangeP2(Vdbe *p, u32 addr, int val){",
          "989: void sqlite3VdbeChangeP3(Vdbe *p, u32 addr, int val){",
          "",
          "[Added Lines]",
          "983: void sqlite3VdbeChangeP1(Vdbe *p, int addr, int val){",
          "986: void sqlite3VdbeChangeP2(Vdbe *p, int addr, int val){",
          "989: void sqlite3VdbeChangeP3(Vdbe *p, int addr, int val){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "634ac144888673e73693944f513c2dd39127bbe5",
      "candidate_info": {
        "commit_hash": "634ac144888673e73693944f513c2dd39127bbe5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/634ac144888673e73693944f513c2dd39127bbe5",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a \"jump or move depends on uninitialized value\" valgrind error that could occur in fts5 when dealing with a corrupt database.\n\nFossilOrigin-Name: 3518c09b944c92974939b1de244401afd34de5d9aa75050e5ad55581a94e1e71",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "691:       }else{",
          "693:         pRet->szLeaf = fts5GetU16(&pRet->p[2]);",
          "694:       }",
          "695:     }",
          "696:     p->rc = rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "694:         pRet->p[nByte] = 0x00;",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "416:   SELECT * FROM t1('one AND two');",
          "417: } {1 {database disk image is malformed}}",
          "419: sqlite3_fts5_may_be_corrupt 0",
          "420: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "419: #-------------------------------------------------------------------------",
          "420: reset_db",
          "421: do_test 10.0 {",
          "422:   sqlite3 db {}",
          "423:   db deserialize [decode_hexdb {",
          "424: | size 32768 pagesize 4096 filename c9.db",
          "425: | page 1 offset 0",
          "426: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "427: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "428: |     32: 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 04   ................",
          "429: |     48: 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00   ................",
          "430: |     96: 00 00 00 00 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ...............m",
          "431: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "432: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "433: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "434: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "435: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "436: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "437: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "438: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "439: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "440: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "441: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "442: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "443: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "444: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "445: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "446: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "447: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "448: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "449: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "450: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "451: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "452: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "453: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "454: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "455: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "456: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "457: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "458: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "459: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "460: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "461: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "462: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "463: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "464: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "465: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "466: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "467: | page 2 offset 4096",
          "468: |      0: 0d 00 00 00 03 0f bd 00 0f e8 0f ef 0f bd 00 00   ................",
          "469: |   4016: 00 00 00 00 00 00 00 00 00 00 00 00 00 24 84 80   .............$..",
          "470: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "471: |   4048: 63 6b 01 02 02 04 02 66 74 02 06 36 b0 a0 10 21   ck.....ft..6...!",
          "472: |   4064: d6 f7 07 46 96 d6 97 a6 05 01 03 00 10 03 03 0f   ...F............",
          "473: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 00 01 01 01 01   ...$............",
          "474: | page 3 offset 8192",
          "475: |      0: 0a 00 00 00 01 0f fa 00 0f fa 00 00 00 00 00 00   ................",
          "476: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "477: | page 4 offset 12288",
          "478: |      0: 0d 00 00 00 03 0f e0 00 0f f6 0f ec 0f e0 00 00   ................",
          "479: |   4064: 0a 03 03 00 1b 61 62 61 6e 64 6f 6e 08 02 03 00   .....abandon....",
          "480: |   4080: 17 61 62 61 66 74 08 01 03 00 17 61 62 61 63 6b   .abaft.....aback",
          "481: | page 5 offset 16384",
          "482: |      0: 0d 00 00 00 03 0f ee 00 0f fa 0f f4 0f ee 00 00   ................",
          "483: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 03   ................",
          "484: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "485: | page 6 offset 20480",
          "486: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "487: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "488: | page 7 offset 24576",
          "489: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "490: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "491: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "492: |   4080: 68 65 62 6c 65 74 31 74 31 43 52 45 41 54 45 20   heblet1t1CREATE",
          "493: | page 8 offset 28672",
          "494: |      0: 56 49 52 54 55 41 4c 20 54 41 42 4c 45 20 74 31   VIRTUAL TABLE t1",
          "495: |     16: 20 55 53 49 4e 47 20 66 74 73 35 28 63 6f 6e 74    USING fts5(cont",
          "496: |     32: 65 6e 74 29 0d 00 00 00 03 0f bd 00 0f e8 0f ef   ent)............",
          "497: |     48: 0f bd 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "498: | end c9.db",
          "499:   }]",
          "500: } {}",
          "502: do_catchsql_test 10.1 {",
          "503:   SELECT * FROM t1 WHERE t1 MATCH 'abandon';",
          "504: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b851d12474035328df8354c7da8d81bc78833c8c704153f9f573c19b47a8487e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1a6c2b1d383009aeb306f53f1915a443ab79de0f",
      "candidate_info": {
        "commit_hash": "1a6c2b1d383009aeb306f53f1915a443ab79de0f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1a6c2b1d383009aeb306f53f1915a443ab79de0f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "src/sqlite.h.in",
          "src/sqliteInt.h",
          "src/tokenize.c",
          "src/vdbeapi.c",
          "src/vdbeaux.c"
        ],
        "message": "Further refinements to the sqlite3_normalized_sql() interface.  TH3 now gives 100% MC/DC on that interface.\n\nFossilOrigin-Name: c96bf6cca220e363b099455ce35195ce7e89d374a52dc787f56e7b11e587bced",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/tokenize.c||src/tokenize.c",
          "src/vdbeapi.c||src/vdbeapi.c",
          "src/vdbeaux.c||src/vdbeaux.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/sqliteInt.h||src/sqliteInt.h"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/sqliteInt.h||src/sqliteInt.h"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 06e955e5d2b857b9ce94a73fb174b620c101bdb160842f9a0e958bdb48e8c987",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "491:       sqlite3_log(SQLITE_WARNING,",
          "492:         \"double-quoted string literal: \\\"%w\\\"\", zCol);",
          "493: #ifdef SQLITE_ENABLE_NORMALIZE",
          "495: #endif",
          "496:       pExpr->op = TK_STRING;",
          "497:       pExpr->y.pTab = 0;",
          "",
          "[Removed Lines]",
          "494:       sqlite3VdbeAddDblquoteStr(db,pParse->pVdbe, zCol);",
          "",
          "[Added Lines]",
          "494:       sqlite3VdbeAddDblquoteStr(db, pParse->pVdbe, zCol);",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4413: int sqlite3TransferBindings(sqlite3_stmt *, sqlite3_stmt *);",
          "4414: void sqlite3ParserReset(Parse*);",
          "4415: #ifdef SQLITE_ENABLE_NORMALIZE",
          "4417: #endif",
          "4418: int sqlite3Reprepare(Vdbe*);",
          "4419: void sqlite3ExprListCheckLength(Parse*, ExprList*, const char*);",
          "",
          "[Removed Lines]",
          "4416: char *sqlite3Normalize(Vdbe*, const char*, int);",
          "",
          "[Added Lines]",
          "4416: char *sqlite3Normalize(Vdbe*, const char*);",
          "",
          "---------------"
        ],
        "src/tokenize.c||src/tokenize.c": [
          "File: src/tokenize.c -> src/tokenize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "752:   db = sqlite3VdbeDb(pVdbe);",
          "753:   tokenType = -1;",
          "754:   nParen = iStartIN = nParenAtIN = 0;",
          "755:   pStr = sqlite3_str_new(db);",
          "757:     if( tokenType!=TK_SPACE ){",
          "758:       prevType = tokenType;",
          "759:     }",
          "",
          "[Removed Lines]",
          "751:   if( zSql==0 || nSql==0 ) return 0;",
          "756:   for(i=0; i<nSql && pStr->accError==0; i+=n){",
          "",
          "[Added Lines]",
          "755:   for(i=0; zSql[i] && pStr->accError==0; i+=n){",
          "",
          "---------------"
        ],
        "src/vdbeapi.c||src/vdbeapi.c": [
          "File: src/vdbeapi.c -> src/vdbeapi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1713: const char *sqlite3_normalized_sql(sqlite3_stmt *pStmt){",
          "1714:   Vdbe *p = (Vdbe *)pStmt;",
          "1715:   if( p==0 ) return 0;",
          "1717:     sqlite3_mutex_enter(p->db->mutex);",
          "1719:     sqlite3_mutex_leave(p->db->mutex);",
          "1720:   }",
          "1721:   return p->zNormSql;",
          "",
          "[Removed Lines]",
          "1716:   if( p->zNormSql==0 && p->zSql!=0 ){",
          "1718:     p->zNormSql = sqlite3Normalize(p, p->zSql, sqlite3Strlen30(p->zSql));",
          "",
          "[Added Lines]",
          "1716:   if( p->zNormSql==0 && ALWAYS(p->zSql!=0) ){",
          "1718:     p->zNormSql = sqlite3Normalize(p, p->zSql);",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:   }",
          "65:   assert( p->zSql==0 );",
          "66:   p->zSql = sqlite3DbStrNDup(p->db, z, n);",
          "74: }",
          "76: #ifdef SQLITE_ENABLE_NORMALIZE",
          "",
          "[Removed Lines]",
          "67: #ifdef SQLITE_ENABLE_NORMALIZE",
          "68:   assert( p->zNormSql==0 );",
          "69:   if( p->zSql && (prepFlags & SQLITE_PREPARE_NORMALIZE)!=0 ){",
          "70:     p->zNormSql = sqlite3Normalize(p, p->zSql, n);",
          "71:     assert( p->zNormSql!=0 || p->db->mallocFailed );",
          "72:   }",
          "73: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f236b21f4b3dba4c104fcda5eb582297be89efe9",
      "candidate_info": {
        "commit_hash": "f236b21f4b3dba4c104fcda5eb582297be89efe9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f236b21f4b3dba4c104fcda5eb582297be89efe9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/where.c",
          "src/window.c"
        ],
        "message": "Add missing VdbeCoverage() macros to new code.\n\nFossilOrigin-Name: b1cbcdc6eb42cca0c42a05e0d6ba4c6c7f09adff0c59ecfc5b434a94dec07a41",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/where.c||src/where.c",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 73e30c2e92ccab274ff7cee48511c461de148786bb9d338921c1ecb193822282",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5218:       if( pLevel->regBignull ){",
          "5219:         sqlite3VdbeResolveLabel(v, pLevel->addrBignull);",
          "5220:         addr = sqlite3VdbeAddOp1(v, OP_If, pLevel->regBignull);",
          "5221:         sqlite3VdbeAddOp2(v, OP_Integer, 1, pLevel->regBignull);",
          "5222:         sqlite3VdbeAddOp2(v, OP_Goto, 0, pLevel->p2-1);",
          "5227:         sqlite3VdbeJumpHere(v, addr);",
          "5228:       }",
          "5229: #ifndef SQLITE_DISABLE_SKIPAHEAD_DISTINCT",
          "",
          "[Removed Lines]",
          "5223:         sqlite3VdbeChangeP5(v, pLevel->p5);",
          "5224:         VdbeCoverage(v);",
          "5225:         VdbeCoverageIf(v, pLevel->op==OP_Next);",
          "5226:         VdbeCoverageIf(v, pLevel->op==OP_Prev);",
          "",
          "[Added Lines]",
          "5221:         VdbeCoverage(v);",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1907:     addr = sqlite3VdbeAddOp1(v, OP_NotNull, reg1); VdbeCoverage(v);",
          "1908:     switch( op ){",
          "1909:       case OP_Ge: sqlite3VdbeAddOp2(v, OP_Goto, 0, lbl); break;",
          "1913:     }",
          "1914:     sqlite3VdbeAddOp2(v, OP_Goto, 0, sqlite3VdbeCurrentAddr(v)+2);",
          "",
          "[Removed Lines]",
          "1910:       case OP_Gt: sqlite3VdbeAddOp2(v, OP_NotNull, reg2, lbl); break;",
          "1911:       case OP_Le: sqlite3VdbeAddOp2(v, OP_IsNull, reg2, lbl); break;",
          "",
          "[Added Lines]",
          "1910:       case OP_Gt:",
          "1911:         sqlite3VdbeAddOp2(v, OP_NotNull, reg2, lbl);",
          "1912:         VdbeCoverage(v);",
          "1913:         break;",
          "1914:       case OP_Le:",
          "1915:         sqlite3VdbeAddOp2(v, OP_IsNull, reg2, lbl);",
          "1916:         VdbeCoverage(v);",
          "1917:         break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e7d9814fe4691bf75d5cb29ab9e7bea67e8159ef",
      "candidate_info": {
        "commit_hash": "e7d9814fe4691bf75d5cb29ab9e7bea67e8159ef",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e7d9814fe4691bf75d5cb29ab9e7bea67e8159ef",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/mkkeywordhash.c"
        ],
        "message": "Fix a potential array bounds overflow in the mkkeywordhash.c code generator. Also add marks to omit keywords specific to generated columns when building with -DSQLITE_OMIT_GENERATED_COLUMNS.\n\nFossilOrigin-Name: cc6a40818387f78f89499f09e3f1c4655c7396af1cba2596c7fb2f23f3e9755f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/mkkeywordhash.c||tool/mkkeywordhash.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f12e743e19a04ecbf7eb69b675082f2e4dda05b38cd81f6588a1ce95dfc57ada",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/mkkeywordhash.c||tool/mkkeywordhash.c": [
          "File: tool/mkkeywordhash.c -> tool/mkkeywordhash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "154: #else",
          "155: #  define WINDOWFUNC 0x00100000",
          "156: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "157: #ifdef SQLITE_OMIT_GENERATED_COLUMNS",
          "158: #  define GENCOL 0",
          "159: #else",
          "160: #  define GENCOL 0x00200000",
          "161: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:   { \"AFTER\",            \"TK_AFTER\",        TRIGGER,          0      },",
          "166:   { \"ALL\",              \"TK_ALL\",          ALWAYS,           0      },",
          "167:   { \"ALTER\",            \"TK_ALTER\",        ALTER,            0      },",
          "169:   { \"ANALYZE\",          \"TK_ANALYZE\",      ANALYZE,          0      },",
          "170:   { \"AND\",              \"TK_AND\",          ALWAYS,           10     },",
          "171:   { \"AS\",               \"TK_AS\",           ALWAYS,           10     },",
          "",
          "[Removed Lines]",
          "168:   { \"ALWAYS\",           \"TK_ALWAYS\",       ALWAYS,           0      },",
          "",
          "[Added Lines]",
          "173:   { \"ALWAYS\",           \"TK_ALWAYS\",       GENCOL,           0      },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "218:   { \"FOREIGN\",          \"TK_FOREIGN\",      FKEY,             1      },",
          "219:   { \"FROM\",             \"TK_FROM\",         ALWAYS,           10     },",
          "220:   { \"FULL\",             \"TK_JOIN_KW\",      ALWAYS,           3      },",
          "222:   { \"GLOB\",             \"TK_LIKE_KW\",      ALWAYS,           3      },",
          "223:   { \"GROUP\",            \"TK_GROUP\",        ALWAYS,           5      },",
          "224:   { \"GROUPS\",           \"TK_GROUPS\",       WINDOWFUNC,       2      },",
          "",
          "[Removed Lines]",
          "221:   { \"GENERATED\",        \"TK_GENERATED\",    ALWAYS,           1      },",
          "",
          "[Added Lines]",
          "226:   { \"GENERATED\",        \"TK_GENERATED\",    GENCOL,           1      },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "365: static void reorder(int *pFrom){",
          "366:   int i = *pFrom - 1;",
          "368:   if( j==0 ) return;",
          "369:   j--;",
          "370:   if( aKeywordTable[i].priority >= aKeywordTable[j].priority ) return;",
          "",
          "[Removed Lines]",
          "367:   int j = aKeywordTable[i].iNext;",
          "",
          "[Added Lines]",
          "372:   int j;",
          "373:   if( i<0 ) return;",
          "374:   j = aKeywordTable[i].iNext;",
          "",
          "---------------"
        ]
      }
    }
  ]
}