{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7ab60fe24d6a557ec1f9501ce94ca43a8b9f6e52",
      "candidate_info": {
        "commit_hash": "7ab60fe24d6a557ec1f9501ce94ca43a8b9f6e52",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7ab60fe24d6a557ec1f9501ce94ca43a8b9f6e52",
        "files": [
          "crypto/bio/bss_acpt.c",
          "crypto/bio/bss_conn.c",
          "crypto/bio/bss_dgram.c",
          "crypto/bio/bss_fd.c",
          "crypto/bio/bss_file.c",
          "crypto/bio/bss_log.c",
          "crypto/bio/bss_mem.c",
          "crypto/bio/bss_null.c",
          "crypto/bio/bss_sock.c",
          "crypto/comp/c_zlib.c",
          "ssl/bio_ssl.c"
        ],
        "message": "Add comments to NULL func ptrs in bio_method_st\n\nThis commit adds comments to bio_method_st definitions where the\nfunction pointers are defined as NULL. Most of the structs have comments\nbut some where missing and not all consitent.\n\nCLA: trivial\n\nReviewed-by: Paul Dale <paul.dale@oracle.com>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4881)\n\n(cherry picked from commit b4ff66223b53ad9d2f5b4efd75bf8d52cc59c8dd)",
        "before_after_code_files": [
          "crypto/bio/bss_acpt.c||crypto/bio/bss_acpt.c",
          "crypto/bio/bss_conn.c||crypto/bio/bss_conn.c",
          "crypto/bio/bss_dgram.c||crypto/bio/bss_dgram.c",
          "crypto/bio/bss_fd.c||crypto/bio/bss_fd.c",
          "crypto/bio/bss_file.c||crypto/bio/bss_file.c",
          "crypto/bio/bss_log.c||crypto/bio/bss_log.c",
          "crypto/bio/bss_mem.c||crypto/bio/bss_mem.c",
          "crypto/bio/bss_null.c||crypto/bio/bss_null.c",
          "crypto/bio/bss_sock.c||crypto/bio/bss_sock.c",
          "crypto/comp/c_zlib.c||crypto/comp/c_zlib.c",
          "ssl/bio_ssl.c||ssl/bio_ssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/bss_acpt.c||crypto/bio/bss_acpt.c": [
          "File: crypto/bio/bss_acpt.c -> crypto/bio/bss_acpt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:     acpt_write,",
          "58:     acpt_read,",
          "59:     acpt_puts,",
          "61:     acpt_ctrl,",
          "62:     acpt_new,",
          "63:     acpt_free,",
          "65: };",
          "67: const BIO_METHOD *BIO_s_accept(void)",
          "",
          "[Removed Lines]",
          "64:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/bio/bss_conn.c||crypto/bio/bss_conn.c": [
          "File: crypto/bio/bss_conn.c -> crypto/bio/bss_conn.c"
        ],
        "crypto/bio/bss_dgram.c||crypto/bio/bss_dgram.c": [
          "File: crypto/bio/bss_dgram.c -> crypto/bio/bss_dgram.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     dgram_write,",
          "77:     dgram_read,",
          "78:     dgram_puts,",
          "80:     dgram_ctrl,",
          "81:     dgram_new,",
          "82:     dgram_free,",
          "84: };",
          "86: # ifndef OPENSSL_NO_SCTP",
          "",
          "[Removed Lines]",
          "83:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:     dgram_sctp_write,",
          "91:     dgram_sctp_read,",
          "92:     dgram_sctp_puts,",
          "94:     dgram_sctp_ctrl,",
          "95:     dgram_sctp_new,",
          "96:     dgram_sctp_free,",
          "98: };",
          "99: # endif",
          "",
          "[Removed Lines]",
          "97:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/bio/bss_fd.c||crypto/bio/bss_fd.c": [
          "File: crypto/bio/bss_fd.c -> crypto/bio/bss_fd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:     fd_ctrl,",
          "68:     fd_new,",
          "69:     fd_free,",
          "71: };",
          "73: const BIO_METHOD *BIO_s_fd(void)",
          "",
          "[Removed Lines]",
          "70:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/bio/bss_file.c||crypto/bio/bss_file.c": [
          "File: crypto/bio/bss_file.c -> crypto/bio/bss_file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:     file_ctrl,",
          "59:     file_new,",
          "60:     file_free,",
          "62: };",
          "64: BIO *BIO_new_file(const char *filename, const char *mode)",
          "",
          "[Removed Lines]",
          "61:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "406:     file_ctrl,",
          "407:     file_new,",
          "408:     file_free,",
          "410: };",
          "412: const BIO_METHOD *BIO_s_file(void)",
          "",
          "[Removed Lines]",
          "409:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/bio/bss_log.c||crypto/bio/bss_log.c": [
          "File: crypto/bio/bss_log.c -> crypto/bio/bss_log.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:     BIO_TYPE_MEM,",
          "89:     \"syslog\",",
          "90:     slg_write,",
          "92:     slg_puts,",
          "94:     slg_ctrl,",
          "95:     slg_new,",
          "96:     slg_free,",
          "98: };",
          "100: const BIO_METHOD *BIO_s_log(void)",
          "",
          "[Removed Lines]",
          "91:     NULL,",
          "93:     NULL,",
          "97:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/bio/bss_mem.c||crypto/bio/bss_mem.c": [
          "File: crypto/bio/bss_mem.c -> crypto/bio/bss_mem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     mem_ctrl,",
          "34:     mem_new,",
          "35:     mem_free,",
          "37: };",
          "39: static const BIO_METHOD secmem_method = {",
          "",
          "[Removed Lines]",
          "36:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:     mem_ctrl,",
          "47:     secmem_new,",
          "48:     mem_free,",
          "50: };",
          "",
          "[Removed Lines]",
          "49:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/bio/bss_null.c||crypto/bio/bss_null.c": [
          "File: crypto/bio/bss_null.c -> crypto/bio/bss_null.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:     null_ctrl,",
          "30:     null_new,",
          "31:     null_free,",
          "33: };",
          "35: const BIO_METHOD *BIO_s_null(void)",
          "",
          "[Removed Lines]",
          "32:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/bio/bss_sock.c||crypto/bio/bss_sock.c": [
          "File: crypto/bio/bss_sock.c -> crypto/bio/bss_sock.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:     sock_write,",
          "42:     sock_read,",
          "43:     sock_puts,",
          "45:     sock_ctrl,",
          "46:     sock_new,",
          "47:     sock_free,",
          "49: };",
          "51: const BIO_METHOD *BIO_s_socket(void)",
          "",
          "[Removed Lines]",
          "48:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/comp/c_zlib.c||crypto/comp/c_zlib.c": [
          "File: crypto/comp/c_zlib.c -> crypto/comp/c_zlib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:     \"zlib\",",
          "300:     bio_zlib_write,",
          "301:     bio_zlib_read,",
          "304:     bio_zlib_ctrl,",
          "305:     bio_zlib_new,",
          "306:     bio_zlib_free,",
          "",
          "[Removed Lines]",
          "302:     NULL,",
          "303:     NULL,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ssl/bio_ssl.c||ssl/bio_ssl.c": [
          "File: ssl/bio_ssl.c -> ssl/bio_ssl.c"
        ]
      }
    },
    {
      "candidate_hash": "64adaa3fa6d1a2c961707308bee1230436076756",
      "candidate_info": {
        "commit_hash": "64adaa3fa6d1a2c961707308bee1230436076756",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/64adaa3fa6d1a2c961707308bee1230436076756",
        "files": [
          "crypto/dsa/dsa_ameth.c"
        ],
        "message": "Check return value of OBJ_nid2obj in dsa_pub_encode.\n\nCLA: trivial\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/4600)\n\n(cherry picked from commit 7760384b403a61824c43cc767a11cd22abfa9e49)",
        "before_after_code_files": [
          "crypto/dsdsa_ameth.c||crypto/dsa/dsa_ameth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dsdsa_ameth.c||crypto/dsa/dsa_ameth.c": [
          "File: crypto/dsdsa_ameth.c -> crypto/dsa/dsa_ameth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85:     ASN1_OBJECT *aobj;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:     aobj = OBJ_nid2obj(EVP_PKEY_DSA);",
          "119:     if (aobj == NULL)",
          "120:         goto err;",
          "122:     if (X509_PUBKEY_set0_param(pk, aobj, ptype, str, penc, penclen))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7cc9b2cde103745e036d256209b7cb3f696fe7af",
      "candidate_info": {
        "commit_hash": "7cc9b2cde103745e036d256209b7cb3f696fe7af",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/7cc9b2cde103745e036d256209b7cb3f696fe7af",
        "files": [
          "crypto/ec/ec_ameth.c"
        ],
        "message": "Fix a memleak in ec_copy_parameters.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3666)\n(cherry picked from commit 188a9bd950837c70661aa6849894e4e02d129031)",
        "before_after_code_files": [
          "crypto/ec/ec_ameth.c||crypto/ec/ec_ameth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ec/ec_ameth.c||crypto/ec/ec_ameth.c": [
          "File: crypto/ec/ec_ameth.c -> crypto/ec/ec_ameth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "298: static int ec_copy_parameters(EVP_PKEY *to, const EVP_PKEY *from)",
          "299: {",
          "300:     EC_GROUP *group = EC_GROUP_dup(EC_KEY_get0_group(from->pkey.ec));",
          "301:     if (group == NULL)",
          "302:         return 0;",
          "303:     if (to->pkey.ec == NULL) {",
          "304:         to->pkey.ec = EC_KEY_new();",
          "305:         if (to->pkey.ec == NULL)",
          "307:     }",
          "308:     if (EC_KEY_set_group(to->pkey.ec, group) == 0)",
          "310:     EC_GROUP_free(group);",
          "311:     return 1;",
          "312: }",
          "314: static int ec_cmp_parameters(const EVP_PKEY *a, const EVP_PKEY *b)",
          "",
          "[Removed Lines]",
          "306:             return 0;",
          "309:         return 0;",
          "",
          "[Added Lines]",
          "307:             goto err;",
          "310:         goto err;",
          "313:  err:",
          "314:     EC_GROUP_free(group);",
          "315:     return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db91094a49b370acf03cf6adfcacf2256b8bd153",
      "candidate_info": {
        "commit_hash": "db91094a49b370acf03cf6adfcacf2256b8bd153",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/db91094a49b370acf03cf6adfcacf2256b8bd153",
        "files": [
          "crypto/bn/bn_mont.c"
        ],
        "message": "Fix timing leak in BN_from_montgomery_word.\n\nBN_from_montgomery_word doesn't have a constant memory access pattern.\nReplace the pointer trick with a constant-time select. There is, of\ncourse, still the bn_correct_top leak pervasive in BIGNUM itself.\n\nSee also https://boringssl-review.googlesource.com/22904 from BoringSSL.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/5228)\n\n(cherry picked from commit f345b1f39d9b4e4c9ef07e7522e9b2a870c9ca09)",
        "before_after_code_files": [
          "crypto/bn/bn_mont.c||crypto/bn/bn_mont.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_mont.c||crypto/bn/bn_mont.c": [
          "File: crypto/bn/bn_mont.c -> crypto/bn/bn_mont.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:     ret->neg = r->neg;",
          "117:     rp = ret->d;",
          "118:     ap = &(r->d[nl]);",
          "153:     }",
          "158:     bn_correct_top(r);",
          "159:     bn_correct_top(ret);",
          "160:     bn_check_top(ret);",
          "",
          "[Removed Lines]",
          "120: # define BRANCH_FREE 1",
          "121: # if BRANCH_FREE",
          "122:     {",
          "123:         BN_ULONG *nrp;",
          "124:         size_t m;",
          "126:         v = bn_sub_words(rp, ap, np, nl) - carry;",
          "131:         m = (0 - (size_t)v);",
          "132:         nrp =",
          "133:             (BN_ULONG *)(((PTR_SIZE_INT) rp & ~m) | ((PTR_SIZE_INT) ap & m));",
          "135:         for (i = 0, nl -= 4; i < nl; i += 4) {",
          "136:             BN_ULONG t1, t2, t3, t4;",
          "138:             t1 = nrp[i + 0];",
          "139:             t2 = nrp[i + 1];",
          "140:             t3 = nrp[i + 2];",
          "141:             ap[i + 0] = 0;",
          "142:             t4 = nrp[i + 3];",
          "143:             ap[i + 1] = 0;",
          "144:             rp[i + 0] = t1;",
          "145:             ap[i + 2] = 0;",
          "146:             rp[i + 1] = t2;",
          "147:             ap[i + 3] = 0;",
          "148:             rp[i + 2] = t3;",
          "149:             rp[i + 3] = t4;",
          "150:         }",
          "151:         for (nl += 4; i < nl; i++)",
          "152:             rp[i] = nrp[i], ap[i] = 0;",
          "154: # else",
          "155:     if (bn_sub_words(rp, ap, np, nl) - carry)",
          "156:         memcpy(rp, ap, nl * sizeof(BN_ULONG));",
          "157: # endif",
          "",
          "[Added Lines]",
          "135:     v = bn_sub_words(rp, ap, np, nl) - carry;",
          "136:     v = 0 - v;",
          "137:     for (i = 0; i < nl; i++) {",
          "138:         rp[i] = (v & ap[i]) | (~v & rp[i]);",
          "139:         ap[i] = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bcc096a50811bf0f0c4fd34b2993fed7a7015972",
      "candidate_info": {
        "commit_hash": "bcc096a50811bf0f0c4fd34b2993fed7a7015972",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/bcc096a50811bf0f0c4fd34b2993fed7a7015972",
        "files": [
          "crypto/aes/asm/aes-armv4.pl",
          "crypto/aes/asm/bsaes-armv7.pl"
        ],
        "message": "aes/asm/{aes-armv4|bsaes-armv7}.pl: make it work with binutils-2.29.\n\nIt's not clear if it's a feature or bug, but binutils-2.29[.1]\ninterprets 'adr' instruction with Thumb2 code reference differently,\nin a way that affects calculation of addresses of constants' tables.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/4669)\n\n(cherry picked from commit b82acc3c1a7f304c9df31841753a0fa76b5b3cda)",
        "before_after_code_files": [
          "crypto/aes/asm/aes-armv4.pl||crypto/aes/asm/aes-armv4.pl",
          "crypto/aes/asm/bsaes-armv7.pl||crypto/aes/asm/bsaes-armv7.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/aes-armv4.pl||crypto/aes/asm/aes-armv4.pl": [
          "File: crypto/aes/asm/aes-armv4.pl -> crypto/aes/asm/aes-armv4.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "200: #ifndef __thumb2__",
          "201:  sub r3,pc,#8  @ AES_encrypt",
          "202: #else",
          "204: #endif",
          "205:  stmdb   sp!,{r1,r4-r12,lr}",
          "206: #ifdef __APPLE__",
          "",
          "[Removed Lines]",
          "203:  adr r3,AES_encrypt",
          "",
          "[Added Lines]",
          "203:  adr r3,.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "450: #ifndef __thumb2__",
          "451:  sub r3,pc,#8  @ AES_set_encrypt_key",
          "452: #else",
          "454: #endif",
          "455:  teq r0,#0",
          "456: #ifdef __thumb2__",
          "",
          "[Removed Lines]",
          "453:  adr r3,AES_set_encrypt_key",
          "",
          "[Added Lines]",
          "453:  adr r3,.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "976: #ifndef __thumb2__",
          "977:  sub r3,pc,#8  @ AES_decrypt",
          "978: #else",
          "980: #endif",
          "981:  stmdb   sp!,{r1,r4-r12,lr}",
          "982: #ifdef __APPLE__",
          "",
          "[Removed Lines]",
          "979:  adr r3,AES_decrypt",
          "",
          "[Added Lines]",
          "979:  adr r3,.",
          "",
          "---------------"
        ],
        "crypto/aes/asm/bsaes-armv7.pl||crypto/aes/asm/bsaes-armv7.pl": [
          "File: crypto/aes/asm/bsaes-armv7.pl -> crypto/aes/asm/bsaes-armv7.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "744: .type _bsaes_decrypt8,%function",
          "745: .align 4",
          "746: _bsaes_decrypt8:",
          "748:  vldmia $key!, {@XMM[9]}  @ round 0 key",
          "749: #ifdef __APPLE__",
          "750:  adr $const,.LM0ISR",
          "",
          "[Removed Lines]",
          "747:  adr $const,_bsaes_decrypt8",
          "",
          "[Added Lines]",
          "747:  adr $const,.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "843: .type _bsaes_encrypt8,%function",
          "844: .align 4",
          "845: _bsaes_encrypt8:",
          "847:  vldmia $key!, {@XMM[9]}  @ round 0 key",
          "848: #ifdef __APPLE__",
          "849:  adr $const,.LM0SR",
          "",
          "[Removed Lines]",
          "846:  adr $const,_bsaes_encrypt8",
          "",
          "[Added Lines]",
          "846:  adr $const,.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "951: .type _bsaes_key_convert,%function",
          "952: .align 4",
          "953: _bsaes_key_convert:",
          "955:  vld1.8 {@XMM[7]},  [$inp]!  @ load round 0 key",
          "956: #ifdef __APPLE__",
          "957:  adr $const,.LM0",
          "",
          "[Removed Lines]",
          "954:  adr $const,_bsaes_key_convert",
          "",
          "[Added Lines]",
          "954:  adr $const,.",
          "",
          "---------------"
        ]
      }
    }
  ]
}