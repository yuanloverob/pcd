{
  "cve_id": "CVE-2015-0563",
  "cve_desc": "epan/dissectors/packet-smtp.c in the SMTP dissector in Wireshark 1.10.x before 1.10.12 and 1.12.x before 1.12.3 uses an incorrect length value for certain string-append operations, which allows remote attackers to cause a denial of service (application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "611cfd00c283e7a77a2f1fd89c01b0b9f691411b",
  "patch_info": {
    "commit_hash": "611cfd00c283e7a77a2f1fd89c01b0b9f691411b",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/611cfd00c283e7a77a2f1fd89c01b0b9f691411b",
    "files": [
      "epan/dissectors/packet-smtp.c"
    ],
    "message": "Always set decrypt_len when setting decrypt.\n\nThis may not always be necessary, but....\n\nChange-Id: Ib409839dbee0574c516568a1f43793f8b407f611\nReviewed-on: https://code.wireshark.org/review/6232\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
    "before_after_code_files": [
      "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c": [
      "File: epan/dissectors/packet-smtp.c -> epan/dissectors/packet-smtp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "368:   fragment_head             *frag_msg  = NULL;",
      "369:   tvbuff_t                  *next_tvb;",
      "370:   guint8                    *decrypt   = NULL;",
      "372:   guint8                    *base64_string   = NULL;",
      "373:   guint8                     line_code[3];",
      "",
      "[Removed Lines]",
      "371:   size_t                     decrypt_len;",
      "",
      "[Added Lines]",
      "371:   size_t                     decrypt_len  = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "867:           col_append_fstr(pinfo->cinfo, COL_INFO, \"Pass: %s\", format_text(decrypt, decrypt_len));",
      "868:         } else if (session_state->ntlm_rsp_frame == pinfo->fd->num) {",
      "869:           decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
      "870:           if (smtp_decryption_enabled) {",
      "873:               decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
      "874:               col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen));",
      "875:               proto_tree_add_item(smtp_tree, hf_smtp_command_line, tvb,",
      "876:                                   loffset, linelen, ENC_ASCII|ENC_NA);",
      "",
      "[Removed Lines]",
      "871:             if (ws_base64_decode_inplace(decrypt) == 0) {",
      "",
      "[Added Lines]",
      "870:           decrypt_len = linelen;",
      "872:             if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
      "875:               decrypt_len = linelen;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "886:                                 loffset, linelen, ENC_ASCII|ENC_NA);",
      "887:           }",
      "888:         } else if (session_state->user_pass_frame == pinfo->fd->num) {",
      "890:         } else {",
      "892:           if (linelen >= 4)",
      "",
      "[Removed Lines]",
      "889:             decode_plain_auth(tvb, pinfo, smtp_tree, loffset, linelen);",
      "",
      "[Added Lines]",
      "891:           decode_plain_auth(tvb, pinfo, smtp_tree, loffset, linelen);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "932:                               loffset + 5, linelen - 5, ENC_ASCII|ENC_NA);",
      "933:             if (linelen >= 10) {",
      "934:               decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 10, linelen - 10, ENC_ASCII);",
      "935:               if (smtp_decryption_enabled) {",
      "936:                 if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
      "938:                   decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 10, linelen - 10, ENC_ASCII);",
      "939:                   col_append_str(pinfo->cinfo, COL_INFO,",
      "940:                                  format_text(tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, 10, ENC_ASCII), 10));",
      "941:                   col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen - 10));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "937:               decrypt_len = linelen - 10;",
      "942:                   decrypt_len = linelen - 10;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1112:                                 code);",
      "1114:             decrypt = NULL;",
      "1115:             if (linelen >= 4) {",
      "1116:                 if ((smtp_decryption_enabled) && (code == 334)) {",
      "1117:                     decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, offset + 4, linelen - 4, ENC_ASCII);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1119:             decrypt_len = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "854157883bd1972e012c65c0418a9732ef5d9fb0",
      "candidate_info": {
        "commit_hash": "854157883bd1972e012c65c0418a9732ef5d9fb0",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/854157883bd1972e012c65c0418a9732ef5d9fb0",
        "files": [
          "epan/dissectors/packet-smtp.c"
        ],
        "message": "When deccoding base-64, the result is the length of the *decoded* result.\n\nThat way, for example, format_text() calls on the decoded result don't\ngo past the end of the decoded result.\n\nFix some more indentation while we're at it.\n\nBug: 10823\nChange-Id: Ia7b7b1d9fb06af5df945f19a375bf5bef3277018\nReviewed-on: https://code.wireshark.org/review/6221\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c": [
          "File: epan/dissectors/packet-smtp.c -> epan/dissectors/packet-smtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "368:   fragment_head             *frag_msg  = NULL;",
          "369:   tvbuff_t                  *next_tvb;",
          "370:   guint8                    *decrypt   = NULL;",
          "371:   guint8                    *base64_string   = NULL;",
          "372:   guint8                     line_code[3];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "371:   size_t                     decrypt_len;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "576:               (pinfo->fd->num >= session_state->first_auth_frame) &&",
          "577:               ((session_state->last_auth_frame == 0) || (pinfo->fd->num <= session_state->last_auth_frame))) {",
          "578:             decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "580:               line = decrypt;",
          "581:             } else {",
          "582:               line = tvb_get_ptr(tvb, loffset, linelen);",
          "583:             }",
          "584:           } else {",
          "585:             line = tvb_get_ptr(tvb, loffset, linelen);",
          "",
          "[Removed Lines]",
          "579:             if ((smtp_decryption_enabled) && (ws_base64_decode_inplace(decrypt) > 0)) {",
          "",
          "[Added Lines]",
          "580:             if ((smtp_decryption_enabled) &&",
          "581:                 ((decrypt_len = ws_base64_decode_inplace(decrypt)) > 0)) {",
          "583:               linelen = (int)decrypt_len;",
          "586:               decrypt_len = linelen;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "833:           if (decrypt == NULL) {",
          "835:             decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "836:             if (smtp_decryption_enabled) {",
          "839:                 decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "840:               }",
          "841:             }",
          "842:           }",
          "843:           proto_tree_add_string(smtp_tree, hf_smtp_username, tvb,",
          "844:                                 loffset, linelen, decrypt);",
          "846:         } else if (session_state->password_frame == pinfo->fd->num) {",
          "847:           if (decrypt == NULL) {",
          "849:             decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "850:             if (smtp_decryption_enabled) {",
          "853:                 decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "854:               }",
          "855:             }",
          "856:           }",
          "857:           proto_tree_add_string(smtp_tree, hf_smtp_password, tvb,",
          "858:                                 loffset, linelen, decrypt);",
          "860:         } else if (session_state->ntlm_rsp_frame == pinfo->fd->num) {",
          "861:           decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "862:           if (smtp_decryption_enabled) {",
          "",
          "[Removed Lines]",
          "837:               if (ws_base64_decode_inplace(decrypt) == 0) {",
          "845:           col_append_fstr(pinfo->cinfo, COL_INFO, \"User: %s\", format_text(decrypt, linelen));",
          "851:               if (ws_base64_decode_inplace(decrypt) == 0) {",
          "859:           col_append_fstr(pinfo->cinfo, COL_INFO, \"Pass: %s\", format_text(decrypt, linelen));",
          "",
          "[Added Lines]",
          "840:             decrypt_len = linelen;",
          "842:               if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
          "845:                 decrypt_len = linelen;",
          "851:           col_append_fstr(pinfo->cinfo, COL_INFO, \"User: %s\", format_text(decrypt, decrypt_len));",
          "856:             decrypt_len = linelen;",
          "858:               if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
          "861:                 decrypt_len = linelen;",
          "867:           col_append_fstr(pinfo->cinfo, COL_INFO, \"Pass: %s\", format_text(decrypt, decrypt_len));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "900:             proto_tree_add_item(cmdresp_tree, hf_smtp_req_parameter, tvb,",
          "901:                               loffset + 5, linelen - 5, ENC_ASCII|ENC_NA);",
          "905:                  decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 11, linelen - 11, ENC_ASCII);",
          "906:                  if (smtp_decryption_enabled) {",
          "910:                    }",
          "911:                  }",
          "912:             }",
          "917:           }",
          "918:           else if ((linelen > 5) && (session_state->ntlm_req_frame == pinfo->fd->num) ) {",
          "919:             proto_tree_add_item(cmdresp_tree, hf_smtp_req_parameter, tvb,",
          "920:                               loffset + 5, linelen - 5, ENC_ASCII|ENC_NA);",
          "925:                   decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 10, linelen - 10, ENC_ASCII);",
          "926:                   col_append_str(pinfo->cinfo, COL_INFO,",
          "927:                                  format_text(tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, 10, ENC_ASCII), 10));",
          "928:                   col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen - 10));",
          "929:               }",
          "930:               else {",
          "932:                 col_append_str(pinfo->cinfo, COL_INFO,",
          "935:               }",
          "936:             }",
          "942:           }",
          "943:           else if ((linelen > 5) && (session_state->user_pass_cmd_frame == pinfo->fd->num) ) {",
          "944:             proto_tree_add_item(cmdresp_tree, hf_smtp_req_parameter, tvb,",
          "",
          "[Removed Lines]",
          "903:             if (decrypt == NULL) {",
          "907:                    if (ws_base64_decode_inplace(decrypt) == 0) {",
          "909:                        decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 11, linelen - 11, ENC_ASCII);",
          "913:             proto_tree_add_string(cmdresp_tree, hf_smtp_username, tvb, loffset + 11, linelen - 11, decrypt);",
          "914:             col_append_str(pinfo->cinfo, COL_INFO,",
          "915:                            format_text(tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, 11, ENC_ASCII), 11));",
          "916:             col_append_fstr(pinfo->cinfo, COL_INFO, \"User: %s\", format_text(decrypt, linelen - 11));",
          "921:             decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 10, linelen - 10, ENC_ASCII);",
          "922:             if (smtp_decryption_enabled) {",
          "923:               if (ws_base64_decode_inplace(decrypt) == 0) {",
          "931:                 base64_string = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 10, linelen - 10, ENC_ASCII);",
          "933:                                format_text(tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, 10, ENC_ASCII), linelen - 10));",
          "934:                 dissect_ntlm_auth(tvb, pinfo, cmdresp_tree, format_text(base64_string, linelen - 10));",
          "937:             else {",
          "938:               col_append_str(pinfo->cinfo, COL_INFO,",
          "939:                              format_text(tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, 10, ENC_ASCII), 10));",
          "940:               col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen - 10));",
          "941:             }",
          "",
          "[Added Lines]",
          "911:             if (linelen >= 11) {",
          "912:               if (decrypt == NULL) {",
          "915:                  decrypt_len = linelen - 11;",
          "917:                    if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
          "919:                      decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 11, linelen - 11, ENC_ASCII);",
          "920:                      decrypt_len = linelen - 11;",
          "923:               }",
          "924:               proto_tree_add_string(cmdresp_tree, hf_smtp_username, tvb, loffset + 11, linelen - 11, decrypt);",
          "925:               col_append_str(pinfo->cinfo, COL_INFO,",
          "926:                              format_text(tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, 11, ENC_ASCII), 11));",
          "927:               col_append_fstr(pinfo->cinfo, COL_INFO, \"User: %s\", format_text(decrypt, decrypt_len));",
          "933:             if (linelen >= 10) {",
          "934:               decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 10, linelen - 10, ENC_ASCII);",
          "935:               if (smtp_decryption_enabled) {",
          "936:                 if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
          "942:                 }",
          "943:                 else {",
          "944:                   base64_string = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 10, linelen - 10, ENC_ASCII);",
          "945:                   col_append_str(pinfo->cinfo, COL_INFO,",
          "946:                                  format_text(tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, 10, ENC_ASCII), linelen - 10));",
          "947:                   dissect_ntlm_auth(tvb, pinfo, cmdresp_tree, format_text(base64_string, linelen - 10));",
          "948:                 }",
          "952:                                format_text(tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, 10, ENC_ASCII), 10));",
          "953:                 col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen - 10));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1097:             proto_tree_add_uint(cmdresp_tree, hf_smtp_rsp_code, tvb, offset, 3,",
          "1100:             decrypt = NULL;",
          "1101:             if (linelen >= 4) {",
          "1102:                 if ((smtp_decryption_enabled) && (code == 334)) {",
          "1103:                     decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, offset + 4, linelen - 4, ENC_ASCII);",
          "1105:                       if (g_ascii_strncasecmp(decrypt, \"NTLMSSP\", 7) == 0) {",
          "1106:                         base64_string = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 4, linelen - 4, ENC_ASCII);",
          "1107:                         col_append_fstr(pinfo->cinfo, COL_INFO, \"%d \", code);",
          "",
          "[Removed Lines]",
          "1098:                                   code);",
          "1104:                     if (ws_base64_decode_inplace(decrypt) > 0) {",
          "",
          "[Added Lines]",
          "1112:                                 code);",
          "1118:                     decrypt_len = linelen - 4;",
          "1119:                     if ((decrypt_len = ws_base64_decode_inplace(decrypt)) > 0) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1113:                         proto_tree_add_string(cmdresp_tree, hf_smtp_rsp_parameter, tvb,",
          "1114:                                           offset + 4, linelen - 4, (const char*)decrypt);",
          "1117:                       }",
          "1118:                     } else {",
          "1120:                     }",
          "1121:                 }",
          "",
          "[Removed Lines]",
          "1116:                         col_append_fstr(pinfo->cinfo, COL_INFO, \"%d %s\", code, format_text(decrypt, linelen - 4));",
          "1119:                         decrypt = NULL;",
          "",
          "[Added Lines]",
          "1131:                         col_append_fstr(pinfo->cinfo, COL_INFO, \"%d %s\", code, format_text(decrypt, decrypt_len));",
          "1134:                       decrypt = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ce7dfe14f32e7bee1eceead1268d83e264446af",
      "candidate_info": {
        "commit_hash": "2ce7dfe14f32e7bee1eceead1268d83e264446af",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/2ce7dfe14f32e7bee1eceead1268d83e264446af",
        "files": [
          "epan/dissectors/packet-smtp.c"
        ],
        "message": "More indentation cleanups.\n\nChange-Id: I6d21bda89f8032d302620e21ac393dc345165ac7\nReviewed-on: https://code.wireshark.org/review/6212\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c": [
          "File: epan/dissectors/packet-smtp.c -> epan/dissectors/packet-smtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "830:         PROTO_ITEM_SET_HIDDEN(hidden_item);",
          "832:         if (session_state->username_frame == pinfo->fd->num) {",
          "842:             }",
          "846:         } else if (session_state->password_frame == pinfo->fd->num) {",
          "861:             decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "862:             if (stmp_decryption_enabled) {",
          "863:               if (ws_base64_decode_inplace(decrypt) == 0) {",
          "865:                 decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "873:               }",
          "874:             }",
          "876:               col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen));",
          "877:               proto_tree_add_item(smtp_tree, hf_smtp_command_line, tvb,",
          "878:                                   loffset, linelen, ENC_ASCII|ENC_NA);",
          "879:             }",
          "880:         } else if (session_state->user_pass_frame == pinfo->fd->num) {",
          "881:             decode_plain_auth(tvb, pinfo, smtp_tree, loffset, linelen);",
          "882:         } else {",
          "",
          "[Removed Lines]",
          "833:             if (decrypt == NULL) {",
          "835:                  decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "836:                  if (stmp_decryption_enabled) {",
          "837:                    if (ws_base64_decode_inplace(decrypt) == 0) {",
          "839:                        decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "840:                    }",
          "841:                  }",
          "843:             proto_tree_add_string(smtp_tree, hf_smtp_username, tvb,",
          "844:                                   loffset, linelen, decrypt);",
          "845:             col_append_fstr(pinfo->cinfo, COL_INFO, \"User: %s\", format_text(decrypt, linelen));",
          "847:             if (decrypt == NULL) {",
          "849:                  decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "850:                  if (stmp_decryption_enabled) {",
          "851:                    if (ws_base64_decode_inplace(decrypt) == 0) {",
          "853:                        decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "854:                    }",
          "855:                  }",
          "856:             }",
          "857:             proto_tree_add_string(smtp_tree, hf_smtp_password, tvb,",
          "858:                                   loffset, linelen, decrypt);",
          "859:             col_append_fstr(pinfo->cinfo, COL_INFO, \"Pass: %s\", format_text(decrypt, linelen));",
          "860:         } else if (session_state->ntlm_rsp_frame == pinfo->fd->num) {",
          "866:                 col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen));",
          "867:                 proto_tree_add_item(smtp_tree, hf_smtp_command_line, tvb,",
          "868:                                     loffset, linelen, ENC_ASCII|ENC_NA);",
          "869:               }",
          "870:               else {",
          "871:                 base64_string = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "872:                 dissect_ntlm_auth(tvb, pinfo, smtp_tree, base64_string);",
          "875:             else {",
          "",
          "[Added Lines]",
          "833:           if (decrypt == NULL) {",
          "835:             decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "836:             if (stmp_decryption_enabled) {",
          "837:               if (ws_base64_decode_inplace(decrypt) == 0) {",
          "839:                 decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "840:               }",
          "842:           }",
          "843:           proto_tree_add_string(smtp_tree, hf_smtp_username, tvb,",
          "844:                                 loffset, linelen, decrypt);",
          "845:           col_append_fstr(pinfo->cinfo, COL_INFO, \"User: %s\", format_text(decrypt, linelen));",
          "847:           if (decrypt == NULL) {",
          "856:           }",
          "857:           proto_tree_add_string(smtp_tree, hf_smtp_password, tvb,",
          "858:                                 loffset, linelen, decrypt);",
          "859:           col_append_fstr(pinfo->cinfo, COL_INFO, \"Pass: %s\", format_text(decrypt, linelen));",
          "860:         } else if (session_state->ntlm_rsp_frame == pinfo->fd->num) {",
          "861:           decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "862:           if (stmp_decryption_enabled) {",
          "863:             if (ws_base64_decode_inplace(decrypt) == 0) {",
          "865:               decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "870:             else {",
          "871:               base64_string = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "872:               dissect_ntlm_auth(tvb, pinfo, smtp_tree, base64_string);",
          "873:             }",
          "874:           }",
          "875:           else {",
          "876:             col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen));",
          "877:             proto_tree_add_item(smtp_tree, hf_smtp_command_line, tvb,",
          "878:                                 loffset, linelen, ENC_ASCII|ENC_NA);",
          "879:           }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f384fa07f945fd73e3f0088c19d640a8c534a791",
      "candidate_info": {
        "commit_hash": "f384fa07f945fd73e3f0088c19d640a8c534a791",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/f384fa07f945fd73e3f0088c19d640a8c534a791",
        "files": [
          "epan/dissectors/packet-smtp.c"
        ],
        "message": "Fix tpyo.\n\nChange-Id: I5b190ee35086664ed053d376def4e21ab9ad9236\nReviewed-on: https://code.wireshark.org/review/6213\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c": [
          "File: epan/dissectors/packet-smtp.c -> epan/dissectors/packet-smtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: static gint ett_smtp_data_fragment = -1;",
          "80: static gint ett_smtp_data_fragments = -1;",
          "84: static gboolean    smtp_desegment              = TRUE;",
          "85: static gboolean    smtp_data_desegment         = TRUE;",
          "",
          "[Removed Lines]",
          "82: static gboolean    stmp_decryption_enabled     = FALSE;",
          "",
          "[Added Lines]",
          "82: static gboolean    smtp_decryption_enabled     = FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "315:   guint8                    *decrypt   = NULL;",
          "317:   decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, a_offset, a_linelen, ENC_ASCII);",
          "319:     returncode = (gint)ws_base64_decode_inplace(decrypt);",
          "320:     if (returncode) {",
          "321:       length_user1 = (gint)strlen(decrypt);",
          "",
          "[Removed Lines]",
          "318:   if (stmp_decryption_enabled) {",
          "",
          "[Added Lines]",
          "318:   if (smtp_decryption_enabled) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "576:               (pinfo->fd->num >= session_state->first_auth_frame) &&",
          "577:               ((session_state->last_auth_frame == 0) || (pinfo->fd->num <= session_state->last_auth_frame))) {",
          "578:             decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "580:               line = decrypt;",
          "581:             } else {",
          "582:               line = tvb_get_ptr(tvb, loffset, linelen);",
          "",
          "[Removed Lines]",
          "579:             if ((stmp_decryption_enabled) && (ws_base64_decode_inplace(decrypt) > 0)) {",
          "",
          "[Added Lines]",
          "579:             if ((smtp_decryption_enabled) && (ws_base64_decode_inplace(decrypt) > 0)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "833:           if (decrypt == NULL) {",
          "835:             decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "837:               if (ws_base64_decode_inplace(decrypt) == 0) {",
          "839:                 decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "",
          "[Removed Lines]",
          "836:             if (stmp_decryption_enabled) {",
          "",
          "[Added Lines]",
          "836:             if (smtp_decryption_enabled) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "847:           if (decrypt == NULL) {",
          "849:             decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "851:               if (ws_base64_decode_inplace(decrypt) == 0) {",
          "853:                 decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "",
          "[Removed Lines]",
          "850:             if (stmp_decryption_enabled) {",
          "",
          "[Added Lines]",
          "850:             if (smtp_decryption_enabled) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "859:           col_append_fstr(pinfo->cinfo, COL_INFO, \"Pass: %s\", format_text(decrypt, linelen));",
          "860:         } else if (session_state->ntlm_rsp_frame == pinfo->fd->num) {",
          "861:           decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "863:             if (ws_base64_decode_inplace(decrypt) == 0) {",
          "865:               decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset, linelen, ENC_ASCII);",
          "",
          "[Removed Lines]",
          "862:           if (stmp_decryption_enabled) {",
          "",
          "[Added Lines]",
          "862:           if (smtp_decryption_enabled) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "903:             if (decrypt == NULL) {",
          "905:                  decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 11, linelen - 11, ENC_ASCII);",
          "907:                    if (ws_base64_decode_inplace(decrypt) == 0) {",
          "909:                        decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 11, linelen - 11, ENC_ASCII);",
          "",
          "[Removed Lines]",
          "906:                  if (stmp_decryption_enabled) {",
          "",
          "[Added Lines]",
          "906:                  if (smtp_decryption_enabled) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "919:             proto_tree_add_item(cmdresp_tree, hf_smtp_req_parameter, tvb,",
          "920:                               loffset + 5, linelen - 5, ENC_ASCII|ENC_NA);",
          "921:             decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 10, linelen - 10, ENC_ASCII);",
          "923:               if (ws_base64_decode_inplace(decrypt) == 0) {",
          "925:                   decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, loffset + 10, linelen - 10, ENC_ASCII);",
          "",
          "[Removed Lines]",
          "922:             if (stmp_decryption_enabled) {",
          "",
          "[Added Lines]",
          "922:             if (smtp_decryption_enabled) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1100:             decrypt = NULL;",
          "1101:             if (linelen >= 4) {",
          "1103:                     decrypt = tvb_get_string_enc(wmem_packet_scope(), tvb, offset + 4, linelen - 4, ENC_ASCII);",
          "1104:                     if (ws_base64_decode_inplace(decrypt) > 0) {",
          "1105:                       if (g_ascii_strncasecmp(decrypt, \"NTLMSSP\", 7) == 0) {",
          "",
          "[Removed Lines]",
          "1102:                 if ((stmp_decryption_enabled) && (code == 334)) {",
          "",
          "[Added Lines]",
          "1102:                 if ((smtp_decryption_enabled) && (code == 334)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1284:   prefs_register_bool_preference(smtp_module, \"decryption\",",
          "1285:                                  \"Decrypt AUTH parameters\",",
          "1286:                                  \"Whether the SMTP dissector should decrypt AUTH parameters\",",
          "1288: }",
          "",
          "[Removed Lines]",
          "1287:                                  &stmp_decryption_enabled);",
          "",
          "[Added Lines]",
          "1287:                                  &smtp_decryption_enabled);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "da8282d24bab0027d979b76f69b00c73fe79fa04",
      "candidate_info": {
        "commit_hash": "da8282d24bab0027d979b76f69b00c73fe79fa04",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/da8282d24bab0027d979b76f69b00c73fe79fa04",
        "files": [
          "epan/dissectors/packet-smtp.c"
        ],
        "message": "Always set decrypt_len when setting decrypt.\n\nThis may not always be necessary, but....\n\nChange-Id: I7167ca98351318225a99d149f4aaa5309bac1bd6\nReviewed-on: https://code.wireshark.org/review/6234\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c": [
          "File: epan/dissectors/packet-smtp.c -> epan/dissectors/packet-smtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "369:   fragment_data             *frag_msg  = NULL;",
          "370:   tvbuff_t                  *next_tvb;",
          "371:   guint8                    *decrypt   = NULL;",
          "373:   guint8                    *base64_string   = NULL;",
          "374:   guint8                     line_code[3];",
          "",
          "[Removed Lines]",
          "372:   size_t                     decrypt_len;",
          "",
          "[Added Lines]",
          "372:   size_t                     decrypt_len  = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "868:           col_append_fstr(pinfo->cinfo, COL_INFO, \"Pass: %s\", format_text(decrypt, decrypt_len));",
          "869:         } else if (session_state->ntlm_rsp_frame == pinfo->fd->num) {",
          "870:           decrypt = tvb_get_ephemeral_string(tvb, loffset, linelen);",
          "871:           if (smtp_decryption_enabled) {",
          "874:               decrypt = tvb_get_ephemeral_string(tvb, loffset, linelen);",
          "875:               col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen));",
          "876:               proto_tree_add_item(smtp_tree, hf_smtp_command_line, tvb,",
          "877:                                   loffset, linelen, ENC_ASCII|ENC_NA);",
          "",
          "[Removed Lines]",
          "872:             if (epan_base64_decode(decrypt) == 0) {",
          "",
          "[Added Lines]",
          "871:           decrypt_len = linelen;",
          "873:             if ((decrypt_len = epan_base64_decode(decrypt)) == 0) {",
          "876:               decrypt_len = linelen;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "887:                                 loffset, linelen, ENC_ASCII|ENC_NA);",
          "888:           }",
          "889:         } else if (session_state->user_pass_frame == pinfo->fd->num) {",
          "891:         } else {",
          "893:           if (linelen >= 4)",
          "",
          "[Removed Lines]",
          "890:             decode_plain_auth(tvb, pinfo, smtp_tree, loffset, linelen);",
          "",
          "[Added Lines]",
          "892:           decode_plain_auth(tvb, pinfo, smtp_tree, loffset, linelen);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "933:                               loffset + 5, linelen - 5, ENC_ASCII|ENC_NA);",
          "934:             if (linelen >= 10) {",
          "935:               decrypt = tvb_get_ephemeral_string(tvb, loffset + 10, linelen - 10);",
          "936:               if (smtp_decryption_enabled) {",
          "937:                 if ((decrypt_len = epan_base64_decode(decrypt)) == 0) {",
          "939:                   decrypt = tvb_get_ephemeral_string(tvb, loffset + 10, linelen - 10);",
          "940:                   col_append_str(pinfo->cinfo, COL_INFO,",
          "941:                                  format_text(tvb_get_ephemeral_string(tvb, loffset, 10), 10));",
          "942:                   col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen - 10));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "938:               decrypt_len = linelen - 10;",
          "943:                   decrypt_len = linelen - 10;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1112:                                 code);",
          "1114:             decrypt = NULL;",
          "1115:             if (linelen >= 4) {",
          "1116:                 if ((smtp_decryption_enabled) && (code == 334)) {",
          "1117:                     decrypt = tvb_get_ephemeral_string(tvb, offset + 4, linelen - 4);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1119:             decrypt_len = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de70b347456cab63f07335f8be44230c42267418",
      "candidate_info": {
        "commit_hash": "de70b347456cab63f07335f8be44230c42267418",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/de70b347456cab63f07335f8be44230c42267418",
        "files": [
          "epan/dissectors/packet-smtp.c"
        ],
        "message": "Always set decrypt_len when setting decrypt.\n\nThis may not always be necessary, but....\n\nChange-Id: I9741d606c8c15b945335cf24b182cbd6b75fb310\nReviewed-on: https://code.wireshark.org/review/6233\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-smtp.c||epan/dissectors/packet-smtp.c": [
          "File: epan/dissectors/packet-smtp.c -> epan/dissectors/packet-smtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "370:   fragment_head             *frag_msg  = NULL;",
          "371:   tvbuff_t                  *next_tvb;",
          "372:   guint8                    *decrypt   = NULL;",
          "374:   guint8                    *base64_string   = NULL;",
          "375:   guint8                     line_code[3];",
          "",
          "[Removed Lines]",
          "373:   size_t                     decrypt_len;",
          "",
          "[Added Lines]",
          "373:   size_t                     decrypt_len  = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "869:           col_append_fstr(pinfo->cinfo, COL_INFO, \"Pass: %s\", format_text(decrypt, decrypt_len));",
          "870:         } else if (session_state->ntlm_rsp_frame == pinfo->fd->num) {",
          "871:           decrypt = tvb_get_string(wmem_packet_scope(), tvb, loffset, linelen);",
          "872:           if (smtp_decryption_enabled) {",
          "875:               decrypt = tvb_get_string(wmem_packet_scope(), tvb, loffset, linelen);",
          "876:               col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen));",
          "877:               proto_tree_add_item(smtp_tree, hf_smtp_command_line, tvb,",
          "878:                                   loffset, linelen, ENC_ASCII|ENC_NA);",
          "",
          "[Removed Lines]",
          "873:             if (ws_base64_decode_inplace(decrypt) == 0) {",
          "",
          "[Added Lines]",
          "872:           decrypt_len = linelen;",
          "874:             if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
          "877:               decrypt_len = linelen;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "888:                                 loffset, linelen, ENC_ASCII|ENC_NA);",
          "889:           }",
          "890:         } else if (session_state->user_pass_frame == pinfo->fd->num) {",
          "892:         } else {",
          "894:           if (linelen >= 4)",
          "",
          "[Removed Lines]",
          "891:             decode_plain_auth(tvb, pinfo, smtp_tree, loffset, linelen);",
          "",
          "[Added Lines]",
          "893:           decode_plain_auth(tvb, pinfo, smtp_tree, loffset, linelen);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "934:                               loffset + 5, linelen - 5, ENC_ASCII|ENC_NA);",
          "935:             if (linelen >= 10) {",
          "936:               decrypt = tvb_get_string(wmem_packet_scope(), tvb, loffset + 10, linelen - 10);",
          "937:               if (smtp_decryption_enabled) {",
          "938:                 if ((decrypt_len = ws_base64_decode_inplace(decrypt)) == 0) {",
          "940:                   decrypt = tvb_get_string(wmem_packet_scope(), tvb, loffset + 10, linelen - 10);",
          "941:                   col_append_str(pinfo->cinfo, COL_INFO,",
          "942:                                  format_text(tvb_get_string(wmem_packet_scope(), tvb, loffset, 10), 10));",
          "943:                   col_append_str(pinfo->cinfo, COL_INFO, format_text(decrypt, linelen - 10));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "939:               decrypt_len = linelen - 10;",
          "944:                   decrypt_len = linelen - 10;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1114:                                 code);",
          "1116:             decrypt = NULL;",
          "1117:             if (linelen >= 4) {",
          "1118:                 if ((smtp_decryption_enabled) && (code == 334)) {",
          "1119:                     decrypt = tvb_get_string(wmem_packet_scope(), tvb, offset + 4, linelen - 4);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1121:             decrypt_len = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}