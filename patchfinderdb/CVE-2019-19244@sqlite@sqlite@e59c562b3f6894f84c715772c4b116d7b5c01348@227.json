{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "01325a3f756501a8929c0642eb69734667f24289",
      "candidate_info": {
        "commit_hash": "01325a3f756501a8929c0642eb69734667f24289",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/01325a3f756501a8929c0642eb69734667f24289",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Fix an issue (discovered by OSSFuzz) in the enhanced OP_Concat operator from check-in [713caa382cf7dd] earlier today.\n\nFossilOrigin-Name: 3e897702f8f789fe5119b9042fb93eca3fbfcc44564fbfa66c65628725b1157d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ece481695fc3c959c3eba0fb485cdda43a10b06d17259b0121e15bfc5e8e8b9f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1476:   }",
          "1477:   if( (flags1 & (MEM_Str|MEM_Blob))==0 ){",
          "1478:     if( sqlite3VdbeMemStringify(pIn1,encoding,0) ) goto no_mem;",
          "1479:   }else if( (flags1 & MEM_Zero)!=0 ){",
          "1480:     if( sqlite3VdbeMemExpandBlob(pIn1) ) goto no_mem;",
          "1481:   }",
          "1482:   flags2 = pIn2->flags;",
          "1483:   if( (flags2 & (MEM_Str|MEM_Blob))==0 ){",
          "1484:     if( sqlite3VdbeMemStringify(pIn2,encoding,0) ) goto no_mem;",
          "1485:   }else if( (flags2 & MEM_Zero)!=0 ){",
          "1486:     if( sqlite3VdbeMemExpandBlob(pIn2) ) goto no_mem;",
          "1487:   }",
          "1488:   nByte = pIn1->n + pIn2->n;",
          "1489:   if( nByte>db->aLimit[SQLITE_LIMIT_LENGTH] ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1479:     flags1 = pIn1->flags & ~MEM_Str;",
          "1482:     flags1 = pIn1->flags & ~MEM_Str;",
          "1487:     flags2 = pIn2->flags & ~MEM_Str;",
          "1490:     flags2 = pIn2->flags & ~MEM_Str;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bcdef69482355739f4afcfae36a5267cc0b3f09c",
      "candidate_info": {
        "commit_hash": "bcdef69482355739f4afcfae36a5267cc0b3f09c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bcdef69482355739f4afcfae36a5267cc0b3f09c",
        "files": [
          "ext/fts3/fts3.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Add an \"#ifndef SQLITE_DISABLE_FTS4_DEFERRED\" block around function fts3EvalDeferredPhrase() in fts3 in order to silence a compiler warning.\n\nFossilOrigin-Name: 6f4b0d0494446d46ac22b17650a25b025995cc545cac8fbc4776cf9dd388bcd8",
        "before_after_code_files": [
          "ext/fts3/fts3.c||ext/fts3/fts3.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3.c||ext/fts3/fts3.c": [
          "File: ext/fts3/fts3.c -> ext/fts3/fts3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4166:   return rc;",
          "4167: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4169: #ifndef SQLITE_DISABLE_FTS4_DEFERRED",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6e1330545e7b74fe5f1f20751a3425e2788441485fc07fcb7626e448c72027ce",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7f3373ec7db12a1f6b7c1656d75d4c2630c8425",
      "candidate_info": {
        "commit_hash": "c7f3373ec7db12a1f6b7c1656d75d4c2630c8425",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c7f3373ec7db12a1f6b7c1656d75d4c2630c8425",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/build.c",
          "test/sqllimits1.test"
        ],
        "message": "Fix a problem caused by a small SQLITE_LIMIT_LENGTH value and a CREATE TABLE with a very large name.\n\nFossilOrigin-Name: 9b5d408864920b302f2d21abcae1d90f1e0cd68b18262136554ba0e6219d6025",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/build.c||src/build.c",
          "test/sqllimits1.test||test/sqllimits1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8820408597341344b308277ce6ef41b47c7514d6c613520789b05ee52cbedae8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/build.c||src/build.c": [
          "File: src/build.c -> src/build.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3222:     for(pLoop=pTab->pIndex, n=1; pLoop; pLoop=pLoop->pNext, n++){}",
          "3223:     zName = sqlite3MPrintf(db, \"sqlite_autoindex_%s_%d\", pTab->zName, n);",
          "3224:     if( zName==0 ){",
          "3225:       goto exit_create_index;",
          "3226:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3225:       if( db->mallocFailed==0 ) pParse->rc = SQLITE_TOOBIG;",
          "3226:       pParse->nErr++;",
          "",
          "---------------"
        ],
        "test/sqllimits1.test||test/sqllimits1.test": [
          "File: test/sqllimits1.test -> test/sqllimits1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "889: foreach {key value} [array get saved] {",
          "890:   catch {set $key $value}",
          "891: }",
          "892: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "893: #-------------------------------------------------------------------------",
          "894: # At one point the following caused an assert() to fail.",
          "895: #",
          "896: sqlite3_limit db SQLITE_LIMIT_LENGTH 10000",
          "897: set nm [string repeat x 10000]",
          "898: do_catchsql_test sqllimits1-17.1 \"",
          "899:   CREATE TABLE $nm (x PRIMARY KEY)",
          "900: \" {1 {string or blob too big}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "95da9d5d46a1df00053191dfce9758dbda434e07",
      "candidate_info": {
        "commit_hash": "95da9d5d46a1df00053191dfce9758dbda434e07",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/95da9d5d46a1df00053191dfce9758dbda434e07",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/loadext.c",
          "src/sqlite3ext.h"
        ],
        "message": "Add the new sqlite3_drop_modules() interface to the loadable extension mechanism.\n\nFossilOrigin-Name: 658bd51623787be4ca87b066a051d119f39056286e223afef3691629cf1ab0e1",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/loadext.c||src/loadext.c",
          "src/sqlite3ext.h||src/sqlite3ext.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 511da0815673ca4a176aa61dc23a8231b2ab77e8363fc184a78b6e17dba64d49",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/loadext.c||src/loadext.c": [
          "File: src/loadext.c -> src/loadext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "461: #endif",
          "463:   sqlite3_stmt_isexplain,",
          "465: };",
          "",
          "[Removed Lines]",
          "464:   sqlite3_value_frombind",
          "",
          "[Added Lines]",
          "464:   sqlite3_value_frombind,",
          "466:   sqlite3_drop_modules,",
          "",
          "---------------"
        ],
        "src/sqlite3ext.h||src/sqlite3ext.h": [
          "File: src/sqlite3ext.h -> src/sqlite3ext.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "323:   int (*stmt_isexplain)(sqlite3_stmt*);",
          "324:   int (*value_frombind)(sqlite3_value*);",
          "325: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "326:   int (*drop_modules)(sqlite3*,const char**);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "615: #define sqlite3_stmt_isexplain         sqlite3_api->isexplain",
          "616: #define sqlite3_value_frombind         sqlite3_api->frombind",
          "619: #if !defined(SQLITE_CORE) && !defined(SQLITE_OMIT_LOAD_EXTENSION)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "620: #define sqlite3_drop_modules           sqlite3_api->drop_modules",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0814acd98177fab44df29ebd24595a93c63eb68d",
      "candidate_info": {
        "commit_hash": "0814acd98177fab44df29ebd24595a93c63eb68d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0814acd98177fab44df29ebd24595a93c63eb68d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "test/zeroblob.test"
        ],
        "message": "Do not accidently truncate zeroblob values when doing an arithmetic operation.  Fix for ticket [bb4bdb9f7f654b0bb9f34cfba].\n\nFossilOrigin-Name: 13f6942eb0da2d92a0830f18640ce64208bd0cd6ff6d0c97e4a4c57ac3d65ba6",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "test/zeroblob.test||test/zeroblob.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 98b3b97573ccb3d986d1552f97f96e15088a598945923adcac77010c1e8b7fe4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "385: static u16 SQLITE_NOINLINE computeNumericType(Mem *pMem){",
          "386:   assert( (pMem->flags & (MEM_Int|MEM_Real))==0 );",
          "387:   assert( (pMem->flags & (MEM_Str|MEM_Blob))!=0 );",
          "388:   if( sqlite3AtoF(pMem->z, &pMem->u.r, pMem->n, pMem->enc)==0 ){",
          "389:     return 0;",
          "390:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388:   ExpandBlob(pMem);",
          "",
          "---------------"
        ],
        "test/zeroblob.test||test/zeroblob.test": [
          "File: test/zeroblob.test -> test/zeroblob.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "317: sqlite3_finalize $stmt",
          "319: test_restore_config_pagecache",
          "320: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "319: # 2019-01-25 https://sqlite.org/src/tktview/bb4bdb9f7f654b0bb9f34cfbac",
          "320: # Zeroblob truncated by an index on expression",
          "321: #",
          "322: do_execsql_test 13.100 {",
          "323:   DROP TABLE IF EXISTS t1;",
          "324:   CREATE TABLE t1(a,b,c);",
          "325:   CREATE INDEX t1bbc ON t1(b, b+c);",
          "326:   INSERT INTO t1(a,b,c) VALUES(1,zeroblob(8),3);",
          "327:   SELECT a, quote(b), length(b), c FROM t1;",
          "328: } {1 X'0000000000000000' 8 3}",
          "",
          "---------------"
        ]
      }
    }
  ]
}