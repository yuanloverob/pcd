{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "081ce2042c3e46c98892bd1fe02f8f550084d7cd",
      "candidate_info": {
        "commit_hash": "081ce2042c3e46c98892bd1fe02f8f550084d7cd",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/081ce2042c3e46c98892bd1fe02f8f550084d7cd",
        "files": [
          "VERSION",
          "autoconf/tea/configure.ac",
          "configure",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Increase the version number to 3.32.0.\n\nFossilOrigin-Name: 8130bbb4217bd4a4db1f6bf97115a60bee8b29943bed0c7bdf54bba5edbed8fc",
        "before_after_code_files": [
          "autoconf/teconfigure.ac||autoconf/tea/configure.ac",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "autoconf/teconfigure.ac||autoconf/tea/configure.ac": [
          "File: autoconf/teconfigure.ac -> autoconf/tea/configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: AC_INIT([sqlite], [3.32.0])",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1d4f86201dab9a22df9ef8175a7ebf3640e97cdb23a06fb454b4c69bfda3a9af",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cea7b5d57ed75761f276a0a400e6586eb422a4e8",
      "candidate_info": {
        "commit_hash": "cea7b5d57ed75761f276a0a400e6586eb422a4e8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cea7b5d57ed75761f276a0a400e6586eb422a4e8",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pager.c"
        ],
        "message": "Add extra front margin to the fake empty filename returned by sqlite3PagerFilename() for an in-memory or TEMP database.\n\nFossilOrigin-Name: fee945671a19a93287f9bfadc346f9821fb1311c7fc75b95a6a48d1419c840e7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pager.c||src/pager.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a1be6ee0188911448c064e2c25fb0ca1daad50f3d50fb49a34430bd09736b4a9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7038: const char *sqlite3PagerFilename(const Pager *pPager, int nullIfMemDb){",
          "7041: }",
          "",
          "[Removed Lines]",
          "7039:   static const char zFake[] = { 0x01, 0x00, 0x00, 0x00 };",
          "7040:   return (nullIfMemDb && pPager->memDb) ? &zFake[2] : pPager->zFilename;",
          "",
          "[Added Lines]",
          "7039:   static const char zFake[] = { 0x00, 0x01, 0x00, 0x00, 0x00 };",
          "7040:   return (nullIfMemDb && pPager->memDb) ? &zFake[3] : pPager->zFilename;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b84fda37efdd612288c1bc4933fa3ae6bcc2ffbc",
      "candidate_info": {
        "commit_hash": "b84fda37efdd612288c1bc4933fa3ae6bcc2ffbc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b84fda37efdd612288c1bc4933fa3ae6bcc2ffbc",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pragma.c"
        ],
        "message": "Fix a problem in the encoding display in the updated PRAGMA function_list.\n\nFossilOrigin-Name: 318ff7720bc60c30c0826becce424226e9cec25c1d59cb2cdb75793739322760",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pragma.c||src/pragma.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 87aea3ab1cdda4533e6fed605d1295e83bae0bbb9e1b238d239ce158a0d42954",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pragma.c||src/pragma.c": [
          "File: src/pragma.c -> src/pragma.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "307: ){",
          "308:   for(; p; p=p->pNext){",
          "309:     const char *zType;",
          "311:     static const u32 mask =",
          "312:         SQLITE_DETERMINISTIC |",
          "313:         SQLITE_DIRECTONLY |",
          "",
          "[Removed Lines]",
          "310:     const char *zEnc;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "315:         SQLITE_INNOCUOUS |",
          "316:         SQLITE_FUNC_INTERNAL",
          "317:     ;",
          "319:     if( p->xSFunc==0 ) continue;",
          "320:     if( (p->funcFlags & SQLITE_FUNC_INTERNAL)!=0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "317:     static const char *azEnc[] = { 0, \"utf8\", \"utf16le\", \"utf16be\" };",
          "319:     assert( SQLITE_FUNC_ENCMASK==0x3 );",
          "320:     assert( strcmp(azEnc[SQLITE_UTF8],\"utf8\")==0 );",
          "321:     assert( strcmp(azEnc[SQLITE_UTF16LE],\"utf16le\")==0 );",
          "322:     assert( strcmp(azEnc[SQLITE_UTF16BE],\"utf16be\")==0 );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "329:     }else{",
          "330:       zType = \"s\";",
          "331:     }",
          "339:     sqlite3VdbeMultiLoad(v, 1, \"sissii\",",
          "340:        p->zName, isBuiltin,",
          "342:        p->nArg,",
          "343:        (p->funcFlags & mask) ^ SQLITE_INNOCUOUS",
          "344:     );",
          "",
          "[Removed Lines]",
          "332:     if( p->funcFlags & SQLITE_UTF8 ){",
          "333:       zEnc = \"utf8\";",
          "334:     }else if( p->funcFlags & SQLITE_UTF16BE ){",
          "335:       zEnc = \"utf16be\";",
          "336:     }else{",
          "337:       zEnc = \"utf16le\";",
          "338:     }",
          "341:        zType, zEnc,",
          "",
          "[Added Lines]",
          "339:        zType, azEnc[p->funcFlags&SQLITE_FUNC_ENCMASK],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a369d98b9ac002b05c8e20d4a6e8c33ed7c6a2b7",
      "candidate_info": {
        "commit_hash": "a369d98b9ac002b05c8e20d4a6e8c33ed7c6a2b7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a369d98b9ac002b05c8e20d4a6e8c33ed7c6a2b7",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/instrfault.test"
        ],
        "message": "Update test script instrfault.test to account for the fact that bound blob values cast to text values are now intepreted using the text encoding of the database, instead of always as utf-8.\n\nFossilOrigin-Name: 4d6cb28811c01599e34c0394fe5ed17d47f14893c860590c9b4660bef68eb294",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/instrfault.test||test/instrfault.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a370871e21bd1028ac968ca4f48e6b5f75e647ac40d4342aeb0504a848452908",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/instrfault.test||test/instrfault.test": [
          "File: test/instrfault.test -> test/instrfault.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:   do_faultsim_test 1.$enc.4 -faults oom-t* -prep {",
          "70:     set ::stmt [sqlite3_prepare_v2 db \"SELECT instr(?, ?)\" -1 dummy]",
          "71:     sqlite3_bind_blob $::stmt 1 $::HAYSTACK [string length $::HAYSTACK]",
          "73:   } -body {",
          "74:     set rc [sqlite3_step $::stmt]",
          "75:     if {$rc==\"SQLITE_NOMEM\"} { error \"out of memory\" }",
          "",
          "[Removed Lines]",
          "72:     sqlite3_bind_text $::stmt 2 $::NEEDLE [string length $::NEEDLE]",
          "",
          "[Added Lines]",
          "72:     sqlite3_bind_blob $::stmt 2 $::NEEDLE [string length $::NEEDLE]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51ebd5fa14916c791f2bde20810d9eed107e0db5",
      "candidate_info": {
        "commit_hash": "51ebd5fa14916c791f2bde20810d9eed107e0db5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/51ebd5fa14916c791f2bde20810d9eed107e0db5",
        "files": [
          "doc/trusted-schema.md",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix minor typos in the trusted-schema.md document.\n\nFossilOrigin-Name: 87aea3ab1cdda4533e6fed605d1295e83bae0bbb9e1b238d239ce158a0d42954",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 55553b5e5ece8282f6a56a6f5c71024eaaef3c86ec42203af3da708b0de3643b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}