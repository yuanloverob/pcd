{
  "cve_id": "CVE-2011-0987",
  "cve_desc": "The PMA_Bookmark_get function in libraries/bookmark.lib.php in phpMyAdmin 2.11.x before 2.11.11.3, and 3.3.x before 3.3.9.2, does not properly restrict bookmark queries, which makes it easier for remote authenticated users to trigger another user's execution of a SQL query by creating a bookmark.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "a5464b4daff0059cdf8c9e5f4d54a80e2dd2a5b0",
  "patch_info": {
    "commit_hash": "a5464b4daff0059cdf8c9e5f4d54a80e2dd2a5b0",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/a5464b4daff0059cdf8c9e5f4d54a80e2dd2a5b0",
    "files": [
      "libraries/bookmark.lib.php",
      "sql.php"
    ],
    "message": "Avoid using all users query as default when browsing.",
    "before_after_code_files": [
      "libraries/bookmark.lib.php||libraries/bookmark.lib.php",
      "sql.php||sql.php"
    ]
  },
  "patch_diff": {
    "libraries/bookmark.lib.php||libraries/bookmark.lib.php": [
      "File: libraries/bookmark.lib.php -> libraries/bookmark.lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "104: {",
      "105:     global $controllink;",
      "",
      "[Removed Lines]",
      "103: function PMA_Bookmark_get($db, $id, $id_field = 'id', $action_bookmark_all = FALSE)",
      "",
      "[Added Lines]",
      "104: function PMA_Bookmark_get($db, $id, $id_field = 'id', $action_bookmark_all = FALSE, $exact_user_match = FALSE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "111:     }",
      "113:     $query = 'SELECT query FROM ' . PMA_backquote($cfgBookmark['db']) . '.' . PMA_backquote($cfgBookmark['table'])",
      "118:     return PMA_DBI_fetch_value($query, 0, 0, $controllink);",
      "119: } // end of the 'PMA_Bookmark_get()' function",
      "",
      "[Removed Lines]",
      "114:         . ' WHERE dbase = \\'' . PMA_sqlAddslashes($db) . '\\''",
      "115:         . ($action_bookmark_all? '' : ' AND (user = \\'' . PMA_sqlAddslashes($cfgBookmark['user']) . '\\''",
      "116:         . '      OR user = \\'\\')')",
      "117:         . ' AND ' . PMA_backquote($id_field) . ' = ' . $id;",
      "",
      "[Added Lines]",
      "115:         . ' WHERE dbase = \\'' . PMA_sqlAddslashes($db) . '\\'';",
      "117:     if (!$action_bookmark_all) {",
      "118:         $query .= ' AND (user = \\'' . PMA_sqlAddslashes($cfgBookmark['user']) . '\\'';",
      "119:         if (!$exact_user_match) {",
      "120:             $query .= ' OR user = \\'\\'';",
      "121:         }",
      "122:         $query .= ')';",
      "123:     }",
      "125:     $query .= ' AND ' . PMA_backquote($id_field) . ' = ' . $id;",
      "",
      "---------------"
    ],
    "sql.php||sql.php": [
      "File: sql.php -> sql.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "54: if (empty($sql_query) && strlen($table) && strlen($db)) {",
      "55:     require_once './libraries/bookmark.lib.php';",
      "56:     $book_sql_query = PMA_Bookmark_get($db, '\\'' . PMA_sqlAddslashes($table) . '\\'',",
      "59:     if (! empty($book_sql_query)) {",
      "60:         $sql_query = $book_sql_query;",
      "",
      "[Removed Lines]",
      "57:         'label');",
      "",
      "[Added Lines]",
      "57:         'label', FALSE, TRUE);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2fa4c8d97a92ae0d4e2051d5d18a18688c31f84f",
      "candidate_info": {
        "commit_hash": "2fa4c8d97a92ae0d4e2051d5d18a18688c31f84f",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/2fa4c8d97a92ae0d4e2051d5d18a18688c31f84f",
        "files": [
          "libraries/bookmark.lib.php",
          "sql.php"
        ],
        "message": "Avoid using all users query as default when browsing.",
        "before_after_code_files": [
          "libraries/bookmark.lib.php||libraries/bookmark.lib.php",
          "sql.php||sql.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libraries/bookmark.lib.php||libraries/bookmark.lib.php",
            "sql.php||sql.php"
          ],
          "candidate": [
            "libraries/bookmark.lib.php||libraries/bookmark.lib.php",
            "sql.php||sql.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/bookmark.lib.php||libraries/bookmark.lib.php": [
          "File: libraries/bookmark.lib.php -> libraries/bookmark.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "96: {",
          "97:     global $controllink;",
          "",
          "[Removed Lines]",
          "95: function PMA_queryBookmarks($db, $cfgBookmark, $id, $id_field = 'id', $action_bookmark_all = FALSE)",
          "",
          "[Added Lines]",
          "96: function PMA_queryBookmarks($db, $cfgBookmark, $id, $id_field = 'id', $action_bookmark_all = FALSE, $exact_user_match = FALSE)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100:         return '';",
          "101:     }",
          "108:     $result = PMA_DBI_try_query($query, $controllink);",
          "109:     if (!$result) {",
          "110:         return FALSE;",
          "",
          "[Removed Lines]",
          "103:     $query          = 'SELECT query FROM ' . PMA_backquote($cfgBookmark['db']) . '.' . PMA_backquote($cfgBookmark['table'])",
          "104:                     . ' WHERE dbase = \\'' . PMA_sqlAddslashes($db) . '\\''",
          "105:                     . ($action_bookmark_all? '' : ' AND (user = \\'' . PMA_sqlAddslashes($cfgBookmark['user']) . '\\''",
          "106:                     . '      OR user = \\'\\')')",
          "107:                     . ' AND ' . PMA_backquote($id_field) . ' = ' . $id;",
          "",
          "[Added Lines]",
          "104:     $query = 'SELECT query FROM ' . PMA_backquote($cfgBookmark['db']) . '.' . PMA_backquote($cfgBookmark['table'])",
          "105:         . ' WHERE dbase = \\'' . PMA_sqlAddslashes($db) . '\\'';",
          "107:     if (!$action_bookmark_all) {",
          "108:         $query .= ' AND (user = \\'' . PMA_sqlAddslashes($cfgBookmark['user']) . '\\'';",
          "109:         if (!$exact_user_match) {",
          "110:             $query .= ' OR user = \\'\\'';",
          "111:         }",
          "112:         $query .= ')';",
          "113:     }",
          "115:     $query .= ' AND ' . PMA_backquote($id_field) . ' = ' . $id;",
          "",
          "---------------"
        ],
        "sql.php||sql.php": [
          "File: sql.php -> sql.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     require_once './libraries/bookmark.lib.php';",
          "55:     $book_sql_query = PMA_queryBookmarks($db,",
          "56:         $GLOBALS['cfg']['Bookmark'], '\\'' . PMA_sqlAddslashes($table) . '\\'',",
          "59:     if (! empty($book_sql_query)) {",
          "60:         $sql_query = $book_sql_query;",
          "",
          "[Removed Lines]",
          "57:         'label');",
          "",
          "[Added Lines]",
          "57:         'label', FALSE, TRUE);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "09d48a6554a4c5db6f08e53fffba9b9a19ad51c3",
      "candidate_info": {
        "commit_hash": "09d48a6554a4c5db6f08e53fffba9b9a19ad51c3",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/09d48a6554a4c5db6f08e53fffba9b9a19ad51c3",
        "files": [
          "sql.php"
        ],
        "message": "Coding style improvements",
        "before_after_code_files": [
          "sql.php||sql.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "sql.php||sql.php"
          ],
          "candidate": [
            "sql.php||sql.php"
          ]
        }
      },
      "candidate_diff": {
        "sql.php||sql.php": [
          "File: sql.php -> sql.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: } // end if",
          "49: if (! isset($err_url)) {",
          "51:              . '?' . PMA_generate_common_url($db)",
          "52:              . ((strpos(' ' . $goto, 'db_') != 1 && strlen($table)) ? '&amp;table=' . urlencode($table) : '');",
          "53: } // end if",
          "",
          "[Removed Lines]",
          "50:     $err_url = (!empty($back) ? $back : $goto)",
          "",
          "[Added Lines]",
          "50:     $err_url = (! empty($back) ? $back : $goto)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:     $foreignData = PMA_getForeignData($foreigners, $column, false, '', '');",
          "83:     if ($_SESSION['tmp_user_values']['relational_display'] == 'D'",
          "86:             $curr_value = $_REQUEST['relation_key_or_display_column'];",
          "87:     } else {",
          "88:         $curr_value = $_REQUEST['curr_value'];",
          "",
          "[Removed Lines]",
          "84:         && (isset($display_field) && strlen($display_field)",
          "85:         && (isset($_REQUEST['relation_key_or_display_column']) && $_REQUEST['relation_key_or_display_column']))) {",
          "",
          "[Added Lines]",
          "84:         && isset($display_field)",
          "85:         && strlen($display_field)",
          "86:         && isset($_REQUEST['relation_key_or_display_column'])",
          "87:         && $_REQUEST['relation_key_or_display_column']",
          "88:     ) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "199: if (empty($sql_query) && strlen($table) && strlen($db)) {",
          "200:     include_once './libraries/bookmark.lib.php';",
          "204:     if (! empty($book_sql_query)) {",
          "205:         $GLOBALS['using_bookmark_message'] = PMA_message::notice(__('Using bookmark \"%s\" as default browse query.'));",
          "",
          "[Removed Lines]",
          "201:     $book_sql_query = PMA_Bookmark_get($db, '\\'' . PMA_sqlAddSlashes($table) . '\\'',",
          "202:         'label', false, true);",
          "",
          "[Added Lines]",
          "203:     $book_sql_query = PMA_Bookmark_get(",
          "204:         $db,",
          "205:         '\\'' . PMA_sqlAddSlashes($table) . '\\'',",
          "206:         'label',",
          "207:         false,",
          "208:         true",
          "209:     );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "219: }",
          "",
          "[Removed Lines]",
          "222: $is_drop_database = preg_match('/DROP[[:space:]]+(DATABASE|SCHEMA)[[:space:]]+/i',",
          "223:     $sql_query);",
          "",
          "[Added Lines]",
          "229: $is_drop_database = preg_match(",
          "230:     '/DROP[[:space:]]+(DATABASE|SCHEMA)[[:space:]]+/i',",
          "231:     $sql_query",
          "232: );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "236:     include_once './libraries/header.inc.php';",
          "237:     PMA_mysqlDie(__('\"DROP DATABASE\" statements are disabled.'), '', '', $err_url);",
          "238: } // end if",
          "",
          "[Removed Lines]",
          "232: if (!defined('PMA_CHK_DROP')",
          "233:  && !$cfg['AllowUserDropDatabase']",
          "234:  && $is_drop_database",
          "235:  && !$is_superuser) {",
          "",
          "[Added Lines]",
          "241: if (! defined('PMA_CHK_DROP')",
          "242:     && ! $cfg['AllowUserDropDatabase']",
          "243:     && $is_drop_database",
          "244:     && ! $is_superuser",
          "245: ) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "280: if (isset($btnDrop) && $btnDrop == __('No')) {",
          "282:         $goto = $back;",
          "283:     }",
          "284:     if ($is_gotofile) {",
          "",
          "[Removed Lines]",
          "281:     if (!empty($back)) {",
          "",
          "[Added Lines]",
          "291:     if (! empty($back)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "311:     $do_confirm = false;",
          "312: } else {",
          "313:     $do_confirm = isset($analyzed_sql[0]['queryflags']['need_confirm']);",
          "",
          "[Removed Lines]",
          "306: if (! $cfg['Confirm'] || isset($_REQUEST['is_js_confirmed']) || isset($btnDrop)",
          "309:  || isset($GLOBALS['show_as_php'])",
          "310:  || !empty($GLOBALS['validatequery'])) {",
          "",
          "[Added Lines]",
          "316: if (! $cfg['Confirm']",
          "317:     || isset($_REQUEST['is_js_confirmed'])",
          "318:     || isset($btnDrop)",
          "321:     || isset($GLOBALS['show_as_php'])",
          "322:     || ! empty($GLOBALS['validatequery'])",
          "323: ) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "359: if (empty($reload)",
          "361:     $reload = 1;",
          "362: }",
          "",
          "[Removed Lines]",
          "360:     && preg_match('/^(CREATE|ALTER|DROP)\\s+(VIEW|TABLE|DATABASE|SCHEMA)\\s+/i', $sql_query)) {",
          "",
          "[Added Lines]",
          "373:     && preg_match('/^(CREATE|ALTER|DROP)\\s+(VIEW|TABLE|DATABASE|SCHEMA)\\s+/i', $sql_query)",
          "374: ) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "375: $is_explain = $is_count = $is_export = $is_delete = $is_insert = $is_affected = $is_show = $is_maint = $is_analyse = $is_group = $is_func = $is_replace = false;",
          "376: if ($is_select) { // see line 141",
          "377:     $is_group = preg_match('@(GROUP[[:space:]]+BY|HAVING|SELECT[[:space:]]+DISTINCT)[[:space:]]+@i', $sql_query);",
          "380:     $is_export   = (preg_match('@[[:space:]]+INTO[[:space:]]+OUTFILE[[:space:]]+@i', $sql_query));",
          "381:     $is_analyse  = (preg_match('@[[:space:]]+PROCEDURE[[:space:]]+ANALYSE@i', $sql_query));",
          "382: } elseif (preg_match('@^EXPLAIN[[:space:]]+@i', $sql_query)) {",
          "",
          "[Removed Lines]",
          "378:     $is_func =  !$is_group && (preg_match('@[[:space:]]+(SUM|AVG|STD|STDDEV|MIN|MAX|BIT_OR|BIT_AND)\\s*\\(@i', $sql_query));",
          "379:     $is_count = !$is_group && (preg_match('@^SELECT[[:space:]]+COUNT\\((.*\\.+)?.*\\)@i', $sql_query));",
          "",
          "[Added Lines]",
          "392:     $is_func =  ! $is_group && (preg_match('@[[:space:]]+(SUM|AVG|STD|STDDEV|MIN|MAX|BIT_OR|BIT_AND)\\s*\\(@i', $sql_query));",
          "393:     $is_count = ! $is_group && (preg_match('@^SELECT[[:space:]]+COUNT\\((.*\\.+)?.*\\)@i', $sql_query));",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "405: if ($GLOBALS['cfg']['RememberSorting']",
          "411:     $pmatable = new PMA_Table($table, $db);",
          "412:     if (empty($analyzed_sql[0]['order_by_clause'])) {",
          "413:         $sorted_col = $pmatable->getUiProp(PMA_Table::PROP_SORTED_COLUMN);",
          "414:         if ($sorted_col) {",
          "416:             $sql_order_to_append = ' ORDER BY ' . $sorted_col . ' ';",
          "420:             $analyzed_sql[0]['section_before_limit'] .= $sql_order_to_append;",
          "",
          "[Removed Lines]",
          "406:  && ! ($is_count || $is_export || $is_func || $is_analyse)",
          "407:  && count($analyzed_sql[0]['select_expr']) == 0",
          "408:  && isset($analyzed_sql[0]['queryflags']['select_from'])",
          "409:  && count($analyzed_sql[0]['table_ref']) == 1",
          "410:  ) {",
          "417:             $full_sql_query = $analyzed_sql[0]['section_before_limit'] . $sql_order_to_append . $analyzed_sql[0]['section_after_limit'];",
          "",
          "[Added Lines]",
          "420:     && ! ($is_count || $is_export || $is_func || $is_analyse)",
          "421:     && count($analyzed_sql[0]['select_expr']) == 0",
          "422:     && isset($analyzed_sql[0]['queryflags']['select_from'])",
          "423:     && count($analyzed_sql[0]['table_ref']) == 1",
          "424: ) {",
          "431:             $full_sql_query = $analyzed_sql[0]['section_before_limit'] . $sql_order_to_append",
          "432:                 . $analyzed_sql[0]['section_after_limit'];",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "430: if ((! $cfg['ShowAll'] || $_SESSION['tmp_user_values']['max_rows'] != 'all')",
          "",
          "[Removed Lines]",
          "431:  && ! ($is_count || $is_export || $is_func || $is_analyse)",
          "432:  && isset($analyzed_sql[0]['queryflags']['select_from'])",
          "433:  && ! isset($analyzed_sql[0]['queryflags']['offset'])",
          "434:  && empty($analyzed_sql[0]['limit_clause'])",
          "435:  ) {",
          "436:     $sql_limit_to_append = ' LIMIT ' . $_SESSION['tmp_user_values']['pos'] . ', ' . $_SESSION['tmp_user_values']['max_rows'] . \" \";",
          "438:     $full_sql_query  = $analyzed_sql[0]['section_before_limit'] . \"\\n\" . $sql_limit_to_append . $analyzed_sql[0]['section_after_limit'];",
          "",
          "[Added Lines]",
          "446:     && ! ($is_count || $is_export || $is_func || $is_analyse)",
          "447:     && isset($analyzed_sql[0]['queryflags']['select_from'])",
          "448:     && ! isset($analyzed_sql[0]['queryflags']['offset'])",
          "449:     && empty($analyzed_sql[0]['limit_clause'])",
          "450: ) {",
          "451:     $sql_limit_to_append = ' LIMIT ' . $_SESSION['tmp_user_values']['pos']",
          "452:         . ', ' . $_SESSION['tmp_user_values']['max_rows'] . \" \";",
          "454:     $full_sql_query  = $analyzed_sql[0]['section_before_limit'] . \"\\n\"",
          "455:         . $sql_limit_to_append . $analyzed_sql[0]['section_after_limit'];",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "448:             $analyzed_display_query = PMA_SQP_analyze(PMA_SQP_parse($display_query));",
          "450:         }",
          "451:     }",
          "",
          "[Removed Lines]",
          "447:         if (!empty($analyzed_sql[0]['section_after_limit']) && trim($analyzed_sql[0]['section_after_limit']) != ';') {",
          "449:             $display_query  = $analyzed_display_query[0]['section_before_limit'] . \"\\n\" . $sql_limit_to_append . $analyzed_display_query[0]['section_after_limit'];",
          "",
          "[Added Lines]",
          "464:         if (! empty($analyzed_sql[0]['section_after_limit'])",
          "465:             && trim($analyzed_sql[0]['section_after_limit']) != ';'",
          "466:         ) {",
          "468:             $display_query  = $analyzed_display_query[0]['section_before_limit']",
          "469:                 . \"\\n\" . $sql_limit_to_append . $analyzed_display_query[0]['section_after_limit'];",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "463:     unset($result);",
          "464:     $num_rows = 0;",
          "465: } else {",
          "",
          "[Removed Lines]",
          "462: if (isset($GLOBALS['show_as_php']) || !empty($GLOBALS['validatequery'])) {",
          "",
          "[Added Lines]",
          "482: if (isset($GLOBALS['show_as_php']) || ! empty($GLOBALS['validatequery'])) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "520:         $num_rows = ($result) ? @PMA_DBI_num_rows($result) : 0;",
          "521:     } elseif (! isset($num_rows)) {",
          "522:         $num_rows = @PMA_DBI_affected_rows();",
          "",
          "[Removed Lines]",
          "519:     if (!$is_affected) {",
          "",
          "[Added Lines]",
          "539:     if (! $is_affected) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "546:     if (function_exists('PMA_kanji_file_conv')",
          "548:         unlink($textfile);",
          "549:     }",
          "",
          "[Removed Lines]",
          "547:         && (isset($textfile) && file_exists($textfile))) {",
          "",
          "[Added Lines]",
          "567:         && (isset($textfile) && file_exists($textfile))",
          "568:     ) {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "577:         ) {",
          "",
          "[Removed Lines]",
          "571:         if (!$is_group",
          "572:          && ! isset($analyzed_sql[0]['queryflags']['union'])",
          "573:          && ! isset($analyzed_sql[0]['table_ref'][1]['table_name'])",
          "574:          && (empty($analyzed_sql[0]['where_clause'])",
          "575:            || $analyzed_sql[0]['where_clause'] == '1 ')",
          "576:          && ! isset($find_real_end)",
          "",
          "[Added Lines]",
          "592:         if (! $is_group",
          "593:             && ! isset($analyzed_sql[0]['queryflags']['union'])",
          "594:             && ! isset($analyzed_sql[0]['table_ref'][1]['table_name'])",
          "595:             && (empty($analyzed_sql[0]['where_clause']) || $analyzed_sql[0]['where_clause'] == '1 ')",
          "596:             && ! isset($find_real_end)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "592:             $count_query = PMA_SQP_formatHtml($parsed_sql, 'query_only', 0, $analyzed_sql[0]['position_of_first_select'] + 1);",
          "593:             $count_query .= ' SQL_CALC_FOUND_ROWS ';",
          "",
          "[Removed Lines]",
          "595:             $count_query .= PMA_SQP_formatHtml($parsed_sql, 'query_only', $analyzed_sql[0]['position_of_first_select']+1);",
          "",
          "[Added Lines]",
          "615:             $count_query .= PMA_SQP_formatHtml($parsed_sql, 'query_only', $analyzed_sql[0]['position_of_first_select'] + 1);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "649:     } // end if ($purge)",
          "653:         include_once './libraries/relation_cleanup.lib.php';",
          "654:         PMA_relationsCleanupColumn($db, $table, $dropped_column);",
          "",
          "[Removed Lines]",
          "652:     if (isset($dropped_column) && strlen($db) && strlen($table) && !empty($dropped_column)) {",
          "",
          "[Added Lines]",
          "672:     if (isset($dropped_column) && strlen($db) && strlen($table) && ! empty($dropped_column)) {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "692:         $message = PMA_Message::rawSuccess(htmlspecialchars($message_to_show));",
          "694:         $message = PMA_Message::success(__('Showing as PHP code'));",
          "695:     } elseif (isset($GLOBALS['show_as_php'])) {",
          "697:         $message = PMA_Message::notice(__('Showing SQL query'));",
          "699:         $message = PMA_Message::notice(__('Validated SQL'));",
          "700:     } else {",
          "701:         $message = PMA_Message::success(__('MySQL returned an empty result set (i.e. zero rows).'));",
          "",
          "[Removed Lines]",
          "691:     } elseif (!empty($message_to_show) && !$is_select) {",
          "693:     } elseif (!empty($GLOBALS['show_as_php'])) {",
          "698:     } elseif (!empty($GLOBALS['validatequery'])) {",
          "",
          "[Added Lines]",
          "711:     } elseif (! empty($message_to_show) && ! $is_select) {",
          "713:     } elseif (! empty($GLOBALS['show_as_php'])) {",
          "718:     } elseif (! empty($GLOBALS['validatequery'])) {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "927:     if ($disp_mode[7] == '1'",
          "928:         && (! empty($cfg['Bookmark']) && empty($id_bookmark))",
          "930:         echo \"\\n\";",
          "932:         $goto = 'sql.php?'",
          "",
          "[Removed Lines]",
          "929:         && !empty($sql_query)) {",
          "",
          "[Added Lines]",
          "949:         && ! empty($sql_query)",
          "950:     ) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}