{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "16db345c47cbf97ea01e655d4eb00f9c4c52f361",
      "candidate_info": {
        "commit_hash": "16db345c47cbf97ea01e655d4eb00f9c4c52f361",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/16db345c47cbf97ea01e655d4eb00f9c4c52f361",
        "files": [
          "util/process_docs.pl"
        ],
        "message": "Small fixup of util/process_docs.pl\n\nApparently, pod2html doesn't add \".html\" at the end of links, making\nthem useless, so we need to fix that\n\nWith thanks for the report to Michel <michel.sales@free.fr>\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1897)",
        "before_after_code_files": [
          "util/process_docs.pl||util/process_docs.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/process_docs.pl||util/process_docs.pl": [
          "File: util/process_docs.pl -> util/process_docs.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:                 if $options{debug};",
          "106:             unless ($options{\"dry-run\"}) {",
          "107:                 @output = `$generate`;",
          "109:                     if $options{type} eq \"html\";",
          "110:             }",
          "111:             print STDERR \"DEBUG: Done processing\\n\" if $options{debug};",
          "",
          "[Removed Lines]",
          "108:                 map { s|href=\"http://man\\.he\\.net/man|href=\"../man|g; } @output",
          "",
          "[Added Lines]",
          "108:                 map { s|href=\"http://man\\.he\\.net/(man\\d/[^\"]+)(?:\\.html)?\"|href=\"../$1.html|g; } @output",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "578dc1cea3e2d725987d78ad21a5a86bfb0cef82",
      "candidate_info": {
        "commit_hash": "578dc1cea3e2d725987d78ad21a5a86bfb0cef82",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/578dc1cea3e2d725987d78ad21a5a86bfb0cef82",
        "files": [
          "Configurations/unix-Makefile.tmpl"
        ],
        "message": "Unix build: have the makedepend and cc actions in one recipe\n\nIn the case of using an independent makedepend, we had split that into\ntwo separate recipes, one depending on the other.  However, there are\ncases where the makedepend recipe was always trying, but doesn't\nupdate the time stamp of the .d file because there are no actual\nchanges, and thereby causing constant updates of the object files.\n\nThis change makes one recipe that takes care of both makedepend och\ncc, thereby avoiding these extra updates.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(cherry picked from commit 7e5b8b93f2ffa8300b992d2e79c50f0e5266c61b)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "944:                       dso => '$(DSO_CFLAGS)',",
          "945:                       bin => '$(BIN_CFLAGS)' } -> {$args{intent}};",
          "946:       my $makedepprog = $config{makedepprog};",
          "949:           $recipe .= <<\"EOF\";",
          "956:  else \\\\",
          "958:  fi",
          "959: EOF",
          "963:           $recipe .= <<\"EOF\";",
          "965:  \\$(CC) $incs \\$(CFLAGS) $ecflags -c -o \\$\\@ $srcs",
          "966: EOF",
          "973:  \\@if cmp $obj$depext.tmp $obj$depext > /dev/null 2> /dev/null; then \\\\",
          "974:   rm -f $obj$depext.tmp; \\\\",
          "975:  else \\\\",
          "976:   mv $obj$depext.tmp $obj$depext; \\\\",
          "977:  fi",
          "978: EOF",
          "979:       }",
          "980:       return $recipe;",
          "981:   }",
          "",
          "[Removed Lines]",
          "947:       my $recipe = \"\";",
          "948:       if (!$disabled{makedepend} && $makedepprog =~ /\\/makedepend/) {",
          "950: $obj$depext: $deps",
          "951:  -\\$(MAKEDEPEND) -f- -o\"|$obj$objext\" -- $incs \\$(CFLAGS) $ecflags -- $srcs \\\\",
          "952:      >\\$\\@.tmp 2>/dev/null",
          "953:  -\\$(PERL) -i -pe 's/^.*\\\\|//; s/ \\\\/(\\\\\\\\.|[^ ])*//; \\$\\$_ = undef if (/: *\\$\\$/ || /^(#.*| *)\\$\\$/); \\$\\$_.=\"\\\\n\" unless !defined(\\$\\$_) or /\\\\R\\$\\$/g;' \\$\\@.tmp",
          "954:  \\@if cmp \\$\\@.tmp \\$\\@ > /dev/null 2> /dev/null; then \\\\",
          "955:   rm -f \\$\\@.tmp; \\\\",
          "957:   mv \\$\\@.tmp \\$\\@; \\\\",
          "960:           $deps = $obj.$depext;",
          "961:       }",
          "962:       if ($disabled{makedepend} || $makedepprog =~ /\\/makedepend/) {",
          "964: $obj$objext: $deps",
          "967:       }",
          "968:       if (!$disabled{makedepend} && $makedepprog !~ /\\/makedepend/) {",
          "969:           $recipe .= <<\"EOF\";",
          "970: $obj$objext: $deps",
          "971:  \\$(CC) $incs \\$(CFLAGS) $ecflags -MMD -MF $obj$depext.tmp -MT \\$\\@ -c -o \\$\\@ $srcs",
          "972:  \\@touch $obj$depext.tmp",
          "",
          "[Added Lines]",
          "947:       my $recipe = <<\"EOF\";",
          "948: $obj$objext: $deps",
          "949: EOF",
          "950:       if (!$disabled{makedepend} && $makedepprog !~ /\\/makedepend/) {",
          "952:  \\$(CC) $incs \\$(CFLAGS) $ecflags -MMD -MF $obj$depext.tmp -MT \\$\\@ -c -o \\$\\@ $srcs",
          "953:  \\@touch $obj$depext.tmp",
          "954:  \\@if cmp $obj$depext.tmp $obj$depext > /dev/null 2> /dev/null; then \\\\",
          "955:   rm -f $obj$depext.tmp; \\\\",
          "957:   mv $obj$depext.tmp $obj$depext; \\\\",
          "960:       } else {",
          "964:           if (!$disabled{makedepend} && $makedepprog =~ /\\/makedepend/) {",
          "965:               $recipe .= <<\"EOF\";",
          "966:  -\\$(MAKEDEPEND) -f- -o\"|\\$\\@\" -- $incs \\$(CFLAGS) $ecflags -- $srcs \\\\",
          "967:      >$obj$depext.tmp 2>/dev/null",
          "968:  -\\$(PERL) -i -pe 's/^.*\\\\|//; s/ \\\\/(\\\\\\\\.|[^ ])*//; \\$\\$_ = undef if (/: *\\$\\$/ || /^(#.*| *)\\$\\$/); \\$\\$_.=\"\\\\n\" unless !defined(\\$\\$_) or /\\\\R\\$\\$/g;' $obj$depext.tmp",
          "975:           }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d5936e478194798a287e165b81d27a1bcceaae8",
      "candidate_info": {
        "commit_hash": "1d5936e478194798a287e165b81d27a1bcceaae8",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1d5936e478194798a287e165b81d27a1bcceaae8",
        "files": [
          "apps/ca.c",
          "crypto/txt_db/txt_db.c"
        ],
        "message": "Fix a few memleaks in TXT_DB.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2684)\n(cherry picked from commit 9ad52c562a93c9a57ae3024e54c575430753244c)",
        "before_after_code_files": [
          "apps/ca.c||apps/ca.c",
          "crypto/txt_db/txt_db.c||crypto/txt_dtxt_db.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/ca.c||apps/ca.c": [
          "File: apps/ca.c -> apps/ca.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1838:     }",
          "1840:     irow = app_malloc(sizeof(*irow) * (DB_NUMBER + 1), \"row space\");",
          "1842:         irow[i] = row[i];",
          "1845:     irow[DB_NUMBER] = NULL;",
          "1847:     if (!TXT_DB_insert(db->db, irow)) {",
          "",
          "[Removed Lines]",
          "1841:     for (i = 0; i < DB_NUMBER; i++) {",
          "1843:         row[i] = NULL;",
          "1844:     }",
          "",
          "[Added Lines]",
          "1841:     for (i = 0; i < DB_NUMBER; i++)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1849:         BIO_printf(bio_err, \"TXT_DB error number %ld\\n\", db->db->error);",
          "1850:         goto end;",
          "1851:     }",
          "1852:     ok = 1;",
          "1853:  end:",
          "1857:     X509_NAME_free(CAname);",
          "1858:     X509_NAME_free(subject);",
          "",
          "[Removed Lines]",
          "1854:     for (i = 0; i < DB_NUMBER; i++)",
          "1855:         OPENSSL_free(row[i]);",
          "",
          "[Added Lines]",
          "1850:     irow = NULL;",
          "1853:     if (irow != NULL) {",
          "1854:         for (i = 0; i < DB_NUMBER; i++)",
          "1855:             OPENSSL_free(row[i]);",
          "1856:         OPENSSL_free(irow);",
          "1857:     }",
          "",
          "---------------"
        ],
        "crypto/txt_db/txt_db.c||crypto/txt_dtxt_db.c": [
          "File: crypto/txt_db/txt_db.c -> crypto/txt_dtxt_db.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:         }",
          "106:         if ((n != num) || (*f != '\\0')) {",
          "107:             ret->error = DB_ERROR_WRONG_NUM_FIELDS;",
          "108:             goto err;",
          "109:         }",
          "110:         pp[n] = p;",
          "112:             goto err;",
          "113:     }",
          "114:     BUF_MEM_free(buf);",
          "115:     return ret;",
          "",
          "[Removed Lines]",
          "111:         if (!sk_OPENSSL_PSTRING_push(ret->data, pp))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148:                         OPENSSL_LH_HASHFUNC hash, OPENSSL_LH_COMPFUNC cmp)",
          "149: {",
          "150:     LHASH_OF(OPENSSL_STRING) *idx;",
          "152:     int i, n;",
          "154:     if (field >= db->num_fields) {",
          "",
          "[Removed Lines]",
          "151:     OPENSSL_STRING *r;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "165:         r = sk_OPENSSL_PSTRING_value(db->data, i);",
          "166:         if ((qual != NULL) && (qual(r) == 0))",
          "167:             continue;",
          "169:             db->error = DB_ERROR_INDEX_CLASH;",
          "171:             db->arg2 = i;",
          "172:             lh_OPENSSL_STRING_free(idx);",
          "173:             return (0);",
          "174:         }",
          "175:     }",
          "176:     lh_OPENSSL_STRING_free(db->index[field]);",
          "177:     db->index[field] = idx;",
          "",
          "[Removed Lines]",
          "168:         if ((r = lh_OPENSSL_STRING_insert(idx, r)) != NULL) {",
          "170:             db->arg1 = sk_OPENSSL_PSTRING_find(db->data, r);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "244:             }",
          "245:         }",
          "246:     }",
          "253:     for (i = 0; i < db->num_fields; i++) {",
          "254:         if (db->index[i] != NULL) {",
          "255:             if ((db->qual[i] != NULL) && (db->qual[i] (row) == 0))",
          "256:                 continue;",
          "257:             (void)lh_OPENSSL_STRING_insert(db->index[i], row);",
          "258:         }",
          "259:     }",
          "260:     return (1);",
          "261:  err:",
          "262:     return (0);",
          "263: }",
          "",
          "[Removed Lines]",
          "248:     if (!sk_OPENSSL_PSTRING_push(db->data, row)) {",
          "249:         db->error = DB_ERROR_MALLOC;",
          "250:         goto err;",
          "251:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d2a18ec34fb9f2fbdaa1a28e89f1eff1654a45f",
      "candidate_info": {
        "commit_hash": "1d2a18ec34fb9f2fbdaa1a28e89f1eff1654a45f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1d2a18ec34fb9f2fbdaa1a28e89f1eff1654a45f",
        "files": [
          "crypto/evp/evp_enc.c"
        ],
        "message": "Restore EVP_CIPH_FLAG_LENGTH_BITS working properly\n\nEVP_CIPH_FLAG_LENGTH_BITS flag for CFB1 has been broken with the\nintroduction of the is_partially_overlapping() check that did not take\nit into the account (treating number of bits passed as bytes). This\nremedies that and allows this flag to work as intended.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1942)\n(cherry picked from commit 64846096b18340b9a39ddd29a7a0e23c56f22959)",
        "before_after_code_files": [
          "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c": [
          "File: crypto/evp/evp_enc.c -> crypto/evp/evp_enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "295: int EVP_EncryptUpdate(EVP_CIPHER_CTX *ctx, unsigned char *out, int *outl,",
          "296:                       const unsigned char *in, int inl)",
          "297: {",
          "300:     bl = ctx->cipher->block_size;",
          "302:     if (ctx->cipher->flags & EVP_CIPH_FLAG_CUSTOM_CIPHER) {",
          "305:             EVPerr(EVP_F_EVP_ENCRYPTUPDATE, EVP_R_PARTIALLY_OVERLAPPING);",
          "306:             return 0;",
          "307:         }",
          "",
          "[Removed Lines]",
          "298:     int i, j, bl;",
          "304:         if (bl == 1 && is_partially_overlapping(out, in, inl)) {",
          "",
          "[Added Lines]",
          "298:     int i, j, bl, cmpl = inl;",
          "300:     if (EVP_CIPHER_CTX_test_flags(ctx, EVP_CIPH_FLAG_LENGTH_BITS))",
          "301:         cmpl = (cmpl + 7) / 8;",
          "307:         if (bl == 1 && is_partially_overlapping(out, in, cmpl)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "319:         return inl == 0;",
          "320:     }",
          "322:         EVPerr(EVP_F_EVP_ENCRYPTUPDATE, EVP_R_PARTIALLY_OVERLAPPING);",
          "323:         return 0;",
          "324:     }",
          "",
          "[Removed Lines]",
          "321:     if (is_partially_overlapping(out + ctx->buf_len, in, inl)) {",
          "",
          "[Added Lines]",
          "324:     if (is_partially_overlapping(out + ctx->buf_len, in, cmpl)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "418: int EVP_DecryptUpdate(EVP_CIPHER_CTX *ctx, unsigned char *out, int *outl,",
          "419:                       const unsigned char *in, int inl)",
          "420: {",
          "422:     unsigned int b;",
          "424:     b = ctx->cipher->block_size;",
          "426:     if (ctx->cipher->flags & EVP_CIPH_FLAG_CUSTOM_CIPHER) {",
          "428:             EVPerr(EVP_F_EVP_DECRYPTUPDATE, EVP_R_PARTIALLY_OVERLAPPING);",
          "429:             return 0;",
          "430:         }",
          "",
          "[Removed Lines]",
          "421:     int fix_len;",
          "427:         if (b == 1 && is_partially_overlapping(out, in, inl)) {",
          "",
          "[Added Lines]",
          "424:     int fix_len, cmpl = inl;",
          "429:     if (EVP_CIPHER_CTX_test_flags(ctx, EVP_CIPH_FLAG_LENGTH_BITS))",
          "430:         cmpl = (cmpl + 7) / 8;",
          "433:         if (b == 1 && is_partially_overlapping(out, in, cmpl)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dd63da7032c655afcc80b82c38f2805b8f9476cf",
      "candidate_info": {
        "commit_hash": "dd63da7032c655afcc80b82c38f2805b8f9476cf",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dd63da7032c655afcc80b82c38f2805b8f9476cf",
        "files": [
          "test/sslapitest.c"
        ],
        "message": "Fix no-dtls\n\nThe new large message test in sslapitest needs OPENSSL_NO_DTLS guards\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit 55386bef807c7edd0f1db036c0ed464b28a61d68)",
        "before_after_code_files": [
          "test/sslapitest.c||test/sslapitest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/sslapitest.c||test/sslapitest.c": [
          "File: test/sslapitest.c -> test/sslapitest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:     return execute_test_large_message(TLS_server_method(), TLS_client_method());",
          "109: }",
          "111: static int test_large_message_dtls(void)",
          "112: {",
          "113:     return execute_test_large_message(DTLS_server_method(),",
          "114:                                       DTLS_client_method());",
          "115: }",
          "117: static int ocsp_server_cb(SSL *s, void *arg)",
          "118: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111: #ifndef OPENSSL_NO_DTLS",
          "117: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "861:     CRYPTO_mem_ctrl(CRYPTO_MEM_CHECK_ON);",
          "863:     ADD_TEST(test_large_message_tls);",
          "864:     ADD_TEST(test_large_message_dtls);",
          "865:     ADD_TEST(test_tlsext_status_type);",
          "866:     ADD_TEST(test_session_with_only_int_cache);",
          "867:     ADD_TEST(test_session_with_only_ext_cache);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "866: #ifndef OPENSSL_NO_DTLS",
          "868: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}