{
  "cve_id": "CVE-2015-6243",
  "cve_desc": "The dissector-table implementation in epan/packet.c in Wireshark 1.12.x before 1.12.7 mishandles table searches for empty strings, which allows remote attackers to cause a denial of service (application crash) via a crafted packet, related to the (1) dissector_get_string_handle and (2) dissector_get_default_string_handle functions.",
  "repo": "wireshark/wireshark",
  "patch_hash": "eb1ccbdccde89701f255f921d88992878057477d",
  "patch_info": {
    "commit_hash": "eb1ccbdccde89701f255f921d88992878057477d",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/eb1ccbdccde89701f255f921d88992878057477d",
    "files": [
      "epan/packet.c"
    ],
    "message": "Protect dissector_get_(default_)string_handle() against NULL input string\n\nBug: 11381\nChange-Id: Ib102a23b3d840144757ce692312ff13009c5c95e\nReviewed-on: https://code.wireshark.org/review/9717\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
    "before_after_code_files": [
      "epan/packet.c||epan/packet.c"
    ]
  },
  "patch_diff": {
    "epan/packet.c||epan/packet.c": [
      "File: epan/packet.c -> epan/packet.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1459: {",
      "1460:  dtbl_entry_t *dtbl_entry;",
      "1462:  dtbl_entry = find_string_dtbl_entry(sub_dissectors, string);",
      "1463:  if (dtbl_entry != NULL)",
      "1464:   return dtbl_entry->current;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1462:  if (!string) return 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1469: dissector_handle_t",
      "1470: dissector_get_default_string_handle(const char *name, const gchar *string)",
      "1471: {",
      "1474:  if (sub_dissectors != NULL) {",
      "1475:   dtbl_entry_t *dtbl_entry = find_string_dtbl_entry(sub_dissectors, string);",
      "1476:   if (dtbl_entry != NULL)",
      "",
      "[Removed Lines]",
      "1472:  dissector_table_t sub_dissectors = find_dissector_table(name);",
      "",
      "[Added Lines]",
      "1473:  dissector_table_t sub_dissectors;",
      "1475:  if (!string) return 0;",
      "1476:  sub_dissectors = find_dissector_table(name);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fedf79aea0cf8a8719966a83343171b14ca629d4",
      "candidate_info": {
        "commit_hash": "fedf79aea0cf8a8719966a83343171b14ca629d4",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/fedf79aea0cf8a8719966a83343171b14ca629d4",
        "files": [
          "epan/packet.c"
        ],
        "message": "Protect dissector_get_(default_)string_handle() against NULL input string\n\nBug: 11381\nChange-Id: Ib102a23b3d840144757ce692312ff13009c5c95e\nReviewed-on: https://code.wireshark.org/review/9717\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit eb1ccbdccde89701f255f921d88992878057477d)\nReviewed-on: https://code.wireshark.org/review/9721\n(cherry picked from commit 5470a4dd6230bb9fc4ab7a2c609c97dcf61f2017)\nReviewed-on: https://code.wireshark.org/review/10584\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/packet.c||epan/packet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/packet.c||epan/packet.c"
          ],
          "candidate": [
            "epan/packet.c||epan/packet.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/packet.c||epan/packet.c": [
          "File: epan/packet.c -> epan/packet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1444: {",
          "1445:  dtbl_entry_t *dtbl_entry;",
          "1447:  dtbl_entry = find_string_dtbl_entry(sub_dissectors, string);",
          "1448:  if (dtbl_entry != NULL)",
          "1449:   return dtbl_entry->current;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1447:  if (!string) return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1454: dissector_handle_t",
          "1455: dissector_get_default_string_handle(const char *name, const gchar *string)",
          "1456: {",
          "1459:  if (sub_dissectors != NULL) {",
          "1460:   dtbl_entry_t *dtbl_entry = find_string_dtbl_entry(sub_dissectors, string);",
          "1461:   if (dtbl_entry != NULL)",
          "",
          "[Removed Lines]",
          "1457:  dissector_table_t sub_dissectors = find_dissector_table(name);",
          "",
          "[Added Lines]",
          "1458:  dissector_table_t sub_dissectors;",
          "1460:  if (!string) return 0;",
          "1461:  sub_dissectors = find_dissector_table(name);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4be88234ba30ebdd095b24affb4952fbee752899",
      "candidate_info": {
        "commit_hash": "4be88234ba30ebdd095b24affb4952fbee752899",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/4be88234ba30ebdd095b24affb4952fbee752899",
        "files": [
          "epan/packet.c"
        ],
        "message": "Protect dissector_get_(default_)string_handle() against NULL input string\n\nConflicts:\n\tepan/packet.c\n\nBug: 11381\nChange-Id: Ib102a23b3d840144757ce692312ff13009c5c95e\nReviewed-on: https://code.wireshark.org/review/9717\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit eb1ccbdccde89701f255f921d88992878057477d)\nReviewed-on: https://code.wireshark.org/review/9721\n(cherry picked from commit 5470a4dd6230bb9fc4ab7a2c609c97dcf61f2017)\nReviewed-on: https://code.wireshark.org/review/10584\nReviewed-by: Balint Reczey <balint@balintreczey.hu>\nReviewed-on: https://code.wireshark.org/review/11258",
        "before_after_code_files": [
          "epan/packet.c||epan/packet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/packet.c||epan/packet.c"
          ],
          "candidate": [
            "epan/packet.c||epan/packet.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/packet.c||epan/packet.c": [
          "File: epan/packet.c -> epan/packet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1226: {",
          "1227:  dtbl_entry_t *dtbl_entry;",
          "1229:  dtbl_entry = find_string_dtbl_entry(sub_dissectors, string);",
          "1230:  if (dtbl_entry != NULL)",
          "1231:   return dtbl_entry->current;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1229:  if (!string) return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5470a4dd6230bb9fc4ab7a2c609c97dcf61f2017",
      "candidate_info": {
        "commit_hash": "5470a4dd6230bb9fc4ab7a2c609c97dcf61f2017",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/5470a4dd6230bb9fc4ab7a2c609c97dcf61f2017",
        "files": [
          "epan/packet.c"
        ],
        "message": "Protect dissector_get_(default_)string_handle() against NULL input string\n\nBug: 11381\nChange-Id: Ib102a23b3d840144757ce692312ff13009c5c95e\nReviewed-on: https://code.wireshark.org/review/9717\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit eb1ccbdccde89701f255f921d88992878057477d)\nReviewed-on: https://code.wireshark.org/review/9721",
        "before_after_code_files": [
          "epan/packet.c||epan/packet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/packet.c||epan/packet.c"
          ],
          "candidate": [
            "epan/packet.c||epan/packet.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/packet.c||epan/packet.c": [
          "File: epan/packet.c -> epan/packet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1444: {",
          "1445:  dtbl_entry_t *dtbl_entry;",
          "1447:  dtbl_entry = find_string_dtbl_entry(sub_dissectors, string);",
          "1448:  if (dtbl_entry != NULL)",
          "1449:   return dtbl_entry->current;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1447:  if (!string) return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1454: dissector_handle_t",
          "1455: dissector_get_default_string_handle(const char *name, const gchar *string)",
          "1456: {",
          "1459:  if (sub_dissectors != NULL) {",
          "1460:   dtbl_entry_t *dtbl_entry = find_string_dtbl_entry(sub_dissectors, string);",
          "1461:   if (dtbl_entry != NULL)",
          "",
          "[Removed Lines]",
          "1457:  dissector_table_t sub_dissectors = find_dissector_table(name);",
          "",
          "[Added Lines]",
          "1458:  dissector_table_t sub_dissectors;",
          "1460:  if (!string) return 0;",
          "1461:  sub_dissectors = find_dissector_table(name);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d6710f1dd98ca98d8575280817dac6703f1d4cb",
      "candidate_info": {
        "commit_hash": "1d6710f1dd98ca98d8575280817dac6703f1d4cb",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1d6710f1dd98ca98d8575280817dac6703f1d4cb",
        "files": [
          "epan/packet.c"
        ],
        "message": "Return NULL from routines that return pointers, for stylistic consistency.\n\nChange-Id: Idfc236f712e288662bab618e72cd68263950fff4\nReviewed-on: https://code.wireshark.org/review/10591\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "epan/packet.c||epan/packet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/packet.c||epan/packet.c"
          ],
          "candidate": [
            "epan/packet.c||epan/packet.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/packet.c||epan/packet.c": [
          "File: epan/packet.c -> epan/packet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1484: {",
          "1485:  dtbl_entry_t *dtbl_entry;",
          "1488:  dtbl_entry = find_string_dtbl_entry(sub_dissectors, string);",
          "1489:  if (dtbl_entry != NULL)",
          "1490:   return dtbl_entry->current;",
          "",
          "[Removed Lines]",
          "1487:  if (!string) return 0;",
          "",
          "[Added Lines]",
          "1487:  if (!string) return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1497: {",
          "1498:  dissector_table_t sub_dissectors;",
          "1501:  sub_dissectors = find_dissector_table(name);",
          "1502:  if (sub_dissectors != NULL) {",
          "1503:   dtbl_entry_t *dtbl_entry = find_string_dtbl_entry(sub_dissectors, string);",
          "",
          "[Removed Lines]",
          "1500:  if (!string) return 0;",
          "",
          "[Added Lines]",
          "1500:  if (!string) return NULL;",
          "",
          "---------------"
        ]
      }
    }
  ]
}