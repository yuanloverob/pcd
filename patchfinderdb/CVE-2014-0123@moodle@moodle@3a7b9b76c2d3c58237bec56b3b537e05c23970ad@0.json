{
  "cve_id": "CVE-2014-0123",
  "cve_desc": "The wiki subsystem in Moodle through 2.3.11, 2.4.x before 2.4.9, 2.5.x before 2.5.5, and 2.6.x before 2.6.2 does not properly restrict (1) view and (2) edit access, which allows remote authenticated users to perform wiki operations by leveraging the student role and using the Recent Activity block to reach the individual wiki of an arbitrary student.",
  "repo": "moodle/moodle",
  "patch_hash": "3a7b9b76c2d3c58237bec56b3b537e05c23970ad",
  "patch_info": {
    "commit_hash": "3a7b9b76c2d3c58237bec56b3b537e05c23970ad",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/3a7b9b76c2d3c58237bec56b3b537e05c23970ad",
    "files": [
      "mod/wiki/admin.php",
      "mod/wiki/comments.php",
      "mod/wiki/create_form.php",
      "mod/wiki/diff.php",
      "mod/wiki/edit.php",
      "mod/wiki/editcomments.php",
      "mod/wiki/files.php",
      "mod/wiki/filesedit.php",
      "mod/wiki/history.php",
      "mod/wiki/lib.php",
      "mod/wiki/locallib.php",
      "mod/wiki/lock.php",
      "mod/wiki/map.php",
      "mod/wiki/overridelocks.php",
      "mod/wiki/prettyview.php",
      "mod/wiki/restoreversion.php",
      "mod/wiki/search.php",
      "mod/wiki/view.php",
      "mod/wiki/viewversion.php"
    ],
    "message": "MDL-39990 wiki: more detailed validation of view/edit access rights",
    "before_after_code_files": [
      "mod/wiki/admin.php||mod/wiki/admin.php",
      "mod/wiki/comments.php||mod/wiki/comments.php",
      "mod/wiki/create_form.php||mod/wiki/create_form.php",
      "mod/wiki/diff.php||mod/wiki/diff.php",
      "mod/wiki/edit.php||mod/wiki/edit.php",
      "mod/wiki/editcomments.php||mod/wiki/editcomments.php",
      "mod/wiki/files.php||mod/wiki/files.php",
      "mod/wiki/filesedit.php||mod/wiki/filesedit.php",
      "mod/wiki/history.php||mod/wiki/history.php",
      "mod/wiki/lib.php||mod/wiki/lib.php",
      "mod/wiki/locallib.php||mod/wiki/locallib.php",
      "mod/wiki/lock.php||mod/wiki/lock.php",
      "mod/wiki/map.php||mod/wiki/map.php",
      "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php",
      "mod/wiki/prettyview.php||mod/wiki/prettyview.php",
      "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php",
      "mod/wiki/search.php||mod/wiki/search.php",
      "mod/wiki/view.php||mod/wiki/view.php",
      "mod/wiki/viewversion.php||mod/wiki/viewversion.php"
    ]
  },
  "patch_diff": {
    "mod/wiki/admin.php||mod/wiki/admin.php": [
      "File: mod/wiki/admin.php -> mod/wiki/admin.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "56: require_login($course, true, $cm);",
      "59: $context = context_module::instance($cm->id);",
      "60: require_capability('mod/wiki:managewiki', $context);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "58: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "59:     print_error('cannotviewpage', 'wiki');",
      "60: }",
      "",
      "---------------"
    ],
    "mod/wiki/comments.php||mod/wiki/comments.php": [
      "File: mod/wiki/comments.php -> mod/wiki/comments.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "60: require_login($course, true, $cm);",
      "63: $event = \\mod_wiki\\event\\comments_viewed::create(",
      "64:         array(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "62: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "63:     print_error('cannotviewpage', 'wiki');",
      "64: }",
      "",
      "---------------"
    ],
    "mod/wiki/create_form.php||mod/wiki/create_form.php": [
      "File: mod/wiki/create_form.php -> mod/wiki/create_form.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "77:                 $groupname = $groupinfo[$groupid];",
      "78:                 $mform->addElement('static', 'groupdesciption', get_string('group'), $groupname);",
      "79:                 $mform->addElement('hidden', 'groupinfo', $groupid);",
      "80:             }",
      "81:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80:                 $mform->setType('groupinfo', PARAM_INT);",
      "",
      "---------------"
    ],
    "mod/wiki/diff.php||mod/wiki/diff.php": [
      "File: mod/wiki/diff.php -> mod/wiki/diff.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "69: require_login($course, true, $cm);",
      "71: $wikipage = new page_wiki_diff($wiki, $subwiki, $cm);",
      "73: $wikipage->set_page($page);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "71: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "72:     print_error('cannotviewpage', 'wiki');",
      "73: }",
      "",
      "---------------"
    ],
    "mod/wiki/edit.php||mod/wiki/edit.php": [
      "File: mod/wiki/edit.php -> mod/wiki/edit.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "75: require_login($course, true, $cm);",
      "77: $context = context_module::instance($cm->id);",
      "80: if ($option == get_string('save', 'wiki')) {",
      "81:     if (!confirm_sesskey()) {",
      "",
      "[Removed Lines]",
      "78: require_capability('mod/wiki:editpage', $context);",
      "",
      "[Added Lines]",
      "79: if (!wiki_user_can_edit($subwiki)) {",
      "80:     print_error('cannoteditpage', 'wiki');",
      "81: }",
      "",
      "---------------"
    ],
    "mod/wiki/editcomments.php||mod/wiki/editcomments.php": [
      "File: mod/wiki/editcomments.php -> mod/wiki/editcomments.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "54: }",
      "55: require_login($course, true, $cm);",
      "57: $editcomments = new page_wiki_editcomment($wiki, $subwiki, $cm);",
      "58: $comment = new stdClass();",
      "59: if ($action == 'edit') {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "57: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "58:     print_error('cannotviewpage', 'wiki');",
      "59: }",
      "",
      "---------------"
    ],
    "mod/wiki/files.php||mod/wiki/files.php": [
      "File: mod/wiki/files.php -> mod/wiki/files.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "79: $PAGE->set_url('/mod/wiki/files.php', array('pageid'=>$pageid));",
      "80: require_login($course, true, $cm);",
      "82: $PAGE->set_title(get_string('wikifiles', 'wiki'));",
      "83: $PAGE->set_heading($course->fullname);",
      "84: $PAGE->navbar->add(format_string(get_string('wikifiles', 'wiki')));",
      "",
      "[Removed Lines]",
      "81: $PAGE->set_context($context);",
      "",
      "[Added Lines]",
      "82: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "83:     print_error('cannotviewfiles', 'wiki');",
      "84: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "97: echo $OUTPUT->box_start('generalbox');",
      "104: echo $OUTPUT->box_end();",
      "106: if (has_capability('mod/wiki:managefiles', $context)) {",
      "",
      "[Removed Lines]",
      "98: if (has_capability('mod/wiki:viewpage', $context)) {",
      "99:     echo $renderer->wiki_print_subwiki_selector($PAGE->activityrecord, $subwiki, $page, 'files');",
      "100:     echo $renderer->wiki_files_tree($context, $subwiki);",
      "101: } else {",
      "102:     echo $OUTPUT->notification(get_string('cannotviewfiles', 'wiki'));",
      "103: }",
      "",
      "[Added Lines]",
      "102: echo $renderer->wiki_print_subwiki_selector($PAGE->activityrecord, $subwiki, $page, 'files');",
      "103: echo $renderer->wiki_files_tree($context, $subwiki);",
      "",
      "---------------"
    ],
    "mod/wiki/filesedit.php||mod/wiki/filesedit.php": [
      "File: mod/wiki/filesedit.php -> mod/wiki/filesedit.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "53: $context = context_module::instance($cm->id);",
      "55: require_login($course, true, $cm);",
      "56: require_capability('mod/wiki:managefiles', $context);",
      "58: if (empty($returnurl)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "57: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "58:     print_error('cannotviewpage', 'wiki');",
      "59: }",
      "",
      "---------------"
    ],
    "mod/wiki/history.php||mod/wiki/history.php": [
      "File: mod/wiki/history.php -> mod/wiki/history.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "59: $course = $DB->get_record('course', array('id' => $cm->course), '*', MUST_EXIST);",
      "61: require_login($course, true, $cm);",
      "66: $event = \\mod_wiki\\event\\page_history_viewed::create(",
      "67:         array(",
      "68:             'context' => $context,",
      "",
      "[Removed Lines]",
      "62: $context = context_module::instance($cm->id);",
      "63: require_capability('mod/wiki:viewpage', $context);",
      "",
      "[Added Lines]",
      "63: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "64:     print_error('cannotviewpage', 'wiki');",
      "65: }",
      "68: $context = context_module::instance($cm->id);",
      "",
      "---------------"
    ],
    "mod/wiki/lib.php||mod/wiki/lib.php": [
      "File: mod/wiki/lib.php -> mod/wiki/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "280:     global $CFG, $DB, $OUTPUT;",
      "282:     $usernamefields = get_all_user_name_fields(true, 'u');",
      "284:             FROM {wiki_pages} p",
      "285:                 JOIN {wiki_subwikis} sw ON sw.id = p.subwikiid",
      "286:                 JOIN {wiki} w ON w.id = sw.wikiid",
      "",
      "[Removed Lines]",
      "283:     $sql = \"SELECT p.*, w.id as wikiid, sw.groupid, $usernamefields",
      "",
      "[Added Lines]",
      "283:     $sql = \"SELECT p.id, p.timemodified, p.subwikiid, sw.wikiid, w.wikimode, sw.userid, sw.groupid, $usernamefields",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "290:     if (!$pages = $DB->get_records_sql($sql, array($timestart, $course->id))) {",
      "291:         return false;",
      "292:     }",
      "295:     $wikis = array();",
      "297:     $modinfo = get_fast_modinfo($course);",
      "299:     foreach ($pages as $page) {",
      "312:         }",
      "332:         }",
      "334:     }",
      "335:     unset($pages);",
      "337:     if (!$wikis) {",
      "",
      "[Removed Lines]",
      "293:     $modinfo = get_fast_modinfo($course);",
      "300:         if (!isset($modinfo->instances['wiki'][$page->wikiid])) {",
      "302:             continue;",
      "303:         }",
      "304:         $cm = $modinfo->instances['wiki'][$page->wikiid];",
      "305:         if (!$cm->uservisible) {",
      "306:             continue;",
      "307:         }",
      "308:         $context = context_module::instance($cm->id);",
      "310:         if (!has_capability('mod/wiki:viewpage', $context)) {",
      "311:             continue;",
      "314:         $groupmode = groups_get_activity_groupmode($cm, $course);",
      "316:         if ($groupmode) {",
      "317:             if ($groupmode == SEPARATEGROUPS and !has_capability('mod/wiki:managewiki', $context)) {",
      "319:                 if (isguestuser()) {",
      "321:                     continue;",
      "322:                 }",
      "324:                 if (is_null($modinfo->groups)) {",
      "325:                     $modinfo->groups = groups_get_user_groups($course->id); // load all my groups and cache it in modinfo",
      "326:                     }",
      "328:                 if (!in_array($page->groupid, $modinfo->groups[0])) {",
      "329:                     continue;",
      "330:                 }",
      "331:             }",
      "333:         $wikis[] = $page;",
      "",
      "[Added Lines]",
      "293:     require_once($CFG->dirroot . \"/mod/wiki/locallib.php\");",
      "299:     $subwikivisible = array();",
      "301:         if (!isset($subwikivisible[$page->subwikiid])) {",
      "302:             $subwiki = (object)array('id' => $page->subwikiid, 'wikiid' => $page->wikiid,",
      "303:                 'groupid' => $page->groupid, 'userid' => $page->userid);",
      "304:             $wiki = (object)array('id' => $page->wikiid, 'course' => $course->id, 'wikimode' => $page->wikimode);",
      "305:             $subwikivisible[$page->subwikiid] = wiki_user_can_view($subwiki, $wiki);",
      "307:         if ($subwikivisible[$page->subwikiid]) {",
      "308:             $wikis[] = $page;",
      "311:     unset($subwikivisible);",
      "",
      "---------------"
    ],
    "mod/wiki/locallib.php||mod/wiki/locallib.php": [
      "File: mod/wiki/locallib.php -> mod/wiki/locallib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "761:     global $USER;",
      "765:     $context = context_module::instance($cm->id);",
      "",
      "[Removed Lines]",
      "760: function wiki_user_can_view($subwiki) {",
      "763:     $wiki = wiki_get_wiki($subwiki->wikiid);",
      "764:     $cm = get_coursemodule_from_instance('wiki', $wiki->id);",
      "",
      "[Added Lines]",
      "763: function wiki_user_can_view($subwiki, $wiki = null) {",
      "766:     if (empty($wiki) || $wiki->id != $subwiki->wikiid) {",
      "767:         $wiki = wiki_get_wiki($subwiki->wikiid);",
      "768:     }",
      "769:     $modinfo = get_fast_modinfo($wiki->course);",
      "770:     if (!isset($modinfo->instances['wiki'][$subwiki->wikiid])) {",
      "772:         return false;",
      "773:     }",
      "774:     $cm = $modinfo->instances['wiki'][$subwiki->wikiid];",
      "775:     if (!$cm->uservisible) {",
      "777:         return false;",
      "778:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "804:         if ($wiki->wikimode == 'collaborative' || $wiki->wikimode == 'individual') {",
      "808:                 return has_capability('mod/wiki:viewpage', $context);",
      "",
      "[Removed Lines]",
      "806:             if (groups_is_member($subwiki->groupid)) {",
      "",
      "[Added Lines]",
      "820:             if (in_array($subwiki->groupid, $modinfo->get_groups($cm->groupingid))) {",
      "",
      "---------------"
    ],
    "mod/wiki/lock.php||mod/wiki/lock.php": [
      "File: mod/wiki/lock.php -> mod/wiki/lock.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "69: require_login($course, false, $cm);",
      "74: $wikipage = new page_wiki_lock($wiki, $subwiki, $cm);",
      "75: $wikipage->set_page($page);",
      "",
      "[Removed Lines]",
      "71: $context = context_module::instance($cm->id);",
      "72: require_capability('mod/wiki:editpage', $context);",
      "",
      "[Added Lines]",
      "71: if (!wiki_user_can_edit($subwiki)) {",
      "72:     print_error('cannoteditpage', 'wiki');",
      "73: }",
      "",
      "---------------"
    ],
    "mod/wiki/map.php||mod/wiki/map.php": [
      "File: mod/wiki/map.php -> mod/wiki/map.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "54: }",
      "56: require_login($course, true, $cm);",
      "60: $wikipage = new page_wiki_map($wiki, $subwiki, $cm);",
      "62: $event = \\mod_wiki\\event\\page_map_viewed::create(",
      "63:         array(",
      "64:             'context' => $context,",
      "",
      "[Removed Lines]",
      "57: $context = context_module::instance($cm->id);",
      "58: require_capability('mod/wiki:viewpage', $context);",
      "",
      "[Added Lines]",
      "58: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "59:     print_error('cannotviewpage', 'wiki');",
      "60: }",
      "64: $context = context_module::instance($cm->id);",
      "",
      "---------------"
    ],
    "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php": [
      "File: mod/wiki/overridelocks.php -> mod/wiki/overridelocks.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "65: require_login($course, true, $cm);",
      "72: }",
      "74: $wikipage = new page_wiki_overridelocks($wiki, $subwiki, $cm);",
      "75: $wikipage->set_page($page);",
      "",
      "[Removed Lines]",
      "67: $context = context_module::instance($cm->id);",
      "68: require_capability('mod/wiki:overridelock', $context);",
      "70: if (!confirm_sesskey()) {",
      "71:     print_error(get_string('invalidsesskey', 'wiki'));",
      "",
      "[Added Lines]",
      "67: require_sesskey();",
      "69: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "70:     print_error('cannotviewpage', 'wiki');",
      "72: $context = context_module::instance($cm->id);",
      "73: require_capability('mod/wiki:overridelock', $context);",
      "",
      "---------------"
    ],
    "mod/wiki/prettyview.php||mod/wiki/prettyview.php": [
      "File: mod/wiki/prettyview.php -> mod/wiki/prettyview.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "54: require_login($course, true, $cm);",
      "59: $wikipage = new page_wiki_prettyview($wiki, $subwiki, $cm);",
      "61: $wikipage->set_page($page);",
      "63: $event = \\mod_wiki\\event\\page_viewed::create(",
      "64:         array(",
      "65:             'context' => $context,",
      "",
      "[Removed Lines]",
      "56: $context = context_module::instance($cm->id);",
      "57: require_capability('mod/wiki:viewpage', $context);",
      "",
      "[Added Lines]",
      "56: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "57:     print_error('cannotviewpage', 'wiki');",
      "58: }",
      "64: $context = context_module::instance($cm->id);",
      "",
      "---------------"
    ],
    "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php": [
      "File: mod/wiki/restoreversion.php -> mod/wiki/restoreversion.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "61: require_login($course, true, $cm);",
      "63: if ($confirm) {",
      "64:     if (!confirm_sesskey()) {",
      "65:         print_error(get_string('invalidsesskey', 'wiki'));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "63: if (!wiki_user_can_view($subwiki)) {",
      "64:     print_error('cannotviewpage', 'wiki');",
      "65: }",
      "",
      "---------------"
    ],
    "mod/wiki/search.php||mod/wiki/search.php": [
      "File: mod/wiki/search.php -> mod/wiki/search.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "45:     $gid = 0;",
      "46: }",
      "47: if (!$subwiki = wiki_get_subwiki_by_group($cm->instance, $gid)) {",
      "49: }",
      "50: if (!$wiki = wiki_get_wiki($subwiki->wikiid)) {",
      "51:     print_error('incorrectwikiid', 'wiki');",
      "52: }",
      "54: $wikipage = new page_wiki_search($wiki, $subwiki, $cm);",
      "56: $wikipage->set_search_string($search, $searchcontent);",
      "",
      "[Removed Lines]",
      "48:     return false;",
      "",
      "[Added Lines]",
      "48:     print_error('incorrectsubwikiid', 'wiki');",
      "54: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "55:     print_error('cannotviewfiles', 'wiki');",
      "56: }",
      "",
      "---------------"
    ],
    "mod/wiki/view.php||mod/wiki/view.php": [
      "File: mod/wiki/view.php -> mod/wiki/view.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "271:     print_error('incorrectparameters');",
      "272: }",
      "278: require_once($CFG->libdir . '/completionlib.php');",
      "",
      "[Removed Lines]",
      "274: $context = context_module::instance($cm->id);",
      "275: require_capability('mod/wiki:viewpage', $context);",
      "",
      "[Added Lines]",
      "274: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "275:     print_error('cannotviewpage', 'wiki');",
      "276: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "288: $wikipage->set_gid($currentgroup);",
      "289: $wikipage->set_page($page);",
      "291: if($pageid) {",
      "292:     $event = \\mod_wiki\\event\\page_viewed::create(",
      "293:             array(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "292: $context = context_module::instance($cm->id);",
      "",
      "---------------"
    ],
    "mod/wiki/viewversion.php||mod/wiki/viewversion.php": [
      "File: mod/wiki/viewversion.php -> mod/wiki/viewversion.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "61: require_login($course, true, $cm);",
      "63: $wikipage = new page_wiki_viewversion($wiki, $subwiki, $cm);",
      "65: $wikipage->set_page($page);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "63: if (!wiki_user_can_view($subwiki, $wiki)) {",
      "64:     print_error('cannotviewpage', 'wiki');",
      "65: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c7a8cef65ea6c9b8761c397b5528da9ee9c157ba",
      "candidate_info": {
        "commit_hash": "c7a8cef65ea6c9b8761c397b5528da9ee9c157ba",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/c7a8cef65ea6c9b8761c397b5528da9ee9c157ba",
        "files": [
          "mod/wiki/lib.php"
        ],
        "message": "MDL-44471 Revert \"MDL-42238 mod_wiki: Alternate name sql update to wiki_print_recent_activity\"\n\nThis reverts commit 6d3d9bd927d5386b1dc4fbbcb7db5559efa7a5cd.",
        "before_after_code_files": [
          "mod/wiki/lib.php||mod/wiki/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/wiki/lib.php||mod/wiki/lib.php"
          ],
          "candidate": [
            "mod/wiki/lib.php||mod/wiki/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/wiki/lib.php||mod/wiki/lib.php": [
          "File: mod/wiki/lib.php -> mod/wiki/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "279: function wiki_print_recent_activity($course, $viewfullnames, $timestart) {",
          "280:     global $CFG, $DB, $OUTPUT;",
          "284:             FROM {wiki_pages} p",
          "285:                 JOIN {wiki_subwikis} sw ON sw.id = p.subwikiid",
          "286:                 JOIN {wiki} w ON w.id = sw.wikiid",
          "288:             WHERE p.timemodified > ? AND w.course = ?",
          "289:             ORDER BY p.timemodified ASC\";",
          "290:     if (!$pages = $DB->get_records_sql($sql, array($timestart, $course->id))) {",
          "",
          "[Removed Lines]",
          "282:     $usernamefields = get_all_user_name_fields(true, 'u');",
          "283:     $sql = \"SELECT p.id, p.timemodified, p.subwikiid, sw.wikiid, w.wikimode, sw.userid, sw.groupid, $usernamefields",
          "287:                 JOIN {user} u ON u.id = sw.userid",
          "",
          "[Added Lines]",
          "282:     $sql = \"SELECT p.id, p.timemodified, p.subwikiid, sw.wikiid, w.wikimode, sw.userid, sw.groupid",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d3adc16e4835798a69bb0181f7a833a7b836ffe3",
      "candidate_info": {
        "commit_hash": "d3adc16e4835798a69bb0181f7a833a7b836ffe3",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/d3adc16e4835798a69bb0181f7a833a7b836ffe3",
        "files": [
          "mod/wiki/lib.php",
          "mod/wiki/pagelib.php",
          "mod/wiki/renderer.php",
          "mod/wiki/search.php",
          "mod/wiki/tests/behat/wiki_search.feature"
        ],
        "message": "MDL-33486 wiki: allow searching individual wikis",
        "before_after_code_files": [
          "mod/wiki/lib.php||mod/wiki/lib.php",
          "mod/wiki/pagelib.php||mod/wiki/pagelib.php",
          "mod/wiki/renderer.php||mod/wiki/renderer.php",
          "mod/wiki/search.php||mod/wiki/search.php",
          "mod/wiki/tests/behat/wiki_search.feature||mod/wiki/tests/behat/wiki_search.feature"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/wiki/lib.php||mod/wiki/lib.php",
            "mod/wiki/search.php||mod/wiki/search.php"
          ],
          "candidate": [
            "mod/wiki/lib.php||mod/wiki/lib.php",
            "mod/wiki/search.php||mod/wiki/search.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/wiki/lib.php||mod/wiki/lib.php": [
          "File: mod/wiki/lib.php -> mod/wiki/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "443:     }",
          "444: }",
          "447:     global $CFG, $OUTPUT;",
          "449:     $output = '<div class=\"wikisearch\">';",
          "",
          "[Removed Lines]",
          "446: function wiki_search_form($cm, $search = '') {",
          "",
          "[Added Lines]",
          "446: function wiki_search_form($cm, $search = '', $subwiki = null) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "454:     $output .= '<input id=\"searchwiki\" name=\"searchstring\" type=\"text\" size=\"18\" value=\"' . s($search, true) . '\" alt=\"search\" />';",
          "455:     $output .= '<input name=\"courseid\" type=\"hidden\" value=\"' . $cm->course . '\" />';",
          "456:     $output .= '<input name=\"cmid\" type=\"hidden\" value=\"' . $cm->id . '\" />';",
          "457:     $output .= '<input name=\"searchwikicontent\" type=\"hidden\" value=\"1\" />';",
          "458:     $output .= '<input value=\"' . get_string('searchwikis', 'wiki') . '\" type=\"submit\" />';",
          "459:     $output .= '</fieldset>';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "457:     if (!empty($subwiki->id)) {",
          "458:         $output .= '<input name=\"subwikiid\" type=\"hidden\" value=\"' . $subwiki->id . '\" />';",
          "459:     }",
          "",
          "---------------"
        ],
        "mod/wiki/pagelib.php||mod/wiki/pagelib.php": [
          "File: mod/wiki/pagelib.php -> mod/wiki/pagelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:         $PAGE->set_cm($cm);",
          "111:         $PAGE->set_activity_record($wiki);",
          "114:     }",
          "",
          "[Removed Lines]",
          "113:         $PAGE->set_button(wiki_search_form($cm));",
          "",
          "[Added Lines]",
          "113:         if (!empty($subwiki->id)) {",
          "114:             $search = optional_param('searchstring', null, PARAM_ALPHANUMEXT);",
          "115:             $PAGE->set_button(wiki_search_form($cm, $search, $subwiki));",
          "116:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "828:         global $PAGE, $CFG;",
          "829:         $PAGE->set_url($CFG->wwwroot . '/mod/wiki/search.php');",
          "830:     }",
          "831:     function print_content() {",
          "832:         global $PAGE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "835:     function print_header() {",
          "836:         global $PAGE;",
          "838:         parent::print_header();",
          "840:         $wiki = $PAGE->activityrecord;",
          "841:         $page = (object)array('title' => $wiki->firstpagetitle);",
          "842:         $this->wikioutput->wiki_print_subwiki_selector($wiki, $this->subwiki, $page, 'search');",
          "843:     }",
          "",
          "---------------"
        ],
        "mod/wiki/renderer.php||mod/wiki/renderer.php": [
          "File: mod/wiki/renderer.php -> mod/wiki/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "302:     public function wiki_print_subwiki_selector($wiki, $subwiki, $page, $pagetype = 'view') {",
          "303:         global $CFG, $USER;",
          "304:         require_once($CFG->dirroot . '/user/lib.php');",
          "305:         switch ($pagetype) {",
          "306:         case 'files':",
          "308:             break;",
          "309:         case 'view':",
          "310:         default:",
          "312:             break;",
          "313:         }",
          "316:         $context = context_module::instance($cm->id);",
          "",
          "[Removed Lines]",
          "307:             $baseurl = new moodle_url('/mod/wiki/files.php');",
          "311:             $baseurl = new moodle_url('/mod/wiki/view.php');",
          "315:         $cm = get_coursemodule_from_instance('wiki', $wiki->id);",
          "",
          "[Added Lines]",
          "305:         $cm = get_coursemodule_from_instance('wiki', $wiki->id);",
          "309:             $baseurl = new moodle_url('/mod/wiki/files.php',",
          "310:                     array('wid' => $wiki->id, 'title' => $page->title, 'pageid' => $page->id));",
          "311:             break;",
          "312:         case 'search':",
          "313:             $search = optional_param('searchstring', null, PARAM_ALPHANUMEXT);",
          "314:             $searchcontent = optional_param('searchwikicontent', 0, PARAM_INT);",
          "315:             $baseurl = new moodle_url('/mod/wiki/search.php',",
          "316:                     array('cmid' => $cm->id, 'courseid' => $cm->course,",
          "317:                         'searchstring' => $search, 'searchwikicontent' => $searchcontent));",
          "321:             $baseurl = new moodle_url('/mod/wiki/view.php',",
          "322:                     array('wid' => $wiki->id, 'title' => $page->title));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "337:                     }",
          "339:                     echo $this->output->container_start('wiki_right');",
          "345:                     $name = 'uid';",
          "346:                     $selected = $subwiki->userid;",
          "347:                     echo $this->output->single_select($baseurl, $name, $options, $selected);",
          "",
          "[Removed Lines]",
          "340:                     $params = array('wid' => $wiki->id, 'title' => $page->title);",
          "341:                     if ($pagetype == 'files') {",
          "342:                         $params['pageid'] = $page->id;",
          "343:                     }",
          "344:                     $baseurl->params($params);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "356:             if ($wiki->wikimode == 'collaborative') {",
          "365:                 echo $this->output->container_start('wiki_right');",
          "366:                 groups_print_activity_menu($cm, $baseurl);",
          "367:                 echo $this->output->container_end();",
          "",
          "[Removed Lines]",
          "359:                 $params = array('wid'=>$wiki->id, 'title'=>$page->title);",
          "360:                 if ($pagetype == 'files') {",
          "361:                     $params['pageid'] = $page->id;",
          "362:                 }",
          "363:                 $baseurl->params($params);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "397:                     }",
          "398:                 }",
          "399:                 echo $this->output->container_start('wiki_right');",
          "405:                 $name = 'groupanduser';",
          "406:                 $selected = $subwiki->groupid . '-' . $subwiki->userid;",
          "407:                 echo $this->output->single_select($baseurl, $name, $options, $selected);",
          "",
          "[Removed Lines]",
          "400:                 $params = array('wid' => $wiki->id, 'title' => $page->title);",
          "401:                 if ($pagetype == 'files') {",
          "402:                     $params['pageid'] = $page->id;",
          "403:                 }",
          "404:                 $baseurl->params($params);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "417:             if ($wiki->wikimode == 'collaborative') {",
          "426:                 echo $this->output->container_start('wiki_right');",
          "427:                 groups_print_activity_menu($cm, $baseurl);",
          "",
          "[Removed Lines]",
          "420:                 $params = array('wid'=>$wiki->id, 'title'=>$page->title);",
          "421:                 if ($pagetype == 'files') {",
          "422:                     $params['pageid'] = $page->id;",
          "423:                 }",
          "424:                 $baseurl->params($params);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "444:                 }",
          "446:                 echo $this->output->container_start('wiki_right');",
          "452:                 $name = 'groupanduser';",
          "453:                 $selected = $subwiki->groupid . '-' . $subwiki->userid;",
          "454:                 echo $this->output->single_select($baseurl, $name, $options, $selected);",
          "",
          "[Removed Lines]",
          "447:                 $params = array('wid' => $wiki->id, 'title' => $page->title);",
          "448:                 if ($pagetype == 'files') {",
          "449:                     $params['pageid'] = $page->id;",
          "450:                 }",
          "451:                 $baseurl->params($params);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "mod/wiki/search.php||mod/wiki/search.php": [
          "File: mod/wiki/search.php -> mod/wiki/search.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: $courseid = optional_param('courseid', 0, PARAM_INT);",
          "31: $searchcontent = optional_param('searchwikicontent', 0, PARAM_INT);",
          "32: $cmid = optional_param('cmid', 0, PARAM_INT);",
          "34: if (!$course = $DB->get_record('course', array('id' => $courseid))) {",
          "35:     print_error('invalidcourseid');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: $subwikiid = optional_param('subwikiid', 0, PARAM_INT);",
          "34: $userid = optional_param('uid', 0, PARAM_INT);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41: require_login($course, true, $cm);",
          "51:     print_error('incorrectwikiid', 'wiki');",
          "52: }",
          "56: }",
          "58: $wikipage = new page_wiki_search($wiki, $subwiki, $cm);",
          "",
          "[Removed Lines]",
          "44: if (!$gid = groups_get_activity_group($cm)) {",
          "45:     $gid = 0;",
          "46: }",
          "47: if (!$subwiki = wiki_get_subwiki_by_group($cm->instance, $gid)) {",
          "48:     print_error('incorrectsubwikiid', 'wiki');",
          "49: }",
          "50: if (!$wiki = wiki_get_wiki($subwiki->wikiid)) {",
          "54: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "55:     print_error('cannotviewfiles', 'wiki');",
          "",
          "[Added Lines]",
          "46: if (!$wiki = wiki_get_wiki($cm->instance)) {",
          "50: if ($subwikiid) {",
          "52:     $subwiki = wiki_get_subwiki($subwikiid);",
          "53:     if (!$subwiki || $subwiki->wikiid != $wiki->id) {",
          "54:         print_error('incorrectsubwikiid', 'wiki');",
          "55:     }",
          "56: } else {",
          "58:     $gid = groups_get_activity_group($cm);",
          "61:     if ($wiki->wikimode == 'individual') {",
          "62:         $userid = $userid ? $userid : $USER->id;",
          "63:     } else {",
          "64:         $userid = 0;",
          "65:     }",
          "66:     if (!$subwiki = wiki_get_subwiki_by_group($cm->instance, $gid, $userid)) {",
          "68:         $params = array('wid' => $wiki->id, 'group' => $gid, 'uid' => $userid, 'title' => $wiki->firstpagetitle);",
          "69:         $url = new moodle_url('/mod/wiki/view.php', $params);",
          "70:         redirect($url);",
          "71:     }",
          "72: }",
          "74: if ($subwiki && !wiki_user_can_view($subwiki, $wiki)) {",
          "75:     print_error('cannotviewpage', 'wiki');",
          "",
          "---------------"
        ],
        "mod/wiki/tests/behat/wiki_search.feature||mod/wiki/tests/behat/wiki_search.feature": [
          "File: mod/wiki/tests/behat/wiki_search.feature -> mod/wiki/tests/behat/wiki_search.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @mod @mod_wiki",
          "2: Feature: Users can search wikis",
          "3:   In order to find information in wiki",
          "4:   As a user",
          "5:   I need to be able to search individual and collaborative wikis",
          "7:   Background:",
          "8:     Given the following \"users\" exist:",
          "9:       | username | firstname | lastname | email |",
          "10:       | teacher1 | Teacher | 1 | teacher1@asd.com |",
          "11:       | student1 | Student | 1 | student1@asd.com |",
          "12:       | student2 | Student | 2 | student2@asd.com |",
          "13:     And the following \"courses\" exist:",
          "14:       | fullname | shortname | category |",
          "15:       | Course 1 | C1 | 0 |",
          "16:     And the following \"course enrolments\" exist:",
          "17:       | user | course | role |",
          "18:       | teacher1 | C1 | editingteacher |",
          "19:       | student1 | C1 | student |",
          "20:       | student2 | C1 | student |",
          "22:   @javascript",
          "23:   Scenario: Searching collaborative wiki",
          "24:     Given I log in as \"teacher1\"",
          "25:     And I follow \"Course 1\"",
          "26:     And I turn editing mode on",
          "27:     And I add a \"Wiki\" to section \"1\" and I fill the form with:",
          "28:       | Wiki name | Collaborative wiki name |",
          "29:       | Description | Collaborative wiki description |",
          "30:       | First page name | Collaborative index |",
          "31:       | Wiki mode | Collaborative wiki |",
          "32:     And I follow \"Collaborative wiki name\"",
          "33:     And I press \"Create page\"",
          "34:     And I set the following fields to these values:",
          "35:       | HTML format | Collaborative teacher1 page [[new page]] |",
          "36:     And I press \"Save\"",
          "37:     And I follow \"Course 1\"",
          "38:     And I log out",
          "39:     And I log in as \"student1\"",
          "40:     And I follow \"Course 1\"",
          "41:     And I follow \"Collaborative wiki name\"",
          "42:     And I follow \"new page\"",
          "43:     And I press \"Create page\"",
          "44:     And I set the following fields to these values:",
          "45:       | HTML format | New page created by student1 |",
          "46:     And I press \"Save\"",
          "47:     When I set the field \"searchstring\" to \"page\"",
          "48:     And I press \"Search wikis\"",
          "49:     Then I should see \"New page created by student1\"",
          "50:     And I should see \"Collaborative teacher1 page\"",
          "51:     And I set the field \"searchstring\" to \"teacher1\"",
          "52:     And I press \"Search wikis\"",
          "53:     And I should not see \"New page created by student1\"",
          "54:     And I should see \"Collaborative teacher1 page\"",
          "55:     And I log out",
          "58:   @javascript",
          "59:   Scenario: Searching individual wiki",
          "60:     Given I log in as \"teacher1\"",
          "61:     And I follow \"Course 1\"",
          "62:     And I turn editing mode on",
          "63:     And I add a \"Wiki\" to section \"1\" and I fill the form with:",
          "64:       | Wiki name | Individual wiki name |",
          "65:       | Description | Individual wiki description |",
          "66:       | First page name | Individual index |",
          "67:       | Wiki mode | Individual wiki |",
          "68:     And I follow \"Individual wiki name\"",
          "69:     And I press \"Create page\"",
          "70:     And I set the following fields to these values:",
          "71:       | HTML format | Individual teacher1 page |",
          "72:     And I press \"Save\"",
          "73:     And I log out",
          "74:     And I log in as \"student1\"",
          "75:     And I follow \"Course 1\"",
          "76:     And I follow \"Individual wiki name\"",
          "77:     And I press \"Create page\"",
          "78:     And I set the following fields to these values:",
          "79:       | HTML format | Individual student1 page |",
          "80:     And I press \"Save\"",
          "81:     When I set the field \"searchstring\" to \"page\"",
          "82:     And I press \"Search wikis\"",
          "83:     Then I should see \"Individual student1 page\"",
          "84:     And I should not see \"Individual teacher1 page\"",
          "85:     And I log out",
          "86:     And I log in as \"student2\"",
          "87:     And I follow \"Course 1\"",
          "88:     And I follow \"Individual wiki name\"",
          "89:     And I press \"Create page\"",
          "90:     And I set the following fields to these values:",
          "91:       | HTML format | Individual student2 page |",
          "92:     And I press \"Save\"",
          "93:     And I set the field \"searchstring\" to \"page\"",
          "94:     And I press \"Search wikis\"",
          "95:     And I should see \"Individual student2 page\"",
          "96:     And I should not see \"Individual student1 page\"",
          "97:     And I should not see \"Individual teacher1 page\"",
          "98:     And I log out",
          "99:     And I log in as \"teacher1\"",
          "100:     And I follow \"Course 1\"",
          "101:     And I follow \"Individual wiki name\"",
          "102:     And I set the field \"searchstring\" to \"page\"",
          "103:     And I press \"Search wikis\"",
          "104:     And I should see \"Individual teacher1 page\"",
          "105:     And I should not see \"Individual student1 page\"",
          "106:     And I should not see \"Individual student2 page\"",
          "107:     And I set the field \"uid\" to \"Student 1\"",
          "108:     And I should not see \"Individual teacher1 page\"",
          "109:     And I should see \"Individual student1 page\"",
          "110:     And I should not see \"Individual student2 page\"",
          "111:     And I set the field \"uid\" to \"Student 2\"",
          "112:     And I should not see \"Individual teacher1 page\"",
          "113:     And I should not see \"Individual student1 page\"",
          "114:     And I should see \"Individual student2 page\"",
          "115:     And I log out",
          "117:   @javascript",
          "118:   Scenario: Searching group wiki",
          "119:     Given the following \"groups\" exist:",
          "120:       | name | course | idnumber |",
          "121:       | Group1 | C1 | G1 |",
          "122:       | Group2 | C1 | G2 |",
          "123:     And the following \"group members\" exist:",
          "124:       | user | group |",
          "125:       | student1 | G1 |",
          "126:       | student2 | G2 |",
          "127:     And I log in as \"teacher1\"",
          "128:     And I follow \"Course 1\"",
          "129:     And I turn editing mode on",
          "130:     And I add a \"Wiki\" to section \"1\" and I fill the form with:",
          "131:       | Wiki name | Group wiki name |",
          "132:       | Description | Wiki description |",
          "133:       | First page name | Groups index |",
          "134:       | Wiki mode | Collaborative wiki |",
          "135:       | Group mode | Separate groups |",
          "136:     And I follow \"Group wiki name\"",
          "137:     And I set the field \"Group\" to \"All participants\"",
          "138:     And I press \"Create page\"",
          "139:     And I set the following fields to these values:",
          "140:       | HTML format | All participants teacher1 page |",
          "141:     And I press \"Save\"",
          "142:     And I set the field \"group\" to \"Group1\"",
          "143:     And I press \"Create page\"",
          "144:     And I set the following fields to these values:",
          "145:       | HTML format | Group1 teacher1 page [[new page1]] |",
          "146:     And I press \"Save\"",
          "147:     And I set the field \"group\" to \"Group2\"",
          "148:     And I press \"Create page\"",
          "149:     And I set the following fields to these values:",
          "150:       | HTML format | Group2 teacher1 page [[new page2]] |",
          "151:     And I press \"Save\"",
          "152:     And I log out",
          "153:     And I log in as \"student1\"",
          "154:     And I follow \"Course 1\"",
          "155:     And I follow \"Group wiki name\"",
          "156:     And I follow \"new page1\"",
          "157:     And I press \"Create page\"",
          "158:     And I set the following fields to these values:",
          "159:       | HTML format | Group1 student1 new page |",
          "160:     And I press \"Save\"",
          "161:     When I set the field \"searchstring\" to \"page\"",
          "162:     And I press \"Search wikis\"",
          "163:     Then I should see \"Group1 teacher1 page\"",
          "164:     And I should not see \"Group2 teacher1 page\"",
          "165:     And I should see \"Group1 student1 new page\"",
          "166:     And I should not see \"All participants teacher1 page\"",
          "167:     And I log out",
          "168:     And I log in as \"student2\"",
          "169:     And I follow \"Course 1\"",
          "170:     And I follow \"Group wiki name\"",
          "171:     And I follow \"new page2\"",
          "172:     And I press \"Create page\"",
          "173:     And I set the following fields to these values:",
          "174:       | HTML format | Group2 student2 new page |",
          "175:     And I press \"Save\"",
          "176:     And I set the field \"searchstring\" to \"page\"",
          "177:     And I press \"Search wikis\"",
          "178:     And I should not see \"Group1 teacher1 page\"",
          "179:     And I should see \"Group2 teacher1 page\"",
          "180:     And I should not see \"Group1 student1 new page\"",
          "181:     And I should see \"Group2 student2 new page\"",
          "182:     And I should not see \"All participants teacher1 page\"",
          "183:     And I log out",
          "184:     And I log in as \"teacher1\"",
          "185:     And I follow \"Course 1\"",
          "186:     And I follow \"Group wiki name\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d3d9bd927d5386b1dc4fbbcb7db5559efa7a5cd",
      "candidate_info": {
        "commit_hash": "6d3d9bd927d5386b1dc4fbbcb7db5559efa7a5cd",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/6d3d9bd927d5386b1dc4fbbcb7db5559efa7a5cd",
        "files": [
          "mod/wiki/lib.php"
        ],
        "message": "MDL-42238 - mod_wiki: Alternate name sql update to wiki_print_recent_activity",
        "before_after_code_files": [
          "mod/wiki/lib.php||mod/wiki/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "mod/wiki/lib.php||mod/wiki/lib.php"
          ],
          "candidate": [
            "mod/wiki/lib.php||mod/wiki/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/wiki/lib.php||mod/wiki/lib.php": [
          "File: mod/wiki/lib.php -> mod/wiki/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "279: function wiki_print_recent_activity($course, $viewfullnames, $timestart) {",
          "280:     global $CFG, $DB, $OUTPUT;",
          "283:             FROM {wiki_pages} p",
          "284:                 JOIN {wiki_subwikis} sw ON sw.id = p.subwikiid",
          "285:                 JOIN {wiki} w ON w.id = sw.wikiid",
          "286:             WHERE p.timemodified > ? AND w.course = ?",
          "287:             ORDER BY p.timemodified ASC\";",
          "288:     if (!$pages = $DB->get_records_sql($sql, array($timestart, $course->id))) {",
          "",
          "[Removed Lines]",
          "282:     $sql = \"SELECT p.*, w.id as wikiid, sw.groupid",
          "",
          "[Added Lines]",
          "282:     $usernamefields = get_all_user_name_fields(true, 'u');",
          "283:     $sql = \"SELECT p.*, w.id as wikiid, sw.groupid, $usernamefields",
          "287:                 JOIN {user} u ON u.id = sw.userid",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e6499fb8a4463b1130babb09c42f3d5559276d17",
      "candidate_info": {
        "commit_hash": "e6499fb8a4463b1130babb09c42f3d5559276d17",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/e6499fb8a4463b1130babb09c42f3d5559276d17",
        "files": [
          "mod/wiki/admin.php",
          "mod/wiki/comments.php",
          "mod/wiki/create_form.php",
          "mod/wiki/diff.php",
          "mod/wiki/edit.php",
          "mod/wiki/editcomments.php",
          "mod/wiki/files.php",
          "mod/wiki/filesedit.php",
          "mod/wiki/history.php",
          "mod/wiki/lib.php",
          "mod/wiki/locallib.php",
          "mod/wiki/lock.php",
          "mod/wiki/map.php",
          "mod/wiki/overridelocks.php",
          "mod/wiki/prettyview.php",
          "mod/wiki/restoreversion.php",
          "mod/wiki/search.php",
          "mod/wiki/view.php",
          "mod/wiki/viewversion.php"
        ],
        "message": "MDL-39990 wiki: more detailed validation of view/edit access",
        "before_after_code_files": [
          "mod/wiki/admin.php||mod/wiki/admin.php",
          "mod/wiki/comments.php||mod/wiki/comments.php",
          "mod/wiki/create_form.php||mod/wiki/create_form.php",
          "mod/wiki/diff.php||mod/wiki/diff.php",
          "mod/wiki/edit.php||mod/wiki/edit.php",
          "mod/wiki/editcomments.php||mod/wiki/editcomments.php",
          "mod/wiki/files.php||mod/wiki/files.php",
          "mod/wiki/filesedit.php||mod/wiki/filesedit.php",
          "mod/wiki/history.php||mod/wiki/history.php",
          "mod/wiki/lib.php||mod/wiki/lib.php",
          "mod/wiki/locallib.php||mod/wiki/locallib.php",
          "mod/wiki/lock.php||mod/wiki/lock.php",
          "mod/wiki/map.php||mod/wiki/map.php",
          "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php",
          "mod/wiki/prettyview.php||mod/wiki/prettyview.php",
          "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php",
          "mod/wiki/search.php||mod/wiki/search.php",
          "mod/wiki/view.php||mod/wiki/view.php",
          "mod/wiki/viewversion.php||mod/wiki/viewversion.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "mod/wiki/admin.php||mod/wiki/admin.php",
            "mod/wiki/comments.php||mod/wiki/comments.php",
            "mod/wiki/create_form.php||mod/wiki/create_form.php",
            "mod/wiki/diff.php||mod/wiki/diff.php",
            "mod/wiki/edit.php||mod/wiki/edit.php",
            "mod/wiki/editcomments.php||mod/wiki/editcomments.php",
            "mod/wiki/files.php||mod/wiki/files.php",
            "mod/wiki/filesedit.php||mod/wiki/filesedit.php",
            "mod/wiki/history.php||mod/wiki/history.php",
            "mod/wiki/lib.php||mod/wiki/lib.php",
            "mod/wiki/locallib.php||mod/wiki/locallib.php",
            "mod/wiki/lock.php||mod/wiki/lock.php",
            "mod/wiki/map.php||mod/wiki/map.php",
            "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php",
            "mod/wiki/prettyview.php||mod/wiki/prettyview.php",
            "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php",
            "mod/wiki/search.php||mod/wiki/search.php",
            "mod/wiki/view.php||mod/wiki/view.php",
            "mod/wiki/viewversion.php||mod/wiki/viewversion.php"
          ],
          "candidate": [
            "mod/wiki/admin.php||mod/wiki/admin.php",
            "mod/wiki/comments.php||mod/wiki/comments.php",
            "mod/wiki/create_form.php||mod/wiki/create_form.php",
            "mod/wiki/diff.php||mod/wiki/diff.php",
            "mod/wiki/edit.php||mod/wiki/edit.php",
            "mod/wiki/editcomments.php||mod/wiki/editcomments.php",
            "mod/wiki/files.php||mod/wiki/files.php",
            "mod/wiki/filesedit.php||mod/wiki/filesedit.php",
            "mod/wiki/history.php||mod/wiki/history.php",
            "mod/wiki/lib.php||mod/wiki/lib.php",
            "mod/wiki/locallib.php||mod/wiki/locallib.php",
            "mod/wiki/lock.php||mod/wiki/lock.php",
            "mod/wiki/map.php||mod/wiki/map.php",
            "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php",
            "mod/wiki/prettyview.php||mod/wiki/prettyview.php",
            "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php",
            "mod/wiki/search.php||mod/wiki/search.php",
            "mod/wiki/view.php||mod/wiki/view.php",
            "mod/wiki/viewversion.php||mod/wiki/viewversion.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/wiki/admin.php||mod/wiki/admin.php": [
          "File: mod/wiki/admin.php -> mod/wiki/admin.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: require_login($course, true, $cm);",
          "59: $context = context_module::instance($cm->id);",
          "60: require_capability('mod/wiki:managewiki', $context);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "59:     print_error('cannotviewpage', 'wiki');",
          "60: }",
          "",
          "---------------"
        ],
        "mod/wiki/comments.php||mod/wiki/comments.php": [
          "File: mod/wiki/comments.php -> mod/wiki/comments.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: require_login($course, true, $cm);",
          "62: add_to_log($course->id, 'wiki', 'comments', \"comments.php?pageid=\".$pageid, $pageid, $cm->id);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "63:     print_error('cannotviewpage', 'wiki');",
          "64: }",
          "",
          "---------------"
        ],
        "mod/wiki/create_form.php||mod/wiki/create_form.php": [
          "File: mod/wiki/create_form.php -> mod/wiki/create_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:                 $groupname = $groupinfo[$groupid];",
          "78:                 $mform->addElement('static', 'groupdesciption', get_string('group'), $groupname);",
          "79:                 $mform->addElement('hidden', 'groupinfo', $groupid);",
          "80:             }",
          "81:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:                 $mform->setType('groupinfo', PARAM_INT);",
          "",
          "---------------"
        ],
        "mod/wiki/diff.php||mod/wiki/diff.php": [
          "File: mod/wiki/diff.php -> mod/wiki/diff.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: require_login($course, true, $cm);",
          "71: $wikipage = new page_wiki_diff($wiki, $subwiki, $cm);",
          "73: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "72:     print_error('cannotviewpage', 'wiki');",
          "73: }",
          "",
          "---------------"
        ],
        "mod/wiki/edit.php||mod/wiki/edit.php": [
          "File: mod/wiki/edit.php -> mod/wiki/edit.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "75: require_login($course, true, $cm);",
          "77: $context = context_module::instance($cm->id);",
          "80: if ($option == get_string('save', 'wiki')) {",
          "81:     if (!confirm_sesskey()) {",
          "",
          "[Removed Lines]",
          "78: require_capability('mod/wiki:editpage', $context);",
          "",
          "[Added Lines]",
          "79: if (!wiki_user_can_edit($subwiki)) {",
          "80:     print_error('cannoteditpage', 'wiki');",
          "81: }",
          "",
          "---------------"
        ],
        "mod/wiki/editcomments.php||mod/wiki/editcomments.php": [
          "File: mod/wiki/editcomments.php -> mod/wiki/editcomments.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: }",
          "55: require_login($course, true, $cm);",
          "57: $editcomments = new page_wiki_editcomment($wiki, $subwiki, $cm);",
          "58: $comment = new stdClass();",
          "59: if ($action == 'edit') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "58:     print_error('cannotviewpage', 'wiki');",
          "59: }",
          "",
          "---------------"
        ],
        "mod/wiki/files.php||mod/wiki/files.php": [
          "File: mod/wiki/files.php -> mod/wiki/files.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: $PAGE->set_url('/mod/wiki/files.php', array('pageid'=>$pageid));",
          "80: require_login($course, true, $cm);",
          "82: $PAGE->set_title(get_string('wikifiles', 'wiki'));",
          "83: $PAGE->set_heading($course->fullname);",
          "84: $PAGE->navbar->add(format_string(get_string('wikifiles', 'wiki')));",
          "",
          "[Removed Lines]",
          "81: $PAGE->set_context($context);",
          "",
          "[Added Lines]",
          "82: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "83:     print_error('cannotviewfiles', 'wiki');",
          "84: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97: echo $OUTPUT->box_start('generalbox');",
          "104: echo $OUTPUT->box_end();",
          "106: if (has_capability('mod/wiki:managefiles', $context)) {",
          "",
          "[Removed Lines]",
          "98: if (has_capability('mod/wiki:viewpage', $context)) {",
          "99:     echo $renderer->wiki_print_subwiki_selector($PAGE->activityrecord, $subwiki, $page, 'files');",
          "100:     echo $renderer->wiki_files_tree($context, $subwiki);",
          "101: } else {",
          "102:     echo $OUTPUT->notification(get_string('cannotviewfiles', 'wiki'));",
          "103: }",
          "",
          "[Added Lines]",
          "102: echo $renderer->wiki_print_subwiki_selector($PAGE->activityrecord, $subwiki, $page, 'files');",
          "103: echo $renderer->wiki_files_tree($context, $subwiki);",
          "",
          "---------------"
        ],
        "mod/wiki/filesedit.php||mod/wiki/filesedit.php": [
          "File: mod/wiki/filesedit.php -> mod/wiki/filesedit.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: $context = context_module::instance($cm->id);",
          "55: require_login($course, true, $cm);",
          "56: require_capability('mod/wiki:managefiles', $context);",
          "58: if (empty($returnurl)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "58:     print_error('cannotviewpage', 'wiki');",
          "59: }",
          "",
          "---------------"
        ],
        "mod/wiki/history.php||mod/wiki/history.php": [
          "File: mod/wiki/history.php -> mod/wiki/history.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: $course = $DB->get_record('course', array('id' => $cm->course), '*', MUST_EXIST);",
          "61: require_login($course, true, $cm);",
          "64: add_to_log($course->id, 'wiki', 'history', \"history.php?pageid=\".$pageid, $pageid, $cm->id);",
          "",
          "[Removed Lines]",
          "62: $context = context_module::instance($cm->id);",
          "63: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "63: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "64:     print_error('cannotviewpage', 'wiki');",
          "65: }",
          "",
          "---------------"
        ],
        "mod/wiki/lib.php||mod/wiki/lib.php": [
          "File: mod/wiki/lib.php -> mod/wiki/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "280:     global $CFG, $DB, $OUTPUT;",
          "282:     $usernamefields = get_all_user_name_fields(true, 'u');",
          "284:             FROM {wiki_pages} p",
          "285:                 JOIN {wiki_subwikis} sw ON sw.id = p.subwikiid",
          "286:                 JOIN {wiki} w ON w.id = sw.wikiid",
          "",
          "[Removed Lines]",
          "283:     $sql = \"SELECT p.*, w.id as wikiid, sw.groupid, $usernamefields",
          "",
          "[Added Lines]",
          "283:     $sql = \"SELECT p.id, p.timemodified, p.subwikiid, sw.wikiid, w.wikimode, sw.userid, sw.groupid, $usernamefields",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "290:     if (!$pages = $DB->get_records_sql($sql, array($timestart, $course->id))) {",
          "291:         return false;",
          "292:     }",
          "295:     $wikis = array();",
          "297:     $modinfo = get_fast_modinfo($course);",
          "299:     foreach ($pages as $page) {",
          "312:         }",
          "332:         }",
          "334:     }",
          "335:     unset($pages);",
          "337:     if (!$wikis) {",
          "",
          "[Removed Lines]",
          "293:     $modinfo = get_fast_modinfo($course);",
          "300:         if (!isset($modinfo->instances['wiki'][$page->wikiid])) {",
          "302:             continue;",
          "303:         }",
          "304:         $cm = $modinfo->instances['wiki'][$page->wikiid];",
          "305:         if (!$cm->uservisible) {",
          "306:             continue;",
          "307:         }",
          "308:         $context = context_module::instance($cm->id);",
          "310:         if (!has_capability('mod/wiki:viewpage', $context)) {",
          "311:             continue;",
          "314:         $groupmode = groups_get_activity_groupmode($cm, $course);",
          "316:         if ($groupmode) {",
          "317:             if ($groupmode == SEPARATEGROUPS and !has_capability('mod/wiki:managewiki', $context)) {",
          "319:                 if (isguestuser()) {",
          "321:                     continue;",
          "322:                 }",
          "324:                 if (is_null($modinfo->groups)) {",
          "325:                     $modinfo->groups = groups_get_user_groups($course->id); // load all my groups and cache it in modinfo",
          "326:                     }",
          "328:                 if (!in_array($page->groupid, $modinfo->groups[0])) {",
          "329:                     continue;",
          "330:                 }",
          "331:             }",
          "333:         $wikis[] = $page;",
          "",
          "[Added Lines]",
          "293:     require_once($CFG->dirroot . \"/mod/wiki/locallib.php\");",
          "299:     $subwikivisible = array();",
          "301:         if (!isset($subwikivisible[$page->subwikiid])) {",
          "302:             $subwiki = (object)array('id' => $page->subwikiid, 'wikiid' => $page->wikiid,",
          "303:                 'groupid' => $page->groupid, 'userid' => $page->userid);",
          "304:             $wiki = (object)array('id' => $page->wikiid, 'course' => $course->id, 'wikimode' => $page->wikimode);",
          "305:             $subwikivisible[$page->subwikiid] = wiki_user_can_view($subwiki, $wiki);",
          "307:         if ($subwikivisible[$page->subwikiid]) {",
          "308:             $wikis[] = $page;",
          "311:     unset($subwikivisible);",
          "",
          "---------------"
        ],
        "mod/wiki/locallib.php||mod/wiki/locallib.php": [
          "File: mod/wiki/locallib.php -> mod/wiki/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "725:     global $USER;",
          "729:     $context = context_module::instance($cm->id);",
          "",
          "[Removed Lines]",
          "724: function wiki_user_can_view($subwiki) {",
          "727:     $wiki = wiki_get_wiki($subwiki->wikiid);",
          "728:     $cm = get_coursemodule_from_instance('wiki', $wiki->id);",
          "",
          "[Added Lines]",
          "727: function wiki_user_can_view($subwiki, $wiki = null) {",
          "730:     if (empty($wiki) || $wiki->id != $subwiki->wikiid) {",
          "731:         $wiki = wiki_get_wiki($subwiki->wikiid);",
          "732:     }",
          "733:     $modinfo = get_fast_modinfo($wiki->course);",
          "734:     if (!isset($modinfo->instances['wiki'][$subwiki->wikiid])) {",
          "736:         return false;",
          "737:     }",
          "738:     $cm = $modinfo->instances['wiki'][$subwiki->wikiid];",
          "739:     if (!$cm->uservisible) {",
          "741:         return false;",
          "742:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "768:         if ($wiki->wikimode == 'collaborative' || $wiki->wikimode == 'individual') {",
          "772:                 return has_capability('mod/wiki:viewpage', $context);",
          "",
          "[Removed Lines]",
          "770:             if (groups_is_member($subwiki->groupid)) {",
          "",
          "[Added Lines]",
          "784:             if (in_array($subwiki->groupid, $modinfo->get_groups($cm->groupingid))) {",
          "",
          "---------------"
        ],
        "mod/wiki/lock.php||mod/wiki/lock.php": [
          "File: mod/wiki/lock.php -> mod/wiki/lock.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: require_login($course, false, $cm);",
          "74: $wikipage = new page_wiki_lock($wiki, $subwiki, $cm);",
          "75: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "71: $context = context_module::instance($cm->id);",
          "72: require_capability('mod/wiki:editpage', $context);",
          "",
          "[Added Lines]",
          "71: if (!wiki_user_can_edit($subwiki)) {",
          "72:     print_error('cannoteditpage', 'wiki');",
          "73: }",
          "",
          "---------------"
        ],
        "mod/wiki/map.php||mod/wiki/map.php": [
          "File: mod/wiki/map.php -> mod/wiki/map.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: }",
          "56: require_login($course, true, $cm);",
          "60: $wikipage = new page_wiki_map($wiki, $subwiki, $cm);",
          "61: add_to_log($course->id, \"wiki\", \"map\", \"map.php?pageid=\".$pageid, $pageid, $cm->id);",
          "",
          "[Removed Lines]",
          "57: $context = context_module::instance($cm->id);",
          "58: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "58: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "59:     print_error('cannotviewpage', 'wiki');",
          "60: }",
          "",
          "---------------"
        ],
        "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php": [
          "File: mod/wiki/overridelocks.php -> mod/wiki/overridelocks.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: require_login($course, true, $cm);",
          "72: }",
          "74: $wikipage = new page_wiki_overridelocks($wiki, $subwiki, $cm);",
          "75: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "67: $context = context_module::instance($cm->id);",
          "68: require_capability('mod/wiki:overridelock', $context);",
          "70: if (!confirm_sesskey()) {",
          "71:     print_error(get_string('invalidsesskey', 'wiki'));",
          "",
          "[Added Lines]",
          "67: require_sesskey();",
          "69: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "70:     print_error('cannotviewpage', 'wiki');",
          "72: $context = context_module::instance($cm->id);",
          "73: require_capability('mod/wiki:overridelock', $context);",
          "",
          "---------------"
        ],
        "mod/wiki/prettyview.php||mod/wiki/prettyview.php": [
          "File: mod/wiki/prettyview.php -> mod/wiki/prettyview.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: require_login($course, true, $cm);",
          "59: $wikipage = new page_wiki_prettyview($wiki, $subwiki, $cm);",
          "",
          "[Removed Lines]",
          "56: $context = context_module::instance($cm->id);",
          "57: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "56: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "57:     print_error('cannotviewpage', 'wiki');",
          "58: }",
          "",
          "---------------"
        ],
        "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php": [
          "File: mod/wiki/restoreversion.php -> mod/wiki/restoreversion.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: require_login($course, true, $cm);",
          "63: if ($confirm) {",
          "64:     if (!confirm_sesskey()) {",
          "65:         print_error(get_string('invalidsesskey', 'wiki'));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: if (!wiki_user_can_view($subwiki)) {",
          "64:     print_error('cannotviewpage', 'wiki');",
          "65: }",
          "",
          "---------------"
        ],
        "mod/wiki/search.php||mod/wiki/search.php": [
          "File: mod/wiki/search.php -> mod/wiki/search.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     $gid = 0;",
          "46: }",
          "47: if (!$subwiki = wiki_get_subwiki_by_group($cm->instance, $gid)) {",
          "49: }",
          "50: if (!$wiki = wiki_get_wiki($subwiki->wikiid)) {",
          "51:     print_error('incorrectwikiid', 'wiki');",
          "52: }",
          "54: $wikipage = new page_wiki_search($wiki, $subwiki, $cm);",
          "56: $wikipage->set_search_string($search, $searchcontent);",
          "",
          "[Removed Lines]",
          "48:     return false;",
          "",
          "[Added Lines]",
          "48:     print_error('incorrectsubwikiid', 'wiki');",
          "54: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "55:     print_error('cannotviewfiles', 'wiki');",
          "56: }",
          "",
          "---------------"
        ],
        "mod/wiki/view.php||mod/wiki/view.php": [
          "File: mod/wiki/view.php -> mod/wiki/view.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "271:     print_error('incorrectparameters');",
          "272: }",
          "278: require_once($CFG->libdir . '/completionlib.php');",
          "",
          "[Removed Lines]",
          "274: $context = context_module::instance($cm->id);",
          "275: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "274: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "275:     print_error('cannotviewpage', 'wiki');",
          "276: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "288: $wikipage->set_gid($currentgroup);",
          "289: $wikipage->set_page($page);",
          "291: if($pageid) {",
          "292:     add_to_log($course->id, 'wiki', 'view', \"view.php?pageid=\".$pageid, $pageid, $cm->id);",
          "293: } else if($id) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "292: $context = context_module::instance($cm->id);",
          "",
          "---------------"
        ],
        "mod/wiki/viewversion.php||mod/wiki/viewversion.php": [
          "File: mod/wiki/viewversion.php -> mod/wiki/viewversion.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: require_login($course, true, $cm);",
          "63: $wikipage = new page_wiki_viewversion($wiki, $subwiki, $cm);",
          "65: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "64:     print_error('cannotviewpage', 'wiki');",
          "65: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d9596365e59ac53787105ff326f7f2bab5b9bada",
      "candidate_info": {
        "commit_hash": "d9596365e59ac53787105ff326f7f2bab5b9bada",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/d9596365e59ac53787105ff326f7f2bab5b9bada",
        "files": [
          "mod/wiki/admin.php",
          "mod/wiki/comments.php",
          "mod/wiki/create_form.php",
          "mod/wiki/diff.php",
          "mod/wiki/edit.php",
          "mod/wiki/editcomments.php",
          "mod/wiki/files.php",
          "mod/wiki/filesedit.php",
          "mod/wiki/history.php",
          "mod/wiki/lib.php",
          "mod/wiki/locallib.php",
          "mod/wiki/lock.php",
          "mod/wiki/map.php",
          "mod/wiki/overridelocks.php",
          "mod/wiki/prettyview.php",
          "mod/wiki/restoreversion.php",
          "mod/wiki/search.php",
          "mod/wiki/view.php",
          "mod/wiki/viewversion.php"
        ],
        "message": "MDL-39990 wiki: more detailed validation of view/edit access",
        "before_after_code_files": [
          "mod/wiki/admin.php||mod/wiki/admin.php",
          "mod/wiki/comments.php||mod/wiki/comments.php",
          "mod/wiki/create_form.php||mod/wiki/create_form.php",
          "mod/wiki/diff.php||mod/wiki/diff.php",
          "mod/wiki/edit.php||mod/wiki/edit.php",
          "mod/wiki/editcomments.php||mod/wiki/editcomments.php",
          "mod/wiki/files.php||mod/wiki/files.php",
          "mod/wiki/filesedit.php||mod/wiki/filesedit.php",
          "mod/wiki/history.php||mod/wiki/history.php",
          "mod/wiki/lib.php||mod/wiki/lib.php",
          "mod/wiki/locallib.php||mod/wiki/locallib.php",
          "mod/wiki/lock.php||mod/wiki/lock.php",
          "mod/wiki/map.php||mod/wiki/map.php",
          "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php",
          "mod/wiki/prettyview.php||mod/wiki/prettyview.php",
          "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php",
          "mod/wiki/search.php||mod/wiki/search.php",
          "mod/wiki/view.php||mod/wiki/view.php",
          "mod/wiki/viewversion.php||mod/wiki/viewversion.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "mod/wiki/admin.php||mod/wiki/admin.php",
            "mod/wiki/comments.php||mod/wiki/comments.php",
            "mod/wiki/create_form.php||mod/wiki/create_form.php",
            "mod/wiki/diff.php||mod/wiki/diff.php",
            "mod/wiki/edit.php||mod/wiki/edit.php",
            "mod/wiki/editcomments.php||mod/wiki/editcomments.php",
            "mod/wiki/files.php||mod/wiki/files.php",
            "mod/wiki/filesedit.php||mod/wiki/filesedit.php",
            "mod/wiki/history.php||mod/wiki/history.php",
            "mod/wiki/lib.php||mod/wiki/lib.php",
            "mod/wiki/locallib.php||mod/wiki/locallib.php",
            "mod/wiki/lock.php||mod/wiki/lock.php",
            "mod/wiki/map.php||mod/wiki/map.php",
            "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php",
            "mod/wiki/prettyview.php||mod/wiki/prettyview.php",
            "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php",
            "mod/wiki/search.php||mod/wiki/search.php",
            "mod/wiki/view.php||mod/wiki/view.php",
            "mod/wiki/viewversion.php||mod/wiki/viewversion.php"
          ],
          "candidate": [
            "mod/wiki/admin.php||mod/wiki/admin.php",
            "mod/wiki/comments.php||mod/wiki/comments.php",
            "mod/wiki/create_form.php||mod/wiki/create_form.php",
            "mod/wiki/diff.php||mod/wiki/diff.php",
            "mod/wiki/edit.php||mod/wiki/edit.php",
            "mod/wiki/editcomments.php||mod/wiki/editcomments.php",
            "mod/wiki/files.php||mod/wiki/files.php",
            "mod/wiki/filesedit.php||mod/wiki/filesedit.php",
            "mod/wiki/history.php||mod/wiki/history.php",
            "mod/wiki/lib.php||mod/wiki/lib.php",
            "mod/wiki/locallib.php||mod/wiki/locallib.php",
            "mod/wiki/lock.php||mod/wiki/lock.php",
            "mod/wiki/map.php||mod/wiki/map.php",
            "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php",
            "mod/wiki/prettyview.php||mod/wiki/prettyview.php",
            "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php",
            "mod/wiki/search.php||mod/wiki/search.php",
            "mod/wiki/view.php||mod/wiki/view.php",
            "mod/wiki/viewversion.php||mod/wiki/viewversion.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/wiki/admin.php||mod/wiki/admin.php": [
          "File: mod/wiki/admin.php -> mod/wiki/admin.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: require_login($course, true, $cm);",
          "59: $context = context_module::instance($cm->id);",
          "60: require_capability('mod/wiki:managewiki', $context);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "59:     print_error('cannotviewpage', 'wiki');",
          "60: }",
          "",
          "---------------"
        ],
        "mod/wiki/comments.php||mod/wiki/comments.php": [
          "File: mod/wiki/comments.php -> mod/wiki/comments.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: require_login($course, true, $cm);",
          "62: add_to_log($course->id, 'wiki', 'comments', \"comments.php?pageid=\".$pageid, $pageid, $cm->id);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "63:     print_error('cannotviewpage', 'wiki');",
          "64: }",
          "",
          "---------------"
        ],
        "mod/wiki/create_form.php||mod/wiki/create_form.php": [
          "File: mod/wiki/create_form.php -> mod/wiki/create_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:                 $groupname = $groupinfo[$groupid];",
          "78:                 $mform->addElement('static', 'groupdesciption', get_string('group'), $groupname);",
          "79:                 $mform->addElement('hidden', 'groupinfo', $groupid);",
          "80:             }",
          "81:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:                 $mform->setType('groupinfo', PARAM_INT);",
          "",
          "---------------"
        ],
        "mod/wiki/diff.php||mod/wiki/diff.php": [
          "File: mod/wiki/diff.php -> mod/wiki/diff.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: require_login($course, true, $cm);",
          "71: $wikipage = new page_wiki_diff($wiki, $subwiki, $cm);",
          "73: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "72:     print_error('cannotviewpage', 'wiki');",
          "73: }",
          "",
          "---------------"
        ],
        "mod/wiki/edit.php||mod/wiki/edit.php": [
          "File: mod/wiki/edit.php -> mod/wiki/edit.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "75: require_login($course, true, $cm);",
          "77: $context = context_module::instance($cm->id);",
          "80: if ($option == get_string('save', 'wiki')) {",
          "81:     if (!confirm_sesskey()) {",
          "",
          "[Removed Lines]",
          "78: require_capability('mod/wiki:editpage', $context);",
          "",
          "[Added Lines]",
          "79: if (!wiki_user_can_edit($subwiki)) {",
          "80:     print_error('cannoteditpage', 'wiki');",
          "81: }",
          "",
          "---------------"
        ],
        "mod/wiki/editcomments.php||mod/wiki/editcomments.php": [
          "File: mod/wiki/editcomments.php -> mod/wiki/editcomments.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: }",
          "55: require_login($course, true, $cm);",
          "57: $editcomments = new page_wiki_editcomment($wiki, $subwiki, $cm);",
          "58: $comment = new stdClass();",
          "59: if ($action == 'edit') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "58:     print_error('cannotviewpage', 'wiki');",
          "59: }",
          "",
          "---------------"
        ],
        "mod/wiki/files.php||mod/wiki/files.php": [
          "File: mod/wiki/files.php -> mod/wiki/files.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: $PAGE->set_url('/mod/wiki/files.php', array('pageid'=>$pageid));",
          "80: require_login($course, true, $cm);",
          "82: $PAGE->set_title(get_string('wikifiles', 'wiki'));",
          "83: $PAGE->set_heading(get_string('wikifiles', 'wiki'));",
          "84: $PAGE->navbar->add(format_string(get_string('wikifiles', 'wiki')));",
          "",
          "[Removed Lines]",
          "81: $PAGE->set_context($context);",
          "",
          "[Added Lines]",
          "82: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "83:     print_error('cannotviewfiles', 'wiki');",
          "84: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95: echo $OUTPUT->box_start('generalbox');",
          "102: echo $OUTPUT->box_end();",
          "104: if (has_capability('mod/wiki:managefiles', $context)) {",
          "",
          "[Removed Lines]",
          "96: if (has_capability('mod/wiki:viewpage', $context)) {",
          "97:     echo $renderer->wiki_print_subwiki_selector($PAGE->activityrecord, $subwiki, $page, 'files');",
          "98:     echo $renderer->wiki_files_tree($context, $subwiki);",
          "99: } else {",
          "100:     echo $OUTPUT->notification(get_string('cannotviewfiles', 'wiki'));",
          "101: }",
          "",
          "[Added Lines]",
          "100: echo $renderer->wiki_print_subwiki_selector($PAGE->activityrecord, $subwiki, $page, 'files');",
          "101: echo $renderer->wiki_files_tree($context, $subwiki);",
          "",
          "---------------"
        ],
        "mod/wiki/filesedit.php||mod/wiki/filesedit.php": [
          "File: mod/wiki/filesedit.php -> mod/wiki/filesedit.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: $context = context_module::instance($cm->id);",
          "55: require_login($course, true, $cm);",
          "56: require_capability('mod/wiki:managefiles', $context);",
          "58: if (empty($returnurl)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "58:     print_error('cannotviewpage', 'wiki');",
          "59: }",
          "",
          "---------------"
        ],
        "mod/wiki/history.php||mod/wiki/history.php": [
          "File: mod/wiki/history.php -> mod/wiki/history.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: $course = $DB->get_record('course', array('id' => $cm->course), '*', MUST_EXIST);",
          "61: require_login($course, true, $cm);",
          "64: add_to_log($course->id, 'wiki', 'history', \"history.php?pageid=\".$pageid, $pageid, $cm->id);",
          "",
          "[Removed Lines]",
          "62: $context = context_module::instance($cm->id);",
          "63: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "63: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "64:     print_error('cannotviewpage', 'wiki');",
          "65: }",
          "",
          "---------------"
        ],
        "mod/wiki/lib.php||mod/wiki/lib.php": [
          "File: mod/wiki/lib.php -> mod/wiki/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "279: function wiki_print_recent_activity($course, $viewfullnames, $timestart) {",
          "280:     global $CFG, $DB, $OUTPUT;",
          "283:             FROM {wiki_pages} p",
          "284:                 JOIN {wiki_subwikis} sw ON sw.id = p.subwikiid",
          "285:                 JOIN {wiki} w ON w.id = sw.wikiid",
          "",
          "[Removed Lines]",
          "282:     $sql = \"SELECT p.*, w.id as wikiid, sw.groupid",
          "",
          "[Added Lines]",
          "282:     $sql = \"SELECT p.id, p.timemodified, p.subwikiid, sw.wikiid, w.wikimode, sw.userid, sw.groupid",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "288:     if (!$pages = $DB->get_records_sql($sql, array($timestart, $course->id))) {",
          "289:         return false;",
          "290:     }",
          "293:     $wikis = array();",
          "295:     $modinfo = get_fast_modinfo($course);",
          "297:     foreach ($pages as $page) {",
          "310:         }",
          "330:         }",
          "332:     }",
          "333:     unset($pages);",
          "335:     if (!$wikis) {",
          "",
          "[Removed Lines]",
          "291:     $modinfo = get_fast_modinfo($course);",
          "298:         if (!isset($modinfo->instances['wiki'][$page->wikiid])) {",
          "300:             continue;",
          "301:         }",
          "302:         $cm = $modinfo->instances['wiki'][$page->wikiid];",
          "303:         if (!$cm->uservisible) {",
          "304:             continue;",
          "305:         }",
          "306:         $context = context_module::instance($cm->id);",
          "308:         if (!has_capability('mod/wiki:viewpage', $context)) {",
          "309:             continue;",
          "312:         $groupmode = groups_get_activity_groupmode($cm, $course);",
          "314:         if ($groupmode) {",
          "315:             if ($groupmode == SEPARATEGROUPS and !has_capability('mod/wiki:managewiki', $context)) {",
          "317:                 if (isguestuser()) {",
          "319:                     continue;",
          "320:                 }",
          "322:                 if (is_null($modinfo->groups)) {",
          "323:                     $modinfo->groups = groups_get_user_groups($course->id); // load all my groups and cache it in modinfo",
          "324:                     }",
          "326:                 if (!in_array($page->groupid, $modinfo->groups[0])) {",
          "327:                     continue;",
          "328:                 }",
          "329:             }",
          "331:         $wikis[] = $page;",
          "",
          "[Added Lines]",
          "291:     require_once($CFG->dirroot . \"/mod/wiki/locallib.php\");",
          "297:     $subwikivisible = array();",
          "299:         if (!isset($subwikivisible[$page->subwikiid])) {",
          "300:             $subwiki = (object)array('id' => $page->subwikiid, 'wikiid' => $page->wikiid,",
          "301:                 'groupid' => $page->groupid, 'userid' => $page->userid);",
          "302:             $wiki = (object)array('id' => $page->wikiid, 'course' => $course->id, 'wikimode' => $page->wikimode);",
          "303:             $subwikivisible[$page->subwikiid] = wiki_user_can_view($subwiki, $wiki);",
          "305:         if ($subwikivisible[$page->subwikiid]) {",
          "306:             $wikis[] = $page;",
          "309:     unset($subwikivisible);",
          "",
          "---------------"
        ],
        "mod/wiki/locallib.php||mod/wiki/locallib.php": [
          "File: mod/wiki/locallib.php -> mod/wiki/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "725:     global $USER;",
          "729:     $context = context_module::instance($cm->id);",
          "",
          "[Removed Lines]",
          "724: function wiki_user_can_view($subwiki) {",
          "727:     $wiki = wiki_get_wiki($subwiki->wikiid);",
          "728:     $cm = get_coursemodule_from_instance('wiki', $wiki->id);",
          "",
          "[Added Lines]",
          "727: function wiki_user_can_view($subwiki, $wiki = null) {",
          "730:     if (empty($wiki) || $wiki->id != $subwiki->wikiid) {",
          "731:         $wiki = wiki_get_wiki($subwiki->wikiid);",
          "732:     }",
          "733:     $modinfo = get_fast_modinfo($wiki->course);",
          "734:     if (!isset($modinfo->instances['wiki'][$subwiki->wikiid])) {",
          "736:         return false;",
          "737:     }",
          "738:     $cm = $modinfo->instances['wiki'][$subwiki->wikiid];",
          "739:     if (!$cm->uservisible) {",
          "741:         return false;",
          "742:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "768:         if ($wiki->wikimode == 'collaborative' || $wiki->wikimode == 'individual') {",
          "772:                 return has_capability('mod/wiki:viewpage', $context);",
          "",
          "[Removed Lines]",
          "770:             if (groups_is_member($subwiki->groupid)) {",
          "",
          "[Added Lines]",
          "784:             if (in_array($subwiki->groupid, $modinfo->get_groups($cm->groupingid))) {",
          "",
          "---------------"
        ],
        "mod/wiki/lock.php||mod/wiki/lock.php": [
          "File: mod/wiki/lock.php -> mod/wiki/lock.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: require_login($course, false, $cm);",
          "74: $wikipage = new page_wiki_lock($wiki, $subwiki, $cm);",
          "75: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "71: $context = context_module::instance($cm->id);",
          "72: require_capability('mod/wiki:editpage', $context);",
          "",
          "[Added Lines]",
          "71: if (!wiki_user_can_edit($subwiki)) {",
          "72:     print_error('cannoteditpage', 'wiki');",
          "73: }",
          "",
          "---------------"
        ],
        "mod/wiki/map.php||mod/wiki/map.php": [
          "File: mod/wiki/map.php -> mod/wiki/map.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: }",
          "56: require_login($course, true, $cm);",
          "60: $wikipage = new page_wiki_map($wiki, $subwiki, $cm);",
          "61: add_to_log($course->id, \"wiki\", \"map\", \"map.php?pageid=\".$pageid, $pageid, $cm->id);",
          "",
          "[Removed Lines]",
          "57: $context = context_module::instance($cm->id);",
          "58: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "58: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "59:     print_error('cannotviewpage', 'wiki');",
          "60: }",
          "",
          "---------------"
        ],
        "mod/wiki/overridelocks.php||mod/wiki/overridelocks.php": [
          "File: mod/wiki/overridelocks.php -> mod/wiki/overridelocks.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: require_login($course, true, $cm);",
          "72: }",
          "74: $wikipage = new page_wiki_overridelocks($wiki, $subwiki, $cm);",
          "75: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "67: $context = context_module::instance($cm->id);",
          "68: require_capability('mod/wiki:overridelock', $context);",
          "70: if (!confirm_sesskey()) {",
          "71:     print_error(get_string('invalidsesskey', 'wiki'));",
          "",
          "[Added Lines]",
          "67: require_sesskey();",
          "69: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "70:     print_error('cannotviewpage', 'wiki');",
          "72: $context = context_module::instance($cm->id);",
          "73: require_capability('mod/wiki:overridelock', $context);",
          "",
          "---------------"
        ],
        "mod/wiki/prettyview.php||mod/wiki/prettyview.php": [
          "File: mod/wiki/prettyview.php -> mod/wiki/prettyview.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: require_login($course, true, $cm);",
          "59: $wikipage = new page_wiki_prettyview($wiki, $subwiki, $cm);",
          "",
          "[Removed Lines]",
          "56: $context = context_module::instance($cm->id);",
          "57: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "56: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "57:     print_error('cannotviewpage', 'wiki');",
          "58: }",
          "",
          "---------------"
        ],
        "mod/wiki/restoreversion.php||mod/wiki/restoreversion.php": [
          "File: mod/wiki/restoreversion.php -> mod/wiki/restoreversion.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: require_login($course, true, $cm);",
          "63: if ($confirm) {",
          "64:     if (!confirm_sesskey()) {",
          "65:         print_error(get_string('invalidsesskey', 'wiki'));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: if (!wiki_user_can_view($subwiki)) {",
          "64:     print_error('cannotviewpage', 'wiki');",
          "65: }",
          "",
          "---------------"
        ],
        "mod/wiki/search.php||mod/wiki/search.php": [
          "File: mod/wiki/search.php -> mod/wiki/search.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     $gid = 0;",
          "46: }",
          "47: if (!$subwiki = wiki_get_subwiki_by_group($cm->instance, $gid)) {",
          "49: }",
          "50: if (!$wiki = wiki_get_wiki($subwiki->wikiid)) {",
          "51:     print_error('incorrectwikiid', 'wiki');",
          "52: }",
          "54: $wikipage = new page_wiki_search($wiki, $subwiki, $cm);",
          "56: $wikipage->set_search_string($search, $searchcontent);",
          "",
          "[Removed Lines]",
          "48:     return false;",
          "",
          "[Added Lines]",
          "48:     print_error('incorrectsubwikiid', 'wiki');",
          "54: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "55:     print_error('cannotviewfiles', 'wiki');",
          "56: }",
          "",
          "---------------"
        ],
        "mod/wiki/view.php||mod/wiki/view.php": [
          "File: mod/wiki/view.php -> mod/wiki/view.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "271:     print_error('incorrectparameters');",
          "272: }",
          "278: require_once($CFG->libdir . '/completionlib.php');",
          "",
          "[Removed Lines]",
          "274: $context = context_module::instance($cm->id);",
          "275: require_capability('mod/wiki:viewpage', $context);",
          "",
          "[Added Lines]",
          "274: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "275:     print_error('cannotviewpage', 'wiki');",
          "276: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "297: $wikipage->set_gid($currentgroup);",
          "298: $wikipage->set_page($page);",
          "300: if($pageid) {",
          "301:     add_to_log($course->id, 'wiki', 'view', \"view.php?pageid=\".$pageid, $pageid, $cm->id);",
          "302: } else if($id) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "301: $context = context_module::instance($cm->id);",
          "",
          "---------------"
        ],
        "mod/wiki/viewversion.php||mod/wiki/viewversion.php": [
          "File: mod/wiki/viewversion.php -> mod/wiki/viewversion.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: require_login($course, true, $cm);",
          "63: $wikipage = new page_wiki_viewversion($wiki, $subwiki, $cm);",
          "65: $wikipage->set_page($page);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63: if (!wiki_user_can_view($subwiki, $wiki)) {",
          "64:     print_error('cannotviewpage', 'wiki');",
          "65: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}