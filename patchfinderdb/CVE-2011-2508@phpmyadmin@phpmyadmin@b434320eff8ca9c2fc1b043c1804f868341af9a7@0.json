{
  "cve_id": "CVE-2011-2508",
  "cve_desc": "Directory traversal vulnerability in libraries/display_tbl.lib.php in phpMyAdmin 3.x before 3.3.10.2 and 3.4.x before 3.4.3.1, when a certain MIME transformation feature is enabled, allows remote authenticated users to include and execute arbitrary local files via a .. (dot dot) in a GLOBALS[mime_map][$meta->name][transformation] parameter.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "b434320eff8ca9c2fc1b043c1804f868341af9a7",
  "patch_info": {
    "commit_hash": "b434320eff8ca9c2fc1b043c1804f868341af9a7",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/b434320eff8ca9c2fc1b043c1804f868341af9a7",
    "files": [
      "ChangeLog",
      "libraries/display_tbl.lib.php"
    ],
    "message": "Fixed filtering of a file path, which allowed for directory traversal, see PMASA-2011-8",
    "before_after_code_files": [
      "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
    ]
  },
  "patch_diff": {
    "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php": [
      "File: libraries/display_tbl.lib.php -> libraries/display_tbl.lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1308:             if ($GLOBALS['cfgRelation']['mimework'] && $GLOBALS['cfg']['BrowseMIME']) {",
      "1310:                 if (isset($GLOBALS['mime_map'][$meta->name]['mimetype']) && isset($GLOBALS['mime_map'][$meta->name]['transformation']) && !empty($GLOBALS['mime_map'][$meta->name]['transformation'])) {",
      "1313:                     if (file_exists('./libraries/transformations/' . $include_file)) {",
      "1314:                         $transformfunction_name = str_replace('.inc.php', '', $GLOBALS['mime_map'][$meta->name]['transformation']);",
      "",
      "[Removed Lines]",
      "1311:                     $include_file = $GLOBALS['mime_map'][$meta->name]['transformation'];",
      "",
      "[Added Lines]",
      "1311:                     $include_file = PMA_securePath($GLOBALS['mime_map'][$meta->name]['transformation']);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5ee357a572866e730d83f56d6187a67c7c48e523",
      "candidate_info": {
        "commit_hash": "5ee357a572866e730d83f56d6187a67c7c48e523",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/5ee357a572866e730d83f56d6187a67c7c48e523",
        "files": [
          "ChangeLog",
          "libraries/display_tbl.lib.php"
        ],
        "message": "Fixed filtering of a file path, which allowed for directory traversal, see PMASA-2011-8",
        "before_after_code_files": [
          "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
          ],
          "candidate": [
            "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php": [
          "File: libraries/display_tbl.lib.php -> libraries/display_tbl.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1220:             if ($GLOBALS['cfgRelation']['mimework'] && $GLOBALS['cfg']['BrowseMIME']) {",
          "1222:                 if (isset($GLOBALS['mime_map'][$meta->name]['mimetype']) && isset($GLOBALS['mime_map'][$meta->name]['transformation']) && !empty($GLOBALS['mime_map'][$meta->name]['transformation'])) {",
          "1225:                     if (file_exists('./libraries/transformations/' . $include_file)) {",
          "1226:                         $transformfunction_name = str_replace('.inc.php', '', $GLOBALS['mime_map'][$meta->name]['transformation']);",
          "",
          "[Removed Lines]",
          "1223:                     $include_file = $GLOBALS['mime_map'][$meta->name]['transformation'];",
          "",
          "[Added Lines]",
          "1223:                     $include_file = PMA_securePath($GLOBALS['mime_map'][$meta->name]['transformation']);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7932ed4fd16018a49557146c0deb9e2181d73346",
      "candidate_info": {
        "commit_hash": "7932ed4fd16018a49557146c0deb9e2181d73346",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/7932ed4fd16018a49557146c0deb9e2181d73346",
        "files": [
          "libraries/display_tbl.lib.php"
        ],
        "message": "Fix indentation warnings",
        "before_after_code_files": [
          "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
          ],
          "candidate": [
            "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php": [
          "File: libraries/display_tbl.lib.php -> libraries/display_tbl.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:                 $do_display['edit_lnk'] = 'nn'; // no edit link",
          "113:                 $do_display['del_lnk']  = 'kp'; // \"kill process\" type edit link",
          "114:             } else {",
          "",
          "[Removed Lines]",
          "110:             $tmp = preg_match('@^SHOW[[:space:]]+(VARIABLES|(FULL[[:space:]]+)?PROCESSLIST|STATUS|TABLE|GRANTS|CREATE|LOGS|DATABASES|FIELDS)@i', $GLOBALS['sql_query'], $which);",
          "111:             if (isset($which[1]) && strpos(' ' . strtoupper($which[1]), 'PROCESSLIST') > 0) {",
          "",
          "[Added Lines]",
          "110:             $tmp = preg_match(",
          "111:                 '@^SHOW[[:space:]]+(VARIABLES|(FULL[[:space:]]+)?'",
          "112:                 . 'PROCESSLIST|STATUS|TABLE|GRANTS|CREATE|LOGS|DATABASES|FIELDS)@i',",
          "113:                 $GLOBALS['sql_query'], $which);",
          "114:             if (isset($which[1])",
          "115:                 && strpos(' ' . strtoupper($which[1]), 'PROCESSLIST') > 0) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:                             || $do_display['ins_row'] != '0');",
          "138:                 if ($is_link",
          "140:                 ) {",
          "141:                     $do_display['edit_lnk'] = 'nn'; // don't display links",
          "142:                     $do_display['del_lnk']  = 'nn';",
          "147:                     $do_display['ins_row']  = (string) '0';",
          "",
          "[Removed Lines]",
          "139:                     && ($fields_meta[$i]->table == '' || $fields_meta[$i]->table != $prev_table)",
          "",
          "[Added Lines]",
          "143:                     && ($fields_meta[$i]->table == ''",
          "144:                         || $fields_meta[$i]->table != $prev_table)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "179:             $do_display['sort_lnk'] = (string) '0';",
          "",
          "[Removed Lines]",
          "176:         if (isset($unlim_num_rows) && $unlim_num_rows < 2 && ! PMA_Table::isView($db, $table)) {",
          "",
          "[Added Lines]",
          "182:         if (isset($unlim_num_rows)",
          "183:             && $unlim_num_rows < 2",
          "184:             && ! PMA_Table::isView($db, $table)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "231: {",
          "233:     global $db, $table, $goto;",
          "",
          "[Removed Lines]",
          "230: function PMA_displayTableNavigationOneButton($caption, $title, $pos, $html_sql_query, $onsubmit = '', $input_for_real_end = '', $onclick = '')",
          "",
          "[Added Lines]",
          "238: function PMA_displayTableNavigationOneButton($caption, $title, $pos, $html_sql_query,",
          "239:     $onsubmit = '', $input_for_real_end = '', $onclick = '')",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "238:         $caption_output .= $caption;",
          "239:     }",
          "242:         $caption_output .= '&nbsp;' . $title;",
          "243:     }",
          "244:     $title_output = ' title=\"' . $title . '\"';",
          "",
          "[Removed Lines]",
          "241:     if (false === $GLOBALS['cfg']['NavigationBarIconic'] || 'both' === $GLOBALS['cfg']['NavigationBarIconic']) {",
          "",
          "[Added Lines]",
          "250:     if (false === $GLOBALS['cfg']['NavigationBarIconic']",
          "251:         || 'both' === $GLOBALS['cfg']['NavigationBarIconic']) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "246: <td>",
          "247:     <form action=\"sql.php\" method=\"post\" <?php echo $onsubmit; ?>>",
          "248:         <?php echo PMA_generate_common_hidden_inputs($db, $table); ?>",
          "250:         <input type=\"hidden\" name=\"pos\" value=\"<?php echo $pos; ?>\" />",
          "251:         <input type=\"hidden\" name=\"goto\" value=\"<?php echo $goto; ?>\" />",
          "252:         <?php echo $input_for_real_end; ?>",
          "254:     </form>",
          "255: </td>",
          "256: <?php",
          "",
          "[Removed Lines]",
          "249:         <input type=\"hidden\" name=\"sql_query\" value=\"<?php echo $html_sql_query; ?>\" />",
          "253:         <input type=\"submit\" name=\"navig\" <?php echo ($GLOBALS['cfg']['AjaxEnable'] ? ' class=\"ajax\" ' : '' ); ?> value=\"<?php echo $caption_output; ?>\"<?php echo $title_output . $onclick; ?> />",
          "",
          "[Added Lines]",
          "259:         <input type=\"hidden\" name=\"sql_query\" value=\"<?php",
          "260:             echo $html_sql_query; ?>\" />",
          "264:         <input type=\"submit\" name=\"navig\" <?php",
          "265:             echo ($GLOBALS['cfg']['AjaxEnable'] ? ' class=\"ajax\" ' : '' );",
          "266:             ?> value=\"<?php echo $caption_output; ?>\"<?php",
          "267:             echo $title_output . $onclick; ?> />",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "284: {",
          "285:     global $db, $table, $goto;",
          "286:     global $num_rows, $unlim_num_rows;",
          "",
          "[Removed Lines]",
          "283: function PMA_displayTableNavigation($pos_next, $pos_prev, $sql_query, $id_for_direction_dropdown)",
          "",
          "[Added Lines]",
          "297: function PMA_displayTableNavigation($pos_next, $pos_prev, $sql_query,",
          "298:     $id_for_direction_dropdown)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "305:     <td class=\"navigation_separator\"></td>",
          "306:     <?php",
          "312:     } // end move back",
          "",
          "[Removed Lines]",
          "308:     if ($_SESSION['tmp_user_values']['pos'] && $_SESSION['tmp_user_values']['max_rows'] != 'all') {",
          "309:         PMA_displayTableNavigationOneButton('&lt;&lt;', _pgettext('First page', 'Begin'), 0, $html_sql_query);",
          "310:         PMA_displayTableNavigationOneButton('&lt;', _pgettext('Previous page', 'Previous'), $pos_prev, $html_sql_query);",
          "",
          "[Added Lines]",
          "323:     if ($_SESSION['tmp_user_values']['pos']",
          "324:         && $_SESSION['tmp_user_values']['max_rows'] != 'all') {",
          "325:         PMA_displayTableNavigationOneButton(",
          "326:             '&lt;&lt;', _pgettext('First page', 'Begin'), 0, $html_sql_query);",
          "327:         PMA_displayTableNavigationOneButton(",
          "328:             '&lt;', _pgettext('Previous page', 'Previous'), $pos_prev,",
          "329:             $html_sql_query);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "317:     if ('all' != $_SESSION['tmp_user_values']['max_rows']) { //if1",
          "321:         if ($nbTotalPage > 1) { //if2",
          "322:        ?>",
          "",
          "[Removed Lines]",
          "318:         $pageNow = @floor($_SESSION['tmp_user_values']['pos'] / $_SESSION['tmp_user_values']['max_rows']) + 1;",
          "319:         $nbTotalPage = @ceil($unlim_num_rows / $_SESSION['tmp_user_values']['max_rows']);",
          "",
          "[Added Lines]",
          "337:         $pageNow = @floor($_SESSION['tmp_user_values']['pos']",
          "338:             / $_SESSION['tmp_user_values']['max_rows']) + 1;",
          "339:         $nbTotalPage = @ceil($unlim_num_rows",
          "340:             / $_SESSION['tmp_user_values']['max_rows']);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "330:             );",
          "334:             echo PMA_pageselector(",
          "335:                 $_SESSION['tmp_user_values']['max_rows'],",
          "336:                 $pageNow,",
          "",
          "[Removed Lines]",
          "333:             echo '<form action=\"sql.php' . PMA_generate_common_url($_url_params). '\" method=\"post\">';",
          "",
          "[Added Lines]",
          "354:             echo '<form action=\"sql.php' . PMA_generate_common_url($_url_params)",
          "355:                 . '\" method=\"post\">';",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "349:     } //_if1",
          "353:         echo \"\\n\";",
          "354:         ?>",
          "355:     <td>",
          "356:         <form action=\"sql.php\" method=\"post\">",
          "357:             <?php echo PMA_generate_common_hidden_inputs($db, $table); ?>",
          "359:             <input type=\"hidden\" name=\"pos\" value=\"0\" />",
          "360:             <input type=\"hidden\" name=\"session_max_rows\" value=\"all\" />",
          "361:             <input type=\"hidden\" name=\"goto\" value=\"<?php echo $goto; ?>\" />",
          "363:         </form>",
          "364:     </td>",
          "365:         <?php",
          "366:     } // end show all",
          "370:         && $num_rows >= $_SESSION['tmp_user_values']['max_rows']",
          "371:         && $_SESSION['tmp_user_values']['max_rows'] != 'all'",
          "372:     ) {",
          "",
          "[Removed Lines]",
          "352:     if (($num_rows < $unlim_num_rows) && ($GLOBALS['cfg']['ShowAll'] || ($GLOBALS['cfg']['MaxRows'] * 5 >= $unlim_num_rows))) {",
          "358:             <input type=\"hidden\" name=\"sql_query\" value=\"<?php echo $html_sql_query; ?>\" />",
          "362:             <input type=\"submit\" name=\"navig\" value=\"<?php echo __('Show all'); ?>\" />",
          "369:     if (($_SESSION['tmp_user_values']['pos'] + $_SESSION['tmp_user_values']['max_rows'] < $unlim_num_rows)",
          "",
          "[Added Lines]",
          "374:     if (($num_rows < $unlim_num_rows)",
          "375:         && ($GLOBALS['cfg']['ShowAll']",
          "376:             || ($GLOBALS['cfg']['MaxRows'] * 5 >= $unlim_num_rows))) {",
          "382:             <input type=\"hidden\" name=\"sql_query\" value=\"<?php",
          "383:                 echo $html_sql_query; ?>\" />",
          "387:             <input type=\"submit\" name=\"navig\" value=\"<?php",
          "388:                 echo __('Show all'); ?>\" />",
          "395:     if (($_SESSION['tmp_user_values']['pos']",
          "396:             + $_SESSION['tmp_user_values']['max_rows'] < $unlim_num_rows)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "382:         if ($is_innodb && $unlim_num_rows > $GLOBALS['cfg']['MaxExactCount']) {",
          "385:             $onclick = '';",
          "386:         } else {",
          "",
          "[Removed Lines]",
          "383:             $input_for_real_end = '<input id=\"real_end_input\" type=\"hidden\" name=\"find_real_end\" value=\"1\" />';",
          "",
          "[Added Lines]",
          "410:             $input_for_real_end = '<input id=\"real_end_input\" type=\"hidden\" '",
          "411:                 . 'name=\"find_real_end\" value=\"1\" />';",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "391:         PMA_displayTableNavigationOneButton(",
          "392:             '&gt;&gt;',",
          "393:             _pgettext('Last page', 'End'),",
          "395:             $html_sql_query,",
          "397:             $input_for_real_end,",
          "398:             $onclick",
          "399:         );",
          "",
          "[Removed Lines]",
          "394:             @((ceil($unlim_num_rows / $_SESSION['tmp_user_values']['max_rows'])- 1) * $_SESSION['tmp_user_values']['max_rows']),",
          "396:             'onsubmit=\"return ' . (($_SESSION['tmp_user_values']['pos'] + $_SESSION['tmp_user_values']['max_rows'] < $unlim_num_rows && $num_rows >= $_SESSION['tmp_user_values']['max_rows']) ? 'true' : 'false') . '\"',",
          "",
          "[Added Lines]",
          "422:             @((ceil($unlim_num_rows / $_SESSION['tmp_user_values']['max_rows'])- 1)",
          "425:             'onsubmit=\"return '",
          "426:                 . (($_SESSION['tmp_user_values']['pos']",
          "427:                         + $_SESSION['tmp_user_values']['max_rows'] < $unlim_num_rows",
          "428:                     && $num_rows >= $_SESSION['tmp_user_values']['max_rows'])",
          "429:                 ? 'true'",
          "430:                 : 'false') . '\"',",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "424:     <td class=\"navigation_goto\">",
          "425:         <form action=\"sql.php\" method=\"post\"",
          "427:             <?php echo PMA_generate_common_hidden_inputs($db, $table); ?>",
          "429:             <input type=\"hidden\" name=\"goto\" value=\"<?php echo $goto; ?>\" />",
          "431:             <?php echo __('Start row') . ': ' . \"\\n\"; ?>",
          "433:             <?php echo __('Number of rows') . ': ' . \"\\n\"; ?>",
          "435:         <?php",
          "436:         if ($GLOBALS['cfg']['ShowDisplayDirection']) {",
          "",
          "[Removed Lines]",
          "426:     onsubmit=\"return (checkFormElementInRange(this, 'session_max_rows', '<?php echo str_replace('\\'', '\\\\\\'', __('%d is not valid row number.')); ?>', 1) &amp;&amp; checkFormElementInRange(this, 'pos', '<?php echo str_replace('\\'', '\\\\\\'', __('%d is not valid row number.')); ?>', 0<?php echo $unlim_num_rows > 0 ? ',' . $unlim_num_rows - 1 : ''; ?>))\">",
          "428:             <input type=\"hidden\" name=\"sql_query\" value=\"<?php echo $html_sql_query; ?>\" />",
          "430:             <input type=\"submit\" name=\"navig\" <?php echo ($GLOBALS['cfg']['AjaxEnable'] ? ' class=\"ajax\"' : ''); ?> value=\"<?php echo __('Show'); ?> :\" />",
          "432:             <input type=\"text\" name=\"pos\" size=\"3\" value=\"<?php echo (($pos_next >= $unlim_num_rows) ? 0 : $pos_next); ?>\" class=\"textfield\" onfocus=\"this.select()\" />",
          "434:             <input type=\"text\" name=\"session_max_rows\" size=\"3\" value=\"<?php echo (($_SESSION['tmp_user_values']['max_rows'] != 'all') ? $_SESSION['tmp_user_values']['max_rows'] : $GLOBALS['cfg']['MaxRows']); ?>\" class=\"textfield\" onfocus=\"this.select()\" />",
          "",
          "[Added Lines]",
          "460:     onsubmit=\"return (checkFormElementInRange(this, 'session_max_rows', '<?php",
          "461:     echo str_replace('\\'', '\\\\\\'', __('%d is not valid row number.'));",
          "462:     ?>', 1) &amp;&amp; checkFormElementInRange(this, 'pos', '<?php",
          "463:     echo str_replace('\\'', '\\\\\\'', __('%d is not valid row number.'));",
          "464:     ?>', 0<?php echo $unlim_num_rows > 0 ? ',' . $unlim_num_rows - 1 : ''; ?>))\">",
          "466:             <input type=\"hidden\" name=\"sql_query\" value=\"<?php",
          "467:                 echo $html_sql_query; ?>\" />",
          "469:             <input type=\"submit\" name=\"navig\" <?php",
          "470:                 echo ($GLOBALS['cfg']['AjaxEnable'] ? ' class=\"ajax\"' : '');",
          "471:                 ?> value=\"<?php echo __('Show'); ?> :\" />",
          "473:             <input type=\"text\" name=\"pos\" size=\"3\" value=\"<?php",
          "474:                 echo (($pos_next >= $unlim_num_rows) ? 0 : $pos_next); ?>\"",
          "475:                 class=\"textfield\" onfocus=\"this.select()\" />",
          "477:             <input type=\"text\" name=\"session_max_rows\" size=\"3\" value=\"<?php",
          "478:                 echo (($_SESSION['tmp_user_values']['max_rows'] != 'all')",
          "479:                     ? $_SESSION['tmp_user_values']['max_rows']",
          "480:                     : $GLOBALS['cfg']['MaxRows']); ?>\"",
          "481:                 class=\"textfield\" onfocus=\"this.select()\" />",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "440:                 'horizontal'        => __('horizontal'),",
          "441:                 'horizontalflipped' => __('horizontal (rotated headers)'),",
          "442:                 'vertical'          => __('vertical'));",
          "444:             unset($choices);",
          "445:         }",
          "447:         printf(",
          "448:             __('Headers every %s rows'),",
          "450:         );",
          "451:         echo \"\\n\";",
          "452:         ?>",
          "",
          "[Removed Lines]",
          "443:             echo PMA_generate_html_dropdown('disp_direction', $choices, $_SESSION['tmp_user_values']['disp_direction'], $id_for_direction_dropdown);",
          "449:             '<input type=\"text\" size=\"3\" name=\"repeat_cells\" value=\"' . $_SESSION['tmp_user_values']['repeat_cells'] . '\" class=\"textfield\" />'",
          "",
          "[Added Lines]",
          "490:             echo PMA_generate_html_dropdown('disp_direction', $choices,",
          "491:                 $_SESSION['tmp_user_values']['disp_direction'],",
          "492:                 $id_for_direction_dropdown);",
          "498:             '<input type=\"text\" size=\"3\" name=\"repeat_cells\" value=\"'",
          "499:                 . $_SESSION['tmp_user_values']['repeat_cells']",
          "500:                 . '\" class=\"textfield\" />'",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "490: {",
          "491:     global $db, $table, $goto;",
          "492:     global $sql_query, $num_rows;",
          "",
          "[Removed Lines]",
          "489: function PMA_displayTableHeaders(&$is_display, &$fields_meta, $fields_cnt = 0, $analyzed_sql = '', $sort_expression, $sort_expression_nodirection, $sort_direction)",
          "",
          "[Added Lines]",
          "541: function PMA_displayTableHeaders(&$is_display, &$fields_meta, $fields_cnt = 0,",
          "542:     $analyzed_sql = '', $sort_expression, $sort_expression_nodirection,",
          "543:     $sort_direction)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "530:             if ($indexes) {",
          "532:                 if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "534:                 ) {",
          "535:                     $span = $fields_cnt;",
          "536:                     if ($is_display['edit_lnk'] != 'nn') {",
          "",
          "[Removed Lines]",
          "533:                     || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "",
          "[Added Lines]",
          "587:                     || $_SESSION['tmp_user_values']['disp_direction']",
          "588:                         == 'horizontalflipped'",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "539:                     if ($is_display['del_lnk'] != 'nn') {",
          "540:                         $span++;",
          "541:                     }",
          "543:                         $span++;",
          "544:                     }",
          "545:                 } else {",
          "547:                 }",
          "549:                 echo '<form action=\"sql.php\" method=\"post\">' . \"\\n\";",
          "550:                 echo PMA_generate_common_hidden_inputs($db, $table);",
          "552:                 $used_index = false;",
          "553:                 $local_order = (isset($sort_expression) ? $sort_expression : '');",
          "554:                 foreach ($indexes as $index) {",
          "559:                         $unsorted_sql_query_first_part = $my_reg[1];",
          "560:                         $unsorted_sql_query_second_part = $my_reg[2];",
          "561:                     } else {",
          "",
          "[Removed Lines]",
          "542:                     if ($is_display['del_lnk'] != 'kp' && $is_display['del_lnk'] != 'nn') {",
          "546:                     $span = $num_rows + floor($num_rows/$_SESSION['tmp_user_values']['repeat_cells']) + 1;",
          "551:                 echo __('Sort by key') . ': <select name=\"sql_query\" class=\"autosubmit\">' . \"\\n\";",
          "555:                     $asc_sort = '`' . implode('` ASC, `', array_keys($index->getColumns())) . '` ASC';",
          "556:                     $desc_sort = '`' . implode('` DESC, `', array_keys($index->getColumns())) . '` DESC';",
          "557:                     $used_index = $used_index || $local_order == $asc_sort || $local_order == $desc_sort;",
          "558:                     if (preg_match('@(.*)([[:space:]](LIMIT (.*)|PROCEDURE (.*)|FOR UPDATE|LOCK IN SHARE MODE))@is', $unsorted_sql_query, $my_reg)) {",
          "",
          "[Added Lines]",
          "597:                     if ($is_display['del_lnk'] != 'kp'",
          "598:                         && $is_display['del_lnk'] != 'nn') {",
          "602:                     $span = $num_rows + floor($num_rows",
          "603:                         / $_SESSION['tmp_user_values']['repeat_cells']) + 1;",
          "608:                 echo __('Sort by key')",
          "609:                     . ': <select name=\"sql_query\" class=\"autosubmit\">' . \"\\n\";",
          "613:                     $asc_sort = '`'",
          "614:                         . implode('` ASC, `', array_keys($index->getColumns()))",
          "615:                         . '` ASC';",
          "616:                     $desc_sort = '`'",
          "617:                         . implode('` DESC, `', array_keys($index->getColumns()))",
          "618:                         . '` DESC';",
          "619:                     $used_index = $used_index",
          "620:                         || $local_order == $asc_sort",
          "621:                         || $local_order == $desc_sort;",
          "622:                     if (preg_match('@(.*)([[:space:]](LIMIT (.*)|PROCEDURE (.*)|'",
          "623:                             . 'FOR UPDATE|LOCK IN SHARE MODE))@is',",
          "624:                         $unsorted_sql_query, $my_reg)) {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "563:                         $unsorted_sql_query_second_part = '';",
          "564:                     }",
          "565:                     echo '<option value=\"'",
          "568:                         . '>' . htmlspecialchars($index->getName()) . ' ('",
          "569:                         . __('Ascending') . ')</option>';",
          "570:                     echo '<option value=\"'",
          "573:                         . '>' . htmlspecialchars($index->getName()) . ' ('",
          "574:                         . __('Descending') . ')</option>';",
          "575:                 }",
          "577:                 echo '</select>' . \"\\n\";",
          "578:                 echo '</form>' . \"\\n\";",
          "579:             }",
          "",
          "[Removed Lines]",
          "566:                         . htmlspecialchars($unsorted_sql_query_first_part  . \"\\n\" . ' ORDER BY ' . $asc_sort . $unsorted_sql_query_second_part)",
          "567:                         . '\"' . ($local_order == $asc_sort ? ' selected=\"selected\"' : '')",
          "571:                         . htmlspecialchars($unsorted_sql_query_first_part . \"\\n\" . ' ORDER BY ' . $desc_sort . $unsorted_sql_query_second_part)",
          "572:                         . '\"' . ($local_order == $desc_sort ? ' selected=\"selected\"' : '')",
          "576:                 echo '<option value=\"' . htmlspecialchars($unsorted_sql_query) . '\"' . ($used_index ? '' : ' selected=\"selected\"') . '>' . __('None') . '</option>';",
          "",
          "[Added Lines]",
          "632:                         . htmlspecialchars($unsorted_sql_query_first_part  . \"\\n\"",
          "633:                             . ' ORDER BY ' . $asc_sort",
          "634:                             . $unsorted_sql_query_second_part)",
          "635:                         . '\"' . ($local_order == $asc_sort",
          "636:                             ? ' selected=\"selected\"'",
          "637:                             : '')",
          "641:                         . htmlspecialchars($unsorted_sql_query_first_part . \"\\n\"",
          "642:                             . ' ORDER BY ' . $desc_sort",
          "643:                             . $unsorted_sql_query_second_part)",
          "644:                         . '\"' . ($local_order == $desc_sort",
          "645:                             ? ' selected=\"selected\"'",
          "646:                             : '')",
          "650:                 echo '<option value=\"' . htmlspecialchars($unsorted_sql_query) . '\"'",
          "651:                     . ($used_index ? '' : ' selected=\"selected\"') . '>' . __('None')",
          "652:                     . '</option>';",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "586:     echo '<div class=\"common_hidden_inputs\">';",
          "587:     echo PMA_generate_common_hidden_inputs($db, $table);",
          "588:     echo '</div>';",
          "",
          "[Removed Lines]",
          "585:     echo '<input id=\"save_cells_at_once\" type=\"hidden\" value=\"' . $GLOBALS['cfg']['SaveCellsAtOnce'] . '\" />';",
          "",
          "[Added Lines]",
          "661:     echo '<input id=\"save_cells_at_once\" type=\"hidden\" value=\"'",
          "662:         . $GLOBALS['cfg']['SaveCellsAtOnce'] . '\" />';",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "592:         $pmatable = new PMA_Table($GLOBALS['table'], $GLOBALS['db']);",
          "593:         $col_order = $pmatable->getUiProp(PMA_Table::PROP_COLUMN_ORDER);",
          "594:         if ($col_order) {",
          "596:         }",
          "597:         $col_visib = $pmatable->getUiProp(PMA_Table::PROP_COLUMN_VISIB);",
          "598:         if ($col_visib) {",
          "600:         }",
          "602:         if (! PMA_Table::isView($GLOBALS['table'], $GLOBALS['db'])) {",
          "605:         }",
          "606:     }",
          "",
          "[Removed Lines]",
          "595:             echo '<input id=\"col_order\" type=\"hidden\" value=\"' . implode(',', $col_order) . '\" />';",
          "599:             echo '<input id=\"col_visib\" type=\"hidden\" value=\"' . implode(',', $col_visib) . '\" />';",
          "603:             echo '<input id=\"table_create_time\" type=\"hidden\" value=\"' .",
          "604:                 PMA_Table::sGetStatusInfo($GLOBALS['db'], $GLOBALS['table'], 'Create_time') . '\" />';",
          "",
          "[Added Lines]",
          "672:             echo '<input id=\"col_order\" type=\"hidden\" value=\"'",
          "673:                 . implode(',', $col_order) . '\" />';",
          "677:             echo '<input id=\"col_visib\" type=\"hidden\" value=\"'",
          "678:                 . implode(',', $col_visib) . '\" />';",
          "682:             echo '<input id=\"table_create_time\" type=\"hidden\" value=\"'",
          "683:                . PMA_Table::sGetStatusInfo(",
          "684:                     $GLOBALS['db'], $GLOBALS['table'], 'Create_time') . '\" />';",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "614:     if (! (isset($GLOBALS['printview']) && $GLOBALS['printview'] == '1')) {",
          "616:         if ($GLOBALS['cfg']['AjaxEnable']) {",
          "617:             echo ' class=\"ajax\" ';",
          "618:         }",
          "",
          "[Removed Lines]",
          "615:         echo '<form method=\"post\" action=\"sql.php\" name=\"displayOptionsForm\" id=\"displayOptionsForm\"';",
          "",
          "[Added Lines]",
          "695:         echo '<form method=\"post\" action=\"sql.php\" name=\"displayOptionsForm\" '",
          "696:             . 'id=\"displayOptionsForm\"';",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "634:             'P'   => __('Partial texts'),",
          "635:             'F'   => __('Full texts')",
          "636:         );",
          "638:         echo '</div>';",
          "",
          "[Removed Lines]",
          "637:         PMA_display_html_radio('display_text', $choices, $_SESSION['tmp_user_values']['display_text']);",
          "",
          "[Added Lines]",
          "718:         PMA_display_html_radio('display_text', $choices,",
          "719:             $_SESSION['tmp_user_values']['display_text']);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "657:             $url_params_full_text['display_text'] = 'F';",
          "658:         }",
          "661:         $tmp_url = 'sql.php' . PMA_generate_common_url($url_params_full_text);",
          "663:         unset($tmp_image_file, $tmp_txt, $tmp_url, $tmp_image);",
          "667:             echo '<div class=\"formelement\">';",
          "668:             $choices = array(",
          "669:                 'K'   => __('Relational key'),",
          "670:                 'D'   => __('Relational display column')",
          "671:             );",
          "673:             echo '</div>';",
          "674:         }",
          "676:         echo '<div class=\"formelement\">';",
          "678:         echo '<br />';",
          "680:         echo '<br />';",
          "682:         echo '</div>';",
          "",
          "[Removed Lines]",
          "660:         $tmp_image = '<img class=\"fulltext\" src=\"' . $tmp_image_file . '\" alt=\"' . $tmp_txt . '\" title=\"' . $tmp_txt . '\" />';",
          "662:         $full_or_partial_text_link = PMA_linkOrButton($tmp_url, $tmp_image, array(), false);",
          "666:         if ($GLOBALS['cfgRelation']['relwork'] && $GLOBALS['cfgRelation']['displaywork']) {",
          "672:             PMA_display_html_radio('relational_display', $choices, $_SESSION['tmp_user_values']['relational_display']);",
          "677:         PMA_display_html_checkbox('display_binary', __('Show binary contents'), ! empty($_SESSION['tmp_user_values']['display_binary']), false);",
          "679:         PMA_display_html_checkbox('display_blob', __('Show BLOB contents'), ! empty($_SESSION['tmp_user_values']['display_blob']), false);",
          "681:         PMA_display_html_checkbox('display_binary_as_hex', __('Show binary contents as HEX'), ! empty($_SESSION['tmp_user_values']['display_binary_as_hex']), false);",
          "",
          "[Added Lines]",
          "742:         $tmp_image = '<img class=\"fulltext\" src=\"' . $tmp_image_file . '\" alt=\"'",
          "743:             . $tmp_txt . '\" title=\"' . $tmp_txt . '\" />';",
          "745:         $full_or_partial_text_link",
          "746:             = PMA_linkOrButton($tmp_url, $tmp_image, array(), false);",
          "750:         if ($GLOBALS['cfgRelation']['relwork']",
          "751:             && $GLOBALS['cfgRelation']['displaywork']) {",
          "757:             PMA_display_html_radio('relational_display', $choices,",
          "758:                 $_SESSION['tmp_user_values']['relational_display']);",
          "763:         PMA_display_html_checkbox('display_binary', __('Show binary contents'),",
          "764:             ! empty($_SESSION['tmp_user_values']['display_binary']), false);",
          "766:         PMA_display_html_checkbox('display_blob', __('Show BLOB contents'),",
          "767:             ! empty($_SESSION['tmp_user_values']['display_blob']), false);",
          "769:         PMA_display_html_checkbox('display_binary_as_hex',",
          "770:             __('Show binary contents as HEX'),",
          "771:             ! empty($_SESSION['tmp_user_values']['display_binary_as_hex']), false);",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "688:         echo '<div class=\"formelement\">';",
          "690:         echo '</div>';",
          "692:         if (! PMA_DRIZZLE) {",
          "",
          "[Removed Lines]",
          "689:         PMA_display_html_checkbox('hide_transformation', __('Hide browser transformation'), ! empty($_SESSION['tmp_user_values']['hide_transformation']), false);",
          "",
          "[Added Lines]",
          "779:         PMA_display_html_checkbox('hide_transformation',",
          "780:             __('Hide browser transformation'),",
          "781:             ! empty($_SESSION['tmp_user_values']['hide_transformation']), false);",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "696:                 'WKT'   => __('Well Known Text'),",
          "697:                 'WKB'   => __('Well Known Binary')",
          "698:             );",
          "700:             echo '</div>';",
          "701:         }",
          "",
          "[Removed Lines]",
          "699:             PMA_display_html_radio('geometry_display', $choices, $_SESSION['tmp_user_values']['geometry_display']);",
          "",
          "[Added Lines]",
          "791:             PMA_display_html_radio('geometry_display', $choices,",
          "792:                 $_SESSION['tmp_user_values']['geometry_display']);",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "715:     if ($is_display['del_lnk'] == 'dr' || $is_display['del_lnk'] == 'kp') {",
          "717:         if ($GLOBALS['cfg']['AjaxEnable']) {",
          "718:             echo ' class=\"ajax\" ';",
          "719:         }",
          "720:         echo '>' . \"\\n\";",
          "721:         echo PMA_generate_common_hidden_inputs($db, $table, 1);",
          "723:     }",
          "725:     echo '<table id=\"table_results\" class=\"data';",
          "",
          "[Removed Lines]",
          "716:         echo '<form method=\"post\" action=\"tbl_row_action.php\" name=\"resultsForm\" id=\"resultsForm\"';",
          "722:         echo '<input type=\"hidden\" name=\"goto\"             value=\"sql.php\" />' . \"\\n\";",
          "",
          "[Added Lines]",
          "809:         echo '<form method=\"post\" action=\"tbl_row_action.php\" name=\"resultsForm\" '",
          "810:             . 'id=\"resultsForm\"';",
          "816:         echo '<input type=\"hidden\" name=\"goto\" value=\"sql.php\" />' . \"\\n\";",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "737:     if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "738:         || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "739:     ) {",
          "741:                   ? ' colspan=\"4\"'",
          "742:                   : '';",
          "743:     } else {",
          "745:                   ? ' rowspan=\"4\"'",
          "746:                   : '';",
          "747:     }",
          "",
          "[Removed Lines]",
          "740:         $colspan  = ($is_display['edit_lnk'] != 'nn' && $is_display['del_lnk'] != 'nn')",
          "744:         $rowspan  = ($is_display['edit_lnk'] != 'nn' && $is_display['del_lnk'] != 'nn')",
          "",
          "[Added Lines]",
          "834:         $colspan  = ($is_display['edit_lnk'] != 'nn'",
          "835:             && $is_display['del_lnk'] != 'nn')",
          "839:         $rowspan  = ($is_display['edit_lnk'] != 'nn'",
          "840:             && $is_display['del_lnk'] != 'nn')",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "750:     if (($is_display['edit_lnk'] == 'nn' && $is_display['del_lnk'] == 'nn')",
          "751:         && $is_display['text_btn'] == '1'",
          "752:     ) {",
          "754:         if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "755:             || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "756:         ) {",
          "",
          "[Removed Lines]",
          "753:         $vertical_display['emptypre'] = ($is_display['edit_lnk'] != 'nn' && $is_display['del_lnk'] != 'nn') ? 4 : 0;",
          "",
          "[Added Lines]",
          "849:         $vertical_display['emptypre'] = ($is_display['edit_lnk'] != 'nn'",
          "850:             && $is_display['del_lnk'] != 'nn') ? 4 : 0;",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "763:         } else {",
          "764:             ?>",
          "765: <tr>",
          "767: </tr>",
          "768:             <?php",
          "769:         } // end vertical mode",
          "",
          "[Removed Lines]",
          "766:     <th colspan=\"<?php echo $num_rows + floor($num_rows/$_SESSION['tmp_user_values']['repeat_cells']) + 1; ?>\"></th>",
          "",
          "[Added Lines]",
          "863:     <th colspan=\"<?php echo $num_rows + floor($num_rows",
          "864:         / $_SESSION['tmp_user_values']['repeat_cells']) + 1; ?>\"></th>",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "775:         && $is_display['text_btn'] == '1'",
          "776:     ) {",
          "778:         if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "779:             || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "780:         ) {",
          "781:             ?>",
          "783:             <?php",
          "785:         } else {",
          "789:         } // end vertical mode",
          "790:     }",
          "796:         if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "797:             || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "798:         ) {",
          "",
          "[Removed Lines]",
          "774:     elseif (($GLOBALS['cfg']['RowActionLinks'] == 'left' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "777:         $vertical_display['emptypre'] = ($is_display['edit_lnk'] != 'nn' && $is_display['del_lnk'] != 'nn') ? 4 : 0;",
          "782:                 <th <?php echo $colspan; ?>><?php echo $full_or_partial_text_link;?></th>",
          "786:             $vertical_display['textbtn'] = '    <th ' . $rowspan . ' class=\"vmiddle\">' . \"\\n\"",
          "787:                                          . '        ' . \"\\n\"",
          "788:                                          . '    </th>' . \"\\n\";",
          "793:     elseif (($GLOBALS['cfg']['RowActionLinks'] == 'left' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "794:              && ($is_display['edit_lnk'] != 'nn' || $is_display['del_lnk'] != 'nn')) {",
          "795:         $vertical_display['emptypre'] = ($is_display['edit_lnk'] != 'nn' && $is_display['del_lnk'] != 'nn') ? 4 : 0;",
          "",
          "[Added Lines]",
          "872:     elseif (($GLOBALS['cfg']['RowActionLinks'] == 'left'",
          "873:         || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "876:         $vertical_display['emptypre'] = ($is_display['edit_lnk'] != 'nn'",
          "877:             && $is_display['del_lnk'] != 'nn') ? 4 : 0;",
          "882:                 <th <?php echo $colspan; ?>><?php",
          "883:                     echo $full_or_partial_text_link; ?></th>",
          "887:             $vertical_display['textbtn'] =",
          "888:                 '    <th ' . $rowspan . ' class=\"vmiddle\">' . \"\\n\"",
          "889:                 . '        ' . \"\\n\"",
          "890:                 . '    </th>' . \"\\n\";",
          "895:     elseif (($GLOBALS['cfg']['RowActionLinks'] == 'left'",
          "896:             || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "897:         && ($is_display['edit_lnk'] != 'nn' || $is_display['del_lnk'] != 'nn')) {",
          "898:         $vertical_display['emptypre'] = ($is_display['edit_lnk'] != 'nn'",
          "899:             && $is_display['del_lnk'] != 'nn') ? 4 : 0;",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "805:         } // end vertical mode",
          "806:     }",
          "809:     elseif ($GLOBALS['cfg']['RowActionLinks'] == 'none'",
          "811:     ) {",
          "812:         echo '<th></th>';",
          "813:     }",
          "",
          "[Removed Lines]",
          "810:         && ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal' || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped')",
          "",
          "[Added Lines]",
          "915:         && ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "916:             || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped')",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "831:         }",
          "832:     }",
          "835:         include_once './libraries/transformations.lib.php';",
          "836:         $GLOBALS['mime_map'] = PMA_getMIME($db, $table);",
          "837:     }",
          "",
          "[Removed Lines]",
          "834:     if ($GLOBALS['cfgRelation']['commwork'] && $GLOBALS['cfgRelation']['mimework'] && $GLOBALS['cfg']['BrowseMIME'] && ! $_SESSION['tmp_user_values']['hide_transformation']) {",
          "",
          "[Added Lines]",
          "942:     if ($GLOBALS['cfgRelation']['commwork']",
          "943:         && $GLOBALS['cfgRelation']['mimework']",
          "944:         && $GLOBALS['cfg']['BrowseMIME']",
          "945:         && ! $_SESSION['tmp_user_values']['hide_transformation']) {",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "844:     ) {",
          "846:         $wi = 0;",
          "849:                 $highlight_columns[$wci] = 'true';",
          "850:             }",
          "851:         }",
          "",
          "[Removed Lines]",
          "847:         if (isset($analyzed_sql[0]['where_clause_identifiers']) && is_array($analyzed_sql[0]['where_clause_identifiers'])) {",
          "848:             foreach ($analyzed_sql[0]['where_clause_identifiers'] AS $wci_nr => $wci) {",
          "",
          "[Added Lines]",
          "958:         if (isset($analyzed_sql[0]['where_clause_identifiers'])",
          "959:             && is_array($analyzed_sql[0]['where_clause_identifiers'])) {",
          "960:             foreach ($analyzed_sql[0]['where_clause_identifiers']",
          "961:                 as $wci_nr => $wci) {",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "866:         $i = $col_order ? $col_order[$j] : $j;",
          "870:             $condition_field = true;",
          "871:         } else {",
          "872:             $condition_field = false;",
          "",
          "[Removed Lines]",
          "869:         if (isset($highlight_columns[$fields_meta[$i]->name]) || isset($highlight_columns[PMA_backquote($fields_meta[$i]->name)])) {",
          "",
          "[Added Lines]",
          "982:         if (isset($highlight_columns[$fields_meta[$i]->name])",
          "983:             || isset($highlight_columns[PMA_backquote($fields_meta[$i]->name)])) {",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "877:             && isset($comments_map[$fields_meta[$i]->table])",
          "878:             && isset($comments_map[$fields_meta[$i]->table][$fields_meta[$i]->name])",
          "879:         ) {",
          "881:         } else {",
          "882:             $comments = '';",
          "883:         }",
          "",
          "[Removed Lines]",
          "880:             $comments = '<span class=\"tblcomment\">' . htmlspecialchars($comments_map[$fields_meta[$i]->table][$fields_meta[$i]->name]) . '</span>';",
          "",
          "[Added Lines]",
          "994:             $comments = '<span class=\"tblcomment\">' . htmlspecialchars(",
          "995:                     $comments_map[$fields_meta[$i]->table][$fields_meta[$i]->name])",
          "996:                 . '</span>';",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "904:             $name_to_use_in_sort = $fields_meta[$i]->name;",
          "905:             $is_orgname = false;",
          "907:                 $name_to_use_in_sort = $fields_meta[$i]->orgname;",
          "908:                 $is_orgname = true;",
          "909:             }",
          "",
          "[Removed Lines]",
          "906:             if (isset($fields_meta[$i]->orgname) && strlen($fields_meta[$i]->orgname)) {",
          "",
          "[Added Lines]",
          "1022:             if (isset($fields_meta[$i]->orgname)",
          "1023:                 && strlen($fields_meta[$i]->orgname)) {",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "928:                     && strpos($sort_expression_nodirection, $sort_tbl) === false",
          "929:                     && strpos($sort_expression_nodirection, '(') === false",
          "930:                 ) {",
          "932:                 } else {",
          "933:                     $new_sort_expression_nodirection = $sort_expression_nodirection;",
          "934:                 }",
          "936:                 $is_in_sort = false;",
          "937:                 $sort_name = str_replace('`', '', $sort_tbl) . $name_to_use_in_sort;",
          "940:                 ) {",
          "941:                     $is_in_sort = true;",
          "942:                 }",
          "",
          "[Removed Lines]",
          "931:                     $new_sort_expression_nodirection = $sort_tbl . $sort_expression_nodirection;",
          "938:                 if ($sort_name == str_replace('`', '', $new_sort_expression_nodirection)",
          "939:                     || $sort_name == str_replace('`', '', $sort_expression_nodirection)",
          "",
          "[Added Lines]",
          "1048:                     $new_sort_expression_nodirection = $sort_tbl",
          "1049:                         . $sort_expression_nodirection;",
          "1056:                 if ($sort_name == str_replace('`', '',",
          "1057:                         $new_sort_expression_nodirection)",
          "1058:                     || $sort_name == str_replace('`', '',",
          "1059:                         $sort_expression_nodirection)",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "949:             if (strpos($name_to_use_in_sort, '(') !== false && ! $is_orgname) {",
          "950:                 $sort_order = \"\\n\" . 'ORDER BY ' . $name_to_use_in_sort . ' ';",
          "951:             } else {",
          "953:             }",
          "954:             unset($name_to_use_in_sort);",
          "955:             unset($is_orgname);",
          "",
          "[Removed Lines]",
          "952:                 $sort_order = \"\\n\" . 'ORDER BY ' . $sort_tbl . PMA_backquote($name_to_use_in_sort) . ' ';",
          "",
          "[Added Lines]",
          "1072:                 $sort_order = \"\\n\" . 'ORDER BY ' . $sort_tbl",
          "1073:                     . PMA_backquote($name_to_use_in_sort) . ' ';",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "960:                 $GLOBALS['cfg']['Order'] = strtoupper($GLOBALS['cfg']['Order']);",
          "961:                 if ($GLOBALS['cfg']['Order'] === 'SMART') {",
          "963:                 } else {",
          "964:                     $sort_order .= $GLOBALS['cfg']['Order'];",
          "965:                 }",
          "966:                 $order_img   = '';",
          "967:             } elseif ('DESC' == $sort_direction) {",
          "968:                 $sort_order .= ' ASC';",
          "971:             } else {",
          "972:                 $sort_order .= ' DESC';",
          "975:             }",
          "978:                 $sorted_sql_query = $regs3[1] . $sort_order . $regs3[2];",
          "979:             } else {",
          "980:                 $sorted_sql_query = $unsorted_sql_query . $sort_order;",
          "",
          "[Removed Lines]",
          "962:                     $sort_order .= (preg_match('@time|date@i', $fields_meta[$i]->type)) ? 'DESC' : 'ASC';",
          "969:                 $order_img   = ' ' . PMA_getImage('s_desc.png', __('Descending'), array('class' => \"soimg$i\", 'title' => ''));",
          "970:                 $order_img  .= ' ' . PMA_getImage('s_asc.png', __('Ascending'), array('class' => \"soimg$i hide\", 'title' => ''));",
          "973:                 $order_img   = ' ' . PMA_getImage('s_asc.png', __('Ascending'), array('class' => \"soimg$i\", 'title' => ''));",
          "974:                 $order_img  .= ' ' . PMA_getImage('s_desc.png', __('Descending'), array('class' => \"soimg$i hide\", 'title' => ''));",
          "977:             if (preg_match('@(.*)([[:space:]](LIMIT (.*)|PROCEDURE (.*)|FOR UPDATE|LOCK IN SHARE MODE))@is', $unsorted_sql_query, $regs3)) {",
          "",
          "[Added Lines]",
          "1083:                     $sort_order .= (preg_match('@time|date@i',",
          "1084:                         $fields_meta[$i]->type)) ? 'DESC' : 'ASC';",
          "1091:                 $order_img   = ' ' . PMA_getImage('s_desc.png', __('Descending'),",
          "1092:                     array('class' => \"soimg$i\", 'title' => ''));",
          "1093:                 $order_img  .= ' ' . PMA_getImage('s_asc.png', __('Ascending'),",
          "1094:                     array('class' => \"soimg$i hide\", 'title' => ''));",
          "1097:                 $order_img   = ' ' . PMA_getImage('s_asc.png', __('Ascending'),",
          "1098:                     array('class' => \"soimg$i\", 'title' => ''));",
          "1099:                 $order_img  .= ' ' . PMA_getImage('s_desc.png', __('Descending'),",
          "1100:                     array('class' => \"soimg$i hide\", 'title' => ''));",
          "1103:             if (preg_match('@(.*)([[:space:]](LIMIT (.*)|PROCEDURE (.*)|FOR UPDATE|'",
          "1104:                     . 'LOCK IN SHARE MODE))@is', $unsorted_sql_query, $regs3)) {",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1012:                 $order_link_params['style'] = 'direction: ltr; writing-mode: tb-rl;';",
          "1013:             }",
          "1014:             $order_link_params['title'] = __('Sort');",
          "1018:             if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "1020:             ) {",
          "1021:                 echo '<th';",
          "1022:                 $th_class = array();",
          "",
          "[Removed Lines]",
          "1015:             $order_link_content = ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped' && $GLOBALS['cfg']['HeaderFlipType'] == 'fake' ? PMA_flipstring(htmlspecialchars($fields_meta[$i]->name), \"<br />\\n\") : htmlspecialchars($fields_meta[$i]->name));",
          "1016:             $order_link = PMA_linkOrButton($order_url, $order_link_content . $order_img, $order_link_params, false, true);",
          "1019:                 || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "",
          "[Added Lines]",
          "1142:             $order_link_content = ($_SESSION['tmp_user_values']['disp_direction']",
          "1143:                 == 'horizontalflipped'",
          "1144:                 && $GLOBALS['cfg']['HeaderFlipType'] == 'fake'",
          "1145:                 ? PMA_flipstring(htmlspecialchars($fields_meta[$i]->name),",
          "1146:                     \"<br />\\n\")",
          "1147:                 : htmlspecialchars($fields_meta[$i]->name));",
          "1148:             $order_link = PMA_linkOrButton($order_url,",
          "1149:                 $order_link_content . $order_img, $order_link_params, false, true);",
          "1152:                 || $_SESSION['tmp_user_values']['disp_direction']",
          "1153:                     == 'horizontalflipped'",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1036:                 }",
          "1037:                 echo ' class=\"' . implode(' ', $th_class);",
          "1040:                     echo ' vbottom';",
          "1041:                 }",
          "1044:             }",
          "1045:             $vertical_display['desc'][] = '    <th '",
          "1046:                 . 'class=\"draggable'",
          "1047:                 . ($condition_field ? ' condition' : '')",
          "1050:         } // end if (2.1)",
          "1053:         else {",
          "1054:             if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "1056:             ) {",
          "1057:                 echo '<th';",
          "1058:                 $th_class = array();",
          "",
          "[Removed Lines]",
          "1039:                 if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped') {",
          "1042:                 echo '\" data-column=\"' . htmlspecialchars($fields_meta[$i]->name) . '\">'",
          "1043:                     . $order_link . $comments . '</th>';",
          "1048:                 . '\" data-column=\"' . htmlspecialchars($fields_meta[$i]->name) . '\">' . \"\\n\"",
          "1049:                 . $order_link . $comments . '    </th>' . \"\\n\";",
          "1055:                 || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "",
          "[Added Lines]",
          "1173:                 if ($_SESSION['tmp_user_values']['disp_direction']",
          "1174:                         == 'horizontalflipped') {",
          "1177:                 echo '\" data-column=\"' . htmlspecialchars($fields_meta[$i]->name)",
          "1178:                     . '\">' . $order_link . $comments . '</th>';",
          "1183:                 . '\" data-column=\"' . htmlspecialchars($fields_meta[$i]->name)",
          "1184:                 . '\">' . \"\\n\" . $order_link . $comments . '    </th>' . \"\\n\";",
          "1190:                 || $_SESSION['tmp_user_values']['disp_direction']",
          "1191:                     == 'horizontalflipped'",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1064:                     $th_class[] = 'condition';",
          "1065:                 }",
          "1066:                 echo ' class=\"' . implode(' ', $th_class);",
          "1068:                     echo ' vbottom';",
          "1069:                 }",
          "1070:                 echo '\"';",
          "1072:                     && $GLOBALS['cfg']['HeaderFlipType'] == 'css'",
          "1073:                 ) {",
          "1074:                     echo ' style=\"direction: ltr; writing-mode: tb-rl;\"';",
          "1075:                 }",
          "1078:                     && $GLOBALS['cfg']['HeaderFlipType'] == 'fake'",
          "1079:                 ) {",
          "1081:                 } else {",
          "1082:                     echo htmlspecialchars($fields_meta[$i]->name);",
          "1083:                 }",
          "",
          "[Removed Lines]",
          "1067:                 if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped') {",
          "1071:                 if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "1076:                 echo ' data-column=\"' . htmlspecialchars($fields_meta[$i]->name) . '\">';",
          "1077:                 if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "1080:                     echo PMA_flipstring(htmlspecialchars($fields_meta[$i]->name), '<br />');",
          "",
          "[Added Lines]",
          "1203:                 if ($_SESSION['tmp_user_values']['disp_direction']",
          "1204:                         == 'horizontalflipped') {",
          "1208:                 if ($_SESSION['tmp_user_values']['disp_direction']",
          "1209:                         == 'horizontalflipped'",
          "1214:                 echo ' data-column=\"' . htmlspecialchars($fields_meta[$i]->name)",
          "1215:                     . '\">';",
          "1216:                 if ($_SESSION['tmp_user_values']['disp_direction']",
          "1217:                         == 'horizontalflipped'",
          "1220:                     echo PMA_flipstring(htmlspecialchars($fields_meta[$i]->name),",
          "1221:                         '<br />');",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1086:             $vertical_display['desc'][] = '    <th '",
          "1087:                 . 'class=\"draggable'",
          "1088:                 . ($condition_field ? ' condition\"' : '')",
          "1092:         } // end else (2.2)",
          "1093:     } // end for",
          "1098:         && ($is_display['edit_lnk'] != 'nn' || $is_display['del_lnk'] != 'nn')",
          "1099:         && $is_display['text_btn'] == '1'",
          "1100:     ) {",
          "1102:         if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "1103:             || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "1104:         ) {",
          "",
          "[Removed Lines]",
          "1089:                 . '\" data-column=\"' . htmlspecialchars($fields_meta[$i]->name) . '\">' . \"\\n\"",
          "1090:                 . '        ' . htmlspecialchars($fields_meta[$i]->name) . \"\\n\"",
          "1091:                 . $comments . '    </th>';",
          "1097:     if (($GLOBALS['cfg']['RowActionLinks'] == 'right' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1101:         $vertical_display['emptyafter'] = ($is_display['edit_lnk'] != 'nn' && $is_display['del_lnk'] != 'nn') ? 4 : 1;",
          "",
          "[Added Lines]",
          "1230:                 . '\" data-column=\"' . htmlspecialchars($fields_meta[$i]->name)",
          "1231:                 . '\">' . \"\\n\" . '        ' . htmlspecialchars($fields_meta[$i]->name)",
          "1232:                 . \"\\n\" . $comments . '    </th>';",
          "1238:     if (($GLOBALS['cfg']['RowActionLinks'] == 'right'",
          "1239:             || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1243:         $vertical_display['emptyafter'] =",
          "1244:             ($is_display['edit_lnk'] != 'nn' && $is_display['del_lnk'] != 'nn')",
          "1245:             ? 4",
          "1246:             : 1;",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1109:             <?php",
          "1111:         } else {",
          "1115:         } // end vertical mode",
          "1116:     }",
          "1121:         && ($is_display['edit_lnk'] == 'nn' && $is_display['del_lnk'] == 'nn')",
          "1122:         && (! isset($GLOBALS['is_header_sent']) || ! $GLOBALS['is_header_sent'])",
          "1123:     ) {",
          "1125:         if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "1126:             || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "1127:         ) {",
          "",
          "[Removed Lines]",
          "1112:             $vertical_display['textbtn'] = '    <th ' . $rowspan . ' class=\"vmiddle\">' . \"\\n\"",
          "1113:                                          . '        ' . \"\\n\"",
          "1114:                                          . '    </th>' . \"\\n\";",
          "1120:     elseif (($GLOBALS['cfg']['RowActionLinks'] == 'left' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1124:         $vertical_display['emptyafter'] = ($is_display['edit_lnk'] != 'nn' && $is_display['del_lnk'] != 'nn') ? 4 : 1;",
          "",
          "[Added Lines]",
          "1257:             $vertical_display['textbtn'] = '    <th ' . $rowspan",
          "1258:                 . ' class=\"vmiddle\">' . \"\\n\"",
          "1259:                 . '        ' . \"\\n\"",
          "1260:                 . '    </th>' . \"\\n\";",
          "1266:     elseif (($GLOBALS['cfg']['RowActionLinks'] == 'left'",
          "1267:             || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1271:         $vertical_display['emptyafter'] =",
          "1272:             ($is_display['edit_lnk'] != 'nn' && $is_display['del_lnk'] != 'nn')",
          "1273:             ? 4",
          "1274:             : 1;",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1160: function PMA_buildValueDisplay($class, $condition_field, $value)",
          "1161: {",
          "1163: }",
          "",
          "[Removed Lines]",
          "1162:     return '<td class=\"left ' . $class . ($condition_field ? ' condition' : '') . '\">' . $value . '</td>';",
          "",
          "[Added Lines]",
          "1312:     return '<td class=\"left ' . $class . ($condition_field ? ' condition' : '')",
          "1313:         . '\">' . $value . '</td>';",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "1175: function PMA_buildNullDisplay($class, $condition_field, $meta, $align = '')",
          "1176: {",
          "1179: }",
          "",
          "[Removed Lines]",
          "1178:     return '<td ' . $align . ' class=\"' . PMA_addClass($class, $condition_field, $meta, '') . ' null\"><i>NULL</i></td>';",
          "",
          "[Added Lines]",
          "1329:     return '<td ' . $align . ' class=\"' . PMA_addClass($class, $condition_field,",
          "1330:         $meta, '') . ' null\"><i>NULL</i></td>';",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "1191: function PMA_buildEmptyDisplay($class, $condition_field, $meta, $align = '')",
          "1192: {",
          "1193:     $nowrap = ' nowrap';",
          "1195: }",
          "",
          "[Removed Lines]",
          "1194:     return '<td ' . $align . ' class=\"' . PMA_addClass($class, $condition_field, $meta, $nowrap)  . '\"></td>';",
          "",
          "[Added Lines]",
          "1346:     return '<td ' . $align . ' class=\"' . PMA_addClass($class, $condition_field,",
          "1347:         $meta, $nowrap)  . '\"></td>';",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "1211: {",
          "1213:     $enum_class = '';",
          "",
          "[Removed Lines]",
          "1210: function PMA_addClass($class, $condition_field, $meta, $nowrap, $is_field_truncated = false, $transform_function = '', $default_function = '')",
          "",
          "[Added Lines]",
          "1363: function PMA_addClass($class, $condition_field, $meta, $nowrap,",
          "1364:     $is_field_truncated = false, $transform_function = '', $default_function = '')",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "1269:     global $db, $table, $goto;",
          "1270:     global $sql_query, $fields_meta, $fields_cnt;",
          "1271:     global $vertical_display, $highlight_columns;",
          "1274:     $url_sql_query          = $sql_query;",
          "",
          "[Removed Lines]",
          "1272:     global $row; // mostly because of browser transformations, to make the row-data accessible in a plugin",
          "",
          "[Added Lines]",
          "1426:     global $row; // mostly because of browser transformations,",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "1337:         ) {",
          "1338:             echo '<tr>' . \"\\n\";",
          "1339:             if ($vertical_display['emptypre'] > 0) {",
          "1342:             } else if ($GLOBALS['cfg']['RowActionLinks'] == 'none') {",
          "1343:                 echo '    <th></th>' . \"\\n\";",
          "1344:             }",
          "",
          "[Removed Lines]",
          "1340:                 echo '    <th colspan=\"' . $vertical_display['emptypre'] . '\">' . \"\\n\"",
          "1341:                     .'        &nbsp;</th>' . \"\\n\";",
          "",
          "[Added Lines]",
          "1495:                 echo '    <th colspan=\"' . $vertical_display['emptypre'] . '\">'",
          "1496:                      . \"\\n\".'        &nbsp;</th>' . \"\\n\";",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "1348:             }",
          "1350:             if ($vertical_display['emptyafter'] > 0) {",
          "1353:             }",
          "1354:             echo '</tr>' . \"\\n\";",
          "1355:         } // end if",
          "",
          "[Removed Lines]",
          "1351:                 echo '    <th colspan=\"' . $vertical_display['emptyafter'] . '\">' . \"\\n\"",
          "1352:                     .'        &nbsp;</th>' . \"\\n\";",
          "",
          "[Added Lines]",
          "1506:                 echo '    <th colspan=\"' . $vertical_display['emptyafter'] . '\">'",
          "1507:                      . \"\\n\" . '        &nbsp;</th>' . \"\\n\";",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "1377:         $where_clause_html = urlencode($where_clause);",
          "1381:         if ($is_display['edit_lnk'] != 'nn' || $is_display['del_lnk'] != 'nn') {",
          "1384:             if ($GLOBALS['cfg']['PropertiesIconic'] === 'both') {",
          "1385:                 $iconic_spacer = '<div class=\"nowrap\">';",
          "",
          "[Removed Lines]",
          "1376:         list($where_clause, $clause_is_unique, $condition_array) = PMA_getUniqueCondition($dt_result, $fields_cnt, $fields_meta, $row);",
          "",
          "[Added Lines]",
          "1531:         list($where_clause, $clause_is_unique, $condition_array)",
          "1532:             = PMA_getUniqueCondition($dt_result, $fields_cnt, $fields_meta, $row);",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "1397:                     'sql_query'        => $url_sql_query,",
          "1398:                     'goto'             => 'sql.php',",
          "1399:                 );",
          "1403:                 $edit_str = PMA_getIcon('b_edit.png', __('Edit'));",
          "1404:                 $copy_str = PMA_getIcon('b_insrow.png', __('Copy'));",
          "",
          "[Removed Lines]",
          "1400:                 $edit_url = 'tbl_change.php' . PMA_generate_common_url($_url_params + array('default_action' => 'update'));",
          "1401:                 $copy_url = 'tbl_change.php' . PMA_generate_common_url($_url_params + array('default_action' => 'insert'));",
          "",
          "[Added Lines]",
          "1557:                 $edit_url = 'tbl_change.php' . PMA_generate_common_url(",
          "1558:                     $_url_params + array('default_action' => 'update'));",
          "1559:                 $copy_url = 'tbl_change.php' . PMA_generate_common_url(",
          "1560:                     $_url_params + array('default_action' => 'insert'));",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "1421:                 );",
          "1422:                 $lnk_goto = 'sql.php' . PMA_generate_common_url($_url_params, 'text');",
          "1427:                 $_url_params = array(",
          "1428:                     'db'        => $db,",
          "",
          "[Removed Lines]",
          "1424:                 $del_query = 'DELETE FROM ' . PMA_backquote($db) . '.' . PMA_backquote($table)",
          "1425:                     . ' WHERE ' . $where_clause . ($clause_is_unique ? '' : ' LIMIT 1');",
          "",
          "[Added Lines]",
          "1583:                 $del_query = 'DELETE FROM ' . PMA_backquote($db) . '.'",
          "1584:                     . PMA_backquote($table)",
          "1585:                     . ' WHERE ' . $where_clause .",
          "1586:                     ($clause_is_unique",
          "1587:                         ? ''",
          "1588:                         : ' LIMIT 1');",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "1433:                 );",
          "1434:                 $del_url  = 'sql.php' . PMA_generate_common_url($_url_params);",
          "1437:                           . ' WHERE ' . PMA_jsFormat($where_clause, false)",
          "1438:                           . ($clause_is_unique ? '' : ' LIMIT 1');",
          "1439:                 $del_str = PMA_getIcon('b_drop.png', __('Delete'));",
          "",
          "[Removed Lines]",
          "1436:                 $js_conf  = 'DELETE FROM ' . PMA_jsFormat($db) . '.' . PMA_jsFormat($table)",
          "",
          "[Added Lines]",
          "1599:                 $js_conf  = 'DELETE FROM ' . PMA_jsFormat($db) . '.'",
          "1600:                           . PMA_jsFormat($table)",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "1445:                     'sql_query' => $url_sql_query,",
          "1446:                     'goto'      => 'main.php',",
          "1447:                 );",
          "1450:                 $_url_params = array(",
          "1451:                     'db'        => 'mysql',",
          "",
          "[Removed Lines]",
          "1448:                 $lnk_goto = 'sql.php' . PMA_generate_common_url($_url_params, 'text');",
          "",
          "[Added Lines]",
          "1612:                 $lnk_goto = 'sql.php' . PMA_generate_common_url(",
          "1613:                     $_url_params, 'text');",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "1459:             } // end if (1.2.2)",
          "1463:                 && ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "1465:             ) {",
          "1466:                 if (! isset($js_conf)) {",
          "1467:                     $js_conf = '';",
          "1468:                 }",
          "1470:             } elseif (($GLOBALS['cfg']['RowActionLinks'] == 'none')",
          "1471:                 && ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "1473:             ) {",
          "1474:                 if (! isset($js_conf)) {",
          "1475:                     $js_conf = '';",
          "1476:                 }",
          "1478:             } // end if (1.3)",
          "1479:         } // end if (1)",
          "",
          "[Removed Lines]",
          "1462:             if (($GLOBALS['cfg']['RowActionLinks'] == 'left' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1464:                 || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped')",
          "1469:                 echo PMA_generateCheckboxAndLinks('left', $del_url, $is_display, $row_no, $where_clause, $where_clause_html, $condition_array, $del_query, 'l', $edit_url, $copy_url, $edit_anchor_class, $edit_str, $copy_str, $del_str, $js_conf);",
          "1472:                 || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped')",
          "1477:                 echo PMA_generateCheckboxAndLinks('none', $del_url, $is_display, $row_no, $where_clause, $where_clause_html, $condition_array, $del_query, 'l', $edit_url, $copy_url, $edit_anchor_class, $edit_str, $copy_str, $del_str, $js_conf);",
          "",
          "[Added Lines]",
          "1627:             if (($GLOBALS['cfg']['RowActionLinks'] == 'left'",
          "1628:                     || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1630:                 || $_SESSION['tmp_user_values']['disp_direction']",
          "1631:                     == 'horizontalflipped')",
          "1636:                 echo PMA_generateCheckboxAndLinks('left', $del_url, $is_display,",
          "1637:                     $row_no, $where_clause, $where_clause_html, $condition_array,",
          "1638:                     $del_query, 'l', $edit_url, $copy_url, $edit_anchor_class,",
          "1639:                     $edit_str, $copy_str, $del_str, $js_conf);",
          "1642:                 || $_SESSION['tmp_user_values']['disp_direction']",
          "1643:                     == 'horizontalflipped')",
          "1648:                 echo PMA_generateCheckboxAndLinks('none', $del_url, $is_display,",
          "1649:                     $row_no, $where_clause, $where_clause_html, $condition_array,",
          "1650:                     $del_query, 'l', $edit_url, $copy_url, $edit_anchor_class,",
          "1651:                     $edit_str, $copy_str, $del_str, $js_conf);",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "1488:             $not_null_class = $meta->not_null ? 'not_null' : '';",
          "1489:             $relation_class = isset($map[$meta->name]) ? 'relation' : '';",
          "1490:             $hide_class = ($col_visib && !$col_visib[$j] &&",
          "1495:                 $field_type_class = 'datetimefield';",
          "1496:             } else if ($meta->type == 'date') {",
          "1497:                 $field_type_class = 'datefield';",
          "",
          "[Removed Lines]",
          "1492:                            $_SESSION['tmp_user_values']['disp_direction'] != 'vertical') ? 'hide' : '';",
          "1494:             if (substr($meta->type, 0, 9) == 'timestamp' || $meta->type == 'datetime') {",
          "",
          "[Added Lines]",
          "1666:                            $_SESSION['tmp_user_values']['disp_direction']",
          "1667:                            != 'vertical')",
          "1668:                                ? 'hide'",
          "1669:                                : '';",
          "1671:             if (substr($meta->type, 0, 9) == 'timestamp'",
          "1672:                 || $meta->type == 'datetime') {",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "1502:             $is_field_truncated = false;",
          "1510:                 $condition_field = true;",
          "1511:             } else {",
          "1512:                 $condition_field = false;",
          "1513:             }",
          "1517:                 $class .= ' row_' . $row_no;",
          "1518:                 if ($GLOBALS['cfg']['BrowsePointerEnable'] == true) {",
          "",
          "[Removed Lines]",
          "1505:             $class = 'data ' . $grid_edit_class . ' ' . $not_null_class . ' ' . $relation_class . ' ' . $hide_class . ' ' . $field_type_class; //' ' . $alternating_color_class .",
          "1509:             if (isset($highlight_columns) && (isset($highlight_columns[$meta->name]) || isset($highlight_columns[PMA_backquote($meta->name)]))) {",
          "1515:             if ($_SESSION['tmp_user_values']['disp_direction'] == 'vertical' && (! isset($GLOBALS['printview']) || ($GLOBALS['printview'] != '1'))) {",
          "",
          "[Added Lines]",
          "1683:             $class = 'data ' . $grid_edit_class . ' ' . $not_null_class . ' '",
          "1684:                 . $relation_class . ' ' . $hide_class . ' ' . $field_type_class;",
          "1689:             if (isset($highlight_columns) && (isset($highlight_columns[$meta->name])",
          "1690:                 || isset($highlight_columns[PMA_backquote($meta->name)]))) {",
          "1696:             if ($_SESSION['tmp_user_values']['disp_direction'] == 'vertical'",
          "1697:                 && (! isset($GLOBALS['printview'])",
          "1698:                     || ($GLOBALS['printview'] != '1'))) {",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "1528:             $transform_function = $default_function;",
          "1529:             $transform_options = array();",
          "1539:                         include_once './libraries/transformations/' . $include_file;",
          "1545:                         }",
          "1546:                     } // end if file_exists",
          "1547:                 } // end if transformation is set",
          "",
          "[Removed Lines]",
          "1531:             if ($GLOBALS['cfgRelation']['mimework'] && $GLOBALS['cfg']['BrowseMIME']) {",
          "1533:                 if (isset($GLOBALS['mime_map'][$meta->name]['mimetype']) && isset($GLOBALS['mime_map'][$meta->name]['transformation']) && !empty($GLOBALS['mime_map'][$meta->name]['transformation'])) {",
          "1534:                     $include_file = PMA_securePath($GLOBALS['mime_map'][$meta->name]['transformation']);",
          "1536:                     if (file_exists('./libraries/transformations/' . $include_file)) {",
          "1537:                         $transformfunction_name = str_replace('.inc.php', '', $GLOBALS['mime_map'][$meta->name]['transformation']);",
          "1541:                         if (function_exists('PMA_transformation_' . $transformfunction_name)) {",
          "1542:                             $transform_function = 'PMA_transformation_' . $transformfunction_name;",
          "1543:                             $transform_options  = PMA_transformation_getOptions((isset($GLOBALS['mime_map'][$meta->name]['transformation_options']) ? $GLOBALS['mime_map'][$meta->name]['transformation_options'] : ''));",
          "1544:                             $meta->mimetype     = str_replace('_', '/', $GLOBALS['mime_map'][$meta->name]['mimetype']);",
          "",
          "[Added Lines]",
          "1714:             if ($GLOBALS['cfgRelation']['mimework']",
          "1715:                 && $GLOBALS['cfg']['BrowseMIME']) {",
          "1717:                 if (isset($GLOBALS['mime_map'][$meta->name]['mimetype'])",
          "1718:                     && isset($GLOBALS['mime_map'][$meta->name]['transformation'])",
          "1719:                     && !empty($GLOBALS['mime_map'][$meta->name]",
          "1720:                         ['transformation'])) {",
          "1721:                     $include_file = PMA_securePath(",
          "1722:                         $GLOBALS['mime_map'][$meta->name]['transformation']);",
          "1724:                     if (file_exists('./libraries/transformations/'",
          "1725:                         . $include_file)) {",
          "1726:                         $transformfunction_name = str_replace(",
          "1727:                             '.inc.php', '',",
          "1728:                             $GLOBALS['mime_map'][$meta->name]['transformation']);",
          "1732:                         if (function_exists('PMA_transformation_'",
          "1733:                             . $transformfunction_name)) {",
          "1734:                             $transform_function = 'PMA_transformation_'",
          "1735:                                 . $transformfunction_name;",
          "1736:                             $transform_options  = PMA_transformation_getOptions(",
          "1737:                                 (isset($GLOBALS['mime_map'][$meta->name]",
          "1738:                                         ['transformation_options'])",
          "1739:                                     ? $GLOBALS['mime_map'][$meta->name]",
          "1740:                                         ['transformation_options']",
          "1741:                                     : ''));",
          "1742:                             $meta->mimetype     = str_replace(",
          "1743:                                 '_', '/',",
          "1744:                                 $GLOBALS['mime_map'][$meta->name]['mimetype']);",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "1558:                 $_url_params['sql_query'] = $url_sql_query;",
          "1559:             }",
          "1564:             if ($meta->numeric == 1) {",
          "",
          "[Removed Lines]",
          "1561:             $transform_options['wrapper_link'] = PMA_generate_common_url($_url_params);",
          "",
          "[Added Lines]",
          "1761:             $transform_options['wrapper_link']",
          "1762:                 = PMA_generate_common_url($_url_params);",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "1571:                 if (! isset($row[$i]) || is_null($row[$i])) {",
          "1573:                 } elseif ($row[$i] != '') {",
          "1575:                     $nowrap = ' nowrap';",
          "1576:                     $where_comparison = ' = ' . $row[$i];",
          "1579:                 } else {",
          "1581:                 }",
          "",
          "[Removed Lines]",
          "1572:                     $vertical_display['data'][$row_no][$i]     =  PMA_buildNullDisplay('right '.$class, $condition_field, $meta, '');",
          "1578:                     $vertical_display['data'][$row_no][$i]     = '<td ' . PMA_prepare_row_data('right '.$class, $condition_field, $analyzed_sql, $meta, $map, $row[$i], $transform_function, $default_function, $nowrap, $where_comparison, $transform_options, $is_field_truncated);",
          "1580:                     $vertical_display['data'][$row_no][$i]     = PMA_buildEmptyDisplay('right '.$class, $condition_field, $meta, '');",
          "",
          "[Added Lines]",
          "1773:                     $vertical_display['data'][$row_no][$i] =",
          "1774:                     PMA_buildNullDisplay('right '.$class, $condition_field, $meta,",
          "1775:                         '');",
          "1781:                     $vertical_display['data'][$row_no][$i]     = '<td '",
          "1782:                         . PMA_prepare_row_data('right '.$class, $condition_field,",
          "1783:                             $analyzed_sql, $meta, $map, $row[$i],",
          "1784:                             $transform_function, $default_function, $nowrap,",
          "1785:                             $where_comparison, $transform_options,",
          "1786:                             $is_field_truncated);",
          "1788:                     $vertical_display['data'][$row_no][$i]",
          "1789:                         = PMA_buildEmptyDisplay('right '.$class, $condition_field,",
          "1790:                             $meta, '');",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "1592:                     $class = str_replace('grid_edit', '', $class);",
          "1594:                     if (! isset($row[$i]) || is_null($row[$i])) {",
          "1596:                     } else {",
          "1600:                         unset($blobtext);",
          "1601:                     }",
          "1603:                 } else {",
          "1604:                     if (! isset($row[$i]) || is_null($row[$i])) {",
          "1606:                     } elseif ($row[$i] != '') {",
          "1610:                             $is_field_truncated = true;",
          "1611:                         }",
          "1616:                         if ($is_field_truncated) {",
          "1617:                             $class .= ' truncated';",
          "1618:                         }",
          "1621:                     } else {",
          "1623:                     }",
          "1624:                 }",
          "1626:             } elseif ($meta->type == 'geometry') {",
          "1629:                 $class = str_replace('grid_edit', '', $class);",
          "1631:                 if (! isset($row[$i]) || is_null($row[$i])) {",
          "1633:                 } elseif ($row[$i] != '') {",
          "1635:                     if ('GEOM' == $_SESSION['tmp_user_values']['geometry_display']) {",
          "1636:                         $geometry_text = PMA_handle_non_printable_contents(",
          "1642:                         );",
          "1646:                         $where_comparison = ' = ' . $row[$i];",
          "",
          "[Removed Lines]",
          "1595:                         $vertical_display['data'][$row_no][$i]     =  PMA_buildNullDisplay($class, $condition_field, $meta);",
          "1597:                         $blobtext = PMA_handle_non_printable_contents('BLOB', (isset($row[$i]) ? $row[$i] : ''), $transform_function, $transform_options, $default_function, $meta, $_url_params);",
          "1599:                         $vertical_display['data'][$row_no][$i]     =  PMA_buildValueDisplay($class, $condition_field, $blobtext);",
          "1605:                         $vertical_display['data'][$row_no][$i]     =  PMA_buildNullDisplay($class, $condition_field, $meta);",
          "1608:                         if (PMA_strlen($row[$i]) > $GLOBALS['cfg']['LimitChars'] && $_SESSION['tmp_user_values']['display_text'] == 'P') {",
          "1609:                             $row[$i] = PMA_substr($row[$i], 0, $GLOBALS['cfg']['LimitChars']) . '...';",
          "1614:                         $row[$i]     = ($default_function != $transform_function ? $transform_function($row[$i], $transform_options, $meta) : $default_function($row[$i], array(), $meta));",
          "1620:                         $vertical_display['data'][$row_no][$i]     = PMA_buildValueDisplay($class, $condition_field, $row[$i]);",
          "1622:                         $vertical_display['data'][$row_no][$i]     = PMA_buildEmptyDisplay($class, $condition_field, $meta);",
          "1632:                     $vertical_display['data'][$row_no][$i] = PMA_buildNullDisplay($class, $condition_field, $meta);",
          "1637:                             'GEOMETRY', (isset($row[$i]) ? $row[$i] : ''), $transform_function,",
          "1638:                             $transform_options, $default_function, $meta",
          "1639:                         );",
          "1640:                         $vertical_display['data'][$row_no][$i] = PMA_buildValueDisplay(",
          "1641:                             $class, $condition_field, $geometry_text",
          "1645:                     } elseif ('WKT' == $_SESSION['tmp_user_values']['geometry_display']) {",
          "",
          "[Added Lines]",
          "1805:                         $vertical_display['data'][$row_no][$i]",
          "1806:                             = PMA_buildNullDisplay($class, $condition_field, $meta);",
          "1808:                         $blobtext = PMA_handle_non_printable_contents('BLOB',",
          "1809:                             (isset($row[$i]) ? $row[$i] : ''), $transform_function,",
          "1810:                             $transform_options, $default_function, $meta,",
          "1811:                             $_url_params);",
          "1813:                         $vertical_display['data'][$row_no][$i]",
          "1814:                             = PMA_buildValueDisplay($class, $condition_field,",
          "1815:                                 $blobtext);",
          "1821:                         $vertical_display['data'][$row_no][$i]",
          "1822:                             = PMA_buildNullDisplay($class, $condition_field, $meta);",
          "1826:                         if (PMA_strlen($row[$i]) > $GLOBALS['cfg']['LimitChars']",
          "1827:                             && $_SESSION['tmp_user_values']['display_text'] == 'P') {",
          "1828:                             $row[$i] = PMA_substr($row[$i], 0,",
          "1829:                                 $GLOBALS['cfg']['LimitChars']) . '...';",
          "1834:                         $row[$i]     = ($default_function != $transform_function",
          "1835:                             ? $transform_function($row[$i], $transform_options,",
          "1836:                                 $meta)",
          "1837:                             : $default_function($row[$i], array(), $meta));",
          "1843:                         $vertical_display['data'][$row_no][$i]",
          "1844:                             = PMA_buildValueDisplay($class, $condition_field,",
          "1845:                                 $row[$i]);",
          "1847:                         $vertical_display['data'][$row_no][$i]",
          "1848:                             = PMA_buildEmptyDisplay($class, $condition_field, $meta);",
          "1859:                     $vertical_display['data'][$row_no][$i]",
          "1860:                         = PMA_buildNullDisplay($class, $condition_field, $meta);",
          "1865:                             'GEOMETRY', (isset($row[$i]) ? $row[$i] : ''),",
          "1866:                             $transform_function, $transform_options,",
          "1867:                             $default_function, $meta",
          "1869:                         $vertical_display['data'][$row_no][$i]",
          "1870:                             = PMA_buildValueDisplay($class, $condition_field,",
          "1871:                                 $geometry_text);",
          "1874:                     } elseif ('WKT'",
          "1875:                         == $_SESSION['tmp_user_values']['geometry_display']) {",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "1651:                         if (PMA_strlen($wktval) > $GLOBALS['cfg']['LimitChars']",
          "1652:                             && $_SESSION['tmp_user_values']['display_text'] == 'P'",
          "1653:                         ) {",
          "1655:                             $is_field_truncated = true;",
          "1656:                         }",
          "1664:                     } else {",
          "",
          "[Removed Lines]",
          "1654:                             $wktval = PMA_substr($wktval, 0, $GLOBALS['cfg']['LimitChars']) . '...';",
          "1658:                         $vertical_display['data'][$row_no][$i] = '<td ' . PMA_prepare_row_data(",
          "1659:                             $class, $condition_field, $analyzed_sql, $meta, $map, $wktval, $transform_function,",
          "1660:                             $default_function, '', $where_comparison, $transform_options, $is_field_truncated",
          "1661:                         );",
          "",
          "[Added Lines]",
          "1884:                             $wktval = PMA_substr($wktval, 0,",
          "1885:                                 $GLOBALS['cfg']['LimitChars']) . '...';",
          "1889:                         $vertical_display['data'][$row_no][$i] = '<td '",
          "1890:                             . PMA_prepare_row_data(",
          "1891:                             $class, $condition_field, $analyzed_sql, $meta, $map,",
          "1892:                             $wktval, $transform_function, $default_function, '',",
          "1893:                             $where_comparison, $transform_options,",
          "1894:                             $is_field_truncated);",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "1670:                             ) {",
          "1671:                                 $wkbval = PMA_substr(bin2hex($row[$i]), 8);",
          "1672:                             } else {",
          "1674:                             }",
          "1676:                             if (PMA_strlen($wkbval) > $GLOBALS['cfg']['LimitChars']",
          "1678:                             ) {",
          "1680:                                 $is_field_truncated = true;",
          "1681:                             }",
          "1687:                         } else {",
          "1688:                             $wkbval = PMA_handle_non_printable_contents(",
          "1692:                         }",
          "1693:                     }",
          "1694:                 } else {",
          "1696:                 }",
          "1699:             } else {",
          "1700:                 if (! isset($row[$i]) || is_null($row[$i])) {",
          "1702:                 } elseif ($row[$i] != '') {",
          "1704:                     $relation_id = $row[$i];",
          "1710:                         $is_field_truncated = true;",
          "1711:                     }",
          "",
          "[Removed Lines]",
          "1673:                                 $wkbval = htmlspecialchars(PMA_replace_binary_contents($row[$i]));",
          "1677:                                 && $_SESSION['tmp_user_values']['display_text'] == 'P'",
          "1679:                                 $wkbval = PMA_substr($wkbval, 0, $GLOBALS['cfg']['LimitChars']) . '...';",
          "1683:                             $vertical_display['data'][$row_no][$i] = '<td ' . PMA_prepare_row_data(",
          "1684:                                 $class, $condition_field, $analyzed_sql, $meta, $map, $wkbval, $transform_function,",
          "1685:                                 $default_function, '', $where_comparison, $transform_options, $is_field_truncated",
          "1686:                             );",
          "1689:                                 'BINARY', $row[$i], $transform_function, $transform_options, $default_function, $meta, $_url_params",
          "1690:                             );",
          "1691:                             $vertical_display['data'][$row_no][$i] = PMA_buildValueDisplay($class, $condition_field, $wkbval);",
          "1695:                     $vertical_display['data'][$row_no][$i] = PMA_buildEmptyDisplay($class, $condition_field, $meta);",
          "1701:                     $vertical_display['data'][$row_no][$i]     =  PMA_buildNullDisplay($class, $condition_field, $meta);",
          "1708:                     if (PMA_strlen($row[$i]) > $GLOBALS['cfg']['LimitChars'] && $_SESSION['tmp_user_values']['display_text'] == 'P' && !strpos($transform_function, 'link') === true) {",
          "1709:                         $row[$i] = PMA_substr($row[$i], 0, $GLOBALS['cfg']['LimitChars']) . '...';",
          "",
          "[Added Lines]",
          "1906:                                 $wkbval = htmlspecialchars(",
          "1907:                                     PMA_replace_binary_contents($row[$i]));",
          "1911:                                 && $_SESSION['tmp_user_values']['display_text']",
          "1912:                                     == 'P'",
          "1914:                                 $wkbval = PMA_substr($wkbval, 0,",
          "1915:                                     $GLOBALS['cfg']['LimitChars']) . '...';",
          "1919:                             $vertical_display['data'][$row_no][$i] = '<td '",
          "1920:                                 . PMA_prepare_row_data($class, $condition_field,",
          "1921:                                     $analyzed_sql, $meta, $map, $wkbval,",
          "1922:                                     $transform_function, $default_function, '',",
          "1923:                                     $where_comparison, $transform_options,",
          "1924:                                     $is_field_truncated);",
          "1927:                                 'BINARY', $row[$i], $transform_function,",
          "1928:                                 $transform_options, $default_function, $meta,",
          "1929:                                 $_url_params);",
          "1930:                             $vertical_display['data'][$row_no][$i]",
          "1931:                                 = PMA_buildValueDisplay($class, $condition_field,",
          "1932:                                     $wkbval);",
          "1936:                     $vertical_display['data'][$row_no][$i]",
          "1937:                         = PMA_buildEmptyDisplay($class, $condition_field, $meta);",
          "1943:                     $vertical_display['data'][$row_no][$i]",
          "1944:                         = PMA_buildNullDisplay($class, $condition_field, $meta);",
          "1951:                     if (PMA_strlen($row[$i]) > $GLOBALS['cfg']['LimitChars']",
          "1952:                         && $_SESSION['tmp_user_values']['display_text'] == 'P'",
          "1953:                         && !strpos($transform_function, 'link') === true) {",
          "1954:                         $row[$i] = PMA_substr($row[$i], 0,",
          "1955:                             $GLOBALS['cfg']['LimitChars']) . '...';",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "1714:                     $field_flags = PMA_DBI_field_flags($dt_result, $i);",
          "1715:                     $formatted = false;",
          "1716:                     if (isset($meta->_type) && $meta->_type === MYSQLI_TYPE_BIT) {",
          "1722:                         if ($_SESSION['tmp_user_values']['display_binary']) {",
          "1726:                                 $row[$i] = bin2hex($row[$i]);",
          "1727:                             } else {",
          "1729:                             }",
          "1730:                         } else {",
          "1734:                             $formatted = true;",
          "1735:                         }",
          "1736:                     }",
          "1738:                     if ($formatted) {",
          "1740:                     } else {",
          "1742:                         $function_nowrap = $transform_function . '_nowrap';",
          "1749:                     }",
          "1750:                 } else {",
          "1752:                 }",
          "1753:             }",
          "1756:             if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "1758:             ) {",
          "1759:                 echo $vertical_display['data'][$row_no][$i];",
          "1760:             }",
          "1762:             if (isset($vertical_display['rowdata'][$i][$row_no])) {",
          "1764:             } else {",
          "1766:             }",
          "1767:         } // end for (2)",
          "1771:             && ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "1773:         ) {",
          "1774:             if (! isset($js_conf)) {",
          "1775:                 $js_conf = '';",
          "1776:             }",
          "1778:         } // end if (3)",
          "1780:         if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "",
          "[Removed Lines]",
          "1717:                         $row[$i]     = PMA_printable_bit_value($row[$i], $meta->length);",
          "1721:                     } elseif (stristr($field_flags, 'BINARY') && $meta->type == 'string' && !(isset($GLOBALS['is_analyse']) && $GLOBALS['is_analyse'])) {",
          "1725:                             if ($_SESSION['tmp_user_values']['display_binary_as_hex'] && PMA_contains_nonprintable_ascii($row[$i])) {",
          "1728:                                 $row[$i] = htmlspecialchars(PMA_replace_binary_contents($row[$i]));",
          "1733:                             $row[$i] = PMA_handle_non_printable_contents('BINARY', $row[$i], $transform_function, $transform_options, $default_function, $meta, $_url_params);",
          "1739:                         $vertical_display['data'][$row_no][$i]     = PMA_buildValueDisplay($class, $condition_field, $row[$i]);",
          "1743:                         $bool_nowrap = (($default_function != $transform_function && function_exists($function_nowrap)) ? $function_nowrap($transform_options) : false);",
          "1746:                         $nowrap = ((preg_match('@DATE|TIME@i', $meta->type) || $bool_nowrap) ? ' nowrap' : '');",
          "1747:                         $where_comparison = ' = \\'' . PMA_sqlAddSlashes($row[$i]) . '\\'';",
          "1748:                         $vertical_display['data'][$row_no][$i]     = '<td ' . PMA_prepare_row_data($class, $condition_field, $analyzed_sql, $meta, $map, $row[$i], $transform_function, $default_function, $nowrap, $where_comparison, $transform_options, $is_field_truncated);",
          "1751:                     $vertical_display['data'][$row_no][$i]     = PMA_buildEmptyDisplay($class, $condition_field, $meta);",
          "1757:                 || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "1763:                 $vertical_display['rowdata'][$i][$row_no] .= $vertical_display['data'][$row_no][$i];",
          "1765:                 $vertical_display['rowdata'][$i][$row_no] = $vertical_display['data'][$row_no][$i];",
          "1770:         if (($GLOBALS['cfg']['RowActionLinks'] == 'right' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1772:             || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped')",
          "1777:             echo PMA_generateCheckboxAndLinks('right', $del_url, $is_display, $row_no, $where_clause, $where_clause_html, $condition_array, $del_query, 'r', $edit_url, $copy_url, $edit_anchor_class, $edit_str, $copy_str, $del_str, $js_conf);",
          "",
          "[Added Lines]",
          "1963:                         $row[$i] = PMA_printable_bit_value(",
          "1964:                             $row[$i], $meta->length);",
          "1968:                     } elseif (stristr($field_flags, 'BINARY')",
          "1969:                         && $meta->type == 'string'",
          "1970:                         && !(isset($GLOBALS['is_analyse'])",
          "1971:                             && $GLOBALS['is_analyse'])) {",
          "1975:                             if ($_SESSION['tmp_user_values']['display_binary_as_hex']",
          "1976:                                 && PMA_contains_nonprintable_ascii($row[$i])) {",
          "1979:                                 $row[$i] = htmlspecialchars(",
          "1980:                                     PMA_replace_binary_contents($row[$i]));",
          "1985:                             $row[$i] = PMA_handle_non_printable_contents('BINARY',",
          "1986:                                 $row[$i], $transform_function, $transform_options,",
          "1987:                                 $default_function, $meta, $_url_params);",
          "1993:                         $vertical_display['data'][$row_no][$i]",
          "1994:                             = PMA_buildValueDisplay($class, $condition_field,",
          "1995:                                 $row[$i]);",
          "1999:                         $bool_nowrap = (($default_function != $transform_function",
          "2000:                                 && function_exists($function_nowrap))",
          "2001:                             ? $function_nowrap($transform_options)",
          "2002:                             : false);",
          "2005:                         $nowrap = ((preg_match('@DATE|TIME@i', $meta->type)",
          "2006:                                 || $bool_nowrap)",
          "2007:                             ? ' nowrap'",
          "2008:                             : '');",
          "2009:                         $where_comparison = ' = \\'' . PMA_sqlAddSlashes($row[$i])",
          "2010:                             . '\\'';",
          "2011:                         $vertical_display['data'][$row_no][$i]     = '<td '",
          "2012:                             . PMA_prepare_row_data($class, $condition_field,",
          "2013:                                 $analyzed_sql, $meta, $map, $row[$i],",
          "2014:                                 $transform_function, $default_function, $nowrap,",
          "2015:                                 $where_comparison, $transform_options,",
          "2016:                                 $is_field_truncated);",
          "2019:                     $vertical_display['data'][$row_no][$i]",
          "2020:                         = PMA_buildEmptyDisplay($class, $condition_field, $meta);",
          "2026:                 || $_SESSION['tmp_user_values']['disp_direction']",
          "2027:                     == 'horizontalflipped'",
          "2033:                 $vertical_display['rowdata'][$i][$row_no]",
          "2034:                     .= $vertical_display['data'][$row_no][$i];",
          "2036:                 $vertical_display['rowdata'][$i][$row_no]",
          "2037:                     = $vertical_display['data'][$row_no][$i];",
          "2042:         if (($GLOBALS['cfg']['RowActionLinks'] == 'right'",
          "2043:                 || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "2045:                 || $_SESSION['tmp_user_values']['disp_direction']",
          "2046:                     == 'horizontalflipped')",
          "2051:             echo PMA_generateCheckboxAndLinks('right', $del_url, $is_display,",
          "2052:                 $row_no, $where_clause, $where_clause_html, $condition_array,",
          "2053:                 $del_query, 'r', $edit_url, $copy_url, $edit_anchor_class, $edit_str,",
          "2054:                 $copy_str, $del_str, $js_conf);",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "1802:         }",
          "1804:         if (!empty($del_url) && $is_display['del_lnk'] != 'kp') {",
          "1806:         } else {",
          "1807:             unset($vertical_display['row_delete'][$row_no]);",
          "1808:         }",
          "1810:         if (isset($edit_url)) {",
          "1812:         } else {",
          "1813:             unset($vertical_display['edit'][$row_no]);",
          "1814:         }",
          "1816:         if (isset($copy_url)) {",
          "1818:         } else {",
          "1819:             unset($vertical_display['copy'][$row_no]);",
          "1820:         }",
          "",
          "[Removed Lines]",
          "1805:             $vertical_display['row_delete'][$row_no] .= PMA_generateCheckboxForMulti($del_url, $is_display, $row_no, $where_clause_html, $condition_array, $del_query, '[%_PMA_CHECKBOX_DIR_%]', $alternating_color_class . $vertical_class);",
          "1811:             $vertical_display['edit'][$row_no]   .= PMA_generateEditLink($edit_url, $alternating_color_class . ' ' . $edit_anchor_class . $vertical_class, $edit_str, $where_clause, $where_clause_html);",
          "1817:             $vertical_display['copy'][$row_no]   .= PMA_generateCopyLink($copy_url, $copy_str, $where_clause, $where_clause_html, $alternating_color_class . $vertical_class);",
          "",
          "[Added Lines]",
          "2082:             $vertical_display['row_delete'][$row_no] .= PMA_generateCheckboxForMulti(",
          "2083:                 $del_url, $is_display, $row_no, $where_clause_html, $condition_array,",
          "2084:                 $del_query, '[%_PMA_CHECKBOX_DIR_%]',",
          "2085:                 $alternating_color_class . $vertical_class);",
          "2091:             $vertical_display['edit'][$row_no]   .= PMA_generateEditLink($edit_url,",
          "2092:                 $alternating_color_class . ' ' . $edit_anchor_class",
          "2093:                 . $vertical_class, $edit_str, $where_clause, $where_clause_html);",
          "2099:             $vertical_display['copy'][$row_no]   .= PMA_generateCopyLink($copy_url,",
          "2100:                 $copy_str, $where_clause, $where_clause_html,",
          "2101:                 $alternating_color_class . $vertical_class);",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "1823:             if (! isset($js_conf)) {",
          "1824:                 $js_conf = '';",
          "1825:             }",
          "1827:         } else {",
          "1828:             unset($vertical_display['delete'][$row_no]);",
          "1829:         }",
          "1832:         $row_no++;",
          "1833:     } // end while",
          "",
          "[Removed Lines]",
          "1826:             $vertical_display['delete'][$row_no] .= PMA_generateDeleteLink($del_url, $del_str, $js_conf, $alternating_color_class . $vertical_class);",
          "1831:         echo (($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal' || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped') ? \"\\n\" : '');",
          "",
          "[Added Lines]",
          "2110:             $vertical_display['delete'][$row_no] .= PMA_generateDeleteLink($del_url,",
          "2111:                 $del_str, $js_conf, $alternating_color_class . $vertical_class);",
          "2116:         echo (($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "2117:                 || $_SESSION['tmp_user_values']['disp_direction']",
          "2118:                     == 'horizontalflipped')",
          "2119:             ? \"\\n\"",
          "2120:             : '');",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "1857:     if ($GLOBALS['cfg']['RowActionLinks'] != 'right'",
          "1858:         && is_array($vertical_display['row_delete'])",
          "1860:     ) {",
          "1861:         echo '<tr>' . \"\\n\";",
          "1862:         if ($GLOBALS['cfg']['RowActionLinks'] == 'none') {",
          "1864:             echo '<th></th>' . \"\\n\";",
          "1865:         }",
          "1866:         echo $vertical_display['textbtn'];",
          "1867:         $cell_displayed = 0;",
          "1868:         foreach ($vertical_display['row_delete'] as $val) {",
          "1870:                 echo '<th' .",
          "1872:                      '></th>' . \"\\n\";",
          "1873:             }",
          "1874:             echo str_replace('[%_PMA_CHECKBOX_DIR_%]', '_left', $val);",
          "",
          "[Removed Lines]",
          "1859:         && (count($vertical_display['row_delete']) > 0 || !empty($vertical_display['textbtn']))",
          "1869:             if (($cell_displayed != 0) && ($_SESSION['tmp_user_values']['repeat_cells'] != 0) && !($cell_displayed % $_SESSION['tmp_user_values']['repeat_cells'])) {",
          "1871:                      (($is_display['edit_lnk'] != 'nn' && $is_display['del_lnk'] != 'nn') ? ' rowspan=\"4\"' : '') .",
          "",
          "[Added Lines]",
          "2148:         && (count($vertical_display['row_delete']) > 0",
          "2149:             || !empty($vertical_display['textbtn']))",
          "2160:             if (($cell_displayed != 0)",
          "2161:                 && ($_SESSION['tmp_user_values']['repeat_cells'] != 0)",
          "2162:                 && !($cell_displayed % $_SESSION['tmp_user_values']",
          "2163:                     ['repeat_cells'])) {",
          "2165:                      (($is_display['edit_lnk'] != 'nn'",
          "2166:                             && $is_display['del_lnk'] != 'nn')",
          "2167:                         ? ' rowspan=\"4\"'",
          "2168:                         : '') .",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "1878:     } // end if",
          "1882:         && is_array($vertical_display['edit'])",
          "1884:     ) {",
          "1885:         echo '<tr>' . \"\\n\";",
          "1886:         if (! is_array($vertical_display['row_delete'])) {",
          "",
          "[Removed Lines]",
          "1881:     if (($GLOBALS['cfg']['RowActionLinks'] == 'left' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1883:         && (count($vertical_display['edit']) > 0 || !empty($vertical_display['textbtn']))",
          "",
          "[Added Lines]",
          "2178:     if (($GLOBALS['cfg']['RowActionLinks'] == 'left'",
          "2179:             || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "2181:         && (count($vertical_display['edit']) > 0",
          "2182:             || !empty($vertical_display['textbtn']))",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "1893:     } // end if",
          "1897:         && is_array($vertical_display['copy'])",
          "1899:     ) {",
          "1900:         echo '<tr>' . \"\\n\";",
          "1901:         if (! is_array($vertical_display['row_delete'])) {",
          "",
          "[Removed Lines]",
          "1896:     if (($GLOBALS['cfg']['RowActionLinks'] == 'left' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1898:         && (count($vertical_display['copy']) > 0 || !empty($vertical_display['textbtn']))",
          "",
          "[Added Lines]",
          "2195:     if (($GLOBALS['cfg']['RowActionLinks'] == 'left'",
          "2196:             || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "2198:         && (count($vertical_display['copy']) > 0",
          "2199:             || !empty($vertical_display['textbtn']))",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "1908:     } // end if",
          "1912:         && is_array($vertical_display['delete'])",
          "1914:     ) {",
          "1915:         echo '<tr>' . \"\\n\";",
          "1917:             echo $vertical_display['textbtn'];",
          "1918:         }",
          "1919:         foreach ($vertical_display['delete'] as $val) {",
          "",
          "[Removed Lines]",
          "1911:     if (($GLOBALS['cfg']['RowActionLinks'] == 'left' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1913:         && (count($vertical_display['delete']) > 0 || !empty($vertical_display['textbtn']))",
          "1916:         if (! is_array($vertical_display['edit']) && ! is_array($vertical_display['row_delete'])) {",
          "",
          "[Added Lines]",
          "2212:     if (($GLOBALS['cfg']['RowActionLinks'] == 'left'",
          "2213:             || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "2215:         && (count($vertical_display['delete']) > 0",
          "2216:             || !empty($vertical_display['textbtn']))",
          "2219:         if (! is_array($vertical_display['edit'])",
          "2220:             && ! is_array($vertical_display['row_delete'])) {",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "1938:         $key = $col_order ? $col_order[$j] : $j;",
          "1941:         echo $val;",
          "1943:         $cell_displayed = 0;",
          "1944:         foreach ($vertical_display['rowdata'][$key] as $subval) {",
          "1946:                 echo $val;",
          "1947:             }",
          "",
          "[Removed Lines]",
          "1940:         echo '<tr' . (($col_visib && !$col_visib[$j]) ? ' class=\"hide\"' : '') . '>' . \"\\n\";",
          "1945:             if (($cell_displayed != 0) && ($_SESSION['tmp_user_values']['repeat_cells'] != 0) and !($cell_displayed % $_SESSION['tmp_user_values']['repeat_cells'])) {",
          "",
          "[Added Lines]",
          "2244:         echo '<tr' . (($col_visib && !$col_visib[$j]) ? ' class=\"hide\"' : '')",
          "2245:             . '>' . \"\\n\";",
          "2250:             if (($cell_displayed != 0)",
          "2251:                 && ($_SESSION['tmp_user_values']['repeat_cells'] != 0)",
          "2252:                 && !($cell_displayed % $_SESSION['tmp_user_values']",
          "2253:                     ['repeat_cells'])) {",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "1954:     } // end while",
          "1958:         && is_array($vertical_display['row_delete'])",
          "1960:     ) {",
          "1961:         echo '<tr>' . \"\\n\";",
          "1962:         echo $vertical_display['textbtn'];",
          "1963:         $cell_displayed = 0;",
          "1964:         foreach ($vertical_display['row_delete'] as $val) {",
          "1966:                 echo '<th' .",
          "1968:                      '></th>' . \"\\n\";",
          "1969:             }",
          "",
          "[Removed Lines]",
          "1957:     if (($GLOBALS['cfg']['RowActionLinks'] == 'right' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1959:         && (count($vertical_display['row_delete']) > 0 || !empty($vertical_display['textbtn']))",
          "1965:             if (($cell_displayed != 0) && ($_SESSION['tmp_user_values']['repeat_cells'] != 0) && !($cell_displayed % $_SESSION['tmp_user_values']['repeat_cells'])) {",
          "1967:                      (($is_display['edit_lnk'] != 'nn' && $is_display['del_lnk'] != 'nn') ? ' rowspan=\"4\"' : '') .",
          "",
          "[Added Lines]",
          "2265:     if (($GLOBALS['cfg']['RowActionLinks'] == 'right'",
          "2266:             || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "2268:         && (count($vertical_display['row_delete']) > 0",
          "2269:             || !empty($vertical_display['textbtn']))",
          "2275:             if (($cell_displayed != 0)",
          "2276:                 && ($_SESSION['tmp_user_values']['repeat_cells'] != 0)",
          "2277:                 && !($cell_displayed % $_SESSION['tmp_user_values']",
          "2278:                     ['repeat_cells'])) {",
          "2280:                      (($is_display['edit_lnk'] != 'nn'",
          "2281:                         && $is_display['del_lnk'] != 'nn') ? ' rowspan=\"4\"' : '') .",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "1975:     } // end if",
          "1979:         && is_array($vertical_display['edit'])",
          "1981:     ) {",
          "1982:         echo '<tr>' . \"\\n\";",
          "1983:         if (! is_array($vertical_display['row_delete'])) {",
          "",
          "[Removed Lines]",
          "1978:     if (($GLOBALS['cfg']['RowActionLinks'] == 'right' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1980:         && (count($vertical_display['edit']) > 0 || !empty($vertical_display['textbtn']))",
          "",
          "[Added Lines]",
          "2292:     if (($GLOBALS['cfg']['RowActionLinks'] == 'right'",
          "2293:             || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "2295:         && (count($vertical_display['edit']) > 0",
          "2296:             || !empty($vertical_display['textbtn']))",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "1990:     } // end if",
          "1994:         && is_array($vertical_display['copy'])",
          "1996:     ) {",
          "1997:         echo '<tr>' . \"\\n\";",
          "1998:         if (! is_array($vertical_display['row_delete'])) {",
          "",
          "[Removed Lines]",
          "1993:     if (($GLOBALS['cfg']['RowActionLinks'] == 'right' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "1995:         && (count($vertical_display['copy']) > 0 || !empty($vertical_display['textbtn']))",
          "",
          "[Added Lines]",
          "2309:     if (($GLOBALS['cfg']['RowActionLinks'] == 'right'",
          "2310:             || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "2312:         && (count($vertical_display['copy']) > 0",
          "2313:             || !empty($vertical_display['textbtn']))",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "2005:     } // end if",
          "2009:         && is_array($vertical_display['delete'])",
          "2011:     ) {",
          "2012:         echo '<tr>' . \"\\n\";",
          "2014:             echo $vertical_display['textbtn'];",
          "2015:         }",
          "2016:         foreach ($vertical_display['delete'] as $val) {",
          "",
          "[Removed Lines]",
          "2008:     if (($GLOBALS['cfg']['RowActionLinks'] == 'right' || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "2010:         && (count($vertical_display['delete']) > 0 || !empty($vertical_display['textbtn']))",
          "2013:         if (! is_array($vertical_display['edit']) && ! is_array($vertical_display['row_delete'])) {",
          "",
          "[Added Lines]",
          "2326:     if (($GLOBALS['cfg']['RowActionLinks'] == 'right'",
          "2327:             || $GLOBALS['cfg']['RowActionLinks'] == 'both')",
          "2329:         && (count($vertical_display['delete']) > 0",
          "2330:             || !empty($vertical_display['textbtn']))",
          "2333:         if (! is_array($vertical_display['edit'])",
          "2334:             && ! is_array($vertical_display['row_delete'])) {",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "2040:     $_SESSION['tmp_user_values']['query'][$sql_md5]['sql'] = $GLOBALS['sql_query'];",
          "2044:         unset($_REQUEST['disp_direction']);",
          "2047:     }",
          "2049:     if (PMA_isValid($_REQUEST['repeat_cells'], 'numeric')) {",
          "2051:         unset($_REQUEST['repeat_cells']);",
          "2054:     }",
          "",
          "[Removed Lines]",
          "2042:     if (PMA_isValid($_REQUEST['disp_direction'], array('horizontal', 'vertical', 'horizontalflipped'))) {",
          "2043:         $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction'] = $_REQUEST['disp_direction'];",
          "2045:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction'])) {",
          "2046:         $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction'] = $GLOBALS['cfg']['DefaultDisplay'];",
          "2050:         $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells'] = $_REQUEST['repeat_cells'];",
          "2052:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells'])) {",
          "2053:         $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells'] = $GLOBALS['cfg']['RepeatCells'];",
          "",
          "[Added Lines]",
          "2363:     if (PMA_isValid($_REQUEST['disp_direction'],",
          "2364:         array('horizontal', 'vertical', 'horizontalflipped'))) {",
          "2365:         $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction']",
          "2366:             = $_REQUEST['disp_direction'];",
          "2368:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]",
          "2369:             ['disp_direction'])) {",
          "2370:         $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction']",
          "2371:         = $GLOBALS['cfg']['DefaultDisplay'];",
          "2375:         $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells']",
          "2376:         = $_REQUEST['repeat_cells'];",
          "2378:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]",
          "2379:             ['repeat_cells'])) {",
          "2380:         $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells']",
          "2381:         = $GLOBALS['cfg']['RepeatCells'];",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "2059:         && (int) $_REQUEST['session_max_rows'] == $_REQUEST['session_max_rows'])",
          "2060:         || $_REQUEST['session_max_rows'] == 'all'",
          "2061:     ) {",
          "2063:         unset($_REQUEST['session_max_rows']);",
          "2064:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows'])) {",
          "2066:     }",
          "2068:     if (PMA_isValid($_REQUEST['pos'], 'numeric')) {",
          "",
          "[Removed Lines]",
          "2062:         $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows'] = $_REQUEST['session_max_rows'];",
          "2065:         $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows'] = $GLOBALS['cfg']['MaxRows'];",
          "",
          "[Added Lines]",
          "2390:         $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows']",
          "2391:             = $_REQUEST['session_max_rows'];",
          "2394:         $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows']",
          "2395:                  = $GLOBALS['cfg']['MaxRows'];",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "2073:     }",
          "2075:     if (PMA_isValid($_REQUEST['display_text'], array('P', 'F'))) {",
          "2077:         unset($_REQUEST['display_text']);",
          "2079:         $_SESSION['tmp_user_values']['query'][$sql_md5]['display_text'] = 'P';",
          "2080:     }",
          "2082:     if (PMA_isValid($_REQUEST['relational_display'], array('K', 'D'))) {",
          "2084:         unset($_REQUEST['relational_display']);",
          "2086:         $_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display'] = 'K';",
          "2087:     }",
          "2089:     if (PMA_isValid($_REQUEST['geometry_display'], array('WKT', 'WKB', 'GEOM'))) {",
          "2091:         unset($_REQUEST['geometry_display']);",
          "2093:         $_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'] = 'GEOM';",
          "2094:     }",
          "",
          "[Removed Lines]",
          "2076:         $_SESSION['tmp_user_values']['query'][$sql_md5]['display_text'] = $_REQUEST['display_text'];",
          "2078:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]['display_text'])) {",
          "2083:         $_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display'] = $_REQUEST['relational_display'];",
          "2085:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display'])) {",
          "2090:         $_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'] = $_REQUEST['geometry_display'];",
          "2092:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'])) {",
          "",
          "[Added Lines]",
          "2406:         $_SESSION['tmp_user_values']['query'][$sql_md5]['display_text']",
          "2407:                 = $_REQUEST['display_text'];",
          "2409:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]",
          "2410:             ['display_text'])) {",
          "2415:         $_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display']",
          "2416:             = $_REQUEST['relational_display'];",
          "2418:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]",
          "2419:             ['relational_display'])) {",
          "2424:         $_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'] =",
          "2425:             $_REQUEST['geometry_display'];",
          "2427:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]",
          "2428:             ['geometry_display'])) {",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "2109:     }",
          "2111:     if (isset($_REQUEST['display_binary_as_hex'])) {",
          "2113:         unset($_REQUEST['display_binary_as_hex']);",
          "2114:     } elseif (isset($_REQUEST['display_options_form'])) {",
          "2117:     } elseif (isset($_REQUEST['full_text_button'])) {",
          "2119:     } else {",
          "2123:         }",
          "2124:     }",
          "",
          "[Removed Lines]",
          "2112:         $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex'] = true;",
          "2116:         unset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex']);",
          "2121:         if (isset($GLOBALS['cfg']['DisplayBinaryAsHex']) && true === $GLOBALS['cfg']['DisplayBinaryAsHex']) {",
          "2122:             $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex'] = true;",
          "",
          "[Added Lines]",
          "2448:         $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex']",
          "2449:             = true;",
          "2453:         unset($_SESSION['tmp_user_values']['query'][$sql_md5]",
          "2454:             ['display_binary_as_hex']);",
          "2459:         if (isset($GLOBALS['cfg']['DisplayBinaryAsHex'])",
          "2460:             && true === $GLOBALS['cfg']['DisplayBinaryAsHex']) {",
          "2461:             $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex']",
          "2462:                 = true;",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "2132:     }",
          "2134:     if (isset($_REQUEST['hide_transformation'])) {",
          "2136:         unset($_REQUEST['hide_transformation']);",
          "2137:     } elseif (isset($_REQUEST['display_options_form'])) {",
          "2140:     }",
          "",
          "[Removed Lines]",
          "2135:         $_SESSION['tmp_user_values']['query'][$sql_md5]['hide_transformation'] = true;",
          "2139:         unset($_SESSION['tmp_user_values']['query'][$sql_md5]['hide_transformation']);",
          "",
          "[Added Lines]",
          "2475:         $_SESSION['tmp_user_values']['query'][$sql_md5]['hide_transformation']",
          "2476:             = true;",
          "2480:         unset($_SESSION['tmp_user_values']['query'][$sql_md5]",
          "2481:             ['hide_transformation']);",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "2153:     }",
          "2174: }",
          "",
          "[Removed Lines]",
          "2156:     $_SESSION['tmp_user_values']['display_text'] = $_SESSION['tmp_user_values']['query'][$sql_md5]['display_text'];",
          "2157:     $_SESSION['tmp_user_values']['relational_display'] = $_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display'];",
          "2158:     $_SESSION['tmp_user_values']['geometry_display'] = $_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'];",
          "2159:     $_SESSION['tmp_user_values']['display_binary'] = isset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary']) ? true : false;",
          "2160:     $_SESSION['tmp_user_values']['display_binary_as_hex'] = isset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex']) ? true : false;",
          "2161:     $_SESSION['tmp_user_values']['display_blob'] = isset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_blob']) ? true : false;",
          "2162:     $_SESSION['tmp_user_values']['hide_transformation'] = isset($_SESSION['tmp_user_values']['query'][$sql_md5]['hide_transformation']) ? true : false;",
          "2163:     $_SESSION['tmp_user_values']['pos'] = $_SESSION['tmp_user_values']['query'][$sql_md5]['pos'];",
          "2164:     $_SESSION['tmp_user_values']['max_rows'] = $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows'];",
          "2165:     $_SESSION['tmp_user_values']['repeat_cells'] = $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells'];",
          "2166:     $_SESSION['tmp_user_values']['disp_direction'] = $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction'];",
          "2170:     echo '<pre>';",
          "2171:     var_dump($_SESSION['tmp_user_values']);",
          "2172:     echo '</pre>';",
          "",
          "[Added Lines]",
          "2498:     $_SESSION['tmp_user_values']['display_text']",
          "2499:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['display_text'];",
          "2500:     $_SESSION['tmp_user_values']['relational_display']",
          "2501:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display'];",
          "2502:     $_SESSION['tmp_user_values']['geometry_display']",
          "2503:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'];",
          "2504:     $_SESSION['tmp_user_values']['display_binary']",
          "2505:         = isset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary'])",
          "2506:         ? true",
          "2507:         : false;",
          "2508:     $_SESSION['tmp_user_values']['display_binary_as_hex']",
          "2509:         = isset($_SESSION['tmp_user_values']['query'][$sql_md5]",
          "2510:             ['display_binary_as_hex'])",
          "2511:         ? true",
          "2512:         : false;",
          "2513:     $_SESSION['tmp_user_values']['display_blob']",
          "2514:         = isset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_blob'])",
          "2515:         ? true",
          "2516:         : false;",
          "2517:     $_SESSION['tmp_user_values']['hide_transformation']",
          "2518:         = isset($_SESSION['tmp_user_values']['query'][$sql_md5]",
          "2519:             ['hide_transformation'])",
          "2520:         ? true",
          "2521:         : false;",
          "2522:     $_SESSION['tmp_user_values']['pos']",
          "2523:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['pos'];",
          "2524:     $_SESSION['tmp_user_values']['max_rows']",
          "2525:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows'];",
          "2526:     $_SESSION['tmp_user_values']['repeat_cells']",
          "2527:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells'];",
          "2528:     $_SESSION['tmp_user_values']['disp_direction']",
          "2529:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction'];",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "2228:     if ($is_innodb",
          "2229:         && ! isset($analyzed_sql[0]['queryflags']['union'])",
          "2230:         && ! isset($analyzed_sql[0]['table_ref'][1]['table_name'])",
          "2232:     ) {",
          "2234:         $pre_count = '~';",
          "2236:     } else {",
          "2237:         $pre_count = '';",
          "2238:         $after_count = '';",
          "",
          "[Removed Lines]",
          "2231:         && (empty($analyzed_sql[0]['where_clause']) || $analyzed_sql[0]['where_clause'] == '1 ')",
          "2235:         $after_count = PMA_showHint(PMA_sanitize(__('May be approximate. See [a@./Documentation.html#faq3_11@Documentation]FAQ 3.11[/a]')));",
          "",
          "[Added Lines]",
          "2587:         && (empty($analyzed_sql[0]['where_clause'])",
          "2588:             || $analyzed_sql[0]['where_clause'] == '1 ')",
          "2592:         $after_count = PMA_showHint(PMA_sanitize(__(",
          "2593:             'May be approximate. See [a@./Documentation.html#faq3_11@Documentation]FAQ 3.11[/a]')));",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "2251:             $pos_next     = 0;",
          "2252:             $pos_prev     = 0;",
          "2253:         } else {",
          "2256:             if ($pos_prev < 0) {",
          "2257:                 $pos_prev = 0;",
          "2258:             }",
          "",
          "[Removed Lines]",
          "2254:             $pos_next     = $_SESSION['tmp_user_values']['pos'] + $_SESSION['tmp_user_values']['max_rows'];",
          "2255:             $pos_prev     = $_SESSION['tmp_user_values']['pos'] - $_SESSION['tmp_user_values']['max_rows'];",
          "",
          "[Added Lines]",
          "2612:             $pos_next     = $_SESSION['tmp_user_values']['pos']",
          "2613:                             + $_SESSION['tmp_user_values']['max_rows'];",
          "2614:             $pos_prev     = $_SESSION['tmp_user_values']['pos']",
          "2615:                             - $_SESSION['tmp_user_values']['max_rows'];",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "2266:     if (! empty($analyzed_sql[0]['order_by_clause'])) {",
          "2271:         preg_match('@(.*)([[:space:]]*(ASC|DESC))@si', $sort_expression, $matches);",
          "2273:         $sort_direction = isset($matches[2]) ? trim($matches[2]) : '';",
          "2274:         unset($matches);",
          "2275:     } else {",
          "",
          "[Removed Lines]",
          "2267:         $sort_expression = trim(str_replace('  ', ' ', $analyzed_sql[0]['order_by_clause']));",
          "2272:         $sort_expression_nodirection = isset($matches[1]) ? trim($matches[1]) : $sort_expression;",
          "",
          "[Added Lines]",
          "2627:         $sort_expression = trim(str_replace('  ', ' ',",
          "2628:             $analyzed_sql[0]['order_by_clause']));",
          "2633:         $sort_expression_nodirection = isset($matches[1])",
          "2634:             ? trim($matches[1])",
          "2635:             : $sort_expression;",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "2283:             $sort_table = $table;",
          "2284:             $sort_column = $sort_expression_nodirection;",
          "2285:         } else {",
          "2287:         }",
          "2288:         $sort_table = PMA_unQuote($sort_table);",
          "2289:         $sort_column = PMA_unQuote($sort_column);",
          "",
          "[Removed Lines]",
          "2286:             list($sort_table, $sort_column) = explode('.', $sort_expression_nodirection);",
          "",
          "[Added Lines]",
          "2649:             list($sort_table, $sort_column)",
          "2650:                 = explode('.', $sort_expression_nodirection);",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "2307:             $meta = $fields_meta[$sorted_column_index];",
          "2308:             if (stristr($meta->type, 'BLOB') || $meta->type == 'geometry') {",
          "2310:             } else {",
          "2311:                 $column_for_first_row = $row[$sorted_column_index];",
          "2312:             }",
          "2315:             PMA_DBI_data_seek($dt_result, $num_rows - 1);",
          "2316:             $row = PMA_DBI_fetch_row($dt_result);",
          "2318:             $meta = $fields_meta[$sorted_column_index];",
          "2319:             if (stristr($meta->type, 'BLOB') || $meta->type == 'geometry') {",
          "2321:             } else {",
          "2322:                 $column_for_last_row = $row[$sorted_column_index];",
          "2323:             }",
          "2326:             PMA_DBI_data_seek($dt_result, 0);",
          "2330:         }",
          "2331:         unset($sorted_column_index, $sort_table, $sort_column);",
          "2332:     }",
          "",
          "[Removed Lines]",
          "2309:                 $column_for_first_row = PMA_handle_non_printable_contents($meta->type, $row[$sorted_column_index], $transform_function, $transform_options, $default_function, $meta, null);",
          "2313:             $column_for_first_row = strtoupper(substr($column_for_first_row, 0, $GLOBALS['cfg']['LimitChars']));",
          "2320:                 $column_for_last_row = PMA_handle_non_printable_contents($meta->type, $row[$sorted_column_index], $transform_function, $transform_options, $default_function, $meta, null);",
          "2324:             $column_for_last_row = strtoupper(substr($column_for_last_row, 0, $GLOBALS['cfg']['LimitChars']));",
          "2328:             $sorted_column_message = ' [' . htmlspecialchars($sort_column) . ': <strong>' . htmlspecialchars($column_for_first_row) . ' - ' . htmlspecialchars($column_for_last_row) . '</strong>]';",
          "2329:             unset($row, $column_for_first_row, $column_for_last_row, $meta, $default_function, $transform_function, $transform_options);",
          "",
          "[Added Lines]",
          "2673:                 $column_for_first_row = PMA_handle_non_printable_contents(",
          "2674:                     $meta->type, $row[$sorted_column_index], $transform_function,",
          "2675:                     $transform_options, $default_function, $meta, null);",
          "2679:             $column_for_first_row = strtoupper(substr($column_for_first_row, 0,",
          "2680:                 $GLOBALS['cfg']['LimitChars']));",
          "2687:                 $column_for_last_row = PMA_handle_non_printable_contents($meta->type,",
          "2688:                     $row[$sorted_column_index], $transform_function,",
          "2689:                     $transform_options, $default_function, $meta, null);",
          "2693:             $column_for_last_row = strtoupper(substr($column_for_last_row, 0,",
          "2694:                 $GLOBALS['cfg']['LimitChars']));",
          "2698:             $sorted_column_message = ' [' . htmlspecialchars($sort_column)",
          "2699:                 . ': <strong>' . htmlspecialchars($column_for_first_row) . ' - '",
          "2700:                 . htmlspecialchars($column_for_last_row) . '</strong>]';",
          "2701:             unset($row, $column_for_first_row, $column_for_last_row, $meta,",
          "2702:                 $default_function, $transform_function, $transform_options);",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "2349:             } else {",
          "2350:                 $last_shown_rec = $limit_data['start'] + $total - 1;",
          "2351:             }",
          "2353:             $first_shown_rec = $_SESSION['tmp_user_values']['pos'];",
          "2354:             $last_shown_rec  = $total - 1;",
          "2355:         } else {",
          "",
          "[Removed Lines]",
          "2352:         } elseif ($_SESSION['tmp_user_values']['max_rows'] == 'all' || $pos_next > $total) {",
          "",
          "[Added Lines]",
          "2725:         } elseif ($_SESSION['tmp_user_values']['max_rows'] == 'all'",
          "2726:                 || $pos_next > $total) {",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "2360:         if (PMA_Table::isView($db, $table)",
          "2361:             && $total == $GLOBALS['cfg']['MaxExactCountViews']",
          "2362:         ) {",
          "2364:             $message->addParam('[a@./Documentation.html#cfg_MaxExactCount@_blank]');",
          "2365:             $message->addParam('[/a]');",
          "2366:             $message_view_warning = PMA_showHint($message);",
          "",
          "[Removed Lines]",
          "2363:             $message = PMA_Message::notice(__('This view has at least this number of rows. Please refer to %sdocumentation%s.'));",
          "",
          "[Added Lines]",
          "2737:             $message = PMA_Message::notice(__(",
          "2738:                 'This view has at least this number of rows. Please refer to %sdocumentation%s.'));",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "2397:         PMA_showMessage($message, $sql_query, 'success');",
          "2399:     } elseif (! isset($GLOBALS['printview']) || $GLOBALS['printview'] != '1') {",
          "2401:     }",
          "",
          "[Removed Lines]",
          "2400:         PMA_showMessage(__('Your SQL query has been executed successfully'), $sql_query, 'success');",
          "",
          "[Added Lines]",
          "2775:         PMA_showMessage(__('Your SQL query has been executed successfully'),",
          "2776:             $sql_query, 'success');",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "2415:     }",
          "2417:     if ($is_display['nav_bar'] == '1' && empty($analyzed_sql[0]['limit_clause'])) {",
          "2419:         echo \"\\n\";",
          "2420:     } elseif (! isset($GLOBALS['printview']) || $GLOBALS['printview'] != '1') {",
          "2421:         echo \"\\n\" . '<br /><br />' . \"\\n\";",
          "",
          "[Removed Lines]",
          "2418:         PMA_displayTableNavigation($pos_next, $pos_prev, $sql_query, 'top_direction_dropdown');",
          "",
          "[Added Lines]",
          "2794:         PMA_displayTableNavigation($pos_next, $pos_prev, $sql_query,",
          "2795:             'top_direction_dropdown');",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "2431:     $target=array();",
          "2435:         }",
          "2436:     }",
          "2437:     $tabs    = '(\\'' . join('\\',\\'', $target) . '\\')';",
          "",
          "[Removed Lines]",
          "2432:     if (isset($analyzed_sql[0]['table_ref']) && is_array($analyzed_sql[0]['table_ref'])) {",
          "2433:         foreach ($analyzed_sql[0]['table_ref'] AS $table_ref_position => $table_ref) {",
          "2434:             $target[] = $analyzed_sql[0]['table_ref'][$table_ref_position]['table_true_name'];",
          "",
          "[Added Lines]",
          "2809:     if (isset($analyzed_sql[0]['table_ref'])",
          "2810:         && is_array($analyzed_sql[0]['table_ref'])) {",
          "2811:         foreach ($analyzed_sql[0]['table_ref']",
          "2812:             as $table_ref_position => $table_ref) {",
          "2813:             $target[] = $analyzed_sql[0]['table_ref'][$table_ref_position]",
          "2814:                 ['table_true_name'];",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "2448:         $exist_rel = PMA_getForeigners($db, $table, '', 'both');",
          "2449:         if ($exist_rel) {",
          "2452:                 $map[$master_field] = array($rel['foreign_table'],",
          "2453:                                       $rel['foreign_field'],",
          "2454:                                       $display_field,",
          "",
          "[Removed Lines]",
          "2450:             foreach ($exist_rel AS $master_field => $rel) {",
          "2451:                 $display_field = PMA_getDisplayField($rel['foreign_db'], $rel['foreign_table']);",
          "",
          "[Added Lines]",
          "2830:             foreach ($exist_rel as $master_field => $rel) {",
          "2831:                 $display_field = PMA_getDisplayField($rel['foreign_db'],",
          "2832:                     $rel['foreign_table']);",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "2463:     $url_query = '';",
          "2464:     echo '<tbody>' . \"\\n\";",
          "2467:     if ($_SESSION['tmp_user_values']['disp_direction'] == 'vertical') {",
          "2468:         PMA_displayVerticalTable();",
          "",
          "[Removed Lines]",
          "2462:     PMA_displayTableHeaders($is_display, $fields_meta, $fields_cnt, $analyzed_sql, $sort_expression, $sort_expression_nodirection, $sort_direction);",
          "2465:     $clause_is_unique = PMA_displayTableBody($dt_result, $is_display, $map, $analyzed_sql);",
          "",
          "[Added Lines]",
          "2843:     PMA_displayTableHeaders($is_display, $fields_meta, $fields_cnt, $analyzed_sql,",
          "2844:         $sort_expression, $sort_expression_nodirection, $sort_direction);",
          "2847:     $clause_is_unique = PMA_displayTableBody($dt_result, $is_display, $map,",
          "2848:         $analyzed_sql);",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "2491:         $checkall_url = 'sql.php' . PMA_generate_common_url($_url_params);",
          "2493:         if ($_SESSION['tmp_user_values']['disp_direction'] == 'vertical') {",
          "2496:         } else {",
          "2499:         }",
          "2502:         if ($_SESSION['tmp_user_values']['disp_direction'] != 'vertical') {",
          "2503:             echo '<img class=\"selectallarrow\" width=\"38\" height=\"22\"'",
          "2505:                 .' alt=\"' . __('With selected:') . '\" />';",
          "2506:         }",
          "2507:         echo $checkall_link . \"\\n\"",
          "",
          "[Removed Lines]",
          "2494:             $checkall_params['onclick'] = 'if (setCheckboxes(\\'resultsForm\\', true)) return false;';",
          "2495:             $uncheckall_params['onclick'] = 'if (setCheckboxes(\\'resultsForm\\', false)) return false;';",
          "2497:             $checkall_params['onclick'] = 'if (markAllRows(\\'resultsForm\\')) return false;';",
          "2498:             $uncheckall_params['onclick'] = 'if (unMarkAllRows(\\'resultsForm\\')) return false;';",
          "2500:         $checkall_link = PMA_linkOrButton($checkall_url, __('Check All'), $checkall_params, false);",
          "2501:         $uncheckall_link = PMA_linkOrButton($uncheckall_url, __('Uncheck All'), $uncheckall_params, false);",
          "2504:                 .' src=\"' . $GLOBALS['pmaThemeImage'] . 'arrow_' . $GLOBALS['text_dir'] . '.png' . '\"'",
          "",
          "[Added Lines]",
          "2877:             $checkall_params['onclick']",
          "2878:                 = 'if (setCheckboxes(\\'resultsForm\\', true)) return false;';",
          "2879:             $uncheckall_params['onclick']",
          "2880:                 = 'if (setCheckboxes(\\'resultsForm\\', false)) return false;';",
          "2882:             $checkall_params['onclick']",
          "2883:                 = 'if (markAllRows(\\'resultsForm\\')) return false;';",
          "2884:             $uncheckall_params['onclick']",
          "2885:                 = 'if (unMarkAllRows(\\'resultsForm\\')) return false;';",
          "2887:         $checkall_link = PMA_linkOrButton($checkall_url, __('Check All'),",
          "2888:             $checkall_params, false);",
          "2889:         $uncheckall_link = PMA_linkOrButton($uncheckall_url, __('Uncheck All'),",
          "2890:             $uncheckall_params, false);",
          "2893:                 .' src=\"' . $GLOBALS['pmaThemeImage'] . 'arrow_'",
          "2894:                 . $GLOBALS['text_dir'] . '.png' . '\"'",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "2544:     if ($is_display['nav_bar'] == '1' && empty($analyzed_sql[0]['limit_clause'])) {",
          "2545:         echo '<br />' . \"\\n\";",
          "2547:     } elseif (! isset($GLOBALS['printview']) || $GLOBALS['printview'] != '1') {",
          "2548:         echo \"\\n\" . '<br /><br />' . \"\\n\";",
          "2549:     }",
          "",
          "[Removed Lines]",
          "2546:         PMA_displayTableNavigation($pos_next, $pos_prev, $sql_query, 'bottom_direction_dropdown');",
          "",
          "[Added Lines]",
          "2936:         PMA_displayTableNavigation($pos_next, $pos_prev, $sql_query,",
          "2937:             'bottom_direction_dropdown');",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "2557: function default_function($buffer)",
          "2558: {",
          "2559:     $buffer = htmlspecialchars($buffer);",
          "2561:     $buffer = preg_replace(\"@((\\015\\012)|(\\015)|(\\012))@\", '<br />', $buffer);",
          "2563:     return $buffer;",
          "",
          "[Removed Lines]",
          "2560:     $buffer = str_replace(\"\\011\", ' &nbsp;&nbsp;&nbsp;', str_replace('  ', ' &nbsp;', $buffer));",
          "",
          "[Added Lines]",
          "2951:     $buffer = str_replace(",
          "2952:         \"\\011\",",
          "2953:         ' &nbsp;&nbsp;&nbsp;',",
          "2954:         str_replace('  ', ' &nbsp;', $buffer));",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "2618:                 $_url_params['display_text'] = 'F';",
          "2619:                 echo PMA_linkOrButton(",
          "2620:                     'sql.php' . PMA_generate_common_url($_url_params),",
          "2622:                     '', true, true, 'print_view'",
          "2623:                 ) . \"\\n\";",
          "2624:                 unset($_url_params['display_text']);",
          "",
          "[Removed Lines]",
          "2621:                     PMA_getIcon('b_print.png', __('Print view (with full texts)'), true),",
          "",
          "[Added Lines]",
          "3015:                     PMA_getIcon('b_print.png', __('Print view (with full texts)'),",
          "3016:                         true),",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "2638:             $_url_params['single_table'] = 'true';",
          "2639:         }",
          "2640:         if (!$header_shown) {",
          "",
          "[Removed Lines]",
          "2636:     if (isset($analyzed_sql[0]) && $analyzed_sql[0]['querytype'] == 'SELECT' && ! isset($printview) && ! isset($analyzed_sql[0]['queryflags']['procedure'])) {",
          "2637:         if (isset($analyzed_sql[0]['table_ref'][0]['table_true_name']) && ! isset($analyzed_sql[0]['table_ref'][1]['table_true_name'])) {",
          "",
          "[Added Lines]",
          "3031:     if (isset($analyzed_sql[0])",
          "3032:         && $analyzed_sql[0]['querytype'] == 'SELECT'",
          "3033:         && ! isset($printview)",
          "3034:         && ! isset($analyzed_sql[0]['queryflags']['procedure'])) {",
          "3035:         if (isset($analyzed_sql[0]['table_ref'][0]['table_true_name'])",
          "3036:             && ! isset($analyzed_sql[0]['table_ref'][1]['table_true_name'])) {",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "2734: {",
          "2735:     $result = '[' . $category;",
          "2736:     if (is_null($content)) {",
          "",
          "[Removed Lines]",
          "2733: function PMA_handle_non_printable_contents($category, $content, $transform_function, $transform_options, $default_function, $meta, $url_params = array())",
          "",
          "[Added Lines]",
          "3132: function PMA_handle_non_printable_contents($category, $content, $transform_function,",
          "3133:     $transform_options, $default_function, $meta, $url_params = array())",
          "",
          "---------------",
          "--- Hunk 103 ---",
          "[Context before]",
          "2751:             $result = $transform_function($result, $transform_options, $meta);",
          "2752:         } else {",
          "2753:             $result = $default_function($result, array(), $meta);",
          "2756:                 $result = htmlspecialchars(PMA_replace_binary_contents($content));",
          "2757:             }",
          "2759:             if (count($url_params) > 0) {",
          "2761:             }",
          "2762:         }",
          "2763:     }",
          "",
          "[Removed Lines]",
          "2754:             if (stristr($meta->type, 'BLOB') && $_SESSION['tmp_user_values']['display_blob']) {",
          "2760:                 $result = '<a href=\"tbl_get_field.php' . PMA_generate_common_url($url_params) . '\">' . $result . '</a>';",
          "",
          "[Added Lines]",
          "3154:             if (stristr($meta->type, 'BLOB')",
          "3155:                 && $_SESSION['tmp_user_values']['display_blob']) {",
          "3161:                 $result = '<a href=\"tbl_get_field.php'",
          "3162:                     . PMA_generate_common_url($url_params) . '\">' . $result . '</a>';",
          "",
          "---------------",
          "--- Hunk 104 ---",
          "[Context before]",
          "2787: {",
          "2789:     global $db;",
          "2795:             $alias = $analyzed_sql[0]['select_expr'][$select_expr_position]['alias'];",
          "2796:             if (isset($alias) && strlen($alias)) {",
          "2798:                 if ($alias == $meta->name) {",
          "",
          "[Removed Lines]",
          "2786: function PMA_prepare_row_data($class, $condition_field, $analyzed_sql, $meta, $map, $data, $transform_function, $default_function, $nowrap, $where_comparison, $transform_options, $is_field_truncated )",
          "2791:     $result = ' class=\"' . PMA_addClass($class, $condition_field, $meta, $nowrap, $is_field_truncated, $transform_function, $default_function) . '\">';",
          "2793:     if (isset($analyzed_sql[0]['select_expr']) && is_array($analyzed_sql[0]['select_expr'])) {",
          "2794:         foreach ($analyzed_sql[0]['select_expr'] AS $select_expr_position => $select_expr) {",
          "2797:                 $true_column = $analyzed_sql[0]['select_expr'][$select_expr_position]['column'];",
          "",
          "[Added Lines]",
          "3188: function PMA_prepare_row_data($class, $condition_field, $analyzed_sql, $meta, $map,",
          "3189:     $data, $transform_function, $default_function, $nowrap, $where_comparison,",
          "3190:     $transform_options, $is_field_truncated )",
          "3195:     $result = ' class=\"' . PMA_addClass($class, $condition_field, $meta, $nowrap,",
          "3196:         $is_field_truncated, $transform_function, $default_function) . '\">';",
          "3198:     if (isset($analyzed_sql[0]['select_expr'])",
          "3199:         && is_array($analyzed_sql[0]['select_expr'])) {",
          "3200:         foreach ($analyzed_sql[0]['select_expr']",
          "3201:             as $select_expr_position => $select_expr) {",
          "3204:                 $true_column = $analyzed_sql[0]['select_expr'][$select_expr_position]",
          "3205:                     ['column'];",
          "",
          "---------------",
          "--- Hunk 105 ---",
          "[Context before]",
          "2824:         } // end if... else...",
          "2826:         if (isset($GLOBALS['printview']) && $GLOBALS['printview'] == '1') {",
          "2828:         } else {",
          "2830:             if ('K' == $_SESSION['tmp_user_values']['relational_display']) {",
          "2834:             } else {",
          "2835:                 $title = ' title=\"' . htmlspecialchars($data) . '\"';",
          "2836:             }",
          "",
          "[Removed Lines]",
          "2827:             $result .= ($transform_function != $default_function ? $transform_function($data, $transform_options, $meta) : $transform_function($data, array(), $meta)) . ' <code>[-&gt;' . $dispval . ']</code>';",
          "2833:                 $title = (! empty($dispval))? ' title=\"' . htmlspecialchars($dispval) . '\"' : '';",
          "",
          "[Added Lines]",
          "3235:             $result .= ($transform_function != $default_function",
          "3236:                     ? $transform_function($data, $transform_options, $meta)",
          "3237:                     : $transform_function($data, array(), $meta))",
          "3238:                 . ' <code>[-&gt;' . $dispval . ']</code>';",
          "3244:                 $title = (! empty($dispval))? ' title=\"' . htmlspecialchars($dispval)",
          "3245:                     . '\"' : '';",
          "",
          "---------------",
          "--- Hunk 106 ---",
          "[Context before]",
          "2840:                 'table' => $map[$meta->name][0],",
          "2841:                 'pos'   => '0',",
          "2842:                 'sql_query' => 'SELECT * FROM '",
          "2844:                                     . ' WHERE ' . PMA_backquote($map[$meta->name][1])",
          "2845:                                     . $where_comparison,",
          "2846:             );",
          "",
          "[Removed Lines]",
          "2843:                                     . PMA_backquote($map[$meta->name][3]) . '.' . PMA_backquote($map[$meta->name][0])",
          "",
          "[Added Lines]",
          "3255:                                     . PMA_backquote($map[$meta->name][3]) . '.'",
          "3256:                                     . PMA_backquote($map[$meta->name][0])",
          "",
          "---------------",
          "--- Hunk 107 ---",
          "[Context before]",
          "2864:             $result .= '</a>';",
          "2865:         }",
          "2866:     } else {",
          "2868:     }",
          "",
          "[Removed Lines]",
          "2867:         $result .= ($transform_function != $default_function ? $transform_function($data, $transform_options, $meta) : $transform_function($data, array(), $meta));",
          "",
          "[Added Lines]",
          "3280:         $result .= ($transform_function != $default_function",
          "3281:             ? $transform_function($data, $transform_options, $meta)",
          "3282:             : $transform_function($data, array(), $meta));",
          "",
          "---------------",
          "--- Hunk 108 ---",
          "[Context before]",
          "2877:                                 'table' => $meta->orgtable,",
          "2878:                                 'pos'   => '0',",
          "2879:                                 'sql_query' => 'SELECT * FROM '",
          "2882:                                                     . $where_comparison,",
          "2883:         );",
          "2887:     }",
          "",
          "[Removed Lines]",
          "2880:                                                     . PMA_backquote($db) . '.' . PMA_backquote($meta->orgtable)",
          "2881:                                                     . ' WHERE ' . PMA_backquote($meta->orgname)",
          "2885:         $result .= '<input type=\"hidden\" class=\"data_browse_link\" value=\"' . PMA_generate_common_url($_url_params_for_show_data_row). '\" />';",
          "",
          "[Added Lines]",
          "3295:                                                     . PMA_backquote($db) . '.'",
          "3296:                                                     . PMA_backquote($meta->orgtable)",
          "3297:                                                     . ' WHERE '",
          "3298:                                                     . PMA_backquote($meta->orgname)",
          "3302:         $result .= '<input type=\"hidden\" class=\"data_browse_link\" value=\"'",
          "3303:             . PMA_generate_common_url($_url_params_for_show_data_row). '\" />';",
          "",
          "---------------",
          "--- Hunk 109 ---",
          "[Context before]",
          "2910: {",
          "2911:     $ret = '';",
          "2912:     if (! empty($del_url) && $is_display['del_lnk'] != 'kp') {",
          "",
          "[Removed Lines]",
          "2909: function PMA_generateCheckboxForMulti($del_url, $is_display, $row_no, $where_clause_html, $condition_array, $del_query, $id_suffix, $class)",
          "",
          "[Added Lines]",
          "3328: function PMA_generateCheckboxForMulti($del_url, $is_display, $row_no,",
          "3329:     $where_clause_html, $condition_array, $del_query, $id_suffix, $class)",
          "",
          "---------------",
          "--- Hunk 110 ---",
          "[Context before]",
          "2915:             $ret .= 'class=\"' . $class . '\"';",
          "2916:         }",
          "2917:         $ret .= ' class=\"center\">'",
          "2919:            . ' class=\"multi_checkbox\"'",
          "2922:            . '    </td>';",
          "2923:     }",
          "2924:     return $ret;",
          "",
          "[Removed Lines]",
          "2918:            . '<input type=\"checkbox\" id=\"id_rows_to_delete' . $row_no . $id_suffix . '\" name=\"rows_to_delete[' . $row_no . ']\"'",
          "2920:            . ' value=\"' . $where_clause_html . '\" ' . (isset($GLOBALS['checkall']) ? 'checked=\"checked\"' : '') . ' />'",
          "2921:            . '<input type=\"hidden\" class=\"condition_array\" value=\"' . htmlspecialchars(json_encode($condition_array)) . '\" />'",
          "",
          "[Added Lines]",
          "3338:            . '<input type=\"checkbox\" id=\"id_rows_to_delete' . $row_no . $id_suffix",
          "3339:            . '\" name=\"rows_to_delete[' . $row_no . ']\"'",
          "3341:            . ' value=\"' . $where_clause_html . '\" '",
          "3342:            . (isset($GLOBALS['checkall'])",
          "3343:                ? 'checked=\"checked\"'",
          "3344:                : '') . ' />'",
          "3345:            . '<input type=\"hidden\" class=\"condition_array\" value=\"'",
          "3346:            . htmlspecialchars(json_encode($condition_array)) . '\" />'",
          "",
          "---------------",
          "--- Hunk 111 ---",
          "[Context before]",
          "2939: {",
          "2940:     $ret = '';",
          "2941:     if (! empty($edit_url)) {",
          "",
          "[Removed Lines]",
          "2938: function PMA_generateEditLink($edit_url, $class, $edit_str, $where_clause, $where_clause_html)",
          "",
          "[Added Lines]",
          "3363: function PMA_generateEditLink($edit_url, $class, $edit_str, $where_clause,",
          "3364:     $where_clause_html)",
          "",
          "---------------",
          "--- Hunk 112 ---",
          "[Context before]",
          "2948:         if (! empty($where_clause)) {",
          "2950:         }",
          "2951:         $ret .= '</span></td>';",
          "2952:     }",
          "",
          "[Removed Lines]",
          "2949:             $ret .= '<input type=\"hidden\" class=\"where_clause\" value =\"' . $where_clause_html . '\" />';",
          "",
          "[Added Lines]",
          "3375:             $ret .= '<input type=\"hidden\" class=\"where_clause\" value =\"'",
          "3376:                 . $where_clause_html . '\" />';",
          "",
          "---------------",
          "--- Hunk 113 ---",
          "[Context before]",
          "2968: {",
          "2969:     $ret = '';",
          "2970:     if (! empty($copy_url)) {",
          "",
          "[Removed Lines]",
          "2967: function PMA_generateCopyLink($copy_url, $copy_str, $where_clause, $where_clause_html, $class)",
          "",
          "[Added Lines]",
          "3394: function PMA_generateCopyLink($copy_url, $copy_str, $where_clause,",
          "3395:     $where_clause_html, $class)",
          "",
          "---------------",
          "--- Hunk 114 ---",
          "[Context before]",
          "2981:         if (! empty($where_clause)) {",
          "2983:         }",
          "2984:         $ret .= '</span></td>';",
          "2985:     }",
          "",
          "[Removed Lines]",
          "2982:             $ret .= '<input type=\"hidden\" class=\"where_clause\" value=\"' . $where_clause_html . '\" />';",
          "",
          "[Added Lines]",
          "3410:             $ret .= '<input type=\"hidden\" class=\"where_clause\" value=\"'",
          "3411:                 . $where_clause_html . '\" />';",
          "",
          "---------------",
          "--- Hunk 115 ---",
          "[Context before]",
          "3038: {",
          "3039:     $ret = '';",
          "3041:     if ($position == 'left') {",
          "3048:         $ret .= PMA_generateDeleteLink($del_url, $del_str, $js_conf, '', '');",
          "3050:     } elseif ($position == 'right') {",
          "3051:         $ret .= PMA_generateDeleteLink($del_url, $del_str, $js_conf, '', '');",
          "3058:     } else { // $position == 'none'",
          "3060:     }",
          "3061:     return $ret;",
          "3062: }",
          "",
          "[Removed Lines]",
          "3037: function PMA_generateCheckboxAndLinks($position, $del_url, $is_display, $row_no, $where_clause, $where_clause_html, $condition_array, $del_query, $id_suffix, $edit_url, $copy_url, $class, $edit_str, $copy_str, $del_str, $js_conf)",
          "3042:         $ret .= PMA_generateCheckboxForMulti($del_url, $is_display, $row_no, $where_clause_html, $condition_array, $del_query, $id_suffix = '_left', '', '', '');",
          "3044:         $ret .= PMA_generateEditLink($edit_url, $class, $edit_str, $where_clause, $where_clause_html, '');",
          "3046:         $ret .= PMA_generateCopyLink($copy_url, $copy_str, $where_clause, $where_clause_html, '');",
          "3053:         $ret .= PMA_generateCopyLink($copy_url, $copy_str, $where_clause, $where_clause_html, '');",
          "3055:         $ret .= PMA_generateEditLink($edit_url, $class, $edit_str, $where_clause, $where_clause_html, '');",
          "3057:         $ret .= PMA_generateCheckboxForMulti($del_url, $is_display, $row_no, $where_clause_html, $condition_array, $del_query, $id_suffix = '_right', '', '', '');",
          "3059:         $ret .= PMA_generateCheckboxForMulti($del_url, $is_display, $row_no, $where_clause_html, $condition_array, $del_query, $id_suffix = '_left', '', '', '');",
          "",
          "[Added Lines]",
          "3466: function PMA_generateCheckboxAndLinks($position, $del_url, $is_display, $row_no,",
          "3467:     $where_clause, $where_clause_html, $condition_array, $del_query, $id_suffix,",
          "3468:     $edit_url, $copy_url, $class, $edit_str, $copy_str, $del_str, $js_conf)",
          "3473:         $ret .= PMA_generateCheckboxForMulti($del_url, $is_display, $row_no,",
          "3474:             $where_clause_html, $condition_array, $del_query, $id_suffix = '_left',",
          "3475:             '', '', '');",
          "3477:         $ret .= PMA_generateEditLink($edit_url, $class, $edit_str, $where_clause,",
          "3478:             $where_clause_html, '');",
          "3480:         $ret .= PMA_generateCopyLink($copy_url, $copy_str, $where_clause,",
          "3481:             $where_clause_html, '');",
          "3488:         $ret .= PMA_generateCopyLink($copy_url, $copy_str, $where_clause,",
          "3489:             $where_clause_html, '');",
          "3491:         $ret .= PMA_generateEditLink($edit_url, $class, $edit_str, $where_clause,",
          "3492:             $where_clause_html, '');",
          "3494:         $ret .= PMA_generateCheckboxForMulti($del_url, $is_display, $row_no,",
          "3495:             $where_clause_html, $condition_array, $del_query, $id_suffix = '_right',",
          "3496:             '', '', '');",
          "3498:         $ret .= PMA_generateCheckboxForMulti($del_url, $is_display, $row_no,",
          "3499:             $where_clause_html, $condition_array, $del_query, $id_suffix = '_left',",
          "3500:             '', '', '');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9932af7dbb895d86f452e3f038e6a23ee2e51fe1",
      "candidate_info": {
        "commit_hash": "9932af7dbb895d86f452e3f038e6a23ee2e51fe1",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/9932af7dbb895d86f452e3f038e6a23ee2e51fe1",
        "files": [
          "libraries/display_tbl.lib.php"
        ],
        "message": "Calcualte include path only once",
        "before_after_code_files": [
          "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
          ],
          "candidate": [
            "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php": [
          "File: libraries/display_tbl.lib.php -> libraries/display_tbl.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2064:                     && !empty($GLOBALS['mime_map'][$meta->name]['transformation'])",
          "2065:                 ) {",
          "2068:                         $GLOBALS['mime_map'][$meta->name]['transformation']",
          "2069:                     );",
          "2073:                         $transformfunction_name = str_replace(",
          "2074:                             '.inc.php', '',",
          "2075:                             $GLOBALS['mime_map'][$meta->name]['transformation']",
          "2076:                         );",
          "2080:                         if (function_exists('PMA_transformation_' . $transformfunction_name)) {",
          "",
          "[Removed Lines]",
          "2067:                     $include_file = PMA_securePath(",
          "2071:                     if (file_exists('./libraries/transformations/' . $include_file)) {",
          "2078:                         include_once './libraries/transformations/' . $include_file;",
          "",
          "[Added Lines]",
          "2067:                     $include_file = './libraries/transformations/' . PMA_securePath(",
          "2071:                     if (file_exists($include_file)) {",
          "2078:                         include_once $include_file;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92b71154be66e67860a94530b6ab762e79f336f3",
      "candidate_info": {
        "commit_hash": "92b71154be66e67860a94530b6ab762e79f336f3",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/92b71154be66e67860a94530b6ab762e79f336f3",
        "files": [
          "libraries/common.lib.php",
          "libraries/display_tbl.lib.php",
          "sql.php"
        ],
        "message": "Introduce DisplayResults class",
        "before_after_code_files": [
          "libraries/common.lib.php||libraries/common.lib.php",
          "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php",
          "sql.php||sql.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
          ],
          "candidate": [
            "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/common.lib.php||libraries/common.lib.php": [
          "File: libraries/common.lib.php -> libraries/common.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3945:         . __('Print') . '\" />';",
          "3946:     echo '</p>';",
          "3947: }",
          "3948: ?>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3962: function PMA_mimeDefaultFunction($buffer)",
          "3963: {",
          "3964:     $buffer = htmlspecialchars($buffer);",
          "3965:     $buffer = str_replace(",
          "3966:         \"\\011\",",
          "3967:         ' &nbsp;&nbsp;&nbsp;',",
          "3968:         str_replace('  ', ' &nbsp;', $buffer)",
          "3969:     );",
          "3970:     $buffer = preg_replace(\"@((\\015\\012)|(\\015)|(\\012))@\", '<br />', $buffer);",
          "3972:     return $buffer;",
          "3973: }",
          "",
          "---------------"
        ],
        "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php": [
          "File: libraries/display_tbl.lib.php -> libraries/display_tbl.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: }",
          "57: {",
          "119:             ) {",
          "149:                 ) {",
          "190:         ) {",
          "194:         }",
          "255:     }",
          "334:     ) {",
          "365:             );",
          "376:             );",
          "631:         );",
          "733:         }",
          "793:         if ($directionCondition) {",
          "800:         } else {",
          "899:         ) {",
          "902:             ) {",
          "904:             }",
          "905:         }",
          "989:             } else {",
          "1022:             if ($directionCondition) {",
          "1072:         if ($directionCondition) {",
          "1143:         }",
          "1276:         $options_html .= '<div class=\"formelement\">';",
          "1277:         $choices = array(",
          "1280:         );",
          "1282:         $options_html .= PMA_getRadioFields(",
          "1285:         )",
          "1286:         . '</div>';",
          "1329:             . '</div>';",
          "1410:         if ($GLOBALS['cfg']['AjaxEnable']) {",
          "1412:         }",
          "1446:     ) {",
          "1492:         } else {",
          "1503:         }",
          "1947:         }",
          "1971:             }",
          "2083:                             $GLOBALS['mime_map'][$meta->name]['transformation']",
          "2084:                         );",
          "2099:                             );",
          "2238:                 );",
          "2273:             }",
          "2387:         }",
          "2479:         $_url_params = array(",
          "2485:             );",
          "2500:             );",
          "2618:         }",
          "2729:         if (! isset($column) || is_null($column)) {",
          "2739:             );",
          "2743:             );",
          "2745:         }",
          "2773:             }",
          "2859:                 $where_comparison = ' = ' . $column;",
          "2872:                     && ($_SESSION['tmp_user_values']['display_text'] == 'P')",
          "2873:                 ) {",
          "2875:                         . '...';",
          "2876:                     $is_field_truncated = true;",
          "2877:                 }",
          "2883:                     $where_comparison, $transform_options,",
          "2884:                     $is_field_truncated",
          "2885:                 );",
          "2887:             } else {",
          "2895:             }",
          "2896:         }",
          "2977:                 } else {",
          "2980:                     );",
          "2981:                 }",
          "2992:             }",
          "3025:         }",
          "3404:         ) {",
          "3407:         }",
          "3455:             $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex']",
          "3592:         );",
          "3647:         }",
          "3712:         );",
          "3834:         } else {",
          "3837:         }",
          "3850:             }",
          "3892:                 );",
          "3956:         } else {",
          "3958:         }",
          "4116:         $links_html .= PMA_getButtonOrImage(",
          "4119:         );",
          "4211:             if (!$header_shown) {",
          "4212:                 $results_operations_html .= $header;",
          "4213:                 $header_shown = true;",
          "4214:             }",
          "4224:             $results_operations_html .= PMA_linkOrButton(",
          "4228:             )",
          "4229:             . \"\\n\";",
          "4235:                 $results_operations_html .= PMA_linkOrButton(",
          "4241:                 )",
          "4242:                 . \"\\n\";",
          "4244:             }",
          "4265:         }",
          "4267:         if (!$header_shown) {",
          "4268:             $results_operations_html .= $header;",
          "4269:             $header_shown = true;",
          "4270:         }",
          "4313:         }",
          "4322:         }",
          "4417:             }",
          "4418:         }",
          "4465:         ) {",
          "4552:                 } else {",
          "4557:             }",
          "4559:         }",
          "4622:         }",
          "4670:         }",
          "4712:         }",
          "4827: }",
          "4828: ?>",
          "",
          "[Removed Lines]",
          "15: require_once './libraries/Index.class.php';",
          "56: function PMA_setDisplayMode(&$the_disp_mode, &$the_total)",
          "59:     global $db, $table;",
          "60:     global $unlim_num_rows, $fields_meta;",
          "61:     global $err_url;",
          "64:     $do_display              = array();",
          "65:     $do_display['edit_lnk']  = $the_disp_mode[0] . $the_disp_mode[1];",
          "66:     $do_display['del_lnk']   = $the_disp_mode[2] . $the_disp_mode[3];",
          "67:     $do_display['sort_lnk']  = (string) $the_disp_mode[4];",
          "68:     $do_display['nav_bar']   = (string) $the_disp_mode[5];",
          "69:     $do_display['ins_row']   = (string) $the_disp_mode[6];",
          "70:     $do_display['bkm_form']  = (string) $the_disp_mode[7];",
          "71:     $do_display['text_btn']  = (string) $the_disp_mode[8];",
          "72:     $do_display['pview_lnk'] = (string) $the_disp_mode[9];",
          "76:     if ($the_disp_mode != 'nnnn000000') {",
          "77:         if (isset($GLOBALS['printview']) && $GLOBALS['printview'] == '1') {",
          "79:             $do_display['edit_lnk']  = 'nn'; // no edit link",
          "80:             $do_display['del_lnk']   = 'nn'; // no delete link",
          "81:             $do_display['sort_lnk']  = (string) '0';",
          "82:             $do_display['nav_bar']   = (string) '0';",
          "83:             $do_display['ins_row']   = (string) '0';",
          "84:             $do_display['bkm_form']  = (string) '0';",
          "85:             $do_display['text_btn']  = (string) '0';",
          "86:             $do_display['pview_lnk'] = (string) '0';",
          "87:         } elseif ($GLOBALS['is_count'] || $GLOBALS['is_analyse']",
          "88:             || $GLOBALS['is_maint'] || $GLOBALS['is_explain']",
          "89:         ) {",
          "93:             $do_display['edit_lnk']  = 'nn'; // no edit link",
          "94:             $do_display['del_lnk']   = 'nn'; // no delete link",
          "95:             $do_display['sort_lnk']  = (string) '0';",
          "96:             $do_display['nav_bar']   = (string) '0';",
          "97:             $do_display['ins_row']   = (string) '0';",
          "98:             $do_display['bkm_form']  = (string) '1';",
          "99:             if ($GLOBALS['is_maint']) {",
          "100:                 $do_display['text_btn']  = (string) '1';",
          "101:             } else {",
          "102:                 $do_display['text_btn']  = (string) '0';",
          "103:             }",
          "104:             $do_display['pview_lnk'] = (string) '1';",
          "106:         } elseif ($GLOBALS['is_show']) {",
          "112:             $tmp = preg_match(",
          "113:                 '@^SHOW[[:space:]]+(VARIABLES|(FULL[[:space:]]+)?'",
          "114:                 . 'PROCESSLIST|STATUS|TABLE|GRANTS|CREATE|LOGS|DATABASES|FIELDS)@i',",
          "115:                 $GLOBALS['sql_query'], $which",
          "116:             );",
          "117:             if (isset($which[1])",
          "118:                 && (strpos(' ' . strtoupper($which[1]), 'PROCESSLIST') > 0)",
          "120:                 $do_display['edit_lnk'] = 'nn'; // no edit link",
          "121:                 $do_display['del_lnk']  = 'kp'; // \"kill process\" type edit link",
          "122:             } else {",
          "124:                 $do_display['edit_lnk'] = 'nn'; // no edit link",
          "125:                 $do_display['del_lnk']  = 'nn'; // no delete link",
          "126:             }",
          "128:             $do_display['sort_lnk']  = (string) '0';",
          "129:             $do_display['nav_bar']   = (string) '0';",
          "130:             $do_display['ins_row']   = (string) '0';",
          "131:             $do_display['bkm_form']  = (string) '1';",
          "132:             $do_display['text_btn']  = (string) '1';",
          "133:             $do_display['pview_lnk'] = (string) '1';",
          "134:         } else {",
          "138:             $prev_table = $fields_meta[0]->table;",
          "139:             $do_display['text_btn']  = (string) '1';",
          "140:             for ($i = 0; $i < $GLOBALS['fields_cnt']; $i++) {",
          "141:                 $is_link = ($do_display['edit_lnk'] != 'nn')",
          "142:                     || ($do_display['del_lnk'] != 'nn')",
          "143:                     || ($do_display['sort_lnk'] != '0')",
          "144:                     || ($do_display['ins_row'] != '0');",
          "146:                 if ($is_link",
          "147:                     && (($fields_meta[$i]->table == '')",
          "148:                     || ($fields_meta[$i]->table != $prev_table))",
          "150:                     $do_display['edit_lnk'] = 'nn'; // don't display links",
          "151:                     $do_display['del_lnk']  = 'nn';",
          "157:                     $do_display['ins_row']  = (string) '0';",
          "158:                     if ($do_display['text_btn'] == '1') {",
          "159:                         break;",
          "160:                     }",
          "161:                 } // end if (2.3.2)",
          "163:                 $do_display['pview_lnk']    = (string) '1';",
          "164:                 $prev_table = $fields_meta[$i]->table;",
          "165:             } // end for",
          "166:         } // end if..elseif...else (2.1 -> 2.3)",
          "167:     } // end if (2)",
          "170:     if (isset($unlim_num_rows) && $unlim_num_rows != '') {",
          "171:         $the_total = $unlim_num_rows;",
          "172:     } elseif ((($do_display['nav_bar'] == '1') || ($do_display['sort_lnk'] == '1'))",
          "173:              && (strlen($db) && !empty($table))",
          "174:     ) {",
          "175:         $the_total   = PMA_Table::countRecords($db, $table);",
          "176:     }",
          "181:     if ($do_display['nav_bar'] == '1' || $do_display['sort_lnk'] == '1') {",
          "187:         if (isset($unlim_num_rows)",
          "188:             && $unlim_num_rows < 2",
          "189:             && ! PMA_Table::isView($db, $table)",
          "193:             $do_display['sort_lnk'] = (string) '0';",
          "195:     } // end if (3)",
          "198:     $the_disp_mode = join('', $do_display);",
          "200:     return $do_display;",
          "202: } // end of the 'PMA_setDisplayMode()' function",
          "211: function PMA_isSelect()",
          "212: {",
          "214:     global $is_count, $is_export, $is_func, $is_analyse;",
          "215:     global $analyzed_sql;",
          "217:     return ! ($is_count || $is_export || $is_func || $is_analyse)",
          "218:         && (count($analyzed_sql[0]['select_expr']) == 0)",
          "219:         && isset($analyzed_sql[0]['queryflags']['select_from'])",
          "220:         && (count($analyzed_sql[0]['table_ref']) == 1);",
          "221: }",
          "245: function PMA_getTableNavigationButton($caption, $title, $pos, $html_sql_query,",
          "246:     $onsubmit = '', $input_for_real_end = '', $onclick = ''",
          "247: ) {",
          "249:     global $db, $table, $goto;",
          "251:     $caption_output = '';",
          "253:     if ($GLOBALS['cfg']['NavigationBarIconic']) {",
          "254:         $caption_output .= $caption;",
          "258:     if (($GLOBALS['cfg']['NavigationBarIconic'] === false)",
          "259:         || ($GLOBALS['cfg']['NavigationBarIconic'] === 'both')",
          "260:     ) {",
          "261:         $caption_output .= '&nbsp;' . $title;",
          "262:     }",
          "263:     $title_output = ' title=\"' . $title . '\"';",
          "265:     return '<td>'",
          "266:         . '<form action=\"sql.php\" method=\"post\" ' . $onsubmit . '>'",
          "267:         . PMA_generate_common_hidden_inputs($db, $table)",
          "268:         . '<input type=\"hidden\" name=\"sql_query\" value=\"' . $html_sql_query . '\" />'",
          "269:         . '<input type=\"hidden\" name=\"pos\" value=\"' . $pos . '\" />'",
          "270:         . '<input type=\"hidden\" name=\"goto\" value=\"' . $goto . '\" />'",
          "271:         . $input_for_real_end",
          "272:         . '<input type=\"submit\" name=\"navig\"'",
          "273:         . ($GLOBALS['cfg']['AjaxEnable'] ? ' class=\"ajax\" ' : '' )",
          "274:         . 'value=\"' . $caption_output . '\" ' . $title_output . $onclick . ' />'",
          "275:         . '</form>'",
          "276:         . '</td>';",
          "278: } // end function PMA_getTableNavigationButton()",
          "305: function PMA_getTableNavigation($pos_next, $pos_prev, $sql_query,",
          "306:     $id_for_direction_dropdown",
          "307: ) {",
          "309:     global $db, $table, $goto;",
          "310:     global $num_rows, $unlim_num_rows;",
          "311:     global $is_innodb;",
          "312:     global $showtable;",
          "314:     $table_navigation_html = '';",
          "318:     $html_sql_query = htmlspecialchars($sql_query);",
          "324:     $is_innodb = (isset($showtable['Type']) && $showtable['Type'] == 'InnoDB');",
          "327:     $table_navigation_html .= '<table class=\"navigation nospacing nopadding\">'",
          "328:         . '<tr>'",
          "329:         . '<td class=\"navigation_separator\"></td>';",
          "332:     if ($_SESSION['tmp_user_values']['pos']",
          "333:         && ($_SESSION['tmp_user_values']['max_rows'] != 'all')",
          "336:         $table_navigation_html .= PMA_getMoveBackwardButtonsForTableNavigation(",
          "337:             $html_sql_query, $pos_prev",
          "338:         );",
          "340:     } // end move back",
          "342:     $nbTotalPage = 1;",
          "345:     if ($_SESSION['tmp_user_values']['max_rows'] != 'all') { //if1",
          "347:         $pageNow = @floor(",
          "348:             $_SESSION['tmp_user_values']['pos']",
          "349:             / $_SESSION['tmp_user_values']['max_rows']",
          "350:         ) + 1;",
          "352:         $nbTotalPage = @ceil(",
          "353:             $unlim_num_rows",
          "354:             / $_SESSION['tmp_user_values']['max_rows']",
          "355:         );",
          "357:         if ($nbTotalPage > 1) { //if2",
          "359:             $table_navigation_html .= '<td>';",
          "360:             $_url_params = array(",
          "361:                 'db'        => $db,",
          "362:                 'table'     => $table,",
          "363:                 'sql_query' => $sql_query,",
          "364:                 'goto'      => $goto,",
          "369:             $table_navigation_html .= '<form action=\"sql.php'",
          "370:                 . PMA_generate_common_url($_url_params)",
          "371:                 . '\" method=\"post\">';",
          "373:             $table_navigation_html .= PMA_pageselector(",
          "374:                 $_SESSION['tmp_user_values']['max_rows'],",
          "375:                 $pageNow, $nbTotalPage, 200, 5, 5, 20, 10",
          "378:             $table_navigation_html .= '</form>'",
          "379:                 . '</td>';",
          "380:         } //_if2",
          "381:     } //_if1",
          "384:     if (($num_rows < $unlim_num_rows)",
          "385:         && ($GLOBALS['cfg']['ShowAll']",
          "386:         || ($GLOBALS['cfg']['MaxRows'] * 5 >= $unlim_num_rows))",
          "387:     ) {",
          "389:         $table_navigation_html .= PMA_getShowAllButtonForTableNavigation(",
          "390:             $db, $table, $html_sql_query, $goto",
          "391:         );",
          "393:     } // end show all",
          "396:     $endpos = $_SESSION['tmp_user_values']['pos']",
          "397:         + $_SESSION['tmp_user_values']['max_rows'];",
          "399:     if (($endpos < $unlim_num_rows)",
          "400:         && ($num_rows >= $_SESSION['tmp_user_values']['max_rows'])",
          "401:         && ($_SESSION['tmp_user_values']['max_rows'] != 'all')",
          "402:     ) {",
          "404:         $table_navigation_html .= PMA_getMoveForwardButtonsForTableNavigation(",
          "405:             $html_sql_query, $pos_next, $is_innodb,",
          "406:             $unlim_num_rows, $num_rows",
          "407:         );",
          "409:     } // end move toward",
          "412:     if ($nbTotalPage > 1) {",
          "413:         $table_navigation_html",
          "414:             .= '<td><div class=\"navigation_separator\">|</div></td>';",
          "415:     }",
          "417:     $table_navigation_html .= '<td>'",
          "418:         . '<div class=\"save_edited hide\">'",
          "419:         . '<input type=\"submit\" value=\"' . __('Save edited data') . '\" />'",
          "420:         . '<div class=\"navigation_separator\">|</div>'",
          "421:         . '</div>'",
          "422:         . '</td>'",
          "423:         . '<td>'",
          "424:         . '<div class=\"restore_column hide\">'",
          "425:         . '<input type=\"submit\" value=\"' . __('Restore column order') . '\" />'",
          "426:         . '<div class=\"navigation_separator\">|</div>'",
          "427:         . '</div>'",
          "428:         . '</td>';",
          "434:     $table_navigation_html .= '<td class=\"navigation_goto\">';",
          "436:     $table_navigation_html .= '<form action=\"sql.php\" method=\"post\" '",
          "437:         . 'onsubmit=\"return '",
          "438:             . '(checkFormElementInRange('",
          "439:                 . 'this, '",
          "440:                 . '\\'session_max_rows\\', '",
          "441:                 . '\\'' . str_replace('\\'', '\\\\\\'', __('%d is not valid row number.'))",
          "442:                 . '\\', '",
          "443:                 . '1)'",
          "444:             . ' &amp;&amp; '",
          "445:             . 'checkFormElementInRange('",
          "446:                 . 'this, '",
          "447:                 . '\\'pos\\', '",
          "448:                 . '\\'' . str_replace('\\'', '\\\\\\'', __('%d is not valid row number.'))",
          "449:                 . '\\', '",
          "450:                 . '0'",
          "451:                 . ($unlim_num_rows > 0 ? ', ' . ($unlim_num_rows - 1) : '') . ')'",
          "452:             . ')'",
          "453:         .'\">';",
          "455:     $table_navigation_html .= PMA_generate_common_hidden_inputs($db, $table);",
          "457:     $table_navigation_html .= PMA_getAdditionalFieldsForTableNavigation(",
          "458:         $html_sql_query, $goto, $pos_next,",
          "459:         $unlim_num_rows, $id_for_direction_dropdown",
          "460:     );",
          "462:     $table_navigation_html .= '</form>'",
          "463:         . '</td>'",
          "464:         . '<td class=\"navigation_separator\"></td>'",
          "465:         . '</tr>'",
          "466:         . '</table>';",
          "468:     return $table_navigation_html;",
          "470: } // end of the 'PMA_getTableNavigation()' function",
          "483: function PMA_getMoveBackwardButtonsForTableNavigation($html_sql_query, $pos_prev)",
          "484: {",
          "485:     return PMA_getTableNavigationButton(",
          "486:         '&lt;&lt;', _pgettext('First page', 'Begin'), 0, $html_sql_query",
          "487:     )",
          "488:     . PMA_getTableNavigationButton(",
          "489:         '&lt;', _pgettext('Previous page', 'Previous'), $pos_prev,",
          "490:         $html_sql_query",
          "491:     );",
          "492: }",
          "507: function PMA_getShowAllButtonForTableNavigation($db, $table, $html_sql_query, $goto)",
          "508: {",
          "509:     return \"\\n\"",
          "510:         . '<td>'",
          "511:         . '<form action=\"sql.php\" method=\"post\">'",
          "512:         . PMA_generate_common_hidden_inputs($db, $table)",
          "513:         . '<input type=\"hidden\" name=\"sql_query\" value=\"' . $html_sql_query . '\" />'",
          "514:         . '<input type=\"hidden\" name=\"pos\" value=\"0\" />'",
          "515:         . '<input type=\"hidden\" name=\"session_max_rows\" value=\"all\" />'",
          "516:         . '<input type=\"hidden\" name=\"goto\" value=\"' . $goto . '\" />'",
          "517:         . '<input type=\"submit\" name=\"navig\" value=\"' . __('Show all') . '\" />'",
          "518:         . '</form>'",
          "519:         . '</td>';",
          "520: }",
          "536: function PMA_getMoveForwardButtonsForTableNavigation(",
          "537:     $html_sql_query, $pos_next, $is_innodb, $unlim_num_rows, $num_rows",
          "538: ) {",
          "541:     $buttons_html = PMA_getTableNavigationButton(",
          "542:         '&gt;',",
          "543:         _pgettext('Next page', 'Next'),",
          "544:         $pos_next,",
          "545:         $html_sql_query",
          "546:     );",
          "549:     if ($is_innodb && $unlim_num_rows > $GLOBALS['cfg']['MaxExactCount']) {",
          "550:         $input_for_real_end = '<input id=\"real_end_input\" type=\"hidden\" '",
          "551:             . 'name=\"find_real_end\" value=\"1\" />';",
          "553:         $onclick = '';",
          "554:     } else {",
          "555:         $input_for_real_end = $onclick = '';",
          "556:     }",
          "558:     $onsubmit = 'onsubmit=\"return '",
          "559:         . ($_SESSION['tmp_user_values']['pos']",
          "560:                 + $_SESSION['tmp_user_values']['max_rows'] < $unlim_num_rows",
          "561:             && $num_rows >= $_SESSION['tmp_user_values']['max_rows'])",
          "562:         ? 'true'",
          "563:         : 'false' . '\"';",
          "566:     $buttons_html .= PMA_getTableNavigationButton(",
          "567:         '&gt;&gt;',",
          "568:         _pgettext('Last page', 'End'),",
          "569:         @((ceil($unlim_num_rows / $_SESSION['tmp_user_values']['max_rows'])- 1)",
          "571:         $html_sql_query, $onsubmit, $input_for_real_end, $onclick",
          "572:     );",
          "574:     return $buttons_html;",
          "576: }",
          "594: function PMA_getAdditionalFieldsForTableNavigation(",
          "595:     $html_sql_query, $goto, $pos_next,",
          "596:     $unlim_num_rows, $id_for_direction_dropdown",
          "597: ) {",
          "599:     $additional_fields_html = '';",
          "601:     $additional_fields_html .= '<input type=\"hidden\" name=\"sql_query\" '",
          "602:         . 'value=\"' . $html_sql_query . '\" />'",
          "603:         . '<input type=\"hidden\" name=\"goto\" value=\"' . $goto . '\" />'",
          "604:         . '<input type=\"submit\" name=\"navig\"'",
          "605:         . ($GLOBALS['cfg']['AjaxEnable'] ? ' class=\"ajax\"' : '')",
          "606:         . ' value=\"' . __('Show') . ' :\" />'",
          "607:         . __('Start row') . ': ' . \"\\n\"",
          "608:         . '<input type=\"text\" name=\"pos\" size=\"3\" value=\"'",
          "609:         . (($pos_next >= $unlim_num_rows) ? 0 : $pos_next)",
          "610:         . '\" class=\"textfield\" onfocus=\"this.select()\" />'",
          "611:         . __('Number of rows') . ': ' . \"\\n\"",
          "612:         . '<input type=\"text\" name=\"session_max_rows\" size=\"3\" value=\"'",
          "613:         . (($_SESSION['tmp_user_values']['max_rows'] != 'all')",
          "614:             ? $_SESSION['tmp_user_values']['max_rows']",
          "615:             : $GLOBALS['cfg']['MaxRows'])",
          "616:         . '\" class=\"textfield\" onfocus=\"this.select()\" />';",
          "618:     if ($GLOBALS['cfg']['ShowDisplayDirection']) {",
          "620:         $additional_fields_html .= __('Mode') . ': ' . \"\\n\";",
          "621:         $choices = array(",
          "622:                 'horizontal'        => __('horizontal'),",
          "623:                 'horizontalflipped' => __('horizontal (rotated headers)'),",
          "624:                 'vertical'          => __('vertical')",
          "625:             );",
          "627:         $additional_fields_html .= PMA_getDropdown(",
          "628:             'disp_direction', $choices,",
          "629:             $_SESSION['tmp_user_values']['disp_direction'],",
          "630:             $id_for_direction_dropdown",
          "632:         unset($choices);",
          "633:     }",
          "635:     $additional_fields_html .= sprintf(",
          "636:         __('Headers every %s rows'),",
          "637:         '<input type=\"text\" size=\"3\" name=\"repeat_cells\" value=\"'",
          "638:         . $_SESSION['tmp_user_values']['repeat_cells']",
          "639:         . '\" class=\"textfield\" /> '",
          "640:     );",
          "642:     return $additional_fields_html;",
          "644: }",
          "674: function PMA_getTableHeaders(&$is_display, &$fields_meta, $fields_cnt = 0,",
          "675:     $analyzed_sql = '', $sort_expression = '', $sort_expression_nodirection = '',",
          "676:     $sort_direction = ''",
          "677: ) {",
          "679:     global $db, $table, $goto;",
          "680:     global $sql_query, $num_rows;",
          "681:     global $vertical_display, $highlight_columns;",
          "683:     $table_headers_html = '';",
          "687:     $sql_md5 = md5($GLOBALS['sql_query']);",
          "688:     $session_max_rows = $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows'];",
          "690:     $direction = isset($_SESSION['tmp_user_values']['disp_direction'])",
          "691:         ? $_SESSION['tmp_user_values']['disp_direction']",
          "692:         : '';",
          "694:     if ($analyzed_sql == '') {",
          "695:         $analyzed_sql = array();",
          "696:     }",
          "698:     $directionCondition = ($direction == 'horizontal')",
          "699:         || ($direction == 'horizontalflipped');",
          "702:     if ($is_display['sort_lnk'] == '1') {",
          "705:         $unsorted_sql_query     = $sql_query;",
          "706:         if (isset($analyzed_sql[0]['unsorted_query'])) {",
          "707:             $unsorted_sql_query = $analyzed_sql[0]['unsorted_query'];",
          "708:         }",
          "712:         $unsorted_sql_query = trim($unsorted_sql_query);",
          "715:         if (isset($analyzed_sql)",
          "716:             && isset($analyzed_sql[0])",
          "717:             && isset($analyzed_sql[0]['querytype'])",
          "718:             && ($analyzed_sql[0]['querytype'] == 'SELECT')",
          "719:             && isset($analyzed_sql[0]['table_ref'])",
          "720:             && (count($analyzed_sql[0]['table_ref']) == 1)",
          "721:         ) {",
          "724:             $indexes = PMA_Index::getFromTable($table, $db);",
          "727:             if ($indexes) {",
          "728:                 $table_headers_html .= PMA_getSortByKeyDropDown(",
          "729:                     $db, $table, $indexes, $sort_expression,",
          "730:                     $unsorted_sql_query",
          "731:                 );",
          "732:             }",
          "734:     }",
          "737:     $table_headers_html .= '<input id=\"save_cells_at_once\" type=\"hidden\" value=\"'",
          "738:         . $GLOBALS['cfg']['SaveCellsAtOnce'] . '\" />'",
          "739:         . '<div class=\"common_hidden_inputs\">'",
          "740:         . PMA_generate_common_hidden_inputs($db, $table)",
          "741:         . '</div>';",
          "744:     if (PMA_isSelect()) {",
          "745:         $table_headers_html .= PMA_getDataForResettingColumnOrder();",
          "746:     }",
          "748:     $vertical_display['emptypre']   = 0;",
          "749:     $vertical_display['emptyafter'] = 0;",
          "750:     $vertical_display['textbtn']    = '';",
          "753:     if (! (isset($GLOBALS['printview']) && ($GLOBALS['printview'] == '1'))) {",
          "755:         $table_headers_html .= PMA_getOptionsBlock($db, $table, $sql_query, $goto);",
          "758:         $full_or_partial_text_link = PMA_getFullOrPartialTextButtonOrLink(",
          "759:             $db, $table, $sql_query, $goto",
          "760:         );",
          "761:     }",
          "764:     $table_headers_html .= PMA_getFormForMultiRowOperations(",
          "765:         $db, $table, $is_display['del_lnk']",
          "766:     );",
          "769:     if ($directionCondition) {",
          "771:         $table_headers_html .= '<thead><tr>' . \"\\n\";",
          "773:         $colspan = (($is_display['edit_lnk'] != 'nn')",
          "774:             && ($is_display['del_lnk'] != 'nn'))",
          "775:             ? ' colspan=\"4\"'",
          "776:             : '';",
          "778:     } else {",
          "779:         $rowspan = (($is_display['edit_lnk'] != 'nn')",
          "780:             && ($is_display['del_lnk'] != 'nn'))",
          "781:             ? ' rowspan=\"4\"'",
          "782:             : '';",
          "783:     }",
          "786:     if ((($is_display['edit_lnk'] == 'nn') && ($is_display['del_lnk'] == 'nn'))",
          "787:         && ($is_display['text_btn'] == '1')",
          "788:     ) {",
          "790:         $vertical_display['emptypre'] = (($is_display['edit_lnk'] != 'nn')",
          "791:             && ($is_display['del_lnk'] != 'nn')) ? 4 : 0;",
          "795:             $table_headers_html .= '<th colspan=\"' . $fields_cnt . '\"></th>'",
          "796:                 . '</tr>'",
          "797:                 . '<tr>';",
          "802:             $span = $num_rows + 1 + floor(",
          "803:                 $num_rows / $_SESSION['tmp_user_values']['repeat_cells']",
          "804:             );",
          "805:             $table_headers_html .= '<tr><th colspan=\"' . $span . '\"></th></tr>';",
          "807:         } // end vertical mode",
          "809:     } elseif ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "810:         || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "811:         && ($is_display['text_btn'] == '1')",
          "812:     ) {",
          "816:         $vertical_display['emptypre'] = (($is_display['edit_lnk'] != 'nn')",
          "817:             && ($is_display['del_lnk'] != 'nn')) ? 4 : 0;",
          "819:         if ($directionCondition) {",
          "821:             $table_headers_html .= '<th ' . $colspan . '>'",
          "822:                 . $full_or_partial_text_link . '</th>';",
          "825:         } else {",
          "827:             $vertical_display['textbtn']",
          "828:                 = '    <th ' . $rowspan . ' class=\"vmiddle\">' . \"\\n\"",
          "829:                 . '        ' . \"\\n\"",
          "830:                 . '    </th>' . \"\\n\";",
          "831:         } // end vertical mode",
          "833:     } elseif ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "834:         || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "835:         && (($is_display['edit_lnk'] != 'nn') || ($is_display['del_lnk'] != 'nn'))",
          "836:     ) {",
          "839:         $vertical_display['emptypre'] = (($is_display['edit_lnk'] != 'nn')",
          "840:             && ($is_display['del_lnk'] != 'nn')) ? 4 : 0;",
          "842:         if ($directionCondition) {",
          "844:             $table_headers_html .= '<td ' . $colspan . '></td>';",
          "847:         } else {",
          "848:             $vertical_display['textbtn'] = '    <td' . $rowspan . '></td>' . \"\\n\";",
          "849:         } // end vertical mode",
          "851:     } elseif (($GLOBALS['cfg']['RowActionLinks'] == 'none')",
          "852:         && ($directionCondition)",
          "853:     ) {",
          "856:         $table_headers_html .= '<th></th>';",
          "857:     }",
          "867:     if ($GLOBALS['cfg']['ShowBrowseComments']",
          "868:         && ($direction != 'horizontalflipped')",
          "869:     ) {",
          "870:         $comments_map = array();",
          "871:         if (isset($analyzed_sql[0]) && is_array($analyzed_sql[0])) {",
          "872:             foreach ($analyzed_sql[0]['table_ref'] as $tbl) {",
          "873:                 $tb = $tbl['table_true_name'];",
          "874:                 $comments_map[$tb] = PMA_getComments($db, $tb);",
          "875:                 unset($tb);",
          "876:             }",
          "877:         }",
          "878:     }",
          "880:     if ($GLOBALS['cfgRelation']['commwork']",
          "881:         && $GLOBALS['cfgRelation']['mimework']",
          "882:         && $GLOBALS['cfg']['BrowseMIME']",
          "883:         && ! $_SESSION['tmp_user_values']['hide_transformation']",
          "884:     ) {",
          "885:         include_once './libraries/transformations.lib.php';",
          "886:         $GLOBALS['mime_map'] = PMA_getMIME($db, $table);",
          "887:     }",
          "891:     $highlight_columns = array();",
          "892:     if (isset($analyzed_sql) && isset($analyzed_sql[0])",
          "893:         && isset($analyzed_sql[0]['where_clause_identifiers'])",
          "894:     ) {",
          "896:         $wi = 0;",
          "897:         if (isset($analyzed_sql[0]['where_clause_identifiers'])",
          "898:             && is_array($analyzed_sql[0]['where_clause_identifiers'])",
          "900:             foreach ($analyzed_sql[0]['where_clause_identifiers']",
          "901:                 as $wci_nr => $wci",
          "903:                 $highlight_columns[$wci] = 'true';",
          "906:     }",
          "908:     list($col_order, $col_visib) = PMA_getColumnParams();",
          "910:     for ($j = 0; $j < $fields_cnt; $j++) {",
          "913:         $i = $col_order ? $col_order[$j] : $j;",
          "917:         $condition_field = (isset($highlight_columns[$fields_meta[$i]->name])",
          "918:             || isset($highlight_columns[PMA_backquote($fields_meta[$i]->name)]))",
          "919:             ? true",
          "920:             : false;",
          "923:         $comments = PMA_getCommentForRow($comments_map, $fields_meta[$i]);",
          "925:         if ($is_display['sort_lnk'] == '1') {",
          "934:             $sort_tbl = (isset($fields_meta[$i]->table)",
          "935:                 && strlen($fields_meta[$i]->table))",
          "936:                 ? PMA_backquote($fields_meta[$i]->table) . '.'",
          "937:                 : '';",
          "943:             $name_to_use_in_sort = $fields_meta[$i]->name;",
          "944:             $is_orgname = false;",
          "945:             if (isset($fields_meta[$i]->orgname)",
          "946:                 && strlen($fields_meta[$i]->orgname)",
          "947:             ) {",
          "948:                 $name_to_use_in_sort = $fields_meta[$i]->orgname;",
          "949:                 $is_orgname = true;",
          "950:             }",
          "955:             $name_to_use_in_sort = str_replace(' )', ')', $name_to_use_in_sort);",
          "957:             $is_in_sort = PMA_isInSorted(",
          "958:                 $sort_expression, $sort_expression_nodirection,",
          "959:                 $sort_tbl, $name_to_use_in_sort",
          "960:             );",
          "967:             if ((strpos($name_to_use_in_sort, '(') !== false) && ! $is_orgname) {",
          "968:                 $sort_order = \"\\n\" . 'ORDER BY ' . $name_to_use_in_sort . ' ';",
          "969:             } else {",
          "970:                 $sort_order = \"\\n\" . 'ORDER BY ' . $sort_tbl",
          "971:                     . PMA_backquote($name_to_use_in_sort) . ' ';",
          "972:             }",
          "973:             unset($name_to_use_in_sort);",
          "974:             unset($is_orgname);",
          "978:             list($sort_order, $order_img) = PMA_getSortingUrlParams(",
          "979:                 $is_in_sort, $sort_direction, $fields_meta[$i],",
          "980:                 $sort_order, $i",
          "981:             );",
          "983:             if (preg_match(",
          "984:                 '@(.*)([[:space:]](LIMIT (.*)|PROCEDURE (.*)|FOR UPDATE|'",
          "985:                 . 'LOCK IN SHARE MODE))@is',",
          "986:                 $unsorted_sql_query, $regs3",
          "987:             )) {",
          "988:                 $sorted_sql_query = $regs3[1] . $sort_order . $regs3[2];",
          "990:                 $sorted_sql_query = $unsorted_sql_query . $sort_order;",
          "991:             }",
          "993:             $_url_params = array(",
          "994:                 'db'                => $db,",
          "995:                 'table'             => $table,",
          "996:                 'sql_query'         => $sorted_sql_query,",
          "997:                 'session_max_rows'  => $session_max_rows",
          "998:             );",
          "999:             $order_url  = 'sql.php' . PMA_generate_common_url($_url_params);",
          "1003:             $order_link = PMA_getSortOrderLink(",
          "1004:                 $order_img, $i, $direction, $fields_meta[$i], $order_url",
          "1005:             );",
          "1007:             if ($directionCondition) {",
          "1008:                 $table_headers_html .= PMA_getDraggableClassForSortableColumns(",
          "1009:                     $col_visib, $col_visib[$j], $condition_field,",
          "1010:                     $direction, $fields_meta[$i], $order_link, $comments",
          "1011:                 );",
          "1012:             }",
          "1014:             $vertical_display['desc'][] = '    <th '",
          "1015:                 . 'class=\"draggable'",
          "1016:                 . ($condition_field ? ' condition' : '')",
          "1017:                 . '\" data-column=\"' . htmlspecialchars($fields_meta[$i]->name)",
          "1018:                 . '\">' . \"\\n\" . $order_link . $comments . '    </th>' . \"\\n\";",
          "1019:         } else {",
          "1023:                 $table_headers_html .= PMA_getDraggableClassForNonSortableColumns(",
          "1024:                     $col_visib, $col_visib[$j], $condition_field,",
          "1025:                     $direction, $fields_meta[$i], $comments",
          "1026:                 );",
          "1027:             }",
          "1029:             $vertical_display['desc'][] = '    <th '",
          "1030:                 . 'class=\"draggable'",
          "1031:                 . ($condition_field ? ' condition\"' : '')",
          "1032:                 . '\" data-column=\"' . htmlspecialchars($fields_meta[$i]->name)",
          "1033:                 . '\">' . \"\\n\" . '        ' . htmlspecialchars($fields_meta[$i]->name)",
          "1034:                 . \"\\n\" . $comments . '    </th>';",
          "1035:         } // end else (2.2)",
          "1036:     } // end for",
          "1040:     if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "1041:         || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "1042:         && (($is_display['edit_lnk'] != 'nn') || ($is_display['del_lnk'] != 'nn'))",
          "1043:         && ($is_display['text_btn'] == '1')",
          "1044:     ) {",
          "1046:         $vertical_display['emptyafter'] = (($is_display['edit_lnk'] != 'nn')",
          "1047:             && ($is_display['del_lnk'] != 'nn')) ? 4 : 1;",
          "1049:         if ($directionCondition) {",
          "1050:             $table_headers_html .= \"\\n\"",
          "1051:                 . '<th ' . $colspan . '>' . $full_or_partial_text_link",
          "1052:                 . '</th>';",
          "1055:         } else {",
          "1056:             $vertical_display['textbtn'] = '    <th ' . $rowspan",
          "1057:                 . ' class=\"vmiddle\">' . \"\\n\"",
          "1058:                 . '        ' . \"\\n\"",
          "1059:                 . '    </th>' . \"\\n\";",
          "1060:         } // end vertical mode",
          "1061:     } elseif ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "1062:         || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "1063:         && (($is_display['edit_lnk'] == 'nn') && ($is_display['del_lnk'] == 'nn'))",
          "1064:         && (! isset($GLOBALS['is_header_sent']) || ! $GLOBALS['is_header_sent'])",
          "1065:     ) {",
          "1069:         $vertical_display['emptyafter'] = (($is_display['edit_lnk'] != 'nn')",
          "1070:             && ($is_display['del_lnk'] != 'nn')) ? 4 : 1;",
          "1073:             $table_headers_html .= \"\\n\"",
          "1074:                 . '<td ' . $colspan . '></td>';",
          "1077:         } else {",
          "1078:             $vertical_display['textbtn'] = '    <td' . $rowspan . '></td>' . \"\\n\";",
          "1079:         } // end vertical mode",
          "1080:     }",
          "1082:     if ($directionCondition) {",
          "1083:         $table_headers_html .= '</tr>'",
          "1084:             . '</thead>';",
          "1085:     }",
          "1087:     return $table_headers_html;",
          "1089: } // end of the 'PMA_getTableHeaders()' function",
          "1105: function PMA_getSortByKeyDropDown(",
          "1106:     $db, $table, $indexes, $sort_expression, $unsorted_sql_query",
          "1107: ) {",
          "1109:     $drop_down_html = '';",
          "1111:     $drop_down_html .= '<form action=\"sql.php\" method=\"post\">' . \"\\n\"",
          "1112:         . PMA_generate_common_hidden_inputs($db, $table)",
          "1113:         . __('Sort by key')",
          "1114:         . ': <select name=\"sql_query\" class=\"autosubmit\">' . \"\\n\";",
          "1116:     $used_index = false;",
          "1117:     $local_order = (isset($sort_expression) ? $sort_expression : '');",
          "1119:     foreach ($indexes as $index) {",
          "1121:         $asc_sort = '`'",
          "1122:             . implode('` ASC, `', array_keys($index->getColumns()))",
          "1123:             . '` ASC';",
          "1125:         $desc_sort = '`'",
          "1126:             . implode('` DESC, `', array_keys($index->getColumns()))",
          "1127:             . '` DESC';",
          "1129:         $used_index = $used_index",
          "1130:             || ($local_order == $asc_sort)",
          "1131:             || ($local_order == $desc_sort);",
          "1133:         if (preg_match(",
          "1134:             '@(.*)([[:space:]](LIMIT (.*)|PROCEDURE (.*)|'",
          "1135:             . 'FOR UPDATE|LOCK IN SHARE MODE))@is',",
          "1136:             $unsorted_sql_query, $my_reg",
          "1137:         )) {",
          "1138:             $unsorted_sql_query_first_part = $my_reg[1];",
          "1139:             $unsorted_sql_query_second_part = $my_reg[2];",
          "1140:         } else {",
          "1141:             $unsorted_sql_query_first_part = $unsorted_sql_query;",
          "1142:             $unsorted_sql_query_second_part = '';",
          "1145:         $drop_down_html .= '<option value=\"'",
          "1146:             . htmlspecialchars(",
          "1147:                 $unsorted_sql_query_first_part  . \"\\n\"",
          "1148:                 . ' ORDER BY ' . $asc_sort",
          "1149:                 . $unsorted_sql_query_second_part",
          "1150:             )",
          "1151:             . '\"' . ($local_order == $asc_sort",
          "1152:                 ? ' selected=\"selected\"'",
          "1153:                 : '')",
          "1154:             . '>' . htmlspecialchars($index->getName()) . ' ('",
          "1155:             . __('Ascending') . ')</option>';",
          "1157:         $drop_down_html .= '<option value=\"'",
          "1158:             . htmlspecialchars(",
          "1159:                 $unsorted_sql_query_first_part . \"\\n\"",
          "1160:                 . ' ORDER BY ' . $desc_sort",
          "1161:                 . $unsorted_sql_query_second_part",
          "1162:             )",
          "1163:             . '\"' . ($local_order == $desc_sort",
          "1164:                 ? ' selected=\"selected\"'",
          "1165:                 : '')",
          "1166:             . '>' . htmlspecialchars($index->getName()) . ' ('",
          "1167:             . __('Descending') . ')</option>';",
          "1168:     }",
          "1170:     $drop_down_html .= '<option value=\"' . htmlspecialchars($unsorted_sql_query)",
          "1171:         . '\"' . ($used_index ? '' : ' selected=\"selected\"') . '>' . __('None')",
          "1172:         . '</option>'",
          "1173:         . '</select>' . \"\\n\"",
          "1174:         . '</form>' . \"\\n\";",
          "1176:     return $drop_down_html;",
          "1178: }",
          "1188: function PMA_getDataForResettingColumnOrder()",
          "1189: {",
          "1191:     $data_html = '';",
          "1194:     $pmatable = new PMA_Table($GLOBALS['table'], $GLOBALS['db']);",
          "1195:     $col_order = $pmatable->getUiProp(PMA_Table::PROP_COLUMN_ORDER);",
          "1197:     if ($col_order) {",
          "1198:         $data_html .= '<input id=\"col_order\" type=\"hidden\" value=\"'",
          "1199:             . implode(',', $col_order) . '\" />';",
          "1200:     }",
          "1202:     $col_visib = $pmatable->getUiProp(PMA_Table::PROP_COLUMN_VISIB);",
          "1204:     if ($col_visib) {",
          "1205:         $data_html .= '<input id=\"col_visib\" type=\"hidden\" value=\"'",
          "1206:             . implode(',', $col_visib) . '\" />';",
          "1207:     }",
          "1210:     if (! PMA_Table::isView($GLOBALS['table'], $GLOBALS['db'])) {",
          "1211:         $data_html .= '<input id=\"table_create_time\" type=\"hidden\" value=\"'",
          "1212:             . PMA_Table::sGetStatusInfo(",
          "1213:                 $GLOBALS['db'], $GLOBALS['table'], 'Create_time'",
          "1214:             ) . '\" />';",
          "1215:     }",
          "1217:     return $data_html;",
          "1219: }",
          "1234: function PMA_getOptionsBlock($db, $table, $sql_query, $goto)",
          "1235: {",
          "1237:     $options_html = '';",
          "1239:     $options_html .= '<form method=\"post\" action=\"sql.php\" '",
          "1240:         . 'name=\"displayOptionsForm\" '",
          "1241:         . 'id=\"displayOptionsForm\"';",
          "1243:     if ($GLOBALS['cfg']['AjaxEnable']) {",
          "1244:         $options_html .= ' class=\"ajax\" ';",
          "1245:     }",
          "1247:     $options_html .= '>';",
          "1248:     $url_params = array(",
          "1249:         'db' => $db,",
          "1250:         'table' => $table,",
          "1251:         'sql_query' => $sql_query,",
          "1252:         'goto' => $goto,",
          "1253:         'display_options_form' => 1",
          "1254:     );",
          "1256:     $options_html .= PMA_generate_common_hidden_inputs($url_params)",
          "1257:         . '<br />'",
          "1258:         . PMA_getDivForSliderEffect('displayoptions', __('Options'))",
          "1259:         . '<fieldset>';",
          "1261:     $options_html .= '<div class=\"formelement\">';",
          "1262:     $choices = array(",
          "1263:         'P'   => __('Partial texts'),",
          "1264:         'F'   => __('Full texts')",
          "1265:     );",
          "1267:     $options_html .= PMA_getRadioFields(",
          "1268:         'display_text', $choices,",
          "1269:         $_SESSION['tmp_user_values']['display_text']",
          "1270:     )",
          "1271:     . '</div>';",
          "1273:     if ($GLOBALS['cfgRelation']['relwork']",
          "1274:         && $GLOBALS['cfgRelation']['displaywork']",
          "1275:     ) {",
          "1278:             'K'   => __('Relational key'),",
          "1279:             'D'   => __('Relational display column')",
          "1283:             'relational_display', $choices,",
          "1284:             $_SESSION['tmp_user_values']['relational_display']",
          "1287:     }",
          "1289:     $options_html .= '<div class=\"formelement\">'",
          "1290:         . PMA_getCheckbox(",
          "1291:             'display_binary', __('Show binary contents'),",
          "1292:             ! empty($_SESSION['tmp_user_values']['display_binary']), false",
          "1293:         )",
          "1294:         . '<br />'",
          "1295:         . PMA_getCheckbox(",
          "1296:             'display_blob', __('Show BLOB contents'),",
          "1297:             ! empty($_SESSION['tmp_user_values']['display_blob']), false",
          "1298:         )",
          "1299:         . '<br />'",
          "1300:         . PMA_getCheckbox(",
          "1301:             'display_binary_as_hex', __('Show binary contents as HEX'),",
          "1302:             ! empty($_SESSION['tmp_user_values']['display_binary_as_hex']), false",
          "1303:         )",
          "1304:         . '</div>';",
          "1310:     $options_html .= '<div class=\"formelement\">'",
          "1311:         . PMA_getCheckbox(",
          "1312:             'hide_transformation', __('Hide browser transformation'),",
          "1313:             ! empty($_SESSION['tmp_user_values']['hide_transformation']), false",
          "1314:         )",
          "1315:         . '</div>';",
          "1317:     if (! PMA_DRIZZLE) {",
          "1318:         $options_html .= '<div class=\"formelement\">';",
          "1319:         $choices = array(",
          "1320:             'GEOM'  => __('Geometry'),",
          "1321:             'WKT'   => __('Well Known Text'),",
          "1322:             'WKB'   => __('Well Known Binary')",
          "1323:         );",
          "1325:         $options_html .= PMA_getRadioFields(",
          "1326:             'geometry_display', $choices,",
          "1327:             $_SESSION['tmp_user_values']['geometry_display']",
          "1328:         )",
          "1330:     }",
          "1332:     $options_html .= '<div class=\"clearfloat\"></div>'",
          "1333:         . '</fieldset>';",
          "1335:     $options_html .= '<fieldset class=\"tblFooters\">'",
          "1336:         . '<input type=\"submit\" value=\"' . __('Go') . '\" />'",
          "1337:         . '</fieldset>'",
          "1338:         . '</div>'",
          "1339:         . '</form>';",
          "1341:     return $options_html;",
          "1343: }",
          "1358: function PMA_getFullOrPartialTextButtonOrLink($db, $table, $sql_query, $goto)",
          "1359: {",
          "1361:     $url_params_full_text = array(",
          "1362:         'db' => $db,",
          "1363:         'table' => $table,",
          "1364:         'sql_query' => $sql_query,",
          "1365:         'goto' => $goto,",
          "1366:         'full_text_button' => 1",
          "1367:     );",
          "1369:     if ($_SESSION['tmp_user_values']['display_text'] == 'F') {",
          "1371:         $tmp_image_file = $GLOBALS['pmaThemeImage'] . 's_partialtext.png';",
          "1372:         $tmp_txt = __('Partial texts');",
          "1373:         $url_params_full_text['display_text'] = 'P';",
          "1374:     } else {",
          "1375:         $tmp_image_file = $GLOBALS['pmaThemeImage'] . 's_fulltext.png';",
          "1376:         $tmp_txt = __('Full texts');",
          "1377:         $url_params_full_text['display_text'] = 'F';",
          "1378:     }",
          "1380:     $tmp_image = '<img class=\"fulltext\" src=\"' . $tmp_image_file . '\" alt=\"'",
          "1381:                  . $tmp_txt . '\" title=\"' . $tmp_txt . '\" />';",
          "1382:     $tmp_url = 'sql.php' . PMA_generate_common_url($url_params_full_text);",
          "1384:     return PMA_linkOrButton($tmp_url, $tmp_image, array(), false);",
          "1386: }",
          "1400: function PMA_getFormForMultiRowOperations($db, $table, $del_lnk)",
          "1401: {",
          "1403:     $form_html = '';",
          "1405:     if (($del_lnk == 'dr') || ($del_lnk == 'kp')) {",
          "1407:         $form_html .= '<form method=\"post\" action=\"tbl_row_action.php\" '",
          "1408:             . 'name=\"resultsForm\" id=\"resultsForm\"';",
          "1411:             $form_html .= ' class=\"ajax\" ';",
          "1414:         $form_html .= '>' . \"\\n\"",
          "1415:             . PMA_generate_common_hidden_inputs($db, $table, 1)",
          "1416:             . '<input type=\"hidden\" name=\"goto\" value=\"sql.php\" />' . \"\\n\";",
          "1417:     }",
          "1419:     $form_html .= '<table id=\"table_results\" class=\"data';",
          "1420:     if ($GLOBALS['cfg']['AjaxEnable']) {",
          "1421:         $form_html .= ' ajax';",
          "1422:     }",
          "1423:     $form_html .= '\">' . \"\\n\";",
          "1425:     return $form_html;",
          "1427: }",
          "1440: function PMA_getCommentForRow($comments_map, $fields_meta)",
          "1441: {",
          "1442:     $comments = '';",
          "1443:     if (isset($comments_map)",
          "1444:         && isset($comments_map[$fields_meta->table])",
          "1445:         && isset($comments_map[$fields_meta->table][$fields_meta->name])",
          "1447:         $comments = '<span class=\"tblcomment\">'",
          "1448:             . htmlspecialchars(",
          "1449:                 $comments_map[$fields_meta->table][$fields_meta->name]",
          "1450:             )",
          "1451:             . '</span>';",
          "1452:     }",
          "1453:     return $comments;",
          "1454: }",
          "1469: function PMA_isInSorted(",
          "1470:     $sort_expression, $sort_expression_nodirection, $sort_tbl,",
          "1471:     $name_to_use_in_sort",
          "1472: ) {",
          "1474:     if (empty($sort_expression)) {",
          "1475:         $is_in_sort = false;",
          "1476:     } else {",
          "1486:         if (! empty($sort_tbl)",
          "1487:             && (strpos($sort_expression_nodirection, $sort_tbl) === false)",
          "1488:             && (strpos($sort_expression_nodirection, '(') === false)",
          "1489:         ) {",
          "1490:             $new_sort_expression_nodirection = $sort_tbl",
          "1491:                 . $sort_expression_nodirection;",
          "1493:             $new_sort_expression_nodirection = $sort_expression_nodirection;",
          "1494:         }",
          "1496:         $is_in_sort = false;",
          "1497:         $sort_name = str_replace('`', '', $sort_tbl) . $name_to_use_in_sort;",
          "1499:         if (($sort_name == str_replace('`', '', $new_sort_expression_nodirection))",
          "1500:             || ($sort_name == str_replace('`', '', $sort_expression_nodirection))",
          "1501:         ) {",
          "1502:             $is_in_sort = true;",
          "1504:     }",
          "1506:     return $is_in_sort;",
          "1508: }",
          "1524: function PMA_getSortingUrlParams(",
          "1525:     $is_in_sort, $sort_direction, $fields_meta, $sort_order, $column_index",
          "1526: ) {",
          "1528:     if (! $is_in_sort) {",
          "1531:         $GLOBALS['cfg']['Order'] = strtoupper($GLOBALS['cfg']['Order']);",
          "1533:         if ($GLOBALS['cfg']['Order'] === 'SMART') {",
          "1534:             $sort_order .= (preg_match(",
          "1535:                 '@time|date@i',",
          "1536:                 $fields_meta->type",
          "1537:             )) ? 'DESC' : 'ASC';",
          "1538:         } else {",
          "1539:             $sort_order .= $GLOBALS['cfg']['Order'];",
          "1540:         }",
          "1541:         $order_img   = '';",
          "1543:     } elseif ($sort_direction == 'DESC') {",
          "1545:         $sort_order .= ' ASC';",
          "1546:         $order_img   = ' ' . PMA_getImage(",
          "1547:             's_desc.png', __('Descending'),",
          "1548:             array('class' => \"soimg$column_index\", 'title' => '')",
          "1549:         );",
          "1551:         $order_img  .= ' ' . PMA_getImage(",
          "1552:             's_asc.png', __('Ascending'),",
          "1553:             array('class' => \"soimg$column_index hide\", 'title' => '')",
          "1554:         );",
          "1556:     } else {",
          "1558:         $sort_order .= ' DESC';",
          "1559:         $order_img   = ' ' . PMA_getImage(",
          "1560:             's_asc.png', __('Ascending'),",
          "1561:             array('class' => \"soimg$column_index\", 'title' => '')",
          "1562:         );",
          "1564:         $order_img  .= ' ' . PMA_getImage(",
          "1565:             's_desc.png', __('Descending'),",
          "1566:             array('class' => \"soimg$column_index hide\", 'title' => '')",
          "1567:         );",
          "1568:     }",
          "1570:     return array($sort_order, $order_img);",
          "1572: }",
          "1588: function PMA_getSortOrderLink(",
          "1589:     $order_img, $col_index, $direction, $fields_meta, $order_url",
          "1590: ) {",
          "1592:     $order_link_params = array();",
          "1594:     if (isset($order_img) && ($order_img != '')) {",
          "1595:         if (strstr($order_img, 'asc')) {",
          "1596:             $order_link_params['onmouseover'] = \"$('.soimg$col_index').toggle()\";",
          "1597:             $order_link_params['onmouseout']  = \"$('.soimg$col_index').toggle()\";",
          "1598:         } elseif (strstr($order_img, 'desc')) {",
          "1599:             $order_link_params['onmouseover'] = \"$('.soimg$col_index').toggle()\";",
          "1600:             $order_link_params['onmouseout']  = \"$('.soimg$col_index').toggle()\";",
          "1601:         }",
          "1602:     }",
          "1604:     if ($GLOBALS['cfg']['HeaderFlipType'] == 'auto') {",
          "1606:         $GLOBALS['cfg']['HeaderFlipType']",
          "1607:             = (PMA_USR_BROWSER_AGENT == 'IE') ? 'css' : 'fake';",
          "1608:     }",
          "1610:     if ($direction == 'horizontalflipped'",
          "1611:         && $GLOBALS['cfg']['HeaderFlipType'] == 'css'",
          "1612:     ) {",
          "1613:         $order_link_params['style'] = 'direction: ltr; writing-mode: tb-rl;';",
          "1614:     }",
          "1616:     $order_link_params['title'] = __('Sort');",
          "1618:     $order_link_content = (($direction == 'horizontalflipped')",
          "1619:         && ($GLOBALS['cfg']['HeaderFlipType'] == 'fake'))",
          "1620:         ? PMA_flipstring(",
          "1621:             htmlspecialchars($fields_meta->name),",
          "1622:             \"<br />\\n\"",
          "1623:         )",
          "1624:         : htmlspecialchars($fields_meta->name);",
          "1626:     return PMA_linkOrButton(",
          "1627:         $order_url, $order_link_content . $order_img,",
          "1628:         $order_link_params, false, true",
          "1629:     );",
          "1631: }",
          "1650: function PMA_getDraggableClassForSortableColumns(",
          "1651:     $col_visib, $col_visib_j, $condition_field, $direction, $fields_meta,",
          "1652:     $order_link, $comments",
          "1653: ) {",
          "1655:     $draggable_html = '<th';",
          "1656:     $th_class = array();",
          "1657:     $th_class[] = 'draggable';",
          "1659:     if ($col_visib && !$col_visib_j) {",
          "1660:         $th_class[] = 'hide';",
          "1661:     }",
          "1663:     if ($condition_field) {",
          "1664:         $th_class[] = 'condition';",
          "1665:     }",
          "1667:     $th_class[] = 'column_heading';",
          "1668:     if ($GLOBALS['cfg']['BrowsePointerEnable'] == true) {",
          "1669:         $th_class[] = 'pointer';",
          "1670:     }",
          "1672:     if ($GLOBALS['cfg']['BrowseMarkerEnable'] == true) {",
          "1673:         $th_class[] = 'marker';",
          "1674:     }",
          "1676:     $draggable_html .= ' class=\"' . implode(' ', $th_class);",
          "1678:     if ($direction == 'horizontalflipped') {",
          "1679:         $draggable_html .= ' vbottom';",
          "1680:     }",
          "1682:     $draggable_html .= '\" data-column=\"' . htmlspecialchars($fields_meta->name)",
          "1683:         . '\">' . $order_link . $comments . '</th>';",
          "1685:     return $draggable_html;",
          "1687: }",
          "1705: function PMA_getDraggableClassForNonSortableColumns(",
          "1706:     $col_visib, $col_visib_j, $condition_field,",
          "1707:     $direction, $fields_meta, $comments",
          "1708: ) {",
          "1710:     $draggable_html = '<th';",
          "1711:     $th_class = array();",
          "1712:     $th_class[] = 'draggable';",
          "1714:     if ($col_visib && !$col_visib_j) {",
          "1715:         $th_class[] = 'hide';",
          "1716:     }",
          "1718:     if ($condition_field) {",
          "1719:         $th_class[] = 'condition';",
          "1720:     }",
          "1722:     $draggable_html .= ' class=\"' . implode(' ', $th_class);",
          "1723:     if ($direction == 'horizontalflipped') {",
          "1724:         $draggable_html .= ' vbottom';",
          "1725:     }",
          "1727:     $draggable_html .= '\"';",
          "1728:     if (($direction == 'horizontalflipped')",
          "1729:         && ($GLOBALS['cfg']['HeaderFlipType'] == 'css')",
          "1730:     ) {",
          "1731:         $draggable_html .= ' style=\"direction: ltr; writing-mode: tb-rl;\"';",
          "1732:     }",
          "1734:     $draggable_html .= ' data-column=\"'",
          "1735:         . htmlspecialchars($fields_meta->name) . '\">';",
          "1737:     if (($direction == 'horizontalflipped')",
          "1738:         && ($GLOBALS['cfg']['HeaderFlipType'] == 'fake')",
          "1739:     ) {",
          "1741:         $draggable_html .= PMA_flipstring(",
          "1742:             htmlspecialchars($fields_meta->name), '<br />'",
          "1743:         );",
          "1745:     } else {",
          "1746:         $draggable_html .= htmlspecialchars($fields_meta->name);",
          "1747:     }",
          "1749:     $draggable_html .= \"\\n\" . $comments . '</th>';",
          "1751:     return $draggable_html;",
          "1753: }",
          "1765: function PMA_buildValueDisplay($class, $condition_field, $value)",
          "1766: {",
          "1767:     return '<td class=\"left ' . $class . ($condition_field ? ' condition' : '')",
          "1768:         . '\">' . $value . '</td>';",
          "1769: }",
          "1782: function PMA_buildNullDisplay($class, $condition_field, $meta, $align = '')",
          "1783: {",
          "1785:     return '<td ' . $align . ' class=\"'",
          "1786:         . PMA_addClass(",
          "1787:             $class, $condition_field, $meta, ''",
          "1788:         )",
          "1789:         . ' null\"><i>NULL</i></td>';",
          "1790: }",
          "1803: function PMA_buildEmptyDisplay($class, $condition_field, $meta, $align = '')",
          "1804: {",
          "1805:     return '<td ' . $align . ' class=\"'",
          "1806:         . PMA_addClass(",
          "1807:             $class, $condition_field, $meta, ' nowrap'",
          "1808:         )",
          "1809:         . '\"></td>';",
          "1810: }",
          "1826: function PMA_addClass($class, $condition_field, $meta, $nowrap,",
          "1827:     $is_field_truncated = false, $transform_function = '', $default_function = ''",
          "1828: ) {",
          "1831:     $enum_class = '';",
          "1832:     if (strpos($meta->flags, 'enum') !== false) {",
          "1833:         $enum_class = ' enum';",
          "1834:     }",
          "1836:     $set_class = '';",
          "1837:     if (strpos($meta->flags, 'set') !== false) {",
          "1838:         $set_class = ' set';",
          "1839:     }",
          "1841:     $bit_class = '';",
          "1842:     if (strpos($meta->type, 'bit') !== false) {",
          "1843:         $bit_class = ' bit';",
          "1844:     }",
          "1846:     $mime_type_class = '';",
          "1847:     if (isset($meta->mimetype)) {",
          "1848:         $mime_type_class = ' ' . preg_replace('/\\//', '_', $meta->mimetype);",
          "1849:     }",
          "1851:     return $class . ($condition_field ? ' condition' : '') . $nowrap",
          "1852:         . ' ' . ($is_field_truncated ? ' truncated' : '')",
          "1853:         . ($transform_function != $default_function ? ' transformed' : '')",
          "1854:         . $enum_class . $set_class . $bit_class . $mime_type_class;",
          "1856: }",
          "1886: function PMA_getTableBody(&$dt_result, &$is_display, $map, $analyzed_sql)",
          "1887: {",
          "1889:     global $db, $table, $goto;",
          "1890:     global $sql_query, $fields_meta, $fields_cnt;",
          "1891:     global $vertical_display, $highlight_columns;",
          "1892:     global $row; // mostly because of browser transformations,",
          "1895:     $table_body_html = '';",
          "1899:     $url_sql_query = PMA_getUrlSqlQuery($analyzed_sql, $sql_query);",
          "1901:     if (! is_array($map)) {",
          "1902:         $map = array();",
          "1903:     }",
          "1905:     $row_no                         = 0;",
          "1906:     $vertical_display['edit']       = array();",
          "1907:     $vertical_display['copy']       = array();",
          "1908:     $vertical_display['delete']     = array();",
          "1909:     $vertical_display['data']       = array();",
          "1910:     $vertical_display['row_delete'] = array();",
          "1912:     $grid_edit_class = 'grid_edit';",
          "1915:     list($col_order, $col_visib) = PMA_getColumnParams();",
          "1929:     $odd_row = true;",
          "1930:     $directionCondition",
          "1931:         = ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal')",
          "1932:         || ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped');",
          "1934:     while ($row = PMA_DBI_fetch_row($dt_result)) {",
          "1937:         $table_body_html .= PMA_getVerticalDisplaySupportSegments(",
          "1938:             $vertical_display, $row_no, $directionCondition",
          "1939:         );",
          "1941:         $alternating_color_class = ($odd_row ? 'odd' : 'even');",
          "1942:         $odd_row = ! $odd_row;",
          "1944:         if ($directionCondition) {",
          "1946:             $table_body_html .= '<tr class=\"' . $alternating_color_class . '\">';",
          "1957:         list($where_clause, $clause_is_unique, $condition_array)",
          "1958:             = PMA_getUniqueCondition($dt_result, $fields_cnt, $fields_meta, $row);",
          "1959:         $where_clause_html = urlencode($where_clause);",
          "1963:         if (($is_display['edit_lnk'] != 'nn') || ($is_display['del_lnk'] != 'nn')) {",
          "1967:             if ($GLOBALS['cfg']['PropertiesIconic'] === 'both') {",
          "1968:                 $iconic_spacer = '<div class=\"nowrap\">';",
          "1969:             } else {",
          "1970:                 $iconic_spacer = '';",
          "1974:             if ($is_display['edit_lnk'] == 'ur') { // update row case",
          "1976:                 list($edit_url, $copy_url, $edit_str, $copy_str, $edit_anchor_class)",
          "1977:                     = PMA_getModifiedLinks(",
          "1978:                         $db, $table, $where_clause,",
          "1979:                         $clause_is_unique, $url_sql_query",
          "1980:                     );",
          "1982:             } // end if (1.2.1)",
          "1985:             if (($is_display['del_lnk'] == 'dr')",
          "1986:                 || ($is_display['del_lnk'] == 'kp')",
          "1987:             ) {",
          "1989:                 list($del_query, $del_url, $del_str, $js_conf)",
          "1990:                     = PMA_getDeleteAndKillLinks(",
          "1991:                         $db, $table, $where_clause, $clause_is_unique,",
          "1992:                         $url_sql_query, $goto, $is_display['del_lnk']",
          "1993:                     );",
          "1995:             } // end if (1.2.2)",
          "1998:             if ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "1999:                 || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "2000:                 && $directionCondition",
          "2001:             ) {",
          "2003:                 $table_body_html .= PMA_getPlacedLinks(",
          "2004:                     'left', $del_url, $is_display, $row_no, $where_clause,",
          "2005:                     $where_clause_html, $condition_array, $del_query, 'l',",
          "2006:                     $edit_url, $copy_url, $edit_anchor_class, $edit_str,",
          "2007:                     $copy_str, $del_str, $js_conf",
          "2008:                 );",
          "2010:             } elseif (($GLOBALS['cfg']['RowActionLinks'] == 'none')",
          "2011:                 && $directionCondition",
          "2012:             ) {",
          "2014:                 $table_body_html .= PMA_getPlacedLinks(",
          "2015:                     'none', $del_url, $is_display, $row_no, $where_clause,",
          "2016:                     $where_clause_html, $condition_array, $del_query, 'l',",
          "2017:                     $edit_url, $copy_url, $edit_anchor_class, $edit_str,",
          "2018:                     $copy_str, $del_str, $js_conf",
          "2019:                 );",
          "2021:             } // end if (1.3)",
          "2022:         } // end if (1)",
          "2026:         for ($j = 0; $j < $fields_cnt; ++$j) {",
          "2029:             $i = $col_order ? $col_order[$j] : $j;",
          "2031:             $meta    = $fields_meta[$i];",
          "2032:             $not_null_class = $meta->not_null ? 'not_null' : '';",
          "2033:             $relation_class = isset($map[$meta->name]) ? 'relation' : '';",
          "2034:             $hide_class = ($col_visib && !$col_visib[$j]",
          "2036:                 && ($_SESSION['tmp_user_values']['disp_direction'] != 'vertical'))",
          "2037:                 ? 'hide'",
          "2038:                 : '';",
          "2041:             $field_type_class = PMA_getClassForDateTimeRelatedFields($meta->type);",
          "2043:             $pointer = $i;",
          "2044:             $is_field_truncated = false;",
          "2047:             $class = PMA_getResettedClassForInlineEdit(",
          "2048:                 $grid_edit_class, $not_null_class, $relation_class,",
          "2049:                 $hide_class, $field_type_class, $row_no",
          "2050:             );",
          "2054:             $condition_field = (isset($highlight_columns)",
          "2055:                 && (isset($highlight_columns[$meta->name])",
          "2056:                 || isset($highlight_columns[PMA_backquote($meta->name)])))",
          "2057:                 ? true",
          "2058:                 : false;",
          "2061:             $default_function = 'PMA_mimeDefaultFunction'; // default_function",
          "2062:             $transform_function = $default_function;",
          "2063:             $transform_options = array();",
          "2065:             if ($GLOBALS['cfgRelation']['mimework']",
          "2066:                 && $GLOBALS['cfg']['BrowseMIME']",
          "2067:             ) {",
          "2069:                 if (isset($GLOBALS['mime_map'][$meta->name]['mimetype'])",
          "2070:                     && isset($GLOBALS['mime_map'][$meta->name]['transformation'])",
          "2071:                     && !empty($GLOBALS['mime_map'][$meta->name]['transformation'])",
          "2072:                 ) {",
          "2074:                     $include_file = './libraries/transformations/' . PMA_securePath(",
          "2075:                         $GLOBALS['mime_map'][$meta->name]['transformation']",
          "2076:                     );",
          "2078:                     if (file_exists($include_file)) {",
          "2080:                         $transformfunction_name = 'PMA_transformation_'",
          "2081:                         . str_replace(",
          "2082:                             '.inc.php', '',",
          "2086:                         include_once $include_file;",
          "2088:                         if (function_exists($transformfunction_name)) {",
          "2090:                             $transform_function = $transformfunction_name;",
          "2092:                             $transform_options  = PMA_transformation_getOptions(",
          "2093:                                 isset($GLOBALS['mime_map'][$meta->name]",
          "2094:                                     ['transformation_options']",
          "2095:                                 )",
          "2096:                                 ? $GLOBALS['mime_map'][$meta->name]",
          "2097:                                 ['transformation_options']",
          "2098:                                 : ''",
          "2101:                             $meta->mimetype = str_replace(",
          "2102:                                 '_', '/',",
          "2103:                                 $GLOBALS['mime_map'][$meta->name]['mimetype']",
          "2104:                             );",
          "2105:                         }",
          "2106:                     } // end if file_exists",
          "2107:                 } // end if transformation is set",
          "2108:             } // end if mime/transformation works.",
          "2110:             $_url_params = array(",
          "2111:                 'db'            => $db,",
          "2112:                 'table'         => $table,",
          "2113:                 'where_clause'  => $where_clause,",
          "2114:                 'transform_key' => $meta->name,",
          "2115:             );",
          "2117:             if (! empty($sql_query)) {",
          "2118:                 $_url_params['sql_query'] = $url_sql_query;",
          "2119:             }",
          "2121:             $transform_options['wrapper_link']",
          "2122:                 = PMA_generate_common_url($_url_params);",
          "2124:             if ($meta->numeric == 1) {",
          "2132:                 $vertical_display['data'][$row_no][$i]",
          "2133:                     = PMA_getDataCellForNumericFeilds(",
          "2134:                         $row[$i], $class, $condition_field, $meta,",
          "2135:                         $analyzed_sql, $transform_function, $map,",
          "2136:                         $default_function, $transform_options, $is_field_truncated",
          "2137:                     );",
          "2139:             } elseif (stristr($meta->type, 'BLOB')) {",
          "2144:                 $field_flags = PMA_DBI_field_flags($dt_result, $i);",
          "2146:                 $vertical_display['data'][$row_no][$i]",
          "2147:                     = PMA_getDataCellForBlobField(",
          "2148:                         $row[$i], $class, $meta, $_url_params, $field_flags,",
          "2149:                         $transform_function, $default_function,",
          "2150:                         $transform_options, $condition_field, $is_field_truncated",
          "2151:                     );",
          "2153:             } elseif ($meta->type == 'geometry') {",
          "2158:                 $class = str_replace('grid_edit', '', $class);",
          "2160:                 $vertical_display['data'][$row_no][$i]",
          "2161:                     = PMA_getDataCellForGeometryFields(",
          "2162:                         $row[$i], $class, $meta, $map, $_url_params,",
          "2163:                         $condition_field, $transform_function, $default_function,",
          "2164:                         $transform_options, $is_field_truncated, $analyzed_sql",
          "2165:                     );",
          "2167:             } else {",
          "2170:                 $vertical_display['data'][$row_no][$i]",
          "2171:                     = PMA_getDataCellForNonNumericAndNonBlobFields(",
          "2172:                         $row[$i], $class, $meta, $map, $_url_params,",
          "2173:                         $condition_field, $transform_function, $default_function,",
          "2174:                         $transform_options, $is_field_truncated, $analyzed_sql,",
          "2175:                         $dt_result, $i",
          "2176:                     );",
          "2178:             }",
          "2181:             if ($directionCondition) {",
          "2182:                 $table_body_html .= $vertical_display['data'][$row_no][$i];",
          "2183:             }",
          "2185:             if (isset($vertical_display['rowdata'][$i][$row_no])) {",
          "2186:                 $vertical_display['rowdata'][$i][$row_no]",
          "2187:                     .= $vertical_display['data'][$row_no][$i];",
          "2188:             } else {",
          "2189:                 $vertical_display['rowdata'][$i][$row_no]",
          "2190:                     = $vertical_display['data'][$row_no][$i];",
          "2191:             }",
          "2192:         } // end for (2)",
          "2195:         if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "2196:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "2197:             && $directionCondition",
          "2198:         ) {",
          "2200:             $table_body_html .= PMA_getPlacedLinks(",
          "2201:                 'right', $del_url, $is_display, $row_no, $where_clause,",
          "2202:                 $where_clause_html, $condition_array, $del_query, 'r',",
          "2203:                 $edit_url, $copy_url, $edit_anchor_class, $edit_str,",
          "2204:                 $copy_str, $del_str, $js_conf",
          "2205:             );",
          "2207:         } // end if (3)",
          "2209:         if ($directionCondition) {",
          "2210:             $table_body_html .= '</tr>';",
          "2211:         } // end if",
          "2215:         if (! isset($vertical_display['edit'][$row_no])) {",
          "2216:             $vertical_display['edit'][$row_no]       = '';",
          "2217:             $vertical_display['copy'][$row_no]       = '';",
          "2218:             $vertical_display['delete'][$row_no]     = '';",
          "2219:             $vertical_display['row_delete'][$row_no] = '';",
          "2220:         }",
          "2222:         $vertical_class = ' row_' . $row_no;",
          "2223:         if ($GLOBALS['cfg']['BrowsePointerEnable'] == true) {",
          "2224:             $vertical_class .= ' vpointer';",
          "2225:         }",
          "2227:         if ($GLOBALS['cfg']['BrowseMarkerEnable'] == true) {",
          "2228:             $vertical_class .= ' vmarker';",
          "2229:         }",
          "2231:         if (!empty($del_url) && ($is_display['del_lnk'] != 'kp')) {",
          "2233:             $vertical_display['row_delete'][$row_no]",
          "2234:                 .= PMA_getCheckboxForMultiRowSubmissions(",
          "2235:                     $del_url, $is_display, $row_no, $where_clause_html,",
          "2236:                     $condition_array, $del_query, '[%_PMA_CHECKBOX_DIR_%]',",
          "2237:                     $alternating_color_class . $vertical_class",
          "2240:         } else {",
          "2241:             unset($vertical_display['row_delete'][$row_no]);",
          "2242:         }",
          "2244:         if (isset($edit_url)) {",
          "2246:             $vertical_display['edit'][$row_no] .= PMA_getEditLink(",
          "2247:                 $edit_url,",
          "2248:                 $alternating_color_class . ' ' . $edit_anchor_class",
          "2249:                 . $vertical_class, $edit_str,",
          "2250:                 $where_clause,",
          "2251:                 $where_clause_html",
          "2252:             );",
          "2254:         } else {",
          "2255:             unset($vertical_display['edit'][$row_no]);",
          "2256:         }",
          "2258:         if (isset($copy_url)) {",
          "2260:             $vertical_display['copy'][$row_no] .= PMA_getCopyLink(",
          "2261:                 $copy_url, $copy_str, $where_clause, $where_clause_html,",
          "2262:                 $alternating_color_class . $vertical_class",
          "2263:             );",
          "2265:         } else {",
          "2266:             unset($vertical_display['copy'][$row_no]);",
          "2267:         }",
          "2269:         if (isset($del_url)) {",
          "2271:             if (! isset($js_conf)) {",
          "2272:                 $js_conf = '';",
          "2275:             $vertical_display['delete'][$row_no] .= PMA_getDeleteLink(",
          "2276:                 $del_url, $del_str, $js_conf,",
          "2277:                 $alternating_color_class . $vertical_class",
          "2278:             );",
          "2280:         } else {",
          "2281:             unset($vertical_display['delete'][$row_no]);",
          "2282:         }",
          "2284:         $table_body_html .= $directionCondition ? \"\\n\" : '';",
          "2285:         $row_no++;",
          "2287:     } // end while",
          "2289:     return $table_body_html;",
          "2291: } // end of the 'PMA_getTableBody()' function",
          "2304: function PMA_getUrlSqlQuery($analyzed_sql, $sql_query)",
          "2305: {",
          "2307:     if (isset($analyzed_sql)",
          "2308:         && isset($analyzed_sql[0])",
          "2309:         && isset($analyzed_sql[0]['querytype'])",
          "2310:         && ($analyzed_sql[0]['querytype'] == 'SELECT')",
          "2311:         && (strlen($sql_query) > 200)",
          "2312:     ) {",
          "2314:         $url_sql_query = 'SELECT ';",
          "2315:         if (isset($analyzed_sql[0]['queryflags']['distinct'])) {",
          "2316:             $url_sql_query .= ' DISTINCT ';",
          "2317:         }",
          "2319:         $url_sql_query .= $analyzed_sql[0]['select_expr_clause'];",
          "2320:         if (!empty($analyzed_sql[0]['from_clause'])) {",
          "2321:             $url_sql_query .= ' FROM ' . $analyzed_sql[0]['from_clause'];",
          "2322:         }",
          "2324:         return $url_sql_query;",
          "2325:     }",
          "2327:     return $sql_query;",
          "2329: }",
          "2339: function PMA_getColumnParams()",
          "2340: {",
          "2341:     if (PMA_isSelect()) {",
          "2342:         $pmatable = new PMA_Table($GLOBALS['table'], $GLOBALS['db']);",
          "2343:         $col_order = $pmatable->getUiProp(PMA_Table::PROP_COLUMN_ORDER);",
          "2344:         $col_visib = $pmatable->getUiProp(PMA_Table::PROP_COLUMN_VISIB);",
          "2345:     } else {",
          "2346:         $col_order = false;",
          "2347:         $col_visib = false;",
          "2348:     }",
          "2350:     return array($col_order, $col_visib);",
          "2351: }",
          "2366: function PMA_getVerticalDisplaySupportSegments(",
          "2367:     $vertical_display, $row_no, $directionCondition",
          "2368: ) {",
          "2370:     $support_html = '';",
          "2372:     if ((($row_no != 0) && ($_SESSION['tmp_user_values']['repeat_cells'] != 0))",
          "2373:         && !($row_no % $_SESSION['tmp_user_values']['repeat_cells'])",
          "2374:         && $directionCondition",
          "2375:     ) {",
          "2377:         $support_html .= '<tr>' . \"\\n\";",
          "2379:         if ($vertical_display['emptypre'] > 0) {",
          "2381:             $support_html .= '    <th colspan=\"'",
          "2382:                 . $vertical_display['emptypre'] . '\">'",
          "2383:                 . \"\\n\".'        &nbsp;</th>' . \"\\n\";",
          "2385:         } else if ($GLOBALS['cfg']['RowActionLinks'] == 'none') {",
          "2386:             $support_html .= '    <th></th>' . \"\\n\";",
          "2389:         foreach ($vertical_display['desc'] as $val) {",
          "2390:             $support_html .= $val;",
          "2391:         }",
          "2393:         if ($vertical_display['emptyafter'] > 0) {",
          "2394:             $support_html .= '    <th colspan=\"' . $vertical_display['emptyafter']",
          "2395:                 . '\">'",
          "2396:                 . \"\\n\" . '        &nbsp;</th>' . \"\\n\";",
          "2397:         }",
          "2398:         $support_html .= '</tr>' . \"\\n\";",
          "2399:     } // end if",
          "2401:     return $support_html;",
          "2403: }",
          "2420: function PMA_getModifiedLinks(",
          "2421:     $db, $table, $where_clause, $clause_is_unique, $url_sql_query",
          "2422: ) {",
          "2424:     $_url_params = array(",
          "2425:             'db'               => $db,",
          "2426:             'table'            => $table,",
          "2427:             'where_clause'     => $where_clause,",
          "2428:             'clause_is_unique' => $clause_is_unique,",
          "2429:             'sql_query'        => $url_sql_query,",
          "2430:             'goto'             => 'sql.php',",
          "2431:         );",
          "2433:     $edit_url = 'tbl_change.php'",
          "2434:         . PMA_generate_common_url(",
          "2435:             $_url_params + array('default_action' => 'update')",
          "2436:         );",
          "2438:     $copy_url = 'tbl_change.php'",
          "2439:         . PMA_generate_common_url(",
          "2440:             $_url_params + array('default_action' => 'insert')",
          "2441:         );",
          "2443:     $edit_str = PMA_getIcon('b_edit.png', __('Edit'));",
          "2444:     $copy_str = PMA_getIcon('b_insrow.png', __('Copy'));",
          "2447:     $edit_anchor_class = \"edit_row_anchor\";",
          "2448:     if ( $clause_is_unique == 0) {",
          "2449:         $edit_anchor_class .= ' nonunique';",
          "2450:     }",
          "2452:     return array($edit_url, $copy_url, $edit_str, $copy_str, $edit_anchor_class);",
          "2454: }",
          "2473: function PMA_getDeleteAndKillLinks(",
          "2474:     $db, $table, $where_clause, $clause_is_unique, $url_sql_query, $goto, $del_lnk",
          "2475: ) {",
          "2477:     if ($del_lnk == 'dr') { // delete row case",
          "2480:                 'db'        => $db,",
          "2481:                 'table'     => $table,",
          "2482:                 'sql_query' => $url_sql_query,",
          "2483:                 'message_to_show' => __('The row has been deleted'),",
          "2484:                 'goto'      => (empty($goto) ? 'tbl_sql.php' : $goto),",
          "2487:         $lnk_goto = 'sql.php' . PMA_generate_common_url($_url_params, 'text');",
          "2489:         $del_query = 'DELETE FROM ' . PMA_backquote($db) . '.'",
          "2490:             . PMA_backquote($table)",
          "2491:             . ' WHERE ' . $where_clause .",
          "2492:             ($clause_is_unique ? '' : ' LIMIT 1');",
          "2494:         $_url_params = array(",
          "2495:                 'db'        => $db,",
          "2496:                 'table'     => $table,",
          "2497:                 'sql_query' => $del_query,",
          "2498:                 'message_to_show' => __('The row has been deleted'),",
          "2499:                 'goto'      => $lnk_goto,",
          "2501:         $del_url  = 'sql.php' . PMA_generate_common_url($_url_params);",
          "2503:         $js_conf  = 'DELETE FROM ' . PMA_jsFormat($db) . '.'",
          "2504:             . PMA_jsFormat($table)",
          "2505:             . ' WHERE ' . PMA_jsFormat($where_clause, false)",
          "2506:             . ($clause_is_unique ? '' : ' LIMIT 1');",
          "2508:         $del_str = PMA_getIcon('b_drop.png', __('Delete'));",
          "2510:     } elseif ($del_lnk == 'kp') { // kill process case",
          "2512:         $_url_params = array(",
          "2513:                 'db'        => $db,",
          "2514:                 'table'     => $table,",
          "2515:                 'sql_query' => $url_sql_query,",
          "2516:                 'goto'      => 'main.php',",
          "2517:             );",
          "2519:         $lnk_goto = 'sql.php'",
          "2520:             . PMA_generate_common_url(",
          "2521:                 $_url_params, 'text'",
          "2522:             );",
          "2524:         $_url_params = array(",
          "2525:                 'db'        => 'mysql',",
          "2526:                 'sql_query' => 'KILL ' . $row[0],",
          "2527:                 'goto'      => $lnk_goto,",
          "2528:             );",
          "2530:         $del_url  = 'sql.php' . PMA_generate_common_url($_url_params);",
          "2531:         $del_query = 'KILL ' . $row[0];",
          "2532:         $js_conf  = 'KILL ' . $row[0];",
          "2533:         $del_str = PMA_getIcon('b_drop.png', __('Kill'));",
          "2534:     }",
          "2536:     return array($del_query, $del_url, $del_str, $js_conf);",
          "2538: }",
          "2565: function PMA_getPlacedLinks(",
          "2566:     $dir, $del_url, $is_display, $row_no, $where_clause, $where_clause_html,",
          "2567:     $condition_array, $del_query, $dir_letter, $edit_url, $copy_url,",
          "2568:     $edit_anchor_class, $edit_str, $copy_str, $del_str, $js_conf",
          "2569: ) {",
          "2571:     if (! isset($js_conf)) {",
          "2572:         $js_conf = '';",
          "2573:     }",
          "2575:     return PMA_getCheckboxAndLinks(",
          "2576:         $dir, $del_url, $is_display,",
          "2577:         $row_no, $where_clause, $where_clause_html, $condition_array,",
          "2578:         $del_query, 'l', $edit_url, $copy_url, $edit_anchor_class,",
          "2579:         $edit_str, $copy_str, $del_str, $js_conf",
          "2580:     );",
          "2582: }",
          "2599: function PMA_getResettedClassForInlineEdit(",
          "2600:     $grid_edit_class, $not_null_class, $relation_class,",
          "2601:     $hide_class, $field_type_class, $row_no",
          "2602: ) {",
          "2604:     $class = 'data ' . $grid_edit_class . ' ' . $not_null_class . ' '",
          "2605:         . $relation_class . ' ' . $hide_class . ' ' . $field_type_class;",
          "2607:     if (($_SESSION['tmp_user_values']['disp_direction'] == 'vertical')",
          "2608:         && (! isset($GLOBALS['printview']) || ($GLOBALS['printview'] != '1'))",
          "2609:     ) {",
          "2611:         $class .= ' row_' . $row_no;",
          "2612:         if ($GLOBALS['cfg']['BrowsePointerEnable'] == true) {",
          "2613:             $class .= ' vpointer';",
          "2614:         }",
          "2616:         if ($GLOBALS['cfg']['BrowseMarkerEnable'] == true) {",
          "2617:             $class .= ' vmarker';",
          "2619:     }",
          "2621:     return $class;",
          "2623: }",
          "2635: function PMA_getClassForDateTimeRelatedFields($type)",
          "2636: {",
          "2637:     if ((substr($type, 0, 9) == 'timestamp') || ($type == 'datetime')) {",
          "2638:         $field_type_class = 'datetimefield';",
          "2639:     } else if ($type == 'date') {",
          "2640:         $field_type_class = 'datefield';",
          "2641:     } else {",
          "2642:         $field_type_class = '';",
          "2643:     }",
          "2644:     return $field_type_class;",
          "2645: }",
          "2666: function PMA_getDataCellForNumericFeilds(",
          "2667:     $column, $class, $condition_field, $meta, $map, $is_field_truncated,",
          "2668:     $analyzed_sql, $transform_function, $default_function, $transform_options",
          "2669: ) {",
          "2671:     if (! isset($column) || is_null($column)) {",
          "2673:         $cell = PMA_buildNullDisplay(",
          "2674:             'right '.$class, $condition_field, $meta, ''",
          "2675:         );",
          "2677:     } elseif ($column != '') {",
          "2679:         $nowrap = ' nowrap';",
          "2680:         $where_comparison = ' = ' . $column;",
          "2682:         $cell = PMA_getRowData(",
          "2683:             'right '.$class, $condition_field,",
          "2684:             $analyzed_sql, $meta, $map, $column,",
          "2685:             $transform_function, $default_function, $nowrap,",
          "2686:             $where_comparison, $transform_options,",
          "2687:             $is_field_truncated",
          "2688:         );",
          "2689:     } else {",
          "2691:         $cell = PMA_buildEmptyDisplay(",
          "2692:             'right '.$class, $condition_field, $meta, ''",
          "2693:         );",
          "2694:     }",
          "2696:     return $cell;",
          "2698: }",
          "2719: function PMA_getDataCellForBlobField(",
          "2720:     $column, $class, $meta, $_url_params, $field_flags, $transform_function,",
          "2721:     $default_function, $transform_options, $condition_field, $is_field_truncated",
          "2722: ) {",
          "2724:     if (stristr($field_flags, 'BINARY')) {",
          "2727:         $class = str_replace('grid_edit', '', $class);",
          "2731:             $cell = PMA_buildNullDisplay($class, $condition_field, $meta);",
          "2733:         } else {",
          "2735:             $blobtext = PMA_handleNonPrintableContents(",
          "2736:                 'BLOB', (isset($column) ? $column : ''),",
          "2737:                 $transform_function, $transform_options,",
          "2738:                 $default_function, $meta, $_url_params",
          "2741:             $cell = PMA_buildValueDisplay(",
          "2742:                 $class, $condition_field, $blobtext",
          "2744:             unset($blobtext);",
          "2746:     } else {",
          "2749:         if (! isset($column) || is_null($column)) {",
          "2751:             $cell = PMA_buildNullDisplay($class, $condition_field, $meta);",
          "2753:         } elseif ($column != '') {",
          "2757:             if ((PMA_strlen($column) > $GLOBALS['cfg']['LimitChars'])",
          "2758:                 && ($_SESSION['tmp_user_values']['display_text'] == 'P')",
          "2759:             ) {",
          "2760:                 $column = PMA_substr($column, 0, $GLOBALS['cfg']['LimitChars'])",
          "2761:                     . '...';",
          "2762:                 $is_field_truncated = true;",
          "2763:             }",
          "2767:             $column = ($default_function != $transform_function)",
          "2768:                 ? $transform_function($column, $transform_options, $meta)",
          "2769:                 : $default_function($column, array(), $meta);",
          "2771:             if ($is_field_truncated) {",
          "2772:                 $class .= ' truncated';",
          "2775:             $cell = PMA_buildValueDisplay($class, $condition_field, $column);",
          "2777:         } else {",
          "2778:             $cell = PMA_buildEmptyDisplay($class, $condition_field, $meta);",
          "2779:         }",
          "2780:     }",
          "2782:     return $cell;",
          "2784: }",
          "2806: function PMA_getDataCellForGeometryFields(",
          "2807:     $column, $class, $meta, $map, $_url_params, $condition_field,",
          "2808:     $transform_function, $default_function, $transform_options,",
          "2809:     $is_field_truncated, $analyzed_sql",
          "2810: ) {",
          "2812:     if (! isset($column) || is_null($column)) {",
          "2814:         $cell = PMA_buildNullDisplay($class, $condition_field, $meta);",
          "2816:     } elseif ($column != '') {",
          "2819:         if ($_SESSION['tmp_user_values']['geometry_display'] == 'GEOM') {",
          "2821:             $geometry_text = PMA_handleNonPrintableContents(",
          "2822:                 'GEOMETRY', (isset($column) ? $column : ''),",
          "2823:                 $transform_function, $transform_options,",
          "2824:                 $default_function, $meta",
          "2825:             );",
          "2827:             $cell = PMA_buildValueDisplay(",
          "2828:                 $class, $condition_field, $geometry_text",
          "2829:             );",
          "2831:         } elseif ($_SESSION['tmp_user_values']['geometry_display'] == 'WKT') {",
          "2834:             $where_comparison = ' = ' . $column;",
          "2837:             $wktval = PMA_asWKT($column);",
          "2839:             if ((PMA_strlen($wktval) > $GLOBALS['cfg']['LimitChars'])",
          "2840:                 && ($_SESSION['tmp_user_values']['display_text'] == 'P')",
          "2841:             ) {",
          "2842:                 $wktval = PMA_substr($wktval, 0, $GLOBALS['cfg']['LimitChars'])",
          "2843:                     . '...';",
          "2844:                 $is_field_truncated = true;",
          "2845:             }",
          "2847:             $cell = PMA_getRowData(",
          "2848:                 $class, $condition_field, $analyzed_sql, $meta, $map,",
          "2849:                 $wktval, $transform_function, $default_function, '',",
          "2850:                 $where_comparison, $transform_options,",
          "2851:                 $is_field_truncated",
          "2852:             );",
          "2854:         } else {",
          "2857:             if ($_SESSION['tmp_user_values']['display_binary']) {",
          "2861:                 if ($_SESSION['tmp_user_values']['display_binary_as_hex']",
          "2862:                     && PMA_containsNonPrintableAscii($column)",
          "2863:                 ) {",
          "2864:                     $wkbval = PMA_substr(bin2hex($column), 8);",
          "2865:                 } else {",
          "2866:                     $wkbval = htmlspecialchars(",
          "2867:                         PMA_replaceBinaryContents($column)",
          "2868:                     );",
          "2869:                 }",
          "2871:                 if ((PMA_strlen($wkbval) > $GLOBALS['cfg']['LimitChars'])",
          "2874:                     $wkbval = PMA_substr($wkbval, 0, $GLOBALS['cfg']['LimitChars'])",
          "2879:                 $cell = PMA_getRowData(",
          "2880:                     $class, $condition_field,",
          "2881:                     $analyzed_sql, $meta, $map, $wkbval,",
          "2882:                     $transform_function, $default_function, '',",
          "2888:                 $wkbval = PMA_handleNonPrintableContents(",
          "2889:                     'BINARY', $column, $transform_function,",
          "2890:                     $transform_options, $default_function, $meta,",
          "2891:                     $_url_params",
          "2892:                 );",
          "2894:                 $cell = PMA_buildValueDisplay($class, $condition_field, $wkbval);",
          "2897:     } else {",
          "2898:         $cell = PMA_buildEmptyDisplay($class, $condition_field, $meta);",
          "2899:     }",
          "2901:     return $cell;",
          "2903: }",
          "2928: function PMA_getDataCellForNonNumericAndNonBlobFields(",
          "2929:     $column, $class, $meta, $map, $_url_params, $condition_field,",
          "2930:     $transform_function, $default_function, $transform_options,",
          "2931:     $is_field_truncated, $analyzed_sql, &$dt_result, $col_index",
          "2932: ) {",
          "2934:     if (! isset($column) || is_null($column)) {",
          "2936:         $cell = PMA_buildNullDisplay($class, $condition_field, $meta);",
          "2938:     } elseif ($column != '') {",
          "2942:         if (PMA_strlen($column) > $GLOBALS['cfg']['LimitChars']",
          "2943:             && ($_SESSION['tmp_user_values']['display_text'] == 'P')",
          "2944:             && !strpos($transform_function, 'link') === true",
          "2945:         ) {",
          "2946:             $column = PMA_substr($column, 0, $GLOBALS['cfg']['LimitChars'])",
          "2947:                 . '...';",
          "2948:             $is_field_truncated = true;",
          "2949:         }",
          "2952:         $field_flags = PMA_DBI_field_flags($dt_result, $col_index);",
          "2953:         $formatted = false;",
          "2955:         if (isset($meta->_type) && $meta->_type === MYSQLI_TYPE_BIT) {",
          "2957:             $column = PMA_printableBitValue(",
          "2958:                 $column, $meta->length",
          "2959:             );",
          "2964:         } elseif (stristr($field_flags, 'BINARY')",
          "2965:             && ($meta->type == 'string')",
          "2966:             && !(isset($GLOBALS['is_analyse']) && $GLOBALS['is_analyse'])",
          "2967:         ) {",
          "2969:             if ($_SESSION['tmp_user_values']['display_binary']) {",
          "2973:                 if ($_SESSION['tmp_user_values']['display_binary_as_hex']",
          "2974:                     && PMA_containsNonPrintableAscii($column)",
          "2975:                 ) {",
          "2976:                     $column = bin2hex($column);",
          "2978:                     $column = htmlspecialchars(",
          "2979:                         PMA_replaceBinaryContents($column)",
          "2983:             } else {",
          "2986:                 $column = PMA_handleNonPrintableContents(",
          "2987:                     'BINARY', $column, $transform_function,",
          "2988:                     $transform_options, $default_function,",
          "2989:                     $meta, $_url_params",
          "2990:                 );",
          "2991:                 $formatted = true;",
          "2993:         }",
          "2995:         if ($formatted) {",
          "2997:             $cell = PMA_buildValueDisplay(",
          "2998:                 $class, $condition_field, $column",
          "2999:             );",
          "3001:         } else {",
          "3004:             $function_nowrap = $transform_function . '_nowrap';",
          "3006:             $bool_nowrap = (($default_function != $transform_function)",
          "3007:                 && function_exists($function_nowrap))",
          "3008:                 ? $function_nowrap($transform_options)",
          "3009:                 : false;",
          "3012:             $nowrap = (preg_match('@DATE|TIME@i', $meta->type)",
          "3013:                 || $bool_nowrap) ? ' nowrap' : '';",
          "3015:             $where_comparison = ' = \\'' . PMA_sqlAddSlashes($column)",
          "3016:                 . '\\'';",
          "3018:             $cell = PMA_getRowData(",
          "3019:                 $class, $condition_field,",
          "3020:                 $analyzed_sql, $meta, $map, $column,",
          "3021:                 $transform_function, $default_function, $nowrap,",
          "3022:                 $where_comparison, $transform_options,",
          "3023:                 $is_field_truncated",
          "3024:             );",
          "3027:     } else {",
          "3028:         $cell = PMA_buildEmptyDisplay($class, $condition_field, $meta);",
          "3029:     }",
          "3031:     return $cell;",
          "3033: }",
          "3047: function PMA_getVerticalTable()",
          "3048: {",
          "3050:     global $vertical_display;",
          "3052:     $vertical_table_html = '';",
          "3055:     if (($GLOBALS['cfg']['RowActionLinks'] != 'right')",
          "3056:         && is_array($vertical_display['row_delete'])",
          "3057:         && ((count($vertical_display['row_delete']) > 0)",
          "3058:         || !empty($vertical_display['textbtn']))",
          "3059:     ) {",
          "3061:         $vertical_table_html .= '<tr>' . \"\\n\";",
          "3062:         if ($GLOBALS['cfg']['RowActionLinks'] == 'none') {",
          "3065:             $vertical_table_html .= '<th></th>' . \"\\n\";",
          "3066:         }",
          "3068:         $vertical_table_html .= $vertical_display['textbtn']",
          "3069:                              . PMA_getCheckBoxesForMultipleRowOperations(",
          "3070:                                  $vertical_display, '_left'",
          "3071:                              )",
          "3072:                              . '</tr>' . \"\\n\";",
          "3073:     } // end if",
          "3076:     if ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "3077:         || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3078:         && is_array($vertical_display['edit'])",
          "3079:         && ((count($vertical_display['edit']) > 0)",
          "3080:         || !empty($vertical_display['textbtn']))",
          "3081:     ) {",
          "3082:         $vertical_table_html .= PMA_getOperationLinksForVerticleTable(",
          "3083:             $vertical_display, 'edit'",
          "3084:         );",
          "3085:     } // end if",
          "3088:     if ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "3089:         || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3090:         && is_array($vertical_display['copy'])",
          "3091:         && ((count($vertical_display['copy']) > 0)",
          "3092:         || !empty($vertical_display['textbtn']))",
          "3093:     ) {",
          "3094:         $vertical_table_html .= PMA_getOperationLinksForVerticleTable(",
          "3095:             $vertical_display, 'copy'",
          "3096:         );",
          "3097:     } // end if",
          "3100:     if ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "3101:         || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3102:         && is_array($vertical_display['delete'])",
          "3103:         && ((count($vertical_display['delete']) > 0)",
          "3104:         || !empty($vertical_display['textbtn']))",
          "3105:     ) {",
          "3106:         $vertical_table_html .= PMA_getOperationLinksForVerticleTable(",
          "3107:             $vertical_display, 'delete'",
          "3108:         );",
          "3109:     } // end if",
          "3111:     list($col_order, $col_visib) = PMA_getColumnParams();",
          "3114:     foreach ($vertical_display['desc'] AS $j => $val) {",
          "3117:         $key = $col_order ? $col_order[$j] : $j;",
          "3119:         $vertical_table_html .= '<tr'",
          "3120:             . (($col_visib && !$col_visib[$j]) ? ' class=\"hide\"' : '')",
          "3121:             . '>' . \"\\n\"",
          "3122:             . $val;",
          "3124:         $cell_displayed = 0;",
          "3125:         foreach ($vertical_display['rowdata'][$key] as $subval) {",
          "3127:             if (($cell_displayed != 0)",
          "3128:                 && ($_SESSION['tmp_user_values']['repeat_cells'] != 0)",
          "3129:                 && !($cell_displayed % $_SESSION['tmp_user_values']['repeat_cells'])",
          "3130:             ) {",
          "3131:                 $vertical_table_html .= $val;",
          "3132:             }",
          "3134:             $vertical_table_html .= $subval;",
          "3135:             $cell_displayed++;",
          "3137:         } // end while",
          "3139:         $vertical_table_html .= '</tr>' . \"\\n\";",
          "3140:     } // end while",
          "3143:     if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "3144:         || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3145:         && is_array($vertical_display['row_delete'])",
          "3146:         && ((count($vertical_display['row_delete']) > 0)",
          "3147:         || !empty($vertical_display['textbtn']))",
          "3148:     ) {",
          "3150:         $vertical_table_html .= '<tr>' . \"\\n\" . $vertical_display['textbtn']",
          "3151:                              . PMA_getCheckBoxesForMultipleRowOperations(",
          "3152:                                  $vertical_display, '_right'",
          "3153:                              )",
          "3154:                              . '</tr>' . \"\\n\";",
          "3155:     } // end if",
          "3158:     if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "3159:         || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3160:         && is_array($vertical_display['edit'])",
          "3161:         && ((count($vertical_display['edit']) > 0)",
          "3162:         || !empty($vertical_display['textbtn']))",
          "3163:     ) {",
          "3164:         $vertical_table_html .= PMA_getOperationLinksForVerticleTable(",
          "3165:             $vertical_display, 'edit'",
          "3166:         );",
          "3167:     } // end if",
          "3170:     if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "3171:         || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3172:         && is_array($vertical_display['copy'])",
          "3173:         && ((count($vertical_display['copy']) > 0)",
          "3174:         || !empty($vertical_display['textbtn']))",
          "3175:     ) {",
          "3176:         $vertical_table_html .= PMA_getOperationLinksForVerticleTable(",
          "3177:             $vertical_display, 'copy'",
          "3178:         );",
          "3179:     } // end if",
          "3182:     if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "3183:         || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3184:         && is_array($vertical_display['delete'])",
          "3185:         && ((count($vertical_display['delete']) > 0)",
          "3186:         || !empty($vertical_display['textbtn']))",
          "3187:     ) {",
          "3188:         $vertical_table_html .= PMA_getOperationLinksForVerticleTable(",
          "3189:             $vertical_display, 'delete'",
          "3190:         );",
          "3191:     }",
          "3193:     return $vertical_table_html;",
          "3195: } // end of the 'PMA_getVerticalTable' function",
          "3208: function PMA_getOperationLinksForVerticleTable($vertical_display, $operation)",
          "3209: {",
          "3211:     $link_html = '<tr>' . \"\\n\";",
          "3213:     if (! is_array($vertical_display['row_delete'])) {",
          "3215:         if (($operation == 'edit') || ($operation == 'copy')) {",
          "3216:             $link_html .= $vertical_display['textbtn'];",
          "3218:         } elseif ($operation == 'delete') {",
          "3220:             if (! is_array($vertical_display['edit'])) {",
          "3221:                 $link_html .= $vertical_display['textbtn'];",
          "3222:             }",
          "3223:         }",
          "3224:     }",
          "3226:     foreach ($vertical_display[$operation] as $val) {",
          "3227:         $link_html .= $val;",
          "3228:     } // end while",
          "3230:     $link_html .= '</tr>' . \"\\n\";",
          "3232:     return $link_html;",
          "3234: }",
          "3247: function PMA_getCheckBoxesForMultipleRowOperations($vertical_display, $dir)",
          "3248: {",
          "3250:     $checkBoxes_html = '';",
          "3251:     $cell_displayed = 0;",
          "3253:     foreach ($vertical_display['row_delete'] as $val) {",
          "3255:         if (($cell_displayed != 0)",
          "3256:             && ($_SESSION['tmp_user_values']['repeat_cells'] != 0)",
          "3257:             && !($cell_displayed % $_SESSION['tmp_user_values']['repeat_cells'])",
          "3258:         ) {",
          "3260:             $checkBoxes_html .= '<th'",
          "3261:                 . (($is_display['edit_lnk'] != 'nn')",
          "3262:                     && ($is_display['del_lnk'] != 'nn'))",
          "3263:                     ? ' rowspan=\"4\"'",
          "3264:                     : ''",
          "3265:                 . '></th>' . \"\\n\";",
          "3267:         }",
          "3269:         $checkBoxes_html .= str_replace('[%_PMA_CHECKBOX_DIR_%]', $dir, $val);",
          "3270:         $cell_displayed++;",
          "3271:     } // end while",
          "3273:     return $checkBoxes_html;",
          "3275: }",
          "3289: function PMA_setConfigParamsForDisplayTable()",
          "3290: {",
          "3292:     $sql_md5 = md5($GLOBALS['sql_query']);",
          "3294:     $_SESSION['tmp_user_values']['query'][$sql_md5]['sql'] = $GLOBALS['sql_query'];",
          "3296:     $valid_disp_dir = PMA_isValid(",
          "3297:         $_REQUEST['disp_direction'],",
          "3298:         array('horizontal', 'vertical', 'horizontalflipped')",
          "3299:     );",
          "3301:     if ($valid_disp_dir) {",
          "3302:         $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction']",
          "3303:             = $_REQUEST['disp_direction'];",
          "3304:         unset($_REQUEST['disp_direction']);",
          "3305:     } elseif (",
          "3306:         empty($_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction'])",
          "3307:     ) {",
          "3308:         $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction']",
          "3309:             = $GLOBALS['cfg']['DefaultDisplay'];",
          "3310:     }",
          "3312:     if (PMA_isValid($_REQUEST['repeat_cells'], 'numeric')) {",
          "3313:         $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells']",
          "3314:             = $_REQUEST['repeat_cells'];",
          "3315:         unset($_REQUEST['repeat_cells']);",
          "3316:     } elseif (",
          "3317:         empty($_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells'])",
          "3318:     ) {",
          "3319:         $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells']",
          "3320:             = $GLOBALS['cfg']['RepeatCells'];",
          "3321:     }",
          "3325:     if ((PMA_isValid($_REQUEST['session_max_rows'], 'numeric')",
          "3326:         && ((int) $_REQUEST['session_max_rows'] == $_REQUEST['session_max_rows']))",
          "3327:         || ($_REQUEST['session_max_rows'] == 'all')",
          "3328:     ) {",
          "3329:         $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows']",
          "3330:             = $_REQUEST['session_max_rows'];",
          "3331:         unset($_REQUEST['session_max_rows']);",
          "3332:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows'])) {",
          "3333:         $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows']",
          "3334:             = $GLOBALS['cfg']['MaxRows'];",
          "3335:     }",
          "3337:     if (PMA_isValid($_REQUEST['pos'], 'numeric')) {",
          "3338:         $_SESSION['tmp_user_values']['query'][$sql_md5]['pos'] = $_REQUEST['pos'];",
          "3339:         unset($_REQUEST['pos']);",
          "3340:     } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]['pos'])) {",
          "3341:         $_SESSION['tmp_user_values']['query'][$sql_md5]['pos'] = 0;",
          "3342:     }",
          "3344:     if (PMA_isValid($_REQUEST['display_text'], array('P', 'F'))) {",
          "3345:         $_SESSION['tmp_user_values']['query'][$sql_md5]['display_text']",
          "3346:             = $_REQUEST['display_text'];",
          "3347:         unset($_REQUEST['display_text']);",
          "3348:     } elseif (",
          "3349:         empty($_SESSION['tmp_user_values']['query'][$sql_md5]['display_text'])",
          "3350:     ) {",
          "3351:         $_SESSION['tmp_user_values']['query'][$sql_md5]['display_text'] = 'P';",
          "3352:     }",
          "3354:     if (PMA_isValid($_REQUEST['relational_display'], array('K', 'D'))) {",
          "3355:         $_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display']",
          "3356:             = $_REQUEST['relational_display'];",
          "3357:         unset($_REQUEST['relational_display']);",
          "3358:     } elseif (",
          "3359:         empty($_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display'])",
          "3360:     ) {",
          "3361:         $_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display'] = 'K';",
          "3362:     }",
          "3364:     if (PMA_isValid($_REQUEST['geometry_display'], array('WKT', 'WKB', 'GEOM'))) {",
          "3365:         $_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display']",
          "3366:             = $_REQUEST['geometry_display'];",
          "3367:         unset($_REQUEST['geometry_display']);",
          "3368:     } elseif (",
          "3369:         empty($_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'])",
          "3370:     ) {",
          "3371:         $_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'] = 'GEOM';",
          "3372:     }",
          "3374:     if (isset($_REQUEST['display_binary'])) {",
          "3375:         $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary'] = true;",
          "3376:         unset($_REQUEST['display_binary']);",
          "3377:     } elseif (isset($_REQUEST['display_options_form'])) {",
          "3379:         unset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary']);",
          "3380:     } elseif (isset($_REQUEST['full_text_button'])) {",
          "3382:     } else {",
          "3386:         $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary'] = true;",
          "3387:     }",
          "3389:     if (isset($_REQUEST['display_binary_as_hex'])) {",
          "3390:         $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex']",
          "3391:             = true;",
          "3392:         unset($_REQUEST['display_binary_as_hex']);",
          "3393:     } elseif (isset($_REQUEST['display_options_form'])) {",
          "3395:         unset(",
          "3396:             $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex']",
          "3397:         );",
          "3398:     } elseif (isset($_REQUEST['full_text_button'])) {",
          "3400:     } else {",
          "3402:         if (isset($GLOBALS['cfg']['DisplayBinaryAsHex'])",
          "3403:             && ($GLOBALS['cfg']['DisplayBinaryAsHex'] === true)",
          "3405:             $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex']",
          "3406:                 = true;",
          "3408:     }",
          "3410:     if (isset($_REQUEST['display_blob'])) {",
          "3411:         $_SESSION['tmp_user_values']['query'][$sql_md5]['display_blob'] = true;",
          "3412:         unset($_REQUEST['display_blob']);",
          "3413:     } elseif (isset($_REQUEST['display_options_form'])) {",
          "3415:         unset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_blob']);",
          "3416:     }",
          "3418:     if (isset($_REQUEST['hide_transformation'])) {",
          "3419:         $_SESSION['tmp_user_values']['query'][$sql_md5]['hide_transformation']",
          "3420:             = true;",
          "3421:         unset($_REQUEST['hide_transformation']);",
          "3422:     } elseif (isset($_REQUEST['display_options_form'])) {",
          "3424:         unset(",
          "3425:             $_SESSION['tmp_user_values']['query'][$sql_md5]['hide_transformation']",
          "3426:         );",
          "3427:     }",
          "3432:     $tmp = $_SESSION['tmp_user_values']['query'][$sql_md5];",
          "3433:     unset($_SESSION['tmp_user_values']['query'][$sql_md5]);",
          "3434:     $_SESSION['tmp_user_values']['query'][$sql_md5] = $tmp;",
          "3437:     if (count($_SESSION['tmp_user_values']['query']) > 10) {",
          "3438:         array_shift($_SESSION['tmp_user_values']['query']);",
          "3440:     }",
          "3443:     $_SESSION['tmp_user_values']['display_text']",
          "3444:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['display_text'];",
          "3445:     $_SESSION['tmp_user_values']['relational_display']",
          "3446:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display'];",
          "3447:     $_SESSION['tmp_user_values']['geometry_display']",
          "3448:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'];",
          "3449:     $_SESSION['tmp_user_values']['display_binary']",
          "3450:         = isset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary'])",
          "3451:         ? true",
          "3452:         : false;",
          "3453:     $_SESSION['tmp_user_values']['display_binary_as_hex']",
          "3454:         = isset(",
          "3456:         )",
          "3457:         ? true",
          "3458:         : false;",
          "3459:     $_SESSION['tmp_user_values']['display_blob']",
          "3460:         = isset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_blob'])",
          "3461:         ? true",
          "3462:         : false;",
          "3463:     $_SESSION['tmp_user_values']['hide_transformation']",
          "3464:         = isset(",
          "3465:             $_SESSION['tmp_user_values']['query'][$sql_md5]['hide_transformation']",
          "3466:         )",
          "3467:         ? true",
          "3468:         : false;",
          "3469:     $_SESSION['tmp_user_values']['pos']",
          "3470:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['pos'];",
          "3471:     $_SESSION['tmp_user_values']['max_rows']",
          "3472:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows'];",
          "3473:     $_SESSION['tmp_user_values']['repeat_cells']",
          "3474:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells'];",
          "3475:     $_SESSION['tmp_user_values']['disp_direction']",
          "3476:         = $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction'];",
          "3478: }",
          "3518: function PMA_getTable(&$dt_result, &$the_disp_mode, $analyzed_sql)",
          "3519: {",
          "3521:     global $db, $table, $goto;",
          "3522:     global $sql_query, $num_rows, $unlim_num_rows, $fields_meta, $fields_cnt;",
          "3523:     global $vertical_display, $highlight_columns;",
          "3524:     global $cfgRelation;",
          "3525:     global $showtable;",
          "3527:     $table_html = '';",
          "3536:     $is_innodb = (isset($showtable['Type']) && $showtable['Type'] == 'InnoDB');",
          "3538:     if ($is_innodb",
          "3539:         && ! isset($analyzed_sql[0]['queryflags']['union'])",
          "3540:         && ! isset($analyzed_sql[0]['table_ref'][1]['table_name'])",
          "3541:         && (empty($analyzed_sql[0]['where_clause'])",
          "3542:         || ($analyzed_sql[0]['where_clause'] == '1 '))",
          "3543:     ) {",
          "3545:         $pre_count = '~';",
          "3546:         $after_count = PMA_showHint(",
          "3547:             PMA_sanitize(",
          "3548:                 __('May be approximate. See [a@./Documentation.html#faq3_11@Documentation]FAQ 3.11[/a]')",
          "3549:             )",
          "3550:         );",
          "3551:     } else {",
          "3552:         $pre_count = '';",
          "3553:         $after_count = '';",
          "3554:     }",
          "3560:     $total      = '';",
          "3561:     $is_display = PMA_setDisplayMode($the_disp_mode, $total);",
          "3564:     if ($is_display['nav_bar'] == '1') {",
          "3565:         list($pos_next, $pos_prev) = PMA_getOffsets();",
          "3566:     } // end if",
          "3571:     list($sort_expression, $sort_expression_nodirection, $sort_direction)",
          "3572:         = PMA_getSortParams($analyzed_sql[0]['order_by_clause']);",
          "3577:     $sorted_column_message = PMA_getSortedColumnMessage(",
          "3578:         $dt_result, $fields_meta, $num_rows,",
          "3579:         $sort_expression_nodirection, $table",
          "3580:     );",
          "3586:     if (($is_display['nav_bar'] == '1') && isset($pos_next)) {",
          "3588:         $message = PMA_setMessageInformation(",
          "3589:             $db, $table, $sorted_column_message,",
          "3590:             $analyzed_sql[0]['limit_clause'], $unlim_num_rows,",
          "3591:             $total, $pos_next, $pre_count, $after_count",
          "3594:         $table_html .= PMA_getMessage($message, $sql_query, 'success');",
          "3596:     } elseif (! isset($GLOBALS['printview']) || ($GLOBALS['printview'] != '1')) {",
          "3598:         $table_html .= PMA_getMessage(",
          "3599:             __('Your SQL query has been executed successfully'),",
          "3600:             $sql_query, 'success'",
          "3601:         );",
          "3602:     }",
          "3605:     if (! strlen($table)) {",
          "3607:         if (isset($analyzed_sql[0]['query_type'])",
          "3608:             && ($analyzed_sql[0]['query_type'] == 'SELECT')",
          "3609:         ) {",
          "3613:             $table = $fields_meta[0]->table;",
          "3614:         } else {",
          "3615:             $table = '';",
          "3616:         }",
          "3618:     }",
          "3620:     if (($is_display['nav_bar'] == '1') && empty($analyzed_sql[0]['limit_clause'])) {",
          "3622:         $table_html .= PMA_getTableNavigation(",
          "3623:             $pos_next, $pos_prev, $sql_query, 'top_direction_dropdown'",
          "3624:         )",
          "3625:         . \"\\n\";",
          "3627:     } elseif (! isset($GLOBALS['printview']) || ($GLOBALS['printview'] != '1')) {",
          "3628:         $table_html .= \"\\n\" . '<br /><br />' . \"\\n\";",
          "3629:     }",
          "3635:     $map = array();",
          "3638:     $target=array();",
          "3639:     if (isset($analyzed_sql[0]['table_ref'])",
          "3640:         && is_array($analyzed_sql[0]['table_ref'])",
          "3641:     ) {",
          "3643:         foreach ($analyzed_sql[0]['table_ref']",
          "3644:             as $table_ref_position => $table_ref) {",
          "3645:             $target[] = $analyzed_sql[0]['table_ref']",
          "3646:                 [$table_ref_position]['table_true_name'];",
          "3649:     }",
          "3651:     $tabs    = '(\\'' . join('\\',\\'', $target) . '\\')';",
          "3653:     if (! strlen($table)) {",
          "3654:         $exist_rel = false;",
          "3655:     } else {",
          "3663:         $exist_rel = PMA_getForeigners($db, $table, '', 'both');",
          "3665:         if ($exist_rel) {",
          "3667:             foreach ($exist_rel as $master_field => $rel) {",
          "3669:                 $display_field = PMA_getDisplayField(",
          "3670:                     $rel['foreign_db'], $rel['foreign_table']",
          "3671:                 );",
          "3673:                 $map[$master_field] = array(",
          "3674:                         $rel['foreign_table'],",
          "3675:                         $rel['foreign_field'],",
          "3676:                         $display_field,",
          "3677:                         $rel['foreign_db']",
          "3678:                     );",
          "3679:             } // end while",
          "3680:         } // end if",
          "3681:     } // end if",
          "3685:     $table_html .= PMA_getTableHeaders(",
          "3686:         $is_display, $fields_meta, $fields_cnt, $analyzed_sql,",
          "3687:         $sort_expression, $sort_expression_nodirection, $sort_direction",
          "3688:     )",
          "3689:     . '<tbody>' . \"\\n\";",
          "3691:     $url_query = '';",
          "3692:     $table_html .= PMA_getTableBody(",
          "3693:         $dt_result, $is_display, $map, $analyzed_sql",
          "3694:     );",
          "3697:     if ($_SESSION['tmp_user_values']['disp_direction'] == 'vertical') {",
          "3698:         $table_html .= PMA_getVerticalTable();",
          "3699:     } // end if",
          "3701:     unset($vertical_display);",
          "3702:     $table_html .= '</tbody>' . \"\\n\"",
          "3703:         . '</table>';",
          "3707:     if ($is_display['del_lnk'] == 'dr' && $is_display['del_lnk'] != 'kp') {",
          "3709:         $table_html .= PMA_getMultiRowOperationLinks(",
          "3710:             $dt_result, $fields_cnt, $fields_meta, $num_rows, $analyzed_sql,",
          "3711:             $db, $table, $sql_query, $goto, $is_display['del_lnk']",
          "3714:     }",
          "3718:     if ($is_display['nav_bar'] == '1' && empty($analyzed_sql[0]['limit_clause'])) {",
          "3720:         $table_html .= '<br />' . \"\\n\";",
          "3721:         $table_html .= PMA_getTableNavigation(",
          "3722:             $pos_next, $pos_prev, $sql_query, 'bottom_direction_dropdown'",
          "3723:         );",
          "3725:     } elseif (! isset($GLOBALS['printview']) || $GLOBALS['printview'] != '1') {",
          "3726:         $table_html .= \"\\n\" . '<br /><br />' . \"\\n\";",
          "3727:     }",
          "3730:     if (! isset($GLOBALS['printview']) || $GLOBALS['printview'] != '1') {",
          "3731:         $table_html .= PMA_getResultsOperations($the_disp_mode, $analyzed_sql);",
          "3732:     }",
          "3734:     return $table_html;",
          "3736: } // end of the 'PMA_getTable()' function",
          "3746: function PMA_getOffsets()",
          "3747: {",
          "3749:     if ($_SESSION['tmp_user_values']['max_rows'] == 'all') {",
          "3750:         $pos_next     = 0;",
          "3751:         $pos_prev     = 0;",
          "3752:     } else {",
          "3754:         $pos_next     = $_SESSION['tmp_user_values']['pos']",
          "3755:                         + $_SESSION['tmp_user_values']['max_rows'];",
          "3757:         $pos_prev     = $_SESSION['tmp_user_values']['pos']",
          "3758:                         - $_SESSION['tmp_user_values']['max_rows'];",
          "3760:         if ($pos_prev < 0) {",
          "3761:             $pos_prev = 0;",
          "3762:         }",
          "3763:     }",
          "3765:     return array($pos_next, $pos_prev);",
          "3767: }",
          "3780: function PMA_getSortParams($order_by_clause)",
          "3781: {",
          "3783:     if (! empty($order_by_clause)) {",
          "3785:         $sort_expression = trim(",
          "3786:             str_replace('  ', ' ', $order_by_clause)",
          "3787:         );",
          "3791:         preg_match('@(.*)([[:space:]]*(ASC|DESC))@si', $sort_expression, $matches);",
          "3793:         $sort_expression_nodirection = isset($matches[1])",
          "3794:             ? trim($matches[1])",
          "3795:             : $sort_expression;",
          "3797:         $sort_direction = isset($matches[2]) ? trim($matches[2]) : '';",
          "3798:         unset($matches);",
          "3800:     } else {",
          "3801:         $sort_expression = $sort_expression_nodirection = $sort_direction = '';",
          "3802:     }",
          "3804:     return array($sort_expression, $sort_expression_nodirection, $sort_direction);",
          "3806: }",
          "3825: function PMA_getSortedColumnMessage(&$dt_result, $fields_meta,",
          "3826:     $num_rows, $sort_expression_nodirection, $table",
          "3827: ) {",
          "3829:     if (! empty($sort_expression_nodirection)) {",
          "3831:         if (strpos($sort_expression_nodirection, '.') === false) {",
          "3832:             $sort_table = $table;",
          "3833:             $sort_column = $sort_expression_nodirection;",
          "3835:             list($sort_table, $sort_column)",
          "3836:                 = explode('.', $sort_expression_nodirection);",
          "3839:         $sort_table = PMA_unQuote($sort_table);",
          "3840:         $sort_column = PMA_unQuote($sort_column);",
          "3844:         $sorted_column_index = false;",
          "3846:         foreach ($fields_meta as $key => $meta) {",
          "3847:             if (($meta->table == $sort_table) && ($meta->name == $sort_column)) {",
          "3848:                 $sorted_column_index = $key;",
          "3849:                 break;",
          "3851:         }",
          "3853:         if ($sorted_column_index !== false) {",
          "3856:             $row = PMA_DBI_fetch_row($dt_result);",
          "3859:             $default_function = 'PMA_mimeDefaultFunction';",
          "3860:             $transform_function = $default_function;",
          "3861:             $transform_options = array();",
          "3864:             $meta = $fields_meta[$sorted_column_index];",
          "3866:             if (stristr($meta->type, 'BLOB') || ($meta->type == 'geometry')) {",
          "3868:                 $column_for_first_row = PMA_handleNonPrintableContents(",
          "3869:                     $meta->type, $row[$sorted_column_index], $transform_function,",
          "3870:                     $transform_options, $default_function, $meta, null",
          "3871:                 );",
          "3873:             } else {",
          "3874:                 $column_for_first_row = $row[$sorted_column_index];",
          "3875:             }",
          "3877:             $column_for_first_row = strtoupper(",
          "3878:                 substr($column_for_first_row, 0, $GLOBALS['cfg']['LimitChars'])",
          "3879:             );",
          "3882:             PMA_DBI_data_seek($dt_result, $num_rows - 1);",
          "3883:             $row = PMA_DBI_fetch_row($dt_result);",
          "3886:             $meta = $fields_meta[$sorted_column_index];",
          "3887:             if (stristr($meta->type, 'BLOB') || ($meta->type == 'geometry')) {",
          "3889:                 $column_for_last_row = PMA_handleNonPrintableContents(",
          "3890:                     $meta->type, $row[$sorted_column_index], $transform_function,",
          "3891:                     $transform_options, $default_function, $meta, null",
          "3894:             } else {",
          "3895:                 $column_for_last_row = $row[$sorted_column_index];",
          "3896:             }",
          "3898:             $column_for_last_row = strtoupper(",
          "3899:                 substr($column_for_last_row, 0, $GLOBALS['cfg']['LimitChars'])",
          "3900:             );",
          "3903:             PMA_DBI_data_seek($dt_result, 0);",
          "3906:             return ' [' . htmlspecialchars($sort_column)",
          "3907:                 . ': <strong>' . htmlspecialchars($column_for_first_row) . ' - '",
          "3908:                 . htmlspecialchars($column_for_last_row) . '</strong>]';",
          "3909:         }",
          "3910:     }",
          "3912:     return null;",
          "3914: }",
          "3938: function PMA_setMessageInformation(",
          "3939:     $db, $table, $sorted_column_message, $limit_clause, $unlim_num_rows,",
          "3940:     $total, $pos_next, $pre_count, $after_count",
          "3941: ) {",
          "3943:     if (isset($unlim_num_rows) && ($unlim_num_rows != $total)) {",
          "3944:         $selectstring = ', ' . $unlim_num_rows . ' ' . __('in query');",
          "3945:     } else {",
          "3946:         $selectstring = '';",
          "3947:     }",
          "3949:     if (! empty($limit_clause)) {",
          "3951:         $limit_data = PMA_analyzeLimitClause($limit_clause);",
          "3952:         $first_shown_rec = $limit_data['start'];",
          "3954:         if ($limit_data['length'] < $total) {",
          "3955:             $last_shown_rec = $limit_data['start'] + $limit_data['length'] - 1;",
          "3957:             $last_shown_rec = $limit_data['start'] + $total - 1;",
          "3960:     } elseif (($_SESSION['tmp_user_values']['max_rows'] == 'all')",
          "3961:         || ($pos_next > $total)",
          "3962:     ) {",
          "3964:         $first_shown_rec = $_SESSION['tmp_user_values']['pos'];",
          "3965:         $last_shown_rec  = $total - 1;",
          "3967:     } else {",
          "3969:         $first_shown_rec = $_SESSION['tmp_user_values']['pos'];",
          "3970:         $last_shown_rec  = $pos_next - 1;",
          "3972:     }",
          "3974:     if (PMA_Table::isView($db, $table)",
          "3975:         && ($total == $GLOBALS['cfg']['MaxExactCountViews'])",
          "3976:     ) {",
          "3978:         $message = PMA_Message::notice(",
          "3979:             __('This view has at least this number of rows. Please refer to %sdocumentation%s.')",
          "3980:         );",
          "3982:         $message->addParam('[a@./Documentation.html#cfg_MaxExactCount@_blank]');",
          "3983:         $message->addParam('[/a]');",
          "3984:         $message_view_warning = PMA_showHint($message);",
          "3986:     } else {",
          "3987:         $message_view_warning = false;",
          "3988:     }",
          "3990:     $message = PMA_Message::success(__('Showing rows'));",
          "3991:     $message->addMessage($first_shown_rec);",
          "3993:     if ($message_view_warning) {",
          "3995:         $message->addMessage('...', ' - ');",
          "3996:         $message->addMessage($message_view_warning);",
          "3997:         $message->addMessage('(');",
          "3999:     } else {",
          "4001:         $message->addMessage($last_shown_rec, ' - ');",
          "4002:         $message->addMessage(' (');",
          "4003:         $message->addMessage($pre_count  . PMA_formatNumber($total, 0));",
          "4004:         $message->addString(__('total'));",
          "4006:         if (!empty($after_count)) {",
          "4007:             $message->addMessage($after_count);",
          "4008:         }",
          "4010:         $message->addMessage($selectstring, '');",
          "4011:         $message->addMessage(', ', '');",
          "4013:     }",
          "4015:     $messagge_qt = PMA_Message::notice(__('Query took %01.4f sec') . ')');",
          "4016:     $messagge_qt->addParam($GLOBALS['querytime']);",
          "4018:     $message->addMessage($messagge_qt, '');",
          "4019:     if (! is_null($sorted_column_message)) {",
          "4020:         $message->addMessage($sorted_column_message, '');",
          "4021:     }",
          "4023:     return $message;",
          "4025: }",
          "4049: function PMA_getMultiRowOperationLinks(",
          "4050:     &$dt_result, $fields_cnt, $fields_meta, $num_rows, $analyzed_sql,",
          "4051:     $db, $table, $sql_query, $goto, $del_link",
          "4052: ) {",
          "4054:     $links_html = '';",
          "4055:     $delete_text = ($del_link == 'dr') ? __('Delete') : __('Kill');",
          "4057:     $_url_params = array(",
          "4058:         'db'        => $db,",
          "4059:         'table'     => $table,",
          "4060:         'sql_query' => $sql_query,",
          "4061:         'goto'      => $goto,",
          "4062:     );",
          "4063:     $uncheckall_url = 'sql.php' . PMA_generate_common_url($_url_params);",
          "4065:     $_url_params['checkall'] = '1';",
          "4066:     $checkall_url = 'sql.php' . PMA_generate_common_url($_url_params);",
          "4068:     if ($_SESSION['tmp_user_values']['disp_direction'] == 'vertical') {",
          "4070:         $checkall_params['onclick']",
          "4071:             = 'if (setCheckboxes(\\'resultsForm\\', true)) return false;';",
          "4072:         $uncheckall_params['onclick']",
          "4073:             = 'if (setCheckboxes(\\'resultsForm\\', false)) return false;';",
          "4075:     } else {",
          "4077:         $checkall_params['onclick']",
          "4078:             = 'if (markAllRows(\\'resultsForm\\')) return false;';",
          "4079:         $uncheckall_params['onclick']",
          "4080:             = 'if (unMarkAllRows(\\'resultsForm\\')) return false;';",
          "4082:     }",
          "4084:     $checkall_link = PMA_linkOrButton(",
          "4085:         $checkall_url, __('Check All'), $checkall_params, false",
          "4086:     );",
          "4088:     $uncheckall_link = PMA_linkOrButton(",
          "4089:         $uncheckall_url, __('Uncheck All'), $uncheckall_params, false",
          "4090:     );",
          "4092:     if ($_SESSION['tmp_user_values']['disp_direction'] != 'vertical') {",
          "4094:         $links_html .= '<img class=\"selectallarrow\" width=\"38\" height=\"22\"'",
          "4095:             . ' src=\"' . $GLOBALS['pmaThemeImage'] . 'arrow_'",
          "4096:             . $GLOBALS['text_dir'] . '.png' . '\"'",
          "4097:             . ' alt=\"' . __('With selected:') . '\" />';",
          "4098:     }",
          "4100:     $links_html .= $checkall_link . \"\\n\"",
          "4101:         . ' / ' . \"\\n\"",
          "4102:         . $uncheckall_link . \"\\n\"",
          "4103:         . '<i>' . __('With selected:') . '</i>' . \"\\n\";",
          "4105:     $links_html .= PMA_getButtonOrImage(",
          "4106:         'submit_mult', 'mult_submit', 'submit_mult_change',",
          "4107:         __('Change'), 'b_edit.png', 'edit'",
          "4108:     );",
          "4110:     $links_html .= PMA_getButtonOrImage(",
          "4111:         'submit_mult', 'mult_submit', 'submit_mult_delete',",
          "4112:         $delete_text, 'b_drop.png', 'delete'",
          "4113:     );",
          "4115:     if (isset($analyzed_sql[0]) && $analyzed_sql[0]['querytype'] == 'SELECT') {",
          "4117:             'submit_mult', 'mult_submit', 'submit_mult_export',",
          "4118:             __('Export'), 'b_tblexport.png', 'export'",
          "4120:     }",
          "4122:     $links_html .= \"\\n\";",
          "4124:     $links_html .= '<input type=\"hidden\" name=\"sql_query\"'",
          "4125:         .' value=\"' . htmlspecialchars($sql_query) . '\" />' . \"\\n\";",
          "4127:     if (! empty($GLOBALS['url_query'])) {",
          "4128:         $links_html .= '<input type=\"hidden\" name=\"url_query\"'",
          "4129:             .' value=\"' . $GLOBALS['url_query'] . '\" />' . \"\\n\";",
          "4130:     }",
          "4133:     PMA_DBI_data_seek($dt_result, $num_rows - 1);",
          "4134:     $row = PMA_DBI_fetch_row($dt_result);",
          "4138:     list($where_clause, $clause_is_unique, $condition_array)",
          "4139:         = PMA_getUniqueCondition($dt_result, $fields_cnt, $fields_meta, $row);",
          "4142:     PMA_DBI_data_seek($dt_result, 0);",
          "4144:     $links_html .= '<input type=\"hidden\" name=\"clause_is_unique\"'",
          "4145:         .' value=\"' . $clause_is_unique . '\" />' . \"\\n\";",
          "4147:     $links_html .= '</form>' . \"\\n\";",
          "4149:     return $links_html;",
          "4151: }",
          "4161: function PMA_mimeDefaultFunction($buffer)",
          "4162: {",
          "4163:     $buffer = htmlspecialchars($buffer);",
          "4164:     $buffer = str_replace(",
          "4165:         \"\\011\",",
          "4166:         ' &nbsp;&nbsp;&nbsp;',",
          "4167:         str_replace('  ', ' &nbsp;', $buffer)",
          "4168:     );",
          "4169:     $buffer = preg_replace(\"@((\\015\\012)|(\\015)|(\\012))@\", '<br />', $buffer);",
          "4171:     return $buffer;",
          "4172: }",
          "4198: function PMA_getResultsOperations($the_disp_mode, $analyzed_sql)",
          "4199: {",
          "4201:     global $db, $table, $sql_query, $unlim_num_rows, $fields_meta;",
          "4203:     $results_operations_html = '';",
          "4204:     $header_shown = false;",
          "4205:     $header = '<fieldset><legend>' . __('Query results operations') . '</legend>';",
          "4207:     if (($the_disp_mode[6] == '1') || ($the_disp_mode[9] == '1')) {",
          "4209:         if ($the_disp_mode[9] == '1') {",
          "4216:             $_url_params = array(",
          "4217:                 'db'        => $db,",
          "4218:                 'table'     => $table,",
          "4219:                 'printview' => '1',",
          "4220:                 'sql_query' => $sql_query,",
          "4221:             );",
          "4222:             $url_query = PMA_generate_common_url($_url_params);",
          "4225:                 'sql.php' . $url_query,",
          "4226:                 PMA_getIcon('b_print.png', __('Print view'), true),",
          "4227:                 '', true, true, 'print_view'",
          "4231:             if ($_SESSION['tmp_user_values']['display_text']) {",
          "4233:                 $_url_params['display_text'] = 'F';",
          "4236:                     'sql.php' . PMA_generate_common_url($_url_params),",
          "4237:                     PMA_getIcon(",
          "4238:                         'b_print.png', __('Print view (with full texts)'), true",
          "4239:                     ),",
          "4240:                     '', true, true, 'print_view'",
          "4243:                 unset($_url_params['display_text']);",
          "4245:         } // end displays \"printable view\"",
          "4246:     }",
          "4255:     if (isset($analyzed_sql[0])",
          "4256:         && ($analyzed_sql[0]['querytype'] == 'SELECT')",
          "4257:         && ! isset($printview)",
          "4258:         && ! isset($analyzed_sql[0]['queryflags']['procedure'])",
          "4259:     ) {",
          "4261:         if (isset($analyzed_sql[0]['table_ref'][0]['table_true_name'])",
          "4262:             && ! isset($analyzed_sql[0]['table_ref'][1]['table_true_name'])",
          "4263:         ) {",
          "4264:             $_url_params['single_table'] = 'true';",
          "4272:         $_url_params['unlim_num_rows'] = $unlim_num_rows;",
          "4282:         if (empty($_url_params['table']) && !empty($_url_params['db'])) {",
          "4283:             $_url_params['table'] = PMA_DBI_fetch_value(\"SHOW TABLES\");",
          "4285:             if ($_url_params['table'] === false) {",
          "4286:                 unset($_url_params['table']);",
          "4287:             }",
          "4288:         }",
          "4290:         $results_operations_html .= PMA_linkOrButton(",
          "4291:             'tbl_export.php' . PMA_generate_common_url($_url_params),",
          "4292:             PMA_getIcon('b_tblexport.png', __('Export'), true),",
          "4293:             '', true, true, ''",
          "4294:         )",
          "4295:         . \"\\n\";",
          "4298:         $results_operations_html .= PMA_linkOrButton(",
          "4299:             'tbl_chart.php' . PMA_generate_common_url($_url_params),",
          "4300:             PMA_getIcon('b_chart.png', __('Display chart'), true),",
          "4301:             '', true, true, ''",
          "4302:         )",
          "4303:         . \"\\n\";",
          "4306:         $geometry_found = false;",
          "4308:         foreach ($fields_meta as $meta) {",
          "4309:             if ($meta->type == 'geometry') {",
          "4310:                 $geometry_found = true;",
          "4311:                 break;",
          "4312:             }",
          "4315:         if ($geometry_found) {",
          "4316:             $results_operations_html .= PMA_linkOrButton(",
          "4317:                 'tbl_gis_visualization.php' . PMA_generate_common_url($_url_params),",
          "4318:                 PMA_getIcon('b_globe.gif', __('Visualize GIS data'), true),",
          "4319:                 '', true, true, ''",
          "4320:             )",
          "4321:             . \"\\n\";",
          "4323:     }",
          "4333:     if (!$header_shown) {",
          "4334:         $results_operations_html .= $header;",
          "4335:         $header_shown = true;",
          "4336:     }",
          "4338:     if (!PMA_DRIZZLE && !isset($analyzed_sql[0]['queryflags']['procedure'])) {",
          "4340:         $ajax_class = $GLOBALS['cfg']['AjaxEnable'] ? ' ajax' : '';",
          "4342:         $results_operations_html .= '<span class=\"create_view' . $ajax_class . '\">'",
          "4343:             . PMA_linkOrButton(",
          "4344:                 'view_create.php' . $url_query,",
          "4345:                 PMA_getIcon('b_views.png', __('Create view'), true),",
          "4346:                 '', true, true, ''",
          "4347:             )",
          "4348:             . '</span>' . \"\\n\";",
          "4349:     }",
          "4351:     if ($header_shown) {",
          "4352:         $results_operations_html .= '</fieldset><br />';",
          "4353:     }",
          "4355:     return $results_operations_html;",
          "4357: }",
          "4374: function PMA_handleNonPrintableContents($category, $content, $transform_function,",
          "4375:     $transform_options, $default_function, $meta, $url_params = array()",
          "4376: ) {",
          "4378:     $result = '[' . $category;",
          "4380:     if (is_null($content)) {",
          "4382:         $result .= ' - NULL';",
          "4383:         $size = 0;",
          "4385:     } elseif (isset($content)) {",
          "4387:         $size = strlen($content);",
          "4388:         $display_size = PMA_formatByteDown($size, 3, 1);",
          "4389:         $result .= ' - '. $display_size[0] . ' ' . $display_size[1];",
          "4391:     }",
          "4393:     $result .= ']';",
          "4395:     if (strpos($transform_function, 'octetstream')) {",
          "4396:         $result = $content;",
          "4397:     }",
          "4399:     if ($size > 0) {",
          "4401:         if ($default_function != $transform_function) {",
          "4402:             $result = $transform_function($result, $transform_options, $meta);",
          "4403:         } else {",
          "4405:             $result = $default_function($result, array(), $meta);",
          "4406:             if (stristr($meta->type, 'BLOB')",
          "4407:                 && $_SESSION['tmp_user_values']['display_blob']",
          "4408:             ) {",
          "4410:                 $result = htmlspecialchars(PMA_replaceBinaryContents($content));",
          "4411:             }",
          "4414:             if (count($url_params) > 0) {",
          "4415:                 $result = '<a href=\"tbl_get_field.php'",
          "4416:                     . PMA_generate_common_url($url_params) . '\">' . $result . '</a>';",
          "4419:     }",
          "4421:     return($result);",
          "4423: }",
          "4445: function PMA_getRowData($class, $condition_field, $analyzed_sql, $meta, $map,",
          "4446:     $data, $transform_function, $default_function, $nowrap, $where_comparison,",
          "4447:     $transform_options, $is_field_truncated",
          "4448: ) {",
          "4450:     global $db;",
          "4452:     $result = '<td class=\"'",
          "4453:         . PMA_addClass(",
          "4454:             $class, $condition_field, $meta, $nowrap,",
          "4455:             $is_field_truncated, $transform_function, $default_function",
          "4456:         )",
          "4457:         . '\">';",
          "4459:     if (isset($analyzed_sql[0]['select_expr'])",
          "4460:         && is_array($analyzed_sql[0]['select_expr'])",
          "4461:     ) {",
          "4463:         foreach ($analyzed_sql[0]['select_expr']",
          "4464:             as $select_expr_position => $select_expr",
          "4467:             $alias = $analyzed_sql[0]['select_expr'][$select_expr_position]['alias'];",
          "4469:             if (isset($alias) && strlen($alias)) {",
          "4470:                 $true_column = $analyzed_sql[0]['select_expr']",
          "4471:                     [$select_expr_position]['column'];",
          "4473:                 if ($alias == $meta->name) {",
          "4476:                     $meta->name = $true_column;",
          "4477:                 } // end if",
          "4479:             } // end if",
          "4480:         } // end foreach",
          "4481:     } // end if",
          "4483:     if (isset($map[$meta->name])) {",
          "4486:         if (isset($map[$meta->name][2]) && strlen($map[$meta->name][2])) {",
          "4488:             $dispsql     = 'SELECT ' . PMA_backquote($map[$meta->name][2])",
          "4489:                 . ' FROM ' . PMA_backquote($map[$meta->name][3])",
          "4490:                 . '.' . PMA_backquote($map[$meta->name][0])",
          "4491:                 . ' WHERE ' . PMA_backquote($map[$meta->name][1])",
          "4492:                 . $where_comparison;",
          "4494:             $dispresult  = PMA_DBI_try_query($dispsql, null, PMA_DBI_QUERY_STORE);",
          "4496:             if ($dispresult && PMA_DBI_num_rows($dispresult) > 0) {",
          "4497:                 list($dispval) = PMA_DBI_fetch_row($dispresult, 0);",
          "4498:             } else {",
          "4499:                 $dispval = __('Link not found');",
          "4500:             }",
          "4502:             @PMA_DBI_free_result($dispresult);",
          "4504:         } else {",
          "4505:             $dispval     = '';",
          "4506:         } // end if... else...",
          "4508:         if (isset($GLOBALS['printview']) && $GLOBALS['printview'] == '1') {",
          "4510:             $result .= ($transform_function != $default_function",
          "4511:                     ? $transform_function($data, $transform_options, $meta)",
          "4512:                     : $transform_function($data, array(), $meta))",
          "4513:                 . ' <code>[-&gt;' . $dispval . ']</code>';",
          "4515:         } else {",
          "4517:             if ($_SESSION['tmp_user_values']['relational_display'] == 'K') {",
          "4521:                 $title = (! empty($dispval))? ' title=\"' . htmlspecialchars($dispval)",
          "4522:                     . '\"' : '';",
          "4524:             } else {",
          "4525:                 $title = ' title=\"' . htmlspecialchars($data) . '\"';",
          "4526:             }",
          "4528:             $_url_params = array(",
          "4529:                 'db'    => $map[$meta->name][3],",
          "4530:                 'table' => $map[$meta->name][0],",
          "4531:                 'pos'   => '0',",
          "4532:                 'sql_query' => 'SELECT * FROM '",
          "4533:                     . PMA_backquote($map[$meta->name][3]) . '.'",
          "4534:                     . PMA_backquote($map[$meta->name][0])",
          "4535:                     . ' WHERE ' . PMA_backquote($map[$meta->name][1])",
          "4536:                     . $where_comparison,",
          "4537:             );",
          "4539:             $result .= '<a href=\"sql.php' . PMA_generate_common_url($_url_params)",
          "4540:                  . '\"' . $title . '>';",
          "4542:             if ($transform_function != $default_function) {",
          "4545:                 $result .= $transform_function($data, $transform_options, $meta);",
          "4546:             } else {",
          "4548:                 if ($_SESSION['tmp_user_values']['relational_display'] == 'D') {",
          "4551:                     $result .= $transform_function($dispval, array(), $meta);",
          "4554:                     $result .= $transform_function($data, array(), $meta);",
          "4555:                 }",
          "4558:             $result .= '</a>';",
          "4561:     } else {",
          "4562:         $result .= ($transform_function != $default_function)",
          "4563:             ? $transform_function($data, $transform_options, $meta)",
          "4564:             : $transform_function($data, array(), $meta);",
          "4565:     }",
          "4568:     if (isset($_GET['browse_distinct']) && ($_GET['browse_distinct'] == 1)) {",
          "4570:         $where_comparison = \" = '\" . $data . \"'\";",
          "4572:         $_url_params_for_show_data_row = array(",
          "4573:                                 'db'    => $db,",
          "4574:                                 'table' => $meta->orgtable,",
          "4575:                                 'pos'   => '0',",
          "4576:                                 'sql_query' => 'SELECT * FROM '",
          "4577:                                                     . PMA_backquote($db) . '.'",
          "4578:                                                     . PMA_backquote($meta->orgtable)",
          "4579:                                                     . ' WHERE '",
          "4580:                                                     . PMA_backquote($meta->orgname)",
          "4581:                                                     . $where_comparison,",
          "4582:         );",
          "4584:         $result .= '<input type=\"hidden\" class=\"data_browse_link\" value=\"'",
          "4585:             . PMA_generate_common_url($_url_params_for_show_data_row). '\" />';",
          "4587:     }",
          "4589:     $result .= '</td>' . \"\\n\";",
          "4591:     return $result;",
          "4593: }",
          "4611: function PMA_getCheckboxForMultiRowSubmissions($del_url, $is_display, $row_no,",
          "4612:     $where_clause_html, $condition_array, $del_query, $id_suffix, $class",
          "4613: ) {",
          "4615:     $ret = '';",
          "4617:     if (! empty($del_url) && $is_display['del_lnk'] != 'kp') {",
          "4619:         $ret .= '<td ';",
          "4620:         if (! empty($class)) {",
          "4621:             $ret .= 'class=\"' . $class . '\"';",
          "4624:         $ret .= ' class=\"center\">'",
          "4625:             . '<input type=\"checkbox\" id=\"id_rows_to_delete' . $row_no . $id_suffix",
          "4626:             . '\" name=\"rows_to_delete[' . $row_no . ']\"'",
          "4627:             . ' class=\"multi_checkbox\"'",
          "4628:             . ' value=\"' . $where_clause_html . '\" '",
          "4629:             . (isset($GLOBALS['checkall'])",
          "4630:                 ? 'checked=\"checked\"'",
          "4631:                 : '')",
          "4632:             . ' />'",
          "4633:             . '<input type=\"hidden\" class=\"condition_array\" value=\"'",
          "4634:             . htmlspecialchars(json_encode($condition_array)) . '\" />'",
          "4635:             . '    </td>';",
          "4636:     }",
          "4638:     return $ret;",
          "4640: }",
          "4654: function PMA_getEditLink($edit_url, $class, $edit_str, $where_clause,",
          "4655:     $where_clause_html",
          "4656: ) {",
          "4658:     $ret = '';",
          "4659:     if (! empty($edit_url)) {",
          "4661:         $ret .= '<td class=\"' . $class . ' center\" ' . ' ><span class=\"nowrap\">'",
          "4662:            . PMA_linkOrButton($edit_url, $edit_str, array(), false);",
          "4667:         if (! empty($where_clause)) {",
          "4668:             $ret .= '<input type=\"hidden\" class=\"where_clause\" value =\"'",
          "4669:                 . $where_clause_html . '\" />';",
          "4671:         $ret .= '</span></td>';",
          "4672:     }",
          "4674:     return $ret;",
          "4676: }",
          "4690: function PMA_getCopyLink($copy_url, $copy_str, $where_clause,",
          "4691:     $where_clause_html, $class",
          "4692: ) {",
          "4694:     $ret = '';",
          "4695:     if (! empty($copy_url)) {",
          "4697:         $ret .= '<td class=\"';",
          "4698:         if (! empty($class)) {",
          "4699:             $ret .= $class . ' ';",
          "4700:         }",
          "4702:         $ret .= 'center\" ' . ' ><span class=\"nowrap\">'",
          "4703:            . PMA_linkOrButton($copy_url, $copy_str, array(), false);",
          "4709:         if (! empty($where_clause)) {",
          "4710:             $ret .= '<input type=\"hidden\" class=\"where_clause\" value=\"'",
          "4711:                 . $where_clause_html . '\" />';",
          "4713:         $ret .= '</span></td>';",
          "4714:     }",
          "4716:     return $ret;",
          "4718: }",
          "4731: function PMA_getDeleteLink($del_url, $del_str, $js_conf, $class)",
          "4732: {",
          "4734:     $ret = '';",
          "4735:     if (! empty($del_url)) {",
          "4737:         $ret .= '<td class=\"';",
          "4738:         if (! empty($class)) {",
          "4739:             $ret .= $class . ' ';",
          "4740:         }",
          "4742:         $ret .= 'center\" ' . ' >'",
          "4743:            . PMA_linkOrButton($del_url, $del_str, $js_conf, false)",
          "4744:            . '</td>';",
          "4745:     }",
          "4747:     return $ret;",
          "4749: }",
          "4776: function PMA_getCheckboxAndLinks($position, $del_url, $is_display, $row_no,",
          "4777:     $where_clause, $where_clause_html, $condition_array, $del_query, $id_suffix,",
          "4778:     $edit_url, $copy_url, $class, $edit_str, $copy_str, $del_str, $js_conf",
          "4779: ) {",
          "4781:     $ret = '';",
          "4783:     if ($position == 'left') {",
          "4785:         $ret .= PMA_getCheckboxForMultiRowSubmissions(",
          "4786:             $del_url, $is_display, $row_no, $where_clause_html, $condition_array,",
          "4787:             $del_query, $id_suffix = '_left', '', '', ''",
          "4788:         );",
          "4790:         $ret .= PMA_getEditLink(",
          "4791:             $edit_url, $class, $edit_str, $where_clause, $where_clause_html, ''",
          "4792:         );",
          "4794:         $ret .= PMA_getCopyLink(",
          "4795:             $copy_url, $copy_str, $where_clause, $where_clause_html, ''",
          "4796:         );",
          "4798:         $ret .= PMA_getDeleteLink($del_url, $del_str, $js_conf, '', '');",
          "4800:     } elseif ($position == 'right') {",
          "4802:         $ret .= PMA_getDeleteLink($del_url, $del_str, $js_conf, '', '');",
          "4804:         $ret .= PMA_getCopyLink(",
          "4805:             $copy_url, $copy_str, $where_clause, $where_clause_html, ''",
          "4806:         );",
          "4808:         $ret .= PMA_getEditLink(",
          "4809:             $edit_url, $class, $edit_str, $where_clause, $where_clause_html, ''",
          "4810:         );",
          "4812:         $ret .= PMA_getCheckboxForMultiRowSubmissions(",
          "4813:             $del_url, $is_display, $row_no, $where_clause_html, $condition_array,",
          "4814:             $del_query, $id_suffix = '_right', '', '', ''",
          "4815:         );",
          "4817:     } else { // $position == 'none'",
          "4819:         $ret .= PMA_getCheckboxForMultiRowSubmissions(",
          "4820:             $del_url, $is_display, $row_no, $where_clause_html, $condition_array,",
          "4821:             $del_query, $id_suffix = '_left', '', '', ''",
          "4822:         );",
          "4823:     }",
          "4825:     return $ret;",
          "",
          "[Added Lines]",
          "19: class PMA_DisplayResults",
          "22:     public function __construct()",
          "23:     {",
          "25:     }",
          "67:     private function _setDisplayMode(&$the_disp_mode, &$the_total)",
          "68:     {",
          "70:         global $db, $table;",
          "71:         global $unlim_num_rows, $fields_meta;",
          "72:         global $err_url;",
          "75:         $do_display              = array();",
          "76:         $do_display['edit_lnk']  = $the_disp_mode[0] . $the_disp_mode[1];",
          "77:         $do_display['del_lnk']   = $the_disp_mode[2] . $the_disp_mode[3];",
          "78:         $do_display['sort_lnk']  = (string) $the_disp_mode[4];",
          "79:         $do_display['nav_bar']   = (string) $the_disp_mode[5];",
          "80:         $do_display['ins_row']   = (string) $the_disp_mode[6];",
          "81:         $do_display['bkm_form']  = (string) $the_disp_mode[7];",
          "82:         $do_display['text_btn']  = (string) $the_disp_mode[8];",
          "83:         $do_display['pview_lnk'] = (string) $the_disp_mode[9];",
          "87:         if ($the_disp_mode != 'nnnn000000') {",
          "88:             if (isset($GLOBALS['printview']) && $GLOBALS['printview'] == '1') {",
          "90:                 $do_display['edit_lnk']  = 'nn'; // no edit link",
          "91:                 $do_display['del_lnk']   = 'nn'; // no delete link",
          "92:                 $do_display['sort_lnk']  = (string) '0';",
          "93:                 $do_display['nav_bar']   = (string) '0';",
          "94:                 $do_display['ins_row']   = (string) '0';",
          "95:                 $do_display['bkm_form']  = (string) '0';",
          "96:                 $do_display['text_btn']  = (string) '0';",
          "97:                 $do_display['pview_lnk'] = (string) '0';",
          "98:             } elseif ($GLOBALS['is_count'] || $GLOBALS['is_analyse']",
          "99:                 || $GLOBALS['is_maint'] || $GLOBALS['is_explain']",
          "104:                 $do_display['edit_lnk']  = 'nn'; // no edit link",
          "105:                 $do_display['del_lnk']   = 'nn'; // no delete link",
          "106:                 $do_display['sort_lnk']  = (string) '0';",
          "107:                 $do_display['nav_bar']   = (string) '0';",
          "108:                 $do_display['ins_row']   = (string) '0';",
          "109:                 $do_display['bkm_form']  = (string) '1';",
          "110:                 if ($GLOBALS['is_maint']) {",
          "111:                     $do_display['text_btn']  = (string) '1';",
          "112:                 } else {",
          "113:                     $do_display['text_btn']  = (string) '0';",
          "114:                 }",
          "115:                 $do_display['pview_lnk'] = (string) '1';",
          "117:             } elseif ($GLOBALS['is_show']) {",
          "123:                 $tmp = preg_match(",
          "124:                     '@^SHOW[[:space:]]+(VARIABLES|(FULL[[:space:]]+)?'",
          "125:                     . 'PROCESSLIST|STATUS|TABLE|GRANTS|CREATE|LOGS|DATABASES|FIELDS)@i',",
          "126:                     $GLOBALS['sql_query'], $which",
          "127:                 );",
          "128:                 if (isset($which[1])",
          "129:                     && (strpos(' ' . strtoupper($which[1]), 'PROCESSLIST') > 0)",
          "131:                     $do_display['edit_lnk'] = 'nn'; // no edit link",
          "132:                     $do_display['del_lnk']  = 'kp'; // \"kill process\" type edit link",
          "133:                 } else {",
          "135:                     $do_display['edit_lnk'] = 'nn'; // no edit link",
          "136:                     $do_display['del_lnk']  = 'nn'; // no delete link",
          "137:                 }",
          "139:                 $do_display['sort_lnk']  = (string) '0';",
          "140:                 $do_display['nav_bar']   = (string) '0';",
          "141:                 $do_display['ins_row']   = (string) '0';",
          "142:                 $do_display['bkm_form']  = (string) '1';",
          "143:                 $do_display['text_btn']  = (string) '1';",
          "144:                 $do_display['pview_lnk'] = (string) '1';",
          "145:             } else {",
          "149:                 $prev_table = $fields_meta[0]->table;",
          "150:                 $do_display['text_btn']  = (string) '1';",
          "151:                 for ($i = 0; $i < $GLOBALS['fields_cnt']; $i++) {",
          "152:                     $is_link = ($do_display['edit_lnk'] != 'nn')",
          "153:                         || ($do_display['del_lnk'] != 'nn')",
          "154:                         || ($do_display['sort_lnk'] != '0')",
          "155:                         || ($do_display['ins_row'] != '0');",
          "157:                     if ($is_link",
          "158:                         && (($fields_meta[$i]->table == '')",
          "159:                         || ($fields_meta[$i]->table != $prev_table))",
          "160:                     ) {",
          "161:                         $do_display['edit_lnk'] = 'nn'; // don't display links",
          "162:                         $do_display['del_lnk']  = 'nn';",
          "168:                         $do_display['ins_row']  = (string) '0';",
          "169:                         if ($do_display['text_btn'] == '1') {",
          "170:                             break;",
          "171:                         }",
          "172:                     } // end if (2.3.2)",
          "174:                     $do_display['pview_lnk']    = (string) '1';",
          "175:                     $prev_table = $fields_meta[$i]->table;",
          "176:                 } // end for",
          "177:             } // end if..elseif...else (2.1 -> 2.3)",
          "178:         } // end if (2)",
          "181:         if (isset($unlim_num_rows) && $unlim_num_rows != '') {",
          "182:             $the_total = $unlim_num_rows;",
          "183:         } elseif ((($do_display['nav_bar'] == '1') || ($do_display['sort_lnk'] == '1'))",
          "184:                  && (strlen($db) && !empty($table))",
          "186:             $the_total   = PMA_Table::countRecords($db, $table);",
          "192:         if ($do_display['nav_bar'] == '1' || $do_display['sort_lnk'] == '1') {",
          "198:             if (isset($unlim_num_rows)",
          "199:                 && $unlim_num_rows < 2",
          "200:                 && ! PMA_Table::isView($db, $table)",
          "201:             ) {",
          "204:                 $do_display['sort_lnk'] = (string) '0';",
          "205:             }",
          "206:         } // end if (3)",
          "209:         $the_disp_mode = join('', $do_display);",
          "211:         return $do_display;",
          "213:     } // end of the 'setDisplayMode()' function",
          "226:     private function _isSelect()",
          "227:     {",
          "229:         global $is_count, $is_export, $is_func, $is_analyse;",
          "230:         global $analyzed_sql;",
          "232:         return ! ($is_count || $is_export || $is_func || $is_analyse)",
          "233:             && (count($analyzed_sql[0]['select_expr']) == 0)",
          "234:             && isset($analyzed_sql[0]['queryflags']['select_from'])",
          "235:             && (count($analyzed_sql[0]['table_ref']) == 1);",
          "261:     private function _getTableNavigationButton($caption, $title, $pos, $html_sql_query,",
          "262:         $onsubmit = '', $input_for_real_end = '', $onclick = ''",
          "263:     ) {",
          "265:         global $db, $table, $goto;",
          "267:         $caption_output = '';",
          "269:         if ($GLOBALS['cfg']['NavigationBarIconic']) {",
          "270:             $caption_output .= $caption;",
          "271:         }",
          "274:         if (($GLOBALS['cfg']['NavigationBarIconic'] === false)",
          "275:             || ($GLOBALS['cfg']['NavigationBarIconic'] === 'both')",
          "276:         ) {",
          "277:             $caption_output .= '&nbsp;' . $title;",
          "278:         }",
          "279:         $title_output = ' title=\"' . $title . '\"';",
          "281:         return '<td>'",
          "282:             . '<form action=\"sql.php\" method=\"post\" ' . $onsubmit . '>'",
          "283:             . PMA_generate_common_hidden_inputs($db, $table)",
          "284:             . '<input type=\"hidden\" name=\"sql_query\" value=\"' . $html_sql_query . '\" />'",
          "285:             . '<input type=\"hidden\" name=\"pos\" value=\"' . $pos . '\" />'",
          "286:             . '<input type=\"hidden\" name=\"goto\" value=\"' . $goto . '\" />'",
          "287:             . $input_for_real_end",
          "288:             . '<input type=\"submit\" name=\"navig\"'",
          "289:             . ($GLOBALS['cfg']['AjaxEnable'] ? ' class=\"ajax\" ' : '' )",
          "290:             . 'value=\"' . $caption_output . '\" ' . $title_output . $onclick . ' />'",
          "291:             . '</form>'",
          "292:             . '</td>';",
          "294:     } // end function _getTableNavigationButton()",
          "321:     private function _getTableNavigation($pos_next, $pos_prev, $sql_query,",
          "322:         $id_for_direction_dropdown",
          "325:         global $db, $table, $goto;",
          "326:         global $num_rows, $unlim_num_rows;",
          "327:         global $is_innodb;",
          "328:         global $showtable;",
          "330:         $table_navigation_html = '';",
          "334:         $html_sql_query = htmlspecialchars($sql_query);",
          "340:         $is_innodb = (isset($showtable['Type']) && $showtable['Type'] == 'InnoDB');",
          "343:         $table_navigation_html .= '<table class=\"navigation nospacing nopadding\">'",
          "344:             . '<tr>'",
          "345:             . '<td class=\"navigation_separator\"></td>';",
          "348:         if ($_SESSION['tmp_user_values']['pos']",
          "349:             && ($_SESSION['tmp_user_values']['max_rows'] != 'all')",
          "350:         ) {",
          "352:             $table_navigation_html .= $this->_getMoveBackwardButtonsForTableNavigation(",
          "353:                 $html_sql_query, $pos_prev",
          "356:         } // end move back",
          "358:         $nbTotalPage = 1;",
          "361:         if ($_SESSION['tmp_user_values']['max_rows'] != 'all') { //if1",
          "363:             $pageNow = @floor(",
          "364:                 $_SESSION['tmp_user_values']['pos']",
          "365:                 / $_SESSION['tmp_user_values']['max_rows']",
          "366:             ) + 1;",
          "368:             $nbTotalPage = @ceil(",
          "369:                 $unlim_num_rows",
          "370:                 / $_SESSION['tmp_user_values']['max_rows']",
          "373:             if ($nbTotalPage > 1) { //if2",
          "375:                 $table_navigation_html .= '<td>';",
          "376:                 $_url_params = array(",
          "377:                     'db'        => $db,",
          "378:                     'table'     => $table,",
          "379:                     'sql_query' => $sql_query,",
          "380:                     'goto'      => $goto,",
          "381:                 );",
          "385:                 $table_navigation_html .= '<form action=\"sql.php'",
          "386:                     . PMA_generate_common_url($_url_params)",
          "387:                     . '\" method=\"post\">';",
          "389:                 $table_navigation_html .= PMA_pageselector(",
          "390:                     $_SESSION['tmp_user_values']['max_rows'],",
          "391:                     $pageNow, $nbTotalPage, 200, 5, 5, 20, 10",
          "392:                 );",
          "394:                 $table_navigation_html .= '</form>'",
          "395:                     . '</td>';",
          "396:             } //_if2",
          "397:         } //_if1",
          "400:         if (($num_rows < $unlim_num_rows)",
          "401:             && ($GLOBALS['cfg']['ShowAll']",
          "402:             || ($GLOBALS['cfg']['MaxRows'] * 5 >= $unlim_num_rows))",
          "403:         ) {",
          "405:             $table_navigation_html .= $this->_getShowAllButtonForTableNavigation(",
          "406:                 $db, $table, $html_sql_query, $goto",
          "407:             );",
          "409:         } // end show all",
          "412:         $endpos = $_SESSION['tmp_user_values']['pos']",
          "413:             + $_SESSION['tmp_user_values']['max_rows'];",
          "415:         if (($endpos < $unlim_num_rows)",
          "416:             && ($num_rows >= $_SESSION['tmp_user_values']['max_rows'])",
          "417:             && ($_SESSION['tmp_user_values']['max_rows'] != 'all')",
          "418:         ) {",
          "420:             $table_navigation_html .= $this->_getMoveForwardButtonsForTableNavigation(",
          "421:                 $html_sql_query, $pos_next, $is_innodb,",
          "422:                 $unlim_num_rows, $num_rows",
          "423:             );",
          "425:         } // end move toward",
          "428:         if ($nbTotalPage > 1) {",
          "429:             $table_navigation_html",
          "430:                 .= '<td><div class=\"navigation_separator\">|</div></td>';",
          "431:         }",
          "433:         $table_navigation_html .= '<td>'",
          "434:             . '<div class=\"save_edited hide\">'",
          "435:             . '<input type=\"submit\" value=\"' . __('Save edited data') . '\" />'",
          "436:             . '<div class=\"navigation_separator\">|</div>'",
          "437:             . '</div>'",
          "438:             . '</td>'",
          "439:             . '<td>'",
          "440:             . '<div class=\"restore_column hide\">'",
          "441:             . '<input type=\"submit\" value=\"' . __('Restore column order') . '\" />'",
          "442:             . '<div class=\"navigation_separator\">|</div>'",
          "443:             . '</div>'",
          "444:             . '</td>';",
          "450:         $table_navigation_html .= '<td class=\"navigation_goto\">';",
          "452:         $table_navigation_html .= '<form action=\"sql.php\" method=\"post\" '",
          "453:             . 'onsubmit=\"return '",
          "454:                 . '(checkFormElementInRange('",
          "455:                     . 'this, '",
          "456:                     . '\\'session_max_rows\\', '",
          "457:                     . '\\'' . str_replace('\\'', '\\\\\\'', __('%d is not valid row number.'))",
          "458:                     . '\\', '",
          "459:                     . '1)'",
          "460:                 . ' &amp;&amp; '",
          "461:                 . 'checkFormElementInRange('",
          "462:                     . 'this, '",
          "463:                     . '\\'pos\\', '",
          "464:                     . '\\'' . str_replace('\\'', '\\\\\\'', __('%d is not valid row number.'))",
          "465:                     . '\\', '",
          "466:                     . '0'",
          "467:                     . ($unlim_num_rows > 0 ? ', ' . ($unlim_num_rows - 1) : '') . ')'",
          "468:                 . ')'",
          "469:             .'\">';",
          "471:         $table_navigation_html .= PMA_generate_common_hidden_inputs($db, $table);",
          "473:         $table_navigation_html .= $this->_getAdditionalFieldsForTableNavigation(",
          "474:             $html_sql_query, $goto, $pos_next,",
          "475:             $unlim_num_rows, $id_for_direction_dropdown",
          "476:         );",
          "478:         $table_navigation_html .= '</form>'",
          "479:             . '</td>'",
          "480:             . '<td class=\"navigation_separator\"></td>'",
          "481:             . '</tr>'",
          "482:             . '</table>';",
          "484:         return $table_navigation_html;",
          "486:     } // end of the '_getTableNavigation()' function",
          "501:     private function _getMoveBackwardButtonsForTableNavigation($html_sql_query, $pos_prev)",
          "502:     {",
          "503:         return $this->_getTableNavigationButton(",
          "504:             '&lt;&lt;', _pgettext('First page', 'Begin'), 0, $html_sql_query",
          "505:         )",
          "506:         . $this->_getTableNavigationButton(",
          "507:             '&lt;', _pgettext('Previous page', 'Previous'), $pos_prev,",
          "508:             $html_sql_query",
          "509:         );",
          "510:     } // end of the '_getMoveBackwardButtonsForTableNavigation()' function",
          "527:     private function _getShowAllButtonForTableNavigation($db, $table, $html_sql_query, $goto)",
          "528:     {",
          "529:         return \"\\n\"",
          "530:             . '<td>'",
          "531:             . '<form action=\"sql.php\" method=\"post\">'",
          "532:             . PMA_generate_common_hidden_inputs($db, $table)",
          "533:             . '<input type=\"hidden\" name=\"sql_query\" value=\"' . $html_sql_query . '\" />'",
          "534:             . '<input type=\"hidden\" name=\"pos\" value=\"0\" />'",
          "535:             . '<input type=\"hidden\" name=\"session_max_rows\" value=\"all\" />'",
          "536:             . '<input type=\"hidden\" name=\"goto\" value=\"' . $goto . '\" />'",
          "537:             . '<input type=\"submit\" name=\"navig\" value=\"' . __('Show all') . '\" />'",
          "538:             . '</form>'",
          "539:             . '</td>';",
          "540:     } // end of the '_getShowAllButtonForTableNavigation()' function",
          "558:     private function _getMoveForwardButtonsForTableNavigation(",
          "559:         $html_sql_query, $pos_next, $is_innodb, $unlim_num_rows, $num_rows",
          "560:     ) {",
          "563:         $buttons_html = $this->_getTableNavigationButton(",
          "564:             '&gt;',",
          "565:             _pgettext('Next page', 'Next'),",
          "566:             $pos_next,",
          "567:             $html_sql_query",
          "568:         );",
          "571:         if ($is_innodb && $unlim_num_rows > $GLOBALS['cfg']['MaxExactCount']) {",
          "572:             $input_for_real_end = '<input id=\"real_end_input\" type=\"hidden\" '",
          "573:                 . 'name=\"find_real_end\" value=\"1\" />';",
          "575:             $onclick = '';",
          "576:         } else {",
          "577:             $input_for_real_end = $onclick = '';",
          "578:         }",
          "580:         $onsubmit = 'onsubmit=\"return '",
          "581:             . ($_SESSION['tmp_user_values']['pos']",
          "582:                     + $_SESSION['tmp_user_values']['max_rows'] < $unlim_num_rows",
          "583:                 && $num_rows >= $_SESSION['tmp_user_values']['max_rows'])",
          "584:             ? 'true'",
          "585:             : 'false' . '\"';",
          "588:         $buttons_html .= $this->_getTableNavigationButton(",
          "589:             '&gt;&gt;',",
          "590:             _pgettext('Last page', 'End'),",
          "591:             @((ceil($unlim_num_rows / $_SESSION['tmp_user_values']['max_rows'])- 1)",
          "593:             $html_sql_query, $onsubmit, $input_for_real_end, $onclick",
          "596:         return $buttons_html;",
          "598:     } // end of the '_getMoveForwardButtonsForTableNavigation()' function",
          "618:     private function _getAdditionalFieldsForTableNavigation(",
          "619:         $html_sql_query, $goto, $pos_next,",
          "620:         $unlim_num_rows, $id_for_direction_dropdown",
          "621:     ) {",
          "623:         $additional_fields_html = '';",
          "625:         $additional_fields_html .= '<input type=\"hidden\" name=\"sql_query\" '",
          "626:             . 'value=\"' . $html_sql_query . '\" />'",
          "627:             . '<input type=\"hidden\" name=\"goto\" value=\"' . $goto . '\" />'",
          "628:             . '<input type=\"submit\" name=\"navig\"'",
          "629:             . ($GLOBALS['cfg']['AjaxEnable'] ? ' class=\"ajax\"' : '')",
          "630:             . ' value=\"' . __('Show') . ' :\" />'",
          "631:             . __('Start row') . ': ' . \"\\n\"",
          "632:             . '<input type=\"text\" name=\"pos\" size=\"3\" value=\"'",
          "633:             . (($pos_next >= $unlim_num_rows) ? 0 : $pos_next)",
          "634:             . '\" class=\"textfield\" onfocus=\"this.select()\" />'",
          "635:             . __('Number of rows') . ': ' . \"\\n\"",
          "636:             . '<input type=\"text\" name=\"session_max_rows\" size=\"3\" value=\"'",
          "637:             . (($_SESSION['tmp_user_values']['max_rows'] != 'all')",
          "638:                 ? $_SESSION['tmp_user_values']['max_rows']",
          "639:                 : $GLOBALS['cfg']['MaxRows'])",
          "640:             . '\" class=\"textfield\" onfocus=\"this.select()\" />';",
          "642:         if ($GLOBALS['cfg']['ShowDisplayDirection']) {",
          "644:             $additional_fields_html .= __('Mode') . ': ' . \"\\n\";",
          "645:             $choices = array(",
          "646:                     'horizontal'        => __('horizontal'),",
          "647:                     'horizontalflipped' => __('horizontal (rotated headers)'),",
          "648:                     'vertical'          => __('vertical')",
          "649:                 );",
          "651:             $additional_fields_html .= PMA_getDropdown(",
          "652:                 'disp_direction', $choices,",
          "653:                 $_SESSION['tmp_user_values']['disp_direction'],",
          "654:                 $id_for_direction_dropdown",
          "655:             );",
          "656:             unset($choices);",
          "657:         }",
          "659:         $additional_fields_html .= sprintf(",
          "660:             __('Headers every %s rows'),",
          "661:             '<input type=\"text\" size=\"3\" name=\"repeat_cells\" value=\"'",
          "662:             . $_SESSION['tmp_user_values']['repeat_cells']",
          "663:             . '\" class=\"textfield\" /> '",
          "664:         );",
          "666:         return $additional_fields_html;",
          "668:     } // end of the '_getAdditionalFieldsForTableNavigation()' function",
          "698:     private function _getTableHeaders(&$is_display, &$fields_meta, $fields_cnt = 0,",
          "699:         $analyzed_sql = '', $sort_expression = '', $sort_expression_nodirection = '',",
          "700:         $sort_direction = ''",
          "701:     ) {",
          "703:         global $db, $table, $goto;",
          "704:         global $sql_query, $num_rows;",
          "705:         global $vertical_display, $highlight_columns;",
          "707:         $table_headers_html = '';",
          "711:         $sql_md5 = md5($GLOBALS['sql_query']);",
          "712:         $session_max_rows = $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows'];",
          "714:         $direction = isset($_SESSION['tmp_user_values']['disp_direction'])",
          "715:             ? $_SESSION['tmp_user_values']['disp_direction']",
          "716:             : '';",
          "718:         if ($analyzed_sql == '') {",
          "719:             $analyzed_sql = array();",
          "722:         $directionCondition = ($direction == 'horizontal')",
          "723:             || ($direction == 'horizontalflipped');",
          "726:         if ($is_display['sort_lnk'] == '1') {",
          "729:             $unsorted_sql_query     = $sql_query;",
          "730:             if (isset($analyzed_sql[0]['unsorted_query'])) {",
          "731:                 $unsorted_sql_query = $analyzed_sql[0]['unsorted_query'];",
          "732:             }",
          "736:             $unsorted_sql_query = trim($unsorted_sql_query);",
          "739:             if (isset($analyzed_sql)",
          "740:                 && isset($analyzed_sql[0])",
          "741:                 && isset($analyzed_sql[0]['querytype'])",
          "742:                 && ($analyzed_sql[0]['querytype'] == 'SELECT')",
          "743:                 && isset($analyzed_sql[0]['table_ref'])",
          "744:                 && (count($analyzed_sql[0]['table_ref']) == 1)",
          "745:             ) {",
          "748:                 $indexes = PMA_Index::getFromTable($table, $db);",
          "751:                 if ($indexes) {",
          "752:                     $table_headers_html .= $this->_getSortByKeyDropDown(",
          "753:                         $db, $table, $indexes, $sort_expression,",
          "754:                         $unsorted_sql_query",
          "755:                     );",
          "756:                 }",
          "757:             }",
          "758:         }",
          "761:         $table_headers_html .= '<input id=\"save_cells_at_once\" type=\"hidden\" value=\"'",
          "762:             . $GLOBALS['cfg']['SaveCellsAtOnce'] . '\" />'",
          "763:             . '<div class=\"common_hidden_inputs\">'",
          "764:             . PMA_generate_common_hidden_inputs($db, $table)",
          "765:             . '</div>';",
          "768:         if ($this->_isSelect()) {",
          "769:             $table_headers_html .= $this->_getDataForResettingColumnOrder();",
          "770:         }",
          "772:         $vertical_display['emptypre']   = 0;",
          "773:         $vertical_display['emptyafter'] = 0;",
          "774:         $vertical_display['textbtn']    = '';",
          "777:         if (! (isset($GLOBALS['printview']) && ($GLOBALS['printview'] == '1'))) {",
          "779:             $table_headers_html .= $this->_getOptionsBlock($db, $table, $sql_query, $goto);",
          "782:             $full_or_partial_text_link = $this->_getFullOrPartialTextButtonOrLink(",
          "783:                 $db, $table, $sql_query, $goto",
          "784:             );",
          "785:         }",
          "788:         $table_headers_html .= $this->_getFormForMultiRowOperations(",
          "789:             $db, $table, $is_display['del_lnk']",
          "790:         );",
          "795:             $table_headers_html .= '<thead><tr>' . \"\\n\";",
          "797:             $colspan = (($is_display['edit_lnk'] != 'nn')",
          "798:                 && ($is_display['del_lnk'] != 'nn'))",
          "799:                 ? ' colspan=\"4\"'",
          "800:                 : '';",
          "803:             $rowspan = (($is_display['edit_lnk'] != 'nn')",
          "804:                 && ($is_display['del_lnk'] != 'nn'))",
          "805:                 ? ' rowspan=\"4\"'",
          "806:                 : '';",
          "807:         }",
          "810:         if ((($is_display['edit_lnk'] == 'nn') && ($is_display['del_lnk'] == 'nn'))",
          "811:             && ($is_display['text_btn'] == '1')",
          "812:         ) {",
          "814:             $vertical_display['emptypre'] = (($is_display['edit_lnk'] != 'nn')",
          "815:                 && ($is_display['del_lnk'] != 'nn')) ? 4 : 0;",
          "817:             if ($directionCondition) {",
          "819:                 $table_headers_html .= '<th colspan=\"' . $fields_cnt . '\"></th>'",
          "820:                     . '</tr>'",
          "821:                     . '<tr>';",
          "824:             } else {",
          "826:                 $span = $num_rows + 1 + floor(",
          "827:                     $num_rows / $_SESSION['tmp_user_values']['repeat_cells']",
          "828:                 );",
          "829:                 $table_headers_html .= '<tr><th colspan=\"' . $span . '\"></th></tr>';",
          "831:             } // end vertical mode",
          "833:         } elseif ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "834:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "835:             && ($is_display['text_btn'] == '1')",
          "836:         ) {",
          "840:             $vertical_display['emptypre'] = (($is_display['edit_lnk'] != 'nn')",
          "841:                 && ($is_display['del_lnk'] != 'nn')) ? 4 : 0;",
          "843:             if ($directionCondition) {",
          "845:                 $table_headers_html .= '<th ' . $colspan . '>'",
          "846:                     . $full_or_partial_text_link . '</th>';",
          "849:             } else {",
          "851:                 $vertical_display['textbtn']",
          "852:                     = '    <th ' . $rowspan . ' class=\"vmiddle\">' . \"\\n\"",
          "853:                     . '        ' . \"\\n\"",
          "854:                     . '    </th>' . \"\\n\";",
          "855:             } // end vertical mode",
          "857:         } elseif ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "858:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "859:             && (($is_display['edit_lnk'] != 'nn') || ($is_display['del_lnk'] != 'nn'))",
          "860:         ) {",
          "863:             $vertical_display['emptypre'] = (($is_display['edit_lnk'] != 'nn')",
          "864:                 && ($is_display['del_lnk'] != 'nn')) ? 4 : 0;",
          "866:             if ($directionCondition) {",
          "868:                 $table_headers_html .= '<td ' . $colspan . '></td>';",
          "871:             } else {",
          "872:                 $vertical_display['textbtn'] = '    <td' . $rowspan . '></td>' . \"\\n\";",
          "873:             } // end vertical mode",
          "875:         } elseif (($GLOBALS['cfg']['RowActionLinks'] == 'none')",
          "876:             && ($directionCondition)",
          "877:         ) {",
          "880:             $table_headers_html .= '<th></th>';",
          "881:         }",
          "891:         if ($GLOBALS['cfg']['ShowBrowseComments']",
          "892:             && ($direction != 'horizontalflipped')",
          "893:         ) {",
          "894:             $comments_map = array();",
          "895:             if (isset($analyzed_sql[0]) && is_array($analyzed_sql[0])) {",
          "896:                 foreach ($analyzed_sql[0]['table_ref'] as $tbl) {",
          "897:                     $tb = $tbl['table_true_name'];",
          "898:                     $comments_map[$tb] = PMA_getComments($db, $tb);",
          "899:                     unset($tb);",
          "900:                 }",
          "901:             }",
          "902:         }",
          "904:         if ($GLOBALS['cfgRelation']['commwork']",
          "905:             && $GLOBALS['cfgRelation']['mimework']",
          "906:             && $GLOBALS['cfg']['BrowseMIME']",
          "907:             && ! $_SESSION['tmp_user_values']['hide_transformation']",
          "908:         ) {",
          "909:             include_once './libraries/transformations.lib.php';",
          "910:             $GLOBALS['mime_map'] = PMA_getMIME($db, $table);",
          "911:         }",
          "915:         $highlight_columns = array();",
          "916:         if (isset($analyzed_sql) && isset($analyzed_sql[0])",
          "917:             && isset($analyzed_sql[0]['where_clause_identifiers'])",
          "920:             $wi = 0;",
          "921:             if (isset($analyzed_sql[0]['where_clause_identifiers'])",
          "922:                 && is_array($analyzed_sql[0]['where_clause_identifiers'])",
          "924:                 foreach ($analyzed_sql[0]['where_clause_identifiers']",
          "925:                     as $wci_nr => $wci",
          "926:                 ) {",
          "927:                     $highlight_columns[$wci] = 'true';",
          "928:                 }",
          "932:         list($col_order, $col_visib) = $this->_getColumnParams();",
          "934:         for ($j = 0; $j < $fields_cnt; $j++) {",
          "937:             $i = $col_order ? $col_order[$j] : $j;",
          "941:             $condition_field = (isset($highlight_columns[$fields_meta[$i]->name])",
          "942:                 || isset($highlight_columns[PMA_backquote($fields_meta[$i]->name)]))",
          "943:                 ? true",
          "944:                 : false;",
          "947:             $comments = $this->_getCommentForRow($comments_map, $fields_meta[$i]);",
          "949:             if ($is_display['sort_lnk'] == '1') {",
          "958:                 $sort_tbl = (isset($fields_meta[$i]->table)",
          "959:                     && strlen($fields_meta[$i]->table))",
          "960:                     ? PMA_backquote($fields_meta[$i]->table) . '.'",
          "961:                     : '';",
          "967:                 $name_to_use_in_sort = $fields_meta[$i]->name;",
          "968:                 $is_orgname = false;",
          "969:                 if (isset($fields_meta[$i]->orgname)",
          "970:                     && strlen($fields_meta[$i]->orgname)",
          "971:                 ) {",
          "972:                     $name_to_use_in_sort = $fields_meta[$i]->orgname;",
          "973:                     $is_orgname = true;",
          "974:                 }",
          "979:                 $name_to_use_in_sort = str_replace(' )', ')', $name_to_use_in_sort);",
          "981:                 $is_in_sort = $this->_isInSorted(",
          "982:                     $sort_expression, $sort_expression_nodirection,",
          "983:                     $sort_tbl, $name_to_use_in_sort",
          "984:                 );",
          "991:                 if ((strpos($name_to_use_in_sort, '(') !== false) && ! $is_orgname) {",
          "992:                     $sort_order = \"\\n\" . 'ORDER BY ' . $name_to_use_in_sort . ' ';",
          "993:                 } else {",
          "994:                     $sort_order = \"\\n\" . 'ORDER BY ' . $sort_tbl",
          "995:                         . PMA_backquote($name_to_use_in_sort) . ' ';",
          "996:                 }",
          "997:                 unset($name_to_use_in_sort);",
          "998:                 unset($is_orgname);",
          "1002:                 list($sort_order, $order_img) = $this->_getSortingUrlParams(",
          "1003:                     $is_in_sort, $sort_direction, $fields_meta[$i],",
          "1004:                     $sort_order, $i",
          "1005:                 );",
          "1007:                 if (preg_match(",
          "1008:                     '@(.*)([[:space:]](LIMIT (.*)|PROCEDURE (.*)|FOR UPDATE|'",
          "1009:                     . 'LOCK IN SHARE MODE))@is',",
          "1010:                     $unsorted_sql_query, $regs3",
          "1011:                 )) {",
          "1012:                     $sorted_sql_query = $regs3[1] . $sort_order . $regs3[2];",
          "1013:                 } else {",
          "1014:                     $sorted_sql_query = $unsorted_sql_query . $sort_order;",
          "1015:                 }",
          "1017:                 $_url_params = array(",
          "1018:                     'db'                => $db,",
          "1019:                     'table'             => $table,",
          "1020:                     'sql_query'         => $sorted_sql_query,",
          "1021:                     'session_max_rows'  => $session_max_rows",
          "1022:                 );",
          "1023:                 $order_url  = 'sql.php' . PMA_generate_common_url($_url_params);",
          "1027:                 $order_link = $this->_getSortOrderLink(",
          "1028:                     $order_img, $i, $direction, $fields_meta[$i], $order_url",
          "1029:                 );",
          "1031:                 if ($directionCondition) {",
          "1032:                     $table_headers_html .= $this->_getDraggableClassForSortableColumns(",
          "1033:                         $col_visib, $col_visib[$j], $condition_field,",
          "1034:                         $direction, $fields_meta[$i], $order_link, $comments",
          "1035:                     );",
          "1036:                 }",
          "1038:                 $vertical_display['desc'][] = '    <th '",
          "1039:                     . 'class=\"draggable'",
          "1040:                     . ($condition_field ? ' condition' : '')",
          "1041:                     . '\" data-column=\"' . htmlspecialchars($fields_meta[$i]->name)",
          "1042:                     . '\">' . \"\\n\" . $order_link . $comments . '    </th>' . \"\\n\";",
          "1046:                 if ($directionCondition) {",
          "1047:                     $table_headers_html .= $this->_getDraggableClassForNonSortableColumns(",
          "1048:                         $col_visib, $col_visib[$j], $condition_field,",
          "1049:                         $direction, $fields_meta[$i], $comments",
          "1050:                     );",
          "1051:                 }",
          "1053:                 $vertical_display['desc'][] = '    <th '",
          "1054:                     . 'class=\"draggable'",
          "1055:                     . ($condition_field ? ' condition\"' : '')",
          "1056:                     . '\" data-column=\"' . htmlspecialchars($fields_meta[$i]->name)",
          "1057:                     . '\">' . \"\\n\" . '        ' . htmlspecialchars($fields_meta[$i]->name)",
          "1058:                     . \"\\n\" . $comments . '    </th>';",
          "1059:             } // end else (2.2)",
          "1060:         } // end for",
          "1064:         if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "1065:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "1066:             && (($is_display['edit_lnk'] != 'nn') || ($is_display['del_lnk'] != 'nn'))",
          "1067:             && ($is_display['text_btn'] == '1')",
          "1068:         ) {",
          "1070:             $vertical_display['emptyafter'] = (($is_display['edit_lnk'] != 'nn')",
          "1071:                 && ($is_display['del_lnk'] != 'nn')) ? 4 : 1;",
          "1074:                 $table_headers_html .= \"\\n\"",
          "1075:                     . '<th ' . $colspan . '>' . $full_or_partial_text_link",
          "1076:                     . '</th>';",
          "1079:             } else {",
          "1080:                 $vertical_display['textbtn'] = '    <th ' . $rowspan",
          "1081:                     . ' class=\"vmiddle\">' . \"\\n\"",
          "1082:                     . '        ' . \"\\n\"",
          "1083:                     . '    </th>' . \"\\n\";",
          "1084:             } // end vertical mode",
          "1085:         } elseif ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "1086:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "1087:             && (($is_display['edit_lnk'] == 'nn') && ($is_display['del_lnk'] == 'nn'))",
          "1088:             && (! isset($GLOBALS['is_header_sent']) || ! $GLOBALS['is_header_sent'])",
          "1089:         ) {",
          "1093:             $vertical_display['emptyafter'] = (($is_display['edit_lnk'] != 'nn')",
          "1094:                 && ($is_display['del_lnk'] != 'nn')) ? 4 : 1;",
          "1096:             if ($directionCondition) {",
          "1097:                 $table_headers_html .= \"\\n\"",
          "1098:                     . '<td ' . $colspan . '></td>';",
          "1101:             } else {",
          "1102:                 $vertical_display['textbtn'] = '    <td' . $rowspan . '></td>' . \"\\n\";",
          "1103:             } // end vertical mode",
          "1104:         }",
          "1107:             $table_headers_html .= '</tr>'",
          "1108:                 . '</thead>';",
          "1109:         }",
          "1111:         return $table_headers_html;",
          "1113:     } // end of the '_getTableHeaders()' function",
          "1131:     private function _getSortByKeyDropDown(",
          "1132:         $db, $table, $indexes, $sort_expression, $unsorted_sql_query",
          "1133:     ) {",
          "1135:         $drop_down_html = '';",
          "1137:         $drop_down_html .= '<form action=\"sql.php\" method=\"post\">' . \"\\n\"",
          "1138:             . PMA_generate_common_hidden_inputs($db, $table)",
          "1139:             . __('Sort by key')",
          "1140:             . ': <select name=\"sql_query\" class=\"autosubmit\">' . \"\\n\";",
          "1142:         $used_index = false;",
          "1143:         $local_order = (isset($sort_expression) ? $sort_expression : '');",
          "1145:         foreach ($indexes as $index) {",
          "1147:             $asc_sort = '`'",
          "1148:                 . implode('` ASC, `', array_keys($index->getColumns()))",
          "1149:                 . '` ASC';",
          "1151:             $desc_sort = '`'",
          "1152:                 . implode('` DESC, `', array_keys($index->getColumns()))",
          "1153:                 . '` DESC';",
          "1155:             $used_index = $used_index",
          "1156:                 || ($local_order == $asc_sort)",
          "1157:                 || ($local_order == $desc_sort);",
          "1159:             if (preg_match(",
          "1160:                 '@(.*)([[:space:]](LIMIT (.*)|PROCEDURE (.*)|'",
          "1161:                 . 'FOR UPDATE|LOCK IN SHARE MODE))@is',",
          "1162:                 $unsorted_sql_query, $my_reg",
          "1163:             )) {",
          "1164:                 $unsorted_sql_query_first_part = $my_reg[1];",
          "1165:                 $unsorted_sql_query_second_part = $my_reg[2];",
          "1166:             } else {",
          "1167:                 $unsorted_sql_query_first_part = $unsorted_sql_query;",
          "1168:                 $unsorted_sql_query_second_part = '';",
          "1169:             }",
          "1171:             $drop_down_html .= '<option value=\"'",
          "1172:                 . htmlspecialchars(",
          "1173:                     $unsorted_sql_query_first_part  . \"\\n\"",
          "1174:                     . ' ORDER BY ' . $asc_sort",
          "1175:                     . $unsorted_sql_query_second_part",
          "1176:                 )",
          "1177:                 . '\"' . ($local_order == $asc_sort",
          "1178:                     ? ' selected=\"selected\"'",
          "1179:                     : '')",
          "1180:                 . '>' . htmlspecialchars($index->getName()) . ' ('",
          "1181:                 . __('Ascending') . ')</option>';",
          "1183:             $drop_down_html .= '<option value=\"'",
          "1184:                 . htmlspecialchars(",
          "1185:                     $unsorted_sql_query_first_part . \"\\n\"",
          "1186:                     . ' ORDER BY ' . $desc_sort",
          "1187:                     . $unsorted_sql_query_second_part",
          "1188:                 )",
          "1189:                 . '\"' . ($local_order == $desc_sort",
          "1190:                     ? ' selected=\"selected\"'",
          "1191:                     : '')",
          "1192:                 . '>' . htmlspecialchars($index->getName()) . ' ('",
          "1193:                 . __('Descending') . ')</option>';",
          "1196:         $drop_down_html .= '<option value=\"' . htmlspecialchars($unsorted_sql_query)",
          "1197:             . '\"' . ($used_index ? '' : ' selected=\"selected\"') . '>' . __('None')",
          "1198:             . '</option>'",
          "1199:             . '</select>' . \"\\n\"",
          "1200:             . '</form>' . \"\\n\";",
          "1202:         return $drop_down_html;",
          "1204:     } // end of the '_getSortByKeyDropDown()' function",
          "1216:     private function _getDataForResettingColumnOrder()",
          "1217:     {",
          "1219:         $data_html = '';",
          "1222:         $pmatable = new PMA_Table($GLOBALS['table'], $GLOBALS['db']);",
          "1223:         $col_order = $pmatable->getUiProp(PMA_Table::PROP_COLUMN_ORDER);",
          "1225:         if ($col_order) {",
          "1226:             $data_html .= '<input id=\"col_order\" type=\"hidden\" value=\"'",
          "1227:                 . implode(',', $col_order) . '\" />';",
          "1228:         }",
          "1230:         $col_visib = $pmatable->getUiProp(PMA_Table::PROP_COLUMN_VISIB);",
          "1232:         if ($col_visib) {",
          "1233:             $data_html .= '<input id=\"col_visib\" type=\"hidden\" value=\"'",
          "1234:                 . implode(',', $col_visib) . '\" />';",
          "1235:         }",
          "1238:         if (! PMA_Table::isView($GLOBALS['table'], $GLOBALS['db'])) {",
          "1239:             $data_html .= '<input id=\"table_create_time\" type=\"hidden\" value=\"'",
          "1240:                 . PMA_Table::sGetStatusInfo(",
          "1241:                     $GLOBALS['db'], $GLOBALS['table'], 'Create_time'",
          "1242:                 ) . '\" />';",
          "1243:         }",
          "1245:         return $data_html;",
          "1247:     } // end of the '_getDataForResettingColumnOrder()' function",
          "1264:     private function  _getOptionsBlock($db, $table, $sql_query, $goto)",
          "1265:     {",
          "1267:         $options_html = '';",
          "1269:         $options_html .= '<form method=\"post\" action=\"sql.php\" '",
          "1270:             . 'name=\"displayOptionsForm\" '",
          "1271:             . 'id=\"displayOptionsForm\"';",
          "1273:         if ($GLOBALS['cfg']['AjaxEnable']) {",
          "1274:             $options_html .= ' class=\"ajax\" ';",
          "1275:         }",
          "1277:         $options_html .= '>';",
          "1278:         $url_params = array(",
          "1279:             'db' => $db,",
          "1280:             'table' => $table,",
          "1281:             'sql_query' => $sql_query,",
          "1282:             'goto' => $goto,",
          "1283:             'display_options_form' => 1",
          "1284:         );",
          "1286:         $options_html .= PMA_generate_common_hidden_inputs($url_params)",
          "1287:             . '<br />'",
          "1288:             . PMA_getDivForSliderEffect('displayoptions', __('Options'))",
          "1289:             . '<fieldset>';",
          "1293:             'P'   => __('Partial texts'),",
          "1294:             'F'   => __('Full texts')",
          "1298:             'display_text', $choices,",
          "1299:             $_SESSION['tmp_user_values']['display_text']",
          "1303:         if ($GLOBALS['cfgRelation']['relwork']",
          "1304:             && $GLOBALS['cfgRelation']['displaywork']",
          "1305:         ) {",
          "1306:             $options_html .= '<div class=\"formelement\">';",
          "1307:             $choices = array(",
          "1308:                 'K'   => __('Relational key'),",
          "1309:                 'D'   => __('Relational display column')",
          "1310:             );",
          "1312:             $options_html .= PMA_getRadioFields(",
          "1313:                 'relational_display', $choices,",
          "1314:                 $_SESSION['tmp_user_values']['relational_display']",
          "1315:             )",
          "1316:             . '</div>';",
          "1317:         }",
          "1319:         $options_html .= '<div class=\"formelement\">'",
          "1320:             . PMA_getCheckbox(",
          "1321:                 'display_binary', __('Show binary contents'),",
          "1322:                 ! empty($_SESSION['tmp_user_values']['display_binary']), false",
          "1323:             )",
          "1324:             . '<br />'",
          "1325:             . PMA_getCheckbox(",
          "1326:                 'display_blob', __('Show BLOB contents'),",
          "1327:                 ! empty($_SESSION['tmp_user_values']['display_blob']), false",
          "1328:             )",
          "1329:             . '<br />'",
          "1330:             . PMA_getCheckbox(",
          "1331:                 'display_binary_as_hex', __('Show binary contents as HEX'),",
          "1332:                 ! empty($_SESSION['tmp_user_values']['display_binary_as_hex']), false",
          "1333:             )",
          "1334:             . '</div>';",
          "1340:         $options_html .= '<div class=\"formelement\">'",
          "1341:             . PMA_getCheckbox(",
          "1342:                 'hide_transformation', __('Hide browser transformation'),",
          "1343:                 ! empty($_SESSION['tmp_user_values']['hide_transformation']), false",
          "1344:             )",
          "1347:         if (! PMA_DRIZZLE) {",
          "1348:             $options_html .= '<div class=\"formelement\">';",
          "1349:             $choices = array(",
          "1350:                 'GEOM'  => __('Geometry'),",
          "1351:                 'WKT'   => __('Well Known Text'),",
          "1352:                 'WKB'   => __('Well Known Binary')",
          "1353:             );",
          "1355:             $options_html .= PMA_getRadioFields(",
          "1356:                 'geometry_display', $choices,",
          "1357:                 $_SESSION['tmp_user_values']['geometry_display']",
          "1358:             )",
          "1359:                 . '</div>';",
          "1360:         }",
          "1362:         $options_html .= '<div class=\"clearfloat\"></div>'",
          "1363:             . '</fieldset>';",
          "1365:         $options_html .= '<fieldset class=\"tblFooters\">'",
          "1366:             . '<input type=\"submit\" value=\"' . __('Go') . '\" />'",
          "1367:             . '</fieldset>'",
          "1368:             . '</div>'",
          "1369:             . '</form>';",
          "1371:         return $options_html;",
          "1373:     } // end of the '_getOptionsBlock()' function",
          "1390:     private function _getFullOrPartialTextButtonOrLink($db, $table, $sql_query, $goto)",
          "1391:     {",
          "1393:         $url_params_full_text = array(",
          "1394:             'db' => $db,",
          "1395:             'table' => $table,",
          "1396:             'sql_query' => $sql_query,",
          "1397:             'goto' => $goto,",
          "1398:             'full_text_button' => 1",
          "1399:         );",
          "1401:         if ($_SESSION['tmp_user_values']['display_text'] == 'F') {",
          "1403:             $tmp_image_file = $GLOBALS['pmaThemeImage'] . 's_partialtext.png';",
          "1404:             $tmp_txt = __('Partial texts');",
          "1405:             $url_params_full_text['display_text'] = 'P';",
          "1406:         } else {",
          "1407:             $tmp_image_file = $GLOBALS['pmaThemeImage'] . 's_fulltext.png';",
          "1408:             $tmp_txt = __('Full texts');",
          "1409:             $url_params_full_text['display_text'] = 'F';",
          "1410:         }",
          "1412:         $tmp_image = '<img class=\"fulltext\" src=\"' . $tmp_image_file . '\" alt=\"'",
          "1413:                      . $tmp_txt . '\" title=\"' . $tmp_txt . '\" />';",
          "1414:         $tmp_url = 'sql.php' . PMA_generate_common_url($url_params_full_text);",
          "1416:         return PMA_linkOrButton($tmp_url, $tmp_image, array(), false);",
          "1418:     } // end of the '_getFullOrPartialTextButtonOrLink()' function",
          "1434:     private function _getFormForMultiRowOperations($db, $table, $del_lnk)",
          "1435:     {",
          "1437:         $form_html = '';",
          "1439:         if (($del_lnk == 'dr') || ($del_lnk == 'kp')) {",
          "1441:             $form_html .= '<form method=\"post\" action=\"tbl_row_action.php\" '",
          "1442:                 . 'name=\"resultsForm\" id=\"resultsForm\"';",
          "1444:             if ($GLOBALS['cfg']['AjaxEnable']) {",
          "1445:                 $form_html .= ' class=\"ajax\" ';",
          "1446:             }",
          "1448:             $form_html .= '>' . \"\\n\"",
          "1449:                 . PMA_generate_common_hidden_inputs($db, $table, 1)",
          "1450:                 . '<input type=\"hidden\" name=\"goto\" value=\"sql.php\" />' . \"\\n\";",
          "1451:         }",
          "1453:         $form_html .= '<table id=\"table_results\" class=\"data';",
          "1455:             $form_html .= ' ajax';",
          "1457:         $form_html .= '\">' . \"\\n\";",
          "1459:         return $form_html;",
          "1461:     } // end of the '_getFormForMultiRowOperations()' function",
          "1476:     private function _getCommentForRow($comments_map, $fields_meta)",
          "1477:     {",
          "1478:         $comments = '';",
          "1479:         if (isset($comments_map)",
          "1480:             && isset($comments_map[$fields_meta->table])",
          "1481:             && isset($comments_map[$fields_meta->table][$fields_meta->name])",
          "1482:         ) {",
          "1483:             $comments = '<span class=\"tblcomment\">'",
          "1484:                 . htmlspecialchars(",
          "1485:                     $comments_map[$fields_meta->table][$fields_meta->name]",
          "1486:                 )",
          "1487:                 . '</span>';",
          "1488:         }",
          "1489:         return $comments;",
          "1490:     } // end of the '_getCommentForRow()' function",
          "1507:     private function _isInSorted(",
          "1508:         $sort_expression, $sort_expression_nodirection, $sort_tbl,",
          "1509:         $name_to_use_in_sort",
          "1512:         if (empty($sort_expression)) {",
          "1513:             $is_in_sort = false;",
          "1524:             if (! empty($sort_tbl)",
          "1525:                 && (strpos($sort_expression_nodirection, $sort_tbl) === false)",
          "1526:                 && (strpos($sort_expression_nodirection, '(') === false)",
          "1527:             ) {",
          "1528:                 $new_sort_expression_nodirection = $sort_tbl",
          "1529:                     . $sort_expression_nodirection;",
          "1530:             } else {",
          "1531:                 $new_sort_expression_nodirection = $sort_expression_nodirection;",
          "1532:             }",
          "1534:             $is_in_sort = false;",
          "1535:             $sort_name = str_replace('`', '', $sort_tbl) . $name_to_use_in_sort;",
          "1537:             if (($sort_name == str_replace('`', '', $new_sort_expression_nodirection))",
          "1538:                 || ($sort_name == str_replace('`', '', $sort_expression_nodirection))",
          "1539:             ) {",
          "1540:                 $is_in_sort = true;",
          "1541:             }",
          "1544:         return $is_in_sort;",
          "1546:     } // end of the '_isInSorted()' function",
          "1564:     private function _getSortingUrlParams(",
          "1565:         $is_in_sort, $sort_direction, $fields_meta, $sort_order, $column_index",
          "1566:     ) {",
          "1568:         if (! $is_in_sort) {",
          "1571:             $GLOBALS['cfg']['Order'] = strtoupper($GLOBALS['cfg']['Order']);",
          "1573:             if ($GLOBALS['cfg']['Order'] === 'SMART') {",
          "1574:                 $sort_order .= (preg_match(",
          "1575:                     '@time|date@i',",
          "1576:                     $fields_meta->type",
          "1577:                 )) ? 'DESC' : 'ASC';",
          "1578:             } else {",
          "1579:                 $sort_order .= $GLOBALS['cfg']['Order'];",
          "1580:             }",
          "1581:             $order_img   = '';",
          "1583:         } elseif ($sort_direction == 'DESC') {",
          "1585:             $sort_order .= ' ASC';",
          "1586:             $order_img   = ' ' . PMA_getImage(",
          "1587:                 's_desc.png', __('Descending'),",
          "1588:                 array('class' => \"soimg$column_index\", 'title' => '')",
          "1589:             );",
          "1591:             $order_img  .= ' ' . PMA_getImage(",
          "1592:                 's_asc.png', __('Ascending'),",
          "1593:                 array('class' => \"soimg$column_index hide\", 'title' => '')",
          "1594:             );",
          "1596:         } else {",
          "1598:             $sort_order .= ' DESC';",
          "1599:             $order_img   = ' ' . PMA_getImage(",
          "1600:                 's_asc.png', __('Ascending'),",
          "1601:                 array('class' => \"soimg$column_index\", 'title' => '')",
          "1602:             );",
          "1604:             $order_img  .= ' ' . PMA_getImage(",
          "1605:                 's_desc.png', __('Descending'),",
          "1606:                 array('class' => \"soimg$column_index hide\", 'title' => '')",
          "1607:             );",
          "1608:         }",
          "1610:         return array($sort_order, $order_img);",
          "1612:     } // end of the '_getSortingUrlParams()' function",
          "1630:     private function _getSortOrderLink(",
          "1631:         $order_img, $col_index, $direction, $fields_meta, $order_url",
          "1632:     ) {",
          "1634:         $order_link_params = array();",
          "1636:         if (isset($order_img) && ($order_img != '')) {",
          "1637:             if (strstr($order_img, 'asc')) {",
          "1638:                 $order_link_params['onmouseover'] = \"$('.soimg$col_index').toggle()\";",
          "1639:                 $order_link_params['onmouseout']  = \"$('.soimg$col_index').toggle()\";",
          "1640:             } elseif (strstr($order_img, 'desc')) {",
          "1641:                 $order_link_params['onmouseover'] = \"$('.soimg$col_index').toggle()\";",
          "1642:                 $order_link_params['onmouseout']  = \"$('.soimg$col_index').toggle()\";",
          "1643:             }",
          "1644:         }",
          "1646:         if ($GLOBALS['cfg']['HeaderFlipType'] == 'auto') {",
          "1648:             $GLOBALS['cfg']['HeaderFlipType']",
          "1649:                 = (PMA_USR_BROWSER_AGENT == 'IE') ? 'css' : 'fake';",
          "1650:         }",
          "1652:         if ($direction == 'horizontalflipped'",
          "1653:             && $GLOBALS['cfg']['HeaderFlipType'] == 'css'",
          "1654:         ) {",
          "1655:             $order_link_params['style'] = 'direction: ltr; writing-mode: tb-rl;';",
          "1656:         }",
          "1658:         $order_link_params['title'] = __('Sort');",
          "1660:         $order_link_content = (($direction == 'horizontalflipped')",
          "1661:             && ($GLOBALS['cfg']['HeaderFlipType'] == 'fake'))",
          "1662:             ? PMA_flipstring(",
          "1663:                 htmlspecialchars($fields_meta->name),",
          "1664:                 \"<br />\\n\"",
          "1665:             )",
          "1666:             : htmlspecialchars($fields_meta->name);",
          "1668:         return PMA_linkOrButton(",
          "1669:             $order_url, $order_link_content . $order_img,",
          "1670:             $order_link_params, false, true",
          "1671:         );",
          "1673:     } // end of the '_getSortOrderLink()' function",
          "1694:     private function _getDraggableClassForSortableColumns(",
          "1695:         $col_visib, $col_visib_j, $condition_field, $direction, $fields_meta,",
          "1696:         $order_link, $comments",
          "1697:     ) {",
          "1699:         $draggable_html = '<th';",
          "1700:         $th_class = array();",
          "1701:         $th_class[] = 'draggable';",
          "1703:         if ($col_visib && !$col_visib_j) {",
          "1704:             $th_class[] = 'hide';",
          "1705:         }",
          "1707:         if ($condition_field) {",
          "1708:             $th_class[] = 'condition';",
          "1709:         }",
          "1711:         $th_class[] = 'column_heading';",
          "1712:         if ($GLOBALS['cfg']['BrowsePointerEnable'] == true) {",
          "1713:             $th_class[] = 'pointer';",
          "1714:         }",
          "1716:         if ($GLOBALS['cfg']['BrowseMarkerEnable'] == true) {",
          "1717:             $th_class[] = 'marker';",
          "1718:         }",
          "1720:         $draggable_html .= ' class=\"' . implode(' ', $th_class);",
          "1722:         if ($direction == 'horizontalflipped') {",
          "1723:             $draggable_html .= ' vbottom';",
          "1724:         }",
          "1726:         $draggable_html .= '\" data-column=\"' . htmlspecialchars($fields_meta->name)",
          "1727:             . '\">' . $order_link . $comments . '</th>';",
          "1729:         return $draggable_html;",
          "1731:     } // end of the '_getDraggableClassForSortableColumns()' function",
          "1751:     private function _getDraggableClassForNonSortableColumns(",
          "1752:         $col_visib, $col_visib_j, $condition_field,",
          "1753:         $direction, $fields_meta, $comments",
          "1754:     ) {",
          "1756:         $draggable_html = '<th';",
          "1757:         $th_class = array();",
          "1758:         $th_class[] = 'draggable';",
          "1760:         if ($col_visib && !$col_visib_j) {",
          "1761:             $th_class[] = 'hide';",
          "1762:         }",
          "1764:         if ($condition_field) {",
          "1765:             $th_class[] = 'condition';",
          "1766:         }",
          "1768:         $draggable_html .= ' class=\"' . implode(' ', $th_class);",
          "1769:         if ($direction == 'horizontalflipped') {",
          "1770:             $draggable_html .= ' vbottom';",
          "1771:         }",
          "1773:         $draggable_html .= '\"';",
          "1774:         if (($direction == 'horizontalflipped')",
          "1775:             && ($GLOBALS['cfg']['HeaderFlipType'] == 'css')",
          "1776:         ) {",
          "1777:             $draggable_html .= ' style=\"direction: ltr; writing-mode: tb-rl;\"';",
          "1778:         }",
          "1780:         $draggable_html .= ' data-column=\"'",
          "1781:             . htmlspecialchars($fields_meta->name) . '\">';",
          "1783:         if (($direction == 'horizontalflipped')",
          "1784:             && ($GLOBALS['cfg']['HeaderFlipType'] == 'fake')",
          "1785:         ) {",
          "1787:             $draggable_html .= PMA_flipstring(",
          "1788:                 htmlspecialchars($fields_meta->name), '<br />'",
          "1789:             );",
          "1791:         } else {",
          "1792:             $draggable_html .= htmlspecialchars($fields_meta->name);",
          "1793:         }",
          "1795:         $draggable_html .= \"\\n\" . $comments . '</th>';",
          "1797:         return $draggable_html;",
          "1799:     } // end of the '_getDraggableClassForNonSortableColumns()' function",
          "1816:     private function _buildValueDisplay($class, $condition_field, $value)",
          "1817:     {",
          "1818:         return '<td class=\"left ' . $class . ($condition_field ? ' condition' : '')",
          "1819:             . '\">' . $value . '</td>';",
          "1820:     } // end of the '_buildValueDisplay()' function",
          "1839:     private function _buildNullDisplay($class, $condition_field, $meta, $align = '')",
          "1840:     {",
          "1842:         return '<td ' . $align . ' class=\"'",
          "1843:             . $this->_addClass(",
          "1844:                 $class, $condition_field, $meta, ''",
          "1845:             )",
          "1846:             . ' null\"><i>NULL</i></td>';",
          "1847:     } // end of the '_buildNullDisplay()' function",
          "1866:     private function _buildEmptyDisplay($class, $condition_field, $meta, $align = '')",
          "1867:     {",
          "1868:         return '<td ' . $align . ' class=\"'",
          "1869:             . $this->_addClass(",
          "1870:                 $class, $condition_field, $meta, ' nowrap'",
          "1871:             )",
          "1872:             . '\"></td>';",
          "1873:     } // end of the '_buildEmptyDisplay()' function",
          "1893:     private function _addClass($class, $condition_field, $meta, $nowrap,",
          "1894:         $is_field_truncated = false, $transform_function = '', $default_function = ''",
          "1895:     ) {",
          "1898:         $enum_class = '';",
          "1899:         if (strpos($meta->flags, 'enum') !== false) {",
          "1900:             $enum_class = ' enum';",
          "1901:         }",
          "1903:         $set_class = '';",
          "1904:         if (strpos($meta->flags, 'set') !== false) {",
          "1905:             $set_class = ' set';",
          "1906:         }",
          "1908:         $bit_class = '';",
          "1909:         if (strpos($meta->type, 'bit') !== false) {",
          "1910:             $bit_class = ' bit';",
          "1911:         }",
          "1913:         $mime_type_class = '';",
          "1914:         if (isset($meta->mimetype)) {",
          "1915:             $mime_type_class = ' ' . preg_replace('/\\//', '_', $meta->mimetype);",
          "1916:         }",
          "1918:         return $class . ($condition_field ? ' condition' : '') . $nowrap",
          "1919:             . ' ' . ($is_field_truncated ? ' truncated' : '')",
          "1920:             . ($transform_function != $default_function ? ' transformed' : '')",
          "1921:             . $enum_class . $set_class . $bit_class . $mime_type_class;",
          "1923:     } // end of the '_addClass()' function",
          "1953:     private function _getTableBody(&$dt_result, &$is_display, $map, $analyzed_sql)",
          "1954:     {",
          "1956:         global $db, $table, $goto;",
          "1957:         global $sql_query, $fields_meta, $fields_cnt;",
          "1958:         global $vertical_display, $highlight_columns;",
          "1959:         global $row; // mostly because of browser transformations,",
          "1962:         $table_body_html = '';",
          "1966:         $url_sql_query = $this->_getUrlSqlQuery($analyzed_sql, $sql_query);",
          "1968:         if (! is_array($map)) {",
          "1969:             $map = array();",
          "1972:         $row_no                         = 0;",
          "1973:         $vertical_display['edit']       = array();",
          "1974:         $vertical_display['copy']       = array();",
          "1975:         $vertical_display['delete']     = array();",
          "1976:         $vertical_display['data']       = array();",
          "1977:         $vertical_display['row_delete'] = array();",
          "1979:         $grid_edit_class = 'grid_edit';",
          "1982:         list($col_order, $col_visib) = $this->_getColumnParams();",
          "1996:         $odd_row = true;",
          "1997:         $directionCondition",
          "1998:             = ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal')",
          "1999:             || ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped');",
          "2001:         while ($row = PMA_DBI_fetch_row($dt_result)) {",
          "2004:             $table_body_html .= $this->_getVerticalDisplaySupportSegments(",
          "2005:                 $vertical_display, $row_no, $directionCondition",
          "2006:             );",
          "2008:             $alternating_color_class = ($odd_row ? 'odd' : 'even');",
          "2009:             $odd_row = ! $odd_row;",
          "2011:             if ($directionCondition) {",
          "2013:                 $table_body_html .= '<tr class=\"' . $alternating_color_class . '\">';",
          "2024:             list($where_clause, $clause_is_unique, $condition_array)",
          "2025:                 = PMA_getUniqueCondition($dt_result, $fields_cnt, $fields_meta, $row);",
          "2026:             $where_clause_html = urlencode($where_clause);",
          "2030:             if (($is_display['edit_lnk'] != 'nn') || ($is_display['del_lnk'] != 'nn')) {",
          "2034:                 if ($GLOBALS['cfg']['PropertiesIconic'] === 'both') {",
          "2035:                     $iconic_spacer = '<div class=\"nowrap\">';",
          "2036:                 } else {",
          "2037:                     $iconic_spacer = '';",
          "2038:                 }",
          "2041:                 if ($is_display['edit_lnk'] == 'ur') { // update row case",
          "2043:                     list($edit_url, $copy_url, $edit_str, $copy_str, $edit_anchor_class)",
          "2044:                         = $this->_getModifiedLinks(",
          "2045:                             $db, $table, $where_clause,",
          "2046:                             $clause_is_unique, $url_sql_query",
          "2047:                         );",
          "2049:                 } // end if (1.2.1)",
          "2052:                 if (($is_display['del_lnk'] == 'dr')",
          "2053:                     || ($is_display['del_lnk'] == 'kp')",
          "2054:                 ) {",
          "2056:                     list($del_query, $del_url, $del_str, $js_conf)",
          "2057:                         = $this->_getDeleteAndKillLinks(",
          "2058:                             $db, $table, $where_clause, $clause_is_unique,",
          "2059:                             $url_sql_query, $goto, $is_display['del_lnk']",
          "2060:                         );",
          "2062:                 } // end if (1.2.2)",
          "2065:                 if ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "2066:                     || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "2067:                     && $directionCondition",
          "2068:                 ) {",
          "2070:                     $table_body_html .= $this->_getPlacedLinks(",
          "2071:                         'left', $del_url, $is_display, $row_no, $where_clause,",
          "2072:                         $where_clause_html, $condition_array, $del_query, 'l',",
          "2073:                         $edit_url, $copy_url, $edit_anchor_class, $edit_str,",
          "2074:                         $copy_str, $del_str, $js_conf",
          "2075:                     );",
          "2077:                 } elseif (($GLOBALS['cfg']['RowActionLinks'] == 'none')",
          "2078:                     && $directionCondition",
          "2079:                 ) {",
          "2081:                     $table_body_html .= $this->_getPlacedLinks(",
          "2082:                         'none', $del_url, $is_display, $row_no, $where_clause,",
          "2083:                         $where_clause_html, $condition_array, $del_query, 'l',",
          "2084:                         $edit_url, $copy_url, $edit_anchor_class, $edit_str,",
          "2085:                         $copy_str, $del_str, $js_conf",
          "2086:                     );",
          "2088:                 } // end if (1.3)",
          "2089:             } // end if (1)",
          "2093:             for ($j = 0; $j < $fields_cnt; ++$j) {",
          "2096:                 $i = $col_order ? $col_order[$j] : $j;",
          "2098:                 $meta    = $fields_meta[$i];",
          "2099:                 $not_null_class = $meta->not_null ? 'not_null' : '';",
          "2100:                 $relation_class = isset($map[$meta->name]) ? 'relation' : '';",
          "2101:                 $hide_class = ($col_visib && !$col_visib[$j]",
          "2103:                     && ($_SESSION['tmp_user_values']['disp_direction'] != 'vertical'))",
          "2104:                     ? 'hide'",
          "2105:                     : '';",
          "2108:                 $field_type_class = $this->_getClassForDateTimeRelatedFields($meta->type);",
          "2110:                 $pointer = $i;",
          "2111:                 $is_field_truncated = false;",
          "2114:                 $class = $this->_getResettedClassForInlineEdit(",
          "2115:                     $grid_edit_class, $not_null_class, $relation_class,",
          "2116:                     $hide_class, $field_type_class, $row_no",
          "2117:                 );",
          "2121:                 $condition_field = (isset($highlight_columns)",
          "2122:                     && (isset($highlight_columns[$meta->name])",
          "2123:                     || isset($highlight_columns[PMA_backquote($meta->name)])))",
          "2124:                     ? true",
          "2125:                     : false;",
          "2128:                 $default_function = 'PMA_mimeDefaultFunction'; // default_function",
          "2129:                 $transform_function = $default_function;",
          "2130:                 $transform_options = array();",
          "2132:                 if ($GLOBALS['cfgRelation']['mimework']",
          "2133:                     && $GLOBALS['cfg']['BrowseMIME']",
          "2134:                 ) {",
          "2136:                     if (isset($GLOBALS['mime_map'][$meta->name]['mimetype'])",
          "2137:                         && isset($GLOBALS['mime_map'][$meta->name]['transformation'])",
          "2138:                         && !empty($GLOBALS['mime_map'][$meta->name]['transformation'])",
          "2139:                     ) {",
          "2141:                         $include_file = './libraries/transformations/' . PMA_securePath(",
          "2145:                         if (file_exists($include_file)) {",
          "2147:                             $transformfunction_name = 'PMA_transformation_'",
          "2148:                             . str_replace(",
          "2149:                                 '.inc.php', '',",
          "2150:                                 $GLOBALS['mime_map'][$meta->name]['transformation']",
          "2153:                             include_once $include_file;",
          "2155:                             if (function_exists($transformfunction_name)) {",
          "2157:                                 $transform_function = $transformfunction_name;",
          "2159:                                 $transform_options  = PMA_transformation_getOptions(",
          "2160:                                     isset($GLOBALS['mime_map'][$meta->name]",
          "2161:                                         ['transformation_options']",
          "2162:                                     )",
          "2163:                                     ? $GLOBALS['mime_map'][$meta->name]",
          "2164:                                     ['transformation_options']",
          "2165:                                     : ''",
          "2166:                                 );",
          "2168:                                 $meta->mimetype = str_replace(",
          "2169:                                     '_', '/',",
          "2170:                                     $GLOBALS['mime_map'][$meta->name]['mimetype']",
          "2171:                                 );",
          "2172:                             }",
          "2173:                         } // end if file_exists",
          "2174:                     } // end if transformation is set",
          "2175:                 } // end if mime/transformation works.",
          "2177:                 $_url_params = array(",
          "2178:                     'db'            => $db,",
          "2179:                     'table'         => $table,",
          "2180:                     'where_clause'  => $where_clause,",
          "2181:                     'transform_key' => $meta->name,",
          "2182:                 );",
          "2184:                 if (! empty($sql_query)) {",
          "2185:                     $_url_params['sql_query'] = $url_sql_query;",
          "2186:                 }",
          "2188:                 $transform_options['wrapper_link']",
          "2189:                     = PMA_generate_common_url($_url_params);",
          "2191:                 if ($meta->numeric == 1) {",
          "2199:                     $vertical_display['data'][$row_no][$i]",
          "2200:                         = $this->_getDataCellForNumericFeilds(",
          "2201:                             $row[$i], $class, $condition_field, $meta,",
          "2202:                             $analyzed_sql, $transform_function, $map,",
          "2203:                             $default_function, $transform_options, $is_field_truncated",
          "2204:                         );",
          "2206:                 } elseif (stristr($meta->type, 'BLOB')) {",
          "2211:                     $field_flags = PMA_DBI_field_flags($dt_result, $i);",
          "2213:                     $vertical_display['data'][$row_no][$i]",
          "2214:                         = $this->_getDataCellForBlobField(",
          "2215:                             $row[$i], $class, $meta, $_url_params, $field_flags,",
          "2216:                             $transform_function, $default_function,",
          "2217:                             $transform_options, $condition_field, $is_field_truncated",
          "2218:                         );",
          "2220:                 } elseif ($meta->type == 'geometry') {",
          "2225:                     $class = str_replace('grid_edit', '', $class);",
          "2227:                     $vertical_display['data'][$row_no][$i]",
          "2228:                         = $this->_getDataCellForGeometryFields(",
          "2229:                             $row[$i], $class, $meta, $map, $_url_params,",
          "2230:                             $condition_field, $transform_function, $default_function,",
          "2231:                             $transform_options, $is_field_truncated, $analyzed_sql",
          "2232:                         );",
          "2234:                 } else {",
          "2237:                     $vertical_display['data'][$row_no][$i]",
          "2238:                         = $this->_getDataCellForNonNumericAndNonBlobFields(",
          "2239:                             $row[$i], $class, $meta, $map, $_url_params,",
          "2240:                             $condition_field, $transform_function, $default_function,",
          "2241:                             $transform_options, $is_field_truncated, $analyzed_sql,",
          "2242:                             $dt_result, $i",
          "2243:                         );",
          "2245:                 }",
          "2248:                 if ($directionCondition) {",
          "2249:                     $table_body_html .= $vertical_display['data'][$row_no][$i];",
          "2250:                 }",
          "2252:                 if (isset($vertical_display['rowdata'][$i][$row_no])) {",
          "2253:                     $vertical_display['rowdata'][$i][$row_no]",
          "2254:                         .= $vertical_display['data'][$row_no][$i];",
          "2255:                 } else {",
          "2256:                     $vertical_display['rowdata'][$i][$row_no]",
          "2257:                         = $vertical_display['data'][$row_no][$i];",
          "2258:                 }",
          "2259:             } // end for (2)",
          "2262:             if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "2263:                 || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "2264:                 && $directionCondition",
          "2265:             ) {",
          "2267:                 $table_body_html .= $this->_getPlacedLinks(",
          "2268:                     'right', $del_url, $is_display, $row_no, $where_clause,",
          "2269:                     $where_clause_html, $condition_array, $del_query, 'r',",
          "2270:                     $edit_url, $copy_url, $edit_anchor_class, $edit_str,",
          "2271:                     $copy_str, $del_str, $js_conf",
          "2274:             } // end if (3)",
          "2276:             if ($directionCondition) {",
          "2277:                 $table_body_html .= '</tr>';",
          "2278:             } // end if",
          "2282:             if (! isset($vertical_display['edit'][$row_no])) {",
          "2283:                 $vertical_display['edit'][$row_no]       = '';",
          "2284:                 $vertical_display['copy'][$row_no]       = '';",
          "2285:                 $vertical_display['delete'][$row_no]     = '';",
          "2286:                 $vertical_display['row_delete'][$row_no] = '';",
          "2287:             }",
          "2289:             $vertical_class = ' row_' . $row_no;",
          "2290:             if ($GLOBALS['cfg']['BrowsePointerEnable'] == true) {",
          "2291:                 $vertical_class .= ' vpointer';",
          "2292:             }",
          "2294:             if ($GLOBALS['cfg']['BrowseMarkerEnable'] == true) {",
          "2295:                 $vertical_class .= ' vmarker';",
          "2296:             }",
          "2298:             if (!empty($del_url) && ($is_display['del_lnk'] != 'kp')) {",
          "2300:                 $vertical_display['row_delete'][$row_no]",
          "2301:                     .= $this->_getCheckboxForMultiRowSubmissions(",
          "2302:                         $del_url, $is_display, $row_no, $where_clause_html,",
          "2303:                         $condition_array, $del_query, '[%_PMA_CHECKBOX_DIR_%]',",
          "2304:                         $alternating_color_class . $vertical_class",
          "2305:                     );",
          "2307:             } else {",
          "2308:                 unset($vertical_display['row_delete'][$row_no]);",
          "2311:             if (isset($edit_url)) {",
          "2313:                 $vertical_display['edit'][$row_no] .= $this->_getEditLink(",
          "2314:                     $edit_url,",
          "2315:                     $alternating_color_class . ' ' . $edit_anchor_class",
          "2316:                     . $vertical_class, $edit_str,",
          "2317:                     $where_clause,",
          "2318:                     $where_clause_html",
          "2319:                 );",
          "2321:             } else {",
          "2322:                 unset($vertical_display['edit'][$row_no]);",
          "2323:             }",
          "2325:             if (isset($copy_url)) {",
          "2327:                 $vertical_display['copy'][$row_no] .= $this->_getCopyLink(",
          "2328:                     $copy_url, $copy_str, $where_clause, $where_clause_html,",
          "2329:                     $alternating_color_class . $vertical_class",
          "2330:                 );",
          "2332:             } else {",
          "2333:                 unset($vertical_display['copy'][$row_no]);",
          "2334:             }",
          "2336:             if (isset($del_url)) {",
          "2338:                 if (! isset($js_conf)) {",
          "2339:                     $js_conf = '';",
          "2340:                 }",
          "2342:                 $vertical_display['delete'][$row_no] .= $this->_getDeleteLink(",
          "2343:                     $del_url, $del_str, $js_conf,",
          "2344:                     $alternating_color_class . $vertical_class",
          "2345:                 );",
          "2347:             } else {",
          "2348:                 unset($vertical_display['delete'][$row_no]);",
          "2349:             }",
          "2351:             $table_body_html .= $directionCondition ? \"\\n\" : '';",
          "2352:             $row_no++;",
          "2354:         } // end while",
          "2356:         return $table_body_html;",
          "2358:     } // end of the '_getTableBody()' function",
          "2373:     private function _getUrlSqlQuery($analyzed_sql, $sql_query)",
          "2374:     {",
          "2376:         if (isset($analyzed_sql)",
          "2377:             && isset($analyzed_sql[0])",
          "2378:             && isset($analyzed_sql[0]['querytype'])",
          "2379:             && ($analyzed_sql[0]['querytype'] == 'SELECT')",
          "2380:             && (strlen($sql_query) > 200)",
          "2381:         ) {",
          "2383:             $url_sql_query = 'SELECT ';",
          "2384:             if (isset($analyzed_sql[0]['queryflags']['distinct'])) {",
          "2385:                 $url_sql_query .= ' DISTINCT ';",
          "2386:             }",
          "2388:             $url_sql_query .= $analyzed_sql[0]['select_expr_clause'];",
          "2389:             if (!empty($analyzed_sql[0]['from_clause'])) {",
          "2390:                 $url_sql_query .= ' FROM ' . $analyzed_sql[0]['from_clause'];",
          "2391:             }",
          "2393:             return $url_sql_query;",
          "2394:         }",
          "2396:         return $sql_query;",
          "2398:     } // end of the '_getUrlSqlQuery()' function",
          "2410:     private function _getColumnParams()",
          "2411:     {",
          "2412:         if ($this->_isSelect()) {",
          "2413:             $pmatable = new PMA_Table($GLOBALS['table'], $GLOBALS['db']);",
          "2414:             $col_order = $pmatable->getUiProp(PMA_Table::PROP_COLUMN_ORDER);",
          "2415:             $col_visib = $pmatable->getUiProp(PMA_Table::PROP_COLUMN_VISIB);",
          "2416:         } else {",
          "2417:             $col_order = false;",
          "2418:             $col_visib = false;",
          "2421:         return array($col_order, $col_visib);",
          "2422:     } // end of the '_getColumnParams()' function",
          "2439:     private function _getVerticalDisplaySupportSegments(",
          "2440:         $vertical_display, $row_no, $directionCondition",
          "2441:     ) {",
          "2443:         $support_html = '';",
          "2445:         if ((($row_no != 0) && ($_SESSION['tmp_user_values']['repeat_cells'] != 0))",
          "2446:             && !($row_no % $_SESSION['tmp_user_values']['repeat_cells'])",
          "2447:             && $directionCondition",
          "2448:         ) {",
          "2450:             $support_html .= '<tr>' . \"\\n\";",
          "2452:             if ($vertical_display['emptypre'] > 0) {",
          "2454:                 $support_html .= '    <th colspan=\"'",
          "2455:                     . $vertical_display['emptypre'] . '\">'",
          "2456:                     . \"\\n\".'        &nbsp;</th>' . \"\\n\";",
          "2458:             } else if ($GLOBALS['cfg']['RowActionLinks'] == 'none') {",
          "2459:                 $support_html .= '    <th></th>' . \"\\n\";",
          "2460:             }",
          "2462:             foreach ($vertical_display['desc'] as $val) {",
          "2463:                 $support_html .= $val;",
          "2464:             }",
          "2466:             if ($vertical_display['emptyafter'] > 0) {",
          "2467:                 $support_html .= '    <th colspan=\"' . $vertical_display['emptyafter']",
          "2468:                     . '\">'",
          "2469:                     . \"\\n\" . '        &nbsp;</th>' . \"\\n\";",
          "2470:             }",
          "2471:             $support_html .= '</tr>' . \"\\n\";",
          "2472:         } // end if",
          "2474:         return $support_html;",
          "2476:     } // end of the '_getVerticalDisplaySupportSegments()' function",
          "2495:     private function _getModifiedLinks(",
          "2496:         $db, $table, $where_clause, $clause_is_unique, $url_sql_query",
          "2497:     ) {",
          "2500:                 'db'               => $db,",
          "2501:                 'table'            => $table,",
          "2502:                 'where_clause'     => $where_clause,",
          "2503:                 'clause_is_unique' => $clause_is_unique,",
          "2504:                 'sql_query'        => $url_sql_query,",
          "2505:                 'goto'             => 'sql.php',",
          "2508:         $edit_url = 'tbl_change.php'",
          "2509:             . PMA_generate_common_url(",
          "2510:                 $_url_params + array('default_action' => 'update')",
          "2511:             );",
          "2513:         $copy_url = 'tbl_change.php'",
          "2514:             . PMA_generate_common_url(",
          "2515:                 $_url_params + array('default_action' => 'insert')",
          "2518:         $edit_str = PMA_getIcon('b_edit.png', __('Edit'));",
          "2519:         $copy_str = PMA_getIcon('b_insrow.png', __('Copy'));",
          "2522:         $edit_anchor_class = \"edit_row_anchor\";",
          "2523:         if ( $clause_is_unique == 0) {",
          "2524:             $edit_anchor_class .= ' nonunique';",
          "2525:         }",
          "2527:         return array($edit_url, $copy_url, $edit_str, $copy_str, $edit_anchor_class);",
          "2529:     } // end of the '_getModifiedLinks()' function",
          "2550:     private function _getDeleteAndKillLinks(",
          "2551:         $db, $table, $where_clause, $clause_is_unique, $url_sql_query, $goto, $del_lnk",
          "2552:     ) {",
          "2554:         if ($del_lnk == 'dr') { // delete row case",
          "2556:             $_url_params = array(",
          "2557:                     'db'        => $db,",
          "2558:                     'table'     => $table,",
          "2559:                     'sql_query' => $url_sql_query,",
          "2560:                     'message_to_show' => __('The row has been deleted'),",
          "2561:                     'goto'      => (empty($goto) ? 'tbl_sql.php' : $goto),",
          "2562:                 );",
          "2564:             $lnk_goto = 'sql.php' . PMA_generate_common_url($_url_params, 'text');",
          "2566:             $del_query = 'DELETE FROM ' . PMA_backquote($db) . '.'",
          "2567:                 . PMA_backquote($table)",
          "2568:                 . ' WHERE ' . $where_clause .",
          "2569:                 ($clause_is_unique ? '' : ' LIMIT 1');",
          "2571:             $_url_params = array(",
          "2572:                     'db'        => $db,",
          "2573:                     'table'     => $table,",
          "2574:                     'sql_query' => $del_query,",
          "2575:                     'message_to_show' => __('The row has been deleted'),",
          "2576:                     'goto'      => $lnk_goto,",
          "2577:                 );",
          "2578:             $del_url  = 'sql.php' . PMA_generate_common_url($_url_params);",
          "2580:             $js_conf  = 'DELETE FROM ' . PMA_jsFormat($db) . '.'",
          "2581:                 . PMA_jsFormat($table)",
          "2582:                 . ' WHERE ' . PMA_jsFormat($where_clause, false)",
          "2583:                 . ($clause_is_unique ? '' : ' LIMIT 1');",
          "2585:             $del_str = PMA_getIcon('b_drop.png', __('Delete'));",
          "2587:         } elseif ($del_lnk == 'kp') { // kill process case",
          "2589:             $_url_params = array(",
          "2590:                     'db'        => $db,",
          "2591:                     'table'     => $table,",
          "2592:                     'sql_query' => $url_sql_query,",
          "2593:                     'goto'      => 'main.php',",
          "2594:                 );",
          "2596:             $lnk_goto = 'sql.php'",
          "2597:                 . PMA_generate_common_url(",
          "2598:                     $_url_params, 'text'",
          "2599:                 );",
          "2601:             $_url_params = array(",
          "2602:                     'db'        => 'mysql',",
          "2603:                     'sql_query' => 'KILL ' . $row[0],",
          "2604:                     'goto'      => $lnk_goto,",
          "2605:                 );",
          "2607:             $del_url  = 'sql.php' . PMA_generate_common_url($_url_params);",
          "2608:             $del_query = 'KILL ' . $row[0];",
          "2609:             $js_conf  = 'KILL ' . $row[0];",
          "2610:             $del_str = PMA_getIcon('b_drop.png', __('Kill'));",
          "2613:         return array($del_query, $del_url, $del_str, $js_conf);",
          "2615:     } // end of the '_getDeleteAndKillLinks()' function",
          "2644:     private function _getPlacedLinks(",
          "2645:         $dir, $del_url, $is_display, $row_no, $where_clause, $where_clause_html,",
          "2646:         $condition_array, $del_query, $dir_letter, $edit_url, $copy_url,",
          "2647:         $edit_anchor_class, $edit_str, $copy_str, $del_str, $js_conf",
          "2648:     ) {",
          "2650:         if (! isset($js_conf)) {",
          "2651:             $js_conf = '';",
          "2652:         }",
          "2654:         return $this->_getCheckboxAndLinks(",
          "2655:             $dir, $del_url, $is_display,",
          "2656:             $row_no, $where_clause, $where_clause_html, $condition_array,",
          "2657:             $del_query, 'l', $edit_url, $copy_url, $edit_anchor_class,",
          "2658:             $edit_str, $copy_str, $del_str, $js_conf",
          "2659:         );",
          "2661:     } // end of the '_getPlacedLinks()' function",
          "2680:     private function _getResettedClassForInlineEdit(",
          "2681:         $grid_edit_class, $not_null_class, $relation_class,",
          "2682:         $hide_class, $field_type_class, $row_no",
          "2683:     ) {",
          "2685:         $class = 'data ' . $grid_edit_class . ' ' . $not_null_class . ' '",
          "2686:             . $relation_class . ' ' . $hide_class . ' ' . $field_type_class;",
          "2688:         if (($_SESSION['tmp_user_values']['disp_direction'] == 'vertical')",
          "2689:             && (! isset($GLOBALS['printview']) || ($GLOBALS['printview'] != '1'))",
          "2690:         ) {",
          "2692:             $class .= ' row_' . $row_no;",
          "2693:             if ($GLOBALS['cfg']['BrowsePointerEnable'] == true) {",
          "2694:                 $class .= ' vpointer';",
          "2695:             }",
          "2697:             if ($GLOBALS['cfg']['BrowseMarkerEnable'] == true) {",
          "2698:                 $class .= ' vmarker';",
          "2699:             }",
          "2700:         }",
          "2702:         return $class;",
          "2704:     } // end of the '_getResettedClassForInlineEdit()' function",
          "2718:     private function _getClassForDateTimeRelatedFields($type)",
          "2719:     {",
          "2720:         if ((substr($type, 0, 9) == 'timestamp') || ($type == 'datetime')) {",
          "2721:             $field_type_class = 'datetimefield';",
          "2722:         } else if ($type == 'date') {",
          "2723:             $field_type_class = 'datefield';",
          "2724:         } else {",
          "2725:             $field_type_class = '';",
          "2726:         }",
          "2727:         return $field_type_class;",
          "2728:     } // end of the '_getClassForDateTimeRelatedFields()' function",
          "2751:     private function _getDataCellForNumericFeilds(",
          "2752:         $column, $class, $condition_field, $meta, $map, $is_field_truncated,",
          "2753:         $analyzed_sql, $transform_function, $default_function, $transform_options",
          "2754:     ) {",
          "2758:             $cell = $this->_buildNullDisplay(",
          "2759:                 'right '.$class, $condition_field, $meta, ''",
          "2760:             );",
          "2762:         } elseif ($column != '') {",
          "2764:             $nowrap = ' nowrap';",
          "2765:             $where_comparison = ' = ' . $column;",
          "2767:             $cell = $this->_getRowData(",
          "2768:                 'right '.$class, $condition_field,",
          "2769:                 $analyzed_sql, $meta, $map, $column,",
          "2770:                 $transform_function, $default_function, $nowrap,",
          "2771:                 $where_comparison, $transform_options,",
          "2772:                 $is_field_truncated",
          "2774:         } else {",
          "2776:             $cell = $this->_buildEmptyDisplay(",
          "2777:                 'right '.$class, $condition_field, $meta, ''",
          "2781:         return $cell;",
          "2783:     } // end of the '_getDataCellForNumericFeilds()' function",
          "2806:     private function _getDataCellForBlobField(",
          "2807:         $column, $class, $meta, $_url_params, $field_flags, $transform_function,",
          "2808:         $default_function, $transform_options, $condition_field, $is_field_truncated",
          "2809:     ) {",
          "2811:         if (stristr($field_flags, 'BINARY')) {",
          "2814:             $class = str_replace('grid_edit', '', $class);",
          "2816:             if (! isset($column) || is_null($column)) {",
          "2818:                 $cell = $this->_buildNullDisplay($class, $condition_field, $meta);",
          "2820:             } else {",
          "2822:                 $blobtext = $this->_handleNonPrintableContents(",
          "2823:                     'BLOB', (isset($column) ? $column : ''),",
          "2824:                     $transform_function, $transform_options,",
          "2825:                     $default_function, $meta, $_url_params",
          "2826:                 );",
          "2828:                 $cell = $this->_buildValueDisplay(",
          "2829:                     $class, $condition_field, $blobtext",
          "2830:                 );",
          "2831:                 unset($blobtext);",
          "2833:         } else {",
          "2836:             if (! isset($column) || is_null($column)) {",
          "2838:                 $cell = $this->_buildNullDisplay($class, $condition_field, $meta);",
          "2840:             } elseif ($column != '') {",
          "2844:                 if ((PMA_strlen($column) > $GLOBALS['cfg']['LimitChars'])",
          "2845:                     && ($_SESSION['tmp_user_values']['display_text'] == 'P')",
          "2846:                 ) {",
          "2847:                     $column = PMA_substr($column, 0, $GLOBALS['cfg']['LimitChars'])",
          "2848:                         . '...';",
          "2849:                     $is_field_truncated = true;",
          "2850:                 }",
          "2854:                 $column = ($default_function != $transform_function)",
          "2855:                     ? $transform_function($column, $transform_options, $meta)",
          "2856:                     : $default_function($column, array(), $meta);",
          "2858:                 if ($is_field_truncated) {",
          "2859:                     $class .= ' truncated';",
          "2860:                 }",
          "2862:                 $cell = $this->_buildValueDisplay($class, $condition_field, $column);",
          "2864:             } else {",
          "2865:                 $cell = $this->_buildEmptyDisplay($class, $condition_field, $meta);",
          "2866:             }",
          "2867:         }",
          "2869:         return $cell;",
          "2871:     } // end of the '_getDataCellForBlobField()' function",
          "2895:     private function _getDataCellForGeometryFields(",
          "2896:         $column, $class, $meta, $map, $_url_params, $condition_field,",
          "2897:         $transform_function, $default_function, $transform_options,",
          "2898:         $is_field_truncated, $analyzed_sql",
          "2899:     ) {",
          "2901:         if (! isset($column) || is_null($column)) {",
          "2903:             $cell = $this->_buildNullDisplay($class, $condition_field, $meta);",
          "2905:         } elseif ($column != '') {",
          "2908:             if ($_SESSION['tmp_user_values']['geometry_display'] == 'GEOM') {",
          "2910:                 $geometry_text = $this->_handleNonPrintableContents(",
          "2911:                     'GEOMETRY', (isset($column) ? $column : ''),",
          "2912:                     $transform_function, $transform_options,",
          "2913:                     $default_function, $meta",
          "2914:                 );",
          "2916:                 $cell = $this->_buildValueDisplay(",
          "2917:                     $class, $condition_field, $geometry_text",
          "2918:                 );",
          "2920:             } elseif ($_SESSION['tmp_user_values']['geometry_display'] == 'WKT') {",
          "2926:                 $wktval = PMA_asWKT($column);",
          "2928:                 if ((PMA_strlen($wktval) > $GLOBALS['cfg']['LimitChars'])",
          "2931:                     $wktval = PMA_substr($wktval, 0, $GLOBALS['cfg']['LimitChars'])",
          "2936:                 $cell = $this->_getRowData(",
          "2937:                     $class, $condition_field, $analyzed_sql, $meta, $map,",
          "2938:                     $wktval, $transform_function, $default_function, '',",
          "2946:                 if ($_SESSION['tmp_user_values']['display_binary']) {",
          "2948:                     $where_comparison = ' = ' . $column;",
          "2950:                     if ($_SESSION['tmp_user_values']['display_binary_as_hex']",
          "2951:                         && PMA_containsNonPrintableAscii($column)",
          "2952:                     ) {",
          "2953:                         $wkbval = PMA_substr(bin2hex($column), 8);",
          "2954:                     } else {",
          "2955:                         $wkbval = htmlspecialchars(",
          "2956:                             PMA_replaceBinaryContents($column)",
          "2957:                         );",
          "2958:                     }",
          "2960:                     if ((PMA_strlen($wkbval) > $GLOBALS['cfg']['LimitChars'])",
          "2961:                         && ($_SESSION['tmp_user_values']['display_text'] == 'P')",
          "2962:                     ) {",
          "2963:                         $wkbval = PMA_substr($wkbval, 0, $GLOBALS['cfg']['LimitChars'])",
          "2964:                             . '...';",
          "2965:                         $is_field_truncated = true;",
          "2966:                     }",
          "2968:                     $cell = $this->_getRowData(",
          "2969:                         $class, $condition_field,",
          "2970:                         $analyzed_sql, $meta, $map, $wkbval,",
          "2971:                         $transform_function, $default_function, '',",
          "2972:                         $where_comparison, $transform_options,",
          "2973:                         $is_field_truncated",
          "2974:                     );",
          "2976:                 } else {",
          "2977:                     $wkbval = $this->_handleNonPrintableContents(",
          "2978:                         'BINARY', $column, $transform_function,",
          "2979:                         $transform_options, $default_function, $meta,",
          "2980:                         $_url_params",
          "2981:                     );",
          "2983:                     $cell = $this->_buildValueDisplay($class, $condition_field, $wkbval);",
          "2984:                 }",
          "2986:         } else {",
          "2987:             $cell = $this->_buildEmptyDisplay($class, $condition_field, $meta);",
          "2990:         return $cell;",
          "2992:     } // end of the '_getDataCellForGeometryFields()' function",
          "3019:     private function _getDataCellForNonNumericAndNonBlobFields(",
          "3020:         $column, $class, $meta, $map, $_url_params, $condition_field,",
          "3021:         $transform_function, $default_function, $transform_options,",
          "3022:         $is_field_truncated, $analyzed_sql, &$dt_result, $col_index",
          "3023:     ) {",
          "3025:         if (! isset($column) || is_null($column)) {",
          "3027:             $cell = $this->_buildNullDisplay($class, $condition_field, $meta);",
          "3029:         } elseif ($column != '') {",
          "3033:             if (PMA_strlen($column) > $GLOBALS['cfg']['LimitChars']",
          "3034:                 && ($_SESSION['tmp_user_values']['display_text'] == 'P')",
          "3035:                 && !strpos($transform_function, 'link') === true",
          "3036:             ) {",
          "3037:                 $column = PMA_substr($column, 0, $GLOBALS['cfg']['LimitChars'])",
          "3038:                     . '...';",
          "3039:                 $is_field_truncated = true;",
          "3040:             }",
          "3043:             $field_flags = PMA_DBI_field_flags($dt_result, $col_index);",
          "3044:             $formatted = false;",
          "3046:             if (isset($meta->_type) && $meta->_type === MYSQLI_TYPE_BIT) {",
          "3048:                 $column = PMA_printableBitValue(",
          "3049:                     $column, $meta->length",
          "3050:                 );",
          "3055:             } elseif (stristr($field_flags, 'BINARY')",
          "3056:                 && ($meta->type == 'string')",
          "3057:                 && !(isset($GLOBALS['is_analyse']) && $GLOBALS['is_analyse'])",
          "3058:             ) {",
          "3060:                 if ($_SESSION['tmp_user_values']['display_binary']) {",
          "3064:                     if ($_SESSION['tmp_user_values']['display_binary_as_hex']",
          "3065:                         && PMA_containsNonPrintableAscii($column)",
          "3066:                     ) {",
          "3067:                         $column = bin2hex($column);",
          "3068:                     } else {",
          "3069:                         $column = htmlspecialchars(",
          "3070:                             PMA_replaceBinaryContents($column)",
          "3071:                         );",
          "3072:                     }",
          "3077:                     $column = $this->_handleNonPrintableContents(",
          "3078:                         'BINARY', $column, $transform_function,",
          "3079:                         $transform_options, $default_function,",
          "3080:                         $meta, $_url_params",
          "3082:                     $formatted = true;",
          "3086:             if ($formatted) {",
          "3088:                 $cell = $this->_buildValueDisplay(",
          "3089:                     $class, $condition_field, $column",
          "3090:                 );",
          "3092:             } else {",
          "3095:                 $function_nowrap = $transform_function . '_nowrap';",
          "3097:                 $bool_nowrap = (($default_function != $transform_function)",
          "3098:                     && function_exists($function_nowrap))",
          "3099:                     ? $function_nowrap($transform_options)",
          "3100:                     : false;",
          "3103:                 $nowrap = (preg_match('@DATE|TIME@i', $meta->type)",
          "3104:                     || $bool_nowrap) ? ' nowrap' : '';",
          "3106:                 $where_comparison = ' = \\'' . PMA_sqlAddSlashes($column)",
          "3107:                     . '\\'';",
          "3109:                 $cell = $this->_getRowData(",
          "3110:                     $class, $condition_field,",
          "3111:                     $analyzed_sql, $meta, $map, $column,",
          "3112:                     $transform_function, $default_function, $nowrap,",
          "3113:                     $where_comparison, $transform_options,",
          "3114:                     $is_field_truncated",
          "3115:                 );",
          "3116:             }",
          "3118:         } else {",
          "3119:             $cell = $this->_buildEmptyDisplay($class, $condition_field, $meta);",
          "3122:         return $cell;",
          "3124:     } // end of the '_getDataCellForNonNumericAndNonBlobFields()' function",
          "3138:     private function _getVerticalTable()",
          "3139:     {",
          "3141:         global $vertical_display;",
          "3143:         $vertical_table_html = '';",
          "3146:         if (($GLOBALS['cfg']['RowActionLinks'] != 'right')",
          "3147:             && is_array($vertical_display['row_delete'])",
          "3148:             && ((count($vertical_display['row_delete']) > 0)",
          "3149:             || !empty($vertical_display['textbtn']))",
          "3150:         ) {",
          "3152:             $vertical_table_html .= '<tr>' . \"\\n\";",
          "3153:             if ($GLOBALS['cfg']['RowActionLinks'] == 'none') {",
          "3156:                 $vertical_table_html .= '<th></th>' . \"\\n\";",
          "3157:             }",
          "3159:             $vertical_table_html .= $vertical_display['textbtn']",
          "3160:                                  . $this->_getCheckBoxesForMultipleRowOperations(",
          "3161:                                      $vertical_display, '_left'",
          "3162:                                  )",
          "3163:                                  . '</tr>' . \"\\n\";",
          "3164:         } // end if",
          "3167:         if ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "3168:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3169:             && is_array($vertical_display['edit'])",
          "3170:             && ((count($vertical_display['edit']) > 0)",
          "3171:             || !empty($vertical_display['textbtn']))",
          "3172:         ) {",
          "3173:             $vertical_table_html .= $this->_getOperationLinksForVerticleTable(",
          "3174:                 $vertical_display, 'edit'",
          "3175:             );",
          "3176:         } // end if",
          "3179:         if ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "3180:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3181:             && is_array($vertical_display['copy'])",
          "3182:             && ((count($vertical_display['copy']) > 0)",
          "3183:             || !empty($vertical_display['textbtn']))",
          "3184:         ) {",
          "3185:             $vertical_table_html .= $this->_getOperationLinksForVerticleTable(",
          "3186:                 $vertical_display, 'copy'",
          "3187:             );",
          "3188:         } // end if",
          "3191:         if ((($GLOBALS['cfg']['RowActionLinks'] == 'left')",
          "3192:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3193:             && is_array($vertical_display['delete'])",
          "3194:             && ((count($vertical_display['delete']) > 0)",
          "3195:             || !empty($vertical_display['textbtn']))",
          "3196:         ) {",
          "3197:             $vertical_table_html .= $this->_getOperationLinksForVerticleTable(",
          "3198:                 $vertical_display, 'delete'",
          "3199:             );",
          "3200:         } // end if",
          "3202:         list($col_order, $col_visib) = $this->_getColumnParams();",
          "3205:         foreach ($vertical_display['desc'] AS $j => $val) {",
          "3208:             $key = $col_order ? $col_order[$j] : $j;",
          "3210:             $vertical_table_html .= '<tr'",
          "3211:                 . (($col_visib && !$col_visib[$j]) ? ' class=\"hide\"' : '')",
          "3212:                 . '>' . \"\\n\"",
          "3213:                 . $val;",
          "3215:             $cell_displayed = 0;",
          "3216:             foreach ($vertical_display['rowdata'][$key] as $subval) {",
          "3218:                 if (($cell_displayed != 0)",
          "3219:                     && ($_SESSION['tmp_user_values']['repeat_cells'] != 0)",
          "3220:                     && !($cell_displayed % $_SESSION['tmp_user_values']['repeat_cells'])",
          "3221:                 ) {",
          "3222:                     $vertical_table_html .= $val;",
          "3223:                 }",
          "3225:                 $vertical_table_html .= $subval;",
          "3226:                 $cell_displayed++;",
          "3228:             } // end while",
          "3230:             $vertical_table_html .= '</tr>' . \"\\n\";",
          "3231:         } // end while",
          "3234:         if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "3235:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3236:             && is_array($vertical_display['row_delete'])",
          "3237:             && ((count($vertical_display['row_delete']) > 0)",
          "3238:             || !empty($vertical_display['textbtn']))",
          "3239:         ) {",
          "3241:             $vertical_table_html .= '<tr>' . \"\\n\" . $vertical_display['textbtn']",
          "3242:                                  . $this->_getCheckBoxesForMultipleRowOperations(",
          "3243:                                      $vertical_display, '_right'",
          "3244:                                  )",
          "3245:                                  . '</tr>' . \"\\n\";",
          "3246:         } // end if",
          "3249:         if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "3250:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3251:             && is_array($vertical_display['edit'])",
          "3252:             && ((count($vertical_display['edit']) > 0)",
          "3253:             || !empty($vertical_display['textbtn']))",
          "3254:         ) {",
          "3255:             $vertical_table_html .= $this->_getOperationLinksForVerticleTable(",
          "3256:                 $vertical_display, 'edit'",
          "3257:             );",
          "3258:         } // end if",
          "3261:         if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "3262:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3263:             && is_array($vertical_display['copy'])",
          "3264:             && ((count($vertical_display['copy']) > 0)",
          "3265:             || !empty($vertical_display['textbtn']))",
          "3266:         ) {",
          "3267:             $vertical_table_html .= $this->_getOperationLinksForVerticleTable(",
          "3268:                 $vertical_display, 'copy'",
          "3269:             );",
          "3270:         } // end if",
          "3273:         if ((($GLOBALS['cfg']['RowActionLinks'] == 'right')",
          "3274:             || ($GLOBALS['cfg']['RowActionLinks'] == 'both'))",
          "3275:             && is_array($vertical_display['delete'])",
          "3276:             && ((count($vertical_display['delete']) > 0)",
          "3277:             || !empty($vertical_display['textbtn']))",
          "3278:         ) {",
          "3279:             $vertical_table_html .= $this->_getOperationLinksForVerticleTable(",
          "3280:                 $vertical_display, 'delete'",
          "3281:             );",
          "3282:         }",
          "3284:         return $vertical_table_html;",
          "3286:     } // end of the '_getVerticalTable' function",
          "3301:     private function _getOperationLinksForVerticleTable($vertical_display, $operation)",
          "3302:     {",
          "3304:         $link_html = '<tr>' . \"\\n\";",
          "3306:         if (! is_array($vertical_display['row_delete'])) {",
          "3308:             if (($operation == 'edit') || ($operation == 'copy')) {",
          "3309:                 $link_html .= $vertical_display['textbtn'];",
          "3311:             } elseif ($operation == 'delete') {",
          "3313:                 if (! is_array($vertical_display['edit'])) {",
          "3314:                     $link_html .= $vertical_display['textbtn'];",
          "3315:                 }",
          "3316:             }",
          "3317:         }",
          "3319:         foreach ($vertical_display[$operation] as $val) {",
          "3320:             $link_html .= $val;",
          "3321:         } // end while",
          "3323:         $link_html .= '</tr>' . \"\\n\";",
          "3325:         return $link_html;",
          "3327:     } // end of the '_getOperationLinksForVerticleTable' function",
          "3342:     private function _getCheckBoxesForMultipleRowOperations($vertical_display, $dir)",
          "3343:     {",
          "3345:         $checkBoxes_html = '';",
          "3346:         $cell_displayed = 0;",
          "3348:         foreach ($vertical_display['row_delete'] as $val) {",
          "3350:             if (($cell_displayed != 0)",
          "3351:                 && ($_SESSION['tmp_user_values']['repeat_cells'] != 0)",
          "3352:                 && !($cell_displayed % $_SESSION['tmp_user_values']['repeat_cells'])",
          "3353:             ) {",
          "3355:                 $checkBoxes_html .= '<th'",
          "3356:                     . (($is_display['edit_lnk'] != 'nn')",
          "3357:                         && ($is_display['del_lnk'] != 'nn'))",
          "3358:                         ? ' rowspan=\"4\"'",
          "3359:                         : ''",
          "3360:                     . '></th>' . \"\\n\";",
          "3362:             }",
          "3364:             $checkBoxes_html .= str_replace('[%_PMA_CHECKBOX_DIR_%]', $dir, $val);",
          "3365:             $cell_displayed++;",
          "3366:         } // end while",
          "3368:         return $checkBoxes_html;",
          "3370:     } // end of the '_getCheckBoxesForMultipleRowOperations' function",
          "3388:     public function setConfigParamsForDisplayTable()",
          "3389:     {",
          "3391:         $sql_md5 = md5($GLOBALS['sql_query']);",
          "3393:         $_SESSION['tmp_user_values']['query'][$sql_md5]['sql'] = $GLOBALS['sql_query'];",
          "3395:         $valid_disp_dir = PMA_isValid(",
          "3396:             $_REQUEST['disp_direction'],",
          "3397:             array('horizontal', 'vertical', 'horizontalflipped')",
          "3398:         );",
          "3400:         if ($valid_disp_dir) {",
          "3401:             $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction']",
          "3402:                 = $_REQUEST['disp_direction'];",
          "3403:             unset($_REQUEST['disp_direction']);",
          "3404:         } elseif (",
          "3405:             empty($_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction'])",
          "3406:         ) {",
          "3407:             $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction']",
          "3408:                 = $GLOBALS['cfg']['DefaultDisplay'];",
          "3409:         }",
          "3411:         if (PMA_isValid($_REQUEST['repeat_cells'], 'numeric')) {",
          "3412:             $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells']",
          "3413:                 = $_REQUEST['repeat_cells'];",
          "3414:             unset($_REQUEST['repeat_cells']);",
          "3415:         } elseif (",
          "3416:             empty($_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells'])",
          "3417:         ) {",
          "3418:             $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells']",
          "3419:                 = $GLOBALS['cfg']['RepeatCells'];",
          "3420:         }",
          "3424:         if ((PMA_isValid($_REQUEST['session_max_rows'], 'numeric')",
          "3425:             && ((int) $_REQUEST['session_max_rows'] == $_REQUEST['session_max_rows']))",
          "3426:             || ($_REQUEST['session_max_rows'] == 'all')",
          "3427:         ) {",
          "3428:             $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows']",
          "3429:                 = $_REQUEST['session_max_rows'];",
          "3430:             unset($_REQUEST['session_max_rows']);",
          "3431:         } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows'])) {",
          "3432:             $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows']",
          "3433:                 = $GLOBALS['cfg']['MaxRows'];",
          "3434:         }",
          "3436:         if (PMA_isValid($_REQUEST['pos'], 'numeric')) {",
          "3437:             $_SESSION['tmp_user_values']['query'][$sql_md5]['pos'] = $_REQUEST['pos'];",
          "3438:             unset($_REQUEST['pos']);",
          "3439:         } elseif (empty($_SESSION['tmp_user_values']['query'][$sql_md5]['pos'])) {",
          "3440:             $_SESSION['tmp_user_values']['query'][$sql_md5]['pos'] = 0;",
          "3441:         }",
          "3443:         if (PMA_isValid($_REQUEST['display_text'], array('P', 'F'))) {",
          "3444:             $_SESSION['tmp_user_values']['query'][$sql_md5]['display_text']",
          "3445:                 = $_REQUEST['display_text'];",
          "3446:             unset($_REQUEST['display_text']);",
          "3447:         } elseif (",
          "3448:             empty($_SESSION['tmp_user_values']['query'][$sql_md5]['display_text'])",
          "3450:             $_SESSION['tmp_user_values']['query'][$sql_md5]['display_text'] = 'P';",
          "3453:         if (PMA_isValid($_REQUEST['relational_display'], array('K', 'D'))) {",
          "3454:             $_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display']",
          "3455:                 = $_REQUEST['relational_display'];",
          "3456:             unset($_REQUEST['relational_display']);",
          "3457:         } elseif (",
          "3458:             empty($_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display'])",
          "3459:         ) {",
          "3460:             $_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display'] = 'K';",
          "3461:         }",
          "3463:         if (PMA_isValid($_REQUEST['geometry_display'], array('WKT', 'WKB', 'GEOM'))) {",
          "3464:             $_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display']",
          "3465:                 = $_REQUEST['geometry_display'];",
          "3466:             unset($_REQUEST['geometry_display']);",
          "3467:         } elseif (",
          "3468:             empty($_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'])",
          "3469:         ) {",
          "3470:             $_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'] = 'GEOM';",
          "3471:         }",
          "3473:         if (isset($_REQUEST['display_binary'])) {",
          "3474:             $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary'] = true;",
          "3475:             unset($_REQUEST['display_binary']);",
          "3476:         } elseif (isset($_REQUEST['display_options_form'])) {",
          "3478:             unset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary']);",
          "3479:         } elseif (isset($_REQUEST['full_text_button'])) {",
          "3481:         } else {",
          "3485:             $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary'] = true;",
          "3486:         }",
          "3488:         if (isset($_REQUEST['display_binary_as_hex'])) {",
          "3490:                 = true;",
          "3491:             unset($_REQUEST['display_binary_as_hex']);",
          "3492:         } elseif (isset($_REQUEST['display_options_form'])) {",
          "3494:             unset(",
          "3495:                 $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex']",
          "3496:             );",
          "3497:         } elseif (isset($_REQUEST['full_text_button'])) {",
          "3499:         } else {",
          "3501:             if (isset($GLOBALS['cfg']['DisplayBinaryAsHex'])",
          "3502:                 && ($GLOBALS['cfg']['DisplayBinaryAsHex'] === true)",
          "3503:             ) {",
          "3504:                 $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex']",
          "3505:                     = true;",
          "3506:             }",
          "3507:         }",
          "3509:         if (isset($_REQUEST['display_blob'])) {",
          "3510:             $_SESSION['tmp_user_values']['query'][$sql_md5]['display_blob'] = true;",
          "3511:             unset($_REQUEST['display_blob']);",
          "3512:         } elseif (isset($_REQUEST['display_options_form'])) {",
          "3514:             unset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_blob']);",
          "3515:         }",
          "3517:         if (isset($_REQUEST['hide_transformation'])) {",
          "3518:             $_SESSION['tmp_user_values']['query'][$sql_md5]['hide_transformation']",
          "3519:                 = true;",
          "3520:             unset($_REQUEST['hide_transformation']);",
          "3521:         } elseif (isset($_REQUEST['display_options_form'])) {",
          "3523:             unset(",
          "3524:                 $_SESSION['tmp_user_values']['query'][$sql_md5]['hide_transformation']",
          "3525:             );",
          "3526:         }",
          "3531:         $tmp = $_SESSION['tmp_user_values']['query'][$sql_md5];",
          "3532:         unset($_SESSION['tmp_user_values']['query'][$sql_md5]);",
          "3533:         $_SESSION['tmp_user_values']['query'][$sql_md5] = $tmp;",
          "3536:         if (count($_SESSION['tmp_user_values']['query']) > 10) {",
          "3537:             array_shift($_SESSION['tmp_user_values']['query']);",
          "3539:         }",
          "3542:         $_SESSION['tmp_user_values']['display_text']",
          "3543:             = $_SESSION['tmp_user_values']['query'][$sql_md5]['display_text'];",
          "3544:         $_SESSION['tmp_user_values']['relational_display']",
          "3545:             = $_SESSION['tmp_user_values']['query'][$sql_md5]['relational_display'];",
          "3546:         $_SESSION['tmp_user_values']['geometry_display']",
          "3547:             = $_SESSION['tmp_user_values']['query'][$sql_md5]['geometry_display'];",
          "3548:         $_SESSION['tmp_user_values']['display_binary']",
          "3549:             = isset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary'])",
          "3550:             ? true",
          "3551:             : false;",
          "3552:         $_SESSION['tmp_user_values']['display_binary_as_hex']",
          "3553:             = isset(",
          "3554:                 $_SESSION['tmp_user_values']['query'][$sql_md5]['display_binary_as_hex']",
          "3555:             )",
          "3556:             ? true",
          "3557:             : false;",
          "3558:         $_SESSION['tmp_user_values']['display_blob']",
          "3559:             = isset($_SESSION['tmp_user_values']['query'][$sql_md5]['display_blob'])",
          "3560:             ? true",
          "3561:             : false;",
          "3562:         $_SESSION['tmp_user_values']['hide_transformation']",
          "3563:             = isset(",
          "3564:                 $_SESSION['tmp_user_values']['query'][$sql_md5]['hide_transformation']",
          "3565:             )",
          "3566:             ? true",
          "3567:             : false;",
          "3568:         $_SESSION['tmp_user_values']['pos']",
          "3569:             = $_SESSION['tmp_user_values']['query'][$sql_md5]['pos'];",
          "3570:         $_SESSION['tmp_user_values']['max_rows']",
          "3571:             = $_SESSION['tmp_user_values']['query'][$sql_md5]['max_rows'];",
          "3572:         $_SESSION['tmp_user_values']['repeat_cells']",
          "3573:             = $_SESSION['tmp_user_values']['query'][$sql_md5]['repeat_cells'];",
          "3574:         $_SESSION['tmp_user_values']['disp_direction']",
          "3575:             = $_SESSION['tmp_user_values']['query'][$sql_md5]['disp_direction'];",
          "3577:     }",
          "3615:     public function getTable(&$dt_result, &$the_disp_mode, $analyzed_sql)",
          "3616:     {",
          "3618:         global $db, $table, $goto;",
          "3619:         global $sql_query, $num_rows, $unlim_num_rows, $fields_meta, $fields_cnt;",
          "3620:         global $vertical_display, $highlight_columns;",
          "3621:         global $cfgRelation;",
          "3622:         global $showtable;",
          "3624:         $table_html = '';",
          "3633:         $is_innodb = (isset($showtable['Type']) && $showtable['Type'] == 'InnoDB');",
          "3635:         if ($is_innodb",
          "3636:             && ! isset($analyzed_sql[0]['queryflags']['union'])",
          "3637:             && ! isset($analyzed_sql[0]['table_ref'][1]['table_name'])",
          "3638:             && (empty($analyzed_sql[0]['where_clause'])",
          "3639:             || ($analyzed_sql[0]['where_clause'] == '1 '))",
          "3640:         ) {",
          "3642:             $pre_count = '~';",
          "3643:             $after_count = PMA_showHint(",
          "3644:                 PMA_sanitize(",
          "3645:                     __('May be approximate. See [a@./Documentation.html#faq3_11@Documentation]FAQ 3.11[/a]')",
          "3646:                 )",
          "3647:             );",
          "3648:         } else {",
          "3649:             $pre_count = '';",
          "3650:             $after_count = '';",
          "3651:         }",
          "3657:         $total      = '';",
          "3658:         $is_display = $this->_setDisplayMode($the_disp_mode, $total);",
          "3661:         if ($is_display['nav_bar'] == '1') {",
          "3662:             list($pos_next, $pos_prev) = $this->_getOffsets();",
          "3663:         } // end if",
          "3668:         list($sort_expression, $sort_expression_nodirection, $sort_direction)",
          "3669:             = $this->_getSortParams($analyzed_sql[0]['order_by_clause']);",
          "3674:         $sorted_column_message = $this->_getSortedColumnMessage(",
          "3675:             $dt_result, $fields_meta, $num_rows,",
          "3676:             $sort_expression_nodirection, $table",
          "3683:         if (($is_display['nav_bar'] == '1') && isset($pos_next)) {",
          "3685:             $message = $this->_setMessageInformation(",
          "3686:                 $db, $table, $sorted_column_message,",
          "3687:                 $analyzed_sql[0]['limit_clause'], $unlim_num_rows,",
          "3688:                 $total, $pos_next, $pre_count, $after_count",
          "3689:             );",
          "3691:             $table_html .= PMA_getMessage($message, $sql_query, 'success');",
          "3693:         } elseif (! isset($GLOBALS['printview']) || ($GLOBALS['printview'] != '1')) {",
          "3695:             $table_html .= PMA_getMessage(",
          "3696:                 __('Your SQL query has been executed successfully'),",
          "3697:                 $sql_query, 'success'",
          "3698:             );",
          "3699:         }",
          "3702:         if (! strlen($table)) {",
          "3704:             if (isset($analyzed_sql[0]['query_type'])",
          "3705:                 && ($analyzed_sql[0]['query_type'] == 'SELECT')",
          "3706:             ) {",
          "3710:                 $table = $fields_meta[0]->table;",
          "3711:             } else {",
          "3712:                 $table = '';",
          "3713:             }",
          "3715:         }",
          "3717:         if (($is_display['nav_bar'] == '1') && empty($analyzed_sql[0]['limit_clause'])) {",
          "3719:             $table_html .= $this->_getTableNavigation(",
          "3720:                 $pos_next, $pos_prev, $sql_query, 'top_direction_dropdown'",
          "3721:             )",
          "3722:             . \"\\n\";",
          "3724:         } elseif (! isset($GLOBALS['printview']) || ($GLOBALS['printview'] != '1')) {",
          "3725:             $table_html .= \"\\n\" . '<br /><br />' . \"\\n\";",
          "3732:         $map = array();",
          "3735:         $target=array();",
          "3736:         if (isset($analyzed_sql[0]['table_ref'])",
          "3737:             && is_array($analyzed_sql[0]['table_ref'])",
          "3738:         ) {",
          "3740:             foreach ($analyzed_sql[0]['table_ref']",
          "3741:                 as $table_ref_position => $table_ref) {",
          "3742:                 $target[] = $analyzed_sql[0]['table_ref']",
          "3743:                     [$table_ref_position]['table_true_name'];",
          "3744:             }",
          "3746:         }",
          "3748:         $tabs    = '(\\'' . join('\\',\\'', $target) . '\\')';",
          "3750:         if (! strlen($table)) {",
          "3751:             $exist_rel = false;",
          "3752:         } else {",
          "3760:             $exist_rel = PMA_getForeigners($db, $table, '', 'both');",
          "3762:             if ($exist_rel) {",
          "3764:                 foreach ($exist_rel as $master_field => $rel) {",
          "3766:                     $display_field = PMA_getDisplayField(",
          "3767:                         $rel['foreign_db'], $rel['foreign_table']",
          "3768:                     );",
          "3770:                     $map[$master_field] = array(",
          "3771:                             $rel['foreign_table'],",
          "3772:                             $rel['foreign_field'],",
          "3773:                             $display_field,",
          "3774:                             $rel['foreign_db']",
          "3775:                         );",
          "3776:                 } // end while",
          "3777:             } // end if",
          "3778:         } // end if",
          "3782:         $table_html .= $this->_getTableHeaders(",
          "3783:             $is_display, $fields_meta, $fields_cnt, $analyzed_sql,",
          "3784:             $sort_expression, $sort_expression_nodirection, $sort_direction",
          "3785:         )",
          "3786:         . '<tbody>' . \"\\n\";",
          "3788:         $url_query = '';",
          "3789:         $table_html .= $this->_getTableBody(",
          "3790:             $dt_result, $is_display, $map, $analyzed_sql",
          "3794:         if ($_SESSION['tmp_user_values']['disp_direction'] == 'vertical') {",
          "3795:             $table_html .= $this->_getVerticalTable();",
          "3796:         } // end if",
          "3798:         unset($vertical_display);",
          "3799:         $table_html .= '</tbody>' . \"\\n\"",
          "3800:             . '</table>';",
          "3804:         if ($is_display['del_lnk'] == 'dr' && $is_display['del_lnk'] != 'kp') {",
          "3806:             $table_html .= $this->_getMultiRowOperationLinks(",
          "3807:                 $dt_result, $fields_cnt, $fields_meta, $num_rows, $analyzed_sql,",
          "3808:                 $db, $table, $sql_query, $goto, $is_display['del_lnk']",
          "3809:             );",
          "3811:         }",
          "3815:         if ($is_display['nav_bar'] == '1' && empty($analyzed_sql[0]['limit_clause'])) {",
          "3817:             $table_html .= '<br />' . \"\\n\";",
          "3818:             $table_html .= $this->_getTableNavigation(",
          "3819:                 $pos_next, $pos_prev, $sql_query, 'bottom_direction_dropdown'",
          "3820:             );",
          "3822:         } elseif (! isset($GLOBALS['printview']) || $GLOBALS['printview'] != '1') {",
          "3823:             $table_html .= \"\\n\" . '<br /><br />' . \"\\n\";",
          "3824:         }",
          "3827:         if (! isset($GLOBALS['printview']) || $GLOBALS['printview'] != '1') {",
          "3828:             $table_html .= $this->_getResultsOperations($the_disp_mode, $analyzed_sql);",
          "3829:         }",
          "3831:         return $table_html;",
          "3833:     } // end of the 'getTable()' function",
          "3845:     private function _getOffsets()",
          "3846:     {",
          "3848:         if ($_SESSION['tmp_user_values']['max_rows'] == 'all') {",
          "3849:             $pos_next     = 0;",
          "3850:             $pos_prev     = 0;",
          "3851:         } else {",
          "3853:             $pos_next     = $_SESSION['tmp_user_values']['pos']",
          "3854:                             + $_SESSION['tmp_user_values']['max_rows'];",
          "3856:             $pos_prev     = $_SESSION['tmp_user_values']['pos']",
          "3857:                             - $_SESSION['tmp_user_values']['max_rows'];",
          "3859:             if ($pos_prev < 0) {",
          "3860:                 $pos_prev = 0;",
          "3861:             }",
          "3862:         }",
          "3864:         return array($pos_next, $pos_prev);",
          "3866:     } // end of the '_getOffsets()' function",
          "3881:     private function _getSortParams($order_by_clause)",
          "3882:     {",
          "3884:         if (! empty($order_by_clause)) {",
          "3886:             $sort_expression = trim(",
          "3887:                 str_replace('  ', ' ', $order_by_clause)",
          "3888:             );",
          "3892:             preg_match('@(.*)([[:space:]]*(ASC|DESC))@si', $sort_expression, $matches);",
          "3894:             $sort_expression_nodirection = isset($matches[1])",
          "3895:                 ? trim($matches[1])",
          "3896:                 : $sort_expression;",
          "3898:             $sort_direction = isset($matches[2]) ? trim($matches[2]) : '';",
          "3899:             unset($matches);",
          "3902:             $sort_expression = $sort_expression_nodirection = $sort_direction = '';",
          "3905:         return array($sort_expression, $sort_expression_nodirection, $sort_direction);",
          "3907:     } // end of the '_getSortParams()' function",
          "3928:     private function _getSortedColumnMessage(&$dt_result, $fields_meta,",
          "3929:         $num_rows, $sort_expression_nodirection, $table",
          "3930:     ) {",
          "3932:         if (! empty($sort_expression_nodirection)) {",
          "3934:             if (strpos($sort_expression_nodirection, '.') === false) {",
          "3935:                 $sort_table = $table;",
          "3936:                 $sort_column = $sort_expression_nodirection;",
          "3937:             } else {",
          "3938:                 list($sort_table, $sort_column)",
          "3939:                     = explode('.', $sort_expression_nodirection);",
          "3942:             $sort_table = PMA_unQuote($sort_table);",
          "3943:             $sort_column = PMA_unQuote($sort_column);",
          "3947:             $sorted_column_index = false;",
          "3949:             foreach ($fields_meta as $key => $meta) {",
          "3950:                 if (($meta->table == $sort_table) && ($meta->name == $sort_column)) {",
          "3951:                     $sorted_column_index = $key;",
          "3952:                     break;",
          "3953:                 }",
          "3954:             }",
          "3956:             if ($sorted_column_index !== false) {",
          "3959:                 $row = PMA_DBI_fetch_row($dt_result);",
          "3962:                 $default_function = 'PMA_mimeDefaultFunction';",
          "3963:                 $transform_function = $default_function;",
          "3964:                 $transform_options = array();",
          "3967:                 $meta = $fields_meta[$sorted_column_index];",
          "3969:                 if (stristr($meta->type, 'BLOB') || ($meta->type == 'geometry')) {",
          "3971:                     $column_for_first_row = $this->_handleNonPrintableContents(",
          "3972:                         $meta->type, $row[$sorted_column_index], $transform_function,",
          "3973:                         $transform_options, $default_function, $meta, null",
          "3974:                     );",
          "3976:                 } else {",
          "3977:                     $column_for_first_row = $row[$sorted_column_index];",
          "3978:                 }",
          "3980:                 $column_for_first_row = strtoupper(",
          "3981:                     substr($column_for_first_row, 0, $GLOBALS['cfg']['LimitChars'])",
          "3985:                 PMA_DBI_data_seek($dt_result, $num_rows - 1);",
          "3986:                 $row = PMA_DBI_fetch_row($dt_result);",
          "3989:                 $meta = $fields_meta[$sorted_column_index];",
          "3990:                 if (stristr($meta->type, 'BLOB') || ($meta->type == 'geometry')) {",
          "3992:                     $column_for_last_row = $this->_handleNonPrintableContents(",
          "3993:                         $meta->type, $row[$sorted_column_index], $transform_function,",
          "3994:                         $transform_options, $default_function, $meta, null",
          "3995:                     );",
          "3997:                 } else {",
          "3998:                     $column_for_last_row = $row[$sorted_column_index];",
          "3999:                 }",
          "4001:                 $column_for_last_row = strtoupper(",
          "4002:                     substr($column_for_last_row, 0, $GLOBALS['cfg']['LimitChars'])",
          "4003:                 );",
          "4006:                 PMA_DBI_data_seek($dt_result, 0);",
          "4009:                 return ' [' . htmlspecialchars($sort_column)",
          "4010:                     . ': <strong>' . htmlspecialchars($column_for_first_row) . ' - '",
          "4011:                     . htmlspecialchars($column_for_last_row) . '</strong>]';",
          "4012:             }",
          "4013:         }",
          "4015:         return null;",
          "4017:     } // end of the '_getSortedColumnMessage()' function",
          "4043:     private function _setMessageInformation(",
          "4044:         $db, $table, $sorted_column_message, $limit_clause, $unlim_num_rows,",
          "4045:         $total, $pos_next, $pre_count, $after_count",
          "4046:     ) {",
          "4048:         if (isset($unlim_num_rows) && ($unlim_num_rows != $total)) {",
          "4049:             $selectstring = ', ' . $unlim_num_rows . ' ' . __('in query');",
          "4051:             $selectstring = '';",
          "4054:         if (! empty($limit_clause)) {",
          "4056:             $limit_data = PMA_analyzeLimitClause($limit_clause);",
          "4057:             $first_shown_rec = $limit_data['start'];",
          "4059:             if ($limit_data['length'] < $total) {",
          "4060:                 $last_shown_rec = $limit_data['start'] + $limit_data['length'] - 1;",
          "4061:             } else {",
          "4062:                 $last_shown_rec = $limit_data['start'] + $total - 1;",
          "4063:             }",
          "4065:         } elseif (($_SESSION['tmp_user_values']['max_rows'] == 'all')",
          "4066:             || ($pos_next > $total)",
          "4067:         ) {",
          "4069:             $first_shown_rec = $_SESSION['tmp_user_values']['pos'];",
          "4070:             $last_shown_rec  = $total - 1;",
          "4072:         } else {",
          "4074:             $first_shown_rec = $_SESSION['tmp_user_values']['pos'];",
          "4075:             $last_shown_rec  = $pos_next - 1;",
          "4077:         }",
          "4079:         if (PMA_Table::isView($db, $table)",
          "4080:             && ($total == $GLOBALS['cfg']['MaxExactCountViews'])",
          "4081:         ) {",
          "4083:             $message = PMA_Message::notice(",
          "4084:                 __('This view has at least this number of rows. Please refer to %sdocumentation%s.')",
          "4085:             );",
          "4087:             $message->addParam('[a@./Documentation.html#cfg_MaxExactCount@_blank]');",
          "4088:             $message->addParam('[/a]');",
          "4089:             $message_view_warning = PMA_showHint($message);",
          "4091:         } else {",
          "4092:             $message_view_warning = false;",
          "4093:         }",
          "4095:         $message = PMA_Message::success(__('Showing rows'));",
          "4096:         $message->addMessage($first_shown_rec);",
          "4098:         if ($message_view_warning) {",
          "4100:             $message->addMessage('...', ' - ');",
          "4101:             $message->addMessage($message_view_warning);",
          "4102:             $message->addMessage('(');",
          "4104:         } else {",
          "4106:             $message->addMessage($last_shown_rec, ' - ');",
          "4107:             $message->addMessage(' (');",
          "4108:             $message->addMessage($pre_count  . PMA_formatNumber($total, 0));",
          "4109:             $message->addString(__('total'));",
          "4111:             if (!empty($after_count)) {",
          "4112:                 $message->addMessage($after_count);",
          "4113:             }",
          "4115:             $message->addMessage($selectstring, '');",
          "4116:             $message->addMessage(', ', '');",
          "4118:         }",
          "4120:         $messagge_qt = PMA_Message::notice(__('Query took %01.4f sec') . ')');",
          "4121:         $messagge_qt->addParam($GLOBALS['querytime']);",
          "4123:         $message->addMessage($messagge_qt, '');",
          "4124:         if (! is_null($sorted_column_message)) {",
          "4125:             $message->addMessage($sorted_column_message, '');",
          "4126:         }",
          "4128:         return $message;",
          "4130:     } // end of the '_setMessageInformation()' function",
          "4156:     private function _getMultiRowOperationLinks(",
          "4157:         &$dt_result, $fields_cnt, $fields_meta, $num_rows, $analyzed_sql,",
          "4158:         $db, $table, $sql_query, $goto, $del_link",
          "4159:     ) {",
          "4161:         $links_html = '';",
          "4162:         $delete_text = ($del_link == 'dr') ? __('Delete') : __('Kill');",
          "4164:         $_url_params = array(",
          "4165:             'db'        => $db,",
          "4166:             'table'     => $table,",
          "4167:             'sql_query' => $sql_query,",
          "4168:             'goto'      => $goto,",
          "4169:         );",
          "4170:         $uncheckall_url = 'sql.php' . PMA_generate_common_url($_url_params);",
          "4172:         $_url_params['checkall'] = '1';",
          "4173:         $checkall_url = 'sql.php' . PMA_generate_common_url($_url_params);",
          "4175:         if ($_SESSION['tmp_user_values']['disp_direction'] == 'vertical') {",
          "4177:             $checkall_params['onclick']",
          "4178:                 = 'if (setCheckboxes(\\'resultsForm\\', true)) return false;';",
          "4179:             $uncheckall_params['onclick']",
          "4180:                 = 'if (setCheckboxes(\\'resultsForm\\', false)) return false;';",
          "4182:         } else {",
          "4184:             $checkall_params['onclick']",
          "4185:                 = 'if (markAllRows(\\'resultsForm\\')) return false;';",
          "4186:             $uncheckall_params['onclick']",
          "4187:                 = 'if (unMarkAllRows(\\'resultsForm\\')) return false;';",
          "4189:         }",
          "4191:         $checkall_link = PMA_linkOrButton(",
          "4192:             $checkall_url, __('Check All'), $checkall_params, false",
          "4193:         );",
          "4195:         $uncheckall_link = PMA_linkOrButton(",
          "4196:             $uncheckall_url, __('Uncheck All'), $uncheckall_params, false",
          "4197:         );",
          "4199:         if ($_SESSION['tmp_user_values']['disp_direction'] != 'vertical') {",
          "4201:             $links_html .= '<img class=\"selectallarrow\" width=\"38\" height=\"22\"'",
          "4202:                 . ' src=\"' . $GLOBALS['pmaThemeImage'] . 'arrow_'",
          "4203:                 . $GLOBALS['text_dir'] . '.png' . '\"'",
          "4204:                 . ' alt=\"' . __('With selected:') . '\" />';",
          "4205:         }",
          "4207:         $links_html .= $checkall_link . \"\\n\"",
          "4208:             . ' / ' . \"\\n\"",
          "4209:             . $uncheckall_link . \"\\n\"",
          "4210:             . '<i>' . __('With selected:') . '</i>' . \"\\n\";",
          "4212:         $links_html .= PMA_getButtonOrImage(",
          "4213:             'submit_mult', 'mult_submit', 'submit_mult_change',",
          "4214:             __('Change'), 'b_edit.png', 'edit'",
          "4215:         );",
          "4218:             'submit_mult', 'mult_submit', 'submit_mult_delete',",
          "4219:             $delete_text, 'b_drop.png', 'delete'",
          "4222:         if (isset($analyzed_sql[0]) && $analyzed_sql[0]['querytype'] == 'SELECT') {",
          "4223:             $links_html .= PMA_getButtonOrImage(",
          "4224:                 'submit_mult', 'mult_submit', 'submit_mult_export',",
          "4225:                 __('Export'), 'b_tblexport.png', 'export'",
          "4226:             );",
          "4227:         }",
          "4229:         $links_html .= \"\\n\";",
          "4231:         $links_html .= '<input type=\"hidden\" name=\"sql_query\"'",
          "4232:             .' value=\"' . htmlspecialchars($sql_query) . '\" />' . \"\\n\";",
          "4234:         if (! empty($GLOBALS['url_query'])) {",
          "4235:             $links_html .= '<input type=\"hidden\" name=\"url_query\"'",
          "4236:                 .' value=\"' . $GLOBALS['url_query'] . '\" />' . \"\\n\";",
          "4237:         }",
          "4240:         PMA_DBI_data_seek($dt_result, $num_rows - 1);",
          "4241:         $row = PMA_DBI_fetch_row($dt_result);",
          "4245:         list($where_clause, $clause_is_unique, $condition_array)",
          "4246:             = PMA_getUniqueCondition($dt_result, $fields_cnt, $fields_meta, $row);",
          "4249:         PMA_DBI_data_seek($dt_result, 0);",
          "4251:         $links_html .= '<input type=\"hidden\" name=\"clause_is_unique\"'",
          "4252:             .' value=\"' . $clause_is_unique . '\" />' . \"\\n\";",
          "4254:         $links_html .= '</form>' . \"\\n\";",
          "4256:         return $links_html;",
          "4258:     } // end of the '_getMultiRowOperationLinks()' function",
          "4305:     private function _getResultsOperations($the_disp_mode, $analyzed_sql)",
          "4306:     {",
          "4308:         global $db, $table, $sql_query, $unlim_num_rows, $fields_meta;",
          "4310:         $results_operations_html = '';",
          "4311:         $header_shown = false;",
          "4312:         $header = '<fieldset><legend>' . __('Query results operations') . '</legend>';",
          "4314:         if (($the_disp_mode[6] == '1') || ($the_disp_mode[9] == '1')) {",
          "4316:             if ($the_disp_mode[9] == '1') {",
          "4318:                 if (!$header_shown) {",
          "4319:                     $results_operations_html .= $header;",
          "4320:                     $header_shown = true;",
          "4321:                 }",
          "4323:                 $_url_params = array(",
          "4324:                     'db'        => $db,",
          "4325:                     'table'     => $table,",
          "4326:                     'printview' => '1',",
          "4327:                     'sql_query' => $sql_query,",
          "4328:                 );",
          "4329:                 $url_query = PMA_generate_common_url($_url_params);",
          "4331:                 $results_operations_html .= PMA_linkOrButton(",
          "4332:                     'sql.php' . $url_query,",
          "4333:                     PMA_getIcon('b_print.png', __('Print view'), true),",
          "4334:                     '', true, true, 'print_view'",
          "4335:                 )",
          "4336:                 . \"\\n\";",
          "4338:                 if ($_SESSION['tmp_user_values']['display_text']) {",
          "4340:                     $_url_params['display_text'] = 'F';",
          "4342:                     $results_operations_html .= PMA_linkOrButton(",
          "4343:                         'sql.php' . PMA_generate_common_url($_url_params),",
          "4344:                         PMA_getIcon(",
          "4345:                             'b_print.png', __('Print view (with full texts)'), true",
          "4346:                         ),",
          "4347:                         '', true, true, 'print_view'",
          "4348:                     )",
          "4349:                     . \"\\n\";",
          "4350:                     unset($_url_params['display_text']);",
          "4351:                 }",
          "4352:             } // end displays \"printable view\"",
          "4353:         }",
          "4362:         if (isset($analyzed_sql[0])",
          "4363:             && ($analyzed_sql[0]['querytype'] == 'SELECT')",
          "4364:             && ! isset($printview)",
          "4365:             && ! isset($analyzed_sql[0]['queryflags']['procedure'])",
          "4366:         ) {",
          "4368:             if (isset($analyzed_sql[0]['table_ref'][0]['table_true_name'])",
          "4369:                 && ! isset($analyzed_sql[0]['table_ref'][1]['table_true_name'])",
          "4370:             ) {",
          "4371:                 $_url_params['single_table'] = 'true';",
          "4372:             }",
          "4379:             $_url_params['unlim_num_rows'] = $unlim_num_rows;",
          "4389:             if (empty($_url_params['table']) && !empty($_url_params['db'])) {",
          "4390:                 $_url_params['table'] = PMA_DBI_fetch_value(\"SHOW TABLES\");",
          "4392:                 if ($_url_params['table'] === false) {",
          "4393:                     unset($_url_params['table']);",
          "4394:                 }",
          "4395:             }",
          "4398:                 'tbl_export.php' . PMA_generate_common_url($_url_params),",
          "4399:                 PMA_getIcon('b_tblexport.png', __('Export'), true),",
          "4400:                 '', true, true, ''",
          "4405:             $results_operations_html .= PMA_linkOrButton(",
          "4406:                 'tbl_chart.php' . PMA_generate_common_url($_url_params),",
          "4407:                 PMA_getIcon('b_chart.png', __('Display chart'), true),",
          "4408:                 '', true, true, ''",
          "4409:             )",
          "4410:             . \"\\n\";",
          "4413:             $geometry_found = false;",
          "4415:             foreach ($fields_meta as $meta) {",
          "4416:                 if ($meta->type == 'geometry') {",
          "4417:                     $geometry_found = true;",
          "4418:                     break;",
          "4419:                 }",
          "4420:             }",
          "4422:             if ($geometry_found) {",
          "4424:                     'tbl_gis_visualization.php' . PMA_generate_common_url($_url_params),",
          "4425:                     PMA_getIcon('b_globe.gif', __('Visualize GIS data'), true),",
          "4426:                     '', true, true, ''",
          "4445:         if (!PMA_DRIZZLE && !isset($analyzed_sql[0]['queryflags']['procedure'])) {",
          "4447:             $ajax_class = $GLOBALS['cfg']['AjaxEnable'] ? ' ajax' : '';",
          "4449:             $results_operations_html .= '<span class=\"create_view' . $ajax_class . '\">'",
          "4450:                 . PMA_linkOrButton(",
          "4451:                     'view_create.php' . $url_query,",
          "4452:                     PMA_getIcon('b_views.png', __('Create view'), true),",
          "4453:                     '', true, true, ''",
          "4454:                 )",
          "4455:                 . '</span>' . \"\\n\";",
          "4458:         if ($header_shown) {",
          "4459:             $results_operations_html .= '</fieldset><br />';",
          "4462:         return $results_operations_html;",
          "4464:     } // end of the '_getResultsOperations()' function",
          "4487:     private function _handleNonPrintableContents($category, $content, $transform_function,",
          "4488:         $transform_options, $default_function, $meta, $url_params = array()",
          "4489:     ) {",
          "4491:         $result = '[' . $category;",
          "4493:         if (is_null($content)) {",
          "4495:             $result .= ' - NULL';",
          "4496:             $size = 0;",
          "4498:         } elseif (isset($content)) {",
          "4500:             $size = strlen($content);",
          "4501:             $display_size = PMA_formatByteDown($size, 3, 1);",
          "4502:             $result .= ' - '. $display_size[0] . ' ' . $display_size[1];",
          "4504:         }",
          "4506:         $result .= ']';",
          "4508:         if (strpos($transform_function, 'octetstream')) {",
          "4509:             $result = $content;",
          "4510:         }",
          "4512:         if ($size > 0) {",
          "4514:             if ($default_function != $transform_function) {",
          "4515:                 $result = $transform_function($result, $transform_options, $meta);",
          "4516:             } else {",
          "4518:                 $result = $default_function($result, array(), $meta);",
          "4519:                 if (stristr($meta->type, 'BLOB')",
          "4520:                     && $_SESSION['tmp_user_values']['display_blob']",
          "4521:                 ) {",
          "4523:                     $result = htmlspecialchars(PMA_replaceBinaryContents($content));",
          "4524:                 }",
          "4527:                 if (count($url_params) > 0) {",
          "4528:                     $result = '<a href=\"tbl_get_field.php'",
          "4529:                         . PMA_generate_common_url($url_params) . '\">' . $result . '</a>';",
          "4530:                 }",
          "4534:         return($result);",
          "4536:     } // end of the '_handleNonPrintableContents()' function",
          "4564:     private function _getRowData($class, $condition_field, $analyzed_sql, $meta, $map,",
          "4565:         $data, $transform_function, $default_function, $nowrap, $where_comparison,",
          "4566:         $transform_options, $is_field_truncated",
          "4567:     ) {",
          "4569:         global $db;",
          "4571:         $result = '<td class=\"'",
          "4572:             . $this->_addClass(",
          "4573:                 $class, $condition_field, $meta, $nowrap,",
          "4574:                 $is_field_truncated, $transform_function, $default_function",
          "4575:             )",
          "4576:             . '\">';",
          "4578:         if (isset($analyzed_sql[0]['select_expr'])",
          "4579:             && is_array($analyzed_sql[0]['select_expr'])",
          "4582:             foreach ($analyzed_sql[0]['select_expr']",
          "4583:                 as $select_expr_position => $select_expr",
          "4584:             ) {",
          "4586:                 $alias = $analyzed_sql[0]['select_expr'][$select_expr_position]['alias'];",
          "4588:                 if (isset($alias) && strlen($alias)) {",
          "4589:                     $true_column = $analyzed_sql[0]['select_expr']",
          "4590:                         [$select_expr_position]['column'];",
          "4592:                     if ($alias == $meta->name) {",
          "4595:                         $meta->name = $true_column;",
          "4596:                     } // end if",
          "4598:                 } // end if",
          "4599:             } // end foreach",
          "4600:         } // end if",
          "4602:         if (isset($map[$meta->name])) {",
          "4605:             if (isset($map[$meta->name][2]) && strlen($map[$meta->name][2])) {",
          "4607:                 $dispsql     = 'SELECT ' . PMA_backquote($map[$meta->name][2])",
          "4608:                     . ' FROM ' . PMA_backquote($map[$meta->name][3])",
          "4609:                     . '.' . PMA_backquote($map[$meta->name][0])",
          "4610:                     . ' WHERE ' . PMA_backquote($map[$meta->name][1])",
          "4611:                     . $where_comparison;",
          "4613:                 $dispresult  = PMA_DBI_try_query($dispsql, null, PMA_DBI_QUERY_STORE);",
          "4615:                 if ($dispresult && PMA_DBI_num_rows($dispresult) > 0) {",
          "4616:                     list($dispval) = PMA_DBI_fetch_row($dispresult, 0);",
          "4617:                 } else {",
          "4618:                     $dispval = __('Link not found');",
          "4619:                 }",
          "4621:                 @PMA_DBI_free_result($dispresult);",
          "4623:             } else {",
          "4624:                 $dispval     = '';",
          "4625:             } // end if... else...",
          "4627:             if (isset($GLOBALS['printview']) && $GLOBALS['printview'] == '1') {",
          "4629:                 $result .= ($transform_function != $default_function",
          "4630:                         ? $transform_function($data, $transform_options, $meta)",
          "4631:                         : $transform_function($data, array(), $meta))",
          "4632:                     . ' <code>[-&gt;' . $dispval . ']</code>';",
          "4634:             } else {",
          "4636:                 if ($_SESSION['tmp_user_values']['relational_display'] == 'K') {",
          "4640:                     $title = (! empty($dispval))? ' title=\"' . htmlspecialchars($dispval)",
          "4641:                         . '\"' : '';",
          "4643:                 } else {",
          "4644:                     $title = ' title=\"' . htmlspecialchars($data) . '\"';",
          "4645:                 }",
          "4647:                 $_url_params = array(",
          "4648:                     'db'    => $map[$meta->name][3],",
          "4649:                     'table' => $map[$meta->name][0],",
          "4650:                     'pos'   => '0',",
          "4651:                     'sql_query' => 'SELECT * FROM '",
          "4652:                         . PMA_backquote($map[$meta->name][3]) . '.'",
          "4653:                         . PMA_backquote($map[$meta->name][0])",
          "4654:                         . ' WHERE ' . PMA_backquote($map[$meta->name][1])",
          "4655:                         . $where_comparison,",
          "4656:                 );",
          "4658:                 $result .= '<a href=\"sql.php' . PMA_generate_common_url($_url_params)",
          "4659:                      . '\"' . $title . '>';",
          "4661:                 if ($transform_function != $default_function) {",
          "4664:                     $result .= $transform_function($data, $transform_options, $meta);",
          "4667:                     if ($_SESSION['tmp_user_values']['relational_display'] == 'D') {",
          "4670:                         $result .= $transform_function($dispval, array(), $meta);",
          "4671:                     } else {",
          "4673:                         $result .= $transform_function($data, array(), $meta);",
          "4674:                     }",
          "4676:                 }",
          "4677:                 $result .= '</a>';",
          "4680:         } else {",
          "4681:             $result .= ($transform_function != $default_function)",
          "4682:                 ? $transform_function($data, $transform_options, $meta)",
          "4683:                 : $transform_function($data, array(), $meta);",
          "4687:         if (isset($_GET['browse_distinct']) && ($_GET['browse_distinct'] == 1)) {",
          "4689:             $where_comparison = \" = '\" . $data . \"'\";",
          "4691:             $_url_params_for_show_data_row = array(",
          "4692:                                     'db'    => $db,",
          "4693:                                     'table' => $meta->orgtable,",
          "4694:                                     'pos'   => '0',",
          "4695:                                     'sql_query' => 'SELECT * FROM '",
          "4696:                                                         . PMA_backquote($db) . '.'",
          "4697:                                                         . PMA_backquote($meta->orgtable)",
          "4698:                                                         . ' WHERE '",
          "4699:                                                         . PMA_backquote($meta->orgname)",
          "4700:                                                         . $where_comparison,",
          "4701:             );",
          "4703:             $result .= '<input type=\"hidden\" class=\"data_browse_link\" value=\"'",
          "4704:                 . PMA_generate_common_url($_url_params_for_show_data_row). '\" />';",
          "4706:         }",
          "4708:         $result .= '</td>' . \"\\n\";",
          "4710:         return $result;",
          "4712:     } // end of the '_getRowData()' function",
          "4734:     private function _getCheckboxForMultiRowSubmissions($del_url, $is_display, $row_no,",
          "4735:         $where_clause_html, $condition_array, $del_query, $id_suffix, $class",
          "4736:     ) {",
          "4738:         $ret = '';",
          "4740:         if (! empty($del_url) && $is_display['del_lnk'] != 'kp') {",
          "4742:             $ret .= '<td ';",
          "4743:             if (! empty($class)) {",
          "4744:                 $ret .= 'class=\"' . $class . '\"';",
          "4745:             }",
          "4747:             $ret .= ' class=\"center\">'",
          "4748:                 . '<input type=\"checkbox\" id=\"id_rows_to_delete' . $row_no . $id_suffix",
          "4749:                 . '\" name=\"rows_to_delete[' . $row_no . ']\"'",
          "4750:                 . ' class=\"multi_checkbox\"'",
          "4751:                 . ' value=\"' . $where_clause_html . '\" '",
          "4752:                 . (isset($GLOBALS['checkall'])",
          "4753:                     ? 'checked=\"checked\"'",
          "4754:                     : '')",
          "4755:                 . ' />'",
          "4756:                 . '<input type=\"hidden\" class=\"condition_array\" value=\"'",
          "4757:                 . htmlspecialchars(json_encode($condition_array)) . '\" />'",
          "4758:                 . '    </td>';",
          "4761:         return $ret;",
          "4763:     } // end of the '_getCheckboxForMultiRowSubmissions()' function",
          "4781:     private function _getEditLink($edit_url, $class, $edit_str, $where_clause,",
          "4782:         $where_clause_html",
          "4783:     ) {",
          "4785:         $ret = '';",
          "4786:         if (! empty($edit_url)) {",
          "4788:             $ret .= '<td class=\"' . $class . ' center\" ' . ' ><span class=\"nowrap\">'",
          "4789:                . PMA_linkOrButton($edit_url, $edit_str, array(), false);",
          "4794:             if (! empty($where_clause)) {",
          "4795:                 $ret .= '<input type=\"hidden\" class=\"where_clause\" value =\"'",
          "4796:                     . $where_clause_html . '\" />';",
          "4797:             }",
          "4798:             $ret .= '</span></td>';",
          "4801:         return $ret;",
          "4803:     } // end of the '_getEditLink()' function",
          "4821:     private function _getCopyLink($copy_url, $copy_str, $where_clause,",
          "4822:         $where_clause_html, $class",
          "4823:     ) {",
          "4825:         $ret = '';",
          "4826:         if (! empty($copy_url)) {",
          "4828:             $ret .= '<td class=\"';",
          "4829:             if (! empty($class)) {",
          "4830:                 $ret .= $class . ' ';",
          "4831:             }",
          "4833:             $ret .= 'center\" ' . ' ><span class=\"nowrap\">'",
          "4834:                . PMA_linkOrButton($copy_url, $copy_str, array(), false);",
          "4840:             if (! empty($where_clause)) {",
          "4841:                 $ret .= '<input type=\"hidden\" class=\"where_clause\" value=\"'",
          "4842:                     . $where_clause_html . '\" />';",
          "4843:             }",
          "4844:             $ret .= '</span></td>';",
          "4847:         return $ret;",
          "4849:     } // end of the '_getCopyLink()' function",
          "4866:     private function _getDeleteLink($del_url, $del_str, $js_conf, $class)",
          "4867:     {",
          "4869:         $ret = '';",
          "4870:         if (! empty($del_url)) {",
          "4872:             $ret .= '<td class=\"';",
          "4873:             if (! empty($class)) {",
          "4874:                 $ret .= $class . ' ';",
          "4875:             }",
          "4877:             $ret .= 'center\" ' . ' >'",
          "4878:                . PMA_linkOrButton($del_url, $del_str, $js_conf, false)",
          "4879:                . '</td>';",
          "4880:         }",
          "4882:         return $ret;",
          "4884:     } // end of the '_getDeleteLink()' function",
          "4915:     private function _getCheckboxAndLinks($position, $del_url, $is_display, $row_no,",
          "4916:         $where_clause, $where_clause_html, $condition_array, $del_query, $id_suffix,",
          "4917:         $edit_url, $copy_url, $class, $edit_str, $copy_str, $del_str, $js_conf",
          "4918:     ) {",
          "4920:         $ret = '';",
          "4922:         if ($position == 'left') {",
          "4924:             $ret .= $this->_getCheckboxForMultiRowSubmissions(",
          "4925:                 $del_url, $is_display, $row_no, $where_clause_html, $condition_array,",
          "4926:                 $del_query, $id_suffix = '_left', '', '', ''",
          "4927:             );",
          "4929:             $ret .= $this->_getEditLink(",
          "4930:                 $edit_url, $class, $edit_str, $where_clause, $where_clause_html, ''",
          "4931:             );",
          "4933:             $ret .= $this->_getCopyLink(",
          "4934:                 $copy_url, $copy_str, $where_clause, $where_clause_html, ''",
          "4935:             );",
          "4937:             $ret .= $this->_getDeleteLink($del_url, $del_str, $js_conf, '', '');",
          "4939:         } elseif ($position == 'right') {",
          "4941:             $ret .= $this->_getDeleteLink($del_url, $del_str, $js_conf, '', '');",
          "4943:             $ret .= $this->_getCopyLink(",
          "4944:                 $copy_url, $copy_str, $where_clause, $where_clause_html, ''",
          "4945:             );",
          "4947:             $ret .= $this->_getEditLink(",
          "4948:                 $edit_url, $class, $edit_str, $where_clause, $where_clause_html, ''",
          "4949:             );",
          "4951:             $ret .= $this->_getCheckboxForMultiRowSubmissions(",
          "4952:                 $del_url, $is_display, $row_no, $where_clause_html, $condition_array,",
          "4953:                 $del_query, $id_suffix = '_right', '', '', ''",
          "4954:             );",
          "4956:         } else { // $position == 'none'",
          "4958:             $ret .= $this->_getCheckboxForMultiRowSubmissions(",
          "4959:                 $del_url, $is_display, $row_no, $where_clause_html, $condition_array,",
          "4960:                 $del_query, $id_suffix = '_left', '', '', ''",
          "4961:             );",
          "4962:         }",
          "4964:         return $ret;",
          "4966:     } // end of the '_getCheckboxAndLinks()' function",
          "",
          "---------------"
        ],
        "sql.php||sql.php": [
          "File: sql.php -> sql.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:     PMA_mysqlDie(__('\"DROP DATABASE\" statements are disabled.'), '', '', $err_url);",
          "291: } // end if",
          "293: require_once 'libraries/display_tbl.lib.php';",
          "",
          "[Removed Lines]",
          "294: PMA_setConfigParamsForDisplayTable();",
          "",
          "[Added Lines]",
          "294: require_once './libraries/Index.class.php';",
          "297: $displayResultsObject = new PMA_DisplayResults();",
          "298: $displayResultsObject->setConfigParamsForDisplayTable();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "898:             $message = PMA_Message::success($message);",
          "899:             echo PMA_getMessage($message, $GLOBALS['sql_query'], 'success');",
          "900:         }",
          "902:         exit();",
          "903:     }",
          "",
          "[Removed Lines]",
          "901:         echo PMA_getTable($result, $disp_mode, $analyzed_sql);",
          "",
          "[Added Lines]",
          "905:         echo $displayResultsObject->getTable($result, $disp_mode, $analyzed_sql);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1044:         $message->display();",
          "1045:     }",
          "1048:     PMA_DBI_free_result($result);",
          "",
          "[Removed Lines]",
          "1047:     echo PMA_getTable($result, $disp_mode, $analyzed_sql);",
          "",
          "[Added Lines]",
          "1051:     echo $displayResultsObject->getTable($result, $disp_mode, $analyzed_sql);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "29cc2fab386d5cdb2796736679aa55033f2164bc",
      "candidate_info": {
        "commit_hash": "29cc2fab386d5cdb2796736679aa55033f2164bc",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/29cc2fab386d5cdb2796736679aa55033f2164bc",
        "files": [
          "libraries/display_tbl.lib.php"
        ],
        "message": "Some modifications to PMA_displayTableBody function in display_tbl.lib.php to reduce echo renderings",
        "before_after_code_files": [
          "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
          ],
          "candidate": [
            "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/display_tbl.lib.php||libraries/display_tbl.lib.php": [
          "File: libraries/display_tbl.lib.php -> libraries/display_tbl.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1489:     global $row; // mostly because of browser transformations,",
          "1492:     $url_sql_query = $sql_query;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1492:     $table_body_html = '';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1553:             && ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "1554:             || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped')",
          "1555:         ) {",
          "1557:             if ($vertical_display['emptypre'] > 0) {",
          "1560:             } else if ($GLOBALS['cfg']['RowActionLinks'] == 'none') {",
          "1562:             }",
          "1564:             foreach ($vertical_display['desc'] as $val) {",
          "1566:             }",
          "1568:             if ($vertical_display['emptyafter'] > 0) {",
          "1571:             }",
          "1573:         } // end if",
          "1575:         $alternating_color_class = ($odd_row ? 'odd' : 'even');",
          "",
          "[Removed Lines]",
          "1556:             echo '<tr>' . \"\\n\";",
          "1558:                 echo '    <th colspan=\"' . $vertical_display['emptypre'] . '\">'",
          "1559:                      . \"\\n\".'        &nbsp;</th>' . \"\\n\";",
          "1561:                 echo '    <th></th>' . \"\\n\";",
          "1565:                 echo $val;",
          "1569:                 echo '    <th colspan=\"' . $vertical_display['emptyafter'] . '\">'",
          "1570:                      . \"\\n\" . '        &nbsp;</th>' . \"\\n\";",
          "1572:             echo '</tr>' . \"\\n\";",
          "",
          "[Added Lines]",
          "1557:             $table_body_html .= '<tr>' . \"\\n\";",
          "1559:                 $table_body_html .= '    <th colspan=\"' . $vertical_display['emptypre'] . '\">'",
          "1560:                     . \"\\n\".'        &nbsp;</th>' . \"\\n\";",
          "1562:                 $table_body_html .= '    <th></th>' . \"\\n\";",
          "1566:                 $table_body_html .= $val;",
          "1570:                 $table_body_html .= '    <th colspan=\"' . $vertical_display['emptyafter'] . '\">'",
          "1571:                     . \"\\n\" . '        &nbsp;</th>' . \"\\n\";",
          "1573:             $table_body_html .= '</tr>' . \"\\n\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1579:             || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "1580:         ) {",
          "1583:         }",
          "",
          "[Removed Lines]",
          "1582:             echo '<tr class=\"' . $alternating_color_class . '\">';",
          "",
          "[Added Lines]",
          "1583:             $table_body_html .= '<tr class=\"' . $alternating_color_class . '\">';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1617:                     'sql_query'        => $url_sql_query,",
          "1618:                     'goto'             => 'sql.php',",
          "1619:                 );",
          "1627:                 $edit_str = PMA_getIcon('b_edit.png', __('Edit'));",
          "1628:                 $copy_str = PMA_getIcon('b_insrow.png', __('Copy'));",
          "",
          "[Removed Lines]",
          "1620:                 $edit_url = 'tbl_change.php' . PMA_generate_common_url(",
          "1621:                     $_url_params + array('default_action' => 'update')",
          "1622:                 );",
          "1623:                 $copy_url = 'tbl_change.php' . PMA_generate_common_url(",
          "1624:                     $_url_params + array('default_action' => 'insert')",
          "1625:                 );",
          "",
          "[Added Lines]",
          "1622:                 $edit_url = 'tbl_change.php'",
          "1623:                     . PMA_generate_common_url(",
          "1624:                         $_url_params + array('default_action' => 'update')",
          "1625:                     );",
          "1627:                 $copy_url = 'tbl_change.php'",
          "1628:                     . PMA_generate_common_url(",
          "1629:                         $_url_params + array('default_action' => 'insert')",
          "1630:                     );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1662:                 $del_url  = 'sql.php' . PMA_generate_common_url($_url_params);",
          "1664:                 $js_conf  = 'DELETE FROM ' . PMA_jsFormat($db) . '.'",
          "1668:                 $del_str = PMA_getIcon('b_drop.png', __('Delete'));",
          "1669:             } elseif ($is_display['del_lnk'] == 'kp') { // kill process case",
          "",
          "[Removed Lines]",
          "1665:                           . PMA_jsFormat($table)",
          "1666:                           . ' WHERE ' . PMA_jsFormat($where_clause, false)",
          "1667:                           . ($clause_is_unique ? '' : ' LIMIT 1');",
          "",
          "[Added Lines]",
          "1670:                     . PMA_jsFormat($table)",
          "1671:                     . ' WHERE ' . PMA_jsFormat($where_clause, false)",
          "1672:                     . ($clause_is_unique ? '' : ' LIMIT 1');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1674:                     'sql_query' => $url_sql_query,",
          "1675:                     'goto'      => 'main.php',",
          "1676:                 );",
          "1681:                 $_url_params = array(",
          "1682:                     'db'        => 'mysql',",
          "",
          "[Removed Lines]",
          "1677:                 $lnk_goto = 'sql.php' . PMA_generate_common_url(",
          "1678:                     $_url_params, 'text'",
          "1679:                 );",
          "",
          "[Added Lines]",
          "1682:                 $lnk_goto = 'sql.php'",
          "1683:                     . PMA_generate_common_url(",
          "1684:                         $_url_params, 'text'",
          "1685:                     );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1698:                 if (! isset($js_conf)) {",
          "1699:                     $js_conf = '';",
          "1700:                 }",
          "1707:             } elseif (($GLOBALS['cfg']['RowActionLinks'] == 'none')",
          "1708:                 && ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "1709:                 || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped')",
          "",
          "[Removed Lines]",
          "1701:                 echo PMA_generateCheckboxAndLinks(",
          "1702:                     'left', $del_url, $is_display,",
          "1703:                     $row_no, $where_clause, $where_clause_html, $condition_array,",
          "1704:                     $del_query, 'l', $edit_url, $copy_url, $edit_anchor_class,",
          "1705:                     $edit_str, $copy_str, $del_str, $js_conf",
          "1706:                 );",
          "",
          "[Added Lines]",
          "1707:                 $table_body_html .= PMA_generateCheckboxAndLinks(",
          "1708:                         'left', $del_url, $is_display,",
          "1709:                         $row_no, $where_clause, $where_clause_html, $condition_array,",
          "1710:                         $del_query, 'l', $edit_url, $copy_url, $edit_anchor_class,",
          "1711:                         $edit_str, $copy_str, $del_str, $js_conf",
          "1712:                     );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1711:                 if (! isset($js_conf)) {",
          "1712:                     $js_conf = '';",
          "1713:                 }",
          "1720:             } // end if (1.3)",
          "1721:         } // end if (1)",
          "",
          "[Removed Lines]",
          "1714:                 echo PMA_generateCheckboxAndLinks(",
          "1715:                     'none', $del_url, $is_display,",
          "1716:                     $row_no, $where_clause, $where_clause_html, $condition_array,",
          "1717:                     $del_query, 'l', $edit_url, $copy_url, $edit_anchor_class,",
          "1718:                     $edit_str, $copy_str, $del_str, $js_conf",
          "1719:                 );",
          "",
          "[Added Lines]",
          "1720:                 $table_body_html .= PMA_generateCheckboxAndLinks(",
          "1721:                         'none', $del_url, $is_display,",
          "1722:                         $row_no, $where_clause, $where_clause_html, $condition_array,",
          "1723:                         $del_query, 'l', $edit_url, $copy_url, $edit_anchor_class,",
          "1724:                         $edit_str, $copy_str, $del_str, $js_conf",
          "1725:                     );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1789:                     && !empty($GLOBALS['mime_map'][$meta->name]['transformation'])",
          "1790:                 ) {",
          "1791:                     $include_file = PMA_securePath(",
          "1797:                             $GLOBALS['mime_map'][$meta->name]['transformation']",
          "1798:                         );",
          "1800:                         include_once './libraries/transformations/' . $include_file;",
          "",
          "[Removed Lines]",
          "1792:                         $GLOBALS['mime_map'][$meta->name]['transformation']",
          "1793:                     );",
          "1794:                     if (file_exists('./libraries/transformations/' . $include_file)) {",
          "1795:                         $transformfunction_name = str_replace(",
          "1796:                             '.inc.php', '',",
          "",
          "[Added Lines]",
          "1800:                     if (file_exists('./libraries/transformations/' . $include_file)) {",
          "1801:                         $transformfunction_name = str_replace(",
          "1802:                                 '.inc.php', '',",
          "1803:                                 $GLOBALS['mime_map'][$meta->name]['transformation']",
          "1804:                             );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1803:                             $transform_function = 'PMA_transformation_'",
          "1804:                                 . $transformfunction_name;",
          "1805:                             $transform_options  = PMA_transformation_getOptions(",
          "1810:                             $meta->mimetype = str_replace(",
          "1814:                         }",
          "1815:                     } // end if file_exists",
          "1816:                 } // end if transformation is set",
          "",
          "[Removed Lines]",
          "1806:                                 isset($GLOBALS['mime_map'][$meta->name]['transformation_options'])",
          "1807:                                 ? $GLOBALS['mime_map'][$meta->name]['transformation_options']",
          "1808:                                 : ''",
          "1809:                             );",
          "1811:                                 '_', '/',",
          "1812:                                 $GLOBALS['mime_map'][$meta->name]['mimetype']",
          "1813:                             );",
          "",
          "[Added Lines]",
          "1812:                                     isset($GLOBALS['mime_map'][$meta->name]['transformation_options'])",
          "1813:                                     ? $GLOBALS['mime_map'][$meta->name]['transformation_options']",
          "1814:                                     : ''",
          "1815:                                 );",
          "1817:                                     '_', '/',",
          "1818:                                     $GLOBALS['mime_map'][$meta->name]['mimetype']",
          "1819:                                 );",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1827:                 $_url_params['sql_query'] = $url_sql_query;",
          "1828:             }",
          "1834:             if ($meta->numeric == 1) {",
          "",
          "[Removed Lines]",
          "1830:             $transform_options['wrapper_link']",
          "1831:                 = PMA_generate_common_url($_url_params);",
          "",
          "[Added Lines]",
          "1836:             $transform_options['wrapper_link'] = PMA_generate_common_url($_url_params);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1841:                 if (! isset($row[$i]) || is_null($row[$i])) {",
          "1842:                     $vertical_display['data'][$row_no][$i] = PMA_buildNullDisplay(",
          "1845:                 } elseif ($row[$i] != '') {",
          "1847:                     $nowrap = ' nowrap';",
          "",
          "[Removed Lines]",
          "1843:                         'right '.$class, $condition_field, $meta, ''",
          "1844:                     );",
          "",
          "[Added Lines]",
          "1848:                             'right '.$class, $condition_field, $meta, ''",
          "1849:                         );",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1857:                         );",
          "1858:                 } else {",
          "1859:                     $vertical_display['data'][$row_no][$i] = PMA_buildEmptyDisplay(",
          "1862:                 }",
          "",
          "[Removed Lines]",
          "1860:                         'right '.$class, $condition_field, $meta, ''",
          "1861:                     );",
          "",
          "[Added Lines]",
          "1865:                             'right '.$class, $condition_field, $meta, ''",
          "1866:                         );",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1876:                             = PMA_buildNullDisplay($class, $condition_field, $meta);",
          "1877:                     } else {",
          "1878:                         $blobtext = PMA_handle_non_printable_contents(",
          "1884:                         $vertical_display['data'][$row_no][$i] = PMA_buildValueDisplay(",
          "1887:                         unset($blobtext);",
          "1888:                     }",
          "",
          "[Removed Lines]",
          "1879:                             'BLOB', (isset($row[$i]) ? $row[$i] : ''),",
          "1880:                             $transform_function, $transform_options,",
          "1881:                             $default_function, $meta, $_url_params",
          "1882:                         );",
          "1885:                             $class, $condition_field, $blobtext",
          "1886:                         );",
          "",
          "[Added Lines]",
          "1884:                                 'BLOB', (isset($row[$i]) ? $row[$i] : ''),",
          "1885:                                 $transform_function, $transform_options,",
          "1886:                                 $default_function, $meta, $_url_params",
          "1887:                             );",
          "1890:                                 $class, $condition_field, $blobtext",
          "1891:                             );",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1897:                         if (PMA_strlen($row[$i]) > $GLOBALS['cfg']['LimitChars']",
          "1898:                             && $_SESSION['tmp_user_values']['display_text'] == 'P'",
          "1899:                         ) {",
          "1903:                             $is_field_truncated = true;",
          "1904:                         }",
          "1908:                             ? $transform_function($row[$i], $transform_options, $meta)",
          "1909:                             : $default_function($row[$i], array(), $meta);",
          "",
          "[Removed Lines]",
          "1900:                             $row[$i] = PMA_substr(",
          "1901:                                 $row[$i], 0, $GLOBALS['cfg']['LimitChars']",
          "1902:                             ) . '...';",
          "1907:                         $row[$i] = $default_function != $transform_function",
          "",
          "[Added Lines]",
          "1905:                             $row[$i] = PMA_substr($row[$i], 0, $GLOBALS['cfg']['LimitChars'])",
          "1906:                                 . '...';",
          "1911:                         $row[$i] = ($default_function != $transform_function)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1913:                         }",
          "1915:                         $vertical_display['data'][$row_no][$i] = PMA_buildValueDisplay(",
          "1918:                     } else {",
          "1919:                         $vertical_display['data'][$row_no][$i]",
          "1920:                             = PMA_buildEmptyDisplay($class, $condition_field, $meta);",
          "",
          "[Removed Lines]",
          "1916:                             $class, $condition_field, $row[$i]",
          "1917:                         );",
          "",
          "[Added Lines]",
          "1920:                                 $class, $condition_field, $row[$i]",
          "1921:                             );",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1935:                     if ('GEOM' == $_SESSION['tmp_user_values']['geometry_display']) {",
          "1936:                         $geometry_text = PMA_handle_non_printable_contents(",
          "1941:                         $vertical_display['data'][$row_no][$i] = PMA_buildValueDisplay(",
          "1946:                     } elseif ('WKT' == $_SESSION['tmp_user_values']['geometry_display']) {",
          "",
          "[Removed Lines]",
          "1937:                             'GEOMETRY', (isset($row[$i]) ? $row[$i] : ''),",
          "1938:                             $transform_function, $transform_options,",
          "1939:                             $default_function, $meta",
          "1940:                         );",
          "1942:                             $class, $condition_field, $geometry_text",
          "1943:                         );",
          "",
          "[Added Lines]",
          "1941:                                 'GEOMETRY', (isset($row[$i]) ? $row[$i] : ''),",
          "1942:                                 $transform_function, $transform_options,",
          "1943:                                 $default_function, $meta",
          "1944:                             );",
          "1946:                                 $class, $condition_field, $geometry_text",
          "1947:                             );",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1952:                         if (PMA_strlen($wktval) > $GLOBALS['cfg']['LimitChars']",
          "1953:                             && $_SESSION['tmp_user_values']['display_text'] == 'P'",
          "1954:                         ) {",
          "1958:                             $is_field_truncated = true;",
          "1959:                         }",
          "",
          "[Removed Lines]",
          "1955:                             $wktval = PMA_substr(",
          "1956:                                 $wktval, 0, $GLOBALS['cfg']['LimitChars']",
          "1957:                             ) . '...';",
          "",
          "[Added Lines]",
          "1959:                             $wktval = PMA_substr($wktval, 0, $GLOBALS['cfg']['LimitChars'])",
          "1960:                                 . '...';",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1977:                                 $wkbval = PMA_substr(bin2hex($row[$i]), 8);",
          "1978:                             } else {",
          "1979:                                 $wkbval = htmlspecialchars(",
          "1982:                             }",
          "1984:                             if (PMA_strlen($wkbval) > $GLOBALS['cfg']['LimitChars']",
          "1985:                                 && $_SESSION['tmp_user_values']['display_text'] == 'P'",
          "1986:                             ) {",
          "1990:                                 $is_field_truncated = true;",
          "1991:                             }",
          "",
          "[Removed Lines]",
          "1980:                                     PMA_replace_binary_contents($row[$i])",
          "1981:                                 );",
          "1987:                                 $wkbval = PMA_substr(",
          "1988:                                     $wkbval, 0, $GLOBALS['cfg']['LimitChars']",
          "1989:                                 ) . '...';",
          "",
          "[Added Lines]",
          "1983:                                         PMA_replace_binary_contents($row[$i])",
          "1984:                                     );",
          "1990:                                 $wkbval = PMA_substr($wkbval, 0, $GLOBALS['cfg']['LimitChars'])",
          "1991:                                     . '...';",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2000:                                 );",
          "2001:                         } else {",
          "2002:                             $wkbval = PMA_handle_non_printable_contents(",
          "2007:                             $vertical_display['data'][$row_no][$i]",
          "2008:                                 = PMA_buildValueDisplay($class, $condition_field, $wkbval);",
          "2009:                         }",
          "",
          "[Removed Lines]",
          "2003:                                 'BINARY', $row[$i], $transform_function,",
          "2004:                                 $transform_options, $default_function, $meta,",
          "2005:                                 $_url_params",
          "2006:                             );",
          "",
          "[Added Lines]",
          "2005:                                     'BINARY', $row[$i], $transform_function,",
          "2006:                                     $transform_options, $default_function, $meta,",
          "2007:                                     $_url_params",
          "2008:                                 );",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2028:                         && $_SESSION['tmp_user_values']['display_text'] == 'P'",
          "2029:                         && !strpos($transform_function, 'link') === true",
          "2030:                     ) {",
          "2034:                         $is_field_truncated = true;",
          "2035:                     }",
          "",
          "[Removed Lines]",
          "2031:                         $row[$i] = PMA_substr(",
          "2032:                             $row[$i], 0, $GLOBALS['cfg']['LimitChars']",
          "2033:                         ) . '...';",
          "",
          "[Added Lines]",
          "2033:                         $row[$i] = PMA_substr($row[$i], 0, $GLOBALS['cfg']['LimitChars'])",
          "2034:                             . '...';",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2039:                     $formatted = false;",
          "2040:                     if (isset($meta->_type) && $meta->_type === MYSQLI_TYPE_BIT) {",
          "2041:                         $row[$i] = PMA_printable_bit_value(",
          "",
          "[Removed Lines]",
          "2042:                             $row[$i], $meta->length",
          "2043:                         );",
          "",
          "[Added Lines]",
          "2043:                                 $row[$i], $meta->length",
          "2044:                             );",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2057:                                 $row[$i] = bin2hex($row[$i]);",
          "2058:                             } else {",
          "2059:                                 $row[$i] = htmlspecialchars(",
          "2062:                             }",
          "2063:                         } else {",
          "2066:                             $row[$i] = PMA_handle_non_printable_contents(",
          "2071:                             $formatted = true;",
          "2072:                         }",
          "2073:                     }",
          "2075:                     if ($formatted) {",
          "2076:                         $vertical_display['data'][$row_no][$i] = PMA_buildValueDisplay(",
          "2079:                     } else {",
          "2081:                         $function_nowrap = $transform_function . '_nowrap';",
          "2082:                         $bool_nowrap = (($default_function != $transform_function",
          "2084:                             ? $function_nowrap($transform_options)",
          "2085:                             : false);",
          "2088:                         $nowrap = ((preg_match('@DATE|TIME@i', $meta->type)",
          "2090:                             ? ' nowrap'",
          "2091:                             : '');",
          "2092:                         $where_comparison = ' = \\'' . PMA_sqlAddSlashes($row[$i])",
          "",
          "[Removed Lines]",
          "2060:                                     PMA_replace_binary_contents($row[$i])",
          "2061:                                 );",
          "2067:                                 'BINARY', $row[$i], $transform_function,",
          "2068:                                 $transform_options, $default_function,",
          "2069:                                 $meta, $_url_params",
          "2070:                             );",
          "2077:                             $class, $condition_field, $row[$i]",
          "2078:                         );",
          "2083:                                 && function_exists($function_nowrap))",
          "2089:                                 || $bool_nowrap)",
          "",
          "[Added Lines]",
          "2061:                                         PMA_replace_binary_contents($row[$i])",
          "2062:                                     );",
          "2068:                                     'BINARY', $row[$i], $transform_function,",
          "2069:                                     $transform_options, $default_function,",
          "2070:                                     $meta, $_url_params",
          "2071:                                 );",
          "2078:                                 $class, $condition_field, $row[$i]",
          "2079:                             );",
          "2084:                             && function_exists($function_nowrap))",
          "2090:                             || $bool_nowrap)",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2110:             if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "2111:                 || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "2112:             ) {",
          "2114:             }",
          "2116:             if (isset($vertical_display['rowdata'][$i][$row_no])) {",
          "",
          "[Removed Lines]",
          "2113:                 echo $vertical_display['data'][$row_no][$i];",
          "",
          "[Added Lines]",
          "2114:                 $table_body_html .= $vertical_display['data'][$row_no][$i];",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2131:             if (! isset($js_conf)) {",
          "2132:                 $js_conf = '';",
          "2133:             }",
          "2140:         } // end if (3)",
          "2142:         if ($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "2143:             || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped'",
          "2144:         ) {",
          "2148:         } // end if",
          "",
          "[Removed Lines]",
          "2134:             echo PMA_generateCheckboxAndLinks(",
          "2135:                 'right', $del_url, $is_display,",
          "2136:                 $row_no, $where_clause, $where_clause_html, $condition_array,",
          "2137:                 $del_query, 'r', $edit_url, $copy_url, $edit_anchor_class, $edit_str,",
          "2138:                 $copy_str, $del_str, $js_conf",
          "2139:             );",
          "2145:             ?>",
          "2146: </tr>",
          "2147:             <?php",
          "",
          "[Added Lines]",
          "2135:             $table_body_html .= PMA_generateCheckboxAndLinks(",
          "2136:                     'right', $del_url, $is_display,",
          "2137:                     $row_no, $where_clause, $where_clause_html, $condition_array,",
          "2138:                     $del_query, 'r', $edit_url, $copy_url, $edit_anchor_class, $edit_str,",
          "2139:                     $copy_str, $del_str, $js_conf",
          "2140:                 );",
          "2146:             $table_body_html .= '</tr>';",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2166:         if (!empty($del_url) && $is_display['del_lnk'] != 'kp') {",
          "2167:             $vertical_display['row_delete'][$row_no] .= PMA_generateCheckboxForMulti(",
          "2172:         } else {",
          "2173:             unset($vertical_display['row_delete'][$row_no]);",
          "2174:         }",
          "2176:         if (isset($edit_url)) {",
          "2177:             $vertical_display['edit'][$row_no] .= PMA_generateEditLink(",
          "2184:         } else {",
          "2185:             unset($vertical_display['edit'][$row_no]);",
          "2186:         }",
          "2188:         if (isset($copy_url)) {",
          "2189:             $vertical_display['copy'][$row_no] .= PMA_generateCopyLink(",
          "2193:         } else {",
          "2194:             unset($vertical_display['copy'][$row_no]);",
          "2195:         }",
          "",
          "[Removed Lines]",
          "2168:                 $del_url, $is_display, $row_no, $where_clause_html, $condition_array,",
          "2169:                 $del_query, '[%_PMA_CHECKBOX_DIR_%]',",
          "2170:                 $alternating_color_class . $vertical_class",
          "2171:             );",
          "2178:                 $edit_url,",
          "2179:                 $alternating_color_class . ' ' . $edit_anchor_class",
          "2180:                 . $vertical_class, $edit_str,",
          "2181:                 $where_clause,",
          "2182:                 $where_clause_html",
          "2183:             );",
          "2190:                 $copy_url, $copy_str, $where_clause, $where_clause_html,",
          "2191:                 $alternating_color_class . $vertical_class",
          "2192:             );",
          "",
          "[Added Lines]",
          "2167:                     $del_url, $is_display, $row_no, $where_clause_html, $condition_array,",
          "2168:                     $del_query, '[%_PMA_CHECKBOX_DIR_%]',",
          "2169:                     $alternating_color_class . $vertical_class",
          "2170:                 );",
          "2177:                     $edit_url,",
          "2178:                     $alternating_color_class . ' ' . $edit_anchor_class",
          "2179:                     . $vertical_class, $edit_str,",
          "2180:                     $where_clause,",
          "2181:                     $where_clause_html",
          "2182:                 );",
          "2189:                     $copy_url, $copy_str, $where_clause, $where_clause_html,",
          "2190:                     $alternating_color_class . $vertical_class",
          "2191:                 );",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2199:                 $js_conf = '';",
          "2200:             }",
          "2201:             $vertical_display['delete'][$row_no] .= PMA_generateDeleteLink(",
          "2205:         } else {",
          "2206:             unset($vertical_display['delete'][$row_no]);",
          "2207:         }",
          "2210:             || $_SESSION['tmp_user_values']['disp_direction'] == 'horizontalflipped')",
          "2211:             ? \"\\n\"",
          "2212:             : '');",
          "2213:         $row_no++;",
          "2214:     } // end while",
          "2218:     return $clause_is_unique;",
          "",
          "[Removed Lines]",
          "2202:                 $del_url, $del_str, $js_conf,",
          "2203:                 $alternating_color_class . $vertical_class",
          "2204:             );",
          "2209:         echo (($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "",
          "[Added Lines]",
          "2201:                     $del_url, $del_str, $js_conf,",
          "2202:                     $alternating_color_class . $vertical_class",
          "2203:                 );",
          "2208:         $table_body_html .= (($_SESSION['tmp_user_values']['disp_direction'] == 'horizontal'",
          "2216:     echo $table_body_html;",
          "",
          "---------------"
        ]
      }
    }
  ]
}