{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8f59b3267ddbffc6dd0da780fe5a1f3dcc4a2259",
      "candidate_info": {
        "commit_hash": "8f59b3267ddbffc6dd0da780fe5a1f3dcc4a2259",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8f59b3267ddbffc6dd0da780fe5a1f3dcc4a2259",
        "files": [
          "apps/pkcs12.c",
          "apps/smime.c",
          "apps/ts.c",
          "doc/apps/pkcs12.pod",
          "doc/apps/smime.pod",
          "doc/apps/ts.pod"
        ],
        "message": "-inkey can be an identifier, not just a file\n\nupdate pkcs12, smime, ts apps.\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3507)\n(cherry picked from commit 48b5352212d8c68f7fd071ca9f38822b7e954c5a)",
        "before_after_code_files": [
          "apps/pkcs12.c||apps/pkcs12.c",
          "apps/smime.c||apps/smime.c",
          "apps/ts.c||apps/ts.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/pkcs12.c||apps/pkcs12.c": [
          "File: apps/pkcs12.c -> apps/pkcs12.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:     {\"keypbe\", OPT_KEYPBE, 's', \"Private key PBE algorithm (default 3DES)\"},",
          "92:     {\"rand\", OPT_RAND, 's',",
          "93:      \"Load the file(s) into the random number generator\"},",
          "95:     {\"certfile\", OPT_CERTFILE, '<', \"Load certs from file\"},",
          "96:     {\"name\", OPT_NAME, 's', \"Use name as friendly name\"},",
          "97:     {\"CSP\", OPT_CSP, 's', \"Microsoft CSP name\"},",
          "",
          "[Removed Lines]",
          "94:     {\"inkey\", OPT_INKEY, '<', \"Private key if not infile\"},",
          "",
          "[Added Lines]",
          "94:     {\"inkey\", OPT_INKEY, 's', \"Private key if not infile\"},",
          "",
          "---------------"
        ],
        "apps/smime.c||apps/smime.c": [
          "File: apps/smime.c -> apps/smime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     {\"recip\", OPT_RECIP, '<', \"Recipient certificate file for decryption\"},",
          "71:     {\"in\", OPT_IN, '<', \"Input file\"},",
          "72:     {\"inform\", OPT_INFORM, 'c', \"Input format SMIME (default), PEM or DER\"},",
          "74:      \"Input private key (if not signer or recipient)\"},",
          "75:     {\"keyform\", OPT_KEYFORM, 'f', \"Input private key format (PEM or ENGINE)\"},",
          "76:     {\"out\", OPT_OUT, '>', \"Output file\"},",
          "",
          "[Removed Lines]",
          "73:     {\"inkey\", OPT_INKEY, '<',",
          "",
          "[Added Lines]",
          "73:     {\"inkey\", OPT_INKEY, 's',",
          "",
          "---------------"
        ],
        "apps/ts.c||apps/ts.c": [
          "File: apps/ts.c -> apps/ts.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:     {\"reply\", OPT_REPLY, '-', \"Generate a TS reply\"},",
          "107:     {\"queryfile\", OPT_QUERYFILE, '<', \"File containing a TS query\"},",
          "108:     {\"passin\", OPT_PASSIN, 's', \"Input file pass phrase source\"},",
          "110:     {\"signer\", OPT_SIGNER, 's', \"Signer certificate file\"},",
          "111:     {\"chain\", OPT_CHAIN, '<', \"File with signer CA chain\"},",
          "112:     {\"verify\", OPT_VERIFY, '-', \"Verify a TS response\"},",
          "",
          "[Removed Lines]",
          "109:     {\"inkey\", OPT_INKEY, '<', \"File with private key for reply\"},",
          "",
          "[Added Lines]",
          "109:     {\"inkey\", OPT_INKEY, 's', \"File with private key for reply\"},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9556a442188421b109d8c4ff51d34f3981aa25f0",
      "candidate_info": {
        "commit_hash": "9556a442188421b109d8c4ff51d34f3981aa25f0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9556a442188421b109d8c4ff51d34f3981aa25f0",
        "files": [
          "apps/s_socket.c"
        ],
        "message": "Fix intermittent Windows and Cygwin failures in s_server\n\nThe same kind of failure that has already been observed on the\ns_client can sometimes also be observed on s_server, so we need to add\nthe same kind of 50ms delay as was previously added on s_client.\n\nRef: git commit cb2e10f257a464c6b475b321dd9e4769df84dbf6:\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/5079)\n\n(cherry picked from commit d17bdfc26d87097c2c80854fd521b6ecebdf5ebb)",
        "before_after_code_files": [
          "apps/s_socket.c||apps/s_socket.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_socket.c||apps/s_socket.c": [
          "File: apps/s_socket.c -> apps/s_socket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:                 break;",
          "179:             }",
          "180:             i = (*cb)(sock, type, context);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "189: #if defined(OPENSSL_SYS_WINDOWS)",
          "190:             Sleep(50);",
          "191: #elif defined(OPENSSL_SYS_CYGWIN)",
          "192:             usleep(50000);",
          "193: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7f1ac6cb0a7e96010b1e6273e04ce9e9354601a",
      "candidate_info": {
        "commit_hash": "f7f1ac6cb0a7e96010b1e6273e04ce9e9354601a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f7f1ac6cb0a7e96010b1e6273e04ce9e9354601a",
        "files": [
          "crypto/asn1/asn1_locl.h",
          "crypto/asn1/tasn_fre.c",
          "crypto/asn1/tasn_new.c"
        ],
        "message": "asn1_item_embed_new(): don't free an embedded item\n\nThe previous change with this intention didn't quite do it.  An\nembedded item must not be freed itself, but might potentially contain\nnon-embedded elements, which must be freed.\n\nSo instead of calling ASN1_item_ex_free(), where we can't pass the\nembed flag, we call asn1_item_embed_free() directly.\n\nThis changes asn1_item_embed_free() from being a static function to\nbeing a private non-static function.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/4579)\n\n(cherry picked from commit 03996c19c30575c48b254f10625d24f86058605b)",
        "before_after_code_files": [
          "crypto/asn1/asn1_locl.h||crypto/asn1/asn1_locl.h",
          "crypto/asn1/tasn_fre.c||crypto/asn1/tasn_fre.c",
          "crypto/asn1/tasn_new.c||crypto/asn1/tasn_new.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/asn1_locl.h||crypto/asn1/asn1_locl.h": [
          "File: crypto/asn1/asn1_locl.h -> crypto/asn1/asn1_locl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: int asn1_enc_save(ASN1_VALUE **pval, const unsigned char *in, int inlen,",
          "66:                   const ASN1_ITEM *it);",
          "68: void asn1_primitive_free(ASN1_VALUE **pval, const ASN1_ITEM *it, int embed);",
          "69: void asn1_template_free(ASN1_VALUE **pval, const ASN1_TEMPLATE *tt);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: void asn1_item_embed_free(ASN1_VALUE **pval, const ASN1_ITEM *it, int embed);",
          "",
          "---------------"
        ],
        "crypto/asn1/tasn_fre.c||crypto/asn1/tasn_fre.c": [
          "File: crypto/asn1/tasn_fre.c -> crypto/asn1/tasn_fre.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: #include <openssl/objects.h>",
          "14: #include \"asn1_locl.h\"",
          "21: void ASN1_item_free(ASN1_VALUE *val, const ASN1_ITEM *it)",
          "",
          "[Removed Lines]",
          "16: static void asn1_item_embed_free(ASN1_VALUE **pval, const ASN1_ITEM *it,",
          "17:                                  int embed);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:     asn1_item_embed_free(pval, it, 0);",
          "29: }",
          "33: {",
          "34:     const ASN1_TEMPLATE *tt = NULL, *seqtt;",
          "35:     const ASN1_EXTERN_FUNCS *ef;",
          "",
          "[Removed Lines]",
          "31: static void asn1_item_embed_free(ASN1_VALUE **pval, const ASN1_ITEM *it,",
          "32:                                  int embed)",
          "",
          "[Added Lines]",
          "28: void asn1_item_embed_free(ASN1_VALUE **pval, const ASN1_ITEM *it, int embed)",
          "",
          "---------------"
        ],
        "crypto/asn1/tasn_new.c||crypto/asn1/tasn_new.c": [
          "File: crypto/asn1/tasn_new.c -> crypto/asn1/tasn_new.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:     return 1;",
          "144:  memerr2:",
          "147:  memerr:",
          "148:     ASN1err(ASN1_F_ASN1_ITEM_EMBED_NEW, ERR_R_MALLOC_FAILURE);",
          "149: #ifndef OPENSSL_NO_CRYPTO_MDEBUG",
          "",
          "[Removed Lines]",
          "145:     if (!embed)",
          "146:         ASN1_item_ex_free(pval, it);",
          "",
          "[Added Lines]",
          "145:     asn1_item_embed_free(pval, it, embed);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:     return 0;",
          "154:  auxerr2:",
          "157:  auxerr:",
          "158:     ASN1err(ASN1_F_ASN1_ITEM_EMBED_NEW, ASN1_R_AUX_ERROR);",
          "159: #ifndef OPENSSL_NO_CRYPTO_MDEBUG",
          "",
          "[Removed Lines]",
          "155:     if (!embed)",
          "156:         ASN1_item_ex_free(pval, it);",
          "",
          "[Added Lines]",
          "154:     asn1_item_embed_free(pval, it, embed);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "380ebcc89776ffd7acb2b624cb95ded081e43ae4",
      "candidate_info": {
        "commit_hash": "380ebcc89776ffd7acb2b624cb95ded081e43ae4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/380ebcc89776ffd7acb2b624cb95ded081e43ae4",
        "files": [
          "test/testlib/OpenSSL/Test.pm"
        ],
        "message": "Fix util/perl/OpenSSL/Test.pm input variable overwrite\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4507)\n\n(cherry picked from commit 9b9a8a712d64e35a337b22869288f246b5580c73)",
        "before_after_code_files": [
          "test/testlib/OpenSSL/Test.pm||test/testliOpenSSL/Test.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/testlib/OpenSSL/Test.pm||test/testliOpenSSL/Test.pm": [
          "File: test/testlib/OpenSSL/Test.pm -> test/testliOpenSSL/Test.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "793:     BAIL_OUT(\"Must run setup() first\") if (! $test_name);",
          "795:     my $f = pop;",
          "799: }",
          "801: sub __perltest_file {",
          "802:     BAIL_OUT(\"Must run setup() first\") if (! $test_name);",
          "804:     my $f = pop;",
          "808: }",
          "810: sub __apps_file {",
          "811:     BAIL_OUT(\"Must run setup() first\") if (! $test_name);",
          "813:     my $f = pop;",
          "817: }",
          "819: sub __fuzz_file {",
          "820:     BAIL_OUT(\"Must run setup() first\") if (! $test_name);",
          "822:     my $f = pop;",
          "826: }",
          "828: sub __perlapps_file {",
          "829:     BAIL_OUT(\"Must run setup() first\") if (! $test_name);",
          "831:     my $f = pop;",
          "835: }",
          "837: sub __data_file {",
          "",
          "[Removed Lines]",
          "796:     $f = catfile($directories{BLDTEST},@_,$f . __exeext());",
          "797:     $f = catfile($directories{SRCTEST},@_,$f) unless -x $f;",
          "798:     return $f;",
          "805:     $f = catfile($directories{BLDTEST},@_,$f);",
          "806:     $f = catfile($directories{SRCTEST},@_,$f) unless -f $f;",
          "807:     return ($^X, $f);",
          "814:     $f = catfile($directories{BLDAPPS},@_,$f . __exeext());",
          "815:     $f = catfile($directories{SRCAPPS},@_,$f) unless -x $f;",
          "816:     return $f;",
          "823:     $f = catfile($directories{BLDFUZZ},@_,$f . __exeext());",
          "824:     $f = catfile($directories{SRCFUZZ},@_,$f) unless -x $f;",
          "825:     return $f;",
          "832:     $f = catfile($directories{BLDAPPS},@_,$f);",
          "833:     $f = catfile($directories{SRCAPPS},@_,$f) unless -f $f;",
          "834:     return ($^X, $f);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b9373ce3c2d39d9a88634913b8191ad4f7a453c",
      "candidate_info": {
        "commit_hash": "0b9373ce3c2d39d9a88634913b8191ad4f7a453c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0b9373ce3c2d39d9a88634913b8191ad4f7a453c",
        "files": [
          "crypto/bn/bn_lib.c"
        ],
        "message": "Make BN_num_bits_word constant-time.\n\n(This patch was written by Andy Polyakov. I only wrote the commit\nmessage. Mistakes in the analysis are my fault.)\n\nBN_num_bits, by way of BN_num_bits_word, currently leaks the\nmost-significant word of its argument via branching and memory access\npattern.\n\nBN_num_bits is called on RSA prime factors in various places. These have\npublic bit lengths, but all bits beyond the high bit are secret. This\nfully resolves those cases.\n\nThere are a few places where BN_num_bits is called on an input where the\nbit length is also secret. This does *not* fully resolve those cases as\nwe still only look at the top word. Today, that is guaranteed to be\nnon-zero, but only because of the long-standing bn_correct_top timing\nleak. Once that is fixed, a constant-time BN_num_bits on such inputs\nmust count bits on each word.\n\nInstead, those cases should not call BN_num_bits at all. In particular,\nBN_mod_exp_mont_consttime uses the exponent bit width to pick windows,\nbut it should be using the maximum bit width. The next patch will fix\nthis.\n\nThanks to Dinghao Wu, Danfeng Zhang, Shuai Wang, Pei Wang, and Xiao Liu\nfor reporting this issue.\n\nReviewed-by: Paul Dale <paul.dale@oracle.com>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5154)\n\n(cherry picked from commit 972c87dfc7e765bd28a4964519c362f0d3a58ca4)",
        "before_after_code_files": [
          "crypto/bn/bn_lib.c||crypto/bn/bn_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_lib.c||crypto/bn/bn_lib.c": [
          "File: crypto/bn/bn_lib.c -> crypto/bn/bn_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: int BN_num_bits_word(BN_ULONG l)",
          "90: {",
          "155: #endif",
          "159: }",
          "161: int BN_num_bits(const BIGNUM *a)",
          "",
          "[Removed Lines]",
          "91:     static const unsigned char bits[256] = {",
          "92:         0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,",
          "93:         5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,",
          "94:         6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,",
          "95:         6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,",
          "96:         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,",
          "97:         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,",
          "98:         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,",
          "99:         7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,",
          "100:         8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,",
          "101:         8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,",
          "102:         8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,",
          "103:         8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,",
          "104:         8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,",
          "105:         8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,",
          "106:         8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,",
          "107:         8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,",
          "108:     };",
          "110: #if defined(SIXTY_FOUR_BIT_LONG)",
          "111:     if (l & 0xffffffff00000000L) {",
          "112:         if (l & 0xffff000000000000L) {",
          "113:             if (l & 0xff00000000000000L) {",
          "114:                 return (bits[(int)(l >> 56)] + 56);",
          "115:             } else",
          "116:                 return (bits[(int)(l >> 48)] + 48);",
          "117:         } else {",
          "118:             if (l & 0x0000ff0000000000L) {",
          "119:                 return (bits[(int)(l >> 40)] + 40);",
          "120:             } else",
          "121:                 return (bits[(int)(l >> 32)] + 32);",
          "122:         }",
          "123:     } else",
          "124: #else",
          "125: # ifdef SIXTY_FOUR_BIT",
          "126:     if (l & 0xffffffff00000000LL) {",
          "127:         if (l & 0xffff000000000000LL) {",
          "128:             if (l & 0xff00000000000000LL) {",
          "129:                 return (bits[(int)(l >> 56)] + 56);",
          "130:             } else",
          "131:                 return (bits[(int)(l >> 48)] + 48);",
          "132:         } else {",
          "133:             if (l & 0x0000ff0000000000LL) {",
          "134:                 return (bits[(int)(l >> 40)] + 40);",
          "135:             } else",
          "136:                 return (bits[(int)(l >> 32)] + 32);",
          "137:         }",
          "138:     } else",
          "139: # endif",
          "140: #endif",
          "141:     {",
          "142: #if defined(THIRTY_TWO_BIT) || defined(SIXTY_FOUR_BIT) || defined(SIXTY_FOUR_BIT_LONG)",
          "143:         if (l & 0xffff0000L) {",
          "144:             if (l & 0xff000000L)",
          "145:                 return (bits[(int)(l >> 24L)] + 24);",
          "146:             else",
          "147:                 return (bits[(int)(l >> 16L)] + 16);",
          "148:         } else",
          "149: #endif",
          "150:         {",
          "151: #if defined(THIRTY_TWO_BIT) || defined(SIXTY_FOUR_BIT) || defined(SIXTY_FOUR_BIT_LONG)",
          "152:             if (l & 0xff00L)",
          "153:                 return (bits[(int)(l >> 8)] + 8);",
          "154:             else",
          "156:                 return (bits[(int)(l)]);",
          "157:         }",
          "158:     }",
          "",
          "[Added Lines]",
          "91:     BN_ULONG x, mask;",
          "92:     int bits = (l != 0);",
          "94: #if BN_BITS2 > 32",
          "95:     x = l >> 32;",
          "96:     mask = (0 - x) & BN_MASK2;",
          "97:     mask = (0 - (mask >> (BN_BITS2 - 1)));",
          "98:     bits += 32 & mask;",
          "99:     l ^= (x ^ l) & mask;",
          "102:     x = l >> 16;",
          "103:     mask = (0 - x) & BN_MASK2;",
          "104:     mask = (0 - (mask >> (BN_BITS2 - 1)));",
          "105:     bits += 16 & mask;",
          "106:     l ^= (x ^ l) & mask;",
          "108:     x = l >> 8;",
          "109:     mask = (0 - x) & BN_MASK2;",
          "110:     mask = (0 - (mask >> (BN_BITS2 - 1)));",
          "111:     bits += 8 & mask;",
          "112:     l ^= (x ^ l) & mask;",
          "114:     x = l >> 4;",
          "115:     mask = (0 - x) & BN_MASK2;",
          "116:     mask = (0 - (mask >> (BN_BITS2 - 1)));",
          "117:     bits += 4 & mask;",
          "118:     l ^= (x ^ l) & mask;",
          "120:     x = l >> 2;",
          "121:     mask = (0 - x) & BN_MASK2;",
          "122:     mask = (0 - (mask >> (BN_BITS2 - 1)));",
          "123:     bits += 2 & mask;",
          "124:     l ^= (x ^ l) & mask;",
          "126:     x = l >> 1;",
          "127:     mask = (0 - x) & BN_MASK2;",
          "128:     mask = (0 - (mask >> (BN_BITS2 - 1)));",
          "129:     bits += 1 & mask;",
          "131:     return bits;",
          "",
          "---------------"
        ]
      }
    }
  ]
}