{
  "cve_id": "CVE-2019-19925",
  "cve_desc": "zipfileUpdate in ext/misc/zipfile.c in SQLite 3.30.1 mishandles a NULL pathname during an update of a ZIP archive.",
  "repo": "sqlite/sqlite",
  "patch_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
  "patch_info": {
    "commit_hash": "54d501092d88c0cf89bec4279951f548fb0b8618",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/54d501092d88c0cf89bec4279951f548fb0b8618",
    "files": [
      "ext/misc/zipfile.c",
      "manifest",
      "manifest.uuid",
      "test/zipfile.test"
    ],
    "message": "Fix the zipfile extension so that INSERT works even if the pathname of the file being inserted is a NULL.  Bug discovered by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: a80f84b511231204658304226de3e075a55afc2e3f39ac063716f7a57f585c06",
    "before_after_code_files": [
      "ext/misc/zipfile.c||ext/misc/zipfile.c",
      "manifest.uuid||manifest.uuid",
      "test/zipfile.test||test/zipfile.test"
    ]
  },
  "patch_diff": {
    "ext/misc/zipfile.c||ext/misc/zipfile.c": [
      "File: ext/misc/zipfile.c -> ext/misc/zipfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1620:     if( rc==SQLITE_OK ){",
      "1621:       zPath = (const char*)sqlite3_value_text(apVal[2]);",
      "1622:       nPath = (int)strlen(zPath);",
      "1623:       mTime = zipfileGetTime(apVal[4]);",
      "1624:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1622:       if( zPath==0 ) zPath = \"\";",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: fccfb8a9ed3c1df9f23762bb8df6fdf36a21118899e3fae41f451169a5f2c08e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/zipfile.test||test/zipfile.test": [
      "File: test/zipfile.test -> test/zipfile.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "795:   } {. ./x1.txt ./x2.txt}",
      "796: }",
      "798: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "798: # 2019-12-18 Yongheng and Rui fuzzer",
      "799: #",
      "800: do_execsql_test 13.10 {",
      "801:   DROP TABLE IF EXISTS t0;",
      "802:   DROP TABLE IF EXISTS t1;",
      "803:   CREATE TABLE t0(a,b,c,d,e,f,g);",
      "804:   REPLACE INTO t0(c,b,f) VALUES(10,10,10);",
      "805:   CREATE VIRTUAL TABLE t1 USING zipfile('h.zip');",
      "806:   REPLACE INTO t1 SELECT * FROM t0;",
      "807:   SELECT quote(name),quote(mode),quote(mtime),quote(sz),quote(rawdata),",
      "808:          quote(data),quote(method) FROM t1;",
      "809: } {'' 10 10 2 X'3130' X'3130' 0}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e47d5ca73798e364c09a83abed038ecfbe28e96c",
      "candidate_info": {
        "commit_hash": "e47d5ca73798e364c09a83abed038ecfbe28e96c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e47d5ca73798e364c09a83abed038ecfbe28e96c",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/speed-check.sh"
        ],
        "message": "Add --multithread, --serialized, and --singlethread options to the speed-check.sh test script.\n\nFossilOrigin-Name: c17078af6046ba3cb0d7819c915a800c851d7368e13d149140db2a124df32bab",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/speed-check.sh||tool/speed-check.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5ef64b0f55d952c7b0016055eaf6bbc1b5b7afc09a62ee8e5e694ffa9863ac7c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/speed-check.sh||tool/speed-check.sh": [
          "File: tool/speed-check.sh -> tool/speed-check.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:     --nomemstat)",
          "66:         SPEEDTEST_OPTS=\"$SPEEDTEST_OPTS $1\"",
          "67:         ;;",
          "68:     --temp)",
          "69:         SPEEDTEST_OPTS=\"$SPEEDTEST_OPTS --temp 6\"",
          "70:         ;;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:     --multithread)",
          "69:         SPEEDTEST_OPTS=\"$SPEEDTEST_OPTS $1\"",
          "70:         ;;",
          "71:     --singlethread)",
          "72:         SPEEDTEST_OPTS=\"$SPEEDTEST_OPTS $1\"",
          "73:         ;;",
          "74:     --serialized)",
          "75:         SPEEDTEST_OPTS=\"$SPEEDTEST_OPTS $1\"",
          "76:         ;;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "291508f62b9906adf7be3058b296d56edcc5b01f",
      "candidate_info": {
        "commit_hash": "291508f62b9906adf7be3058b296d56edcc5b01f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/291508f62b9906adf7be3058b296d56edcc5b01f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "test/fuzzdata8.db"
        ],
        "message": "Remove an ALWAYS() that was previously added by check-in [a0819086] but which turns out can sometimes be false.\n\nFossilOrigin-Name: ad8fc5d8b440c49df95328df0408be699dde5a1dbd195b3f1f32e5f765578032",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 74eba2558a81f9e790d95a12a0c5379d4f80b43c8698ef9d6a31ff8d160a53d8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1630:   top = get2byte(&data[hdr+5]);",
          "1632:   if( gap>top ){",
          "1634:       top = 65536;",
          "1635:     }else{",
          "1636:       return SQLITE_CORRUPT_PAGE(pPage);",
          "",
          "[Removed Lines]",
          "1633:     if( top==0 && ALWAYS(pPage->pBt->usableSize==65536) ){",
          "",
          "[Added Lines]",
          "1633:     if( top==0 && pPage->pBt->usableSize==65536 ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "40d6c827e96737dbdfb5c54c803ee54560876290",
      "candidate_info": {
        "commit_hash": "40d6c827e96737dbdfb5c54c803ee54560876290",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/40d6c827e96737dbdfb5c54c803ee54560876290",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/releasetest_data.tcl"
        ],
        "message": "Have wapptest.tcl run at least one threadtest with an SQLITE_ENABLE_MEMORY_MANAGEMENT build.\n\nFossilOrigin-Name: d6131caf6471ad41fa5a28b0067d759ac1cc9dba1170678534488b416f9a1157",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/releasetest_data.tcl||test/releasetest_data.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5ea3f6fc88cf66824128aa64f777a7abb4f6ed55f214d7a135f36e306a32487c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/releasetest_data.tcl||test/releasetest_data.tcl": [
          "File: test/releasetest_data.tcl -> test/releasetest_data.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "246:     \"User-Auth\"               tcltest",
          "247:     \"Update-Delete-Limit\"     test",
          "248:     \"Extra-Robustness\"        test",
          "250:     \"No-lookaside\"            test",
          "251:     \"Devkit\"                  test",
          "252:     \"Apple\"                   test",
          "",
          "[Removed Lines]",
          "249:     \"Device-Two\"              test",
          "",
          "[Added Lines]",
          "249:     \"Device-Two\"              \"threadtest test\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ee94147f086fc9cd4bcf2bcdbb1fab6d1d1f921",
      "candidate_info": {
        "commit_hash": "9ee94147f086fc9cd4bcf2bcdbb1fab6d1d1f921",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/9ee94147f086fc9cd4bcf2bcdbb1fab6d1d1f921",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/parse.y"
        ],
        "message": "New tokens ALWAYS, GENERATED, and STORED used by generated columns should all be fallback tokens.\n\nFossilOrigin-Name: 13fe6978b7de208d2e27460d824f7fc778cf6ea0aabfe566b32bb410b8816f63",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4d424f3047b48fc441475137f30a719d2f079390c86fe2617710ddfb05c5e240",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:   CURRENT FOLLOWING PARTITION PRECEDING RANGE UNBOUNDED",
          "221:   EXCLUDE GROUPS OTHERS TIES",
          "222: %endif SQLITE_OMIT_WINDOWFUNC",
          "223:   REINDEX RENAME CTIME_KW IF",
          "224:   .",
          "225: %wildcard ANY.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223: %ifndef SQLITE_OMIT_GENERATED_COLUMNS",
          "224:   GENERATED ALWAYS STORED",
          "225: %endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae55737fbf98963accbb1b9a26250cd6f08a4ce5",
      "candidate_info": {
        "commit_hash": "ae55737fbf98963accbb1b9a26250cd6f08a4ce5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ae55737fbf98963accbb1b9a26250cd6f08a4ce5",
        "files": [
          "ext/fts5/fts5Int.h",
          "ext/fts5/fts5_config.c",
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5full.test",
          "ext/fts5/test/fts5misc.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Do not allow users to effectively disable fts5 crisismerge operations by setting the crisismerge threshold to higher than the maximum allowable segment b-trees on a single level. Fix for [d392017c].\n\nFossilOrigin-Name: 86e497209217abb7bcb491a023cd353f3c7c9c103ebd9f58dd8661b12cf3694c",
        "before_after_code_files": [
          "ext/fts5/fts5Int.h||ext/fts5/fts5Int.h",
          "ext/fts5/fts5_config.c||ext/fts5/fts5_config.c",
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5full.test||ext/fts5/test/fts5full.test",
          "ext/fts5/test/fts5misc.test||ext/fts5/test/fts5misc.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5Int.h||ext/fts5/fts5Int.h": [
          "File: ext/fts5/fts5Int.h -> ext/fts5/fts5Int.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: #define FTS5_MAX_PREFIX_INDEXES 31",
          "64: #define FTS5_DEFAULT_NEARDIST 10",
          "65: #define FTS5_DEFAULT_RANK     \"bm25\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67: #define FTS5_MAX_SEGMENT 2000",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_config.c||ext/fts5/fts5_config.c": [
          "File: ext/fts5/fts5_config.c -> ext/fts5/fts5_config.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "882:     }else{",
          "883:       if( nCrisisMerge<=1 ) nCrisisMerge = FTS5_DEFAULT_CRISISMERGE;",
          "884:       pConfig->nCrisisMerge = nCrisisMerge;",
          "885:     }",
          "886:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "884:       if( nCrisisMerge>=FTS5_MAX_SEGMENT ) nCrisisMerge = FTS5_MAX_SEGMENT-1;",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "239: #define FTS5_SEGMENT_ROWID(segid, pgno)       fts5_dri(segid, 0, 0, pgno)",
          "240: #define FTS5_DLIDX_ROWID(segid, height, pgno) fts5_dri(segid, 1, height, pgno)",
          "247: #ifdef SQLITE_DEBUG",
          "248: int sqlite3Fts5Corrupt() { return SQLITE_CORRUPT_VTAB; }",
          "249: #endif",
          "",
          "[Removed Lines]",
          "245: #define FTS5_MAX_SEGMENT 2000",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5full.test||ext/fts5/test/fts5full.test": [
          "File: ext/fts5/test/fts5full.test -> ext/fts5/test/fts5full.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:       execsql { INSERT INTO x8 VALUES( rnddoc(5) ); }",
          "37:     }",
          "38:   } msg] $msg",
          "42: finish_test",
          "",
          "[Removed Lines]",
          "39: } {1 {database or disk is full}}",
          "",
          "[Added Lines]",
          "39: } {0 {}}",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5misc.test||ext/fts5/test/fts5misc.test": [
          "File: ext/fts5/test/fts5misc.test -> ext/fts5/test/fts5misc.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:   INSERT INTO vt0(vt0, rank) VALUES('pgsz', '65537');",
          "176: } {1 {SQL logic error}}",
          "178: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178: #-------------------------------------------------------------------------",
          "179: # Ticket [d392017c].",
          "180: #",
          "181: reset_db",
          "182: do_execsql_test 6.0 {",
          "183:   CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
          "184:   WITH s(i) AS (",
          "185:     SELECT 1 UNION ALL SELECT i+1 FROM s WHERE i<10000",
          "186:   )",
          "187:   INSERT INTO vt0(c0) SELECT '0' FROM s;",
          "188:   INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2000);",
          "189:   INSERT INTO vt0(vt0, rank) VALUES('automerge', 0);",
          "190: } {}",
          "192: do_execsql_test 6.1 {",
          "193:   INSERT INTO vt0(vt0) VALUES('rebuild');",
          "194: }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 907f7965b335d8d5441f2e386bb190d1f93ffcd45ca98d2d1c621dede491fc5e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}