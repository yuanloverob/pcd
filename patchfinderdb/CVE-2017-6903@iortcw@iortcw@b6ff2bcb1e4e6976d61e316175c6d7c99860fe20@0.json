{
  "cve_id": "CVE-2017-6903",
  "cve_desc": "In ioquake3 before 2017-03-14, the auto-downloading feature has insufficient content restrictions. This also affects Quake III Arena, OpenArena, OpenJK, iortcw, and other id Tech 3 (aka Quake 3 engine) forks. A malicious auto-downloaded file can trigger loading of crafted auto-downloaded files as native code DLLs. A malicious auto-downloaded file can contain configuration defaults that override the user's. Executable bytecode in a malicious auto-downloaded file can set configuration variables to values that will result in unwanted native code DLLs being loaded, resulting in sandbox escape.",
  "repo": "iortcw/iortcw",
  "patch_hash": "b6ff2bcb1e4e6976d61e316175c6d7c99860fe20",
  "patch_info": {
    "commit_hash": "b6ff2bcb1e4e6976d61e316175c6d7c99860fe20",
    "repo": "iortcw/iortcw",
    "commit_url": "https://github.com/iortcw/iortcw/commit/b6ff2bcb1e4e6976d61e316175c6d7c99860fe20",
    "files": [
      "MP/code/client/cl_main.c",
      "MP/code/qcommon/files.c",
      "MP/code/sys/sys_main.c",
      "SP/code/client/cl_main.c",
      "SP/code/qcommon/files.c",
      "SP/code/sys/sys_main.c"
    ],
    "message": "All: Don't load .pk3s as .dlls, and don't load user config files from .pk3s",
    "before_after_code_files": [
      "MP/code/client/cl_main.c||MP/code/client/cl_main.c",
      "MP/code/qcommon/files.c||MP/code/qcommon/files.c",
      "MP/code/sys/sys_main.c||MP/code/sys/sys_main.c",
      "SP/code/client/cl_main.c||SP/code/client/cl_main.c",
      "SP/code/qcommon/files.c||SP/code/qcommon/files.c",
      "SP/code/sys/sys_main.c||SP/code/sys/sys_main.c"
    ]
  },
  "patch_diff": {
    "MP/code/client/cl_main.c||MP/code/client/cl_main.c": [
      "File: MP/code/client/cl_main.c -> MP/code/client/cl_main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3674:  Com_Printf( \"----- Initializing Renderer ----\\n\" );",
      "3676: #ifdef USE_RENDERER_DLOPEN",
      "3679:  Com_sprintf(dllName, sizeof(dllName), \"renderer_mp_%s_\" ARCH_STRING DLL_EXT, cl_renderer->string);",
      "",
      "[Removed Lines]",
      "3677:  cl_renderer = Cvar_Get(\"cl_renderer\", \"opengl1\", CVAR_ARCHIVE | CVAR_LATCH);",
      "",
      "[Added Lines]",
      "3677:  cl_renderer = Cvar_Get(\"cl_renderer\", \"opengl1\", CVAR_ARCHIVE | CVAR_LATCH | CVAR_PROTECTED);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4015:  cl_allowDownload = Cvar_Get( \"cl_allowDownload\", \"1\", CVAR_ARCHIVE );",
      "4016: #ifdef USE_CURL_DLOPEN",
      "4018: #endif",
      "",
      "[Removed Lines]",
      "4017:  cl_cURLLib = Cvar_Get(\"cl_cURLLib\", DEFAULT_CURL_LIB, CVAR_ARCHIVE);",
      "",
      "[Added Lines]",
      "4017:  cl_cURLLib = Cvar_Get(\"cl_cURLLib\", DEFAULT_CURL_LIB, CVAR_ARCHIVE | CVAR_PROTECTED);",
      "",
      "---------------"
    ],
    "MP/code/qcommon/files.c||MP/code/qcommon/files.c": [
      "File: MP/code/qcommon/files.c -> MP/code/qcommon/files.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1424: {",
      "1425:  searchpath_t *search;",
      "1426:  long len;",
      "1428:  if(!fs_searchpaths)",
      "1429:   Com_Error(ERR_FATAL, \"Filesystem call made without initialization\");",
      "1431:  for(search = fs_searchpaths; search; search = search->next)",
      "1432:  {",
      "1433:          len = FS_FOpenFileReadDir(filename, search, file, uniqueFILE, qfalse);",
      "1435:          if(file == NULL)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1427:  qboolean isLocalConfig;",
      "1432:  isLocalConfig = !strcmp(filename, \"autoexec.cfg\") || !strcmp(filename, Q3CONFIG_CFG);",
      "1436:   if (isLocalConfig && search->pack)",
      "1437:    continue;",
      "",
      "---------------"
    ],
    "MP/code/sys/sys_main.c||MP/code/sys/sys_main.c": [
      "File: MP/code/sys/sys_main.c -> MP/code/sys/sys_main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "499: void *Sys_LoadDll(const char *name, qboolean useSystemLib)",
      "500: {",
      "501:  void *dllhandle;",
      "503:  if(useSystemLib)",
      "504:   Com_Printf(\"Trying to load \\\"%s\\\"...\\n\", name);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "504:  if (COM_CompareExtension(name, \".pk3\"))",
      "505:  {",
      "506:   Com_Printf(\"Rejecting DLL named \\\"%s\\\"\", name);",
      "507:   return NULL;",
      "508:  }",
      "",
      "---------------"
    ],
    "SP/code/client/cl_main.c||SP/code/client/cl_main.c": [
      "File: SP/code/client/cl_main.c -> SP/code/client/cl_main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3348:  Com_Printf( \"----- Initializing Renderer ----\\n\" );",
      "3350: #ifdef USE_RENDERER_DLOPEN",
      "3353:  Com_sprintf(dllName, sizeof(dllName), \"renderer_sp_%s_\" ARCH_STRING DLL_EXT, cl_renderer->string);",
      "",
      "[Removed Lines]",
      "3351:  cl_renderer = Cvar_Get(\"cl_renderer\", \"opengl1\", CVAR_ARCHIVE | CVAR_LATCH);",
      "",
      "[Added Lines]",
      "3351:  cl_renderer = Cvar_Get(\"cl_renderer\", \"opengl1\", CVAR_ARCHIVE | CVAR_LATCH | CVAR_PROTECTED);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3691:  cl_allowDownload = Cvar_Get( \"cl_allowDownload\", \"0\", CVAR_ARCHIVE );",
      "3692: #ifdef USE_CURL_DLOPEN",
      "3694: #endif",
      "",
      "[Removed Lines]",
      "3693:  cl_cURLLib = Cvar_Get(\"cl_cURLLib\", DEFAULT_CURL_LIB, CVAR_ARCHIVE);",
      "",
      "[Added Lines]",
      "3693:  cl_cURLLib = Cvar_Get(\"cl_cURLLib\", DEFAULT_CURL_LIB, CVAR_ARCHIVE | CVAR_PROTECTED);",
      "",
      "---------------"
    ],
    "SP/code/qcommon/files.c||SP/code/qcommon/files.c": [
      "File: SP/code/qcommon/files.c -> SP/code/qcommon/files.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1591: {",
      "1592:  searchpath_t *search;",
      "1593:  long len;",
      "1595:  if(!fs_searchpaths)",
      "1596:   Com_Error(ERR_FATAL, \"Filesystem call made without initialization\");",
      "1598:  for(search = fs_searchpaths; search; search = search->next)",
      "1599:  {",
      "1600:   len = FS_FOpenFileReadDir(filename, search, file, uniqueFILE, qfalse);",
      "1602:   if(file == NULL)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1594:  qboolean isLocalConfig;",
      "1599:  isLocalConfig = !strcmp(filename, \"autoexec.cfg\") || !strcmp(filename, Q3CONFIG_CFG);",
      "1603:   if (isLocalConfig && search->pack)",
      "1604:    continue;",
      "",
      "---------------"
    ],
    "SP/code/sys/sys_main.c||SP/code/sys/sys_main.c": [
      "File: SP/code/sys/sys_main.c -> SP/code/sys/sys_main.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "499: void *Sys_LoadDll(const char *name, qboolean useSystemLib)",
      "500: {",
      "501:  void *dllhandle;",
      "503:  if(useSystemLib)",
      "504:   Com_Printf(\"Trying to load \\\"%s\\\"...\\n\", name);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "504:  if (COM_CompareExtension(name, \".pk3\"))",
      "505:  {",
      "506:   Com_Printf(\"Rejecting DLL named \\\"%s\\\"\", name);",
      "507:   return NULL;",
      "508:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b27e0ff69b32fd77eac23ac4c8835335c1a9bd18",
      "candidate_info": {
        "commit_hash": "b27e0ff69b32fd77eac23ac4c8835335c1a9bd18",
        "repo": "iortcw/iortcw",
        "commit_url": "https://github.com/iortcw/iortcw/commit/b27e0ff69b32fd77eac23ac4c8835335c1a9bd18",
        "files": [
          "MP/code/client/cl_main.c",
          "SP/code/client/cl_main.c"
        ],
        "message": "All: Don't use CVAR_PROTECTED flag for cl_renderer",
        "before_after_code_files": [
          "MP/code/client/cl_main.c||MP/code/client/cl_main.c",
          "SP/code/client/cl_main.c||SP/code/client/cl_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MP/code/client/cl_main.c||MP/code/client/cl_main.c",
            "SP/code/client/cl_main.c||SP/code/client/cl_main.c"
          ],
          "candidate": [
            "MP/code/client/cl_main.c||MP/code/client/cl_main.c",
            "SP/code/client/cl_main.c||SP/code/client/cl_main.c"
          ]
        }
      },
      "candidate_diff": {
        "MP/code/client/cl_main.c||MP/code/client/cl_main.c": [
          "File: MP/code/client/cl_main.c -> MP/code/client/cl_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3693:  Com_Printf( \"----- Initializing Renderer ----\\n\" );",
          "3695: #ifdef USE_RENDERER_DLOPEN",
          "3698:  Com_sprintf(dllName, sizeof(dllName), \"renderer_mp_%s_\" ARCH_STRING DLL_EXT, cl_renderer->string);",
          "",
          "[Removed Lines]",
          "3696:  cl_renderer = Cvar_Get(\"cl_renderer\", \"opengl1\", CVAR_ARCHIVE | CVAR_LATCH | CVAR_PROTECTED);",
          "",
          "[Added Lines]",
          "3696:  cl_renderer = Cvar_Get(\"cl_renderer\", \"opengl1\", CVAR_ARCHIVE | CVAR_LATCH);",
          "",
          "---------------"
        ],
        "SP/code/client/cl_main.c||SP/code/client/cl_main.c": [
          "File: SP/code/client/cl_main.c -> SP/code/client/cl_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3356:  Com_Printf( \"----- Initializing Renderer ----\\n\" );",
          "3358: #ifdef USE_RENDERER_DLOPEN",
          "3361:  Com_sprintf(dllName, sizeof(dllName), \"renderer_sp_%s_\" ARCH_STRING DLL_EXT, cl_renderer->string);",
          "",
          "[Removed Lines]",
          "3359:  cl_renderer = Cvar_Get(\"cl_renderer\", \"opengl1\", CVAR_ARCHIVE | CVAR_LATCH | CVAR_PROTECTED);",
          "",
          "[Added Lines]",
          "3359:  cl_renderer = Cvar_Get(\"cl_renderer\", \"opengl1\", CVAR_ARCHIVE | CVAR_LATCH);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30ac4edeb8981ed27014a53d400fd51873b4144f",
      "candidate_info": {
        "commit_hash": "30ac4edeb8981ed27014a53d400fd51873b4144f",
        "repo": "iortcw/iortcw",
        "commit_url": "https://github.com/iortcw/iortcw/commit/30ac4edeb8981ed27014a53d400fd51873b4144f",
        "files": [
          "MP/code/client/snd_openal.c",
          "MP/code/qcommon/files.c",
          "MP/code/qcommon/qcommon.h",
          "MP/code/sys/sys_main.c",
          "MP/code/sys/sys_unix.c",
          "MP/code/sys/sys_win32.c",
          "SP/code/client/snd_openal.c",
          "SP/code/qcommon/files.c",
          "SP/code/qcommon/qcommon.h",
          "SP/code/sys/sys_main.c",
          "SP/code/sys/sys_unix.c",
          "SP/code/sys/sys_win32.c"
        ],
        "message": "All: Don't load libraries with non-standard file extensions",
        "before_after_code_files": [
          "MP/code/client/snd_openal.c||MP/code/client/snd_openal.c",
          "MP/code/qcommon/files.c||MP/code/qcommon/files.c",
          "MP/code/qcommon/qcommon.h||MP/code/qcommon/qcommon.h",
          "MP/code/sys/sys_main.c||MP/code/sys/sys_main.c",
          "MP/code/sys/sys_unix.c||MP/code/sys/sys_unix.c",
          "MP/code/sys/sys_win32.c||MP/code/sys/sys_win32.c",
          "SP/code/client/snd_openal.c||SP/code/client/snd_openal.c",
          "SP/code/qcommon/files.c||SP/code/qcommon/files.c",
          "SP/code/qcommon/qcommon.h||SP/code/qcommon/qcommon.h",
          "SP/code/sys/sys_main.c||SP/code/sys/sys_main.c",
          "SP/code/sys/sys_unix.c||SP/code/sys/sys_unix.c",
          "SP/code/sys/sys_win32.c||SP/code/sys/sys_win32.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MP/code/qcommon/files.c||MP/code/qcommon/files.c",
            "MP/code/sys/sys_main.c||MP/code/sys/sys_main.c",
            "SP/code/qcommon/files.c||SP/code/qcommon/files.c",
            "SP/code/sys/sys_main.c||SP/code/sys/sys_main.c"
          ],
          "candidate": [
            "MP/code/qcommon/files.c||MP/code/qcommon/files.c",
            "MP/code/sys/sys_main.c||MP/code/sys/sys_main.c",
            "SP/code/qcommon/files.c||SP/code/qcommon/files.c",
            "SP/code/sys/sys_main.c||SP/code/sys/sys_main.c"
          ]
        }
      },
      "candidate_diff": {
        "MP/code/client/snd_openal.c||MP/code/client/snd_openal.c": [
          "File: MP/code/client/snd_openal.c -> MP/code/client/snd_openal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2623:  s_alInputDevice = Cvar_Get( \"s_alInputDevice\", \"\", CVAR_ARCHIVE | CVAR_LATCH );",
          "2624:  s_alDevice = Cvar_Get(\"s_alDevice\", \"\", CVAR_ARCHIVE | CVAR_LATCH);",
          "2633:  if( !QAL_Init( s_alDriver->string ) )",
          "2634:   {",
          "",
          "[Removed Lines]",
          "2626:  if ( COM_CompareExtension( s_alDriver->string, \".pk3\" ) )",
          "2627:  {",
          "2628:   Com_Printf( \"Rejecting DLL named \\\"%s\\\"\", s_alDriver->string );",
          "2629:   return qfalse;",
          "2630:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MP/code/qcommon/files.c||MP/code/qcommon/files.c": [
          "File: MP/code/qcommon/files.c -> MP/code/qcommon/files.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "575:   const char *function )",
          "576: {",
          "579:   || COM_CompareExtension( filename, \".qvm\" )",
          "580:   || COM_CompareExtension( filename, \".pk3\" ) )",
          "581:  {",
          "",
          "[Removed Lines]",
          "578:  if( COM_CompareExtension( filename, DLL_EXT )",
          "",
          "[Added Lines]",
          "578:  if( Sys_DllExtension( filename )",
          "",
          "---------------"
        ],
        "MP/code/qcommon/qcommon.h||MP/code/qcommon/qcommon.h": [
          "File: MP/code/qcommon/qcommon.h -> MP/code/qcommon/qcommon.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1194:       intptr_t (QDECL *systemcalls)(intptr_t, ...) );",
          "1195: void    Sys_UnloadDll( void *dllHandle );",
          "1197: char    *Sys_GetCurrentUser( void );",
          "1199: void QDECL Sys_Error( const char *error, ...) __attribute__ ((noreturn, format (printf, 1, 2)));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1197: qboolean Sys_DllExtension( const char *name );",
          "",
          "---------------"
        ],
        "MP/code/sys/sys_main.c||MP/code/sys/sys_main.c": [
          "File: MP/code/sys/sys_main.c -> MP/code/sys/sys_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "500: {",
          "501:  void *dllhandle;",
          "505:  {",
          "507:   return NULL;",
          "508:  }",
          "",
          "[Removed Lines]",
          "504:  if (COM_CompareExtension(name, \".pk3\"))",
          "506:   Com_Printf(\"Rejecting DLL named \\\"%s\\\"\", name);",
          "",
          "[Added Lines]",
          "503:  if(!Sys_DllExtension(name))",
          "505:   Com_Printf(\"Refusing to attempt to load library \\\"%s\\\": Extension not allowed.\\n\", name);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "562:  assert(name);",
          "564:  Com_Printf( \"Loading DLL file: %s\\n\", name);",
          "565:  libHandle = Sys_LoadLibrary(name);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "563:  if(!Sys_DllExtension(name))",
          "564:  {",
          "565:   Com_Printf(\"Refusing to attempt to load library \\\"%s\\\": Extension not allowed.\\n\", name);",
          "566:   return NULL;",
          "567:  }",
          "",
          "---------------"
        ],
        "MP/code/sys/sys_unix.c||MP/code/sys/sys_unix.c": [
          "File: MP/code/sys/sys_unix.c -> MP/code/sys/sys_unix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "949:  return kill( pid, 0 ) == 0;",
          "950: }",
          "955: ==================",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "953: =================",
          "954: Sys_DllExtension",
          "956: Check if filename should be allowed to be loaded as a DLL.",
          "957: =================",
          "959: qboolean Sys_DllExtension( const char *name ) {",
          "960:  const char *p;",
          "961:  char c = 0;",
          "963:  if ( COM_CompareExtension( name, DLL_EXT ) ) {",
          "964:   return qtrue;",
          "965:  }",
          "968:  p = strstr( name, DLL_EXT \".\" );",
          "970:  if ( p ) {",
          "971:   p += strlen( DLL_EXT );",
          "974:   while ( *p ) {",
          "975:    c = *p;",
          "977:    if ( !isdigit( c ) && c != '.' ) {",
          "978:     return qfalse;",
          "979:    }",
          "981:    p++;",
          "982:   }",
          "985:   if ( c != '.' ) {",
          "986:    return qtrue;",
          "987:   }",
          "988:  }",
          "990:  return qfalse;",
          "991: }",
          "",
          "---------------"
        ],
        "MP/code/sys/sys_win32.c||MP/code/sys/sys_win32.c": [
          "File: MP/code/sys/sys_win32.c -> MP/code/sys/sys_win32.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "907:  return qfalse;",
          "908: }",
          "910: char* Sys_GetDLLName( const char *name ) {",
          "911:  return va(\"%s_mp_\" ARCH_STRING DLL_EXT, name);",
          "912: }",
          "914: int Sys_GetHighQualityCPU() {",
          "915:  return 1;",
          "916: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "911: =================",
          "912: Sys_DllExtension",
          "914: Check if filename should be allowed to be loaded as a DLL.",
          "915: =================",
          "917: qboolean Sys_DllExtension( const char *name ) {",
          "918:  return COM_CompareExtension( name, DLL_EXT );",
          "919: }",
          "922: ==============",
          "923: Sys_GetDLLName",
          "924: ==============",
          "931: ==============",
          "932: Sys_GetHighQualityCPU",
          "933: ==============",
          "",
          "---------------"
        ],
        "SP/code/client/snd_openal.c||SP/code/client/snd_openal.c": [
          "File: SP/code/client/snd_openal.c -> SP/code/client/snd_openal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2680:  s_alInputDevice = Cvar_Get( \"s_alInputDevice\", \"\", CVAR_ARCHIVE | CVAR_LATCH );",
          "2681:  s_alDevice = Cvar_Get(\"s_alDevice\", \"\", CVAR_ARCHIVE | CVAR_LATCH);",
          "2690:  if( !QAL_Init( s_alDriver->string ) )",
          "2691:   {",
          "",
          "[Removed Lines]",
          "2683:  if ( COM_CompareExtension( s_alDriver->string, \".pk3\" ) )",
          "2684:  {",
          "2685:   Com_Printf( \"Rejecting DLL named \\\"%s\\\"\", s_alDriver->string );",
          "2686:   return qfalse;",
          "2687:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "SP/code/qcommon/files.c||SP/code/qcommon/files.c": [
          "File: SP/code/qcommon/files.c -> SP/code/qcommon/files.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "704:   const char *function )",
          "705: {",
          "708:   || COM_CompareExtension( filename, \".qvm\" )",
          "709:   || COM_CompareExtension( filename, \".pk3\" ) )",
          "710:  {",
          "",
          "[Removed Lines]",
          "707:  if(COM_CompareExtension( filename, DLL_EXT )",
          "",
          "[Added Lines]",
          "707:  if( Sys_DllExtension( filename )",
          "",
          "---------------"
        ],
        "SP/code/qcommon/qcommon.h||SP/code/qcommon/qcommon.h": [
          "File: SP/code/qcommon/qcommon.h -> SP/code/qcommon/qcommon.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1113:       intptr_t (QDECL *systemcalls)(intptr_t, ...) );",
          "1114: void    Sys_UnloadDll( void *dllHandle );",
          "1116: char    *Sys_GetCurrentUser( void );",
          "1118: void QDECL Sys_Error( const char *error, ...) __attribute__ ((noreturn, format (printf, 1, 2)));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1116: qboolean Sys_DllExtension( const char *name );",
          "",
          "---------------"
        ],
        "SP/code/sys/sys_main.c||SP/code/sys/sys_main.c": [
          "File: SP/code/sys/sys_main.c -> SP/code/sys/sys_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "500: {",
          "501:  void *dllhandle;",
          "505:  {",
          "507:   return NULL;",
          "508:  }",
          "",
          "[Removed Lines]",
          "504:  if (COM_CompareExtension(name, \".pk3\"))",
          "506:   Com_Printf(\"Rejecting DLL named \\\"%s\\\"\", name);",
          "",
          "[Added Lines]",
          "503:  if(!Sys_DllExtension(name))",
          "505:   Com_Printf(\"Refusing to attempt to load library \\\"%s\\\": Extension not allowed.\\n\", name);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "562:  assert(name);",
          "564:  Com_DPrintf( \"Loading DLL file: %s\\n\", name);",
          "565:  libHandle = Sys_LoadLibrary(name);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "563:  if(!Sys_DllExtension(name))",
          "564:  {",
          "565:   Com_Printf(\"Refusing to attempt to load library \\\"%s\\\": Extension not allowed.\\n\", name);",
          "566:   return NULL;",
          "567:  }",
          "",
          "---------------"
        ],
        "SP/code/sys/sys_unix.c||SP/code/sys/sys_unix.c": [
          "File: SP/code/sys/sys_unix.c -> SP/code/sys/sys_unix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "949:  return kill( pid, 0 ) == 0;",
          "950: }",
          "953: ==============",
          "954: Sys_GetHighQualityCPU",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "953: =================",
          "954: Sys_DllExtension",
          "956: Check if filename should be allowed to be loaded as a DLL.",
          "957: =================",
          "959: qboolean Sys_DllExtension( const char *name ) {",
          "960:  const char *p;",
          "961:  char c = 0;",
          "963:  if ( COM_CompareExtension( name, DLL_EXT ) ) {",
          "964:   return qtrue;",
          "965:  }",
          "968:  p = strstr( name, DLL_EXT \".\" );",
          "970:  if ( p ) {",
          "971:   p += strlen( DLL_EXT );",
          "974:   while ( *p ) {",
          "975:    c = *p;",
          "977:    if ( !isdigit( c ) && c != '.' ) {",
          "978:     return qfalse;",
          "979:    }",
          "981:    p++;",
          "982:   }",
          "985:   if ( c != '.' ) {",
          "986:    return qtrue;",
          "987:   }",
          "988:  }",
          "990:  return qfalse;",
          "991: }",
          "",
          "---------------"
        ],
        "SP/code/sys/sys_win32.c||SP/code/sys/sys_win32.c": [
          "File: SP/code/sys/sys_win32.c -> SP/code/sys/sys_win32.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "848:  return qfalse;",
          "849: }",
          "852: ==============",
          "853: Sys_GetHighQualityCPU",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "852: =================",
          "853: Sys_DllExtension",
          "855: Check if filename should be allowed to be loaded as a DLL.",
          "856: =================",
          "858: qboolean Sys_DllExtension( const char *name ) {",
          "859:  return COM_CompareExtension( name, DLL_EXT );",
          "860: }",
          "863: ==============",
          "864: Sys_GetDLLName",
          "865: ==============",
          "867: char* Sys_GetDLLName( const char *name ) {",
          "868:  return va(\"%s_sp_\" ARCH_STRING DLL_EXT, name);",
          "869: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "912: }",
          "",
          "[Removed Lines]",
          "915: char* Sys_GetDLLName( const char *name ) {",
          "916:  return va(\"%s_sp_\" ARCH_STRING DLL_EXT, name);",
          "917: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}