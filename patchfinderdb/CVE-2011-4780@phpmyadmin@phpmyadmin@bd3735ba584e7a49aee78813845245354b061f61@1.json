{
  "cve_id": "CVE-2011-4780",
  "cve_desc": "Multiple cross-site scripting (XSS) vulnerabilities in libraries/display_export.lib.php in phpMyAdmin 3.4.x before 3.4.9 allow remote attackers to inject arbitrary web script or HTML via crafted URL parameters, related to the export panels in the (1) server, (2) database, and (3) table sections.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "bd3735ba584e7a49aee78813845245354b061f61",
  "patch_info": {
    "commit_hash": "bd3735ba584e7a49aee78813845245354b061f61",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/bd3735ba584e7a49aee78813845245354b061f61",
    "files": [
      "ChangeLog",
      "libraries/display_export.lib.php"
    ],
    "message": "[security] Self-XSS on export options (export server/database/table), see PMASA-2011-20",
    "before_after_code_files": [
      "libraries/display_export.lib.php||libraries/display_export.lib.php"
    ]
  },
  "patch_diff": {
    "libraries/display_export.lib.php||libraries/display_export.lib.php": [
      "File: libraries/display_export.lib.php -> libraries/display_export.lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "150:                     echo '<label for =\"radio_allrows_0\">' . __('Dump some row(s)') . '</label>'; ?>",
      "151:                 <ul>",
      "152:                     <li><label for=\"limit_to\"><?php echo __('Number of rows:') . '</label> <input type=\"text\" id=\"limit_to\" name=\"limit_to\" size=\"5\" value=\"'",
      "154:                 . '\" onfocus=\"this.select()\" />' ?></li>",
      "155:                     <li><label for=\"limit_from\"><?php echo __('Row to begin at:') . '</label> <input type=\"text\" id=\"limit_from\" name=\"limit_from\" value=\"'",
      "157:                  . '\" size=\"5\" onfocus=\"this.select()\" />'; ?></li>",
      "158:                 </ul>",
      "159:             </li>",
      "",
      "[Removed Lines]",
      "153:                 . ((isset($_GET['limit_to'])) ? $_GET['limit_to'] : ((isset($unlim_num_rows) ? $unlim_num_rows : PMA_Table::countRecords($db, $table))))",
      "156:                  . ((isset($_GET['limit_from'])) ? $_GET['limit_from'] : '0')",
      "",
      "[Added Lines]",
      "153:                 . ((isset($_GET['limit_to'])) ? htmlspecialchars($_GET['limit_to']) : ((isset($unlim_num_rows) ? $unlim_num_rows : PMA_Table::countRecords($db, $table))))",
      "156:                  . ((isset($_GET['limit_from'])) ? htmlspecialchars($_GET['limit_from']) : '0')",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "242:                     <?php",
      "243:                         echo ' value=\"';",
      "244:                         if(isset($_GET['filename_template'])) {",
      "246:                         } else {",
      "247:                             if ($export_type == 'database') {",
      "248:                                 echo htmlspecialchars($GLOBALS['PMA_Config']->getUserValue(",
      "",
      "[Removed Lines]",
      "245:                             echo $_GET['filename_template'];",
      "",
      "[Added Lines]",
      "245:                             echo htmlspecialchars($_GET['filename_template']);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "add93f38a12f23e8b3a3e8cfe84cf5b62b495f8a",
      "candidate_info": {
        "commit_hash": "add93f38a12f23e8b3a3e8cfe84cf5b62b495f8a",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/add93f38a12f23e8b3a3e8cfe84cf5b62b495f8a",
        "files": [
          "libraries/display_export.lib.php"
        ],
        "message": "Various fixes in coding style",
        "before_after_code_files": [
          "libraries/display_export.lib.php||libraries/display_export.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ],
          "candidate": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/display_export.lib.php||libraries/display_export.lib.php": [
          "File: libraries/display_export.lib.php -> libraries/display_export.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     }",
          "27: }",
          "37: $export_list = PMA_getPlugins(",
          "38:     \"export\",",
          "",
          "[Removed Lines]",
          "29: function PMA_exportIsActive($what, $val)",
          "30: {",
          "31:     if (isset($GLOBALS['cfg']['Export'][$what]) &&  $GLOBALS['cfg']['Export'][$what] == $val) {",
          "32:         echo ' checked=\"checked\"';",
          "33:     }",
          "34: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:     )->display();",
          "51:     exit;",
          "52: }",
          "58: if ($export_type == 'server') {",
          "59:     echo PMA_generate_common_hidden_inputs('', '', 1);",
          "60: } elseif ($export_type == 'database') {",
          "",
          "[Removed Lines]",
          "53: ?>",
          "55: <form method=\"post\" action=\"export.php\" name=\"dump\">",
          "57: <?php",
          "",
          "[Added Lines]",
          "55: echo '<form method=\"post\" action=\"export.php\" name=\"dump\">';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:     echo PMA_generate_common_hidden_inputs($db, $table, 1);",
          "64: }",
          "67: if (isset($single_table)) {",
          "68:     echo '<input type=\"hidden\" name=\"single_table\" value=\"TRUE\" />' . \"\\n\";",
          "69: }",
          "74: if (isset($_GET['export_method'])) {",
          "",
          "[Removed Lines]",
          "71: echo '<input type=\"hidden\" name=\"export_type\" value=\"' . $export_type . '\" />' . \"\\n\";",
          "",
          "[Added Lines]",
          "71: echo '<input type=\"hidden\" name=\"export_type\" value=\"' . $export_type . '\" />';",
          "72: echo \"\\n\";",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "77:     $cfg['Export']['method'] = 'quick';",
          "78: }",
          "83: if (isset($_GET['sql_query'])) {",
          "85: } elseif (! empty($sql_query)) {",
          "87: }",
          "209: <div class=\"exportoptions\" id=\"output\">",
          "210:     <h3><?php echo __('Output:'); ?></h3>",
          "",
          "[Removed Lines]",
          "80: echo '<input type=\"hidden\" name=\"export_method\" value=\"' . htmlspecialchars($cfg['Export']['method']) . '\" />';",
          "84:     echo '<input type=\"hidden\" name=\"sql_query\" value=\"' . htmlspecialchars($_GET['sql_query']) . '\" />' . \"\\n\";",
          "86:     echo '<input type=\"hidden\" name=\"sql_query\" value=\"' . htmlspecialchars($sql_query) . '\" />' . \"\\n\";",
          "88: ?>",
          "90: <div class=\"exportoptions\" id=\"header\">",
          "91:     <h2>",
          "92:         <?php echo $common_functions->getImage('b_export.png', __('Export')); ?>",
          "93:         <?php",
          "94:         if ($export_type == 'server') {",
          "95:             echo __('Exporting databases from the current server');",
          "96:         } elseif ($export_type == 'database') {",
          "97:             printf(__('Exporting tables from \"%s\" database'), htmlspecialchars($db));",
          "98:         } else {",
          "99:             printf(__('Exporting rows from \"%s\" table'), htmlspecialchars($table));",
          "100:         }?>",
          "101:     </h2>",
          "102: </div>",
          "104: <div class=\"exportoptions\" id=\"quick_or_custom\">",
          "105:     <h3><?php echo __('Export Method:'); ?></h3>",
          "106:     <ul>",
          "107:         <li>",
          "108:             <?php echo '<input type=\"radio\" name=\"quick_or_custom\" value=\"quick\" id=\"radio_quick_export\"';",
          "109:             if (isset($_GET['quick_or_custom'])) {",
          "110:                 $export_method = $_GET['quick_or_custom'];",
          "111:                 if ($export_method == 'custom' || $export_method == 'custom_no_form') {",
          "112:                     echo ' />';",
          "113:                 } else {",
          "114:                     echo ' checked=\"checked\" />';",
          "115:                 }",
          "116:             } elseif ($cfg['Export']['method'] == 'custom' || $cfg['Export']['method'] == 'custom-no-form') {",
          "117:                 echo ' />';",
          "118:             } else {",
          "119:                 echo ' checked=\"checked\" />';",
          "120:             }",
          "121:             echo '<label for =\"radio_quick_export\">' . __('Quick - display only the minimal options') . '</label>'; ?>",
          "122:         </li>",
          "123:         <li>",
          "124:             <?php echo '<input type=\"radio\" name=\"quick_or_custom\" value=\"custom\" id=\"radio_custom_export\"';",
          "125:             if (isset($_GET['quick_or_custom'])) {",
          "126:                 $export_method = $_GET['quick_or_custom'];",
          "127:                 if ($export_method == 'custom' || $export_method == 'custom_no_form') {",
          "128:                     echo ' checked=\"checked\" />';",
          "129:                 } else {",
          "130:                     echo ' />';",
          "131:                 }",
          "132:             } elseif ($cfg['Export']['method'] == 'custom' || $cfg['Export']['method'] == 'custom-no-form') {",
          "133:                 echo ' checked=\"checked\" />';",
          "134:             } else {",
          "135:                 echo ' />';",
          "136:             }",
          "137:             echo '<label for=\"radio_custom_export\">' . __('Custom - display all possible options') . '</label>';?>",
          "138:         </li>",
          "139:     </ul>",
          "140: </div>",
          "142: <div class=\"exportoptions\" id=\"databases_and_tables\">",
          "143:     <?php",
          "144:         if ($export_type == 'server') {",
          "145:             echo '<h3>' . __('Database(s):') . '</h3>';",
          "146:         } else if ($export_type == 'database') {",
          "147:             echo '<h3>' . __('Table(s):') . '</h3>';",
          "148:         }",
          "149:         if (! empty($multi_values)) {",
          "150:             echo $multi_values;",
          "151:         }",
          "152:     ?>",
          "153: </div>",
          "155: <?php if (strlen($table) && ! isset($num_tables) && ! PMA_Table::isMerge($db, $table)) { ?>",
          "156:     <div class=\"exportoptions\" id=\"rows\">",
          "157:         <h3><?php echo __('Rows:'); ?></h3>",
          "158:         <ul>",
          "159:             <li>",
          "160:                 <?php if (isset($_GET['allrows']) && $_GET['allrows'] == 1) {",
          "161:                         echo '<input type=\"radio\" name=\"allrows\" value=\"0\" id=\"radio_allrows_0\" />';",
          "162:                     } else {",
          "163:                         echo '<input type=\"radio\" name=\"allrows\" value=\"0\" id=\"radio_allrows_0\" checked=\"checked\" />';",
          "164:                     }",
          "165:                     echo '<label for =\"radio_allrows_0\">' . __('Dump some row(s)') . '</label>'; ?>",
          "166:                 <ul>",
          "167:                     <li><label for=\"limit_to\"><?php echo __('Number of rows:') . '</label> <input type=\"text\" id=\"limit_to\" name=\"limit_to\" size=\"5\" value=\"'",
          "168:                 . ((isset($_GET['limit_to'])) ? htmlspecialchars($_GET['limit_to']) : ((isset($unlim_num_rows) ? $unlim_num_rows : PMA_Table::countRecords($db, $table))))",
          "169:                 . '\" onfocus=\"this.select()\" />' ?></li>",
          "170:                     <li><label for=\"limit_from\"><?php echo __('Row to begin at:') . '</label> <input type=\"text\" id=\"limit_from\" name=\"limit_from\" value=\"'",
          "171:                  . ((isset($_GET['limit_from'])) ? htmlspecialchars($_GET['limit_from']) : '0')",
          "172:                  . '\" size=\"5\" onfocus=\"this.select()\" />'; ?></li>",
          "173:                 </ul>",
          "174:             </li>",
          "175:             <li>",
          "176:                 <?php if (isset($_GET['allrows']) && $_GET['allrows'] == 0) {",
          "177:                     echo '<input type=\"radio\" name=\"allrows\" value=\"1\" id=\"radio_allrows_1\" />';",
          "178:                 } else {",
          "179:                     echo '<input type=\"radio\" name=\"allrows\" value=\"1\" id=\"radio_allrows_1\" checked=\"checked\" />';",
          "180:                 }",
          "181:                 echo ' <label for=\"radio_allrows_1\">' . __('Dump all rows') . '</label>';?>",
          "182:             </li>",
          "183:         </ul>",
          "184:      </div>",
          "185: <?php } ?>",
          "187: <?php if (isset($cfg['SaveDir']) && !empty($cfg['SaveDir'])) { ?>",
          "188:     <div class=\"exportoptions\" id=\"output_quick_export\">",
          "189:         <h3><?php echo __('Output:'); ?></h3>",
          "190:         <ul>",
          "191:             <li>",
          "192:                 <input type=\"checkbox\" name=\"quick_export_onserver\" value=\"saveit\"",
          "193:                     id=\"checkbox_quick_dump_onserver\"",
          "194:                     <?php PMA_exportCheckboxCheck('quick_export_onserver'); ?> />",
          "195:                 <label for=\"checkbox_quick_dump_onserver\">",
          "196:                     <?php echo sprintf(__('Save on server in the directory <b>%s</b>'), htmlspecialchars($common_functions->userDir($cfg['SaveDir']))); ?>",
          "197:                 </label>",
          "198:             </li>",
          "199:             <li>",
          "200:                 <input type=\"checkbox\" name=\"quick_export_onserverover\" value=\"saveitover\"",
          "201:                 id=\"checkbox_quick_dump_onserverover\"",
          "202:                 <?php PMA_exportCheckboxCheck('quick_export_onserver_overwrite'); ?> />",
          "203:                 <label for=\"checkbox_quick_dump_onserverover\"><?php echo __('Overwrite existing file(s)'); ?></label>",
          "204:             </li>",
          "205:         </ul>",
          "206:     </div>",
          "207: <?php } ?>",
          "",
          "[Added Lines]",
          "81: echo '<input type=\"hidden\" name=\"export_method\" value=\"'",
          "82:     . htmlspecialchars($cfg['Export']['method']) . '\" />';",
          "86:     echo '<input type=\"hidden\" name=\"sql_query\" value=\"'",
          "87:         . htmlspecialchars($_GET['sql_query']) . '\" />' . \"\\n\";",
          "89:     echo '<input type=\"hidden\" name=\"sql_query\" value=\"'",
          "90:         . htmlspecialchars($sql_query) . '\" />' . \"\\n\";",
          "93: echo '<div class=\"exportoptions\" id=\"header\">';",
          "94: echo '<h2>';",
          "95: echo $common_functions->getImage('b_export.png', __('Export'));",
          "96: if ($export_type == 'server') {",
          "97:     echo __('Exporting databases from the current server');",
          "98: } elseif ($export_type == 'database') {",
          "99:     printf(__('Exporting tables from \"%s\" database'), htmlspecialchars($db));",
          "100: } else {",
          "101:     printf(__('Exporting rows from \"%s\" table'), htmlspecialchars($table));",
          "102: }",
          "103: echo '</h2>';",
          "104: echo '</div>';",
          "106: if (isset($_GET['quick_or_custom'])) {",
          "107:     $export_method = $_GET['quick_or_custom'];",
          "108: } else {",
          "109:     $export_method = $cfg['Export']['method'];",
          "110: }",
          "112: echo '<div class=\"exportoptions\" id=\"quick_or_custom\">';",
          "113: echo '<h3>' . __('Export Method:') . '</h3>';",
          "114: echo '<ul>';",
          "115: echo '<li>';",
          "116: echo '<input type=\"radio\" name=\"quick_or_custom\" value=\"quick\" id=\"radio_quick_export\"';",
          "117: if ($export_method == 'quick' || $export_method == 'quick_no_form') {",
          "118:     echo ' checked=\"checked\"';",
          "119: }",
          "120: echo ' />';",
          "121: echo '<label for =\"radio_quick_export\">';",
          "122: echo __('Quick - display only the minimal options');",
          "123: echo '</label>';",
          "124: echo '</li>';",
          "126: echo '<li>';",
          "127: echo '<input type=\"radio\" name=\"quick_or_custom\" value=\"custom\" id=\"radio_custom_export\"';",
          "128: if ($export_method == 'custom' || $export_method == 'custom_no_form') {",
          "129:     echo ' checked=\"checked\"';",
          "130: }",
          "131: echo ' />';",
          "132: echo '<label for=\"radio_custom_export\">';",
          "133: echo __('Custom - display all possible options');",
          "134: echo '</label>';",
          "135: echo '</li>';",
          "137: echo '</ul>';",
          "138: echo '</div>';",
          "140: echo '<div class=\"exportoptions\" id=\"databases_and_tables\">';",
          "141: if ($export_type == 'server') {",
          "142:     echo '<h3>' . __('Database(s):') . '</h3>';",
          "143: } else if ($export_type == 'database') {",
          "144:     echo '<h3>' . __('Table(s):') . '</h3>';",
          "145: }",
          "146: if (! empty($multi_values)) {",
          "147:     echo $multi_values;",
          "148: }",
          "149: echo '</div>';",
          "151: if (strlen($table) && ! isset($num_tables) && ! PMA_Table::isMerge($db, $table)) {",
          "152:     echo '<div class=\"exportoptions\" id=\"rows\">';",
          "153:     echo '<h3>' . __('Rows:') . '</h3>';",
          "154:     echo '<ul>';",
          "155:     echo '<li>';",
          "156:     echo '<input type=\"radio\" name=\"allrows\" value=\"0\" id=\"radio_allrows_0\"';",
          "157:     if (isset($_GET['allrows']) && $_GET['allrows'] == 0) {",
          "158:         echo ' checked=\"checked\"';",
          "159:     }",
          "160:     echo '/>';",
          "161:     echo '<label for =\"radio_allrows_0\">' . __('Dump some row(s)') . '</label>';",
          "162:     echo '<ul>';",
          "163:     echo '<li>';",
          "164:     echo '<label for=\"limit_to\">' . __('Number of rows:') . '</label>';",
          "165:     echo '<input type=\"text\" id=\"limit_to\" name=\"limit_to\" size=\"5\" value=\"';",
          "166:     if (isset($_GET['limit_to'])) {",
          "167:         echo htmlspecialchars($_GET['limit_to']);",
          "168:     } elseif (isset($unlim_num_rows)) {",
          "169:         echo $unlim_num_rows;",
          "170:     } else {",
          "171:         echo PMA_Table::countRecords($db, $table);",
          "172:     }",
          "173:     echo '\" onfocus=\"this.select()\" />';",
          "174:     echo '</li>';",
          "175:     echo '<li>';",
          "176:     echo '<label for=\"limit_from\">' . __('Row to begin at:') . '</label>';",
          "177:     echo '<input type=\"text\" id=\"limit_from\" name=\"limit_from\" value=\"';",
          "178:     if (isset($_GET['limit_from'])) {",
          "179:         echo htmlspecialchars($_GET['limit_from']);",
          "180:     } else {",
          "181:         echo '0';",
          "182:     }",
          "183:     echo '\" size=\"5\" onfocus=\"this.select()\" />';",
          "184:     echo '</li>';",
          "185:     echo '</ul>';",
          "186:     echo '</li>';",
          "187:     echo '<li>';",
          "188:     echo '<input type=\"radio\" name=\"allrows\" value=\"1\" id=\"radio_allrows_1\"';",
          "189:     if (isset($_GET['allrows']) && $_GET['allrows'] == 1) {",
          "190:         echo ' checked=\"checked\"';",
          "191:     }",
          "192:     echo '/>';",
          "193:     echo ' <label for=\"radio_allrows_1\">' . __('Dump all rows') . '</label>';",
          "194:     echo '</li>';",
          "195:     echo '</ul>';",
          "196:     echo '</div>';",
          "197: }",
          "199: if (isset($cfg['SaveDir']) && !empty($cfg['SaveDir'])) {",
          "200:     echo '<div class=\"exportoptions\" id=\"output_quick_export\">';",
          "201:     echo '<h3>' . __('Output:') . '</h3>';",
          "202:     echo '<ul>';",
          "203:     echo '<li>';",
          "204:     echo '<input type=\"checkbox\" name=\"quick_export_onserver\" value=\"saveit\" ';",
          "205:     echo 'id=\"checkbox_quick_dump_onserver\" ';",
          "206:     PMA_exportCheckboxCheck('quick_export_onserver');",
          "207:     echo '/>';",
          "208:     echo '<label for=\"checkbox_quick_dump_onserver\">';",
          "209:     printf(",
          "210:         __('Save on server in the directory <b>%s</b>'),",
          "211:         htmlspecialchars($common_functions->userDir($cfg['SaveDir']))",
          "212:     );",
          "213:     echo '</label>';",
          "214:     echo '</li>';",
          "215:     echo '<li>';",
          "216:     echo '<input type=\"checkbox\" name=\"quick_export_onserverover\" ';",
          "217:     echo 'value=\"saveitover\" id=\"checkbox_quick_dump_onserverover\" ';",
          "218:     PMA_exportCheckboxCheck('quick_export_onserver_overwrite');",
          "219:     echo '<label for=\"checkbox_quick_dump_onserverover\">';",
          "220:     echo __('Overwrite existing file(s)');",
          "221:     echo '</label>';",
          "222:     echo '</li>';",
          "223:     echo '</ul>';",
          "224:     echo '</div>';",
          "225: } ?>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "015fce08ee014d42c4ed4042901e412548671831",
      "candidate_info": {
        "commit_hash": "015fce08ee014d42c4ed4042901e412548671831",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/015fce08ee014d42c4ed4042901e412548671831",
        "files": [
          "libraries/display_export.lib.php"
        ],
        "message": "Fixed bad variable name",
        "before_after_code_files": [
          "libraries/display_export.lib.php||libraries/display_export.lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ],
          "candidate": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/display_export.lib.php||libraries/display_export.lib.php": [
          "File: libraries/display_export.lib.php -> libraries/display_export.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:                         }",
          "233:                     }",
          "237:                         '<a href=\"' . PMA_linkURL(PMA_getPHPDocLink('function.strftime.php'))",
          "238:                         . '\" target=\"documentation\" title=\"' . __('Documentation') . '\">',",
          "239:                         false",
          "240:                     );",
          "247:                     ?>",
          "248:                     </label>",
          "249:                     <input type=\"text\" name=\"filename_template\" id=\"filename_template\"",
          "",
          "[Removed Lines]",
          "235:                     $message = new PMA_Message(__('This value is interpreted using %1$sstrftime%2$s, so you can use time formatting strings. Additionally the following transformations will happen: %3$s. Other text will be kept as is. See the %4$sFAQ%5$s for details.'));",
          "236:                     $message->addParam(",
          "241:                     $message->addParam('</a>', false);",
          "242:                     $message->addParam($trans);",
          "243:                     $message->addParam('<a href=\"Documentation.html#faq6_27\" target=\"documentation\">', false);",
          "244:                     $message->addParam('</a>', false);",
          "246:                     echo PMA_showHint($message);",
          "",
          "[Added Lines]",
          "235:                     $msg = new PMA_Message(__('This value is interpreted using %1$sstrftime%2$s, so you can use time formatting strings. Additionally the following transformations will happen: %3$s. Other text will be kept as is. See the %4$sFAQ%5$s for details.'));",
          "236:                     $msg->addParam(",
          "241:                     $msg->addParam('</a>', false);",
          "242:                     $msg->addParam($trans);",
          "243:                     $msg->addParam('<a href=\"Documentation.html#faq6_27\" target=\"documentation\">', false);",
          "244:                     $msg->addParam('</a>', false);",
          "246:                     echo PMA_showHint($msg);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1a90f78b16a71c1026dacb18d57587b9dc5d41c",
      "candidate_info": {
        "commit_hash": "f1a90f78b16a71c1026dacb18d57587b9dc5d41c",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/f1a90f78b16a71c1026dacb18d57587b9dc5d41c",
        "files": [
          "libraries/database_interface.lib.php",
          "libraries/display_export.lib.php",
          "libraries/display_import.lib.php",
          "libraries/insert_edit.lib.php",
          "libraries/sql_query_form.lib.php",
          "libraries/tbl_properties.inc.php",
          "tbl_alter.php",
          "tbl_change.php",
          "tbl_indexes.php",
          "tbl_printview.php"
        ],
        "message": "coding style : fix indenting",
        "before_after_code_files": [
          "libraries/database_interface.lib.php||libraries/database_interface.lib.php",
          "libraries/display_export.lib.php||libraries/display_export.lib.php",
          "libraries/display_import.lib.php||libraries/display_import.lib.php",
          "libraries/insert_edit.lib.php||libraries/insert_edit.lib.php",
          "libraries/sql_query_form.lib.php||libraries/sql_query_form.lib.php",
          "libraries/tbl_properties.inc.php||libraries/tbl_properties.inc.php",
          "tbl_alter.php||tbl_alter.php",
          "tbl_change.php||tbl_change.php",
          "tbl_indexes.php||tbl_indexes.php",
          "tbl_printview.php||tbl_printview.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ],
          "candidate": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/database_interface.lib.php||libraries/database_interface.lib.php": [
          "File: libraries/database_interface.lib.php -> libraries/database_interface.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "930:                 $databases[$database_name]['SCHEMA_LENGTH']          = 0;",
          "931:                 $databases[$database_name]['SCHEMA_DATA_FREE']       = 0;",
          "934:                     . $common_functions->backquote($database_name) . ';'",
          "935:                 );",
          "",
          "[Removed Lines]",
          "933:                 $res = PMA_DBI_query('SHOW TABLE STATUS FROM '",
          "",
          "[Added Lines]",
          "933:                 $res = PMA_DBI_query(",
          "934:                     'SHOW TABLE STATUS FROM '",
          "",
          "---------------"
        ],
        "libraries/display_export.lib.php||libraries/display_export.lib.php": [
          "File: libraries/display_export.lib.php -> libraries/display_export.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "370: <?php } ?>",
          "372: <div class=\"exportoptions\" id=\"submit\">",
          "376: ?>",
          "377:     <input type=\"submit\" value=\"<?php echo __('Go'); ?>\" id=\"buttonGo\" />",
          "378: </div>",
          "",
          "[Removed Lines]",
          "373: <?php echo $common_functions->getExternalBug(",
          "374:         __('SQL compatibility mode'), 'mysql', '50027', '14515'",
          "375:     );",
          "",
          "[Added Lines]",
          "373: <?php",
          "374: echo $common_functions->getExternalBug(",
          "375:     __('SQL compatibility mode'), 'mysql', '50027', '14515'",
          "376: );",
          "",
          "---------------"
        ],
        "libraries/display_import.lib.php||libraries/display_import.lib.php": [
          "File: libraries/display_import.lib.php -> libraries/display_import.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: if (empty($import_list)) {",
          "31:     exit;",
          "32: }",
          "33: ?>",
          "",
          "[Removed Lines]",
          "28:     PMA_Message::error(__(",
          "29:         'Could not load import plugins, please check your installation!'",
          "30:     ))->display();",
          "",
          "[Added Lines]",
          "28:     PMA_Message::error(",
          "29:         __(",
          "30:             'Could not load import plugins, please check your installation!'",
          "31:         )",
          "32:     )->display();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "223:             <ul>",
          "224:             <li>",
          "225:                 <input type=\"radio\" name=\"file_location\" id=\"radio_import_file\" />",
          "229:                 ?>",
          "230:             </li>",
          "231:             <li>",
          "232:                 <input type=\"radio\" name=\"file_location\" id=\"radio_local_import_file\" />",
          "236:                 ?>",
          "237:             </li>",
          "238:             </ul>",
          "",
          "[Removed Lines]",
          "226:                 <?php echo $common_functions->getBrowseUploadFileBlock(",
          "227:                         $max_upload_size",
          "228:                     );",
          "233:                 <?php echo $common_functions->getSelectUploadFileBlock(",
          "234:                         $import_list, $cfg['UploadDir']",
          "235:                     );",
          "",
          "[Added Lines]",
          "228:                 <?php",
          "229: echo $common_functions->getBrowseUploadFileBlock($max_upload_size);",
          "234:                 <?php",
          "235: echo $common_functions->getSelectUploadFileBlock($import_list, $cfg['UploadDir']);",
          "",
          "---------------"
        ],
        "libraries/insert_edit.lib.php||libraries/insert_edit.lib.php": [
          "File: libraries/insert_edit.lib.php -> libraries/insert_edit.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:     if (! $rows[$key_id]) {",
          "146:         unset($rows[$key_id], $where_clause_array[$key_id]);",
          "",
          "[Removed Lines]",
          "147:         PMA_Response::getInstance()->addHtml(PMA_CommonFunctions::getInstance()->getMessage(",
          "148:             __('MySQL returned an empty result set (i.e. zero rows).'),",
          "149:             $local_query",
          "150:         ));",
          "",
          "[Added Lines]",
          "147:         PMA_Response::getInstance()->addHtml(",
          "148:             PMA_CommonFunctions::getInstance()->getMessage(",
          "149:                 __('MySQL returned an empty result set (i.e. zero rows).'),",
          "150:                 $local_query",
          "151:             )",
          "152:         );",
          "",
          "---------------"
        ],
        "libraries/sql_query_form.lib.php||libraries/sql_query_form.lib.php": [
          "File: libraries/sql_query_form.lib.php -> libraries/sql_query_form.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "460:         $files = PMA_getFileSelectOptions(",
          "461:             $common_functions->userDir($GLOBALS['cfg']['UploadDir']), $matcher,",
          "462:             (isset($timeout_passed) && $timeout_passed && isset($local_import_file))",
          "465:         );",
          "466:     } else {",
          "467:         $files = '';",
          "",
          "[Removed Lines]",
          "463:                 ? $local_import_file",
          "464:                 : ''",
          "",
          "[Added Lines]",
          "463:             ? $local_import_file",
          "464:             : ''",
          "",
          "---------------"
        ],
        "libraries/tbl_properties.inc.php||libraries/tbl_properties.inc.php": [
          "File: libraries/tbl_properties.inc.php -> libraries/tbl_properties.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:     $mime_map = PMA_getMIME($db, $table);",
          "128:     $available_mime = PMA_getAvailableMIMEtypes();",
          "133:                 . ' type transformations, click on %stransformation descriptions%s'",
          "134:             ),",
          "135:             '<a href=\"transformation_overview.php?'",
          "138:             '</a>'",
          "139:         );",
          "",
          "[Removed Lines]",
          "130:     $hint = '<br />' .",
          "131:         sprintf(",
          "132:             __('For a list of available transformation options and their MIME'",
          "136:                 . PMA_generate_common_url($db, $table)",
          "137:                 . '\" target=\"_blank\">',",
          "",
          "[Added Lines]",
          "130:     $hint = '<br />'",
          "131:         . sprintf(",
          "132:             __(",
          "133:                 'For a list of available transformation options and their MIME'",
          "137:             . PMA_generate_common_url($db, $table)",
          "138:             . '\" target=\"_blank\">',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:     $header_cells[] = __('Browser transformation');",
          "144:     $header_cells[] = __('Transformation options')",
          "145:         . $common_functions->showHint(",
          "147:                 . ' format: \\'a\\', 100, b,\\'c\\'...<br />If you ever need to put'",
          "148:                 . ' a backslash (\"\\\") or a single quote (\"\\'\") amongst those'",
          "149:                 . ' values, precede it with a backslash (for example \\'\\\\\\\\xyz\\''",
          "150:                 . ' or \\'a\\\\\\'b\\').'",
          "152: }",
          "",
          "[Removed Lines]",
          "146:             __('Please enter the values for transformation options using this'",
          "151:             ) . $hint);",
          "",
          "[Added Lines]",
          "147:             __(",
          "148:                 'Please enter the values for transformation options using this'",
          "153:             )",
          "154:             . $hint",
          "155:         );",
          "",
          "---------------"
        ],
        "tbl_alter.php||tbl_alter.php": [
          "File: tbl_alter.php -> tbl_alter.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:             strtoupper($extracted_columnspec['type']),",
          "86:             $extracted_columnspec['spec_in_brackets'],",
          "87:             $extracted_columnspec['attribute'],",
          "94:             $default_type,",
          "101:             isset($data['Comments']) && $data['Comments'] !== ''",
          "104:             $we_dont_change_keys,",
          "105:             $i,",
          "111:         for ($j = 0, $ll = count($column_names); $j < $ll; $j++) {",
          "112:             if ($column_names[$j] == $column) {",
          "",
          "[Removed Lines]",
          "88:             isset($data['Collation'])",
          "89:                 ? $data['Collation']",
          "90:                 : '',",
          "91:             $data['Null'] === 'YES'",
          "92:                 ? 'NULL'",
          "93:                 : 'NOT NULL',",
          "95:             $current_timestamp",
          "96:                 ? ''",
          "97:                 : $data['Default'],",
          "98:             isset($data['Extra']) && $data['Extra'] !== ''",
          "99:                 ? $data['Extra']",
          "100:                 : false,",
          "102:                 ? $data['Comments']",
          "103:                 : false,",
          "106:             $i === 0",
          "107:                 ? '-first'",
          "108:                 : $column_names[$i - 1]",
          "109:                 );",
          "",
          "[Added Lines]",
          "88:             isset($data['Collation']) ? $data['Collation'] : '',",
          "89:             $data['Null'] === 'YES' ? 'NULL' : 'NOT NULL',",
          "91:             $current_timestamp ? '' : $data['Default'],",
          "92:             isset($data['Extra']) && $data['Extra'] !== '' ? $data['Extra'] : false,",
          "94:             ? $data['Comments'] : false,",
          "97:             $i === 0 ? '-first' : $column_names[$i - 1]",
          "98:         );",
          "",
          "---------------"
        ],
        "tbl_change.php||tbl_change.php": [
          "File: tbl_change.php -> tbl_change.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "169: $_form_params = PMA_getFormParametersForInsertForm(",
          "178:      ? 'onpropertychange'",
          "179:      : 'onchange';",
          "",
          "[Removed Lines]",
          "170:     $db, $table, $where_clauses, $where_clause_array, $err_url);",
          "177: $chg_evt_handler = (PMA_USR_BROWSER_AGENT == 'IE' && PMA_USR_BROWSER_VER >= 5 && PMA_USR_BROWSER_VER < 7)",
          "",
          "[Added Lines]",
          "170:     $db, $table, $where_clauses, $where_clause_array, $err_url",
          "171: );",
          "178: $chg_evt_handler = (PMA_USR_BROWSER_AGENT == 'IE'",
          "179:     && PMA_USR_BROWSER_VER >= 5",
          "180:     && PMA_USR_BROWSER_VER < 7",
          "181: )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "306:         $special_chars_encoded = '';",
          "307:         if (isset($current_row)) {",
          "312:         } else {",
          "",
          "[Removed Lines]",
          "309:            list($real_null_value, $special_chars_encoded, $special_chars, $data, $backup_field)",
          "310:                = PMA_getSpecialCharsAndBackupFieldForExistingRow($current_row, $column, $extracted_columnspec,",
          "311:                     $real_null_value, $gis_data_types, $column_name_appendix);",
          "",
          "[Added Lines]",
          "313:             list(",
          "314:                 $real_null_value, $special_chars_encoded, $special_chars,",
          "315:                 $data, $backup_field",
          "316:             )",
          "317:                 = PMA_getSpecialCharsAndBackupFieldForExistingRow(",
          "318:                     $current_row, $column, $extracted_columnspec,",
          "319:                     $real_null_value, $gis_data_types, $column_name_appendix",
          "320:                 );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "327:         if ($cfg['ShowFunctionFields']) {",
          "329:                 $unnullify_trigger, $no_support_types, $tabindex_for_function,",
          "331:         }",
          "",
          "[Removed Lines]",
          "328:             $html_output .= PMA_getFunctionColumn($column, $is_upload, $column_name_appendix,",
          "330:                 $tabindex, $idindex, $insert_mode);",
          "335:         $foreignData = PMA_getForeignData($foreigners, $column['Field'], false, '', '');",
          "336:         $html_output .= PMA_getNullColumn($column, $column_name_appendix, $real_null_value,",
          "337:             $tabindex, $tabindex_for_null, $idindex, $vkey, $foreigners, $foreignData);",
          "",
          "[Added Lines]",
          "337:             $html_output .= PMA_getFunctionColumn(",
          "338:                 $column, $is_upload, $column_name_appendix,",
          "340:                 $tabindex, $idindex, $insert_mode",
          "341:             );",
          "346:         $foreignData = PMA_getForeignData(",
          "347:             $foreigners, $column['Field'], false, '', ''",
          "348:         );",
          "349:         $html_output .= PMA_getNullColumn(",
          "350:             $column, $column_name_appendix, $real_null_value,",
          "351:             $tabindex, $tabindex_for_null, $idindex, $vkey, $foreigners,",
          "352:             $foreignData",
          "353:         );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "355:             $no_support_types, $gis_data_types, $extracted_columnspec",
          "356:         );",
          "359:         . '</tr>';",
          "361:         $odd_row = !$odd_row;",
          "",
          "[Removed Lines]",
          "358:        $html_output .= '</td>'",
          "",
          "[Added Lines]",
          "374:         $html_output .= '</td>'",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "374: }",
          "380: if ($biggest_max_file_size > 0) {",
          "381:     $html_output .= '        '",
          "",
          "[Removed Lines]",
          "377: $html_output .= PMA_getActionsPanel($where_clause, $after_insert, $tabindex,",
          "378:     $tabindex_for_value, $found_unique_key);",
          "",
          "[Added Lines]",
          "393: $html_output .= PMA_getActionsPanel(",
          "394:     $where_clause, $after_insert, $tabindex,",
          "395:     $tabindex_for_value, $found_unique_key",
          "396: );",
          "",
          "---------------"
        ],
        "tbl_indexes.php||tbl_indexes.php": [
          "File: tbl_indexes.php -> tbl_indexes.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:             <strong>",
          "208:                 <label for=\"input_index_name\">",
          "209:                     <?php echo __('Index name:'); ?>",
          "212:                 </label>",
          "213:             </strong>",
          "214:         </div>",
          "",
          "[Removed Lines]",
          "210:                     <?php echo PMA_CommonFunctions::getInstance()->showHint(PMA_Message::notice(__(",
          "211:                     '(\"PRIMARY\" <b>must</b> be the name of and <b>only of</b> a primary key!)'))); ?>",
          "",
          "[Added Lines]",
          "210:                     <?php",
          "211: echo PMA_CommonFunctions::getInstance()->showHint(",
          "212:     PMA_Message::notice(",
          "213:         __(",
          "214:             '(\"PRIMARY\" <b>must</b> be the name of'",
          "215:             . ' and <b>only of</b> a primary key!)'",
          "216:         )",
          "217:     )",
          "218: );",
          "219:                     ?>",
          "",
          "---------------"
        ],
        "tbl_printview.php||tbl_printview.php": [
          "File: tbl_printview.php -> tbl_printview.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "201:         if ($have_rel) {",
          "202:             echo '    <td>';",
          "203:             if (isset($res_rel[$field_name])) {",
          "206:             }",
          "207:             echo '&nbsp;</td>' . \"\\n\";",
          "208:         }",
          "",
          "[Removed Lines]",
          "204:                 echo htmlspecialchars($res_rel[$field_name]['foreign_table']",
          "205:                     . ' -> ' . $res_rel[$field_name]['foreign_field']);",
          "",
          "[Added Lines]",
          "204:                 echo htmlspecialchars(",
          "205:                     $res_rel[$field_name]['foreign_table']",
          "206:                     . ' -> ' . $res_rel[$field_name]['foreign_field']",
          "207:                 );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:             echo '    <td>';",
          "219:             if (isset($mime_map[$field_name])) {",
          "222:             }",
          "223:             echo '&nbsp;</td>' . \"\\n\";",
          "224:         }",
          "",
          "[Removed Lines]",
          "220:                 echo htmlspecialchars(str_replace('_', '/',",
          "221:                     $mime_map[$field_name]['mimetype']));",
          "",
          "[Added Lines]",
          "222:                 echo htmlspecialchars(",
          "223:                     str_replace('_', '/', $mime_map[$field_name]['mimetype'])",
          "224:                 );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61a601fc735c0596aefb1544f1f3a704a19c61d5",
      "candidate_info": {
        "commit_hash": "61a601fc735c0596aefb1544f1f3a704a19c61d5",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/61a601fc735c0596aefb1544f1f3a704a19c61d5",
        "files": [
          "import.php",
          "index.php",
          "libraries/RecentTable.class.php",
          "libraries/Table.class.php",
          "libraries/Util.class.php",
          "libraries/config.default.php",
          "libraries/config/FormDisplay.class.php",
          "libraries/database_interface.lib.php",
          "libraries/display_export.lib.php",
          "libraries/display_import.lib.php",
          "libraries/display_select_lang.lib.php",
          "libraries/navigation/NavigationHeader.class.php",
          "libraries/plugin_interface.lib.php",
          "libraries/plugins/auth/AuthenticationCookie.class.php",
          "libraries/plugins/export/ExportLatex.class.php",
          "libraries/plugins/transformations/README",
          "libraries/plugins/transformations/TEMPLATE",
          "libraries/plugins/transformations/TEMPLATE_ABSTRACT",
          "libraries/relation.lib.php",
          "libraries/sql_query_form.lib.php",
          "libraries/sqlvalidator.lib.php",
          "pmd_general.php",
          "prefs_manage.php",
          "schema_edit.php",
          "sql.php",
          "test/libraries/common/PMA_showDocu_test.php"
        ],
        "message": "Implement linking to new documentation",
        "before_after_code_files": [
          "import.php||import.php",
          "index.php||index.php",
          "libraries/RecentTable.class.php||libraries/RecentTable.class.php",
          "libraries/Table.class.php||libraries/Table.class.php",
          "libraries/Util.class.php||libraries/Util.class.php",
          "libraries/config.default.php||libraries/config.default.php",
          "libraries/config/FormDisplay.class.php||libraries/config/FormDisplay.class.php",
          "libraries/database_interface.lib.php||libraries/database_interface.lib.php",
          "libraries/display_export.lib.php||libraries/display_export.lib.php",
          "libraries/display_import.lib.php||libraries/display_import.lib.php",
          "libraries/display_select_lang.lib.php||libraries/display_select_lang.lib.php",
          "libraries/navigation/NavigationHeader.class.php||libraries/navigation/NavigationHeader.class.php",
          "libraries/plugin_interface.lib.php||libraries/plugin_interface.lib.php",
          "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php",
          "libraries/plugins/export/ExportLatex.class.php||libraries/plugins/export/ExportLatex.class.php",
          "libraries/relation.lib.php||libraries/relation.lib.php",
          "libraries/sql_query_form.lib.php||libraries/sql_query_form.lib.php",
          "libraries/sqlvalidator.lib.php||libraries/sqlvalidator.lib.php",
          "pmd_general.php||pmd_general.php",
          "prefs_manage.php||prefs_manage.php",
          "schema_edit.php||schema_edit.php",
          "sql.php||sql.php",
          "test/libraries/common/PMA_showDocu_test.php||test/libraries/common/PMA_showDocu_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ],
          "candidate": [
            "libraries/display_export.lib.php||libraries/display_export.lib.php"
          ]
        }
      },
      "candidate_diff": {
        "import.php||import.php": [
          "File: import.php -> import.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:     $message = PMA_Message::error(",
          "93:         __('You probably tried to upload a file that is too large. Please refer to %sdocumentation%s for a workaround for this limit.')",
          "94:     );",
          "96:     $message->addParam('[/doc]');",
          "",
          "[Removed Lines]",
          "95:     $message->addParam('[doc@faq1_16]');",
          "",
          "[Added Lines]",
          "95:     $message->addParam('[doc@faq1-16]');",
          "",
          "---------------"
        ],
        "index.php||index.php": [
          "File: index.php -> index.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "329: PMA_printListItem(",
          "330:     __('Documentation'),",
          "331:     'li_pma_docs',",
          "333:     null,",
          "334:     '_blank'",
          "335: );",
          "",
          "[Removed Lines]",
          "332:     'Documentation.html',",
          "",
          "[Added Lines]",
          "332:     PMA_Util::getDocuLink('index'),",
          "",
          "---------------"
        ],
        "libraries/RecentTable.class.php||libraries/RecentTable.class.php": [
          "File: libraries/RecentTable.class.php -> libraries/RecentTable.class.php"
        ],
        "libraries/Table.class.php||libraries/Table.class.php": [
          "File: libraries/Table.class.php -> libraries/Table.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1393:                 $message = PMA_Message::error(",
          "1394:                     sprintf(",
          "1395:                         __('Failed to cleanup table UI preferences (see $cfg[\\'Servers\\'][$i][\\'MaxTableUiprefs\\'] %s)'),",
          "1397:                     )",
          "1398:                 );",
          "1399:                 $message->addMessage('<br /><br />');",
          "",
          "[Removed Lines]",
          "1396:                         PMA_Util::showDocu('cfg_Servers_MaxTableUiprefs')",
          "",
          "[Added Lines]",
          "1396:                         PMA_Util::showDocu('config', 'cfg_Servers_MaxTableUiprefs')",
          "",
          "---------------"
        ],
        "libraries/Util.class.php||libraries/Util.class.php": [
          "File: libraries/Util.class.php -> libraries/Util.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "519:         }",
          "520:     } // end of the 'showMySQLDocu()' function",
          "532:     {",
          "534:     } // end of the 'showDocu()' function",
          "",
          "[Removed Lines]",
          "531:     public static function showDocu($anchor)",
          "533:         return self::showDocLink('Documentation.html#' . $anchor);",
          "",
          "[Added Lines]",
          "530:     public static function getDocuLink($page, $anchor = '')",
          "531:     {",
          "533:         $url =  $page . '.html';",
          "534:         if (!empty($anchor)) {",
          "535:             $url .= '#' . $anchor;",
          "536:         }",
          "539:         if (file_exists('doc/html/index.html')) {",
          "540:             return './doc/html/' . $url;",
          "541:         } else {",
          "543:             return PMA_linkURL('https://phpmyadmin.readthedocs.org/en/latest/' . $url);",
          "544:         }",
          "545:     }",
          "557:     public static function showDocu($page, $anchor = '')",
          "559:         return self::showDocLink(self::getDocuLink($page, $anchor));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2099:                 $error_message .= $reported_script_name",
          "2100:                     . ': ' . __('Missing parameter:') . ' '",
          "2101:                     . $param",
          "2103:                     . '<br />';",
          "2104:                 $found_error = true;",
          "2105:             }",
          "",
          "[Removed Lines]",
          "2102:                     . self::showDocu('faqmissingparameters')",
          "",
          "[Added Lines]",
          "2128:                     . self::showDocu('faq', 'faqmissingparameters')",
          "",
          "---------------"
        ],
        "libraries/config.default.php||libraries/config.default.php": [
          "File: libraries/config.default.php -> libraries/config.default.php"
        ],
        "libraries/config/FormDisplay.class.php||libraries/config/FormDisplay.class.php": [
          "File: libraries/config/FormDisplay.class.php -> libraries/config/FormDisplay.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "684:         if ($test == 'Import' || $test == 'Export') {",
          "685:             return '';",
          "686:         }",
          "688:     }",
          "",
          "[Removed Lines]",
          "687:         return 'Documentation.html#cfg_' . $this->_getOptName($path);",
          "",
          "[Added Lines]",
          "687:         return PMA_Util::getDocuLink(",
          "688:             'config',",
          "689:             'cfg_' .  $this->_getOptName($path)",
          "690:         );",
          "",
          "---------------"
        ],
        "libraries/database_interface.lib.php||libraries/database_interface.lib.php": [
          "File: libraries/database_interface.lib.php -> libraries/database_interface.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:         PMA_warnMissingExtension(",
          "67:             $GLOBALS['cfg']['Server']['extension'],",
          "68:             false,",
          "70:         );",
          "72:         if ($GLOBALS['cfg']['Server']['extension'] === 'mysql') {",
          "",
          "[Removed Lines]",
          "69:             PMA_Util::showDocu('faqmysql')",
          "",
          "[Added Lines]",
          "69:             PMA_Util::showDocu('faq', 'faqmysql')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:             PMA_warnMissingExtension(",
          "81:                 $GLOBALS['cfg']['Server']['extension'],",
          "82:                 true,",
          "84:             );",
          "85:         }",
          "",
          "[Removed Lines]",
          "83:                 PMA_Util::showDocu('faqmysql')",
          "",
          "[Added Lines]",
          "83:                 PMA_Util::showDocu('faq', 'faqmysql')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "143:     $trace = array();",
          "144:     foreach (debug_backtrace() as $trace_step) {",
          "146:             (isset($trace_step['file'])",
          "147:                 ? PMA_Error::relPath($trace_step['file'])",
          "148:                 : '')",
          "150:                 ?  '#' . $trace_step['line'] . ': '",
          "151:                 : '')",
          "152:             . (isset($trace_step['class']) ? $trace_step['class'] : '')",
          "",
          "[Removed Lines]",
          "145:         $trace[] =",
          "149:             . (isset($trace_step['line'])",
          "",
          "[Added Lines]",
          "145:         $trace[] =",
          "149:             . (isset($trace_step['line'])",
          "",
          "---------------"
        ],
        "libraries/display_export.lib.php||libraries/display_export.lib.php": [
          "File: libraries/display_export.lib.php -> libraries/display_export.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "282: );",
          "283: $msg->addParam('</a>', false);",
          "284: $msg->addParam($trans);",
          "285: $msg->addParam(",
          "287:     false",
          "288: );",
          "289: $msg->addParam('</a>', false);",
          "",
          "[Removed Lines]",
          "286:     '<a href=\"Documentation.html#faq6_27\" target=\"documentation\">',",
          "",
          "[Added Lines]",
          "285: $doc_url = PMA_Util::getDocuLink('faq', 'faq6-27');",
          "287:     '<a href=\"'. $doc_url . '\" target=\"documentation\">',",
          "",
          "---------------"
        ],
        "libraries/display_import.lib.php||libraries/display_import.lib.php": [
          "File: libraries/display_import.lib.php -> libraries/display_import.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:     <?php",
          "152: } else { // no plugin available",
          "153:     ?>",
          "155:                         $('#upload_form_status').css(\"display\", \"none\");",
          "156:     <?php",
          "157: } // else",
          "",
          "[Removed Lines]",
          "154:                 $('#upload_form_status_info').html('<img src=\"<?php echo $GLOBALS['pmaThemeImage'];?>ajax_clock_small.gif\" width=\"16\" height=\"16\" alt=\"ajax clock\" /> <?php echo PMA_jsFormat(__('Please be patient, the file is being uploaded. Details about the upload are not available.'), false) . PMA_Util::showDocu('faq2_9'); ?>');",
          "",
          "[Added Lines]",
          "154:                 $('#upload_form_status_info').html('<img src=\"<?php echo $GLOBALS['pmaThemeImage'];?>ajax_clock_small.gif\" width=\"16\" height=\"16\" alt=\"ajax clock\" /> <?php echo PMA_jsFormat(__('Please be patient, the file is being uploaded. Details about the upload are not available.'), false) . PMA_Util::showDocu('faq', 'faq2_9'); ?>');",
          "",
          "---------------"
        ],
        "libraries/display_select_lang.lib.php||libraries/display_select_lang.lib.php": [
          "File: libraries/display_select_lang.lib.php -> libraries/display_select_lang.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:         $language_title = __('Language')",
          "57:             . (__('Language') != 'Language' ? ' - <em>Language</em>' : '');",
          "58:         if ($show_doc) {",
          "60:         }",
          "61:         if ($use_fieldset) {",
          "62:             $retval .= '<fieldset><legend lang=\"en\" dir=\"ltr\">'",
          "",
          "[Removed Lines]",
          "59:             $language_title .= PMA_Util::showDocu('faq7_2');",
          "",
          "[Added Lines]",
          "59:             $language_title .= PMA_Util::showDocu('faq', 'faq7-2');",
          "",
          "---------------"
        ],
        "libraries/navigation/NavigationHeader.class.php||libraries/navigation/NavigationHeader.class.php": [
          "File: libraries/navigation/NavigationHeader.class.php -> libraries/navigation/NavigationHeader.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:             );",
          "214:         }",
          "215:         $retval .= $this->_getLink(",
          "217:             $showText,",
          "218:             __('phpMyAdmin documentation'),",
          "219:             $showIcon,",
          "",
          "[Removed Lines]",
          "216:             'Documentation.html',",
          "",
          "[Added Lines]",
          "216:             PMA_Util::getDocuLink('index'),",
          "",
          "---------------"
        ],
        "libraries/plugin_interface.lib.php||libraries/plugin_interface.lib.php": [
          "File: libraries/plugin_interface.lib.php -> libraries/plugin_interface.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "428:                     $doc[2]",
          "429:                 );",
          "430:             } elseif (count($doc) == 1) {",
          "432:             } else {",
          "433:                 $ret .= PMA_Util::showMySQLDocu(",
          "434:                     $doc[0],",
          "",
          "[Removed Lines]",
          "431:                 $ret .= PMA_Util::showDocu($doc[0]);",
          "",
          "[Added Lines]",
          "431:                 $ret .= PMA_Util::showDocu('faq', $doc[0]);",
          "",
          "---------------"
        ],
        "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php": [
          "File: libraries/plugins/auth/AuthenticationCookie.class.php -> libraries/plugins/auth/AuthenticationCookie.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:         <fieldset>",
          "180:         <legend>';",
          "181:         echo __('Log in');",
          "183:         echo '</legend>';",
          "184:         if ($GLOBALS['cfg']['AllowArbitraryServer']) {",
          "185:             echo '",
          "",
          "[Removed Lines]",
          "182:         echo PMA_Util::showDocu('');",
          "",
          "[Added Lines]",
          "182:         echo PMA_Util::showDocu('index');",
          "",
          "---------------"
        ],
        "libraries/plugins/export/ExportLatex.class.php||libraries/plugins/export/ExportLatex.class.php": [
          "File: libraries/plugins/export/ExportLatex.class.php -> libraries/plugins/export/ExportLatex.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:             $leaf = new TextPropertyItem();",
          "120:             $leaf->setName(\"structure_caption\");",
          "121:             $leaf->setText(__('Table caption'));",
          "123:             $structureOptions->addProperty($leaf);",
          "124:             $leaf = new TextPropertyItem();",
          "125:             $leaf->setName(\"structure_continued_caption\");",
          "126:             $leaf->setText(__('Table caption (continued)'));",
          "128:             $structureOptions->addProperty($leaf);",
          "129:             $leaf = new TextPropertyItem();",
          "130:             $leaf->setName(\"structure_label\");",
          "131:             $leaf->setText(__('Label key'));",
          "133:             $structureOptions->addProperty($leaf);",
          "134:             if (! empty($GLOBALS['cfgRelation']['relation'])) {",
          "135:                 $leaf = new BoolPropertyItem();",
          "",
          "[Removed Lines]",
          "122:             $leaf->setDoc('faq6_27');",
          "127:             $leaf->setDoc('faq6_27');",
          "132:             $leaf->setDoc('faq6_27');",
          "",
          "[Added Lines]",
          "122:             $leaf->setDoc('faq6-27');",
          "127:             $leaf->setDoc('faq6-27');",
          "132:             $leaf->setDoc('faq6-27');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:         $leaf = new TextPropertyItem();",
          "165:         $leaf->setName(\"data_caption\");",
          "166:         $leaf->setText(__('Table caption'));",
          "168:         $dataOptions->addProperty($leaf);",
          "169:         $leaf = new TextPropertyItem();",
          "170:         $leaf->setName(\"data_continued_caption\");",
          "171:         $leaf->setText(__('Table caption (continued)'));",
          "173:         $dataOptions->addProperty($leaf);",
          "174:         $leaf = new TextPropertyItem();",
          "175:         $leaf->setName(\"data_label\");",
          "176:         $leaf->setText(__('Label key'));",
          "178:         $dataOptions->addProperty($leaf);",
          "179:         $leaf = new TextPropertyItem();",
          "180:         $leaf->setName('null');",
          "",
          "[Removed Lines]",
          "167:         $leaf->setDoc('faq6_27');",
          "172:         $leaf->setDoc('faq6_27');",
          "177:         $leaf->setDoc('faq6_27');",
          "",
          "[Added Lines]",
          "167:         $leaf->setDoc('faq6-27');",
          "172:         $leaf->setDoc('faq6-27');",
          "177:         $leaf->setDoc('faq6-27');",
          "",
          "---------------"
        ],
        "libraries/relation.lib.php||libraries/relation.lib.php": [
          "File: libraries/relation.lib.php -> libraries/relation.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "81: {",
          "82:     $retval = '';",
          "84:     $messages['error'] = '<font color=\"red\"><strong>'",
          "85:         . __('not OK')",
          "86:         . '</strong></font>'",
          "88:         . __('Documentation')",
          "89:         . '</a> ]';",
          "",
          "[Removed Lines]",
          "87:         . ' [ <a href=\"Documentation.html#%s\" target=\"documentation\">'",
          "",
          "[Added Lines]",
          "84:     $doc_url = PMA_Util::getDocuLink('config', 'cfg_Servers_%s');",
          "89:         . ' [ <a href=\"' . $doc_url .'\" target=\"documentation\">'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:             'pdf_pages',",
          "143:             isset($cfgRelation['pdf_pages']),",
          "144:             $messages,",
          "146:         );",
          "147:         $retval .= PMA_getDiagMessageForFeature(",
          "148:             __('Creation of PDFs'),",
          "",
          "[Removed Lines]",
          "145:             'table_coords'",
          "",
          "[Added Lines]",
          "147:             'pdf_pages'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "153:             'column_info',",
          "154:             isset($cfgRelation['column_info']),",
          "155:             $messages,",
          "157:         );",
          "158:         $retval .= PMA_getDiagMessageForFeature(",
          "159:             __('Displaying Column Comments'),",
          "",
          "[Removed Lines]",
          "156:             'col_com'",
          "",
          "[Added Lines]",
          "158:             'column_info'",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "257:             'Create the needed tables with the '",
          "258:             . '<code>examples/create_tables.sql</code>.'",
          "259:         );",
          "261:         $retval .= '</li>';",
          "262:         $retval .= '<li>';",
          "263:         $retval .= __('Create a pma user and give access to these tables.');",
          "265:         $retval .= '</li>';",
          "266:         $retval .= '<li>';",
          "267:         $retval .= __(",
          "",
          "[Removed Lines]",
          "260:         $retval .= ' ' . PMA_Util::showDocu('linked-tables');",
          "264:         $retval .= ' ' . PMA_Util::showDocu('pmausr');",
          "",
          "[Added Lines]",
          "262:         $retval .= ' ' . PMA_Util::showDocu('setup', 'linked-tables');",
          "266:         $retval .= ' ' . PMA_Util::showDocu('config', 'cfg_Servers_controluser');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "269:             . '(<code>config.inc.php</code>), for example by '",
          "270:             . 'starting from <code>config.sample.inc.php</code>.'",
          "271:         );",
          "273:         $retval .= '</li>';",
          "274:         $retval .= '<li>';",
          "275:         $retval .= __(",
          "",
          "[Removed Lines]",
          "272:         $retval .= ' ' . PMA_Util::showDocu('quick_install');",
          "",
          "[Added Lines]",
          "274:         $retval .= ' ' . PMA_Util::showDocu('setup', 'quick-install');",
          "",
          "---------------"
        ],
        "libraries/sql_query_form.lib.php||libraries/sql_query_form.lib.php": [
          "File: libraries/sql_query_form.lib.php -> libraries/sql_query_form.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "408:     echo '</div>' . \"\\n\";",
          "409:     echo '<div class=\"formelement\">' . \"\\n\";",
          "410:     echo __('Variable');",
          "412:     echo '<input type=\"text\" name=\"bookmark_variable\" class=\"textfield\"'",
          "413:         .' size=\"10\" />' . \"\\n\";",
          "414:     echo '</div>' . \"\\n\";",
          "",
          "[Removed Lines]",
          "411:     echo PMA_Util::showDocu('faqbookmark');",
          "",
          "[Added Lines]",
          "411:     echo PMA_Util::showDocu('faq', 'faqbookmark');",
          "",
          "---------------"
        ],
        "libraries/sqlvalidator.lib.php||libraries/sqlvalidator.lib.php": [
          "File: libraries/sqlvalidator.lib.php -> libraries/sqlvalidator.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:         if (isset($GLOBALS['sqlvalidator_error'])",
          "66:             && $GLOBALS['sqlvalidator_error']",
          "67:         ) {",
          "69:         } else {",
          "71:             $srv = new PMA_SQLValidator();",
          "",
          "[Removed Lines]",
          "68:             $str = sprintf(__('The SQL validator could not be initialized. Please check if you have installed the necessary PHP extensions as described in the %sdocumentation%s.'), '<a href=\"Documentation.html#faqsqlvalidator\" target=\"documentation\">', '</a>');",
          "",
          "[Added Lines]",
          "68:             $str = sprintf(",
          "69:                 __('The SQL validator could not be initialized. Please check if you have installed the necessary PHP extensions as described in the %sdocumentation%s.'),",
          "70:                 '<a href=\"' . PMA_Util::getDocuLink('faq', 'faqsqlvalidator') .  '\" target=\"documentation\">',",
          "71:                 '</a>'",
          "72:             );",
          "",
          "---------------"
        ],
        "pmd_general.php||pmd_general.php": [
          "File: pmd_general.php -> pmd_general.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:         <img title=\"<?php echo __('Reload'); ?>\" alt=\"\"",
          "104:             src=\"<?php echo $_SESSION['PMA_Theme']->getImgPath('pmd/reload.png'); ?>\" />",
          "105:     </a>",
          "107:         <img title=\"<?php echo __('Help'); ?>\" alt=\"\"",
          "108:             src=\"<?php echo $_SESSION['PMA_Theme']->getImgPath('pmd/help.png'); ?>\" />",
          "109:     </a>",
          "",
          "[Removed Lines]",
          "106:     <a href=\"Documentation.html#faq6_31\" target=\"documentation\" class=\"M_butt\" target=\"_self\">",
          "",
          "[Added Lines]",
          "106:     <a href=\"<?php echo PMA_Util::getDocuLink('faq', 'faq6-31') ?>\" target=\"documentation\" class=\"M_butt\" target=\"_self\">",
          "",
          "---------------"
        ],
        "prefs_manage.php||prefs_manage.php": [
          "File: prefs_manage.php -> prefs_manage.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:             <div class=\"group-cnt\">",
          "277:                 <?php",
          "278:                 echo sprintf(__('You can set more settings by modifying config.inc.php, eg. by using %sSetup script%s.'), '<a href=\"setup/index.php\" target=\"_blank\">', '</a>');",
          "280:                 ?>",
          "281:             </div>",
          "282:         </div>",
          "",
          "[Removed Lines]",
          "279:                 echo PMA_Util::showDocu('setup_script');",
          "",
          "[Added Lines]",
          "279:                 echo PMA_Util::showDocu('setup', 'setup-script');",
          "",
          "---------------"
        ],
        "schema_edit.php||schema_edit.php": [
          "File: schema_edit.php -> schema_edit.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: if (! $cfgRelation['relwork']) {",
          "36:     echo sprintf(__('<b>%s</b> table not found or not set in %s'), 'relation', 'config.inc.php') . '<br />' . \"\\n\"",
          "38:     exit;",
          "39: }",
          "41: if (! $cfgRelation['displaywork']) {",
          "42:     echo sprintf(__('<b>%s</b> table not found or not set in %s'), 'table_info', 'config.inc.php') . '<br />' . \"\\n\"",
          "44:     exit;",
          "45: }",
          "47: if (! isset($cfgRelation['table_coords'])) {",
          "48:     echo sprintf(__('<b>%s</b> table not found or not set in %s'), 'table_coords', 'config.inc.php') . '<br />' . \"\\n\"",
          "50:     exit;",
          "51: }",
          "52: if (! isset($cfgRelation['pdf_pages'])) {",
          "53:     echo sprintf(__('<b>%s</b> table not found or not set in %s'), 'pdf_page', 'config.inc.php') . '<br />' . \"\\n\"",
          "55:     exit;",
          "56: }",
          "",
          "[Removed Lines]",
          "37:          . PMA_Util::showDocu('relation') . \"\\n\";",
          "43:          . PMA_Util::showDocu('table_info') . \"\\n\";",
          "49:          . PMA_Util::showDocu('table_coords') . \"\\n\";",
          "54:          . PMA_Util::showDocu('pdf_pages') . \"\\n\";",
          "",
          "[Added Lines]",
          "37:          . PMA_Util::showDocu('config', 'cfg_Servers_relation') . \"\\n\";",
          "43:          . PMA_Util::showDocu('config', 'cfg_Servers_table_info') . \"\\n\";",
          "49:          . PMA_Util::showDocu('config', 'cfg_Servers_table_coords') . \"\\n\";",
          "54:          . PMA_Util::showDocu('config', 'cfg_Servers_pdf_pages') . \"\\n\";",
          "",
          "---------------"
        ],
        "sql.php||sql.php": [
          "File: sql.php -> sql.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "300:         );",
          "301:         $GLOBALS['using_bookmark_message']->addParam($table);",
          "302:         $GLOBALS['using_bookmark_message']->addMessage(",
          "304:         );",
          "305:         $sql_query = $book_sql_query;",
          "306:     } else {",
          "",
          "[Removed Lines]",
          "303:             PMA_Util::showDocu('faq6_22')",
          "",
          "[Added Lines]",
          "303:             PMA_Util::showDocu('faq', 'faq6-22')",
          "",
          "---------------"
        ],
        "test/libraries/common/PMA_showDocu_test.php||test/libraries/common/PMA_showDocu_test.php": [
          "File: test/libraries/common/PMA_showDocu_test.php -> test/libraries/common/PMA_showDocu_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:     function testShowDocu()",
          "25:     {",
          "33:         );",
          "35:     }",
          "",
          "[Removed Lines]",
          "26:         $anchor = \"relation\";",
          "27:         $expected = '<a href=\"Documentation.html#' . $anchor . '\" target=\"documentation\">'",
          "28:                   . '<img src=\"themes/dot.gif\" title=\"' . __('Documentation') . '\" '",
          "29:                   . 'alt=\"' . __('Documentation') . '\" class=\"icon ic_b_help\" /></a>';",
          "31:         $this->assertEquals(",
          "32:             $expected, PMA_Util::showDocu($anchor)",
          "",
          "[Added Lines]",
          "26:         $this->assertContains(",
          "27:             'page.html#anchor', PMA_Util::showDocu('page', 'anchor')",
          "",
          "---------------"
        ]
      }
    }
  ]
}