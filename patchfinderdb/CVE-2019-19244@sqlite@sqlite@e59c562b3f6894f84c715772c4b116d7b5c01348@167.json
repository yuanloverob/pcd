{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b560a7194dd9cde79d4d9b409bcfe1c059c0fe77",
      "candidate_info": {
        "commit_hash": "b560a7194dd9cde79d4d9b409bcfe1c059c0fe77",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b560a7194dd9cde79d4d9b409bcfe1c059c0fe77",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c",
          "src/window.c"
        ],
        "message": "Remove rows from the ephemeral table used by window functions once they are no longer required.\n\nFossilOrigin-Name: 6ad553192051eaa0c6d929baacde2de07b93c6d09de861028bbce55a2c9bfdd3",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c",
          "src/window.c||src/window.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b1322ffb6e63a110998068bf4f0a903028bd4fc0464ae1e517d745fb46423f39",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8828:   assert( pCur->curFlags & BTCF_WriteFlag );",
          "8829:   assert( hasSharedCacheTableLock(p, pCur->pgnoRoot, pCur->pKeyInfo!=0, 2) );",
          "8830:   assert( !hasReadConflicts(p, pCur->pgnoRoot) );",
          "8833:   assert( (flags & ~(BTREE_SAVEPOSITION | BTREE_AUXDELETE))==0 );",
          "8835:   iCellDepth = pCur->iPage;",
          "8836:   iCellIdx = pCur->ix;",
          "",
          "[Removed Lines]",
          "8831:   assert( pCur->ix<pCur->pPage->nCell );",
          "8832:   assert( pCur->eState==CURSOR_VALID );",
          "",
          "[Added Lines]",
          "8832:   if( pCur->eState==CURSOR_REQUIRESEEK ){",
          "8833:     rc = btreeRestoreCursorPosition(pCur);",
          "8834:     if( rc ) return rc;",
          "8835:   }",
          "8836:   assert( pCur->eState==CURSOR_VALID );",
          "8837:   assert( pCur->ix<pCur->pPage->nCell );",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "611:         { cume_distName,    TK_GROUPS, TK_FOLLOWING, TK_UNBOUNDED },",
          "612:         { ntileName,        TK_ROWS,   TK_CURRENT,   TK_UNBOUNDED },",
          "613:         { leadName,         TK_ROWS,   TK_UNBOUNDED, TK_UNBOUNDED },",
          "614:       };",
          "615:       int i;",
          "616:       for(i=0; i<ArraySize(aUp); i++){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "614:         { lagName,          TK_ROWS,   TK_UNBOUNDED, TK_CURRENT },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1472:   return regArg;",
          "1473: }",
          "",
          "[Removed Lines]",
          "1475: #if 0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1483:     FuncDef *pFunc = pWin->pFunc;",
          "1484:     if( (pFunc->zName==nth_valueName)",
          "1485:      || (pFunc->zName==first_valueName)",
          "1487:      || (pFunc->zName==lagName)",
          "1488:     ){",
          "1489:       return 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1486:      || (pFunc->zName==leadName)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1491:   }",
          "1492:   return 0;",
          "1493: }",
          "",
          "[Removed Lines]",
          "1494: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1539:   int regGosub;",
          "1540:   int addrGosub;",
          "1541:   int regArg;",
          "1543:   WindowCsrAndReg start;",
          "1544:   WindowCsrAndReg current;",
          "1545:   WindowCsrAndReg end;",
          "1546: };",
          "1548: #define WINDOW_RETURN_ROW 1",
          "1549: #define WINDOW_AGGINVERSE 2",
          "1550: #define WINDOW_AGGSTEP    3",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1542:   int eDelete;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1701:       break;",
          "1702:   }",
          "1704:   if( jumpOnEof ){",
          "1705:     sqlite3VdbeAddOp2(v, OP_Next, csr, sqlite3VdbeCurrentAddr(v)+2);",
          "1706:     ret = sqlite3VdbeAddOp0(v, OP_Goto);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1708:   if( op==p->eDelete ){",
          "1709:     sqlite3VdbeAddOp1(v, OP_Delete, csr);",
          "1710:     sqlite3VdbeChangeP5(v, OPFLAG_SAVEPOSITION);",
          "1711:   }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1712:   }",
          "1714:   if( bPeer ){",
          "1716:     int nReg = (pMWin->pOrderBy ? pMWin->pOrderBy->nExpr : 0);",
          "1717:     int regTmp = (nReg ? sqlite3GetTempRange(pParse, nReg) : 0);",
          "1718:     windowReadPeerValues(p, csr, regTmp);",
          "",
          "[Removed Lines]",
          "1715:     int addr;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2154:   s.start.csr = s.current.csr+2;",
          "2155:   s.end.csr = s.current.csr+3;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2171:   switch( pMWin->eStart ){",
          "2172:     case TK_FOLLOWING: {",
          "2173:       sqlite3 *db = pParse->db;",
          "2174:       sqlite3_value *pVal = 0;",
          "2175:       sqlite3ValueFromExpr(db, pMWin->pStart, db->enc,SQLITE_AFF_NUMERIC,&pVal);",
          "2176:       if( pVal && sqlite3_value_int(pVal)>0 ){",
          "2177:         s.eDelete = WINDOW_RETURN_ROW;",
          "2178:       }",
          "2179:       sqlite3ValueFree(pVal);",
          "2180:       break;",
          "2181:     }",
          "2182:     case TK_UNBOUNDED:",
          "2183:       if( windowCacheFrame(pMWin)==0 ){",
          "2184:         if( pMWin->eEnd==TK_PRECEDING ){",
          "2185:           s.eDelete = WINDOW_AGGSTEP;",
          "2186:         }else{",
          "2187:           s.eDelete = WINDOW_RETURN_ROW;",
          "2188:         }",
          "2189:       }",
          "2190:       break;",
          "2191:     default:",
          "2192:       s.eDelete = WINDOW_AGGINVERSE;",
          "2193:       break;",
          "2194:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fbd79cc585d62868ccf2e08d44f3f65db744287a",
      "candidate_info": {
        "commit_hash": "fbd79cc585d62868ccf2e08d44f3f65db744287a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fbd79cc585d62868ccf2e08d44f3f65db744287a",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/fts5_storage.c",
          "ext/fts5/test/fts5misc.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix problems with using the fts5 'rebuild' command inside a transaction that contains other updates of the same table. Fix for [e258f008].\n\nFossilOrigin-Name: 238e0835714696aba0631f288fcc30ec5fddb43893d469c6bf017f386b3cddee",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/fts5_storage.c||ext/fts5/fts5_storage.c",
          "ext/fts5/test/fts5misc.test||ext/fts5/test/fts5misc.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5235: int sqlite3Fts5IndexReinit(Fts5Index *p){",
          "5236:   Fts5Structure s;",
          "5237:   fts5StructureInvalidate(p);",
          "5238:   memset(&s, 0, sizeof(Fts5Structure));",
          "5239:   fts5DataWrite(p, FTS5_AVERAGES_ROWID, (const u8*)\"\", 0);",
          "5240:   fts5StructureWrite(p, &s);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5238:   fts5IndexDiscardData(p);",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_storage.c||ext/fts5/fts5_storage.c": [
          "File: ext/fts5/fts5_storage.c -> ext/fts5/fts5_storage.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "560:   Fts5Config *pConfig = p->pConfig;",
          "561:   int rc;",
          "564:   rc = fts5ExecPrintf(pConfig->db, 0,",
          "565:       \"DELETE FROM %Q.'%q_data';\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "563:   p->bTotalsValid = 0;",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5misc.test||ext/fts5/test/fts5misc.test": [
          "File: ext/fts5/test/fts5misc.test -> ext/fts5/test/fts5misc.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "122: }",
          "125: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124: #-------------------------------------------------------------------------",
          "125: reset_db",
          "126: do_execsql_test 4.0 {",
          "127:   CREATE VIRTUAL TABLE vt0 USING fts5(c0);",
          "128:   INSERT INTO vt0(c0) VALUES ('xyz');",
          "129: }",
          "131: do_execsql_test 4.1 {",
          "132:   BEGIN;",
          "133:     INSERT INTO vt0(c0) VALUES ('abc');",
          "134:     INSERT INTO vt0(vt0) VALUES('rebuild');",
          "135:   COMMIT;",
          "136: }",
          "138: do_execsql_test 4.2 {",
          "139:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "140: }",
          "142: do_execsql_test 4.3 {",
          "143:   BEGIN;",
          "144:     INSERT INTO vt0(vt0) VALUES('rebuild');",
          "145:     INSERT INTO vt0(vt0) VALUES('rebuild');",
          "146:   COMMIT;",
          "147: }",
          "149: do_execsql_test 4.4 {",
          "150:   INSERT INTO vt0(vt0) VALUES('integrity-check');",
          "151: }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8ab0aebdb3c2d6fb3160b2c58ce6cc0495a6ddd960878a6395958c837f3d1b71",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b277a980a799a4fc3e17d8f44fce6a3ea1eb8d8",
      "candidate_info": {
        "commit_hash": "0b277a980a799a4fc3e17d8f44fce6a3ea1eb8d8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0b277a980a799a4fc3e17d8f44fce6a3ea1eb8d8",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "test/altertab3.test"
        ],
        "message": "Have the ALTER TABLE code handle the case where an entire expression that includes a sub-select is excluded from a view, trigger or index.\n\nFossilOrigin-Name: f2c8179f3c0b77f10da3f9b0771db4dec30d0bbf0b7f4751ce439bfb08da8f6f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 36ea13e0a851a749c9ef292377ecd82dbd4797d38df907b362487fa234c98ca5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "727:   return WRC_Continue;",
          "728: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "733: static int renameUnmapSelectCb(Walker *pWalker, Select *p){",
          "734:   if( p->pSrc ){",
          "735:     Parse *pParse = pWalker->pParse;",
          "736:     int i;",
          "737:     for(i=0; i<p->pSrc->nSrc; i++){",
          "738:       sqlite3RenameTokenRemap(pParse, 0, (void*)p->pSrc->a[0].zName);",
          "739:     }",
          "740:   }",
          "741:   return WRC_Continue;",
          "742: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "735:   memset(&sWalker, 0, sizeof(Walker));",
          "736:   sWalker.pParse = pParse;",
          "737:   sWalker.xExprCallback = renameUnmapExprCb;",
          "738:   sqlite3WalkExpr(&sWalker, pExpr);",
          "739: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "752:   sWalker.xSelectCallback = renameUnmapSelectCb;",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "206:   db close",
          "207: } {}",
          "211: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208: #-------------------------------------------------------------------------",
          "209: reset_db",
          "210: do_execsql_test 9.1 {",
          "211:   CREATE TABLE t1(a,b,c);",
          "212:   CREATE TRIGGER AFTER INSERT ON t1 WHEN new.a NOT NULL BEGIN",
          "213:     SELECT true WHERE (SELECT a, b FROM (t1)) IN ();",
          "214:   END;",
          "215: }",
          "217: do_execsql_test 9.2 {",
          "218:   ALTER TABLE t1 RENAME TO t1x;",
          "219: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "06fc24555fd7fc826c68de4b85f2326ada87ea90",
      "candidate_info": {
        "commit_hash": "06fc24555fd7fc826c68de4b85f2326ada87ea90",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/06fc24555fd7fc826c68de4b85f2326ada87ea90",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/wherecode.c"
        ],
        "message": "Changes an unreachable testcase() into an assert().\n\nFossilOrigin-Name: 5710845b6314f924b490434b4446169f4bb50576aaa940472af68150db16e127",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/wherecode.c||src/wherecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: ea20068e6d97c9349ebcc7d0a01e99ebf08c6f44363f71a0218a1abea209adc5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1903:         whereApplyPartialIndexConstraints(pIdx->pPartIdxWhere, iCur, pWC);",
          "1904:       }",
          "1905:     }else{",
          "1907:       testcase( pIdx->pPartIdxWhere );",
          "1908:     }",
          "",
          "[Removed Lines]",
          "1906:       testcase( (pWInfo->wctrlFlags & WHERE_OR_SUBCLAUSE)==0 );",
          "",
          "[Added Lines]",
          "1910:       assert( (pWInfo->wctrlFlags & WHERE_OR_SUBCLAUSE)==0 );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d1c472dab66d0e583082d96a3f40630ac6a3529d",
      "candidate_info": {
        "commit_hash": "d1c472dab66d0e583082d96a3f40630ac6a3529d",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d1c472dab66d0e583082d96a3f40630ac6a3529d",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Increase the precision of floating point value display in VDBE debugging output.  No changes to normally deployed code.\n\nFossilOrigin-Name: a561a656ff50efc0103da3988626cea3ef05757403b83960f2aa6c0a48c2765e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3934d2d08ee14d644dc01f967c10f219b76b172c963c90a7a8141f2b08a7d5bf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "554:     printf(\" i:%lld\", p->u.i);",
          "555: #ifndef SQLITE_OMIT_FLOATING_POINT",
          "556:   }else if( p->flags & MEM_Real ){",
          "558: #endif",
          "559:   }else if( sqlite3VdbeMemIsRowSet(p) ){",
          "560:     printf(\" (rowset)\");",
          "",
          "[Removed Lines]",
          "557:     printf(\" r:%g\", p->u.r);",
          "",
          "[Added Lines]",
          "557:     printf(\" r:%.17g\", p->u.r);",
          "",
          "---------------"
        ]
      }
    }
  ]
}