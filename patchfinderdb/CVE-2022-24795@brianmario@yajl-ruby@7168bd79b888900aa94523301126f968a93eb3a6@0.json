{
  "cve_id": "CVE-2022-24795",
  "cve_desc": "yajl-ruby is a C binding to the YAJL JSON parsing and generation library. The 1.x branch and the 2.x branch of `yajl` contain an integer overflow which leads to subsequent heap memory corruption when dealing with large (~2GB) inputs. The reallocation logic at `yajl_buf.c#L64` may result in the `need` 32bit integer wrapping to 0 when `need` approaches a value of 0x80000000 (i.e. ~2GB of data), which results in a reallocation of buf->alloc into a small heap chunk. These integers are declared as `size_t` in the 2.x branch of `yajl`, which practically prevents the issue from triggering on 64bit platforms, however this does not preclude this issue triggering on 32bit builds on which `size_t` is a 32bit integer. Subsequent population of this under-allocated heap chunk is based on the original buffer size, leading to heap memory corruption. This vulnerability mostly impacts process availability. Maintainers believe exploitation for arbitrary code execution is unlikely. A patch is available and anticipated to be part of yajl-ruby version 1.4.2. As a workaround, avoid passing large inputs to YAJL.",
  "repo": "brianmario/yajl-ruby",
  "patch_hash": "7168bd79b888900aa94523301126f968a93eb3a6",
  "patch_info": {
    "commit_hash": "7168bd79b888900aa94523301126f968a93eb3a6",
    "repo": "brianmario/yajl-ruby",
    "commit_url": "https://github.com/brianmario/yajl-ruby/commit/7168bd79b888900aa94523301126f968a93eb3a6",
    "files": [
      "ext/yajl/api/yajl_gen.h",
      "ext/yajl/yajl_gen.c",
      "ext/yajl/yajl_lex.c"
    ],
    "message": "Merge pull request #204 from eileencodes/fix-c-warnings\n\nFix c warnings",
    "before_after_code_files": [
      "ext/yajl/api/yajl_gen.h||ext/yajl/api/yajl_gen.h",
      "ext/yajl/yajl_gen.c||ext/yajl/yajl_gen.c",
      "ext/yajl/yajl_lex.c||ext/yajl/yajl_lex.c"
    ]
  },
  "patch_diff": {
    "ext/yajl/api/yajl_gen.h||ext/yajl/api/yajl_gen.h": [
      "File: ext/yajl/api/yajl_gen.h -> ext/yajl/api/yajl_gen.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "63:         yajl_gen_invalid_number,",
      "67:     } yajl_gen_status;",
      "",
      "[Removed Lines]",
      "66:         yajl_gen_no_buf",
      "",
      "[Added Lines]",
      "66:         yajl_gen_no_buf,",
      "68:         yajl_depth_underflow",
      "",
      "---------------"
    ],
    "ext/yajl/yajl_gen.c||ext/yajl/yajl_gen.c": [
      "File: ext/yajl/yajl_gen.c -> ext/yajl/yajl_gen.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "178:     if (++(g->depth) >= YAJL_MAX_DEPTH) return yajl_max_depth_exceeded;",
      "180: #define DECREMENT_DEPTH \\",
      "183: #define APPENDED_ATOM \\",
      "184:     switch (g->state[g->depth]) {                   \\",
      "",
      "[Removed Lines]",
      "181:     if (--(g->depth) >= YAJL_MAX_DEPTH) return yajl_gen_error;",
      "",
      "[Added Lines]",
      "181:     if (--(g->depth) >= YAJL_MAX_DEPTH) return yajl_depth_underflow;",
      "",
      "---------------"
    ],
    "ext/yajl/yajl_lex.c||ext/yajl/yajl_lex.c": [
      "File: ext/yajl/yajl_lex.c -> ext/yajl/yajl_lex.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "43:         case yajl_tok_bool: return \"bool\";",
      "44:         case yajl_tok_colon: return \"colon\";",
      "45:         case yajl_tok_comma: return \"comma\";",
      "46:         case yajl_tok_eof: return \"eof\";",
      "47:         case yajl_tok_error: return \"error\";",
      "48:         case yajl_tok_left_brace: return \"open_array\";",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "46:         case yajl_tok_comment: return \"comment\";",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "22aa1e7b8f613263c781f9c44468b997e91ac583",
      "candidate_info": {
        "commit_hash": "22aa1e7b8f613263c781f9c44468b997e91ac583",
        "repo": "brianmario/yajl-ruby",
        "commit_url": "https://github.com/brianmario/yajl-ruby/commit/22aa1e7b8f613263c781f9c44468b997e91ac583",
        "files": [
          "ext/yajl/yajl_lex.c"
        ],
        "message": "Fix missing switch case\n\n`yajl_tok_comment` was not present in the switch case.\n\nWarnings:\n\n```\ncompiling ../../../../ext/yajl/yajl_lex.c\n../../../../ext/yajl/yajl_lex.c:42:13: warning: enumeration value 'yajl_tok_comment' not handled in switch [-Wswitch]\n    switch (tok) {\n            ^\n../../../../ext/yajl/yajl_lex.c:42:13: note: add missing switch cases\n    switch (tok) {\n            ^\n```\n\nCo-authored-by: John Hawthorn <john@hawthorn.email>",
        "before_after_code_files": [
          "ext/yajl/yajl_lex.c||ext/yajl/yajl_lex.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/brianmario/yajl-ruby/pull/204"
        ],
        "olp_code_files": {
          "patch": [
            "ext/yajl/yajl_lex.c||ext/yajl/yajl_lex.c"
          ],
          "candidate": [
            "ext/yajl/yajl_lex.c||ext/yajl/yajl_lex.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/yajl/yajl_lex.c||ext/yajl/yajl_lex.c": [
          "File: ext/yajl/yajl_lex.c -> ext/yajl/yajl_lex.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:         case yajl_tok_bool: return \"bool\";",
          "44:         case yajl_tok_colon: return \"colon\";",
          "45:         case yajl_tok_comma: return \"comma\";",
          "46:         case yajl_tok_eof: return \"eof\";",
          "47:         case yajl_tok_error: return \"error\";",
          "48:         case yajl_tok_left_brace: return \"open_array\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:         case yajl_tok_comment: return \"comment\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8daacc158c209ae881db76a762e3f105a22741b9",
      "candidate_info": {
        "commit_hash": "8daacc158c209ae881db76a762e3f105a22741b9",
        "repo": "brianmario/yajl-ruby",
        "commit_url": "https://github.com/brianmario/yajl-ruby/commit/8daacc158c209ae881db76a762e3f105a22741b9",
        "files": [
          "ext/yajl/api/yajl_gen.h",
          "ext/yajl/yajl_gen.c"
        ],
        "message": "Fix implicit conversion from enumeration type warning\n\n`yajl_gen_error` is a `yajl_gen_state` not a `yajl_gen_status`.\nThis change adds a new value to the enum for an error when the\ndecremented depth is too low.\n\nWarnings:\n\n```\n../../../../ext/yajl/yajl_gen.c:295:5: warning: implicit conversion from enumeration type 'yajl_gen_state' to different enumeration type 'yajl_gen_status'\n      [-Wenum-conversion]\n    DECREMENT_DEPTH;\n    ^~~~~~~~~~~~~~~\n../../../../ext/yajl/yajl_gen.c:181:48: note: expanded from macro 'DECREMENT_DEPTH'\n    if (--(g->depth) >= YAJL_MAX_DEPTH) return yajl_gen_error;\n                                        ~~~~~~ ^~~~~~~~~~~~~~\n../../../../ext/yajl/yajl_gen.c:321:5: warning: implicit conversion from enumeration type 'yajl_gen_state' to different enumeration type 'yajl_gen_status'\n      [-Wenum-conversion]\n    DECREMENT_DEPTH;\n    ^~~~~~~~~~~~~~~\n../../../../ext/yajl/yajl_gen.c:181:48: note: expanded from macro 'DECREMENT_DEPTH'\n    if (--(g->depth) >= YAJL_MAX_DEPTH) return yajl_gen_error;\n                                        ~~~~~~ ^~~~~~~~~~~~~~\n```\n\nCo-authored-by: John Hawthorn <john@hawthorn.email>",
        "before_after_code_files": [
          "ext/yajl/api/yajl_gen.h||ext/yajl/api/yajl_gen.h",
          "ext/yajl/yajl_gen.c||ext/yajl/yajl_gen.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/brianmario/yajl-ruby/pull/204"
        ],
        "olp_code_files": {
          "patch": [
            "ext/yajl/api/yajl_gen.h||ext/yajl/api/yajl_gen.h",
            "ext/yajl/yajl_gen.c||ext/yajl/yajl_gen.c"
          ],
          "candidate": [
            "ext/yajl/api/yajl_gen.h||ext/yajl/api/yajl_gen.h",
            "ext/yajl/yajl_gen.c||ext/yajl/yajl_gen.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/yajl/api/yajl_gen.h||ext/yajl/api/yajl_gen.h": [
          "File: ext/yajl/api/yajl_gen.h -> ext/yajl/api/yajl_gen.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:         yajl_gen_invalid_number,",
          "67:     } yajl_gen_status;",
          "",
          "[Removed Lines]",
          "66:         yajl_gen_no_buf",
          "",
          "[Added Lines]",
          "66:         yajl_gen_no_buf,",
          "68:         yajl_depth_underflow",
          "",
          "---------------"
        ],
        "ext/yajl/yajl_gen.c||ext/yajl/yajl_gen.c": [
          "File: ext/yajl/yajl_gen.c -> ext/yajl/yajl_gen.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:     if (++(g->depth) >= YAJL_MAX_DEPTH) return yajl_max_depth_exceeded;",
          "180: #define DECREMENT_DEPTH \\",
          "183: #define APPENDED_ATOM \\",
          "184:     switch (g->state[g->depth]) {                   \\",
          "",
          "[Removed Lines]",
          "181:     if (--(g->depth) >= YAJL_MAX_DEPTH) return yajl_gen_error;",
          "",
          "[Added Lines]",
          "181:     if (--(g->depth) >= YAJL_MAX_DEPTH) return yajl_depth_underflow;",
          "",
          "---------------"
        ]
      }
    }
  ]
}