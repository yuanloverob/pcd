{
  "cve_id": "CVE-2022-29208",
  "cve_desc": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.EditDistance` has incomplete validation. Users can pass negative values to cause a segmentation fault based denial of service. In multiple places throughout the code, one may compute an index for a write operation. However, the existing validation only checks against the upper bound of the array. Hence, it is possible to write before the array by massaging the input to generate negative values for `loc`. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "30721cf564cb029d34535446d6a5a6357bebc8e7",
  "patch_info": {
    "commit_hash": "30721cf564cb029d34535446d6a5a6357bebc8e7",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/30721cf564cb029d34535446d6a5a6357bebc8e7",
    "files": [
      "tensorflow/core/kernels/edit_distance_op.cc",
      "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
    ],
    "message": "Fix tf.raw_ops.EditDistance vulnerability with negative indices.\n\nCheck that indices are non-negative. Fix several identical code sites.\nClean up grammar in error message.\n\nPiperOrigin-RevId: 445442017",
    "before_after_code_files": [
      "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc",
      "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc": [
      "File: tensorflow/core/kernels/edit_distance_op.cc -> tensorflow/core/kernels/edit_distance_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "203:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
      "204:                                       output_strides.begin(), int64_t{0});",
      "205:         OP_REQUIRES(",
      "207:             errors::Internal(\"Got an inner product \", loc,",
      "209:                              \"the buffer for the output tensor (max elements \",",
      "210:                              output_elements, \")\"));",
      "211:         output_t(loc) =",
      "",
      "[Removed Lines]",
      "206:             ctx, loc < output_elements,",
      "208:                              \" which would require in writing to outside of \"",
      "",
      "[Added Lines]",
      "206:             ctx, 0 <= loc && loc < output_elements,",
      "208:                              \" which would require writing to outside of \"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "218:         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
      "219:                                       output_strides.begin(), int64_t{0});",
      "220:         OP_REQUIRES(",
      "222:             errors::Internal(\"Got an inner product \", loc,",
      "224:                              \"the buffer for the output tensor (max elements \",",
      "225:                              output_elements, \")\"));",
      "226:         output_t(loc) = hypothesis_seq.size();",
      "",
      "[Removed Lines]",
      "221:             ctx, loc < output_elements,",
      "223:                              \" which would require in writing to outside of \"",
      "",
      "[Added Lines]",
      "221:             ctx, 0 <= loc && loc < output_elements,",
      "223:                              \" which would require writing to outside of \"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "232:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
      "233:                                       output_strides.begin(), int64_t{0});",
      "234:         OP_REQUIRES(",
      "236:             errors::Internal(\"Got an inner product \", loc,",
      "238:                              \"the buffer for the output tensor (max elements \",",
      "239:                              output_elements, \")\"));",
      "240:         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
      "",
      "[Removed Lines]",
      "235:             ctx, loc < output_elements,",
      "237:                              \" which would require in writing to outside of \"",
      "",
      "[Added Lines]",
      "235:             ctx, 0 <= loc && loc < output_elements,",
      "237:                              \" which would require writing to outside of \"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "248:       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
      "249:                                     output_strides.begin(), int64_t{0});",
      "250:       OP_REQUIRES(",
      "252:           errors::Internal(\"Got an inner product \", loc,",
      "254:                            \"buffer for the output tensor (max elements \",",
      "255:                            output_elements, \")\"));",
      "256:       output_t(loc) = hypothesis_seq.size();",
      "",
      "[Removed Lines]",
      "251:           ctx, loc < output_elements,",
      "253:                            \" which would require in writing to outside of the \"",
      "",
      "[Added Lines]",
      "251:           ctx, 0 <= loc && loc < output_elements,",
      "253:                            \" which would require writing to outside of the \"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "266:       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
      "267:                                     output_strides.begin(), int64_t{0});",
      "268:       OP_REQUIRES(",
      "270:           errors::Internal(\"Got an inner product \", loc,",
      "272:                            \"buffer for the output tensor (max elements \",",
      "273:                            output_elements, \")\"));",
      "274:       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
      "",
      "[Removed Lines]",
      "269:           ctx, loc < output_elements,",
      "271:                            \" which would require in writing to outside of the \"",
      "",
      "[Added Lines]",
      "269:           ctx, 0 <= loc && loc < output_elements,",
      "271:                            \" which would require writing to outside of the \"",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py": [
      "File: tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py -> tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "207:         normalize=True,",
      "208:         expected_output=expected_output)",
      "211: if __name__ == \"__main__\":",
      "212:   test.main()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "210:   def testEditDistanceBadIndices(self):",
      "211:     hypothesis_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
      "212:     hypothesis_values = np.empty(3, dtype=np.int64)",
      "213:     hypothesis_shape = np.empty(3, dtype=np.int64)",
      "214:     truth_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
      "215:     truth_values = np.full([3], 2, dtype=np.int64)",
      "216:     truth_shape = np.full([3], 2, dtype=np.int64)",
      "217:     expected_output = []  # dummy; ignored",
      "219:     self._testEditDistance(",
      "220:         hypothesis=(hypothesis_indices, hypothesis_values, hypothesis_shape),",
      "221:         truth=(truth_indices, truth_values, truth_shape),",
      "222:         normalize=False,",
      "223:         expected_output=expected_output,",
      "224:         expected_err_re=(r\"inner product -\\d+ which would require writing \"",
      "225:                          \"to outside of the buffer for the output tensor\")",
      "226:     )",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "324f78684fff0ca29d2cf88f49ae2d83557c4d5c",
      "candidate_info": {
        "commit_hash": "324f78684fff0ca29d2cf88f49ae2d83557c4d5c",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/324f78684fff0ca29d2cf88f49ae2d83557c4d5c",
        "files": [
          "tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
        ],
        "message": "Fix tf.raw_ops.EditDistance vulnerability with negative indices.\n\nCheck that indices are non-negative. Fix several identical code sites.\nClean up grammar in error message.\n\nPiperOrigin-RevId: 445442017",
        "before_after_code_files": [
          "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc",
            "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc",
            "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc": [
          "File: tensorflow/core/kernels/edit_distance_op.cc -> tensorflow/core/kernels/edit_distance_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "204:                                       output_strides.begin(), int64_t{0});",
          "205:         OP_REQUIRES(",
          "207:             errors::Internal(\"Got an inner product \", loc,",
          "209:                              \"the buffer for the output tensor (max elements \",",
          "210:                              output_elements, \")\"));",
          "211:         output_t(loc) =",
          "",
          "[Removed Lines]",
          "206:             ctx, loc < output_elements,",
          "208:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "206:             ctx, 0 <= loc && loc < output_elements,",
          "208:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "219:                                       output_strides.begin(), int64_t{0});",
          "220:         OP_REQUIRES(",
          "222:             errors::Internal(\"Got an inner product \", loc,",
          "224:                              \"the buffer for the output tensor (max elements \",",
          "225:                              output_elements, \")\"));",
          "226:         output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "221:             ctx, loc < output_elements,",
          "223:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "221:             ctx, 0 <= loc && loc < output_elements,",
          "223:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "233:                                       output_strides.begin(), int64_t{0});",
          "234:         OP_REQUIRES(",
          "236:             errors::Internal(\"Got an inner product \", loc,",
          "238:                              \"the buffer for the output tensor (max elements \",",
          "239:                              output_elements, \")\"));",
          "240:         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "235:             ctx, loc < output_elements,",
          "237:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "235:             ctx, 0 <= loc && loc < output_elements,",
          "237:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "248:       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "249:                                     output_strides.begin(), int64_t{0});",
          "250:       OP_REQUIRES(",
          "252:           errors::Internal(\"Got an inner product \", loc,",
          "254:                            \"buffer for the output tensor (max elements \",",
          "255:                            output_elements, \")\"));",
          "256:       output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "251:           ctx, loc < output_elements,",
          "253:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "251:           ctx, 0 <= loc && loc < output_elements,",
          "253:                            \" which would require writing to outside of the \"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "266:       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "267:                                     output_strides.begin(), int64_t{0});",
          "268:       OP_REQUIRES(",
          "270:           errors::Internal(\"Got an inner product \", loc,",
          "272:                            \"buffer for the output tensor (max elements \",",
          "273:                            output_elements, \")\"));",
          "274:       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "269:           ctx, loc < output_elements,",
          "271:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "269:           ctx, 0 <= loc && loc < output_elements,",
          "271:                            \" which would require writing to outside of the \"",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py -> tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:         normalize=True,",
          "208:         expected_output=expected_output)",
          "211: if __name__ == \"__main__\":",
          "212:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "210:   def testEditDistanceBadIndices(self):",
          "211:     hypothesis_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "212:     hypothesis_values = np.empty(3, dtype=np.int64)",
          "213:     hypothesis_shape = np.empty(3, dtype=np.int64)",
          "214:     truth_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "215:     truth_values = np.full([3], 2, dtype=np.int64)",
          "216:     truth_shape = np.full([3], 2, dtype=np.int64)",
          "217:     expected_output = []  # dummy; ignored",
          "219:     self._testEditDistance(",
          "220:         hypothesis=(hypothesis_indices, hypothesis_values, hypothesis_shape),",
          "221:         truth=(truth_indices, truth_values, truth_shape),",
          "222:         normalize=False,",
          "223:         expected_output=expected_output,",
          "224:         expected_err_re=(r\"inner product -\\d+ which would require writing \"",
          "225:                          \"to outside of the buffer for the output tensor\")",
          "226:     )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5afec4a546021bad07a1aac329a0aaab76e4b933",
      "candidate_info": {
        "commit_hash": "5afec4a546021bad07a1aac329a0aaab76e4b933",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5afec4a546021bad07a1aac329a0aaab76e4b933",
        "files": [
          "tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/edit_distance_op_test.py"
        ],
        "message": "Fix tf.raw_ops.EditDistance vulnerability with negative indices.\n\nCheck that indices are non-negative. Fix several identical code sites.\nClean up grammar in error message.\n\nPiperOrigin-RevId: 445442017",
        "before_after_code_files": [
          "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc",
          "tensorflow/python/kernel_tests/edit_distance_op_test.py||tensorflow/python/kernel_tests/edit_distance_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/edit_distance_op.cc||tensorflow/core/kernels/edit_distance_op.cc": [
          "File: tensorflow/core/kernels/edit_distance_op.cc -> tensorflow/core/kernels/edit_distance_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "204:                                       output_strides.begin(), int64_t{0});",
          "205:         OP_REQUIRES(",
          "207:             errors::Internal(\"Got an inner product \", loc,",
          "209:                              \"the buffer for the output tensor (max elements \",",
          "210:                              output_elements, \")\"));",
          "211:         output_t(loc) =",
          "",
          "[Removed Lines]",
          "206:             ctx, loc < output_elements,",
          "208:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "206:             ctx, 0 <= loc && loc < output_elements,",
          "208:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "219:                                       output_strides.begin(), int64_t{0});",
          "220:         OP_REQUIRES(",
          "222:             errors::Internal(\"Got an inner product \", loc,",
          "224:                              \"the buffer for the output tensor (max elements \",",
          "225:                              output_elements, \")\"));",
          "226:         output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "221:             ctx, loc < output_elements,",
          "223:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "221:             ctx, 0 <= loc && loc < output_elements,",
          "223:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232:         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "233:                                       output_strides.begin(), int64_t{0});",
          "234:         OP_REQUIRES(",
          "236:             errors::Internal(\"Got an inner product \", loc,",
          "238:                              \"the buffer for the output tensor (max elements \",",
          "239:                              output_elements, \")\"));",
          "240:         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "235:             ctx, loc < output_elements,",
          "237:                              \" which would require in writing to outside of \"",
          "",
          "[Added Lines]",
          "235:             ctx, 0 <= loc && loc < output_elements,",
          "237:                              \" which would require writing to outside of \"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "248:       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),",
          "249:                                     output_strides.begin(), int64_t{0});",
          "250:       OP_REQUIRES(",
          "252:           errors::Internal(\"Got an inner product \", loc,",
          "254:                            \"buffer for the output tensor (max elements \",",
          "255:                            output_elements, \")\"));",
          "256:       output_t(loc) = hypothesis_seq.size();",
          "",
          "[Removed Lines]",
          "251:           ctx, loc < output_elements,",
          "253:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "251:           ctx, 0 <= loc && loc < output_elements,",
          "253:                            \" which would require writing to outside of the \"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "266:       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),",
          "267:                                     output_strides.begin(), int64_t{0});",
          "268:       OP_REQUIRES(",
          "270:           errors::Internal(\"Got an inner product \", loc,",
          "272:                            \"buffer for the output tensor (max elements \",",
          "273:                            output_elements, \")\"));",
          "274:       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();",
          "",
          "[Removed Lines]",
          "269:           ctx, loc < output_elements,",
          "271:                            \" which would require in writing to outside of the \"",
          "",
          "[Added Lines]",
          "269:           ctx, 0 <= loc && loc < output_elements,",
          "271:                            \" which would require writing to outside of the \"",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/edit_distance_op_test.py||tensorflow/python/kernel_tests/edit_distance_op_test.py": [
          "File: tensorflow/python/kernel_tests/edit_distance_op_test.py -> tensorflow/python/kernel_tests/edit_distance_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:         normalize=True,",
          "212:         expected_output=expected_output)",
          "215: if __name__ == \"__main__\":",
          "216:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214:   def testEditDistanceBadIndices(self):",
          "215:     hypothesis_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "216:     hypothesis_values = np.empty(3, dtype=np.int64)",
          "217:     hypothesis_shape = np.empty(3, dtype=np.int64)",
          "218:     truth_indices = np.full((3, 3), -1250999896764, dtype=np.int64)",
          "219:     truth_values = np.full([3], 2, dtype=np.int64)",
          "220:     truth_shape = np.full([3], 2, dtype=np.int64)",
          "221:     expected_output = []  # dummy; ignored",
          "223:     self._testEditDistance(",
          "224:         hypothesis=(hypothesis_indices, hypothesis_values, hypothesis_shape),",
          "225:         truth=(truth_indices, truth_values, truth_shape),",
          "226:         normalize=False,",
          "227:         expected_output=expected_output,",
          "228:         expected_err_re=(r\"inner product -\\d+ which would require writing \"",
          "229:                          \"to outside of the buffer for the output tensor\")",
          "230:     )",
          "",
          "---------------"
        ]
      }
    }
  ]
}