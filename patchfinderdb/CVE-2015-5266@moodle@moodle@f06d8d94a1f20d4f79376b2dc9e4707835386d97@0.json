{
  "cve_id": "CVE-2015-5266",
  "cve_desc": "The enrol_meta_sync function in enrol/meta/locallib.php in Moodle through 2.6.11, 2.7.x before 2.7.10, 2.8.x before 2.8.8, and 2.9.x before 2.9.2 allows remote authenticated users to obtain manager privileges in opportunistic circumstances by leveraging incorrect role processing during a long-running sync script.",
  "repo": "moodle/moodle",
  "patch_hash": "f06d8d94a1f20d4f79376b2dc9e4707835386d97",
  "patch_info": {
    "commit_hash": "f06d8d94a1f20d4f79376b2dc9e4707835386d97",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/f06d8d94a1f20d4f79376b2dc9e4707835386d97",
    "files": [
      "enrol/meta/locallib.php"
    ],
    "message": "MDL-50744 enrol_meta: fix incorrect role assign",
    "before_after_code_files": [
      "enrol/meta/locallib.php||enrol/meta/locallib.php"
    ]
  },
  "patch_diff": {
    "enrol/meta/locallib.php||enrol/meta/locallib.php": [
      "File: enrol/meta/locallib.php -> enrol/meta/locallib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "314:             }",
      "315:         }",
      "318:         if ($instance->customint2) {",
      "319:             groups_add_member($instance->customint2, $ue->userid, 'enrol_meta', $instance->id);",
      "320:         }",
      "",
      "[Removed Lines]",
      "317:         $meta->enrol_user($instance, $ue->userid, $ue->status);",
      "",
      "[Added Lines]",
      "317:         $meta->enrol_user($instance, $ue->userid, null, 0, 0, $ue->status);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5723dcdd85dc23d599258d9c586a66ee1f775821",
      "candidate_info": {
        "commit_hash": "5723dcdd85dc23d599258d9c586a66ee1f775821",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/5723dcdd85dc23d599258d9c586a66ee1f775821",
        "files": [
          "enrol/meta/locallib.php",
          "enrol/meta/tests/plugin_test.php"
        ],
        "message": "MDL-34938 enrol_meta: sync enrolment start/end dates",
        "before_after_code_files": [
          "enrol/meta/locallib.php||enrol/meta/locallib.php",
          "enrol/meta/tests/plugin_test.php||enrol/meta/tests/plugin_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "enrol/meta/locallib.php||enrol/meta/locallib.php"
          ],
          "candidate": [
            "enrol/meta/locallib.php||enrol/meta/locallib.php"
          ]
        }
      },
      "candidate_diff": {
        "enrol/meta/locallib.php||enrol/meta/locallib.php": [
          "File: enrol/meta/locallib.php -> enrol/meta/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:         list($enabled, $params) = $DB->get_in_or_equal(explode(',', $CFG->enrol_plugins_enabled), SQL_PARAMS_NAMED, 'e');",
          "96:         $params['userid'] = $userid;",
          "97:         $params['parentcourse'] = $instance->customint1;",
          "99:                   FROM {user_enrolments} ue",
          "100:                   JOIN {enrol} e ON (e.id = ue.enrolid AND e.enrol <> 'meta' AND e.courseid = :parentcourse AND e.enrol $enabled)",
          "101:                  WHERE ue.userid = :userid\";",
          "",
          "[Removed Lines]",
          "98:         $sql = \"SELECT ue.*",
          "",
          "[Added Lines]",
          "98:         $sql = \"SELECT ue.*, e.status AS enrolstatus",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:             return;",
          "143:         }",
          "146:         $parentstatus = ENROL_USER_SUSPENDED;",
          "147:         foreach ($parentues as $pue) {",
          "149:                 $parentstatus = ENROL_USER_ACTIVE;",
          "151:             }",
          "152:         }",
          "155:         if ($ue) {",
          "158:                 $ue->status = $parentstatus;",
          "159:             }",
          "160:         } else {",
          "162:             $ue = new stdClass();",
          "163:             $ue->userid = $userid;",
          "164:             $ue->enrolid = $instance->id;",
          "",
          "[Removed Lines]",
          "148:             if ($pue->status == ENROL_USER_ACTIVE) {",
          "150:                 break;",
          "156:             if ($parentstatus != $ue->status) {",
          "157:                 $plugin->update_user_enrol($instance, $userid, $parentstatus);",
          "161:             $plugin->enrol_user($instance, $userid, NULL, 0, 0, $parentstatus);",
          "",
          "[Added Lines]",
          "147:         $parenttimeend = null;",
          "148:         $parenttimestart = null;",
          "150:             if ($pue->status == ENROL_USER_ACTIVE && $pue->enrolstatus == ENROL_INSTANCE_ENABLED) {",
          "152:                 if ($parenttimeend === null || $pue->timeend == 0 || ($parenttimeend && $parenttimeend < $pue->timeend)) {",
          "153:                     $parenttimeend = $pue->timeend;",
          "154:                 }",
          "155:                 if ($parenttimestart === null || $parenttimestart > $pue->timestart) {",
          "156:                     $parenttimestart = $pue->timestart;",
          "157:                 }",
          "163:             if ($parentstatus != $ue->status ||",
          "164:                     ($parentstatus == ENROL_USER_ACTIVE && ($parenttimestart != $ue->timestart || $parenttimeend != $ue->timeend))) {",
          "165:                 $plugin->update_user_enrol($instance, $userid, $parentstatus, $parenttimestart, $parenttimeend);",
          "167:                 $ue->timestart = $parenttimestart;",
          "168:                 $ue->timeend = $parenttimeend;",
          "171:             $plugin->enrol_user($instance, $userid, NULL, (int)$parenttimestart, (int)$parenttimeend, $parentstatus);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "171:         $unenrolaction = $plugin->get_config('unenrolaction', ENROL_EXT_REMOVED_SUSPENDNOROLES);",
          "175:             if ($unenrolaction == ENROL_EXT_REMOVED_SUSPEND) {",
          "177:             } else if ($roles) {",
          "178:                 role_unassign_all(array('userid'=>$userid, 'contextid'=>$context->id, 'component'=>'enrol_meta', 'itemid'=>$instance->id));",
          "179:             }",
          "180:             return;",
          "",
          "[Removed Lines]",
          "174:         if ($ue->status != ENROL_USER_ACTIVE or $instance->status != ENROL_INSTANCE_ENABLED) {",
          "",
          "[Added Lines]",
          "184:         if ($ue->status != ENROL_USER_ACTIVE or $instance->status != ENROL_INSTANCE_ENABLED or",
          "185:                 ($parenttimeend and $parenttimeend < time()) or ($parenttimestart > time())) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "279:     $allroles = get_all_roles();",
          "283:     $onecourse = $courseid ? \"AND e.courseid = :courseid\" : \"\";",
          "284:     list($enabled, $params) = $DB->get_in_or_equal(explode(',', $CFG->enrol_plugins_enabled), SQL_PARAMS_NAMED, 'e');",
          "285:     $params['courseid'] = $courseid;",
          "287:               FROM {user_enrolments} pue",
          "288:               JOIN {enrol} pe ON (pe.id = pue.enrolid AND pe.enrol <> 'meta' AND pe.enrol $enabled)",
          "289:               JOIN {enrol} e ON (e.customint1 = pe.courseid AND e.enrol = 'meta' $onecourse)",
          "290:               JOIN {user} u ON (u.id = pue.userid AND u.deleted = 0)",
          "291:          LEFT JOIN {user_enrolments} ue ON (ue.enrolid = e.id AND ue.userid = pue.userid)",
          "294:     $rs = $DB->get_recordset_sql($sql, $params);",
          "295:     foreach($rs as $ue) {",
          "",
          "[Removed Lines]",
          "286:     $sql = \"SELECT pue.userid, e.id AS enrolid, pue.status",
          "292:              WHERE ue.id IS NULL\";",
          "",
          "[Added Lines]",
          "303:     $sql = \"SELECT pue.userid, e.id AS enrolid, MIN(pue.status + pe.status) AS status,",
          "304:                       MIN(CASE WHEN (pue.status + pe.status = 0) THEN pue.timestart ELSE 9999999999 END) AS timestart,",
          "305:                       MAX(CASE WHEN (pue.status + pe.status = 0) THEN",
          "306:                                 (CASE WHEN pue.timeend = 0 THEN 9999999999 ELSE pue.timeend END)",
          "307:                                 ELSE 0 END) AS timeend",
          "313:              WHERE ue.id IS NULL",
          "314:              GROUP BY pue.userid, e.id\";",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "314:             }",
          "315:         }",
          "318:         if ($instance->customint2) {",
          "319:             groups_add_member($instance->customint2, $ue->userid, 'enrol_meta', $instance->id);",
          "320:         }",
          "",
          "[Removed Lines]",
          "317:         $meta->enrol_user($instance, $ue->userid, null, 0, 0, $ue->status);",
          "",
          "[Added Lines]",
          "341:         $ue->status = ($ue->status == ENROL_USER_ACTIVE + ENROL_INSTANCE_ENABLED) ? ENROL_USER_ACTIVE : ENROL_USER_SUSPENDED;",
          "343:         $ue->timeend = ($ue->timeend == 9999999999) ? 0 : (int)$ue->timeend;",
          "345:         $ue->timestart = ($ue->timestart == 9999999999) ? 0 : (int)$ue->timestart;",
          "347:         $meta->enrol_user($instance, $ue->userid, null, $ue->timestart, $ue->timeend, $ue->status);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "371:     $rs->close();",
          "376:     $onecourse = $courseid ? \"AND e.courseid = :courseid\" : \"\";",
          "377:     list($enabled, $params) = $DB->get_in_or_equal(explode(',', $CFG->enrol_plugins_enabled), SQL_PARAMS_NAMED, 'e');",
          "378:     $params['courseid'] = $courseid;",
          "380:               FROM {user_enrolments} ue",
          "381:               JOIN {enrol} e ON (e.id = ue.enrolid AND e.enrol = 'meta' $onecourse)",
          "383:                       FROM {user_enrolments} xpue",
          "384:                       JOIN {enrol} xpe ON (xpe.id = xpue.enrolid AND xpe.enrol <> 'meta' AND xpe.enrol $enabled)",
          "385:                   GROUP BY xpue.userid, xpe.courseid",
          "386:                    ) pue ON (pue.courseid = e.customint1 AND pue.userid = ue.userid)",
          "388:     $rs = $DB->get_recordset_sql($sql, $params);",
          "389:     foreach($rs as $ue) {",
          "390:         if (!isset($instances[$ue->enrolid])) {",
          "391:             $instances[$ue->enrolid] = $DB->get_record('enrol', array('id'=>$ue->enrolid));",
          "392:         }",
          "393:         $instance = $instances[$ue->enrolid];",
          "398:             $parentcontext = context_course::instance($instance->customint1);",
          "399:             list($ignoreroles, $params) = $DB->get_in_or_equal($skiproles, SQL_PARAMS_NAMED, 'ri', false, -1);",
          "",
          "[Removed Lines]",
          "379:     $sql = \"SELECT ue.userid, ue.enrolid, pue.pstatus",
          "382:               JOIN (SELECT xpue.userid, xpe.courseid, MIN(xpue.status + xpe.status) AS pstatus",
          "387:              WHERE (pue.pstatus = 0 AND ue.status > 0) OR (pue.pstatus > 0 and ue.status = 0)\";",
          "394:         $ue->pstatus = ($ue->pstatus == ENROL_USER_ACTIVE) ? ENROL_USER_ACTIVE : ENROL_USER_SUSPENDED;",
          "396:         if ($ue->pstatus == ENROL_USER_ACTIVE and !$syncall and $unenrolaction != ENROL_EXT_REMOVED_UNENROL) {",
          "",
          "[Added Lines]",
          "409:     $sql = \"SELECT ue.userid, ue.enrolid, pue.pstatus, pue.ptimestart, pue.ptimeend",
          "412:               JOIN (SELECT xpue.userid, xpe.courseid, MIN(xpue.status + xpe.status) AS pstatus,",
          "413:                       MIN(CASE WHEN (xpue.status + xpe.status = 0) THEN xpue.timestart ELSE 9999999999 END) AS ptimestart,",
          "414:                       MAX(CASE WHEN (xpue.status + xpe.status = 0) THEN",
          "415:                                 (CASE WHEN xpue.timeend = 0 THEN 9999999999 ELSE xpue.timeend END)",
          "416:                                 ELSE 0 END) AS ptimeend",
          "421:              WHERE (pue.pstatus = 0 AND ue.status > 0) OR (pue.pstatus > 0 and ue.status = 0)",
          "422:              OR ((CASE WHEN pue.ptimestart = 9999999999 THEN 0 ELSE pue.ptimestart END) <> ue.timestart)",
          "423:              OR ((CASE WHEN pue.ptimeend = 9999999999 THEN 0 ELSE pue.ptimeend END) <> ue.timeend)\";",
          "430:         $ue->pstatus = ($ue->pstatus == ENROL_USER_ACTIVE + ENROL_INSTANCE_ENABLED) ? ENROL_USER_ACTIVE : ENROL_USER_SUSPENDED;",
          "431:         $ue->ptimeend = ($ue->ptimeend == 9999999999) ? 0 : (int)$ue->ptimeend;",
          "432:         $ue->ptimestart = ($ue->ptimestart == 9999999999) ? 0 : (int)$ue->ptimestart;",
          "434:         if ($ue->pstatus == ENROL_USER_ACTIVE and (!$ue->ptimeend || $ue->ptimeend > time())",
          "435:                 and !$syncall and $unenrolaction != ENROL_EXT_REMOVED_UNENROL) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "409:             }",
          "410:         }",
          "413:         if ($verbose) {",
          "414:             if ($ue->pstatus == ENROL_USER_ACTIVE) {",
          "415:                 mtrace(\"  unsuspending: $ue->userid ==> $instance->courseid\");",
          "",
          "[Removed Lines]",
          "412:         $meta->update_user_enrol($instance, $ue->userid, $ue->pstatus);",
          "",
          "[Added Lines]",
          "451:         $meta->update_user_enrol($instance, $ue->userid, $ue->pstatus, $ue->ptimestart, $ue->ptimeend);",
          "",
          "---------------"
        ],
        "enrol/meta/tests/plugin_test.php||enrol/meta/tests/plugin_test.php": [
          "File: enrol/meta/tests/plugin_test.php -> enrol/meta/tests/plugin_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "744:         $this->assertEquals('Physics course (3)', $groupinfo->name);",
          "745:     }",
          "746: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "750:     public function test_timeend() {",
          "751:         global $CFG, $DB;",
          "753:         $this->resetAfterTest(true);",
          "755:         $timeinfuture = time() + DAYSECS;",
          "756:         $timeinpast = time() - DAYSECS;",
          "758:         $metalplugin = enrol_get_plugin('meta');",
          "759:         $manplugin = enrol_get_plugin('manual');",
          "761:         $user1 = $this->getDataGenerator()->create_user();",
          "762:         $user2 = $this->getDataGenerator()->create_user();",
          "763:         $user3 = $this->getDataGenerator()->create_user();",
          "764:         $user4 = $this->getDataGenerator()->create_user();",
          "765:         $user5 = $this->getDataGenerator()->create_user();",
          "767:         $course1 = $this->getDataGenerator()->create_course();",
          "768:         $course2 = $this->getDataGenerator()->create_course();",
          "769:         $course3 = $this->getDataGenerator()->create_course();",
          "770:         $manual1 = $DB->get_record('enrol', array('courseid' => $course1->id, 'enrol' => 'manual'), '*', MUST_EXIST);",
          "772:         $student = $DB->get_record('role', array('shortname' => 'student'));",
          "774:         $this->enable_plugin();",
          "777:         $meta2id = $metalplugin->add_instance($course2, array('customint1' => $course1->id));",
          "779:         $expectedenrolments = array(",
          "780:             $user1->id => array(0, 0, ENROL_USER_ACTIVE),",
          "781:             $user2->id => array($timeinpast, 0, ENROL_USER_ACTIVE),",
          "782:             $user3->id => array(0, $timeinfuture, ENROL_USER_ACTIVE),",
          "783:             $user4->id => array($timeinpast, $timeinfuture, ENROL_USER_ACTIVE),",
          "784:             $user5->id => array(0, 0, ENROL_USER_SUSPENDED),",
          "785:         );",
          "786:         foreach ($expectedenrolments as $userid => $data) {",
          "787:             $expectedenrolments[$userid] = (object)(array('userid' => $userid) +",
          "788:                     array_combine(array('timestart', 'timeend', 'status'), $data));",
          "789:         }",
          "792:         foreach ($expectedenrolments as $e) {",
          "793:             $manplugin->enrol_user($manual1, $e->userid, $student->id, $e->timestart, $e->timeend, $e->status);",
          "794:         }",
          "796:         $enrolments = $DB->get_records('user_enrolments', array('enrolid' => $manual1->id), 'userid', 'userid, timestart, timeend, status');",
          "797:         $this->assertEquals($expectedenrolments, $enrolments);",
          "800:         $enrolments = $DB->get_records('user_enrolments', array('enrolid' => $meta2id), '', 'userid, timestart, timeend, status');",
          "801:         $this->assertEquals($expectedenrolments, $enrolments);",
          "804:         $meta3id = $metalplugin->add_instance($course3, array('customint1' => $course1->id));",
          "805:         enrol_meta_sync($course3->id);",
          "808:         $enrolments = $DB->get_records('user_enrolments', array('enrolid' => $meta3id), '', 'userid, timestart, timeend, status');",
          "809:         $this->assertEquals($expectedenrolments, $enrolments);",
          "812:         $expectedenrolments[$user2->id]->timestart = $timeinpast - 60;",
          "813:         $expectedenrolments[$user3->id]->timeend = $timeinfuture + 60;",
          "814:         $expectedenrolments[$user4->id]->status = ENROL_USER_SUSPENDED;",
          "815:         $expectedenrolments[$user5->id]->status = ENROL_USER_ACTIVE;",
          "816:         foreach ($expectedenrolments as $e) {",
          "817:             $manplugin->update_user_enrol($manual1, $e->userid, $e->status, $e->timestart, $e->timeend);",
          "818:         }",
          "821:         $enrolments = $DB->get_records('user_enrolments', array('enrolid' => $meta2id), '', 'userid, timestart, timeend, status');",
          "822:         $this->assertEquals($expectedenrolments, $enrolments);",
          "823:         $enrolments = $DB->get_records('user_enrolments', array('enrolid' => $meta3id), '', 'userid, timestart, timeend, status');",
          "824:         $this->assertEquals($expectedenrolments, $enrolments);",
          "827:         $sink = $this->redirectEvents();",
          "828:         $expectedenrolments[$user2->id]->timestart = $timeinpast;",
          "829:         $expectedenrolments[$user3->id]->timeend = $timeinfuture;",
          "830:         $expectedenrolments[$user4->id]->status = ENROL_USER_ACTIVE;",
          "831:         $expectedenrolments[$user5->id]->status = ENROL_USER_SUSPENDED;",
          "832:         foreach ($expectedenrolments as $e) {",
          "833:             $manplugin->update_user_enrol($manual1, $e->userid, $e->status, $e->timestart, $e->timeend);",
          "834:         }",
          "837:         enrol_meta_sync($course3->id);",
          "839:         $enrolments = $DB->get_records('user_enrolments', array('enrolid' => $meta2id), '', 'userid, timestart, timeend, status');",
          "840:         $this->assertNotEquals($expectedenrolments, $enrolments);",
          "842:         $enrolments = $DB->get_records('user_enrolments', array('enrolid' => $meta3id), '', 'userid, timestart, timeend, status');",
          "843:         $this->assertEquals($expectedenrolments, $enrolments);",
          "845:         $sink->close();",
          "848:         $manplugin->update_status($manual1, ENROL_INSTANCE_DISABLED);",
          "849:         $allsuspendedenrolemnts = array_combine(array_keys($expectedenrolments), array_fill(0, 5, ENROL_USER_SUSPENDED));",
          "850:         enrol_meta_sync($course3->id);",
          "851:         $enrolmentstatuses = $DB->get_records_menu('user_enrolments', array('enrolid' => $meta3id), '', 'userid, status');",
          "852:         $this->assertEquals($allsuspendedenrolemnts, $enrolmentstatuses);",
          "854:         $manplugin->update_status($manual1, ENROL_INSTANCE_ENABLED);",
          "855:         enrol_meta_sync($course3->id);",
          "856:         $enrolments = $DB->get_records('user_enrolments', array('enrolid' => $meta3id), '', 'userid, timestart, timeend, status');",
          "857:         $this->assertEquals($expectedenrolments, $enrolments);",
          "858:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab006d43e48add8e5495141d4d750c1531772ca2",
      "candidate_info": {
        "commit_hash": "ab006d43e48add8e5495141d4d750c1531772ca2",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/ab006d43e48add8e5495141d4d750c1531772ca2",
        "files": [
          "enrol/meta/locallib.php"
        ],
        "message": "MDL-50744 enrol_meta: fix incorrect role assign",
        "before_after_code_files": [
          "enrol/meta/locallib.php||enrol/meta/locallib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "enrol/meta/locallib.php||enrol/meta/locallib.php"
          ],
          "candidate": [
            "enrol/meta/locallib.php||enrol/meta/locallib.php"
          ]
        }
      },
      "candidate_diff": {
        "enrol/meta/locallib.php||enrol/meta/locallib.php": [
          "File: enrol/meta/locallib.php -> enrol/meta/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:             }",
          "315:         }",
          "318:         if ($instance->customint2) {",
          "319:             groups_add_member($instance->customint2, $ue->userid, 'enrol_meta', $instance->id);",
          "320:         }",
          "",
          "[Removed Lines]",
          "317:         $meta->enrol_user($instance, $ue->userid, $ue->status);",
          "",
          "[Added Lines]",
          "317:         $meta->enrol_user($instance, $ue->userid, null, 0, 0, $ue->status);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dff6cdc88355f22ebaaf8f00c44a1ad51d272344",
      "candidate_info": {
        "commit_hash": "dff6cdc88355f22ebaaf8f00c44a1ad51d272344",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/dff6cdc88355f22ebaaf8f00c44a1ad51d272344",
        "files": [
          "enrol/meta/locallib.php"
        ],
        "message": "MDL-50744 enrol_meta: fix incorrect role assign",
        "before_after_code_files": [
          "enrol/meta/locallib.php||enrol/meta/locallib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "enrol/meta/locallib.php||enrol/meta/locallib.php"
          ],
          "candidate": [
            "enrol/meta/locallib.php||enrol/meta/locallib.php"
          ]
        }
      },
      "candidate_diff": {
        "enrol/meta/locallib.php||enrol/meta/locallib.php": [
          "File: enrol/meta/locallib.php -> enrol/meta/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:         if ($unenrolaction == ENROL_EXT_REMOVED_UNENROL) {",
          "221:         } else if ($unenrolaction == ENROL_EXT_REMOVED_SUSPEND) {",
          "222:             if ($ue->status != ENROL_USER_SUSPENDED) {",
          "",
          "[Removed Lines]",
          "219:             $plugin->unenrol_user($instance, $userid);",
          "",
          "[Added Lines]",
          "219:             $plugin->unenrol_user($instance, $ue->userid, null, 0, 0, $ue->status);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7fbc80766b72ed1c9915698edd443ee8f6eafbd",
      "candidate_info": {
        "commit_hash": "f7fbc80766b72ed1c9915698edd443ee8f6eafbd",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/f7fbc80766b72ed1c9915698edd443ee8f6eafbd",
        "files": [
          "enrol/meta/locallib.php"
        ],
        "message": "MDL-50744 enrol_meta: fix incorrect role assign",
        "before_after_code_files": [
          "enrol/meta/locallib.php||enrol/meta/locallib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "enrol/meta/locallib.php||enrol/meta/locallib.php"
          ],
          "candidate": [
            "enrol/meta/locallib.php||enrol/meta/locallib.php"
          ]
        }
      },
      "candidate_diff": {
        "enrol/meta/locallib.php||enrol/meta/locallib.php": [
          "File: enrol/meta/locallib.php -> enrol/meta/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:         if ($unenrolaction == ENROL_EXT_REMOVED_UNENROL) {",
          "221:         } else if ($unenrolaction == ENROL_EXT_REMOVED_SUSPEND) {",
          "222:             if ($ue->status != ENROL_USER_SUSPENDED) {",
          "",
          "[Removed Lines]",
          "219:             $plugin->unenrol_user($instance, $userid);",
          "",
          "[Added Lines]",
          "219:             $plugin->unenrol_user($instance, $ue->userid, null, 0, 0, $ue->status);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "936facab28d8d8bd03f38da42cb80fafba1a06db",
      "candidate_info": {
        "commit_hash": "936facab28d8d8bd03f38da42cb80fafba1a06db",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/936facab28d8d8bd03f38da42cb80fafba1a06db",
        "files": [
          "enrol/meta/locallib.php"
        ],
        "message": "MDL-50744 enrol_meta: fix incorrect role assign (#2)",
        "before_after_code_files": [
          "enrol/meta/locallib.php||enrol/meta/locallib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "enrol/meta/locallib.php||enrol/meta/locallib.php"
          ],
          "candidate": [
            "enrol/meta/locallib.php||enrol/meta/locallib.php"
          ]
        }
      },
      "candidate_diff": {
        "enrol/meta/locallib.php||enrol/meta/locallib.php": [
          "File: enrol/meta/locallib.php -> enrol/meta/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:         if ($unenrolaction == ENROL_EXT_REMOVED_UNENROL) {",
          "221:         } else if ($unenrolaction == ENROL_EXT_REMOVED_SUSPEND) {",
          "222:             if ($ue->status != ENROL_USER_SUSPENDED) {",
          "",
          "[Removed Lines]",
          "219:             $plugin->unenrol_user($instance, $ue->userid, null, 0, 0, $ue->status);",
          "",
          "[Added Lines]",
          "219:             $plugin->unenrol_user($instance, $userid);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "309:             }",
          "310:         }",
          "313:         if ($verbose) {",
          "314:             mtrace(\"  enrolling: $ue->userid ==> $instance->courseid\");",
          "315:         }",
          "",
          "[Removed Lines]",
          "312:         $meta->enrol_user($instance, $ue->userid, $ue->status);",
          "",
          "[Added Lines]",
          "312:         $meta->enrol_user($instance, $ue->userid, null, 0, 0, $ue->status);",
          "",
          "---------------"
        ]
      }
    }
  ]
}