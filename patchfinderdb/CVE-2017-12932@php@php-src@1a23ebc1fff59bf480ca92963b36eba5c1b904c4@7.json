{
  "cve_id": "CVE-2017-12932",
  "cve_desc": "ext/standard/var_unserializer.re in PHP 7.0.x through 7.0.22 and 7.1.x through 7.1.8 is prone to a heap use after free while unserializing untrusted data, related to improper use of the hash API for key deletion in a situation with an invalid array size. Exploitation of this issue can have an unspecified impact on the integrity of PHP.",
  "repo": "php/php-src",
  "patch_hash": "1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
  "patch_info": {
    "commit_hash": "1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/1a23ebc1fff59bf480ca92963b36eba5c1b904c4",
    "files": [
      "NEWS",
      "ext/standard/tests/serialize/bug74103.phpt",
      "ext/standard/tests/serialize/bug75054.phpt",
      "ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re"
    ],
    "message": "Fixed bug #74103 and bug #75054\n\nDirectly fail unserialization when trying to acquire an r/R\nreference to an UNDEF HT slot. Previously this left an UNDEF and\nlater deleted the index/key from the HT.\n\nWhat actually caused the issue here is a combination of two\nfactors: First, the key deletion was performed using the hash API,\nrather than the symtable API, such that the element was not actually\nremoved if it used an integral string key. Second, a subsequent\ndeletion operation, while collecting trailing UNDEF ranges, would\nmark the element as available for reuse (leaving a corrupted HT\nstate with nNumOfElemnts > nNumUsed).\n\nFix this by failing early and dropping the deletion code.",
    "before_after_code_files": [
      "ext/standard/tests/serialize/bug74103.phpt||ext/standard/tests/serialize/bug74103.phpt",
      "ext/standard/tests/serialize/bug75054.phpt||ext/standard/tests/serialize/bug75054.phpt",
      "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
    ]
  },
  "patch_diff": {
    "ext/standard/tests/serialize/bug74103.phpt||ext/standard/tests/serialize/bug74103.phpt": [
      "File: ext/standard/tests/serialize/bug74103.phpt -> ext/standard/tests/serialize/bug74103.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #74103: heap-use-after-free when unserializing invalid array size",
      "3: --FILE--",
      "4: <?php",
      "5: var_dump(unserialize('a:7:{i:0;i:04;s:1:\"a\";i:2;i:00009617006;i:4;s:1:\"a\";i:4;s:1:\"a\";R:5;s:1:\"7\";R:3;s:1:\"a\";R:5;;s:18;}}'));",
      "6: ?>",
      "7: --EXPECTF--",
      "8: Notice: unserialize(): Error at offset 68 of 100 bytes in %s on line %d",
      "9: bool(false)",
      "",
      "---------------"
    ],
    "ext/standard/tests/serialize/bug75054.phpt||ext/standard/tests/serialize/bug75054.phpt": [
      "File: ext/standard/tests/serialize/bug75054.phpt -> ext/standard/tests/serialize/bug75054.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #75054: A Denial of Service Vulnerability was found when performing deserialization",
      "3: --FILE--",
      "4: <?php",
      "5: $poc = 'a:9:{i:0;s:4:\"0000\";i:0;s:4:\"0000\";i:0;R:2;s:4:\"5003\";R:2;s:4:\"0000\";R:2;s:4:\"0000\";R:2;s:4:\"';",
      "6: $poc .= \"\\x06\";",
      "7: $poc .= '000\";R:2;s:4:\"0000\";d:0;s:4:\"0000\";a:9:{s:4:\"0000\";';",
      "8: var_dump(unserialize($poc));",
      "9: ?>",
      "10: --EXPECTF--",
      "11: Notice: unserialize(): Error at offset 43 of 145 bytes in %s on line %d",
      "12: bool(false)",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
      "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "405:    return 0;",
      "406:   }",
      "418:   zval_dtor(&key);",
      "420:   if (elements && *(*p-1) != ';' && *(*p-1) != '}') {",
      "",
      "[Removed Lines]",
      "408:   if (UNEXPECTED(Z_ISUNDEF_P(data))) {",
      "409:    if (Z_TYPE(key) == IS_LONG) {",
      "410:     zend_hash_index_del(ht, Z_LVAL(key));",
      "411:    } else {",
      "412:     zend_hash_del_ind(ht, Z_STR(key));",
      "413:    }",
      "414:   } else {",
      "415:    var_push_dtor(var_hash, data);",
      "416:   }",
      "",
      "[Added Lines]",
      "408:   var_push_dtor(var_hash, data);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "581:  start = cursor;",
      "585: {",
      "586:  YYCTYPE yych;",
      "587:  static const unsigned char yybm[] = {",
      "",
      "[Removed Lines]",
      "584: #line 585 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "575: #line 576 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "622:  yych = *YYCURSOR;",
      "623:  switch (yych) {",
      "624:  case 'C':",
      "626:  case 'N': goto yy5;",
      "633:  case 'o': goto yy12;",
      "638:  }",
      "639: yy2:",
      "642: yy3:",
      "644:  { return 0; }",
      "646: yy4:",
      "647:  yych = *(YYMARKER = ++YYCURSOR);",
      "649:  goto yy3;",
      "650: yy5:",
      "651:  yych = *++YYCURSOR;",
      "653:  goto yy3;",
      "654: yy6:",
      "655:  yych = *(YYMARKER = ++YYCURSOR);",
      "657:  goto yy3;",
      "658: yy7:",
      "659:  yych = *(YYMARKER = ++YYCURSOR);",
      "661:  goto yy3;",
      "662: yy8:",
      "663:  yych = *(YYMARKER = ++YYCURSOR);",
      "665:  goto yy3;",
      "666: yy9:",
      "667:  yych = *(YYMARKER = ++YYCURSOR);",
      "669:  goto yy3;",
      "670: yy10:",
      "671:  yych = *(YYMARKER = ++YYCURSOR);",
      "673:  goto yy3;",
      "674: yy11:",
      "675:  yych = *(YYMARKER = ++YYCURSOR);",
      "677:  goto yy3;",
      "678: yy12:",
      "679:  yych = *(YYMARKER = ++YYCURSOR);",
      "681:  goto yy3;",
      "682: yy13:",
      "683:  yych = *(YYMARKER = ++YYCURSOR);",
      "685:  goto yy3;",
      "686: yy14:",
      "687:  ++YYCURSOR;",
      "689:  {",
      "691:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
      "693: }",
      "698: yy17:",
      "699:  yych = *++YYCURSOR;",
      "700:  if (yybm[0+yych] & 128) {",
      "702:  }",
      "704: yy18:",
      "705:  YYCURSOR = YYMARKER;",
      "706:  goto yy3;",
      "707: yy19:",
      "708:  yych = *++YYCURSOR;",
      "711:  }",
      "712:  goto yy18;",
      "720:  if (yych <= '/') goto yy18;",
      "722:  yych = *++YYCURSOR;",
      "841:   }",
      "858:   }",
      "861:  }",
      "868:  }",
      "872:  }",
      "879:  yych = *++YYCURSOR;",
      "880:  if (yych <= ',') {",
      "882:  } else {",
      "884:   if (yych <= '/') goto yy18;",
      "886:   goto yy18;",
      "887:  }",
      "889:  yych = *++YYCURSOR;",
      "890:  if (yych <= '/') goto yy18;",
      "893:  ++YYCURSOR;",
      "894:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "895:  yych = *YYCURSOR;",
      "896:  if (yych <= '/') goto yy18;",
      "899:  yych = *++YYCURSOR;",
      "901:  ++YYCURSOR;",
      "917:  if (yych <= '/') goto yy18;",
      "918:  if (yych <= '9') goto yy34;",
      "919:  goto yy18;",
      "921:  yych = *++YYCURSOR;",
      "922:  if (yych <= '/') goto yy18;",
      "923:  if (yych >= ':') goto yy18;",
      "925:  ++YYCURSOR;",
      "926:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "927:  yych = *YYCURSOR;",
      "928:  if (yych <= '/') goto yy18;",
      "931:  yych = *++YYCURSOR;",
      "933:  ++YYCURSOR;",
      "950:  }",
      "954:  }",
      "960:  yych = *++YYCURSOR;",
      "962:  if (yych <= '/') goto yy18;",
      "964:  goto yy18;",
      "966:  yych = *++YYCURSOR;",
      "967:  if (yych <= '/') goto yy18;",
      "968:  if (yych >= ':') goto yy18;",
      "970:  ++YYCURSOR;",
      "971:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "972:  yych = *YYCURSOR;",
      "973:  if (yych <= '/') goto yy18;",
      "976:  yych = *++YYCURSOR;",
      "978:  ++YYCURSOR;",
      "1017:  if (yych <= '/') goto yy18;",
      "1019:  goto yy18;",
      "1021:  yych = *++YYCURSOR;",
      "1022:  if (yych <= '/') goto yy18;",
      "1023:  if (yych >= ':') goto yy18;",
      "1025:  ++YYCURSOR;",
      "1026:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "1027:  yych = *YYCURSOR;",
      "1028:  if (yych <= '/') goto yy18;",
      "1031:  yych = *++YYCURSOR;",
      "1033:  ++YYCURSOR;",
      "1035:  {",
      "1052:   return 0;",
      "1053:  }",
      "1057:   return 0;",
      "1058:  }",
      "1064:  return 1;",
      "1065: }",
      "1087:  yych = *++YYCURSOR;",
      "1089:  goto yy18;",
      "1100:  yych = *++YYCURSOR;",
      "1102:  goto yy18;",
      "1109:  ++YYCURSOR;",
      "1136:  ++YYCURSOR;",
      "1137:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "1138:  yych = *YYCURSOR;",
      "1139:  if (yych <= ';') {",
      "1140:   if (yych <= '/') goto yy18;",
      "1142:   if (yych <= ':') goto yy18;",
      "1143:  } else {",
      "1144:   if (yych <= 'E') {",
      "1145:    if (yych <= 'D') goto yy18;",
      "1147:   } else {",
      "1149:    goto yy18;",
      "1150:   }",
      "1151:  }",
      "1153:  ++YYCURSOR;",
      "1155:  {",
      "1156: #if SIZEOF_ZEND_LONG == 4",
      "1157: use_double:",
      "",
      "[Removed Lines]",
      "625:  case 'O': goto yy13;",
      "627:  case 'R': goto yy2;",
      "628:  case 'S': goto yy10;",
      "629:  case 'a': goto yy11;",
      "630:  case 'b': goto yy6;",
      "631:  case 'd': goto yy8;",
      "632:  case 'i': goto yy7;",
      "634:  case 'r': goto yy4;",
      "635:  case 's': goto yy9;",
      "636:  case '}': goto yy14;",
      "637:  default: goto yy16;",
      "640:  yych = *(YYMARKER = ++YYCURSOR);",
      "641:  if (yych == ':') goto yy95;",
      "643: #line 962 \"ext/standard/var_unserializer.re\"",
      "645: #line 646 \"ext/standard/var_unserializer.c\"",
      "648:  if (yych == ':') goto yy89;",
      "652:  if (yych == ';') goto yy87;",
      "656:  if (yych == ':') goto yy83;",
      "660:  if (yych == ':') goto yy77;",
      "664:  if (yych == ':') goto yy53;",
      "668:  if (yych == ':') goto yy46;",
      "672:  if (yych == ':') goto yy39;",
      "676:  if (yych == ':') goto yy32;",
      "680:  if (yych == ':') goto yy25;",
      "684:  if (yych == ':') goto yy17;",
      "688: #line 956 \"ext/standard/var_unserializer.re\"",
      "694: #line 695 \"ext/standard/var_unserializer.c\"",
      "695: yy16:",
      "696:  yych = *++YYCURSOR;",
      "697:  goto yy3;",
      "701:   goto yy20;",
      "703:  if (yych == '+') goto yy19;",
      "709:  if (yybm[0+yych] & 128) {",
      "710:   goto yy20;",
      "713: yy20:",
      "714:  ++YYCURSOR;",
      "715:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "716:  yych = *YYCURSOR;",
      "717:  if (yybm[0+yych] & 128) {",
      "718:   goto yy20;",
      "719:  }",
      "721:  if (yych >= ';') goto yy18;",
      "723:  if (yych != '\"') goto yy18;",
      "724:  ++YYCURSOR;",
      "725: #line 804 \"ext/standard/var_unserializer.re\"",
      "726:  {",
      "727:  size_t len, len2, len3, maxlen;",
      "728:  zend_long elements;",
      "729:  char *str;",
      "730:  zend_string *class_name;",
      "731:  zend_class_entry *ce;",
      "732:  int incomplete_class = 0;",
      "734:  int custom_object = 0;",
      "736:  zval user_func;",
      "737:  zval retval;",
      "738:  zval args[1];",
      "740:     if (!var_hash) return 0;",
      "741:  if (*start == 'C') {",
      "742:   custom_object = 1;",
      "743:  }",
      "745:  len2 = len = parse_uiv(start + 2);",
      "746:  maxlen = max - YYCURSOR;",
      "747:  if (maxlen < len || len == 0) {",
      "749:   return 0;",
      "750:  }",
      "752:  str = (char*)YYCURSOR;",
      "754:  YYCURSOR += len;",
      "756:  if (*(YYCURSOR) != '\"') {",
      "758:   return 0;",
      "759:  }",
      "760:  if (*(YYCURSOR+1) != ':') {",
      "762:   return 0;",
      "763:  }",
      "765:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
      "766:  if (len3 != len)",
      "767:  {",
      "769:   return 0;",
      "770:  }",
      "772:  class_name = zend_string_init(str, len, 0);",
      "774:  do {",
      "775:   if(!unserialize_allowed_class(class_name, classes)) {",
      "776:    incomplete_class = 1;",
      "777:    ce = PHP_IC_ENTRY;",
      "778:    break;",
      "779:   }",
      "782:   BG(serialize_lock)++;",
      "783:   ce = zend_lookup_class(class_name);",
      "784:   if (ce) {",
      "785:    BG(serialize_lock)--;",
      "786:    if (EG(exception)) {",
      "787:     zend_string_release(class_name);",
      "788:     return 0;",
      "789:    }",
      "790:    break;",
      "791:   }",
      "792:   BG(serialize_lock)--;",
      "794:   if (EG(exception)) {",
      "795:    zend_string_release(class_name);",
      "796:    return 0;",
      "797:   }",
      "800:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
      "801:    incomplete_class = 1;",
      "802:    ce = PHP_IC_ENTRY;",
      "803:    break;",
      "804:   }",
      "807:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
      "809:   ZVAL_STR_COPY(&args[0], class_name);",
      "810:   BG(serialize_lock)++;",
      "811:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
      "812:    BG(serialize_lock)--;",
      "813:    if (EG(exception)) {",
      "814:     zend_string_release(class_name);",
      "815:     zval_ptr_dtor(&user_func);",
      "816:     zval_ptr_dtor(&args[0]);",
      "817:     return 0;",
      "818:    }",
      "819:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
      "820:    incomplete_class = 1;",
      "821:    ce = PHP_IC_ENTRY;",
      "822:    zval_ptr_dtor(&user_func);",
      "823:    zval_ptr_dtor(&args[0]);",
      "824:    break;",
      "825:   }",
      "826:   BG(serialize_lock)--;",
      "827:   zval_ptr_dtor(&retval);",
      "828:   if (EG(exception)) {",
      "829:    zend_string_release(class_name);",
      "830:    zval_ptr_dtor(&user_func);",
      "831:    zval_ptr_dtor(&args[0]);",
      "832:    return 0;",
      "833:   }",
      "836:   BG(serialize_lock)++;",
      "837:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
      "838:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
      "839:    incomplete_class = 1;",
      "840:    ce = PHP_IC_ENTRY;",
      "842:   BG(serialize_lock)--;",
      "844:   zval_ptr_dtor(&user_func);",
      "845:   zval_ptr_dtor(&args[0]);",
      "846:   break;",
      "847:  } while (1);",
      "851:  if (custom_object) {",
      "852:   int ret;",
      "854:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
      "856:   if (ret && incomplete_class) {",
      "857:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "859:   zend_string_release(class_name);",
      "860:   return ret;",
      "863:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
      "865:  if (elements < 0) {",
      "866:     zend_string_release(class_name);",
      "867:     return 0;",
      "870:  if (incomplete_class) {",
      "871:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "873:  zend_string_release(class_name);",
      "875:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "876: }",
      "877: #line 878 \"ext/standard/var_unserializer.c\"",
      "878: yy25:",
      "881:   if (yych != '+') goto yy18;",
      "883:   if (yych <= '-') goto yy26;",
      "885:   if (yych <= '9') goto yy27;",
      "888: yy26:",
      "891:  if (yych >= ':') goto yy18;",
      "892: yy27:",
      "897:  if (yych <= '9') goto yy27;",
      "898:  if (yych >= ';') goto yy18;",
      "900:  if (yych != '\"') goto yy18;",
      "902: #line 793 \"ext/standard/var_unserializer.re\"",
      "903:  {",
      "904:  zend_long elements;",
      "905:     if (!var_hash) return 0;",
      "907:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
      "908:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "909:   return 0;",
      "910:  }",
      "911:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "912: }",
      "913: #line 914 \"ext/standard/var_unserializer.c\"",
      "914: yy32:",
      "915:  yych = *++YYCURSOR;",
      "916:  if (yych == '+') goto yy33;",
      "920: yy33:",
      "924: yy34:",
      "929:  if (yych <= '9') goto yy34;",
      "930:  if (yych >= ';') goto yy18;",
      "932:  if (yych != '{') goto yy18;",
      "934: #line 769 \"ext/standard/var_unserializer.re\"",
      "935:  {",
      "936:  zend_long elements = parse_iv(start + 2);",
      "939:     if (!var_hash) return 0;",
      "941:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "942:   return 0;",
      "943:  }",
      "945:  array_init_size(rval, elements);",
      "946:  if (elements) {",
      "949:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
      "952:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
      "953:   return 0;",
      "956:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
      "957: }",
      "958: #line 959 \"ext/standard/var_unserializer.c\"",
      "959: yy39:",
      "961:  if (yych == '+') goto yy40;",
      "963:  if (yych <= '9') goto yy41;",
      "965: yy40:",
      "969: yy41:",
      "974:  if (yych <= '9') goto yy41;",
      "975:  if (yych >= ';') goto yy18;",
      "977:  if (yych != '\"') goto yy18;",
      "979: #line 735 \"ext/standard/var_unserializer.re\"",
      "980:  {",
      "981:  size_t len, maxlen;",
      "982:  zend_string *str;",
      "984:  len = parse_uiv(start + 2);",
      "985:  maxlen = max - YYCURSOR;",
      "986:  if (maxlen < len) {",
      "988:   return 0;",
      "989:  }",
      "991:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
      "992:   return 0;",
      "993:  }",
      "995:  if (*(YYCURSOR) != '\"') {",
      "996:   zend_string_free(str);",
      "998:   return 0;",
      "999:  }",
      "1001:  if (*(YYCURSOR + 1) != ';') {",
      "1002:   efree(str);",
      "1004:   return 0;",
      "1005:  }",
      "1007:  YYCURSOR += 2;",
      "1010:  ZVAL_STR(rval, str);",
      "1011:  return 1;",
      "1012: }",
      "1013: #line 1014 \"ext/standard/var_unserializer.c\"",
      "1014: yy46:",
      "1015:  yych = *++YYCURSOR;",
      "1016:  if (yych == '+') goto yy47;",
      "1018:  if (yych <= '9') goto yy48;",
      "1020: yy47:",
      "1024: yy48:",
      "1029:  if (yych <= '9') goto yy48;",
      "1030:  if (yych >= ';') goto yy18;",
      "1032:  if (yych != '\"') goto yy18;",
      "1034: #line 703 \"ext/standard/var_unserializer.re\"",
      "1036:  size_t len, maxlen;",
      "1037:  char *str;",
      "1039:  len = parse_uiv(start + 2);",
      "1040:  maxlen = max - YYCURSOR;",
      "1041:  if (maxlen < len) {",
      "1043:   return 0;",
      "1044:  }",
      "1046:  str = (char*)YYCURSOR;",
      "1048:  YYCURSOR += len;",
      "1050:  if (*(YYCURSOR) != '\"') {",
      "1055:  if (*(YYCURSOR + 1) != ';') {",
      "1060:  YYCURSOR += 2;",
      "1063:  ZVAL_STRINGL(rval, str, len);",
      "1066: #line 1067 \"ext/standard/var_unserializer.c\"",
      "1067: yy53:",
      "1068:  yych = *++YYCURSOR;",
      "1069:  if (yych <= '/') {",
      "1070:   if (yych <= ',') {",
      "1071:    if (yych == '+') goto yy57;",
      "1072:    goto yy18;",
      "1073:   } else {",
      "1074:    if (yych <= '-') goto yy55;",
      "1075:    if (yych <= '.') goto yy60;",
      "1076:    goto yy18;",
      "1077:   }",
      "1078:  } else {",
      "1079:   if (yych <= 'I') {",
      "1080:    if (yych <= '9') goto yy58;",
      "1081:    if (yych <= 'H') goto yy18;",
      "1082:    goto yy56;",
      "1083:   } else {",
      "1084:    if (yych != 'N') goto yy18;",
      "1085:   }",
      "1086:  }",
      "1088:  if (yych == 'A') goto yy76;",
      "1090: yy55:",
      "1091:  yych = *++YYCURSOR;",
      "1092:  if (yych <= '/') {",
      "1093:   if (yych == '.') goto yy60;",
      "1094:   goto yy18;",
      "1095:  } else {",
      "1096:   if (yych <= '9') goto yy58;",
      "1097:   if (yych != 'I') goto yy18;",
      "1098:  }",
      "1099: yy56:",
      "1101:  if (yych == 'N') goto yy72;",
      "1103: yy57:",
      "1104:  yych = *++YYCURSOR;",
      "1105:  if (yych == '.') goto yy60;",
      "1106:  if (yych <= '/') goto yy18;",
      "1107:  if (yych >= ':') goto yy18;",
      "1108: yy58:",
      "1110:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "1111:  yych = *YYCURSOR;",
      "1112:  if (yych <= ':') {",
      "1113:   if (yych <= '.') {",
      "1114:    if (yych <= '-') goto yy18;",
      "1115:    goto yy70;",
      "1116:   } else {",
      "1117:    if (yych <= '/') goto yy18;",
      "1118:    if (yych <= '9') goto yy58;",
      "1119:    goto yy18;",
      "1120:   }",
      "1121:  } else {",
      "1122:   if (yych <= 'E') {",
      "1123:    if (yych <= ';') goto yy63;",
      "1124:    if (yych <= 'D') goto yy18;",
      "1125:    goto yy65;",
      "1126:   } else {",
      "1127:    if (yych == 'e') goto yy65;",
      "1128:    goto yy18;",
      "1129:   }",
      "1130:  }",
      "1131: yy60:",
      "1132:  yych = *++YYCURSOR;",
      "1133:  if (yych <= '/') goto yy18;",
      "1134:  if (yych >= ':') goto yy18;",
      "1135: yy61:",
      "1141:   if (yych <= '9') goto yy61;",
      "1146:    goto yy65;",
      "1148:    if (yych == 'e') goto yy65;",
      "1152: yy63:",
      "1154: #line 694 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "616:  case 'O': goto yy4;",
      "618:  case 'R': goto yy6;",
      "619:  case 'S': goto yy7;",
      "620:  case 'a': goto yy8;",
      "621:  case 'b': goto yy9;",
      "622:  case 'd': goto yy10;",
      "623:  case 'i': goto yy11;",
      "625:  case 'r': goto yy13;",
      "626:  case 's': goto yy14;",
      "627:  case '}': goto yy15;",
      "628:  default: goto yy2;",
      "631:  ++YYCURSOR;",
      "633: #line 951 \"ext/standard/var_unserializer.re\"",
      "635: #line 636 \"ext/standard/var_unserializer.c\"",
      "638:  if (yych == ':') goto yy17;",
      "642:  if (yych == ';') goto yy19;",
      "646:  if (yych == ':') goto yy21;",
      "650:  if (yych == ':') goto yy22;",
      "654:  if (yych == ':') goto yy23;",
      "658:  if (yych == ':') goto yy24;",
      "662:  if (yych == ':') goto yy25;",
      "666:  if (yych == ':') goto yy26;",
      "670:  if (yych == ':') goto yy27;",
      "674:  if (yych == ':') goto yy28;",
      "677:  yych = *(YYMARKER = ++YYCURSOR);",
      "678:  if (yych == ':') goto yy29;",
      "679:  goto yy3;",
      "680: yy15:",
      "682: #line 945 \"ext/standard/var_unserializer.re\"",
      "688: #line 689 \"ext/standard/var_unserializer.c\"",
      "692:   goto yy31;",
      "694:  if (yych == '+') goto yy30;",
      "699:  ++YYCURSOR;",
      "700: #line 629 \"ext/standard/var_unserializer.re\"",
      "701:  {",
      "703:  ZVAL_NULL(rval);",
      "704:  return 1;",
      "705: }",
      "706: #line 707 \"ext/standard/var_unserializer.c\"",
      "707: yy21:",
      "709:  if (yych <= ',') {",
      "710:   if (yych == '+') goto yy33;",
      "711:   goto yy18;",
      "712:  } else {",
      "713:   if (yych <= '-') goto yy33;",
      "714:   if (yych <= '/') goto yy18;",
      "715:   if (yych <= '9') goto yy34;",
      "716:   goto yy18;",
      "718: yy22:",
      "719:  yych = *++YYCURSOR;",
      "720:  if (yych == '+') goto yy36;",
      "721:  if (yych <= '/') goto yy18;",
      "722:  if (yych <= '9') goto yy37;",
      "724: yy23:",
      "725:  yych = *++YYCURSOR;",
      "726:  if (yych == '+') goto yy39;",
      "728:  if (yych <= '9') goto yy40;",
      "729:  goto yy18;",
      "730: yy24:",
      "732:  if (yych <= '/') goto yy18;",
      "733:  if (yych <= '1') goto yy42;",
      "734:  goto yy18;",
      "735: yy25:",
      "736:  yych = *++YYCURSOR;",
      "737:  if (yych <= '/') {",
      "738:   if (yych <= ',') {",
      "739:    if (yych == '+') goto yy43;",
      "740:    goto yy18;",
      "741:   } else {",
      "742:    if (yych <= '-') goto yy44;",
      "743:    if (yych <= '.') goto yy45;",
      "744:    goto yy18;",
      "746:  } else {",
      "747:   if (yych <= 'I') {",
      "748:    if (yych <= '9') goto yy46;",
      "749:    if (yych <= 'H') goto yy18;",
      "750:    goto yy48;",
      "751:   } else {",
      "752:    if (yych == 'N') goto yy49;",
      "753:    goto yy18;",
      "756: yy26:",
      "757:  yych = *++YYCURSOR;",
      "758:  if (yych <= ',') {",
      "759:   if (yych == '+') goto yy50;",
      "760:   goto yy18;",
      "761:  } else {",
      "762:   if (yych <= '-') goto yy50;",
      "763:   if (yych <= '/') goto yy18;",
      "764:   if (yych <= '9') goto yy51;",
      "765:   goto yy18;",
      "767: yy27:",
      "768:  yych = *++YYCURSOR;",
      "769:  if (yych <= ',') {",
      "770:   if (yych == '+') goto yy53;",
      "771:   goto yy18;",
      "772:  } else {",
      "773:   if (yych <= '-') goto yy53;",
      "774:   if (yych <= '/') goto yy18;",
      "775:   if (yych <= '9') goto yy54;",
      "776:   goto yy18;",
      "778: yy28:",
      "781:   if (yych == '+') goto yy56;",
      "782:   goto yy18;",
      "784:   if (yych <= '-') goto yy56;",
      "786:   if (yych <= '9') goto yy57;",
      "789: yy29:",
      "791:  if (yych == '+') goto yy59;",
      "793:  if (yych <= '9') goto yy60;",
      "794:  goto yy18;",
      "795: yy30:",
      "796:  yych = *++YYCURSOR;",
      "797:  if (yybm[0+yych] & 128) {",
      "798:   goto yy31;",
      "799:  }",
      "800:  goto yy18;",
      "801: yy31:",
      "805:  if (yybm[0+yych] & 128) {",
      "806:   goto yy31;",
      "807:  }",
      "809:  if (yych <= ':') goto yy62;",
      "810:  goto yy18;",
      "811: yy33:",
      "813:  if (yych <= '/') goto yy18;",
      "814:  if (yych >= ':') goto yy18;",
      "815: yy34:",
      "817:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "818:  yych = *YYCURSOR;",
      "821:  if (yych == ';') goto yy63;",
      "823: yy36:",
      "827: yy37:",
      "832:  if (yych <= '9') goto yy37;",
      "833:  if (yych <= ':') goto yy65;",
      "834:  goto yy18;",
      "835: yy39:",
      "837:  if (yych <= '/') goto yy18;",
      "838:  if (yych >= ':') goto yy18;",
      "839: yy40:",
      "841:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
      "842:  yych = *YYCURSOR;",
      "843:  if (yych <= '/') goto yy18;",
      "844:  if (yych <= '9') goto yy40;",
      "845:  if (yych <= ':') goto yy66;",
      "846:  goto yy18;",
      "847: yy42:",
      "848:  yych = *++YYCURSOR;",
      "849:  if (yych == ';') goto yy67;",
      "850:  goto yy18;",
      "851: yy43:",
      "852:  yych = *++YYCURSOR;",
      "853:  if (yych == '.') goto yy45;",
      "854:  if (yych <= '/') goto yy18;",
      "855:  if (yych <= '9') goto yy46;",
      "856:  goto yy18;",
      "857: yy44:",
      "858:  yych = *++YYCURSOR;",
      "859:  if (yych <= '/') {",
      "860:   if (yych != '.') goto yy18;",
      "861:  } else {",
      "862:   if (yych <= '9') goto yy46;",
      "863:   if (yych == 'I') goto yy48;",
      "864:   goto yy18;",
      "866: yy45:",
      "867:  yych = *++YYCURSOR;",
      "868:  if (yych <= '/') goto yy18;",
      "869:  if (yych <= '9') goto yy69;",
      "870:  goto yy18;",
      "871: yy46:",
      "872:  ++YYCURSOR;",
      "873:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "874:  yych = *YYCURSOR;",
      "875:  if (yych <= ':') {",
      "876:   if (yych <= '.') {",
      "877:    if (yych <= '-') goto yy18;",
      "878:    goto yy69;",
      "879:   } else {",
      "880:    if (yych <= '/') goto yy18;",
      "881:    if (yych <= '9') goto yy46;",
      "882:    goto yy18;",
      "883:   }",
      "884:  } else {",
      "885:   if (yych <= 'E') {",
      "886:    if (yych <= ';') goto yy71;",
      "887:    if (yych <= 'D') goto yy18;",
      "888:    goto yy73;",
      "889:   } else {",
      "890:    if (yych == 'e') goto yy73;",
      "891:    goto yy18;",
      "892:   }",
      "894: yy48:",
      "895:  yych = *++YYCURSOR;",
      "896:  if (yych == 'N') goto yy74;",
      "897:  goto yy18;",
      "898: yy49:",
      "899:  yych = *++YYCURSOR;",
      "900:  if (yych == 'A') goto yy75;",
      "901:  goto yy18;",
      "902: yy50:",
      "905:  if (yych >= ':') goto yy18;",
      "906: yy51:",
      "907:  ++YYCURSOR;",
      "908:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "909:  yych = *YYCURSOR;",
      "910:  if (yych <= '/') goto yy18;",
      "911:  if (yych <= '9') goto yy51;",
      "912:  if (yych == ';') goto yy76;",
      "914: yy53:",
      "918: yy54:",
      "923:  if (yych <= '9') goto yy54;",
      "924:  if (yych <= ':') goto yy78;",
      "925:  goto yy18;",
      "926: yy56:",
      "928:  if (yych <= '/') goto yy18;",
      "929:  if (yych >= ':') goto yy18;",
      "930: yy57:",
      "932:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "933:  yych = *YYCURSOR;",
      "935:  if (yych <= '9') goto yy57;",
      "936:  if (yych == ';') goto yy79;",
      "938: yy59:",
      "942: yy60:",
      "947:  if (yych <= '9') goto yy60;",
      "948:  if (yych <= ':') goto yy81;",
      "949:  goto yy18;",
      "950: yy62:",
      "952:  if (yych == '\"') goto yy82;",
      "953:  goto yy18;",
      "954: yy63:",
      "956: #line 580 \"ext/standard/var_unserializer.re\"",
      "958:  zend_long id;",
      "961:  if (!var_hash) return 0;",
      "963:  id = parse_iv(start + 2) - 1;",
      "964:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "968:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "972:  if (Z_ISREF_P(rval_ref)) {",
      "973:   ZVAL_COPY(rval, rval_ref);",
      "974:  } else {",
      "975:   ZVAL_NEW_REF(rval_ref, rval_ref);",
      "976:   ZVAL_COPY(rval, rval_ref);",
      "977:  }",
      "981: #line 982 \"ext/standard/var_unserializer.c\"",
      "982: yy65:",
      "984:  if (yych == '\"') goto yy84;",
      "986: yy66:",
      "988:  if (yych == '{') goto yy86;",
      "990: yy67:",
      "992: #line 635 \"ext/standard/var_unserializer.re\"",
      "993:  {",
      "995:  ZVAL_BOOL(rval, parse_iv(start + 2));",
      "996:  return 1;",
      "997: }",
      "998: #line 999 \"ext/standard/var_unserializer.c\"",
      "999: yy69:",
      "1005:   if (yych <= '9') goto yy69;",
      "1010:    goto yy73;",
      "1012:    if (yych == 'e') goto yy73;",
      "1016: yy71:",
      "1018: #line 683 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1160:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
      "1161:  return 1;",
      "1162: }",
      "1165:  yych = *++YYCURSOR;",
      "1166:  if (yych <= ',') {",
      "1168:  } else {",
      "1170:   if (yych <= '/') goto yy18;",
      "1172:   goto yy18;",
      "1173:  }",
      "1175:  yych = *++YYCURSOR;",
      "1191:  goto yy18;",
      "1193:  yych = *++YYCURSOR;",
      "1196:  goto yy18;",
      "1198:  ++YYCURSOR;",
      "1210:   } else {",
      "1213:   }",
      "1214:  }",
      "1219:  yych = *++YYCURSOR;",
      "1221:  ++YYCURSOR;",
      "1223:  {",
      "1234:  }",
      "1236:  return 1;",
      "1237: }",
      "1240:  yych = *++YYCURSOR;",
      "1242:  goto yy18;",
      "1258:  ++YYCURSOR;",
      "1266:  {",
      "1272:  }",
      "1281:    }",
      "1284:   }",
      "1290: }",
      "1298:  ++YYCURSOR;",
      "1300:  {",
      "1303:  return 1;",
      "1304: }",
      "1307:  ++YYCURSOR;",
      "1309:  {",
      "1313: }",
      "1316:  yych = *++YYCURSOR;",
      "1317:  if (yych <= ',') {",
      "1319:  } else {",
      "1321:   if (yych <= '/') goto yy18;",
      "1324:  }",
      "1330:  ++YYCURSOR;",
      "1331:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1332:  yych = *YYCURSOR;",
      "1333:  if (yych <= '/') goto yy18;",
      "1336:  ++YYCURSOR;",
      "1338:  {",
      "1346:   return 0;",
      "1347:  }",
      "1350:   return 0;",
      "1351:  }",
      "1356:  }",
      "1360:  return 1;",
      "1361: }",
      "1373: yy96:",
      "1374:  yych = *++YYCURSOR;",
      "1375:  if (yych <= '/') goto yy18;",
      "1377: yy97:",
      "1378:  ++YYCURSOR;",
      "1386:  {",
      "1404:  } else {",
      "1407:  }",
      "1409:  return 1;",
      "1410: }",
      "1412: }",
      "1416:  return 0;",
      "",
      "[Removed Lines]",
      "1163: #line 1164 \"ext/standard/var_unserializer.c\"",
      "1164: yy65:",
      "1167:   if (yych != '+') goto yy18;",
      "1169:   if (yych <= '-') goto yy66;",
      "1171:   if (yych <= '9') goto yy67;",
      "1174: yy66:",
      "1176:  if (yych <= ',') {",
      "1177:   if (yych == '+') goto yy69;",
      "1178:   goto yy18;",
      "1179:  } else {",
      "1180:   if (yych <= '-') goto yy69;",
      "1181:   if (yych <= '/') goto yy18;",
      "1182:   if (yych >= ':') goto yy18;",
      "1183:  }",
      "1184: yy67:",
      "1185:  ++YYCURSOR;",
      "1186:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1187:  yych = *YYCURSOR;",
      "1188:  if (yych <= '/') goto yy18;",
      "1189:  if (yych <= '9') goto yy67;",
      "1190:  if (yych == ';') goto yy63;",
      "1192: yy69:",
      "1194:  if (yych <= '/') goto yy18;",
      "1195:  if (yych <= '9') goto yy67;",
      "1197: yy70:",
      "1199:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
      "1200:  yych = *YYCURSOR;",
      "1201:  if (yych <= ';') {",
      "1202:   if (yych <= '/') goto yy18;",
      "1203:   if (yych <= '9') goto yy70;",
      "1204:   if (yych <= ':') goto yy18;",
      "1205:   goto yy63;",
      "1206:  } else {",
      "1207:   if (yych <= 'E') {",
      "1208:    if (yych <= 'D') goto yy18;",
      "1209:    goto yy65;",
      "1211:    if (yych == 'e') goto yy65;",
      "1212:    goto yy18;",
      "1215: yy72:",
      "1216:  yych = *++YYCURSOR;",
      "1217:  if (yych != 'F') goto yy18;",
      "1218: yy73:",
      "1220:  if (yych != ';') goto yy18;",
      "1222: #line 678 \"ext/standard/var_unserializer.re\"",
      "1226:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
      "1227:   ZVAL_DOUBLE(rval, php_get_nan());",
      "1228:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
      "1229:   ZVAL_DOUBLE(rval, php_get_inf());",
      "1230:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
      "1231:   ZVAL_DOUBLE(rval, -php_get_inf());",
      "1232:  } else {",
      "1233:   ZVAL_NULL(rval);",
      "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
      "1239: yy76:",
      "1241:  if (yych == 'N') goto yy73;",
      "1243: yy77:",
      "1244:  yych = *++YYCURSOR;",
      "1245:  if (yych <= ',') {",
      "1246:   if (yych != '+') goto yy18;",
      "1247:  } else {",
      "1248:   if (yych <= '-') goto yy78;",
      "1249:   if (yych <= '/') goto yy18;",
      "1250:   if (yych <= '9') goto yy79;",
      "1251:   goto yy18;",
      "1252:  }",
      "1253: yy78:",
      "1254:  yych = *++YYCURSOR;",
      "1255:  if (yych <= '/') goto yy18;",
      "1256:  if (yych >= ':') goto yy18;",
      "1257: yy79:",
      "1259:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1260:  yych = *YYCURSOR;",
      "1261:  if (yych <= '/') goto yy18;",
      "1262:  if (yych <= '9') goto yy79;",
      "1263:  if (yych != ';') goto yy18;",
      "1264:  ++YYCURSOR;",
      "1265: #line 652 \"ext/standard/var_unserializer.re\"",
      "1267: #if SIZEOF_ZEND_LONG == 4",
      "1268:  int digits = YYCURSOR - start - 3;",
      "1270:  if (start[2] == '-' || start[2] == '+') {",
      "1271:   digits--;",
      "1275:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
      "1276:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
      "1277:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
      "1279:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
      "1280:     goto use_double;",
      "1282:   } else {",
      "1283:    goto use_double;",
      "1285:  }",
      "1286: #endif",
      "1288:  ZVAL_LONG(rval, parse_iv(start + 2));",
      "1289:  return 1;",
      "1291: #line 1292 \"ext/standard/var_unserializer.c\"",
      "1292: yy83:",
      "1293:  yych = *++YYCURSOR;",
      "1294:  if (yych <= '/') goto yy18;",
      "1295:  if (yych >= '2') goto yy18;",
      "1296:  yych = *++YYCURSOR;",
      "1297:  if (yych != ';') goto yy18;",
      "1299: #line 646 \"ext/standard/var_unserializer.re\"",
      "1302:  ZVAL_BOOL(rval, parse_iv(start + 2));",
      "1305: #line 1306 \"ext/standard/var_unserializer.c\"",
      "1306: yy87:",
      "1308: #line 640 \"ext/standard/var_unserializer.re\"",
      "1311:  ZVAL_NULL(rval);",
      "1312:  return 1;",
      "1314: #line 1315 \"ext/standard/var_unserializer.c\"",
      "1315: yy89:",
      "1318:   if (yych != '+') goto yy18;",
      "1320:   if (yych <= '-') goto yy90;",
      "1322:   if (yych <= '9') goto yy91;",
      "1323:   goto yy18;",
      "1325: yy90:",
      "1326:  yych = *++YYCURSOR;",
      "1327:  if (yych <= '/') goto yy18;",
      "1328:  if (yych >= ':') goto yy18;",
      "1329: yy91:",
      "1334:  if (yych <= '9') goto yy91;",
      "1335:  if (yych != ';') goto yy18;",
      "1337: #line 615 \"ext/standard/var_unserializer.re\"",
      "1339:  zend_long id;",
      "1342:  if (!var_hash) return 0;",
      "1344:  id = parse_iv(start + 2) - 1;",
      "1345:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "1349:  if (rval_ref == rval) {",
      "1353:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "1354:   ZVAL_UNDEF(rval);",
      "1355:   return 1;",
      "1358:  ZVAL_COPY(rval, rval_ref);",
      "1362: #line 1363 \"ext/standard/var_unserializer.c\"",
      "1363: yy95:",
      "1364:  yych = *++YYCURSOR;",
      "1365:  if (yych <= ',') {",
      "1366:   if (yych != '+') goto yy18;",
      "1367:  } else {",
      "1368:   if (yych <= '-') goto yy96;",
      "1369:   if (yych <= '/') goto yy18;",
      "1370:   if (yych <= '9') goto yy97;",
      "1371:   goto yy18;",
      "1372:  }",
      "1376:  if (yych >= ':') goto yy18;",
      "1379:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
      "1380:  yych = *YYCURSOR;",
      "1381:  if (yych <= '/') goto yy18;",
      "1382:  if (yych <= '9') goto yy97;",
      "1383:  if (yych != ';') goto yy18;",
      "1384:  ++YYCURSOR;",
      "1385: #line 589 \"ext/standard/var_unserializer.re\"",
      "1387:  zend_long id;",
      "1390:  if (!var_hash) return 0;",
      "1392:  id = parse_iv(start + 2) - 1;",
      "1393:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "1394:   return 0;",
      "1395:  }",
      "1397:  zval_ptr_dtor(rval);",
      "1398:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "1399:   ZVAL_UNDEF(rval);",
      "1400:   return 1;",
      "1401:  }",
      "1402:  if (Z_ISREF_P(rval_ref)) {",
      "1403:   ZVAL_COPY(rval, rval_ref);",
      "1405:   ZVAL_NEW_REF(rval_ref, rval_ref);",
      "1406:   ZVAL_COPY(rval, rval_ref);",
      "1411: #line 1412 \"ext/standard/var_unserializer.c\"",
      "1413: #line 964 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1027: #line 1028 \"ext/standard/var_unserializer.c\"",
      "1028: yy73:",
      "1031:   if (yych == '+') goto yy88;",
      "1032:   goto yy18;",
      "1034:   if (yych <= '-') goto yy88;",
      "1036:   if (yych <= '9') goto yy89;",
      "1039: yy74:",
      "1041:  if (yych == 'F') goto yy91;",
      "1043: yy75:",
      "1045:  if (yych == 'N') goto yy91;",
      "1047: yy76:",
      "1049: #line 641 \"ext/standard/var_unserializer.re\"",
      "1050:  {",
      "1051: #if SIZEOF_ZEND_LONG == 4",
      "1052:  int digits = YYCURSOR - start - 3;",
      "1054:  if (start[2] == '-' || start[2] == '+') {",
      "1055:   digits--;",
      "1056:  }",
      "1059:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
      "1060:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
      "1061:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
      "1063:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
      "1064:     goto use_double;",
      "1065:    }",
      "1067:    goto use_double;",
      "1070: #endif",
      "1072:  ZVAL_LONG(rval, parse_iv(start + 2));",
      "1073:  return 1;",
      "1074: }",
      "1075: #line 1076 \"ext/standard/var_unserializer.c\"",
      "1076: yy78:",
      "1078:  if (yych == '\"') goto yy92;",
      "1079:  goto yy18;",
      "1080: yy79:",
      "1082: #line 605 \"ext/standard/var_unserializer.re\"",
      "1084:  zend_long id;",
      "1087:  if (!var_hash) return 0;",
      "1089:  id = parse_iv(start + 2) - 1;",
      "1090:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
      "1091:   return 0;",
      "1092:  }",
      "1094:  if (rval_ref == rval) {",
      "1095:   return 0;",
      "1098:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "1099:   return 0;",
      "1100:  }",
      "1102:  ZVAL_COPY(rval, rval_ref);",
      "1106: #line 1107 \"ext/standard/var_unserializer.c\"",
      "1107: yy81:",
      "1109:  if (yych == '\"') goto yy94;",
      "1111: yy82:",
      "1113: #line 793 \"ext/standard/var_unserializer.re\"",
      "1115:  size_t len, len2, len3, maxlen;",
      "1116:  zend_long elements;",
      "1117:  char *str;",
      "1118:  zend_string *class_name;",
      "1119:  zend_class_entry *ce;",
      "1120:  int incomplete_class = 0;",
      "1122:  int custom_object = 0;",
      "1124:  zval user_func;",
      "1125:  zval retval;",
      "1126:  zval args[1];",
      "1128:     if (!var_hash) return 0;",
      "1129:  if (*start == 'C') {",
      "1130:   custom_object = 1;",
      "1133:  len2 = len = parse_uiv(start + 2);",
      "1134:  maxlen = max - YYCURSOR;",
      "1135:  if (maxlen < len || len == 0) {",
      "1137:   return 0;",
      "1138:  }",
      "1140:  str = (char*)YYCURSOR;",
      "1142:  YYCURSOR += len;",
      "1144:  if (*(YYCURSOR) != '\"') {",
      "1146:   return 0;",
      "1147:  }",
      "1148:  if (*(YYCURSOR+1) != ':') {",
      "1150:   return 0;",
      "1151:  }",
      "1153:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
      "1154:  if (len3 != len)",
      "1155:  {",
      "1157:   return 0;",
      "1158:  }",
      "1160:  class_name = zend_string_init(str, len, 0);",
      "1162:  do {",
      "1163:   if(!unserialize_allowed_class(class_name, classes)) {",
      "1164:    incomplete_class = 1;",
      "1165:    ce = PHP_IC_ENTRY;",
      "1166:    break;",
      "1167:   }",
      "1170:   BG(serialize_lock)++;",
      "1171:   ce = zend_lookup_class(class_name);",
      "1172:   if (ce) {",
      "1173:    BG(serialize_lock)--;",
      "1174:    if (EG(exception)) {",
      "1175:     zend_string_release(class_name);",
      "1176:     return 0;",
      "1178:    break;",
      "1180:   BG(serialize_lock)--;",
      "1182:   if (EG(exception)) {",
      "1183:    zend_string_release(class_name);",
      "1184:    return 0;",
      "1185:   }",
      "1188:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
      "1189:    incomplete_class = 1;",
      "1190:    ce = PHP_IC_ENTRY;",
      "1191:    break;",
      "1192:   }",
      "1195:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
      "1197:   ZVAL_STR_COPY(&args[0], class_name);",
      "1198:   BG(serialize_lock)++;",
      "1199:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
      "1200:    BG(serialize_lock)--;",
      "1201:    if (EG(exception)) {",
      "1202:     zend_string_release(class_name);",
      "1203:     zval_ptr_dtor(&user_func);",
      "1204:     zval_ptr_dtor(&args[0]);",
      "1205:     return 0;",
      "1206:    }",
      "1207:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
      "1208:    incomplete_class = 1;",
      "1209:    ce = PHP_IC_ENTRY;",
      "1210:    zval_ptr_dtor(&user_func);",
      "1211:    zval_ptr_dtor(&args[0]);",
      "1212:    break;",
      "1213:   }",
      "1214:   BG(serialize_lock)--;",
      "1215:   zval_ptr_dtor(&retval);",
      "1216:   if (EG(exception)) {",
      "1217:    zend_string_release(class_name);",
      "1218:    zval_ptr_dtor(&user_func);",
      "1219:    zval_ptr_dtor(&args[0]);",
      "1220:    return 0;",
      "1221:   }",
      "1224:   BG(serialize_lock)++;",
      "1225:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
      "1226:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
      "1227:    incomplete_class = 1;",
      "1228:    ce = PHP_IC_ENTRY;",
      "1229:   }",
      "1230:   BG(serialize_lock)--;",
      "1232:   zval_ptr_dtor(&user_func);",
      "1233:   zval_ptr_dtor(&args[0]);",
      "1234:   break;",
      "1235:  } while (1);",
      "1239:  if (custom_object) {",
      "1240:   int ret;",
      "1242:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
      "1244:   if (ret && incomplete_class) {",
      "1245:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "1246:   }",
      "1247:   zend_string_release(class_name);",
      "1248:   return ret;",
      "1249:  }",
      "1251:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
      "1253:  if (elements < 0) {",
      "1254:     zend_string_release(class_name);",
      "1255:     return 0;",
      "1256:  }",
      "1258:  if (incomplete_class) {",
      "1259:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
      "1260:  }",
      "1261:  zend_string_release(class_name);",
      "1263:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "1265: #line 1266 \"ext/standard/var_unserializer.c\"",
      "1266: yy84:",
      "1268: #line 724 \"ext/standard/var_unserializer.re\"",
      "1270:  size_t len, maxlen;",
      "1271:  zend_string *str;",
      "1273:  len = parse_uiv(start + 2);",
      "1274:  maxlen = max - YYCURSOR;",
      "1275:  if (maxlen < len) {",
      "1277:   return 0;",
      "1278:  }",
      "1280:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
      "1281:   return 0;",
      "1282:  }",
      "1284:  if (*(YYCURSOR) != '\"') {",
      "1285:   zend_string_free(str);",
      "1287:   return 0;",
      "1288:  }",
      "1290:  if (*(YYCURSOR + 1) != ';') {",
      "1291:   efree(str);",
      "1293:   return 0;",
      "1294:  }",
      "1296:  YYCURSOR += 2;",
      "1299:  ZVAL_STR(rval, str);",
      "1302: #line 1303 \"ext/standard/var_unserializer.c\"",
      "1303: yy86:",
      "1305: #line 758 \"ext/standard/var_unserializer.re\"",
      "1307:  zend_long elements = parse_iv(start + 2);",
      "1310:     if (!var_hash) return 0;",
      "1312:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "1313:   return 0;",
      "1314:  }",
      "1316:  array_init_size(rval, elements);",
      "1317:  if (elements) {",
      "1320:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
      "1321:  }",
      "1323:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
      "1324:   return 0;",
      "1325:  }",
      "1327:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
      "1329: #line 1330 \"ext/standard/var_unserializer.c\"",
      "1330: yy88:",
      "1333:   if (yych == '+') goto yy96;",
      "1334:   goto yy18;",
      "1336:   if (yych <= '-') goto yy96;",
      "1338:   if (yych >= ':') goto yy18;",
      "1340: yy89:",
      "1345:  if (yych <= '9') goto yy89;",
      "1346:  if (yych == ';') goto yy71;",
      "1347:  goto yy18;",
      "1348: yy91:",
      "1349:  yych = *++YYCURSOR;",
      "1350:  if (yych == ';') goto yy97;",
      "1351:  goto yy18;",
      "1352: yy92:",
      "1354: #line 782 \"ext/standard/var_unserializer.re\"",
      "1356:  zend_long elements;",
      "1357:     if (!var_hash) return 0;",
      "1359:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
      "1360:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
      "1361:   return 0;",
      "1362:  }",
      "1363:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "1364: }",
      "1365: #line 1366 \"ext/standard/var_unserializer.c\"",
      "1366: yy94:",
      "1367:  ++YYCURSOR;",
      "1368: #line 692 \"ext/standard/var_unserializer.re\"",
      "1369:  {",
      "1370:  size_t len, maxlen;",
      "1371:  char *str;",
      "1373:  len = parse_uiv(start + 2);",
      "1374:  maxlen = max - YYCURSOR;",
      "1375:  if (maxlen < len) {",
      "1380:  str = (char*)YYCURSOR;",
      "1382:  YYCURSOR += len;",
      "1384:  if (*(YYCURSOR) != '\"') {",
      "1389:  if (*(YYCURSOR + 1) != ';') {",
      "1391:   return 0;",
      "1394:  YYCURSOR += 2;",
      "1397:  ZVAL_STRINGL(rval, str, len);",
      "1400: #line 1401 \"ext/standard/var_unserializer.c\"",
      "1404:  if (yych <= '9') goto yy89;",
      "1405:  goto yy18;",
      "1408: #line 667 \"ext/standard/var_unserializer.re\"",
      "1412:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
      "1413:   ZVAL_DOUBLE(rval, php_get_nan());",
      "1414:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
      "1415:   ZVAL_DOUBLE(rval, php_get_inf());",
      "1416:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
      "1417:   ZVAL_DOUBLE(rval, -php_get_inf());",
      "1419:   ZVAL_NULL(rval);",
      "1424: #line 1425 \"ext/standard/var_unserializer.c\"",
      "1426: #line 953 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
      "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
      "--- Hunk 1 ---",
      "[Context before]",
      "409:    return 0;",
      "410:   }",
      "422:   zval_dtor(&key);",
      "424:   if (elements && *(*p-1) != ';' && *(*p-1) != '}') {",
      "",
      "[Removed Lines]",
      "412:   if (UNEXPECTED(Z_ISUNDEF_P(data))) {",
      "413:    if (Z_TYPE(key) == IS_LONG) {",
      "414:     zend_hash_index_del(ht, Z_LVAL(key));",
      "415:    } else {",
      "416:     zend_hash_del_ind(ht, Z_STR(key));",
      "417:    }",
      "418:   } else {",
      "419:    var_push_dtor(var_hash, data);",
      "420:   }",
      "",
      "[Added Lines]",
      "412:   var_push_dtor(var_hash, data);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "597:   return 0;",
      "598:  }",
      "601:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "604:  }",
      "605:  if (Z_ISREF_P(rval_ref)) {",
      "606:   ZVAL_COPY(rval, rval_ref);",
      "607:  } else {",
      "",
      "[Removed Lines]",
      "600:  zval_ptr_dtor(rval);",
      "602:   ZVAL_UNDEF(rval);",
      "603:   return 1;",
      "",
      "[Added Lines]",
      "592:   return 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "628:  }",
      "630:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
      "633:  }",
      "635:  ZVAL_COPY(rval, rval_ref);",
      "",
      "[Removed Lines]",
      "631:   ZVAL_UNDEF(rval);",
      "632:   return 1;",
      "",
      "[Added Lines]",
      "621:   return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d02f953faf4afdd1576acb1380e4cd3c050ac599",
      "candidate_info": {
        "commit_hash": "d02f953faf4afdd1576acb1380e4cd3c050ac599",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/d02f953faf4afdd1576acb1380e4cd3c050ac599",
        "files": [
          "ext/standard/tests/serialize/bug74101.phpt",
          "ext/standard/tests/serialize/bug74614.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Fixed bug #74101 and bug #74614",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug74101.phpt||ext/standard/tests/serialize/bug74101.phpt",
          "ext/standard/tests/serialize/bug74614.phpt||ext/standard/tests/serialize/bug74614.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug74101.phpt||ext/standard/tests/serialize/bug74101.phpt": [
          "File: ext/standard/tests/serialize/bug74101.phpt -> ext/standard/tests/serialize/bug74101.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #74101: Unserialize Heap Use-After-Free (READ: 1) in zval_get_type",
          "3: --FILE--",
          "4: <?php",
          "5: $s = 'O:9:\"Exception\":799999999999999999999999999997:0i:0;a:0:{}i:2;i:0;i:0;R:2;';",
          "6: var_dump(unserialize($s));",
          "7: ?>",
          "8: --EXPECTF--",
          "9: Notice: unserialize(): Error at offset 48 of 74 bytes in %s on line %d",
          "10: bool(false)",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug74614.phpt||ext/standard/tests/serialize/bug74614.phpt": [
          "File: ext/standard/tests/serialize/bug74614.phpt -> ext/standard/tests/serialize/bug74614.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #74614: Use-after-free in PHP7's unserialize()",
          "3: --FILE--",
          "4: <?php",
          "6: unserialize('a:3020000000000000000000000000000001:{i:0;a:0:{}i:1;i:2;i:2;i:3;i:3;i:4;i:4;i:5;i:5;i:6;i:6;i:7;i:7;i:8;i:8;R:2;}');",
          "8: ?>",
          "9: --EXPECTF--",
          "10: Notice: unserialize(): Error at offset 38 of 113 bytes in %s on line %d",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "503:   && zend_hash_str_exists(&Z_OBJCE_P(rval)->function_table, \"__wakeup\", sizeof(\"__wakeup\")-1);",
          "505:  ht = Z_OBJPROP_P(rval);",
          "506:  zend_hash_extend(ht, zend_hash_num_elements(ht) + elements, (ht->u.flags & HASH_FLAG_PACKED));",
          "507:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, ht, elements, 1)) {",
          "508:   if (has_wakeup) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "506:  if (elements >= HT_MAX_SIZE - zend_hash_num_elements(ht)) {",
          "507:   return 0;",
          "508:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "578:  start = cursor;",
          "582: {",
          "583:  YYCTYPE yych;",
          "584:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "581: #line 582 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "585: #line 586 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "636: yy2:",
          "637:  ++YYCURSOR;",
          "638: yy3:",
          "640:  { return 0; }",
          "642: yy4:",
          "643:  yych = *(YYMARKER = ++YYCURSOR);",
          "644:  if (yych == ':') goto yy17;",
          "",
          "[Removed Lines]",
          "639: #line 959 \"ext/standard/var_unserializer.re\"",
          "641: #line 642 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "643: #line 963 \"ext/standard/var_unserializer.re\"",
          "645: #line 646 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "685:  goto yy3;",
          "686: yy15:",
          "687:  ++YYCURSOR;",
          "689:  {",
          "691:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "693: }",
          "695: yy17:",
          "696:  yych = *++YYCURSOR;",
          "697:  if (yybm[0+yych] & 128) {",
          "",
          "[Removed Lines]",
          "688: #line 953 \"ext/standard/var_unserializer.re\"",
          "694: #line 695 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "692: #line 957 \"ext/standard/var_unserializer.re\"",
          "698: #line 699 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "703:  goto yy3;",
          "704: yy19:",
          "705:  ++YYCURSOR;",
          "707:  {",
          "709:  ZVAL_NULL(rval);",
          "710:  return 1;",
          "711: }",
          "713: yy21:",
          "714:  yych = *++YYCURSOR;",
          "715:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "706: #line 637 \"ext/standard/var_unserializer.re\"",
          "712: #line 713 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "710: #line 641 \"ext/standard/var_unserializer.re\"",
          "716: #line 717 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "959:  goto yy18;",
          "960: yy63:",
          "961:  ++YYCURSOR;",
          "963:  {",
          "964:  zend_long id;",
          "",
          "[Removed Lines]",
          "962: #line 586 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "966: #line 590 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "986:  return 1;",
          "987: }",
          "989: yy65:",
          "990:  yych = *++YYCURSOR;",
          "991:  if (yych == '\"') goto yy84;",
          "",
          "[Removed Lines]",
          "988: #line 989 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "992: #line 993 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "996:  goto yy18;",
          "997: yy67:",
          "998:  ++YYCURSOR;",
          "1000:  {",
          "1002:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1003:  return 1;",
          "1004: }",
          "1006: yy69:",
          "1007:  ++YYCURSOR;",
          "1008:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "",
          "[Removed Lines]",
          "999: #line 643 \"ext/standard/var_unserializer.re\"",
          "1005: #line 1006 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1003: #line 647 \"ext/standard/var_unserializer.re\"",
          "1009: #line 1010 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1022:  }",
          "1023: yy71:",
          "1024:  ++YYCURSOR;",
          "1026:  {",
          "1027: #if SIZEOF_ZEND_LONG == 4",
          "1028: use_double:",
          "",
          "[Removed Lines]",
          "1025: #line 691 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1029: #line 695 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1031:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1032:  return 1;",
          "1033: }",
          "1035: yy73:",
          "1036:  yych = *++YYCURSOR;",
          "1037:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1034: #line 1035 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1038: #line 1039 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1053:  goto yy18;",
          "1054: yy76:",
          "1055:  ++YYCURSOR;",
          "1057:  {",
          "1058: #if SIZEOF_ZEND_LONG == 4",
          "1059:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1056: #line 649 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1060: #line 653 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1079:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1080:  return 1;",
          "1081: }",
          "1083: yy78:",
          "1084:  yych = *++YYCURSOR;",
          "1085:  if (yych == '\"') goto yy92;",
          "1086:  goto yy18;",
          "1087: yy79:",
          "1088:  ++YYCURSOR;",
          "1090:  {",
          "1091:  zend_long id;",
          "",
          "[Removed Lines]",
          "1082: #line 1083 \"ext/standard/var_unserializer.c\"",
          "1089: #line 612 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1086: #line 1087 \"ext/standard/var_unserializer.c\"",
          "1093: #line 616 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1112:  return 1;",
          "1113: }",
          "1115: yy81:",
          "1116:  yych = *++YYCURSOR;",
          "1117:  if (yych == '\"') goto yy94;",
          "1118:  goto yy18;",
          "1119: yy82:",
          "1120:  ++YYCURSOR;",
          "1122:  {",
          "1123:  size_t len, len2, len3, maxlen;",
          "1124:  zend_long elements;",
          "",
          "[Removed Lines]",
          "1114: #line 1115 \"ext/standard/var_unserializer.c\"",
          "1121: #line 801 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1118: #line 1119 \"ext/standard/var_unserializer.c\"",
          "1125: #line 805 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1271:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1272: }",
          "1274: yy84:",
          "1275:  ++YYCURSOR;",
          "1277:  {",
          "1278:  size_t len, maxlen;",
          "1279:  zend_string *str;",
          "",
          "[Removed Lines]",
          "1273: #line 1274 \"ext/standard/var_unserializer.c\"",
          "1276: #line 732 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1277: #line 1278 \"ext/standard/var_unserializer.c\"",
          "1280: #line 736 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1307:  ZVAL_STR(rval, str);",
          "1308:  return 1;",
          "1309: }",
          "1311: yy86:",
          "1312:  ++YYCURSOR;",
          "1314:  {",
          "1315:  zend_long elements = parse_iv(start + 2);",
          "1318:     if (!var_hash) return 0;",
          "1321:   return 0;",
          "1322:  }",
          "",
          "[Removed Lines]",
          "1310: #line 1311 \"ext/standard/var_unserializer.c\"",
          "1313: #line 766 \"ext/standard/var_unserializer.re\"",
          "1320:  if (elements < 0) {",
          "",
          "[Added Lines]",
          "1314: #line 1315 \"ext/standard/var_unserializer.c\"",
          "1317: #line 770 \"ext/standard/var_unserializer.re\"",
          "1324:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1335:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1336: }",
          "1338: yy88:",
          "1339:  yych = *++YYCURSOR;",
          "1340:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1337: #line 1338 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1341: #line 1342 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1359:  goto yy18;",
          "1360: yy92:",
          "1361:  ++YYCURSOR;",
          "1363:  {",
          "1364:  long elements;",
          "1365:     if (!var_hash) return 0;",
          "1367:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "1369:   return 0;",
          "1370:  }",
          "1371:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1372: }",
          "1374: yy94:",
          "1375:  ++YYCURSOR;",
          "1377:  {",
          "1378:  size_t len, maxlen;",
          "1379:  char *str;",
          "",
          "[Removed Lines]",
          "1362: #line 790 \"ext/standard/var_unserializer.re\"",
          "1368:  if (elements < 0) {",
          "1373: #line 1374 \"ext/standard/var_unserializer.c\"",
          "1376: #line 700 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1366: #line 794 \"ext/standard/var_unserializer.re\"",
          "1372:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "1377: #line 1378 \"ext/standard/var_unserializer.c\"",
          "1380: #line 704 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1405:  ZVAL_STRINGL(rval, str, len);",
          "1406:  return 1;",
          "1407: }",
          "1409: yy96:",
          "1410:  yych = *++YYCURSOR;",
          "1411:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1408: #line 1409 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1412: #line 1413 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1413:  goto yy18;",
          "1414: yy97:",
          "1415:  ++YYCURSOR;",
          "1417:  {",
          "",
          "[Removed Lines]",
          "1416: #line 675 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1420: #line 679 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1430:  return 1;",
          "1431: }",
          "1433: }",
          "1437:  return 0;",
          "",
          "[Removed Lines]",
          "1432: #line 1433 \"ext/standard/var_unserializer.c\"",
          "1434: #line 961 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1436: #line 1437 \"ext/standard/var_unserializer.c\"",
          "1438: #line 965 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "507:   && zend_hash_str_exists(&Z_OBJCE_P(rval)->function_table, \"__wakeup\", sizeof(\"__wakeup\")-1);",
          "509:  ht = Z_OBJPROP_P(rval);",
          "510:  zend_hash_extend(ht, zend_hash_num_elements(ht) + elements, (ht->u.flags & HASH_FLAG_PACKED));",
          "511:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, ht, elements, 1)) {",
          "512:   if (has_wakeup) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "510:  if (elements >= HT_MAX_SIZE - zend_hash_num_elements(ht)) {",
          "511:   return 0;",
          "512:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "770:     if (!var_hash) return 0;",
          "773:   return 0;",
          "774:  }",
          "",
          "[Removed Lines]",
          "772:  if (elements < 0) {",
          "",
          "[Added Lines]",
          "776:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "792:     if (!var_hash) return 0;",
          "794:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "796:   return 0;",
          "797:  }",
          "798:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "",
          "[Removed Lines]",
          "795:  if (elements < 0) {",
          "",
          "[Added Lines]",
          "799:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a795bd82651e61d05b96a3efca2042308a3af451",
      "candidate_info": {
        "commit_hash": "a795bd82651e61d05b96a3efca2042308a3af451",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/a795bd82651e61d05b96a3efca2042308a3af451",
        "files": [
          "Zend/zend_builtin_functions.c",
          "Zend/zend_execute_API.c",
          "Zend/zend_hash.c",
          "Zend/zend_hash.h",
          "Zend/zend_object_handlers.c",
          "Zend/zend_objects.c",
          "Zend/zend_string.c",
          "Zend/zend_vm_def.h",
          "Zend/zend_vm_execute.h",
          "ext/standard/array.c",
          "ext/standard/hrtime.c",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Optimize zend_hash_real_init()",
        "before_after_code_files": [
          "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c",
          "Zend/zend_execute_API.c||Zend/zend_execute_API.c",
          "Zend/zend_hash.c||Zend/zend_hash.c",
          "Zend/zend_hash.h||Zend/zend_hash.h",
          "Zend/zend_object_handlers.c||Zend/zend_object_handlers.c",
          "Zend/zend_objects.c||Zend/zend_objects.c",
          "Zend/zend_string.c||Zend/zend_string.c",
          "Zend/zend_vm_def.h||Zend/zend_vm_def.h",
          "ext/standard/array.c||ext/standard/array.c",
          "ext/standard/hrtime.c||ext/standard/hrtime.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c": [
          "File: Zend/zend_builtin_functions.c -> Zend/zend_builtin_functions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "475:  if (arg_count) {",
          "476:   array_init_size(return_value, arg_count);",
          "477:   first_extra_arg = ex->func->op_array.num_args;",
          "479:   ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "480:    i = 0;",
          "481:    p = ZEND_CALL_ARG(ex, 1);",
          "",
          "[Removed Lines]",
          "478:   zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "478:   zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "644:   break;",
          "645:  }",
          "646:  array_init_size(return_value, 4);",
          "650:  ZVAL_DEREF(entry);",
          "",
          "[Removed Lines]",
          "647:  zend_hash_real_init(Z_ARRVAL_P(return_value), 0);",
          "",
          "[Added Lines]",
          "647:  zend_hash_real_init_mixed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2121:   zval *p = ZEND_CALL_ARG(call, 1);",
          "2123:   array_init_size(arg_array, num_args);",
          "2125:   ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(arg_array)) {",
          "2126:    if (call->func->type == ZEND_USER_FUNCTION) {",
          "2127:     uint32_t first_extra_arg = MIN(num_args, call->func->op_array.num_args);",
          "",
          "[Removed Lines]",
          "2124:   zend_hash_real_init(Z_ARRVAL_P(arg_array), 1);",
          "",
          "[Added Lines]",
          "2124:   zend_hash_real_init_packed(Z_ARRVAL_P(arg_array));",
          "",
          "---------------"
        ],
        "Zend/zend_execute_API.c||Zend/zend_execute_API.c": [
          "File: Zend/zend_execute_API.c -> Zend/zend_execute_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1505:   if (!ex->func->op_array.last_var) {",
          "1506:    return symbol_table;",
          "1507:   }",
          "1510:  }",
          "1511:  if (EXPECTED(ex->func->op_array.last_var)) {",
          "",
          "[Removed Lines]",
          "1508:   zend_hash_real_init(symbol_table, 0);",
          "",
          "[Added Lines]",
          "1508:   zend_hash_real_init_mixed(symbol_table);",
          "",
          "---------------"
        ],
        "Zend/zend_hash.c||Zend/zend_hash.c": [
          "File: Zend/zend_hash.c -> Zend/zend_hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "114: #endif",
          "115: }",
          "118: {",
          "125:  } else {",
          "143:  }",
          "144: }",
          "147: {",
          "148:  HT_ASSERT_RC1(ht);",
          "151:  }",
          "152: }",
          "157: static const uint32_t uninitialized_bucket[-HT_MIN_MASK] =",
          "158:  {HT_INVALID_IDX, HT_INVALID_IDX};",
          "",
          "[Removed Lines]",
          "117: static zend_always_inline void zend_hash_real_init_ex(HashTable *ht, int packed)",
          "119:  HT_ASSERT_RC1(ht);",
          "120:  ZEND_ASSERT(!(HT_FLAGS(ht) & HASH_FLAG_INITIALIZED));",
          "121:  if (packed) {",
          "122:   HT_SET_DATA_ADDR(ht, pemalloc(HT_SIZE(ht), GC_FLAGS(ht) & IS_ARRAY_PERSISTENT));",
          "123:   HT_FLAGS(ht) |= HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED;",
          "124:   HT_HASH_RESET_PACKED(ht);",
          "126:   (ht)->nTableMask = -(ht)->nTableSize;",
          "127:   HT_SET_DATA_ADDR(ht, pemalloc(HT_SIZE(ht), GC_FLAGS(ht) & IS_ARRAY_PERSISTENT));",
          "128:   HT_FLAGS(ht) |= HASH_FLAG_INITIALIZED;",
          "129:   if (EXPECTED(ht->nTableMask == (uint32_t)-8)) {",
          "130:    Bucket *arData = ht->arData;",
          "132:    HT_HASH_EX(arData, -8) = -1;",
          "133:    HT_HASH_EX(arData, -7) = -1;",
          "134:    HT_HASH_EX(arData, -6) = -1;",
          "135:    HT_HASH_EX(arData, -5) = -1;",
          "136:    HT_HASH_EX(arData, -4) = -1;",
          "137:    HT_HASH_EX(arData, -3) = -1;",
          "138:    HT_HASH_EX(arData, -2) = -1;",
          "139:    HT_HASH_EX(arData, -1) = -1;",
          "140:   } else {",
          "141:    HT_HASH_RESET(ht);",
          "142:   }",
          "146: static zend_always_inline void zend_hash_check_init(HashTable *ht, int packed)",
          "149:  if (UNEXPECTED(!(HT_FLAGS(ht) & HASH_FLAG_INITIALIZED))) {",
          "150:   zend_hash_real_init_ex(ht, packed);",
          "154: #define CHECK_INIT(ht, packed) \\",
          "155:  zend_hash_check_init(ht, packed)",
          "",
          "[Added Lines]",
          "117: static zend_always_inline void zend_hash_real_init_packed_ex(HashTable *ht)",
          "119:  HT_SET_DATA_ADDR(ht, pemalloc(HT_SIZE(ht), GC_FLAGS(ht) & IS_ARRAY_PERSISTENT));",
          "120:  HT_FLAGS(ht) |= HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED;",
          "121:  HT_HASH_RESET_PACKED(ht);",
          "122: }",
          "124: static zend_always_inline void zend_hash_real_init_mixed_ex(HashTable *ht)",
          "125: {",
          "126:  (ht)->nTableMask = -(ht)->nTableSize;",
          "127:  HT_SET_DATA_ADDR(ht, pemalloc(HT_SIZE(ht), GC_FLAGS(ht) & IS_ARRAY_PERSISTENT));",
          "128:  HT_FLAGS(ht) |= HASH_FLAG_INITIALIZED;",
          "129:  if (EXPECTED(ht->nTableMask == (uint32_t)-8)) {",
          "130:   Bucket *arData = ht->arData;",
          "132:   HT_HASH_EX(arData, -8) = -1;",
          "133:   HT_HASH_EX(arData, -7) = -1;",
          "134:   HT_HASH_EX(arData, -6) = -1;",
          "135:   HT_HASH_EX(arData, -5) = -1;",
          "136:   HT_HASH_EX(arData, -4) = -1;",
          "137:   HT_HASH_EX(arData, -3) = -1;",
          "138:   HT_HASH_EX(arData, -2) = -1;",
          "139:   HT_HASH_EX(arData, -1) = -1;",
          "141:   HT_HASH_RESET(ht);",
          "145: static zend_always_inline void zend_hash_real_init_ex(HashTable *ht, int packed)",
          "148:  ZEND_ASSERT(!(HT_FLAGS(ht) & HASH_FLAG_INITIALIZED));",
          "149:  if (packed) {",
          "150:   zend_hash_real_init_packed_ex(ht);",
          "151:  } else {",
          "152:   zend_hash_real_init_mixed_ex(ht);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "216:  zend_hash_real_init_ex(ht, packed);",
          "217: }",
          "219: ZEND_API void ZEND_FASTCALL zend_hash_packed_to_hash(HashTable *ht)",
          "220: {",
          "221:  void *new_data, *old_data = HT_GET_DATA_ADDR(ht);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "218: ZEND_API void ZEND_FASTCALL zend_hash_real_init_packed(HashTable *ht)",
          "219: {",
          "220:  IS_CONSISTENT(ht);",
          "222:  HT_ASSERT_RC1(ht);",
          "223:  zend_hash_real_init_packed_ex(ht);",
          "224: }",
          "226: ZEND_API void ZEND_FASTCALL zend_hash_real_init_mixed(HashTable *ht)",
          "227: {",
          "228:  IS_CONSISTENT(ht);",
          "230:  HT_ASSERT_RC1(ht);",
          "231:  zend_hash_real_init_mixed_ex(ht);",
          "232: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "254:   if (nSize > ht->nTableSize) {",
          "255:    ht->nTableSize = zend_hash_check_size(nSize);",
          "256:   }",
          "258:  } else {",
          "259:   if (packed) {",
          "260:    ZEND_ASSERT(HT_FLAGS(ht) & HASH_FLAG_PACKED);",
          "",
          "[Removed Lines]",
          "257:   zend_hash_check_init(ht, packed);",
          "",
          "[Added Lines]",
          "272:   zend_hash_real_init(ht, packed);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "582:  HT_ASSERT_RC1(ht);",
          "584:  if (UNEXPECTED(!(HT_FLAGS(ht) & HASH_FLAG_INITIALIZED))) {",
          "586:   if (!ZSTR_IS_INTERNED(key)) {",
          "587:    zend_string_addref(key);",
          "588:    HT_FLAGS(ht) &= ~HASH_FLAG_STATIC_KEYS;",
          "",
          "[Removed Lines]",
          "585:   CHECK_INIT(ht, 0);",
          "",
          "[Added Lines]",
          "600:   zend_hash_real_init_mixed(ht);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "667:  HT_ASSERT_RC1(ht);",
          "669:  if (UNEXPECTED(!(HT_FLAGS(ht) & HASH_FLAG_INITIALIZED))) {",
          "671:   goto add_to_hash;",
          "672:  } else if (HT_FLAGS(ht) & HASH_FLAG_PACKED) {",
          "673:   zend_hash_packed_to_hash(ht);",
          "",
          "[Removed Lines]",
          "670:   CHECK_INIT(ht, 0);",
          "",
          "[Added Lines]",
          "685:   zend_hash_real_init_mixed(ht);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "817:  HT_ASSERT_RC1(ht);",
          "819:  if (UNEXPECTED(!(HT_FLAGS(ht) & HASH_FLAG_INITIALIZED))) {",
          "821:   if (h < ht->nTableSize) {",
          "822:    p = ht->arData + h;",
          "823:    goto add_to_packed;",
          "824:   }",
          "825:   goto add_to_hash;",
          "826:  } else if (HT_FLAGS(ht) & HASH_FLAG_PACKED) {",
          "827:   if (h < ht->nNumUsed) {",
          "",
          "[Removed Lines]",
          "820:   CHECK_INIT(ht, h < ht->nTableSize);",
          "",
          "[Added Lines]",
          "836:    zend_hash_real_init_packed_ex(ht);",
          "840:   zend_hash_real_init_mixed(ht);",
          "",
          "---------------"
        ],
        "Zend/zend_hash.h||Zend/zend_hash.h": [
          "File: Zend/zend_hash.h -> Zend/zend_hash.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:  _zend_hash_init((ht), (nSize), (pDestructor), (persistent))",
          "101: ZEND_API void ZEND_FASTCALL zend_hash_real_init(HashTable *ht, zend_bool packed);",
          "102: ZEND_API void ZEND_FASTCALL zend_hash_packed_to_hash(HashTable *ht);",
          "103: ZEND_API void ZEND_FASTCALL zend_hash_to_packed(HashTable *ht);",
          "104: ZEND_API void ZEND_FASTCALL zend_hash_extend(HashTable *ht, uint32_t nSize, zend_bool packed);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102: ZEND_API void ZEND_FASTCALL zend_hash_real_init_packed(HashTable *ht);",
          "103: ZEND_API void ZEND_FASTCALL zend_hash_real_init_mixed(HashTable *ht);",
          "",
          "---------------"
        ],
        "Zend/zend_object_handlers.c||Zend/zend_object_handlers.c": [
          "File: Zend/zend_object_handlers.c -> Zend/zend_object_handlers.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:   zobj->properties = zend_new_array(ce->default_properties_count);",
          "70:   if (ce->default_properties_count) {",
          "72:    ZEND_HASH_FOREACH_PTR(&ce->properties_info, prop_info) {",
          "74:         (prop_info->flags & ZEND_ACC_STATIC) == 0) {",
          "",
          "[Removed Lines]",
          "71:    zend_hash_real_init(zobj->properties, 0);",
          "",
          "[Added Lines]",
          "71:    zend_hash_real_init_mixed(zobj->properties);",
          "",
          "---------------"
        ],
        "Zend/zend_objects.c||Zend/zend_objects.c": [
          "File: Zend/zend_objects.c -> Zend/zend_objects.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:   if (!new_object->properties) {",
          "198:    new_object->properties = zend_new_array(zend_hash_num_elements(old_object->properties));",
          "200:   } else {",
          "201:    zend_hash_extend(new_object->properties, new_object->properties->nNumUsed + zend_hash_num_elements(old_object->properties), 0);",
          "202:   }",
          "",
          "[Removed Lines]",
          "199:    zend_hash_real_init(new_object->properties, 0);",
          "",
          "[Added Lines]",
          "199:    zend_hash_real_init_mixed(new_object->properties);",
          "",
          "---------------"
        ],
        "Zend/zend_string.c||Zend/zend_string.c": [
          "File: Zend/zend_string.c -> Zend/zend_string.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: static void zend_init_interned_strings_ht(HashTable *interned_strings, int permanent)",
          "70: {",
          "71:  zend_hash_init(interned_strings, 1024, NULL, _str_dtor, permanent);",
          "73: }",
          "75: ZEND_API void zend_interned_strings_init(void)",
          "",
          "[Removed Lines]",
          "72:  zend_hash_real_init(interned_strings, 0);",
          "",
          "[Added Lines]",
          "72:  zend_hash_real_init_mixed(interned_strings);",
          "",
          "---------------"
        ],
        "Zend/zend_vm_def.h||Zend/zend_vm_def.h": [
          "File: Zend/zend_vm_def.h -> Zend/zend_vm_def.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4763:   zval *param;",
          "4765:   array_init_size(params, arg_count - arg_num + 1);",
          "4767:   ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(params)) {",
          "4768:    param = EX_VAR_NUM(EX(func)->op_array.last_var + EX(func)->op_array.T);",
          "4769:    if (UNEXPECTED((EX(func)->op_array.fn_flags & ZEND_ACC_HAS_TYPE_HINTS) != 0)) {",
          "",
          "[Removed Lines]",
          "4766:   zend_hash_real_init(Z_ARRVAL_P(params), 1);",
          "",
          "[Added Lines]",
          "4766:   zend_hash_real_init_packed(Z_ARRVAL_P(params));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5233:   ZVAL_ARR(array, zend_new_array(size));",
          "5235:   if (opline->extended_value & ZEND_ARRAY_NOT_PACKED) {",
          "5237:   }",
          "5238:   ZEND_VM_DISPATCH_TO_HANDLER(ZEND_ADD_ARRAY_ELEMENT);",
          "5239:  } else {",
          "",
          "[Removed Lines]",
          "5236:    zend_hash_real_init(Z_ARRVAL_P(array), 0);",
          "",
          "[Added Lines]",
          "5236:    zend_hash_real_init_mixed(Z_ARRVAL_P(array));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7730:   zval *end = p + num_args;",
          "7732:   args = zend_new_array(num_args);",
          "7734:   ZEND_HASH_FILL_PACKED(args) {",
          "7735:    do {",
          "7736:     ZEND_HASH_FILL_ADD(p);",
          "",
          "[Removed Lines]",
          "7733:   zend_hash_real_init(args, 1);",
          "",
          "[Added Lines]",
          "7733:   zend_hash_real_init_packed(args);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8248:   ht = zend_new_array(result_size);",
          "8249:   ZVAL_ARR(EX_VAR(opline->result.var), ht);",
          "8251:   ZEND_HASH_FILL_PACKED(ht) {",
          "8252:    zval *p, *q;",
          "8253:    uint32_t i = skip;",
          "",
          "[Removed Lines]",
          "8250:   zend_hash_real_init(ht, 1);",
          "",
          "[Added Lines]",
          "8250:   zend_hash_real_init_packed(ht);",
          "",
          "---------------"
        ],
        "ext/standard/array.c||ext/standard/array.c": [
          "File: ext/standard/array.c -> ext/standard/array.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2681:    zend_long n;",
          "2683:    array_init_size(return_value, (uint32_t)(start_key + num));",
          "2685:    Z_ARRVAL_P(return_value)->nNumUsed = (uint32_t)(start_key + num);",
          "2686:    Z_ARRVAL_P(return_value)->nNumOfElements = (uint32_t)num;",
          "2687:    Z_ARRVAL_P(return_value)->nNextFreeElement = (zend_long)(start_key + num);",
          "",
          "[Removed Lines]",
          "2684:    zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "2684:    zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2706:   } else {",
          "2708:    array_init_size(return_value, (uint32_t)num);",
          "2710:    if (Z_REFCOUNTED_P(val)) {",
          "2711:     GC_ADDREF_EX(Z_COUNTED_P(val), (uint32_t)num);",
          "2712:    }",
          "",
          "[Removed Lines]",
          "2709:    zend_hash_real_init(Z_ARRVAL_P(return_value), 0);",
          "",
          "[Added Lines]",
          "2709:    zend_hash_real_init_mixed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2763:   } \\",
          "2764:   size = (uint32_t)_php_math_round(__calc_size, 0, PHP_ROUND_HALF_UP); \\",
          "2765:   array_init_size(return_value, size); \\",
          "2767:  } while (0)",
          "2769: #define RANGE_CHECK_LONG_INIT_ARRAY(start, end) do { \\",
          "",
          "[Removed Lines]",
          "2766:   zend_hash_real_init(Z_ARRVAL_P(return_value), 1); \\",
          "",
          "[Added Lines]",
          "2766:   zend_hash_real_init_packed(Z_ARRVAL_P(return_value)); \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2774:   } \\",
          "2775:   size = (uint32_t)(__calc_size + 1); \\",
          "2776:   array_init_size(return_value, size); \\",
          "2778:  } while (0)",
          "",
          "[Removed Lines]",
          "2777:   zend_hash_real_init(Z_ARRVAL_P(return_value), 1); \\",
          "",
          "[Added Lines]",
          "2777:   zend_hash_real_init_packed(Z_ARRVAL_P(return_value)); \\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2832:    }",
          "2834:    array_init_size(return_value, (uint32_t)(((low - high) / lstep) + 1));",
          "2836:    ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "2837:     for (; low >= high; low -= (unsigned int)lstep) {",
          "2838:      ZVAL_INTERNED_STR(&tmp, ZSTR_CHAR(low));",
          "",
          "[Removed Lines]",
          "2835:    zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "2835:    zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2848:     goto err;",
          "2849:    }",
          "2850:    array_init_size(return_value, (uint32_t)(((high - low) / lstep) + 1));",
          "2852:    ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "2853:     for (; low <= high; low += (unsigned int)lstep) {",
          "2854:      ZVAL_INTERNED_STR(&tmp, ZSTR_CHAR(low));",
          "",
          "[Removed Lines]",
          "2851:    zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "2851:    zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3582:  if (HT_IS_PACKED(Z_ARRVAL_P(input)) &&",
          "3583:      (!preserve_keys ||",
          "3584:       (offset == 0 && HT_IS_WITHOUT_HOLES(Z_ARRVAL_P(input))))) {",
          "3586:   ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "3587:    ZEND_HASH_FOREACH_VAL(Z_ARRVAL_P(input), entry) {",
          "3588:     pos++;",
          "",
          "[Removed Lines]",
          "3585:   zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "3585:   zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3860:   array_init_size(return_value, count);",
          "3861:   dest = Z_ARRVAL_P(return_value);",
          "3862:   if (HT_FLAGS(src) & HASH_FLAG_PACKED) {",
          "3864:    ZEND_HASH_FILL_PACKED(dest) {",
          "3865:     ZEND_HASH_FOREACH_VAL(src, src_entry) {",
          "3866:      if (UNEXPECTED(Z_ISREF_P(src_entry) &&",
          "",
          "[Removed Lines]",
          "3863:    zend_hash_real_init(dest, 1);",
          "",
          "[Added Lines]",
          "3863:    zend_hash_real_init_packed(dest);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3873:    } ZEND_HASH_FILL_END();",
          "3874:   } else {",
          "3875:    zend_string *string_key;",
          "3877:    ZEND_HASH_FOREACH_STR_KEY_VAL(src, string_key, src_entry) {",
          "3878:     if (UNEXPECTED(Z_ISREF_P(src_entry) &&",
          "3879:      Z_REFCOUNT_P(src_entry) == 1)) {",
          "",
          "[Removed Lines]",
          "3876:    zend_hash_real_init(dest, 0);",
          "",
          "[Added Lines]",
          "3876:    zend_hash_real_init_mixed(dest);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3992:   }",
          "3993:  } else {",
          "3994:   array_init_size(return_value, elem_count);",
          "3996:   ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "3997:    if (HT_IS_PACKED(arrval) && HT_IS_WITHOUT_HOLES(arrval)) {",
          "",
          "[Removed Lines]",
          "3995:   zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "3995:   zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4048:  array_init_size(return_value, zend_hash_num_elements(arrval));",
          "4052:  ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "",
          "[Removed Lines]",
          "4049:  zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "4049:  zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4186:  array_init_size(return_value, zend_hash_num_elements(arr_hash));",
          "4187:  if (!zkey) {",
          "4189:   ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "4190:    ZEND_HASH_FOREACH_VAL(arr_hash, data) {",
          "4191:     ZVAL_DEREF(data);",
          "",
          "[Removed Lines]",
          "4188:   zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "4188:   zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4263:  array_init_size(return_value, zend_hash_num_elements(Z_ARRVAL_P(input)));",
          "4264:  if ((HT_FLAGS(Z_ARRVAL_P(input)) & HASH_FLAG_PACKED) && !preserve_keys) {",
          "4266:   ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "4267:    ZEND_HASH_REVERSE_FOREACH_VAL(Z_ARRVAL_P(input), entry) {",
          "4268:     if (UNEXPECTED(Z_ISREF_P(entry) &&",
          "",
          "[Removed Lines]",
          "4265:   zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "4265:   zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4332:  array_init_size(return_value, pad_size_abs);",
          "4333:  if (HT_FLAGS(Z_ARRVAL_P(input)) & HASH_FLAG_PACKED) {",
          "4336:   if (pad_size < 0) {",
          "4337:    ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "",
          "[Removed Lines]",
          "4334:   zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "4334:   zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "5859:  }",
          "5863:  ZEND_HASH_FILL_PACKED(Z_ARRVAL_P(return_value)) {",
          "5864:   zval zv;",
          "",
          "[Removed Lines]",
          "5862:  zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "5862:  zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------"
        ],
        "ext/standard/hrtime.c||ext/standard/hrtime.c": [
          "File: ext/standard/hrtime.c -> ext/standard/hrtime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:   PHP_RETURN_HRTIME(t);",
          "181:  } else {",
          "182:   array_init_size(return_value, 2);",
          "184:   add_next_index_long(return_value, (zend_long)(t / (php_hrtime_t)NANO_IN_SEC));",
          "185:   add_next_index_long(return_value, (zend_long)(t % (php_hrtime_t)NANO_IN_SEC));",
          "186:  }",
          "",
          "[Removed Lines]",
          "183:   zend_hash_real_init(Z_ARRVAL_P(return_value), 1);",
          "",
          "[Added Lines]",
          "183:   zend_hash_real_init_packed(Z_ARRVAL_P(return_value));",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1376:   array_init_size(rval, elements);",
          "1380:  } else {",
          "1381:   ZVAL_EMPTY_ARRAY(rval);",
          "1382:   return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "1379:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "",
          "[Added Lines]",
          "1379:   zend_hash_real_init_mixed(Z_ARRVAL_P(rval));",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "880:   array_init_size(rval, elements);",
          "884:  } else {",
          "885:   ZVAL_EMPTY_ARRAY(rval);",
          "886:   return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "",
          "[Removed Lines]",
          "883:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "",
          "[Added Lines]",
          "883:   zend_hash_real_init_mixed(Z_ARRVAL_P(rval));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2075fb2b73c2d56c7acfb29773a2dc68b8d2f29d",
      "candidate_info": {
        "commit_hash": "2075fb2b73c2d56c7acfb29773a2dc68b8d2f29d",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/2075fb2b73c2d56c7acfb29773a2dc68b8d2f29d",
        "files": [
          "ext/exif/exif.c",
          "ext/exif/tests/bug73737.phpt",
          "ext/exif/tests/bug73737.tiff",
          "ext/phar/phar.c",
          "ext/phar/tests/bug73764.phar",
          "ext/phar/tests/bug73764.phpt",
          "ext/phar/tests/bug73768.phar",
          "ext/phar/tests/bug73768.phpt",
          "ext/standard/tests/serialize/bug73825.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Merge branch 'PHP-7.0' into PHP-7.1\n\n* PHP-7.0:\n  Fix bug #73737 FPE when parsing a tag format\n  Fix bug #73773 - Seg fault when loading hostile phar\n  Fix bug #73825 - Heap out of bounds read on unserialize in finish_nested_data()\n  Fix bug #73768 - Memory corruption when loading hostile phar\n  Fix int overflows in phar (bug #73764)",
        "before_after_code_files": [
          "ext/exif/exif.c||ext/exif/exif.c",
          "ext/exif/tests/bug73737.phpt||ext/exif/tests/bug73737.phpt",
          "ext/phar/phar.c||ext/phar/phar.c",
          "ext/phar/tests/bug73764.phpt||ext/phar/tests/bug73764.phpt",
          "ext/phar/tests/bug73768.phpt||ext/phar/tests/bug73768.phpt",
          "ext/standard/tests/serialize/bug73825.phpt||ext/standard/tests/serialize/bug73825.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/exif/exif.c||ext/exif/exif.c": [
          "File: ext/exif/exif.c -> ext/exif/exif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1297:    if (s_den == 0) {",
          "1298:     return 0;",
          "1299:    } else {",
          "1301:    }",
          "1303:   case TAG_FMT_SSHORT:    return php_ifd_get16u(value, motorola_intel);",
          "",
          "[Removed Lines]",
          "1300:     return php_ifd_get32s(value, motorola_intel) / s_den;",
          "",
          "[Added Lines]",
          "1300:     return (size_t)((double)php_ifd_get32s(value, motorola_intel) / s_den);",
          "",
          "---------------"
        ],
        "ext/exif/tests/bug73737.phpt||ext/exif/tests/bug73737.phpt": [
          "File: ext/exif/tests/bug73737.phpt -> ext/exif/tests/bug73737.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73737 (Crash when parsing a tag format)",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded('exif')) print 'skip exif extension not available';?>",
          "5: --FILE--",
          "6: <?php",
          "7:  $exif = exif_thumbnail(__DIR__ . '/bug73737.tiff');",
          "8:  var_dump($exif);",
          "9: ?>",
          "10: --EXPECTF--",
          "11: Warning: exif_thumbnail(bug73737.tiff): Error in TIFF: filesize(x0030) less than start of IFD dir(x10102) in %s line %d",
          "12: bool(false)",
          "",
          "---------------"
        ],
        "ext/phar/phar.c||ext/phar/phar.c": [
          "File: ext/phar/phar.c -> ext/phar/phar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "984:   if (alias && alias_len && (alias_len != (int)tmp_len || strncmp(alias, buffer, tmp_len)))",
          "985:   {",
          "987:    php_stream_close(fp);",
          "989:    if (signature) {",
          "",
          "[Removed Lines]",
          "986:    buffer[tmp_len] = '\\0';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "991:    }",
          "993:    if (error) {",
          "995:    }",
          "997:    efree(savebuf);",
          "",
          "[Removed Lines]",
          "994:     spprintf(error, 0, \"cannot load phar \\\"%s\\\" with implicit alias \\\"%s\\\" under different alias \\\"%s\\\"\", fname, buffer, alias);",
          "",
          "[Added Lines]",
          "993:     spprintf(error, 0, \"cannot load phar \\\"%s\\\" with implicit alias \\\"%.*s\\\" under different alias \\\"%s\\\"\", fname, tmp_len, buffer, alias);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1057:  entry.is_persistent = mydata->is_persistent;",
          "1059:  for (manifest_index = 0; manifest_index < manifest_count; ++manifest_index) {",
          "1061:    MAPPHAR_FAIL(\"internal corruption of phar \\\"%s\\\" (truncated manifest entry)\")",
          "1062:   }",
          "",
          "[Removed Lines]",
          "1060:   if (buffer + 4 > endbuffer) {",
          "",
          "[Added Lines]",
          "1059:   if (buffer + 28 > endbuffer) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1071:    entry.manifest_pos = manifest_index;",
          "1072:   }",
          "1075:    MAPPHAR_FAIL(\"internal corruption of phar \\\"%s\\\" (truncated manifest entry)\");",
          "1076:   }",
          "",
          "[Removed Lines]",
          "1074:   if (entry.filename_len + 20 > (size_t)(endbuffer - buffer)) {",
          "",
          "[Added Lines]",
          "1073:   if (entry.filename_len > (size_t)(endbuffer - buffer - 24)) {",
          "",
          "---------------"
        ],
        "ext/phar/tests/bug73764.phpt||ext/phar/tests/bug73764.phpt": [
          "File: ext/phar/tests/bug73764.phpt -> ext/phar/tests/bug73764.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Phar: PHP bug #73764: Crash while loading hostile phar archive",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"phar\")) die(\"skip\"); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: chdir(__DIR__);",
          "8: try {",
          "9: $p = Phar::LoadPhar('bug73764.phar', 'alias.phar');",
          "10: echo \"OK\\n\";",
          "11: } catch(PharException $e) {",
          "12:  echo $e->getMessage();",
          "13: }",
          "14: ?>",
          "15: --EXPECTF--",
          "16: internal corruption of phar \"%sbug73764.phar\" (truncated manifest entry)",
          "",
          "---------------"
        ],
        "ext/phar/tests/bug73768.phpt||ext/phar/tests/bug73768.phpt": [
          "File: ext/phar/tests/bug73768.phpt -> ext/phar/tests/bug73768.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Phar: PHP bug #73768: Memory corruption when loading hostile phar",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"phar\")) die(\"skip\"); ?>",
          "5: --FILE--",
          "6: <?php",
          "7: chdir(__DIR__);",
          "8: try {",
          "9: $p = Phar::LoadPhar('bug73768.phar', 'alias.phar');",
          "10: echo \"OK\\n\";",
          "11: } catch(PharException $e) {",
          "12:  echo $e->getMessage();",
          "13: }",
          "14: ?>",
          "15: --EXPECTF--",
          "16: cannot load phar \"%sbug73768.phar\" with implicit alias \"\" under different alias \"alias.phar\"",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug73825.phpt||ext/standard/tests/serialize/bug73825.phpt": [
          "File: ext/standard/tests/serialize/bug73825.phpt -> ext/standard/tests/serialize/bug73825.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #73825 Heap out of bounds read on unserialize in finish_nested_data()",
          "3: --FILE--",
          "4: <?php",
          "5: $obj = unserialize('O:8:\"00000000\":');",
          "6: var_dump($obj);",
          "7: ?>",
          "8: --EXPECTF--",
          "9: Warning: Bad unserialize data in %sbug73825.php on line %d",
          "11: Notice: unserialize(): Error at offset 13 of 15 bytes in %sbug73825.php on line %d",
          "12: bool(false)",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "478: {",
          "479:  zend_long elements;",
          "481:  elements = parse_iv2((*p) + 2, p);",
          "483:  (*p) += 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "481:  if( *p >= max - 2) {",
          "482:   zend_error(E_WARNING, \"Bad unserialize data\");",
          "483:   return -1;",
          "484:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "487:  } else {",
          "492:  }",
          "494:  return elements;",
          "",
          "[Removed Lines]",
          "490:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ZSTR_VAL(ce->name));",
          "491:   return 0;",
          "",
          "[Added Lines]",
          "495:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);",
          "496:   return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "589:  start = cursor;",
          "593: {",
          "594:  YYCTYPE yych;",
          "595:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "592: #line 593 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "597: #line 598 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "626:     0,   0,   0,   0,   0,   0,   0,   0,",
          "627:     0,   0,   0,   0,   0,   0,   0,   0,",
          "628:  };",
          "629:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "630:  yych = *YYCURSOR;",
          "631:  switch (yych) {",
          "632:  case 'C':",
          "634:  case 'N': goto yy5;",
          "641:  case 'o': goto yy12;",
          "646:  }",
          "647: yy2:",
          "649: yy3:",
          "651:  { return 0; }",
          "653: yy4:",
          "654:  yych = *(YYMARKER = ++YYCURSOR);",
          "656:  goto yy3;",
          "657: yy5:",
          "658:  yych = *++YYCURSOR;",
          "660:  goto yy3;",
          "661: yy6:",
          "662:  yych = *(YYMARKER = ++YYCURSOR);",
          "664:  goto yy3;",
          "665: yy7:",
          "666:  yych = *(YYMARKER = ++YYCURSOR);",
          "668:  goto yy3;",
          "669: yy8:",
          "670:  yych = *(YYMARKER = ++YYCURSOR);",
          "672:  goto yy3;",
          "673: yy9:",
          "674:  yych = *(YYMARKER = ++YYCURSOR);",
          "676:  goto yy3;",
          "677: yy10:",
          "678:  yych = *(YYMARKER = ++YYCURSOR);",
          "680:  goto yy3;",
          "681: yy11:",
          "682:  yych = *(YYMARKER = ++YYCURSOR);",
          "684:  goto yy3;",
          "685: yy12:",
          "686:  yych = *(YYMARKER = ++YYCURSOR);",
          "688:  goto yy3;",
          "689: yy13:",
          "690:  yych = *(YYMARKER = ++YYCURSOR);",
          "692:  goto yy3;",
          "693: yy14:",
          "698:  ++YYCURSOR;",
          "700:  {",
          "702:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "704: }",
          "706: yy17:",
          "707:  yych = *++YYCURSOR;",
          "708:  if (yybm[0+yych] & 128) {",
          "710:  }",
          "712: yy18:",
          "713:  YYCURSOR = YYMARKER;",
          "714:  goto yy3;",
          "715: yy19:",
          "725:  yych = *++YYCURSOR;",
          "734:  }",
          "740:  goto yy18;",
          "749:  if (yych <= '/') goto yy18;",
          "753:  yych = *++YYCURSOR;",
          "762:   }",
          "771:   }",
          "772:  }",
          "783:  }",
          "794:  }",
          "796:  yych = *++YYCURSOR;",
          "797:  if (yych <= ',') {",
          "800:  } else {",
          "802:   if (yych <= '/') goto yy18;",
          "804:   goto yy18;",
          "805:  }",
          "807:  yych = *++YYCURSOR;",
          "809:  if (yych <= '/') goto yy18;",
          "819:  ++YYCURSOR;",
          "820:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "821:  yych = *YYCURSOR;",
          "825:  if (yych <= '/') goto yy18;",
          "829:  yych = *++YYCURSOR;",
          "833:  ++YYCURSOR;",
          "836:  if (yych <= '/') goto yy18;",
          "837:  if (yych <= '9') goto yy34;",
          "839:  goto yy18;",
          "841:  yych = *++YYCURSOR;",
          "842:  if (yych <= '/') goto yy18;",
          "843:  if (yych >= ':') goto yy18;",
          "845:  ++YYCURSOR;",
          "846:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "847:  yych = *YYCURSOR;",
          "848:  if (yych <= '/') goto yy18;",
          "853:  yych = *++YYCURSOR;",
          "857:  ++YYCURSOR;",
          "882:  }",
          "910:  }",
          "920:  yych = *++YYCURSOR;",
          "921:  if (yych <= '/') goto yy18;",
          "930:  goto yy18;",
          "932:  yych = *++YYCURSOR;",
          "933:  if (yych <= '/') goto yy18;",
          "934:  if (yych >= ':') goto yy18;",
          "936:  ++YYCURSOR;",
          "937:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "938:  yych = *YYCURSOR;",
          "939:  if (yych <= '/') goto yy18;",
          "944:  yych = *++YYCURSOR;",
          "948:  ++YYCURSOR;",
          "951:  if (yych <= '/') goto yy18;",
          "954:  goto yy18;",
          "956:  yych = *++YYCURSOR;",
          "957:  if (yych <= '/') goto yy18;",
          "958:  if (yych >= ':') goto yy18;",
          "960:  ++YYCURSOR;",
          "961:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "962:  yych = *YYCURSOR;",
          "963:  if (yych <= '/') goto yy18;",
          "968:  yych = *++YYCURSOR;",
          "972:  ++YYCURSOR;",
          "974:  {",
          "982:   return 0;",
          "983:  }",
          "989:  }",
          "995:  }",
          "997:  return 1;",
          "998: }",
          "1001:  yych = *++YYCURSOR;",
          "1003:  goto yy18;",
          "1005:  yych = *++YYCURSOR;",
          "1007:  goto yy18;",
          "1009:  ++YYCURSOR;",
          "1018:  ++YYCURSOR;",
          "1019:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1020:  yych = *YYCURSOR;",
          "1021:  if (yych <= ';') {",
          "1022:   if (yych <= '/') goto yy18;",
          "1024:   if (yych <= ':') goto yy18;",
          "1025:  } else {",
          "1026:   if (yych <= 'E') {",
          "1027:    if (yych <= 'D') goto yy18;",
          "1029:   } else {",
          "1031:    goto yy18;",
          "1032:   }",
          "1033:  }",
          "1035:  ++YYCURSOR;",
          "1037:  {",
          "1038: #if SIZEOF_ZEND_LONG == 4",
          "1039: use_double:",
          "",
          "[Removed Lines]",
          "633:  case 'O': goto yy4;",
          "635:  case 'R': goto yy6;",
          "636:  case 'S': goto yy7;",
          "637:  case 'a': goto yy8;",
          "638:  case 'b': goto yy9;",
          "639:  case 'd': goto yy10;",
          "640:  case 'i': goto yy11;",
          "642:  case 'r': goto yy13;",
          "643:  case 's': goto yy14;",
          "644:  case '}': goto yy15;",
          "645:  default: goto yy2;",
          "648:  ++YYCURSOR;",
          "650: #line 961 \"ext/standard/var_unserializer.re\"",
          "652: #line 653 \"ext/standard/var_unserializer.c\"",
          "655:  if (yych == ':') goto yy17;",
          "659:  if (yych == ';') goto yy19;",
          "663:  if (yych == ':') goto yy21;",
          "667:  if (yych == ':') goto yy22;",
          "671:  if (yych == ':') goto yy23;",
          "675:  if (yych == ':') goto yy24;",
          "679:  if (yych == ':') goto yy25;",
          "683:  if (yych == ':') goto yy26;",
          "687:  if (yych == ':') goto yy27;",
          "691:  if (yych == ':') goto yy28;",
          "694:  yych = *(YYMARKER = ++YYCURSOR);",
          "695:  if (yych == ':') goto yy29;",
          "696:  goto yy3;",
          "697: yy15:",
          "699: #line 955 \"ext/standard/var_unserializer.re\"",
          "705: #line 706 \"ext/standard/var_unserializer.c\"",
          "709:   goto yy31;",
          "711:  if (yych == '+') goto yy30;",
          "716:  ++YYCURSOR;",
          "717: #line 648 \"ext/standard/var_unserializer.re\"",
          "718:  {",
          "720:  ZVAL_NULL(rval);",
          "721:  return 1;",
          "722: }",
          "723: #line 724 \"ext/standard/var_unserializer.c\"",
          "724: yy21:",
          "726:  if (yych <= ',') {",
          "727:   if (yych == '+') goto yy33;",
          "728:   goto yy18;",
          "729:  } else {",
          "730:   if (yych <= '-') goto yy33;",
          "731:   if (yych <= '/') goto yy18;",
          "732:   if (yych <= '9') goto yy34;",
          "733:   goto yy18;",
          "735: yy22:",
          "736:  yych = *++YYCURSOR;",
          "737:  if (yych == '+') goto yy36;",
          "738:  if (yych <= '/') goto yy18;",
          "739:  if (yych <= '9') goto yy37;",
          "741: yy23:",
          "742:  yych = *++YYCURSOR;",
          "743:  if (yych == '+') goto yy39;",
          "744:  if (yych <= '/') goto yy18;",
          "745:  if (yych <= '9') goto yy40;",
          "746:  goto yy18;",
          "747: yy24:",
          "748:  yych = *++YYCURSOR;",
          "750:  if (yych <= '1') goto yy42;",
          "751:  goto yy18;",
          "752: yy25:",
          "754:  if (yych <= '/') {",
          "755:   if (yych <= ',') {",
          "756:    if (yych == '+') goto yy43;",
          "757:    goto yy18;",
          "758:   } else {",
          "759:    if (yych <= '-') goto yy44;",
          "760:    if (yych <= '.') goto yy45;",
          "761:    goto yy18;",
          "763:  } else {",
          "764:   if (yych <= 'I') {",
          "765:    if (yych <= '9') goto yy46;",
          "766:    if (yych <= 'H') goto yy18;",
          "767:    goto yy48;",
          "768:   } else {",
          "769:    if (yych == 'N') goto yy49;",
          "770:    goto yy18;",
          "773: yy26:",
          "774:  yych = *++YYCURSOR;",
          "775:  if (yych <= ',') {",
          "776:   if (yych == '+') goto yy50;",
          "777:   goto yy18;",
          "778:  } else {",
          "779:   if (yych <= '-') goto yy50;",
          "780:   if (yych <= '/') goto yy18;",
          "781:   if (yych <= '9') goto yy51;",
          "782:   goto yy18;",
          "784: yy27:",
          "785:  yych = *++YYCURSOR;",
          "786:  if (yych <= ',') {",
          "787:   if (yych == '+') goto yy53;",
          "788:   goto yy18;",
          "789:  } else {",
          "790:   if (yych <= '-') goto yy53;",
          "791:   if (yych <= '/') goto yy18;",
          "792:   if (yych <= '9') goto yy54;",
          "793:   goto yy18;",
          "795: yy28:",
          "798:   if (yych == '+') goto yy56;",
          "799:   goto yy18;",
          "801:   if (yych <= '-') goto yy56;",
          "803:   if (yych <= '9') goto yy57;",
          "806: yy29:",
          "808:  if (yych == '+') goto yy59;",
          "810:  if (yych <= '9') goto yy60;",
          "811:  goto yy18;",
          "812: yy30:",
          "813:  yych = *++YYCURSOR;",
          "814:  if (yybm[0+yych] & 128) {",
          "815:   goto yy31;",
          "816:  }",
          "817:  goto yy18;",
          "818: yy31:",
          "822:  if (yybm[0+yych] & 128) {",
          "823:   goto yy31;",
          "824:  }",
          "826:  if (yych <= ':') goto yy62;",
          "827:  goto yy18;",
          "828: yy33:",
          "830:  if (yych <= '/') goto yy18;",
          "831:  if (yych >= ':') goto yy18;",
          "832: yy34:",
          "834:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "835:  yych = *YYCURSOR;",
          "838:  if (yych == ';') goto yy63;",
          "840: yy36:",
          "844: yy37:",
          "849:  if (yych <= '9') goto yy37;",
          "850:  if (yych <= ':') goto yy65;",
          "851:  goto yy18;",
          "852: yy39:",
          "854:  if (yych <= '/') goto yy18;",
          "855:  if (yych >= ':') goto yy18;",
          "856: yy40:",
          "858:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "859:  yych = *YYCURSOR;",
          "860:  if (yych <= '/') goto yy18;",
          "861:  if (yych <= '9') goto yy40;",
          "862:  if (yych <= ':') goto yy66;",
          "863:  goto yy18;",
          "864: yy42:",
          "865:  yych = *++YYCURSOR;",
          "866:  if (yych == ';') goto yy67;",
          "867:  goto yy18;",
          "868: yy43:",
          "869:  yych = *++YYCURSOR;",
          "870:  if (yych == '.') goto yy45;",
          "871:  if (yych <= '/') goto yy18;",
          "872:  if (yych <= '9') goto yy46;",
          "873:  goto yy18;",
          "874: yy44:",
          "875:  yych = *++YYCURSOR;",
          "876:  if (yych <= '/') {",
          "877:   if (yych != '.') goto yy18;",
          "878:  } else {",
          "879:   if (yych <= '9') goto yy46;",
          "880:   if (yych == 'I') goto yy48;",
          "881:   goto yy18;",
          "883: yy45:",
          "884:  yych = *++YYCURSOR;",
          "885:  if (yych <= '/') goto yy18;",
          "886:  if (yych <= '9') goto yy69;",
          "887:  goto yy18;",
          "888: yy46:",
          "889:  ++YYCURSOR;",
          "890:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "891:  yych = *YYCURSOR;",
          "892:  if (yych <= ':') {",
          "893:   if (yych <= '.') {",
          "894:    if (yych <= '-') goto yy18;",
          "895:    goto yy69;",
          "896:   } else {",
          "897:    if (yych <= '/') goto yy18;",
          "898:    if (yych <= '9') goto yy46;",
          "899:    goto yy18;",
          "900:   }",
          "901:  } else {",
          "902:   if (yych <= 'E') {",
          "903:    if (yych <= ';') goto yy71;",
          "904:    if (yych <= 'D') goto yy18;",
          "905:    goto yy73;",
          "906:   } else {",
          "907:    if (yych == 'e') goto yy73;",
          "908:    goto yy18;",
          "909:   }",
          "911: yy48:",
          "912:  yych = *++YYCURSOR;",
          "913:  if (yych == 'N') goto yy74;",
          "914:  goto yy18;",
          "915: yy49:",
          "916:  yych = *++YYCURSOR;",
          "917:  if (yych == 'A') goto yy75;",
          "918:  goto yy18;",
          "919: yy50:",
          "922:  if (yych >= ':') goto yy18;",
          "923: yy51:",
          "924:  ++YYCURSOR;",
          "925:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "926:  yych = *YYCURSOR;",
          "927:  if (yych <= '/') goto yy18;",
          "928:  if (yych <= '9') goto yy51;",
          "929:  if (yych == ';') goto yy76;",
          "931: yy53:",
          "935: yy54:",
          "940:  if (yych <= '9') goto yy54;",
          "941:  if (yych <= ':') goto yy78;",
          "942:  goto yy18;",
          "943: yy56:",
          "945:  if (yych <= '/') goto yy18;",
          "946:  if (yych >= ':') goto yy18;",
          "947: yy57:",
          "949:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "950:  yych = *YYCURSOR;",
          "952:  if (yych <= '9') goto yy57;",
          "953:  if (yych == ';') goto yy79;",
          "955: yy59:",
          "959: yy60:",
          "964:  if (yych <= '9') goto yy60;",
          "965:  if (yych <= ':') goto yy81;",
          "966:  goto yy18;",
          "967: yy62:",
          "969:  if (yych == '\"') goto yy82;",
          "970:  goto yy18;",
          "971: yy63:",
          "973: #line 597 \"ext/standard/var_unserializer.re\"",
          "975:  zend_long id;",
          "978:  if (!var_hash) return 0;",
          "980:  id = parse_iv(start + 2) - 1;",
          "981:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "985:  zval_ptr_dtor(rval);",
          "986:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "987:   ZVAL_UNDEF(rval);",
          "988:   return 1;",
          "990:  if (Z_ISREF_P(rval_ref)) {",
          "991:   ZVAL_COPY(rval, rval_ref);",
          "992:  } else {",
          "993:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "994:   ZVAL_COPY(rval, rval_ref);",
          "999: #line 1000 \"ext/standard/var_unserializer.c\"",
          "1000: yy65:",
          "1002:  if (yych == '\"') goto yy84;",
          "1004: yy66:",
          "1006:  if (yych == '{') goto yy86;",
          "1008: yy67:",
          "1010: #line 654 \"ext/standard/var_unserializer.re\"",
          "1011:  {",
          "1013:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1014:  return 1;",
          "1015: }",
          "1016: #line 1017 \"ext/standard/var_unserializer.c\"",
          "1017: yy69:",
          "1023:   if (yych <= '9') goto yy69;",
          "1028:    goto yy73;",
          "1030:    if (yych == 'e') goto yy73;",
          "1034: yy71:",
          "1036: #line 702 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "639:  case 'O': goto yy13;",
          "641:  case 'R': goto yy2;",
          "642:  case 'S': goto yy10;",
          "643:  case 'a': goto yy11;",
          "644:  case 'b': goto yy6;",
          "645:  case 'd': goto yy8;",
          "646:  case 'i': goto yy7;",
          "648:  case 'r': goto yy4;",
          "649:  case 's': goto yy9;",
          "650:  case '}': goto yy14;",
          "651:  default: goto yy16;",
          "654:  yych = *(YYMARKER = ++YYCURSOR);",
          "655:  if (yych == ':') goto yy95;",
          "657: #line 975 \"ext/standard/var_unserializer.re\"",
          "659: #line 660 \"ext/standard/var_unserializer.c\"",
          "662:  if (yych == ':') goto yy89;",
          "666:  if (yych == ';') goto yy87;",
          "670:  if (yych == ':') goto yy83;",
          "674:  if (yych == ':') goto yy77;",
          "678:  if (yych == ':') goto yy53;",
          "682:  if (yych == ':') goto yy46;",
          "686:  if (yych == ':') goto yy39;",
          "690:  if (yych == ':') goto yy32;",
          "694:  if (yych == ':') goto yy25;",
          "698:  if (yych == ':') goto yy17;",
          "702: #line 969 \"ext/standard/var_unserializer.re\"",
          "708: #line 709 \"ext/standard/var_unserializer.c\"",
          "709: yy16:",
          "710:  yych = *++YYCURSOR;",
          "711:  goto yy3;",
          "715:   goto yy20;",
          "717:  if (yych == '+') goto yy19;",
          "723:  if (yybm[0+yych] & 128) {",
          "724:   goto yy20;",
          "727: yy20:",
          "728:  ++YYCURSOR;",
          "729:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "730:  yych = *YYCURSOR;",
          "731:  if (yybm[0+yych] & 128) {",
          "732:   goto yy20;",
          "733:  }",
          "735:  if (yych >= ';') goto yy18;",
          "737:  if (yych != '\"') goto yy18;",
          "738:  ++YYCURSOR;",
          "739: #line 817 \"ext/standard/var_unserializer.re\"",
          "740:  {",
          "741:  size_t len, len2, len3, maxlen;",
          "742:  zend_long elements;",
          "743:  char *str;",
          "744:  zend_string *class_name;",
          "745:  zend_class_entry *ce;",
          "746:  int incomplete_class = 0;",
          "748:  int custom_object = 0;",
          "750:  zval user_func;",
          "751:  zval retval;",
          "752:  zval args[1];",
          "754:     if (!var_hash) return 0;",
          "755:  if (*start == 'C') {",
          "756:   custom_object = 1;",
          "757:  }",
          "759:  len2 = len = parse_uiv(start + 2);",
          "760:  maxlen = max - YYCURSOR;",
          "761:  if (maxlen < len || len == 0) {",
          "763:   return 0;",
          "764:  }",
          "766:  str = (char*)YYCURSOR;",
          "768:  YYCURSOR += len;",
          "770:  if (*(YYCURSOR) != '\"') {",
          "772:   return 0;",
          "773:  }",
          "774:  if (*(YYCURSOR+1) != ':') {",
          "776:   return 0;",
          "777:  }",
          "779:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "780:  if (len3 != len)",
          "781:  {",
          "783:   return 0;",
          "784:  }",
          "786:  class_name = zend_string_init(str, len, 0);",
          "788:  do {",
          "789:   if(!unserialize_allowed_class(class_name, var_hash)) {",
          "790:    incomplete_class = 1;",
          "791:    ce = PHP_IC_ENTRY;",
          "792:    break;",
          "796:   BG(serialize_lock)++;",
          "797:   ce = zend_lookup_class(class_name);",
          "798:   if (ce) {",
          "799:    BG(serialize_lock)--;",
          "800:    if (EG(exception)) {",
          "801:     zend_string_release(class_name);",
          "802:     return 0;",
          "803:    }",
          "804:    break;",
          "805:   }",
          "806:   BG(serialize_lock)--;",
          "808:   if (EG(exception)) {",
          "809:    zend_string_release(class_name);",
          "810:    return 0;",
          "811:   }",
          "814:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "815:    incomplete_class = 1;",
          "816:    ce = PHP_IC_ENTRY;",
          "817:    break;",
          "818:   }",
          "821:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "823:   ZVAL_STR_COPY(&args[0], class_name);",
          "824:   BG(serialize_lock)++;",
          "825:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "826:    BG(serialize_lock)--;",
          "827:    if (EG(exception)) {",
          "828:     zend_string_release(class_name);",
          "829:     zval_ptr_dtor(&user_func);",
          "830:     zval_ptr_dtor(&args[0]);",
          "831:     return 0;",
          "832:    }",
          "833:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "834:    incomplete_class = 1;",
          "835:    ce = PHP_IC_ENTRY;",
          "836:    zval_ptr_dtor(&user_func);",
          "837:    zval_ptr_dtor(&args[0]);",
          "838:    break;",
          "839:   }",
          "840:   BG(serialize_lock)--;",
          "841:   zval_ptr_dtor(&retval);",
          "842:   if (EG(exception)) {",
          "843:    zend_string_release(class_name);",
          "844:    zval_ptr_dtor(&user_func);",
          "845:    zval_ptr_dtor(&args[0]);",
          "846:    return 0;",
          "847:   }",
          "850:   BG(serialize_lock)++;",
          "851:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "852:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "853:    incomplete_class = 1;",
          "854:    ce = PHP_IC_ENTRY;",
          "855:   }",
          "856:   BG(serialize_lock)--;",
          "858:   zval_ptr_dtor(&user_func);",
          "859:   zval_ptr_dtor(&args[0]);",
          "860:   break;",
          "861:  } while (1);",
          "865:  if (custom_object) {",
          "866:   int ret;",
          "868:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "870:   if (ret && incomplete_class) {",
          "871:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "873:   zend_string_release(class_name);",
          "874:   return ret;",
          "877:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "879:  if (elements < 0) {",
          "880:     efree(class_name);",
          "881:     return 0;",
          "884:  if (incomplete_class) {",
          "885:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "887:  zend_string_release(class_name);",
          "889:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "890: }",
          "891: #line 892 \"ext/standard/var_unserializer.c\"",
          "892: yy25:",
          "895:   if (yych != '+') goto yy18;",
          "897:   if (yych <= '-') goto yy26;",
          "899:   if (yych <= '9') goto yy27;",
          "902: yy26:",
          "905:  if (yych >= ':') goto yy18;",
          "906: yy27:",
          "911:  if (yych <= '9') goto yy27;",
          "912:  if (yych >= ';') goto yy18;",
          "914:  if (yych != '\"') goto yy18;",
          "916: #line 806 \"ext/standard/var_unserializer.re\"",
          "917:  {",
          "918:  long elements;",
          "919:     if (!var_hash) return 0;",
          "921:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "922:  if (elements < 0) {",
          "923:   return 0;",
          "924:  }",
          "925:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "926: }",
          "927: #line 928 \"ext/standard/var_unserializer.c\"",
          "928: yy32:",
          "929:  yych = *++YYCURSOR;",
          "930:  if (yych == '+') goto yy33;",
          "934: yy33:",
          "938: yy34:",
          "943:  if (yych <= '9') goto yy34;",
          "944:  if (yych >= ';') goto yy18;",
          "946:  if (yych != '{') goto yy18;",
          "948: #line 782 \"ext/standard/var_unserializer.re\"",
          "949:  {",
          "950:  zend_long elements = parse_iv(start + 2);",
          "953:     if (!var_hash) return 0;",
          "955:  if (elements < 0) {",
          "956:   return 0;",
          "959:  array_init_size(rval, elements);",
          "960:  if (elements) {",
          "963:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "966:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "967:   return 0;",
          "968:  }",
          "970:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "971: }",
          "972: #line 973 \"ext/standard/var_unserializer.c\"",
          "973: yy39:",
          "975:  if (yych == '+') goto yy40;",
          "977:  if (yych <= '9') goto yy41;",
          "979: yy40:",
          "983: yy41:",
          "988:  if (yych <= '9') goto yy41;",
          "989:  if (yych >= ';') goto yy18;",
          "991:  if (yych != '\"') goto yy18;",
          "993: #line 748 \"ext/standard/var_unserializer.re\"",
          "994:  {",
          "995:  size_t len, maxlen;",
          "996:  zend_string *str;",
          "998:  len = parse_uiv(start + 2);",
          "999:  maxlen = max - YYCURSOR;",
          "1000:  if (maxlen < len) {",
          "1002:   return 0;",
          "1003:  }",
          "1005:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1006:   return 0;",
          "1007:  }",
          "1009:  if (*(YYCURSOR) != '\"') {",
          "1010:   zend_string_free(str);",
          "1012:   return 0;",
          "1013:  }",
          "1015:  if (*(YYCURSOR + 1) != ';') {",
          "1016:   efree(str);",
          "1018:   return 0;",
          "1019:  }",
          "1021:  YYCURSOR += 2;",
          "1024:  ZVAL_STR(rval, str);",
          "1025:  return 1;",
          "1026: }",
          "1027: #line 1028 \"ext/standard/var_unserializer.c\"",
          "1028: yy46:",
          "1029:  yych = *++YYCURSOR;",
          "1030:  if (yych == '+') goto yy47;",
          "1032:  if (yych <= '9') goto yy48;",
          "1034: yy47:",
          "1038: yy48:",
          "1043:  if (yych <= '9') goto yy48;",
          "1044:  if (yych >= ';') goto yy18;",
          "1046:  if (yych != '\"') goto yy18;",
          "1048: #line 716 \"ext/standard/var_unserializer.re\"",
          "1050:  size_t len, maxlen;",
          "1051:  char *str;",
          "1053:  len = parse_uiv(start + 2);",
          "1054:  maxlen = max - YYCURSOR;",
          "1055:  if (maxlen < len) {",
          "1060:  str = (char*)YYCURSOR;",
          "1062:  YYCURSOR += len;",
          "1064:  if (*(YYCURSOR) != '\"') {",
          "1066:   return 0;",
          "1069:  if (*(YYCURSOR + 1) != ';') {",
          "1071:   return 0;",
          "1074:  YYCURSOR += 2;",
          "1077:  ZVAL_STRINGL(rval, str, len);",
          "1080: #line 1081 \"ext/standard/var_unserializer.c\"",
          "1081: yy53:",
          "1082:  yych = *++YYCURSOR;",
          "1083:  if (yych <= '/') {",
          "1084:   if (yych <= ',') {",
          "1085:    if (yych == '+') goto yy57;",
          "1086:    goto yy18;",
          "1087:   } else {",
          "1088:    if (yych <= '-') goto yy55;",
          "1089:    if (yych <= '.') goto yy60;",
          "1090:    goto yy18;",
          "1091:   }",
          "1092:  } else {",
          "1093:   if (yych <= 'I') {",
          "1094:    if (yych <= '9') goto yy58;",
          "1095:    if (yych <= 'H') goto yy18;",
          "1096:    goto yy56;",
          "1097:   } else {",
          "1098:    if (yych != 'N') goto yy18;",
          "1099:   }",
          "1100:  }",
          "1102:  if (yych == 'A') goto yy76;",
          "1104: yy55:",
          "1105:  yych = *++YYCURSOR;",
          "1106:  if (yych <= '/') {",
          "1107:   if (yych == '.') goto yy60;",
          "1108:   goto yy18;",
          "1109:  } else {",
          "1110:   if (yych <= '9') goto yy58;",
          "1111:   if (yych != 'I') goto yy18;",
          "1112:  }",
          "1113: yy56:",
          "1115:  if (yych == 'N') goto yy72;",
          "1117: yy57:",
          "1118:  yych = *++YYCURSOR;",
          "1119:  if (yych == '.') goto yy60;",
          "1120:  if (yych <= '/') goto yy18;",
          "1121:  if (yych >= ':') goto yy18;",
          "1122: yy58:",
          "1124:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1125:  yych = *YYCURSOR;",
          "1126:  if (yych <= ':') {",
          "1127:   if (yych <= '.') {",
          "1128:    if (yych <= '-') goto yy18;",
          "1129:    goto yy70;",
          "1130:   } else {",
          "1131:    if (yych <= '/') goto yy18;",
          "1132:    if (yych <= '9') goto yy58;",
          "1133:    goto yy18;",
          "1134:   }",
          "1135:  } else {",
          "1136:   if (yych <= 'E') {",
          "1137:    if (yych <= ';') goto yy63;",
          "1138:    if (yych <= 'D') goto yy18;",
          "1139:    goto yy65;",
          "1140:   } else {",
          "1141:    if (yych == 'e') goto yy65;",
          "1142:    goto yy18;",
          "1143:   }",
          "1144:  }",
          "1145: yy60:",
          "1146:  yych = *++YYCURSOR;",
          "1147:  if (yych <= '/') goto yy18;",
          "1148:  if (yych >= ':') goto yy18;",
          "1149: yy61:",
          "1155:   if (yych <= '9') goto yy61;",
          "1160:    goto yy65;",
          "1162:    if (yych == 'e') goto yy65;",
          "1166: yy63:",
          "1168: #line 707 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1042:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1043:  return 1;",
          "1044: }",
          "1047:  yych = *++YYCURSOR;",
          "1048:  if (yych <= ',') {",
          "1051:  } else {",
          "1053:   if (yych <= '/') goto yy18;",
          "1055:   goto yy18;",
          "1056:  }",
          "1058:  yych = *++YYCURSOR;",
          "1060:  goto yy18;",
          "1062:  yych = *++YYCURSOR;",
          "1064:  goto yy18;",
          "1066:  ++YYCURSOR;",
          "1084:   } else {",
          "1086:   }",
          "1087:  }",
          "1095:  yych = *++YYCURSOR;",
          "1099:  ++YYCURSOR;",
          "1101:  {",
          "1119:  }",
          "1123:  return 1;",
          "1124: }",
          "1127:  yych = *++YYCURSOR;",
          "1129:  goto yy18;",
          "1131:  ++YYCURSOR;",
          "1133:  {",
          "1177:  }",
          "1225:    }",
          "1265:   }",
          "1268:  }",
          "1278: }",
          "1281:  ++YYCURSOR;",
          "1283:  {",
          "1314:  return 1;",
          "1315: }",
          "1318:  ++YYCURSOR;",
          "1320:  {",
          "1342: }",
          "1345:  yych = *++YYCURSOR;",
          "1346:  if (yych <= ',') {",
          "1349:  } else {",
          "1351:   if (yych <= '/') goto yy18;",
          "1353:  }",
          "1355:  ++YYCURSOR;",
          "1356:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1357:  yych = *YYCURSOR;",
          "1358:  if (yych <= '/') goto yy18;",
          "1367:  ++YYCURSOR;",
          "1369:  {",
          "1387:   return 0;",
          "1388:  }",
          "1396:   return 0;",
          "1397:  }",
          "1402:  }",
          "1408:  return 1;",
          "1409: }",
          "1411: yy96:",
          "1412:  yych = *++YYCURSOR;",
          "1413:  if (yych <= '/') goto yy18;",
          "1416: yy97:",
          "1417:  ++YYCURSOR;",
          "1419:  {",
          "1428:  } else {",
          "1430:  }",
          "1432:  return 1;",
          "1433: }",
          "1435: }",
          "1439:  return 0;",
          "",
          "[Removed Lines]",
          "1045: #line 1046 \"ext/standard/var_unserializer.c\"",
          "1046: yy73:",
          "1049:   if (yych == '+') goto yy88;",
          "1050:   goto yy18;",
          "1052:   if (yych <= '-') goto yy88;",
          "1054:   if (yych <= '9') goto yy89;",
          "1057: yy74:",
          "1059:  if (yych == 'F') goto yy91;",
          "1061: yy75:",
          "1063:  if (yych == 'N') goto yy91;",
          "1065: yy76:",
          "1067: #line 660 \"ext/standard/var_unserializer.re\"",
          "1068:  {",
          "1069: #if SIZEOF_ZEND_LONG == 4",
          "1070:  int digits = YYCURSOR - start - 3;",
          "1072:  if (start[2] == '-' || start[2] == '+') {",
          "1073:   digits--;",
          "1074:  }",
          "1077:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1078:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1079:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1081:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1082:     goto use_double;",
          "1083:    }",
          "1085:    goto use_double;",
          "1088: #endif",
          "1090:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1091:  return 1;",
          "1092: }",
          "1093: #line 1094 \"ext/standard/var_unserializer.c\"",
          "1094: yy78:",
          "1096:  if (yych == '\"') goto yy92;",
          "1097:  goto yy18;",
          "1098: yy79:",
          "1100: #line 623 \"ext/standard/var_unserializer.re\"",
          "1102:  zend_long id;",
          "1105:  if (!var_hash) return 0;",
          "1107:  id = parse_iv(start + 2) - 1;",
          "1108:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1109:   return 0;",
          "1110:  }",
          "1112:  if (rval_ref == rval) {",
          "1113:   return 0;",
          "1114:  }",
          "1116:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1117:   ZVAL_UNDEF(rval);",
          "1118:   return 1;",
          "1121:  ZVAL_COPY(rval, rval_ref);",
          "1125: #line 1126 \"ext/standard/var_unserializer.c\"",
          "1126: yy81:",
          "1128:  if (yych == '\"') goto yy94;",
          "1130: yy82:",
          "1132: #line 808 \"ext/standard/var_unserializer.re\"",
          "1134:  size_t len, len2, len3, maxlen;",
          "1135:  zend_long elements;",
          "1136:  char *str;",
          "1137:  zend_string *class_name;",
          "1138:  zend_class_entry *ce;",
          "1139:  int incomplete_class = 0;",
          "1141:  int custom_object = 0;",
          "1143:  zval user_func;",
          "1144:  zval retval;",
          "1145:  zval args[1];",
          "1147:     if (!var_hash) return 0;",
          "1148:  if (*start == 'C') {",
          "1149:   custom_object = 1;",
          "1150:  }",
          "1152:  len2 = len = parse_uiv(start + 2);",
          "1153:  maxlen = max - YYCURSOR;",
          "1154:  if (maxlen < len || len == 0) {",
          "1156:   return 0;",
          "1157:  }",
          "1159:  str = (char*)YYCURSOR;",
          "1161:  YYCURSOR += len;",
          "1163:  if (*(YYCURSOR) != '\"') {",
          "1165:   return 0;",
          "1166:  }",
          "1167:  if (*(YYCURSOR+1) != ':') {",
          "1169:   return 0;",
          "1170:  }",
          "1172:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1173:  if (len3 != len)",
          "1174:  {",
          "1176:   return 0;",
          "1179:  class_name = zend_string_init(str, len, 0);",
          "1181:  do {",
          "1182:   if(!unserialize_allowed_class(class_name, var_hash)) {",
          "1183:    incomplete_class = 1;",
          "1184:    ce = PHP_IC_ENTRY;",
          "1185:    break;",
          "1186:   }",
          "1189:   BG(serialize_lock)++;",
          "1190:   ce = zend_lookup_class(class_name);",
          "1191:   if (ce) {",
          "1192:    BG(serialize_lock)--;",
          "1193:    if (EG(exception)) {",
          "1194:     zend_string_release(class_name);",
          "1195:     return 0;",
          "1196:    }",
          "1197:    break;",
          "1198:   }",
          "1199:   BG(serialize_lock)--;",
          "1201:   if (EG(exception)) {",
          "1202:    zend_string_release(class_name);",
          "1203:    return 0;",
          "1204:   }",
          "1207:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1208:    incomplete_class = 1;",
          "1209:    ce = PHP_IC_ENTRY;",
          "1210:    break;",
          "1211:   }",
          "1214:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1216:   ZVAL_STR_COPY(&args[0], class_name);",
          "1217:   BG(serialize_lock)++;",
          "1218:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1219:    BG(serialize_lock)--;",
          "1220:    if (EG(exception)) {",
          "1221:     zend_string_release(class_name);",
          "1222:     zval_ptr_dtor(&user_func);",
          "1223:     zval_ptr_dtor(&args[0]);",
          "1224:     return 0;",
          "1226:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1227:    incomplete_class = 1;",
          "1228:    ce = PHP_IC_ENTRY;",
          "1229:    zval_ptr_dtor(&user_func);",
          "1230:    zval_ptr_dtor(&args[0]);",
          "1231:    break;",
          "1232:   }",
          "1233:   BG(serialize_lock)--;",
          "1234:   zval_ptr_dtor(&retval);",
          "1235:   if (EG(exception)) {",
          "1236:    zend_string_release(class_name);",
          "1237:    zval_ptr_dtor(&user_func);",
          "1238:    zval_ptr_dtor(&args[0]);",
          "1239:    return 0;",
          "1240:   }",
          "1243:   BG(serialize_lock)++;",
          "1244:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1245:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1246:    incomplete_class = 1;",
          "1247:    ce = PHP_IC_ENTRY;",
          "1248:   }",
          "1249:   BG(serialize_lock)--;",
          "1251:   zval_ptr_dtor(&user_func);",
          "1252:   zval_ptr_dtor(&args[0]);",
          "1253:   break;",
          "1254:  } while (1);",
          "1258:  if (custom_object) {",
          "1259:   int ret;",
          "1261:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1263:   if (ret && incomplete_class) {",
          "1264:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1266:   zend_string_release(class_name);",
          "1267:   return ret;",
          "1270:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1272:  if (incomplete_class) {",
          "1273:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1274:  }",
          "1275:  zend_string_release(class_name);",
          "1277:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1279: #line 1280 \"ext/standard/var_unserializer.c\"",
          "1280: yy84:",
          "1282: #line 743 \"ext/standard/var_unserializer.re\"",
          "1284:  size_t len, maxlen;",
          "1285:  zend_string *str;",
          "1287:  len = parse_uiv(start + 2);",
          "1288:  maxlen = max - YYCURSOR;",
          "1289:  if (maxlen < len) {",
          "1291:   return 0;",
          "1292:  }",
          "1294:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1295:   return 0;",
          "1296:  }",
          "1298:  if (*(YYCURSOR) != '\"') {",
          "1299:   zend_string_free(str);",
          "1301:   return 0;",
          "1302:  }",
          "1304:  if (*(YYCURSOR + 1) != ';') {",
          "1305:   efree(str);",
          "1307:   return 0;",
          "1308:  }",
          "1310:  YYCURSOR += 2;",
          "1313:  ZVAL_STR(rval, str);",
          "1316: #line 1317 \"ext/standard/var_unserializer.c\"",
          "1317: yy86:",
          "1319: #line 777 \"ext/standard/var_unserializer.re\"",
          "1321:  zend_long elements = parse_iv(start + 2);",
          "1324:     if (!var_hash) return 0;",
          "1326:  if (elements < 0) {",
          "1327:   return 0;",
          "1328:  }",
          "1330:  array_init_size(rval, elements);",
          "1331:  if (elements) {",
          "1334:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1335:  }",
          "1337:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1338:   return 0;",
          "1339:  }",
          "1341:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1343: #line 1344 \"ext/standard/var_unserializer.c\"",
          "1344: yy88:",
          "1347:   if (yych == '+') goto yy96;",
          "1348:   goto yy18;",
          "1350:   if (yych <= '-') goto yy96;",
          "1352:   if (yych >= ':') goto yy18;",
          "1354: yy89:",
          "1359:  if (yych <= '9') goto yy89;",
          "1360:  if (yych == ';') goto yy71;",
          "1361:  goto yy18;",
          "1362: yy91:",
          "1363:  yych = *++YYCURSOR;",
          "1364:  if (yych == ';') goto yy97;",
          "1365:  goto yy18;",
          "1366: yy92:",
          "1368: #line 801 \"ext/standard/var_unserializer.re\"",
          "1370:     if (!var_hash) return 0;",
          "1372:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "1373:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "1374: }",
          "1375: #line 1376 \"ext/standard/var_unserializer.c\"",
          "1376: yy94:",
          "1377:  ++YYCURSOR;",
          "1378: #line 711 \"ext/standard/var_unserializer.re\"",
          "1379:  {",
          "1380:  size_t len, maxlen;",
          "1381:  char *str;",
          "1383:  len = parse_uiv(start + 2);",
          "1384:  maxlen = max - YYCURSOR;",
          "1385:  if (maxlen < len) {",
          "1390:  str = (char*)YYCURSOR;",
          "1392:  YYCURSOR += len;",
          "1394:  if (*(YYCURSOR) != '\"') {",
          "1399:  if (*(YYCURSOR + 1) != ';') {",
          "1401:   return 0;",
          "1404:  YYCURSOR += 2;",
          "1407:  ZVAL_STRINGL(rval, str, len);",
          "1410: #line 1411 \"ext/standard/var_unserializer.c\"",
          "1414:  if (yych <= '9') goto yy89;",
          "1415:  goto yy18;",
          "1418: #line 686 \"ext/standard/var_unserializer.re\"",
          "1422:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1423:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1424:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1425:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1426:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1427:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1429:   ZVAL_NULL(rval);",
          "1434: #line 1435 \"ext/standard/var_unserializer.c\"",
          "1436: #line 963 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1177: #line 1178 \"ext/standard/var_unserializer.c\"",
          "1178: yy65:",
          "1181:   if (yych != '+') goto yy18;",
          "1183:   if (yych <= '-') goto yy66;",
          "1185:   if (yych <= '9') goto yy67;",
          "1188: yy66:",
          "1190:  if (yych <= ',') {",
          "1191:   if (yych == '+') goto yy69;",
          "1192:   goto yy18;",
          "1193:  } else {",
          "1194:   if (yych <= '-') goto yy69;",
          "1195:   if (yych <= '/') goto yy18;",
          "1196:   if (yych >= ':') goto yy18;",
          "1197:  }",
          "1198: yy67:",
          "1199:  ++YYCURSOR;",
          "1200:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1201:  yych = *YYCURSOR;",
          "1202:  if (yych <= '/') goto yy18;",
          "1203:  if (yych <= '9') goto yy67;",
          "1204:  if (yych == ';') goto yy63;",
          "1206: yy69:",
          "1208:  if (yych <= '/') goto yy18;",
          "1209:  if (yych <= '9') goto yy67;",
          "1211: yy70:",
          "1213:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1214:  yych = *YYCURSOR;",
          "1215:  if (yych <= ';') {",
          "1216:   if (yych <= '/') goto yy18;",
          "1217:   if (yych <= '9') goto yy70;",
          "1218:   if (yych <= ':') goto yy18;",
          "1219:   goto yy63;",
          "1220:  } else {",
          "1221:   if (yych <= 'E') {",
          "1222:    if (yych <= 'D') goto yy18;",
          "1223:    goto yy65;",
          "1225:    if (yych == 'e') goto yy65;",
          "1226:    goto yy18;",
          "1229: yy72:",
          "1231:  if (yych != 'F') goto yy18;",
          "1232: yy73:",
          "1233:  yych = *++YYCURSOR;",
          "1234:  if (yych != ';') goto yy18;",
          "1236: #line 691 \"ext/standard/var_unserializer.re\"",
          "1240:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1241:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1242:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1243:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1244:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1245:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1246:  } else {",
          "1247:   ZVAL_NULL(rval);",
          "1252: #line 1253 \"ext/standard/var_unserializer.c\"",
          "1253: yy76:",
          "1255:  if (yych == 'N') goto yy73;",
          "1257: yy77:",
          "1258:  yych = *++YYCURSOR;",
          "1259:  if (yych <= ',') {",
          "1260:   if (yych != '+') goto yy18;",
          "1261:  } else {",
          "1262:   if (yych <= '-') goto yy78;",
          "1263:   if (yych <= '/') goto yy18;",
          "1264:   if (yych <= '9') goto yy79;",
          "1265:   goto yy18;",
          "1266:  }",
          "1267: yy78:",
          "1268:  yych = *++YYCURSOR;",
          "1269:  if (yych <= '/') goto yy18;",
          "1270:  if (yych >= ':') goto yy18;",
          "1271: yy79:",
          "1273:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1274:  yych = *YYCURSOR;",
          "1275:  if (yych <= '/') goto yy18;",
          "1276:  if (yych <= '9') goto yy79;",
          "1277:  if (yych != ';') goto yy18;",
          "1278:  ++YYCURSOR;",
          "1279: #line 665 \"ext/standard/var_unserializer.re\"",
          "1281: #if SIZEOF_ZEND_LONG == 4",
          "1282:  int digits = YYCURSOR - start - 3;",
          "1284:  if (start[2] == '-' || start[2] == '+') {",
          "1285:   digits--;",
          "1289:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1290:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1291:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1293:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1294:     goto use_double;",
          "1296:   } else {",
          "1297:    goto use_double;",
          "1300: #endif",
          "1302:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1303:  return 1;",
          "1305: #line 1306 \"ext/standard/var_unserializer.c\"",
          "1306: yy83:",
          "1307:  yych = *++YYCURSOR;",
          "1308:  if (yych <= '/') goto yy18;",
          "1309:  if (yych >= '2') goto yy18;",
          "1310:  yych = *++YYCURSOR;",
          "1311:  if (yych != ';') goto yy18;",
          "1313: #line 659 \"ext/standard/var_unserializer.re\"",
          "1316:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1319: #line 1320 \"ext/standard/var_unserializer.c\"",
          "1320: yy87:",
          "1322: #line 653 \"ext/standard/var_unserializer.re\"",
          "1325:  ZVAL_NULL(rval);",
          "1326:  return 1;",
          "1328: #line 1329 \"ext/standard/var_unserializer.c\"",
          "1329: yy89:",
          "1332:   if (yych != '+') goto yy18;",
          "1334:   if (yych <= '-') goto yy90;",
          "1336:   if (yych <= '9') goto yy91;",
          "1337:   goto yy18;",
          "1339: yy90:",
          "1340:  yych = *++YYCURSOR;",
          "1341:  if (yych <= '/') goto yy18;",
          "1342:  if (yych >= ':') goto yy18;",
          "1343: yy91:",
          "1348:  if (yych <= '9') goto yy91;",
          "1349:  if (yych != ';') goto yy18;",
          "1351: #line 628 \"ext/standard/var_unserializer.re\"",
          "1353:  zend_long id;",
          "1356:  if (!var_hash) return 0;",
          "1358:  id = parse_iv(start + 2) - 1;",
          "1359:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1363:  if (rval_ref == rval) {",
          "1367:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1368:   ZVAL_UNDEF(rval);",
          "1369:   return 1;",
          "1372:  ZVAL_COPY(rval, rval_ref);",
          "1376: #line 1377 \"ext/standard/var_unserializer.c\"",
          "1377: yy95:",
          "1378:  yych = *++YYCURSOR;",
          "1379:  if (yych <= ',') {",
          "1380:   if (yych != '+') goto yy18;",
          "1381:  } else {",
          "1382:   if (yych <= '-') goto yy96;",
          "1383:   if (yych <= '/') goto yy18;",
          "1384:   if (yych <= '9') goto yy97;",
          "1385:   goto yy18;",
          "1386:  }",
          "1390:  if (yych >= ':') goto yy18;",
          "1393:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1394:  yych = *YYCURSOR;",
          "1395:  if (yych <= '/') goto yy18;",
          "1396:  if (yych <= '9') goto yy97;",
          "1397:  if (yych != ';') goto yy18;",
          "1398:  ++YYCURSOR;",
          "1399: #line 602 \"ext/standard/var_unserializer.re\"",
          "1401:  zend_long id;",
          "1404:  if (!var_hash) return 0;",
          "1406:  id = parse_iv(start + 2) - 1;",
          "1407:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1408:   return 0;",
          "1409:  }",
          "1411:  zval_ptr_dtor(rval);",
          "1412:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1413:   ZVAL_UNDEF(rval);",
          "1414:   return 1;",
          "1415:  }",
          "1416:  if (Z_ISREF_P(rval_ref)) {",
          "1417:   ZVAL_COPY(rval, rval_ref);",
          "1419:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1420:   ZVAL_COPY(rval, rval_ref);",
          "1425: #line 1426 \"ext/standard/var_unserializer.c\"",
          "1427: #line 977 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "482: {",
          "483:  zend_long elements;",
          "485:  elements = parse_iv2((*p) + 2, p);",
          "487:  (*p) += 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "485:  if( *p >= max - 2) {",
          "486:   zend_error(E_WARNING, \"Bad unserialize data\");",
          "487:   return -1;",
          "488:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "491:  } else {",
          "496:  }",
          "498:  return elements;",
          "",
          "[Removed Lines]",
          "494:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ZSTR_VAL(ce->name));",
          "495:   return 0;",
          "",
          "[Added Lines]",
          "499:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ce->name);",
          "500:   return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "799: }",
          "801: \"o:\" iv \":\" [\"] {",
          "802:     if (!var_hash) return 0;",
          "806: }",
          "808: object \":\" uiv \":\" [\"] {",
          "",
          "[Removed Lines]",
          "804:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "805:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "",
          "[Added Lines]",
          "807:  long elements;",
          "810:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "811:  if (elements < 0) {",
          "812:   return 0;",
          "813:  }",
          "814:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "945:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "947:  if (incomplete_class) {",
          "948:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "949:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "956:  if (elements < 0) {",
          "957:     efree(class_name);",
          "958:     return 0;",
          "959:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4fb7665c099eb2e2ee75ead8e77479866ab01b2a",
      "candidate_info": {
        "commit_hash": "4fb7665c099eb2e2ee75ead8e77479866ab01b2a",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/4fb7665c099eb2e2ee75ead8e77479866ab01b2a",
        "files": [
          "NEWS",
          "ext/standard/tests/serialize/bug74103.phpt",
          "ext/standard/tests/serialize/bug75054.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Merge branch 'PHP-7.0' into PHP-7.1",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug74103.phpt||ext/standard/tests/serialize/bug74103.phpt",
          "ext/standard/tests/serialize/bug75054.phpt||ext/standard/tests/serialize/bug75054.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/tests/serialize/bug74103.phpt||ext/standard/tests/serialize/bug74103.phpt",
            "ext/standard/tests/serialize/bug75054.phpt||ext/standard/tests/serialize/bug75054.phpt",
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/tests/serialize/bug74103.phpt||ext/standard/tests/serialize/bug74103.phpt",
            "ext/standard/tests/serialize/bug75054.phpt||ext/standard/tests/serialize/bug75054.phpt",
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug74103.phpt||ext/standard/tests/serialize/bug74103.phpt": [
          "File: ext/standard/tests/serialize/bug74103.phpt -> ext/standard/tests/serialize/bug74103.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #74103: heap-use-after-free when unserializing invalid array size",
          "3: --FILE--",
          "4: <?php",
          "5: var_dump(unserialize('a:7:{i:0;i:04;s:1:\"a\";i:2;i:00009617006;i:4;s:1:\"a\";i:4;s:1:\"a\";R:5;s:1:\"7\";R:3;s:1:\"a\";R:5;;s:18;}}'));",
          "6: ?>",
          "7: --EXPECTF--",
          "8: Notice: unserialize(): Error at offset 68 of 100 bytes in %s on line %d",
          "9: bool(false)",
          "",
          "---------------"
        ],
        "ext/standard/tests/serialize/bug75054.phpt||ext/standard/tests/serialize/bug75054.phpt": [
          "File: ext/standard/tests/serialize/bug75054.phpt -> ext/standard/tests/serialize/bug75054.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #75054: A Denial of Service Vulnerability was found when performing deserialization",
          "3: --FILE--",
          "4: <?php",
          "5: $poc = 'a:9:{i:0;s:4:\"0000\";i:0;s:4:\"0000\";i:0;R:2;s:4:\"5003\";R:2;s:4:\"0000\";R:2;s:4:\"0000\";R:2;s:4:\"';",
          "6: $poc .= \"\\x06\";",
          "7: $poc .= '000\";R:2;s:4:\"0000\";d:0;s:4:\"0000\";a:9:{s:4:\"0000\";';",
          "8: var_dump(unserialize($poc));",
          "9: ?>",
          "10: --EXPECTF--",
          "11: Notice: unserialize(): Error at offset 43 of 145 bytes in %s on line %d",
          "12: bool(false)",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "450:    return 0;",
          "451:   }",
          "463:   zval_dtor(&key);",
          "465:   if (elements && *(*p-1) != ';' && *(*p-1) != '}') {",
          "",
          "[Removed Lines]",
          "453:   if (UNEXPECTED(Z_ISUNDEF_P(data))) {",
          "454:    if (Z_TYPE(key) == IS_LONG) {",
          "455:     zend_hash_index_del(ht, Z_LVAL(key));",
          "456:    } else {",
          "457:     zend_hash_del_ind(ht, Z_STR(key));",
          "458:    }",
          "459:   } else {",
          "460:    var_push_dtor(var_hash, data);",
          "461:   }",
          "",
          "[Added Lines]",
          "453:   var_push_dtor(var_hash, data);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "620:  start = cursor;",
          "624: {",
          "625:  YYCTYPE yych;",
          "626:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "623: #line 624 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "614: #line 615 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "661:  yych = *YYCURSOR;",
          "662:  switch (yych) {",
          "663:  case 'C':",
          "665:  case 'N': goto yy5;",
          "672:  case 'o': goto yy12;",
          "677:  }",
          "678: yy2:",
          "681: yy3:",
          "683:  { return 0; }",
          "685: yy4:",
          "686:  yych = *(YYMARKER = ++YYCURSOR);",
          "688:  goto yy3;",
          "689: yy5:",
          "690:  yych = *++YYCURSOR;",
          "692:  goto yy3;",
          "693: yy6:",
          "694:  yych = *(YYMARKER = ++YYCURSOR);",
          "696:  goto yy3;",
          "697: yy7:",
          "698:  yych = *(YYMARKER = ++YYCURSOR);",
          "700:  goto yy3;",
          "701: yy8:",
          "702:  yych = *(YYMARKER = ++YYCURSOR);",
          "704:  goto yy3;",
          "705: yy9:",
          "706:  yych = *(YYMARKER = ++YYCURSOR);",
          "708:  goto yy3;",
          "709: yy10:",
          "710:  yych = *(YYMARKER = ++YYCURSOR);",
          "712:  goto yy3;",
          "713: yy11:",
          "714:  yych = *(YYMARKER = ++YYCURSOR);",
          "716:  goto yy3;",
          "717: yy12:",
          "718:  yych = *(YYMARKER = ++YYCURSOR);",
          "720:  goto yy3;",
          "721: yy13:",
          "722:  yych = *(YYMARKER = ++YYCURSOR);",
          "724:  goto yy3;",
          "725: yy14:",
          "726:  ++YYCURSOR;",
          "728:  {",
          "730:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "732: }",
          "737: yy17:",
          "738:  yych = *++YYCURSOR;",
          "739:  if (yybm[0+yych] & 128) {",
          "741:  }",
          "743: yy18:",
          "744:  YYCURSOR = YYMARKER;",
          "745:  goto yy3;",
          "746: yy19:",
          "747:  yych = *++YYCURSOR;",
          "750:  }",
          "751:  goto yy18;",
          "759:  if (yych <= '/') goto yy18;",
          "761:  yych = *++YYCURSOR;",
          "880:   }",
          "897:   }",
          "900:  }",
          "907:  }",
          "911:  }",
          "918:  yych = *++YYCURSOR;",
          "919:  if (yych <= ',') {",
          "921:  } else {",
          "923:   if (yych <= '/') goto yy18;",
          "925:   goto yy18;",
          "926:  }",
          "928:  yych = *++YYCURSOR;",
          "929:  if (yych <= '/') goto yy18;",
          "932:  ++YYCURSOR;",
          "933:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "934:  yych = *YYCURSOR;",
          "935:  if (yych <= '/') goto yy18;",
          "938:  yych = *++YYCURSOR;",
          "940:  ++YYCURSOR;",
          "956:  if (yych <= '/') goto yy18;",
          "957:  if (yych <= '9') goto yy34;",
          "958:  goto yy18;",
          "960:  yych = *++YYCURSOR;",
          "961:  if (yych <= '/') goto yy18;",
          "962:  if (yych >= ':') goto yy18;",
          "964:  ++YYCURSOR;",
          "965:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "966:  yych = *YYCURSOR;",
          "967:  if (yych <= '/') goto yy18;",
          "970:  yych = *++YYCURSOR;",
          "972:  ++YYCURSOR;",
          "989:  }",
          "993:  }",
          "999:  yych = *++YYCURSOR;",
          "1001:  if (yych <= '/') goto yy18;",
          "1003:  goto yy18;",
          "1005:  yych = *++YYCURSOR;",
          "1006:  if (yych <= '/') goto yy18;",
          "1007:  if (yych >= ':') goto yy18;",
          "1009:  ++YYCURSOR;",
          "1010:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "1011:  yych = *YYCURSOR;",
          "1012:  if (yych <= '/') goto yy18;",
          "1015:  yych = *++YYCURSOR;",
          "1017:  ++YYCURSOR;",
          "1056:  if (yych <= '/') goto yy18;",
          "1058:  goto yy18;",
          "1060:  yych = *++YYCURSOR;",
          "1061:  if (yych <= '/') goto yy18;",
          "1062:  if (yych >= ':') goto yy18;",
          "1064:  ++YYCURSOR;",
          "1065:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "1066:  yych = *YYCURSOR;",
          "1067:  if (yych <= '/') goto yy18;",
          "1070:  yych = *++YYCURSOR;",
          "1072:  ++YYCURSOR;",
          "1074:  {",
          "1091:   return 0;",
          "1092:  }",
          "1096:   return 0;",
          "1097:  }",
          "1103:  return 1;",
          "1104: }",
          "1126:  yych = *++YYCURSOR;",
          "1128:  goto yy18;",
          "1139:  yych = *++YYCURSOR;",
          "1141:  goto yy18;",
          "1148:  ++YYCURSOR;",
          "1175:  ++YYCURSOR;",
          "1176:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1177:  yych = *YYCURSOR;",
          "1178:  if (yych <= ';') {",
          "1179:   if (yych <= '/') goto yy18;",
          "1181:   if (yych <= ':') goto yy18;",
          "1182:  } else {",
          "1183:   if (yych <= 'E') {",
          "1184:    if (yych <= 'D') goto yy18;",
          "1186:   } else {",
          "1188:    goto yy18;",
          "1189:   }",
          "1190:  }",
          "1192:  ++YYCURSOR;",
          "1194:  {",
          "1195: #if SIZEOF_ZEND_LONG == 4",
          "1196: use_double:",
          "",
          "[Removed Lines]",
          "664:  case 'O': goto yy13;",
          "666:  case 'R': goto yy2;",
          "667:  case 'S': goto yy10;",
          "668:  case 'a': goto yy11;",
          "669:  case 'b': goto yy6;",
          "670:  case 'd': goto yy8;",
          "671:  case 'i': goto yy7;",
          "673:  case 'r': goto yy4;",
          "674:  case 's': goto yy9;",
          "675:  case '}': goto yy14;",
          "676:  default: goto yy16;",
          "679:  yych = *(YYMARKER = ++YYCURSOR);",
          "680:  if (yych == ':') goto yy95;",
          "682: #line 1001 \"ext/standard/var_unserializer.re\"",
          "684: #line 685 \"ext/standard/var_unserializer.c\"",
          "687:  if (yych == ':') goto yy89;",
          "691:  if (yych == ';') goto yy87;",
          "695:  if (yych == ':') goto yy83;",
          "699:  if (yych == ':') goto yy77;",
          "703:  if (yych == ':') goto yy53;",
          "707:  if (yych == ':') goto yy46;",
          "711:  if (yych == ':') goto yy39;",
          "715:  if (yych == ':') goto yy32;",
          "719:  if (yych == ':') goto yy25;",
          "723:  if (yych == ':') goto yy17;",
          "727: #line 995 \"ext/standard/var_unserializer.re\"",
          "733: #line 734 \"ext/standard/var_unserializer.c\"",
          "734: yy16:",
          "735:  yych = *++YYCURSOR;",
          "736:  goto yy3;",
          "740:   goto yy20;",
          "742:  if (yych == '+') goto yy19;",
          "748:  if (yybm[0+yych] & 128) {",
          "749:   goto yy20;",
          "752: yy20:",
          "753:  ++YYCURSOR;",
          "754:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "755:  yych = *YYCURSOR;",
          "756:  if (yybm[0+yych] & 128) {",
          "757:   goto yy20;",
          "758:  }",
          "760:  if (yych >= ';') goto yy18;",
          "762:  if (yych != '\"') goto yy18;",
          "763:  ++YYCURSOR;",
          "764: #line 843 \"ext/standard/var_unserializer.re\"",
          "765:  {",
          "766:  size_t len, len2, len3, maxlen;",
          "767:  zend_long elements;",
          "768:  char *str;",
          "769:  zend_string *class_name;",
          "770:  zend_class_entry *ce;",
          "771:  int incomplete_class = 0;",
          "773:  int custom_object = 0;",
          "775:  zval user_func;",
          "776:  zval retval;",
          "777:  zval args[1];",
          "779:     if (!var_hash) return 0;",
          "780:  if (*start == 'C') {",
          "781:   custom_object = 1;",
          "782:  }",
          "784:  len2 = len = parse_uiv(start + 2);",
          "785:  maxlen = max - YYCURSOR;",
          "786:  if (maxlen < len || len == 0) {",
          "788:   return 0;",
          "789:  }",
          "791:  str = (char*)YYCURSOR;",
          "793:  YYCURSOR += len;",
          "795:  if (*(YYCURSOR) != '\"') {",
          "797:   return 0;",
          "798:  }",
          "799:  if (*(YYCURSOR+1) != ':') {",
          "801:   return 0;",
          "802:  }",
          "804:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "805:  if (len3 != len)",
          "806:  {",
          "808:   return 0;",
          "809:  }",
          "811:  class_name = zend_string_init(str, len, 0);",
          "813:  do {",
          "814:   if(!unserialize_allowed_class(class_name, var_hash)) {",
          "815:    incomplete_class = 1;",
          "816:    ce = PHP_IC_ENTRY;",
          "817:    break;",
          "818:   }",
          "821:   BG(serialize_lock)++;",
          "822:   ce = zend_lookup_class(class_name);",
          "823:   if (ce) {",
          "824:    BG(serialize_lock)--;",
          "825:    if (EG(exception)) {",
          "826:     zend_string_release(class_name);",
          "827:     return 0;",
          "828:    }",
          "829:    break;",
          "830:   }",
          "831:   BG(serialize_lock)--;",
          "833:   if (EG(exception)) {",
          "834:    zend_string_release(class_name);",
          "835:    return 0;",
          "836:   }",
          "839:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "840:    incomplete_class = 1;",
          "841:    ce = PHP_IC_ENTRY;",
          "842:    break;",
          "843:   }",
          "846:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "848:   ZVAL_STR_COPY(&args[0], class_name);",
          "849:   BG(serialize_lock)++;",
          "850:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "851:    BG(serialize_lock)--;",
          "852:    if (EG(exception)) {",
          "853:     zend_string_release(class_name);",
          "854:     zval_ptr_dtor(&user_func);",
          "855:     zval_ptr_dtor(&args[0]);",
          "856:     return 0;",
          "857:    }",
          "858:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "859:    incomplete_class = 1;",
          "860:    ce = PHP_IC_ENTRY;",
          "861:    zval_ptr_dtor(&user_func);",
          "862:    zval_ptr_dtor(&args[0]);",
          "863:    break;",
          "864:   }",
          "865:   BG(serialize_lock)--;",
          "866:   zval_ptr_dtor(&retval);",
          "867:   if (EG(exception)) {",
          "868:    zend_string_release(class_name);",
          "869:    zval_ptr_dtor(&user_func);",
          "870:    zval_ptr_dtor(&args[0]);",
          "871:    return 0;",
          "872:   }",
          "875:   BG(serialize_lock)++;",
          "876:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "877:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "878:    incomplete_class = 1;",
          "879:    ce = PHP_IC_ENTRY;",
          "881:   BG(serialize_lock)--;",
          "883:   zval_ptr_dtor(&user_func);",
          "884:   zval_ptr_dtor(&args[0]);",
          "885:   break;",
          "886:  } while (1);",
          "890:  if (custom_object) {",
          "891:   int ret;",
          "893:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "895:   if (ret && incomplete_class) {",
          "896:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "898:   zend_string_release(class_name);",
          "899:   return ret;",
          "902:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "904:  if (elements < 0) {",
          "905:     zend_string_release(class_name);",
          "906:     return 0;",
          "909:  if (incomplete_class) {",
          "910:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "912:  zend_string_release(class_name);",
          "914:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "915: }",
          "916: #line 917 \"ext/standard/var_unserializer.c\"",
          "917: yy25:",
          "920:   if (yych != '+') goto yy18;",
          "922:   if (yych <= '-') goto yy26;",
          "924:   if (yych <= '9') goto yy27;",
          "927: yy26:",
          "930:  if (yych >= ':') goto yy18;",
          "931: yy27:",
          "936:  if (yych <= '9') goto yy27;",
          "937:  if (yych >= ';') goto yy18;",
          "939:  if (yych != '\"') goto yy18;",
          "941: #line 832 \"ext/standard/var_unserializer.re\"",
          "942:  {",
          "943:  zend_long elements;",
          "944:     if (!var_hash) return 0;",
          "946:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "947:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "948:   return 0;",
          "949:  }",
          "950:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "951: }",
          "952: #line 953 \"ext/standard/var_unserializer.c\"",
          "953: yy32:",
          "954:  yych = *++YYCURSOR;",
          "955:  if (yych == '+') goto yy33;",
          "959: yy33:",
          "963: yy34:",
          "968:  if (yych <= '9') goto yy34;",
          "969:  if (yych >= ';') goto yy18;",
          "971:  if (yych != '{') goto yy18;",
          "973: #line 808 \"ext/standard/var_unserializer.re\"",
          "974:  {",
          "975:  zend_long elements = parse_iv(start + 2);",
          "978:     if (!var_hash) return 0;",
          "980:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "981:   return 0;",
          "982:  }",
          "984:  array_init_size(rval, elements);",
          "985:  if (elements) {",
          "988:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "991:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "992:   return 0;",
          "995:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "996: }",
          "997: #line 998 \"ext/standard/var_unserializer.c\"",
          "998: yy39:",
          "1000:  if (yych == '+') goto yy40;",
          "1002:  if (yych <= '9') goto yy41;",
          "1004: yy40:",
          "1008: yy41:",
          "1013:  if (yych <= '9') goto yy41;",
          "1014:  if (yych >= ';') goto yy18;",
          "1016:  if (yych != '\"') goto yy18;",
          "1018: #line 774 \"ext/standard/var_unserializer.re\"",
          "1019:  {",
          "1020:  size_t len, maxlen;",
          "1021:  zend_string *str;",
          "1023:  len = parse_uiv(start + 2);",
          "1024:  maxlen = max - YYCURSOR;",
          "1025:  if (maxlen < len) {",
          "1027:   return 0;",
          "1028:  }",
          "1030:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1031:   return 0;",
          "1032:  }",
          "1034:  if (*(YYCURSOR) != '\"') {",
          "1035:   zend_string_free(str);",
          "1037:   return 0;",
          "1038:  }",
          "1040:  if (*(YYCURSOR + 1) != ';') {",
          "1041:   efree(str);",
          "1043:   return 0;",
          "1044:  }",
          "1046:  YYCURSOR += 2;",
          "1049:  ZVAL_STR(rval, str);",
          "1050:  return 1;",
          "1051: }",
          "1052: #line 1053 \"ext/standard/var_unserializer.c\"",
          "1053: yy46:",
          "1054:  yych = *++YYCURSOR;",
          "1055:  if (yych == '+') goto yy47;",
          "1057:  if (yych <= '9') goto yy48;",
          "1059: yy47:",
          "1063: yy48:",
          "1068:  if (yych <= '9') goto yy48;",
          "1069:  if (yych >= ';') goto yy18;",
          "1071:  if (yych != '\"') goto yy18;",
          "1073: #line 742 \"ext/standard/var_unserializer.re\"",
          "1075:  size_t len, maxlen;",
          "1076:  char *str;",
          "1078:  len = parse_uiv(start + 2);",
          "1079:  maxlen = max - YYCURSOR;",
          "1080:  if (maxlen < len) {",
          "1082:   return 0;",
          "1083:  }",
          "1085:  str = (char*)YYCURSOR;",
          "1087:  YYCURSOR += len;",
          "1089:  if (*(YYCURSOR) != '\"') {",
          "1094:  if (*(YYCURSOR + 1) != ';') {",
          "1099:  YYCURSOR += 2;",
          "1102:  ZVAL_STRINGL(rval, str, len);",
          "1105: #line 1106 \"ext/standard/var_unserializer.c\"",
          "1106: yy53:",
          "1107:  yych = *++YYCURSOR;",
          "1108:  if (yych <= '/') {",
          "1109:   if (yych <= ',') {",
          "1110:    if (yych == '+') goto yy57;",
          "1111:    goto yy18;",
          "1112:   } else {",
          "1113:    if (yych <= '-') goto yy55;",
          "1114:    if (yych <= '.') goto yy60;",
          "1115:    goto yy18;",
          "1116:   }",
          "1117:  } else {",
          "1118:   if (yych <= 'I') {",
          "1119:    if (yych <= '9') goto yy58;",
          "1120:    if (yych <= 'H') goto yy18;",
          "1121:    goto yy56;",
          "1122:   } else {",
          "1123:    if (yych != 'N') goto yy18;",
          "1124:   }",
          "1125:  }",
          "1127:  if (yych == 'A') goto yy76;",
          "1129: yy55:",
          "1130:  yych = *++YYCURSOR;",
          "1131:  if (yych <= '/') {",
          "1132:   if (yych == '.') goto yy60;",
          "1133:   goto yy18;",
          "1134:  } else {",
          "1135:   if (yych <= '9') goto yy58;",
          "1136:   if (yych != 'I') goto yy18;",
          "1137:  }",
          "1138: yy56:",
          "1140:  if (yych == 'N') goto yy72;",
          "1142: yy57:",
          "1143:  yych = *++YYCURSOR;",
          "1144:  if (yych == '.') goto yy60;",
          "1145:  if (yych <= '/') goto yy18;",
          "1146:  if (yych >= ':') goto yy18;",
          "1147: yy58:",
          "1149:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1150:  yych = *YYCURSOR;",
          "1151:  if (yych <= ':') {",
          "1152:   if (yych <= '.') {",
          "1153:    if (yych <= '-') goto yy18;",
          "1154:    goto yy70;",
          "1155:   } else {",
          "1156:    if (yych <= '/') goto yy18;",
          "1157:    if (yych <= '9') goto yy58;",
          "1158:    goto yy18;",
          "1159:   }",
          "1160:  } else {",
          "1161:   if (yych <= 'E') {",
          "1162:    if (yych <= ';') goto yy63;",
          "1163:    if (yych <= 'D') goto yy18;",
          "1164:    goto yy65;",
          "1165:   } else {",
          "1166:    if (yych == 'e') goto yy65;",
          "1167:    goto yy18;",
          "1168:   }",
          "1169:  }",
          "1170: yy60:",
          "1171:  yych = *++YYCURSOR;",
          "1172:  if (yych <= '/') goto yy18;",
          "1173:  if (yych >= ':') goto yy18;",
          "1174: yy61:",
          "1180:   if (yych <= '9') goto yy61;",
          "1185:    goto yy65;",
          "1187:    if (yych == 'e') goto yy65;",
          "1191: yy63:",
          "1193: #line 733 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "655:  case 'O': goto yy4;",
          "657:  case 'R': goto yy6;",
          "658:  case 'S': goto yy7;",
          "659:  case 'a': goto yy8;",
          "660:  case 'b': goto yy9;",
          "661:  case 'd': goto yy10;",
          "662:  case 'i': goto yy11;",
          "664:  case 'r': goto yy13;",
          "665:  case 's': goto yy14;",
          "666:  case '}': goto yy15;",
          "667:  default: goto yy2;",
          "670:  ++YYCURSOR;",
          "672: #line 990 \"ext/standard/var_unserializer.re\"",
          "674: #line 675 \"ext/standard/var_unserializer.c\"",
          "677:  if (yych == ':') goto yy17;",
          "681:  if (yych == ';') goto yy19;",
          "685:  if (yych == ':') goto yy21;",
          "689:  if (yych == ':') goto yy22;",
          "693:  if (yych == ':') goto yy23;",
          "697:  if (yych == ':') goto yy24;",
          "701:  if (yych == ':') goto yy25;",
          "705:  if (yych == ':') goto yy26;",
          "709:  if (yych == ':') goto yy27;",
          "713:  if (yych == ':') goto yy28;",
          "716:  yych = *(YYMARKER = ++YYCURSOR);",
          "717:  if (yych == ':') goto yy29;",
          "718:  goto yy3;",
          "719: yy15:",
          "721: #line 984 \"ext/standard/var_unserializer.re\"",
          "727: #line 728 \"ext/standard/var_unserializer.c\"",
          "731:   goto yy31;",
          "733:  if (yych == '+') goto yy30;",
          "738:  ++YYCURSOR;",
          "739: #line 668 \"ext/standard/var_unserializer.re\"",
          "740:  {",
          "742:  ZVAL_NULL(rval);",
          "743:  return 1;",
          "744: }",
          "745: #line 746 \"ext/standard/var_unserializer.c\"",
          "746: yy21:",
          "748:  if (yych <= ',') {",
          "749:   if (yych == '+') goto yy33;",
          "750:   goto yy18;",
          "751:  } else {",
          "752:   if (yych <= '-') goto yy33;",
          "753:   if (yych <= '/') goto yy18;",
          "754:   if (yych <= '9') goto yy34;",
          "755:   goto yy18;",
          "757: yy22:",
          "758:  yych = *++YYCURSOR;",
          "759:  if (yych == '+') goto yy36;",
          "760:  if (yych <= '/') goto yy18;",
          "761:  if (yych <= '9') goto yy37;",
          "763: yy23:",
          "764:  yych = *++YYCURSOR;",
          "765:  if (yych == '+') goto yy39;",
          "767:  if (yych <= '9') goto yy40;",
          "768:  goto yy18;",
          "769: yy24:",
          "771:  if (yych <= '/') goto yy18;",
          "772:  if (yych <= '1') goto yy42;",
          "773:  goto yy18;",
          "774: yy25:",
          "775:  yych = *++YYCURSOR;",
          "776:  if (yych <= '/') {",
          "777:   if (yych <= ',') {",
          "778:    if (yych == '+') goto yy43;",
          "779:    goto yy18;",
          "780:   } else {",
          "781:    if (yych <= '-') goto yy44;",
          "782:    if (yych <= '.') goto yy45;",
          "783:    goto yy18;",
          "785:  } else {",
          "786:   if (yych <= 'I') {",
          "787:    if (yych <= '9') goto yy46;",
          "788:    if (yych <= 'H') goto yy18;",
          "789:    goto yy48;",
          "790:   } else {",
          "791:    if (yych == 'N') goto yy49;",
          "792:    goto yy18;",
          "795: yy26:",
          "796:  yych = *++YYCURSOR;",
          "797:  if (yych <= ',') {",
          "798:   if (yych == '+') goto yy50;",
          "799:   goto yy18;",
          "800:  } else {",
          "801:   if (yych <= '-') goto yy50;",
          "802:   if (yych <= '/') goto yy18;",
          "803:   if (yych <= '9') goto yy51;",
          "804:   goto yy18;",
          "806: yy27:",
          "807:  yych = *++YYCURSOR;",
          "808:  if (yych <= ',') {",
          "809:   if (yych == '+') goto yy53;",
          "810:   goto yy18;",
          "811:  } else {",
          "812:   if (yych <= '-') goto yy53;",
          "813:   if (yych <= '/') goto yy18;",
          "814:   if (yych <= '9') goto yy54;",
          "815:   goto yy18;",
          "817: yy28:",
          "820:   if (yych == '+') goto yy56;",
          "821:   goto yy18;",
          "823:   if (yych <= '-') goto yy56;",
          "825:   if (yych <= '9') goto yy57;",
          "828: yy29:",
          "830:  if (yych == '+') goto yy59;",
          "832:  if (yych <= '9') goto yy60;",
          "833:  goto yy18;",
          "834: yy30:",
          "835:  yych = *++YYCURSOR;",
          "836:  if (yybm[0+yych] & 128) {",
          "837:   goto yy31;",
          "838:  }",
          "839:  goto yy18;",
          "840: yy31:",
          "844:  if (yybm[0+yych] & 128) {",
          "845:   goto yy31;",
          "846:  }",
          "848:  if (yych <= ':') goto yy62;",
          "849:  goto yy18;",
          "850: yy33:",
          "852:  if (yych <= '/') goto yy18;",
          "853:  if (yych >= ':') goto yy18;",
          "854: yy34:",
          "856:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "857:  yych = *YYCURSOR;",
          "860:  if (yych == ';') goto yy63;",
          "862: yy36:",
          "866: yy37:",
          "871:  if (yych <= '9') goto yy37;",
          "872:  if (yych <= ':') goto yy65;",
          "873:  goto yy18;",
          "874: yy39:",
          "876:  if (yych <= '/') goto yy18;",
          "877:  if (yych >= ':') goto yy18;",
          "878: yy40:",
          "880:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "881:  yych = *YYCURSOR;",
          "882:  if (yych <= '/') goto yy18;",
          "883:  if (yych <= '9') goto yy40;",
          "884:  if (yych <= ':') goto yy66;",
          "885:  goto yy18;",
          "886: yy42:",
          "887:  yych = *++YYCURSOR;",
          "888:  if (yych == ';') goto yy67;",
          "889:  goto yy18;",
          "890: yy43:",
          "891:  yych = *++YYCURSOR;",
          "892:  if (yych == '.') goto yy45;",
          "893:  if (yych <= '/') goto yy18;",
          "894:  if (yych <= '9') goto yy46;",
          "895:  goto yy18;",
          "896: yy44:",
          "897:  yych = *++YYCURSOR;",
          "898:  if (yych <= '/') {",
          "899:   if (yych != '.') goto yy18;",
          "900:  } else {",
          "901:   if (yych <= '9') goto yy46;",
          "902:   if (yych == 'I') goto yy48;",
          "903:   goto yy18;",
          "905: yy45:",
          "906:  yych = *++YYCURSOR;",
          "907:  if (yych <= '/') goto yy18;",
          "908:  if (yych <= '9') goto yy69;",
          "909:  goto yy18;",
          "910: yy46:",
          "911:  ++YYCURSOR;",
          "912:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "913:  yych = *YYCURSOR;",
          "914:  if (yych <= ':') {",
          "915:   if (yych <= '.') {",
          "916:    if (yych <= '-') goto yy18;",
          "917:    goto yy69;",
          "918:   } else {",
          "919:    if (yych <= '/') goto yy18;",
          "920:    if (yych <= '9') goto yy46;",
          "921:    goto yy18;",
          "922:   }",
          "923:  } else {",
          "924:   if (yych <= 'E') {",
          "925:    if (yych <= ';') goto yy71;",
          "926:    if (yych <= 'D') goto yy18;",
          "927:    goto yy73;",
          "928:   } else {",
          "929:    if (yych == 'e') goto yy73;",
          "930:    goto yy18;",
          "931:   }",
          "933: yy48:",
          "934:  yych = *++YYCURSOR;",
          "935:  if (yych == 'N') goto yy74;",
          "936:  goto yy18;",
          "937: yy49:",
          "938:  yych = *++YYCURSOR;",
          "939:  if (yych == 'A') goto yy75;",
          "940:  goto yy18;",
          "941: yy50:",
          "944:  if (yych >= ':') goto yy18;",
          "945: yy51:",
          "946:  ++YYCURSOR;",
          "947:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "948:  yych = *YYCURSOR;",
          "949:  if (yych <= '/') goto yy18;",
          "950:  if (yych <= '9') goto yy51;",
          "951:  if (yych == ';') goto yy76;",
          "953: yy53:",
          "957: yy54:",
          "962:  if (yych <= '9') goto yy54;",
          "963:  if (yych <= ':') goto yy78;",
          "964:  goto yy18;",
          "965: yy56:",
          "967:  if (yych <= '/') goto yy18;",
          "968:  if (yych >= ':') goto yy18;",
          "969: yy57:",
          "971:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "972:  yych = *YYCURSOR;",
          "974:  if (yych <= '9') goto yy57;",
          "975:  if (yych == ';') goto yy79;",
          "977: yy59:",
          "981: yy60:",
          "986:  if (yych <= '9') goto yy60;",
          "987:  if (yych <= ':') goto yy81;",
          "988:  goto yy18;",
          "989: yy62:",
          "991:  if (yych == '\"') goto yy82;",
          "992:  goto yy18;",
          "993: yy63:",
          "995: #line 619 \"ext/standard/var_unserializer.re\"",
          "997:  zend_long id;",
          "1000:  if (!var_hash) return 0;",
          "1002:  id = parse_iv(start + 2) - 1;",
          "1003:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1007:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1011:  if (Z_ISREF_P(rval_ref)) {",
          "1012:   ZVAL_COPY(rval, rval_ref);",
          "1013:  } else {",
          "1014:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1015:   ZVAL_COPY(rval, rval_ref);",
          "1016:  }",
          "1020: #line 1021 \"ext/standard/var_unserializer.c\"",
          "1021: yy65:",
          "1023:  if (yych == '\"') goto yy84;",
          "1025: yy66:",
          "1027:  if (yych == '{') goto yy86;",
          "1029: yy67:",
          "1031: #line 674 \"ext/standard/var_unserializer.re\"",
          "1032:  {",
          "1034:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1035:  return 1;",
          "1036: }",
          "1037: #line 1038 \"ext/standard/var_unserializer.c\"",
          "1038: yy69:",
          "1044:   if (yych <= '9') goto yy69;",
          "1049:    goto yy73;",
          "1051:    if (yych == 'e') goto yy73;",
          "1055: yy71:",
          "1057: #line 722 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1199:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1200:  return 1;",
          "1201: }",
          "1204:  yych = *++YYCURSOR;",
          "1205:  if (yych <= ',') {",
          "1207:  } else {",
          "1209:   if (yych <= '/') goto yy18;",
          "1211:   goto yy18;",
          "1212:  }",
          "1214:  yych = *++YYCURSOR;",
          "1230:  goto yy18;",
          "1232:  yych = *++YYCURSOR;",
          "1235:  goto yy18;",
          "1237:  ++YYCURSOR;",
          "1249:   } else {",
          "1252:   }",
          "1253:  }",
          "1258:  yych = *++YYCURSOR;",
          "1260:  ++YYCURSOR;",
          "1262:  {",
          "1273:  }",
          "1275:  return 1;",
          "1276: }",
          "1279:  yych = *++YYCURSOR;",
          "1281:  goto yy18;",
          "1297:  ++YYCURSOR;",
          "1305:  {",
          "1311:  }",
          "1320:    }",
          "1323:   }",
          "1329: }",
          "1337:  ++YYCURSOR;",
          "1339:  {",
          "1342:  return 1;",
          "1343: }",
          "1346:  ++YYCURSOR;",
          "1348:  {",
          "1352: }",
          "1355:  yych = *++YYCURSOR;",
          "1356:  if (yych <= ',') {",
          "1358:  } else {",
          "1360:   if (yych <= '/') goto yy18;",
          "1363:  }",
          "1369:  ++YYCURSOR;",
          "1370:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1371:  yych = *YYCURSOR;",
          "1372:  if (yych <= '/') goto yy18;",
          "1375:  ++YYCURSOR;",
          "1377:  {",
          "1385:   return 0;",
          "1386:  }",
          "1389:   return 0;",
          "1390:  }",
          "1395:  }",
          "1399:  return 1;",
          "1400: }",
          "1412: yy96:",
          "1413:  yych = *++YYCURSOR;",
          "1414:  if (yych <= '/') goto yy18;",
          "1416: yy97:",
          "1417:  ++YYCURSOR;",
          "1425:  {",
          "1443:  } else {",
          "1446:  }",
          "1448:  return 1;",
          "1449: }",
          "1451: }",
          "1455:  return 0;",
          "",
          "[Removed Lines]",
          "1202: #line 1203 \"ext/standard/var_unserializer.c\"",
          "1203: yy65:",
          "1206:   if (yych != '+') goto yy18;",
          "1208:   if (yych <= '-') goto yy66;",
          "1210:   if (yych <= '9') goto yy67;",
          "1213: yy66:",
          "1215:  if (yych <= ',') {",
          "1216:   if (yych == '+') goto yy69;",
          "1217:   goto yy18;",
          "1218:  } else {",
          "1219:   if (yych <= '-') goto yy69;",
          "1220:   if (yych <= '/') goto yy18;",
          "1221:   if (yych >= ':') goto yy18;",
          "1222:  }",
          "1223: yy67:",
          "1224:  ++YYCURSOR;",
          "1225:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1226:  yych = *YYCURSOR;",
          "1227:  if (yych <= '/') goto yy18;",
          "1228:  if (yych <= '9') goto yy67;",
          "1229:  if (yych == ';') goto yy63;",
          "1231: yy69:",
          "1233:  if (yych <= '/') goto yy18;",
          "1234:  if (yych <= '9') goto yy67;",
          "1236: yy70:",
          "1238:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1239:  yych = *YYCURSOR;",
          "1240:  if (yych <= ';') {",
          "1241:   if (yych <= '/') goto yy18;",
          "1242:   if (yych <= '9') goto yy70;",
          "1243:   if (yych <= ':') goto yy18;",
          "1244:   goto yy63;",
          "1245:  } else {",
          "1246:   if (yych <= 'E') {",
          "1247:    if (yych <= 'D') goto yy18;",
          "1248:    goto yy65;",
          "1250:    if (yych == 'e') goto yy65;",
          "1251:    goto yy18;",
          "1254: yy72:",
          "1255:  yych = *++YYCURSOR;",
          "1256:  if (yych != 'F') goto yy18;",
          "1257: yy73:",
          "1259:  if (yych != ';') goto yy18;",
          "1261: #line 717 \"ext/standard/var_unserializer.re\"",
          "1265:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1266:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1267:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1268:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1269:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1270:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1271:  } else {",
          "1272:   ZVAL_NULL(rval);",
          "1277: #line 1278 \"ext/standard/var_unserializer.c\"",
          "1278: yy76:",
          "1280:  if (yych == 'N') goto yy73;",
          "1282: yy77:",
          "1283:  yych = *++YYCURSOR;",
          "1284:  if (yych <= ',') {",
          "1285:   if (yych != '+') goto yy18;",
          "1286:  } else {",
          "1287:   if (yych <= '-') goto yy78;",
          "1288:   if (yych <= '/') goto yy18;",
          "1289:   if (yych <= '9') goto yy79;",
          "1290:   goto yy18;",
          "1291:  }",
          "1292: yy78:",
          "1293:  yych = *++YYCURSOR;",
          "1294:  if (yych <= '/') goto yy18;",
          "1295:  if (yych >= ':') goto yy18;",
          "1296: yy79:",
          "1298:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1299:  yych = *YYCURSOR;",
          "1300:  if (yych <= '/') goto yy18;",
          "1301:  if (yych <= '9') goto yy79;",
          "1302:  if (yych != ';') goto yy18;",
          "1303:  ++YYCURSOR;",
          "1304: #line 691 \"ext/standard/var_unserializer.re\"",
          "1306: #if SIZEOF_ZEND_LONG == 4",
          "1307:  int digits = YYCURSOR - start - 3;",
          "1309:  if (start[2] == '-' || start[2] == '+') {",
          "1310:   digits--;",
          "1314:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1315:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1316:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1318:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1319:     goto use_double;",
          "1321:   } else {",
          "1322:    goto use_double;",
          "1324:  }",
          "1325: #endif",
          "1327:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1328:  return 1;",
          "1330: #line 1331 \"ext/standard/var_unserializer.c\"",
          "1331: yy83:",
          "1332:  yych = *++YYCURSOR;",
          "1333:  if (yych <= '/') goto yy18;",
          "1334:  if (yych >= '2') goto yy18;",
          "1335:  yych = *++YYCURSOR;",
          "1336:  if (yych != ';') goto yy18;",
          "1338: #line 685 \"ext/standard/var_unserializer.re\"",
          "1341:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1344: #line 1345 \"ext/standard/var_unserializer.c\"",
          "1345: yy87:",
          "1347: #line 679 \"ext/standard/var_unserializer.re\"",
          "1350:  ZVAL_NULL(rval);",
          "1351:  return 1;",
          "1353: #line 1354 \"ext/standard/var_unserializer.c\"",
          "1354: yy89:",
          "1357:   if (yych != '+') goto yy18;",
          "1359:   if (yych <= '-') goto yy90;",
          "1361:   if (yych <= '9') goto yy91;",
          "1362:   goto yy18;",
          "1364: yy90:",
          "1365:  yych = *++YYCURSOR;",
          "1366:  if (yych <= '/') goto yy18;",
          "1367:  if (yych >= ':') goto yy18;",
          "1368: yy91:",
          "1373:  if (yych <= '9') goto yy91;",
          "1374:  if (yych != ';') goto yy18;",
          "1376: #line 654 \"ext/standard/var_unserializer.re\"",
          "1378:  zend_long id;",
          "1381:  if (!var_hash) return 0;",
          "1383:  id = parse_iv(start + 2) - 1;",
          "1384:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1388:  if (rval_ref == rval) {",
          "1392:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1393:   ZVAL_UNDEF(rval);",
          "1394:   return 1;",
          "1397:  ZVAL_COPY(rval, rval_ref);",
          "1401: #line 1402 \"ext/standard/var_unserializer.c\"",
          "1402: yy95:",
          "1403:  yych = *++YYCURSOR;",
          "1404:  if (yych <= ',') {",
          "1405:   if (yych != '+') goto yy18;",
          "1406:  } else {",
          "1407:   if (yych <= '-') goto yy96;",
          "1408:   if (yych <= '/') goto yy18;",
          "1409:   if (yych <= '9') goto yy97;",
          "1410:   goto yy18;",
          "1411:  }",
          "1415:  if (yych >= ':') goto yy18;",
          "1418:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1419:  yych = *YYCURSOR;",
          "1420:  if (yych <= '/') goto yy18;",
          "1421:  if (yych <= '9') goto yy97;",
          "1422:  if (yych != ';') goto yy18;",
          "1423:  ++YYCURSOR;",
          "1424: #line 628 \"ext/standard/var_unserializer.re\"",
          "1426:  zend_long id;",
          "1429:  if (!var_hash) return 0;",
          "1431:  id = parse_iv(start + 2) - 1;",
          "1432:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1433:   return 0;",
          "1434:  }",
          "1436:  zval_ptr_dtor(rval);",
          "1437:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1438:   ZVAL_UNDEF(rval);",
          "1439:   return 1;",
          "1440:  }",
          "1441:  if (Z_ISREF_P(rval_ref)) {",
          "1442:   ZVAL_COPY(rval, rval_ref);",
          "1444:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1445:   ZVAL_COPY(rval, rval_ref);",
          "1450: #line 1451 \"ext/standard/var_unserializer.c\"",
          "1452: #line 1003 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1066: #line 1067 \"ext/standard/var_unserializer.c\"",
          "1067: yy73:",
          "1070:   if (yych == '+') goto yy88;",
          "1071:   goto yy18;",
          "1073:   if (yych <= '-') goto yy88;",
          "1075:   if (yych <= '9') goto yy89;",
          "1078: yy74:",
          "1080:  if (yych == 'F') goto yy91;",
          "1082: yy75:",
          "1084:  if (yych == 'N') goto yy91;",
          "1086: yy76:",
          "1088: #line 680 \"ext/standard/var_unserializer.re\"",
          "1089:  {",
          "1090: #if SIZEOF_ZEND_LONG == 4",
          "1091:  int digits = YYCURSOR - start - 3;",
          "1093:  if (start[2] == '-' || start[2] == '+') {",
          "1094:   digits--;",
          "1095:  }",
          "1098:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1099:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1100:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1102:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1103:     goto use_double;",
          "1104:    }",
          "1106:    goto use_double;",
          "1109: #endif",
          "1111:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1112:  return 1;",
          "1113: }",
          "1114: #line 1115 \"ext/standard/var_unserializer.c\"",
          "1115: yy78:",
          "1117:  if (yych == '\"') goto yy92;",
          "1118:  goto yy18;",
          "1119: yy79:",
          "1121: #line 644 \"ext/standard/var_unserializer.re\"",
          "1123:  zend_long id;",
          "1126:  if (!var_hash) return 0;",
          "1128:  id = parse_iv(start + 2) - 1;",
          "1129:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1130:   return 0;",
          "1131:  }",
          "1133:  if (rval_ref == rval) {",
          "1134:   return 0;",
          "1137:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1138:   return 0;",
          "1139:  }",
          "1141:  ZVAL_COPY(rval, rval_ref);",
          "1145: #line 1146 \"ext/standard/var_unserializer.c\"",
          "1146: yy81:",
          "1148:  if (yych == '\"') goto yy94;",
          "1150: yy82:",
          "1152: #line 832 \"ext/standard/var_unserializer.re\"",
          "1154:  size_t len, len2, len3, maxlen;",
          "1155:  zend_long elements;",
          "1156:  char *str;",
          "1157:  zend_string *class_name;",
          "1158:  zend_class_entry *ce;",
          "1159:  int incomplete_class = 0;",
          "1161:  int custom_object = 0;",
          "1163:  zval user_func;",
          "1164:  zval retval;",
          "1165:  zval args[1];",
          "1167:     if (!var_hash) return 0;",
          "1168:  if (*start == 'C') {",
          "1169:   custom_object = 1;",
          "1172:  len2 = len = parse_uiv(start + 2);",
          "1173:  maxlen = max - YYCURSOR;",
          "1174:  if (maxlen < len || len == 0) {",
          "1176:   return 0;",
          "1177:  }",
          "1179:  str = (char*)YYCURSOR;",
          "1181:  YYCURSOR += len;",
          "1183:  if (*(YYCURSOR) != '\"') {",
          "1185:   return 0;",
          "1186:  }",
          "1187:  if (*(YYCURSOR+1) != ':') {",
          "1189:   return 0;",
          "1190:  }",
          "1192:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1193:  if (len3 != len)",
          "1194:  {",
          "1196:   return 0;",
          "1197:  }",
          "1199:  class_name = zend_string_init(str, len, 0);",
          "1201:  do {",
          "1202:   if(!unserialize_allowed_class(class_name, var_hash)) {",
          "1203:    incomplete_class = 1;",
          "1204:    ce = PHP_IC_ENTRY;",
          "1205:    break;",
          "1206:   }",
          "1209:   BG(serialize_lock)++;",
          "1210:   ce = zend_lookup_class(class_name);",
          "1211:   if (ce) {",
          "1212:    BG(serialize_lock)--;",
          "1213:    if (EG(exception)) {",
          "1214:     zend_string_release(class_name);",
          "1215:     return 0;",
          "1217:    break;",
          "1219:   BG(serialize_lock)--;",
          "1221:   if (EG(exception)) {",
          "1222:    zend_string_release(class_name);",
          "1223:    return 0;",
          "1224:   }",
          "1227:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1228:    incomplete_class = 1;",
          "1229:    ce = PHP_IC_ENTRY;",
          "1230:    break;",
          "1231:   }",
          "1234:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1236:   ZVAL_STR_COPY(&args[0], class_name);",
          "1237:   BG(serialize_lock)++;",
          "1238:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1239:    BG(serialize_lock)--;",
          "1240:    if (EG(exception)) {",
          "1241:     zend_string_release(class_name);",
          "1242:     zval_ptr_dtor(&user_func);",
          "1243:     zval_ptr_dtor(&args[0]);",
          "1244:     return 0;",
          "1245:    }",
          "1246:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1247:    incomplete_class = 1;",
          "1248:    ce = PHP_IC_ENTRY;",
          "1249:    zval_ptr_dtor(&user_func);",
          "1250:    zval_ptr_dtor(&args[0]);",
          "1251:    break;",
          "1252:   }",
          "1253:   BG(serialize_lock)--;",
          "1254:   zval_ptr_dtor(&retval);",
          "1255:   if (EG(exception)) {",
          "1256:    zend_string_release(class_name);",
          "1257:    zval_ptr_dtor(&user_func);",
          "1258:    zval_ptr_dtor(&args[0]);",
          "1259:    return 0;",
          "1260:   }",
          "1263:   BG(serialize_lock)++;",
          "1264:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1265:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1266:    incomplete_class = 1;",
          "1267:    ce = PHP_IC_ENTRY;",
          "1268:   }",
          "1269:   BG(serialize_lock)--;",
          "1271:   zval_ptr_dtor(&user_func);",
          "1272:   zval_ptr_dtor(&args[0]);",
          "1273:   break;",
          "1274:  } while (1);",
          "1278:  if (custom_object) {",
          "1279:   int ret;",
          "1281:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1283:   if (ret && incomplete_class) {",
          "1284:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1285:   }",
          "1286:   zend_string_release(class_name);",
          "1287:   return ret;",
          "1288:  }",
          "1290:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1292:  if (elements < 0) {",
          "1293:     zend_string_release(class_name);",
          "1294:     return 0;",
          "1295:  }",
          "1297:  if (incomplete_class) {",
          "1298:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1299:  }",
          "1300:  zend_string_release(class_name);",
          "1302:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1304: #line 1305 \"ext/standard/var_unserializer.c\"",
          "1305: yy84:",
          "1307: #line 763 \"ext/standard/var_unserializer.re\"",
          "1309:  size_t len, maxlen;",
          "1310:  zend_string *str;",
          "1312:  len = parse_uiv(start + 2);",
          "1313:  maxlen = max - YYCURSOR;",
          "1314:  if (maxlen < len) {",
          "1316:   return 0;",
          "1317:  }",
          "1319:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1320:   return 0;",
          "1321:  }",
          "1323:  if (*(YYCURSOR) != '\"') {",
          "1324:   zend_string_free(str);",
          "1326:   return 0;",
          "1327:  }",
          "1329:  if (*(YYCURSOR + 1) != ';') {",
          "1330:   efree(str);",
          "1332:   return 0;",
          "1333:  }",
          "1335:  YYCURSOR += 2;",
          "1338:  ZVAL_STR(rval, str);",
          "1341: #line 1342 \"ext/standard/var_unserializer.c\"",
          "1342: yy86:",
          "1344: #line 797 \"ext/standard/var_unserializer.re\"",
          "1346:  zend_long elements = parse_iv(start + 2);",
          "1349:     if (!var_hash) return 0;",
          "1351:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "1352:   return 0;",
          "1353:  }",
          "1355:  array_init_size(rval, elements);",
          "1356:  if (elements) {",
          "1359:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1360:  }",
          "1362:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1363:   return 0;",
          "1364:  }",
          "1366:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1368: #line 1369 \"ext/standard/var_unserializer.c\"",
          "1369: yy88:",
          "1372:   if (yych == '+') goto yy96;",
          "1373:   goto yy18;",
          "1375:   if (yych <= '-') goto yy96;",
          "1377:   if (yych >= ':') goto yy18;",
          "1379: yy89:",
          "1384:  if (yych <= '9') goto yy89;",
          "1385:  if (yych == ';') goto yy71;",
          "1386:  goto yy18;",
          "1387: yy91:",
          "1388:  yych = *++YYCURSOR;",
          "1389:  if (yych == ';') goto yy97;",
          "1390:  goto yy18;",
          "1391: yy92:",
          "1393: #line 821 \"ext/standard/var_unserializer.re\"",
          "1395:  zend_long elements;",
          "1396:     if (!var_hash) return 0;",
          "1398:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "1399:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "1400:   return 0;",
          "1401:  }",
          "1402:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1403: }",
          "1404: #line 1405 \"ext/standard/var_unserializer.c\"",
          "1405: yy94:",
          "1406:  ++YYCURSOR;",
          "1407: #line 731 \"ext/standard/var_unserializer.re\"",
          "1408:  {",
          "1409:  size_t len, maxlen;",
          "1410:  char *str;",
          "1412:  len = parse_uiv(start + 2);",
          "1413:  maxlen = max - YYCURSOR;",
          "1414:  if (maxlen < len) {",
          "1419:  str = (char*)YYCURSOR;",
          "1421:  YYCURSOR += len;",
          "1423:  if (*(YYCURSOR) != '\"') {",
          "1428:  if (*(YYCURSOR + 1) != ';') {",
          "1430:   return 0;",
          "1433:  YYCURSOR += 2;",
          "1436:  ZVAL_STRINGL(rval, str, len);",
          "1439: #line 1440 \"ext/standard/var_unserializer.c\"",
          "1443:  if (yych <= '9') goto yy89;",
          "1444:  goto yy18;",
          "1447: #line 706 \"ext/standard/var_unserializer.re\"",
          "1451:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1452:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1453:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1454:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1455:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1456:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1458:   ZVAL_NULL(rval);",
          "1463: #line 1464 \"ext/standard/var_unserializer.c\"",
          "1465: #line 992 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "454:    return 0;",
          "455:   }",
          "467:   zval_dtor(&key);",
          "469:   if (elements && *(*p-1) != ';' && *(*p-1) != '}') {",
          "",
          "[Removed Lines]",
          "457:   if (UNEXPECTED(Z_ISUNDEF_P(data))) {",
          "458:    if (Z_TYPE(key) == IS_LONG) {",
          "459:     zend_hash_index_del(ht, Z_LVAL(key));",
          "460:    } else {",
          "461:     zend_hash_del_ind(ht, Z_STR(key));",
          "462:    }",
          "463:   } else {",
          "464:    var_push_dtor(var_hash, data);",
          "465:   }",
          "",
          "[Added Lines]",
          "457:   var_push_dtor(var_hash, data);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "636:   return 0;",
          "637:  }",
          "640:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "643:  }",
          "644:  if (Z_ISREF_P(rval_ref)) {",
          "645:   ZVAL_COPY(rval, rval_ref);",
          "646:  } else {",
          "",
          "[Removed Lines]",
          "639:  zval_ptr_dtor(rval);",
          "641:   ZVAL_UNDEF(rval);",
          "642:   return 1;",
          "",
          "[Added Lines]",
          "631:   return 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "667:  }",
          "669:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "672:  }",
          "674:  ZVAL_COPY(rval, rval_ref);",
          "",
          "[Removed Lines]",
          "670:   ZVAL_UNDEF(rval);",
          "671:   return 1;",
          "",
          "[Added Lines]",
          "660:   return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}