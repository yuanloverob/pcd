{
  "cve_id": "CVE-2021-29529",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. An attacker can trigger a heap buffer overflow in `tf.raw_ops.QuantizedResizeBilinear` by manipulating input values so that float rounding results in off-by-one error in accessing image elements. This is because the implementation(https://github.com/tensorflow/tensorflow/blob/44b7f486c0143f68b56c34e2d01e146ee445134a/tensorflow/core/kernels/quantized_resize_bilinear_op.cc#L62-L66) computes two integers (representing the upper and lower bounds for interpolation) by ceiling and flooring a floating point value. For some values of `in`, `interpolation->upper[i]` might be smaller than `interpolation->lower[i]`. This is an issue if `interpolation->upper[i]` is capped at `in_size-1` as it means that `interpolation->lower[i]` points outside of the image. Then, in the interpolation code(https://github.com/tensorflow/tensorflow/blob/44b7f486c0143f68b56c34e2d01e146ee445134a/tensorflow/core/kernels/quantized_resize_bilinear_op.cc#L245-L264), this would result in heap buffer overflow. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "f851613f8f0fb0c838d160ced13c134f778e3ce7",
  "patch_info": {
    "commit_hash": "f851613f8f0fb0c838d160ced13c134f778e3ce7",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/f851613f8f0fb0c838d160ced13c134f778e3ce7",
    "files": [
      "tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
    ],
    "message": "Fix heap buffer overflow caused by rounding.\n\nThis was hard to fix. Due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. This is because of floating errors that affected truncation results.\n\nPiperOrigin-RevId: 369757871\nChange-Id: If89425fff930983829a2168203c11858883eebc9",
    "before_after_code_files": [
      "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc": [
      "File: tensorflow/core/kernels/quantized_resize_bilinear_op.cc -> tensorflow/core/kernels/quantized_resize_bilinear_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "64:         std::max(static_cast<int64>(in_f), static_cast<int64>(0));",
      "65:     interpolation->upper[i] =",
      "66:         std::min(static_cast<int64>(std::ceil(in)), in_size - 1);",
      "67:     interpolation->lerp[i] = in - in_f;",
      "68:     interpolation->ilerp[i] =",
      "69:         static_cast<T_SCALE>((in - in_f) * (1 << resolution));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "67:     interpolation->lower[i] =",
      "68:         std::min(interpolation->lower[i], interpolation->upper[i]);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3089d54f8dcbdb6a0feefecf28d69e35ed6f1fb6",
      "candidate_info": {
        "commit_hash": "3089d54f8dcbdb6a0feefecf28d69e35ed6f1fb6",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/3089d54f8dcbdb6a0feefecf28d69e35ed6f1fb6",
        "files": [
          "tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
        ],
        "message": "Fix heap buffer overflow caused by rounding.\n\nThis was hard to fix. Due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. This is because of floating errors that affected truncation results.\n\nPiperOrigin-RevId: 369757871\nChange-Id: If89425fff930983829a2168203c11858883eebc9",
        "before_after_code_files": [
          "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc": [
          "File: tensorflow/core/kernels/quantized_resize_bilinear_op.cc -> tensorflow/core/kernels/quantized_resize_bilinear_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:         std::max(static_cast<int64>(in_f), static_cast<int64>(0));",
          "65:     interpolation->upper[i] =",
          "66:         std::min(static_cast<int64>(std::ceil(in)), in_size - 1);",
          "67:     interpolation->lerp[i] = in - in_f;",
          "68:     interpolation->ilerp[i] =",
          "69:         static_cast<T_SCALE>((in - in_f) * (1 << resolution));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:     interpolation->lower[i] =",
          "68:         std::min(interpolation->lower[i], interpolation->upper[i]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d3554564210e91fa10c95df6d775d0535033910",
      "candidate_info": {
        "commit_hash": "2d3554564210e91fa10c95df6d775d0535033910",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/2d3554564210e91fa10c95df6d775d0535033910",
        "files": [
          "tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
        ],
        "message": "Fix heap buffer overflow caused by rounding.\n\nThis was hard to fix. Due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. This is because of floating errors that affected truncation results.\n\nPiperOrigin-RevId: 369757871\nChange-Id: If89425fff930983829a2168203c11858883eebc9",
        "before_after_code_files": [
          "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc": [
          "File: tensorflow/core/kernels/quantized_resize_bilinear_op.cc -> tensorflow/core/kernels/quantized_resize_bilinear_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:         std::max(static_cast<int64>(in_f), static_cast<int64>(0));",
          "65:     interpolation->upper[i] =",
          "66:         std::min(static_cast<int64>(std::ceil(in)), in_size - 1);",
          "67:     interpolation->lerp[i] = in - in_f;",
          "68:     interpolation->ilerp[i] =",
          "69:         static_cast<T_SCALE>((in - in_f) * (1 << resolution));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:     interpolation->lower[i] =",
          "68:         std::min(interpolation->lower[i], interpolation->upper[i]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92984f3cfb89b74d0bea7f756e5eb8b5eb5bbcad",
      "candidate_info": {
        "commit_hash": "92984f3cfb89b74d0bea7f756e5eb8b5eb5bbcad",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/92984f3cfb89b74d0bea7f756e5eb8b5eb5bbcad",
        "files": [
          "tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
        ],
        "message": "Fix heap buffer overflow caused by rounding.\n\nThis was hard to fix. Due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. This is because of floating errors that affected truncation results.\n\nPiperOrigin-RevId: 369757871\nChange-Id: If89425fff930983829a2168203c11858883eebc9",
        "before_after_code_files": [
          "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc": [
          "File: tensorflow/core/kernels/quantized_resize_bilinear_op.cc -> tensorflow/core/kernels/quantized_resize_bilinear_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:         std::max(static_cast<int64>(in_f), static_cast<int64>(0));",
          "65:     interpolation->upper[i] =",
          "66:         std::min(static_cast<int64>(std::ceil(in)), in_size - 1);",
          "67:     interpolation->lerp[i] = in - in_f;",
          "68:     interpolation->ilerp[i] =",
          "69:         static_cast<T_SCALE>((in - in_f) * (1 << resolution));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:     interpolation->lower[i] =",
          "68:         std::min(interpolation->lower[i], interpolation->upper[i]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ebc8be747bfa00674d56785af490f247123c502",
      "candidate_info": {
        "commit_hash": "5ebc8be747bfa00674d56785af490f247123c502",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5ebc8be747bfa00674d56785af490f247123c502",
        "files": [
          "tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
        ],
        "message": "Fix heap buffer overflow caused by rounding.\n\nThis was hard to fix. Due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. This is because of floating errors that affected truncation results.\n\nPiperOrigin-RevId: 369757871\nChange-Id: If89425fff930983829a2168203c11858883eebc9",
        "before_after_code_files": [
          "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc": [
          "File: tensorflow/core/kernels/quantized_resize_bilinear_op.cc -> tensorflow/core/kernels/quantized_resize_bilinear_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:         std::max(static_cast<int64>(in_f), static_cast<int64>(0));",
          "65:     interpolation->upper[i] =",
          "66:         std::min(static_cast<int64>(std::ceil(in)), in_size - 1);",
          "67:     interpolation->lerp[i] = in - in_f;",
          "68:     interpolation->ilerp[i] =",
          "69:         static_cast<T_SCALE>((in - in_f) * (1 << resolution));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:     interpolation->lower[i] =",
          "68:         std::min(interpolation->lower[i], interpolation->upper[i]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e84f1b1b512e2cd4c7b22b4a5d0bb64e151dbefe",
      "candidate_info": {
        "commit_hash": "e84f1b1b512e2cd4c7b22b4a5d0bb64e151dbefe",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/e84f1b1b512e2cd4c7b22b4a5d0bb64e151dbefe",
        "files": [
          "tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
        ],
        "message": "Fix heap buffer overflow caused by rounding.\n\nThis was hard to fix. Due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. This is because of floating errors that affected truncation results.\n\nPiperOrigin-RevId: 369757871\nChange-Id: If89425fff930983829a2168203c11858883eebc9",
        "before_after_code_files": [
          "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/quantized_resize_bilinear_op.cc||tensorflow/core/kernels/quantized_resize_bilinear_op.cc": [
          "File: tensorflow/core/kernels/quantized_resize_bilinear_op.cc -> tensorflow/core/kernels/quantized_resize_bilinear_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:         std::max(static_cast<int64>(in_f), static_cast<int64>(0));",
          "65:     interpolation->upper[i] =",
          "66:         std::min(static_cast<int64>(std::ceil(in)), in_size - 1);",
          "67:     interpolation->lerp[i] = in - in_f;",
          "68:     interpolation->ilerp[i] =",
          "69:         static_cast<T_SCALE>((in - in_f) * (1 << resolution));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:     interpolation->lower[i] =",
          "68:         std::min(interpolation->lower[i], interpolation->upper[i]);",
          "",
          "---------------"
        ]
      }
    }
  ]
}