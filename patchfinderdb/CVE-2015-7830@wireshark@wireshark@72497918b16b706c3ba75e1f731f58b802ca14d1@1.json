{
  "cve_id": "CVE-2015-7830",
  "cve_desc": "The pcapng_read_if_descr_block function in wiretap/pcapng.c in the pcapng parser in Wireshark 1.12.x before 1.12.8 uses too many levels of pointer indirection, which allows remote attackers to cause a denial of service (incorrect free and application crash) via a crafted packet that triggers interface-filter copying.",
  "repo": "wireshark/wireshark",
  "patch_hash": "72497918b16b706c3ba75e1f731f58b802ca14d1",
  "patch_info": {
    "commit_hash": "72497918b16b706c3ba75e1f731f58b802ca14d1",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/72497918b16b706c3ba75e1f731f58b802ca14d1",
    "files": [
      "wiretap/pcapng.c"
    ],
    "message": "pcapng: Fixed copying if_filter_bpf_bytes\n\nBug: 11455\nChange-Id: Ic99ff1bcd7dad65b3ade5a9f46ce0f64573cb059\nReviewed-on: https://code.wireshark.org/review/10147\nPetri-Dish: Stig Bj\u00f8rlykke <stig@bjorlykke.org>\nReviewed-by: Evan Huus <eapache@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Dario Lombardo <lomato@gmail.com>\nReviewed-by: Hadriel Kaplan <hadrielk@yahoo.com>",
    "before_after_code_files": [
      "wiretap/pcapng.c||wiretap/pcapng.c"
    ]
  },
  "patch_diff": {
    "wiretap/pcapng.c||wiretap/pcapng.c": [
      "File: wiretap/pcapng.c -> wiretap/pcapng.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "950:                     } else if (option_content[0] == 1) {",
      "951:                         wblock->data.if_descr.bpf_filter_len = oh.option_length-1;",
      "952:                         wblock->data.if_descr.if_filter_bpf_bytes = (gchar *)g_malloc(oh.option_length-1);",
      "954:                     }",
      "955:                 } else {",
      "956:                     pcapng_debug1(\"pcapng_read_if_descr_block: if_filter length %u seems strange\", oh.option_length);",
      "",
      "[Removed Lines]",
      "953:                         memcpy(&wblock->data.if_descr.if_filter_bpf_bytes, (char *)option_content+1, oh.option_length-1);",
      "",
      "[Added Lines]",
      "953:                         memcpy(wblock->data.if_descr.if_filter_bpf_bytes, (char *)option_content+1, oh.option_length-1);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c86c78c25cda8dab5b21b3d4fb976bdb6fa40173",
      "candidate_info": {
        "commit_hash": "c86c78c25cda8dab5b21b3d4fb976bdb6fa40173",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/c86c78c25cda8dab5b21b3d4fb976bdb6fa40173",
        "files": [
          "wiretap/pcapng.c"
        ],
        "message": "pcapng: Fixed copying if_filter_bpf_bytes\n\nBug: 11455\nChange-Id: I230ae26ef32ffc9d748b9f3da9011da952b6e175\nReviewed-on: https://code.wireshark.org/review/10155\nReviewed-by: Guy Harris <guy@alum.mit.edu>\n(cherry picked from commit 21ec6668d69743153c48adac036f6a22fbf36992)\nReviewed-on: https://code.wireshark.org/review/11092\nReviewed-by: Balint Reczey <balint@balintreczey.hu>\n(cherry picked from commit 04ae697234127a8a11d94113a28ee58fdb5e5801)\nReviewed-on: https://code.wireshark.org/review/11093",
        "before_after_code_files": [
          "wiretap/pcapng.c||wiretap/pcapng.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/pcapng.c||wiretap/pcapng.c"
          ],
          "candidate": [
            "wiretap/pcapng.c||wiretap/pcapng.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/pcapng.c||wiretap/pcapng.c": [
          "File: wiretap/pcapng.c -> wiretap/pcapng.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "839:                                 } else if (option_content[0] == 1) {",
          "840:                                         wblock->data.if_descr.bpf_filter_len = oh.option_length-1;",
          "841:                                         wblock->data.if_descr.if_filter_bpf_bytes = (gchar *)g_malloc(oh.option_length-1);",
          "843:                                 }",
          "844:                         } else {",
          "845:                                 pcapng_debug1(\"pcapng_read_if_descr_block: if_filter length %u seems strange\", oh.option_length);",
          "",
          "[Removed Lines]",
          "842:                                         memcpy(&wblock->data.if_descr.if_filter_bpf_bytes, option_content+1, oh.option_length-1);",
          "",
          "[Added Lines]",
          "842:                                         memcpy(wblock->data.if_descr.if_filter_bpf_bytes, option_content+1, oh.option_length-1);",
          "",
          "---------------"
        ]
      }
    }
  ]
}