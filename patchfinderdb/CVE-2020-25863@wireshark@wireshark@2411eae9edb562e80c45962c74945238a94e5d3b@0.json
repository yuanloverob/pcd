{
  "cve_id": "CVE-2020-25863",
  "cve_desc": "In Wireshark 3.2.0 to 3.2.6, 3.0.0 to 3.0.13, and 2.6.0 to 2.6.20, the MIME Multipart dissector could crash. This was addressed in epan/dissectors/packet-multipart.c by correcting the deallocation of invalid MIME parts.",
  "repo": "wireshark/wireshark",
  "patch_hash": "2411eae9edb562e80c45962c74945238a94e5d3b",
  "patch_info": {
    "commit_hash": "2411eae9edb562e80c45962c74945238a94e5d3b",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/2411eae9edb562e80c45962c74945238a94e5d3b",
    "files": [
      "epan/dissectors/packet-multipart.c"
    ],
    "message": "multipart: fix deallocation of invalid parts\n\nFixes #16741",
    "before_after_code_files": [
      "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c": [
      "File: epan/dissectors/packet-multipart.c -> epan/dissectors/packet-multipart.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "339:     parameters = unfold_and_compact_mime_header(message_info->media_str, &dummy);",
      "341:     start_boundary = ws_find_media_type_parameter(wmem_packet_scope(), parameters, \"boundary\");",
      "344:         return NULL;",
      "345:     }",
      "347:         start_protocol = ws_find_media_type_parameter(wmem_packet_scope(), parameters, \"protocol\");",
      "350:             return NULL;",
      "351:         }",
      "352:     }",
      "",
      "[Removed Lines]",
      "343:     if(!start_boundary) {",
      "346:     if(strncmp(type, \"multipart/encrypted\", sizeof(\"multipart/encrypted\")-1) == 0) {",
      "348:         if(!start_protocol) {",
      "349:             g_free(start_boundary);",
      "",
      "[Added Lines]",
      "342:     if (!start_boundary) {",
      "346:     if (strncmp(type, \"multipart/encrypted\", sizeof(\"multipart/encrypted\") - 1) == 0) {",
      "348:         if (!start_protocol) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5803c7b87b3414cdb8bf502af50bb406ca774482",
      "candidate_info": {
        "commit_hash": "5803c7b87b3414cdb8bf502af50bb406ca774482",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/5803c7b87b3414cdb8bf502af50bb406ca774482",
        "files": [
          "epan/dissectors/packet-multipart.c"
        ],
        "message": "multipart: fix deallocation of invalid parts\n\nFixes #16741\n\n\n(cherry picked from commit 2411eae9edb562e80c45962c74945238a94e5d3b)",
        "before_after_code_files": [
          "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c"
          ],
          "candidate": [
            "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c": [
          "File: epan/dissectors/packet-multipart.c -> epan/dissectors/packet-multipart.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "339:     parameters = unfold_and_compact_mime_header(message_info->media_str, &dummy);",
          "341:     start_boundary = ws_find_media_type_parameter(wmem_packet_scope(), parameters, \"boundary\");",
          "344:         return NULL;",
          "345:     }",
          "347:         start_protocol = ws_find_media_type_parameter(wmem_packet_scope(), parameters, \"protocol\");",
          "350:             return NULL;",
          "351:         }",
          "352:     }",
          "",
          "[Removed Lines]",
          "343:     if(!start_boundary) {",
          "346:     if(strncmp(type, \"multipart/encrypted\", sizeof(\"multipart/encrypted\")-1) == 0) {",
          "348:         if(!start_protocol) {",
          "349:             g_free(start_boundary);",
          "",
          "[Added Lines]",
          "342:     if (!start_boundary) {",
          "346:     if (strncmp(type, \"multipart/encrypted\", sizeof(\"multipart/encrypted\") - 1) == 0) {",
          "348:         if (!start_protocol) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "14e274f3bed9e0a9b62b5bdce803cccd2f954a55",
      "candidate_info": {
        "commit_hash": "14e274f3bed9e0a9b62b5bdce803cccd2f954a55",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/14e274f3bed9e0a9b62b5bdce803cccd2f954a55",
        "files": [
          "epan/dissectors/packet-multipart.c"
        ],
        "message": "multipart: fix deallocation of invalid parts\n\nFixes #16741\n\n\n(cherry picked from commit 2411eae9edb562e80c45962c74945238a94e5d3b)",
        "before_after_code_files": [
          "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c"
          ],
          "candidate": [
            "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c": [
          "File: epan/dissectors/packet-multipart.c -> epan/dissectors/packet-multipart.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "339:     parameters = unfold_and_compact_mime_header(message_info->media_str, &dummy);",
          "341:     start_boundary = ws_find_media_type_parameter(wmem_packet_scope(), parameters, \"boundary\");",
          "344:         return NULL;",
          "345:     }",
          "347:         start_protocol = ws_find_media_type_parameter(wmem_packet_scope(), parameters, \"protocol\");",
          "350:             return NULL;",
          "351:         }",
          "352:     }",
          "",
          "[Removed Lines]",
          "343:     if(!start_boundary) {",
          "346:     if(strncmp(type, \"multipart/encrypted\", sizeof(\"multipart/encrypted\")-1) == 0) {",
          "348:         if(!start_protocol) {",
          "349:             g_free(start_boundary);",
          "",
          "[Added Lines]",
          "342:     if (!start_boundary) {",
          "346:     if (strncmp(type, \"multipart/encrypted\", sizeof(\"multipart/encrypted\") - 1) == 0) {",
          "348:         if (!start_protocol) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21f082cb6e9ff5d9b6aa8ce98a1c559ef73de343",
      "candidate_info": {
        "commit_hash": "21f082cb6e9ff5d9b6aa8ce98a1c559ef73de343",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/21f082cb6e9ff5d9b6aa8ce98a1c559ef73de343",
        "files": [
          "epan/dissectors/packet-multipart.c"
        ],
        "message": "multipart: fix deallocation of invalid parts\n\nFixes #16741\n\n\n(cherry picked from commit 2411eae9edb562e80c45962c74945238a94e5d3b)",
        "before_after_code_files": [
          "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c"
          ],
          "candidate": [
            "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-multipart.c||epan/dissectors/packet-multipart.c": [
          "File: epan/dissectors/packet-multipart.c -> epan/dissectors/packet-multipart.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "339:     parameters = unfold_and_compact_mime_header(message_info->media_str, &dummy);",
          "341:     start_boundary = ws_find_media_type_parameter(wmem_packet_scope(), parameters, \"boundary\");",
          "344:         return NULL;",
          "345:     }",
          "347:         start_protocol = ws_find_media_type_parameter(wmem_packet_scope(), parameters, \"protocol\");",
          "350:             return NULL;",
          "351:         }",
          "352:     }",
          "",
          "[Removed Lines]",
          "343:     if(!start_boundary) {",
          "346:     if(strncmp(type, \"multipart/encrypted\", sizeof(\"multipart/encrypted\")-1) == 0) {",
          "348:         if(!start_protocol) {",
          "349:             g_free(start_boundary);",
          "",
          "[Added Lines]",
          "342:     if (!start_boundary) {",
          "346:     if (strncmp(type, \"multipart/encrypted\", sizeof(\"multipart/encrypted\") - 1) == 0) {",
          "348:         if (!start_protocol) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}