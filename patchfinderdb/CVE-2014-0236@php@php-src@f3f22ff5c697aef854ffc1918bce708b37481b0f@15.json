{
  "cve_id": "CVE-2014-0236",
  "cve_desc": "file before 5.18, as used in the Fileinfo component in PHP before 5.6.0, allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a zero root_storage value in a CDF file, related to cdf.c and readcdf.c.",
  "repo": "php/php-src",
  "patch_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
  "patch_info": {
    "commit_hash": "f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/f3f22ff5c697aef854ffc1918bce708b37481b0f",
    "files": [
      "NEWS",
      "ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c"
    ],
    "message": "Fixed bug #67329 fileinfo: NULL pointer deference flaw by processing certain CDF files",
    "before_after_code_files": [
      "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c",
      "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h",
      "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c"
    ]
  },
  "patch_diff": {
    "ext/fileinfo/libmagic/cdf.c||ext/fileinfo/libmagic/cdf.c": [
      "File: ext/fileinfo/libmagic/cdf.c -> ext/fileinfo/libmagic/cdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "35: #include \"file.h\"",
      "37: #ifndef lint",
      "39: #endif",
      "41: #include <assert.h>",
      "",
      "[Removed Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.53 2013/02/26 16:20:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "689: int",
      "690: cdf_read_short_stream(const cdf_info_t *info, const cdf_header_t *h,",
      "692: {",
      "693:  size_t i;",
      "694:  const cdf_directory_t *d;",
      "696:  for (i = 0; i < dir->dir_len; i++)",
      "697:   if (dir->dir_tab[i].d_type == CDF_DIR_TYPE_ROOT_STORAGE)",
      "698:    break;",
      "",
      "[Removed Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn)",
      "",
      "[Added Lines]",
      "691:     const cdf_sat_t *sat, const cdf_dir_t *dir, cdf_stream_t *scn,",
      "692:     const cdf_directory_t **root)",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/cdf.h||ext/fileinfo/libmagic/cdf.h": [
      "File: ext/fileinfo/libmagic/cdf.h -> ext/fileinfo/libmagic/cdf.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "300: int cdf_read_ssat(const cdf_info_t *, const cdf_header_t *, const cdf_sat_t *,",
      "301:     cdf_sat_t *);",
      "302: int cdf_read_short_stream(const cdf_info_t *, const cdf_header_t *,",
      "304: int cdf_read_property_info(const cdf_stream_t *, const cdf_header_t *, uint32_t,",
      "305:     cdf_property_info_t **, size_t *, size_t *);",
      "306: int cdf_read_summary_info(const cdf_info_t *, const cdf_header_t *,",
      "",
      "[Removed Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *);",
      "",
      "[Added Lines]",
      "303:     const cdf_sat_t *, const cdf_dir_t *, cdf_stream_t *,",
      "304:     const cdf_directory_t **);",
      "",
      "---------------"
    ],
    "ext/fileinfo/libmagic/readcdf.c||ext/fileinfo/libmagic/readcdf.c": [
      "File: ext/fileinfo/libmagic/readcdf.c -> ext/fileinfo/libmagic/readcdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: #include \"file.h\"",
      "28: #ifndef lint",
      "30: #endif",
      "32: #include <stdlib.h>",
      "",
      "[Removed Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.37 2014/01/06 13:41:18 rrt Exp $\")",
      "",
      "[Added Lines]",
      "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.40 2014/03/06 15:23:33 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77: # define strcasestr strstr",
      "78: #endif",
      "80: private const char *",
      "81: cdf_app_to_mime(const char *vbuf, const struct nv *nv)",
      "82: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "80: static const struct cv {",
      "81:  uint64_t clsid[2];",
      "82:  const char *mime;",
      "83: } clsid2mime[] = {",
      "84:  {",
      "85: #ifdef PHP_WIN32",
      "86:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "87: #else",
      "88:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "89: #endif",
      "90:   \"x-msi\",",
      "91:  }",
      "92: }, clsid2desc[] = {",
      "93:  {",
      "94: #ifdef PHP_WIN32",
      "95:   { 0x00000000000c1084ui64, 0x46000000000000c0ui64 },",
      "96: #else",
      "97:   { 0x00000000000c1084LLU, 0x46000000000000c0LLU },",
      "98: #endif",
      "99:   \"MSI Installer\",",
      "100:  },",
      "101: };",
      "103: private const char *",
      "104: cdf_clsid_to_mime(const uint64_t clsid[2], const struct cv *cv)",
      "105: {",
      "106:  size_t i;",
      "107:  for (i = 0; cv[i].mime != NULL; i++) {",
      "108:   if (clsid[0] == cv[i].clsid[0] && clsid[1] == cv[i].clsid[1])",
      "109:    return cv[i].mime;",
      "110:  }",
      "111:  return NULL;",
      "112: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "96: private int",
      "97: cdf_file_property_info(struct magic_set *ms, const cdf_property_info_t *info,",
      "99: {",
      "100:         size_t i;",
      "101:         cdf_timestamp_t tp;",
      "",
      "[Removed Lines]",
      "98:     size_t count)",
      "",
      "[Added Lines]",
      "132:     size_t count, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "108:  memset(&ts, 0, sizeof(ts));",
      "110:         for (i = 0; i < count; i++) {",
      "111:                 cdf_print_property_name(buf, sizeof(buf), info[i].pi_id);",
      "112:                 switch (info[i].pi_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         if (!NOTMIME(ms) && root_storage)",
      "145:   str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2mime);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "163:                                                     buf, vbuf) == -1)",
      "164:                                                         return -1;",
      "165:                                         }",
      "167:         CDF_PROPERTY_NAME_OF_APPLICATION) {",
      "168:      str = cdf_app_to_mime(vbuf, app2mime);",
      "169:     }",
      "",
      "[Removed Lines]",
      "166:                                 } else if (info[i].pi_id ==",
      "",
      "[Added Lines]",
      "203:                                 } else if (str == NULL && info[i].pi_id ==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "218: private int",
      "219: cdf_file_summary_info(struct magic_set *ms, const cdf_header_t *h,",
      "221: {",
      "222:         cdf_summary_info_header_t si;",
      "223:         cdf_property_info_t *info;",
      "",
      "[Removed Lines]",
      "220:     const cdf_stream_t *sst)",
      "",
      "[Added Lines]",
      "257:     const cdf_stream_t *sst, const cdf_directory_t *root_storage)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "228:                 return -1;",
      "230:         if (NOTMIME(ms)) {",
      "231:                 if (file_printf(ms, \"Composite Document File V2 Document\")",
      "232:       == -1)",
      "233:                         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "268:   const char *str;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "255:                                 return -2;",
      "256:                         break;",
      "257:                 }",
      "261:         free(info);",
      "263:         return m == -1 ? -2 : m;",
      "",
      "[Removed Lines]",
      "258:         }",
      "260:         m = cdf_file_property_info(ms, info, count);",
      "",
      "[Added Lines]",
      "297:   if (root_storage) {",
      "298:    str = cdf_clsid_to_mime(root_storage->d_storage_uuid, clsid2desc);",
      "299:    if (str)",
      "300:     if (file_printf(ms, \", %s\", str) == -1)",
      "301:      return -2;",
      "302:    }",
      "303:   }",
      "305:         m = cdf_file_property_info(ms, info, count, root_storage);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "275:         int i;",
      "276:         const char *expn = \"\";",
      "277:         const char *corrupt = \"corrupt: \";",
      "279:         info.i_fd = fd;",
      "280:         info.i_buf = buf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:         const cdf_directory_t *root_storage;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "308:                 goto out2;",
      "309:         }",
      "312:                 expn = \"Cannot read short stream\";",
      "313:                 goto out3;",
      "314:         }",
      "",
      "[Removed Lines]",
      "311:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst)) == -1) {",
      "",
      "[Added Lines]",
      "357:         if ((i = cdf_read_short_stream(&info, &h, &sat, &dir, &sst,",
      "358:      &root_storage)) == -1) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "329: #ifdef CDF_DEBUG",
      "330:         cdf_dump_summary_info(&h, &scn);",
      "331: #endif",
      "334:  if (i == 0) {",
      "335:   const char *str = NULL;",
      "336:   cdf_directory_t *d;",
      "337:   char name[__arraycount(d->d_name)];",
      "338:   size_t j, k;",
      "340:    d = &dir.dir_tab[j];",
      "341:    for (k = 0; k < sizeof(name); k++)",
      "342:     name[k] = (char)cdf_tole2(d->d_name[k]);",
      "349:   }",
      "350:   if (NOTMIME(ms)) {",
      "351:    if (str != NULL) {",
      "",
      "[Removed Lines]",
      "332:         if ((i = cdf_file_summary_info(ms, &h, &scn)) < 0)",
      "333:                 expn = \"Can't expand summary_info\";",
      "339:   for (j = 0; j < dir.dir_len; j++) {",
      "343:    if (NOTMIME(ms))",
      "344:     str = cdf_app_to_mime(name, name2desc);",
      "345:    else",
      "346:     str = cdf_app_to_mime(name, name2mime);",
      "347:    if (str != NULL)",
      "348:     break;",
      "",
      "[Added Lines]",
      "379:         if ((i = cdf_file_summary_info(ms, &h, &scn, root_storage)) < 0)",
      "380:             expn = \"Can't expand summary_info\";",
      "388:   for (j = 0; str == NULL && j < dir.dir_len; j++) {",
      "392:    str = cdf_app_to_mime(name,",
      "393:        NOTMIME(ms) ? name2desc : name2mime);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2e667544085856789c75061344faac4dd05fe69c",
      "candidate_info": {
        "commit_hash": "2e667544085856789c75061344faac4dd05fe69c",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/2e667544085856789c75061344faac4dd05fe69c",
        "files": [
          "phpdbg_help.c"
        ],
        "message": "Replace incorrect `E` command with `ev` in watch help\n\nFixes #95",
        "before_after_code_files": [
          "phpdbg_help.c||phpdbg_help.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg_help.c||phpdbg_help.c": [
          "File: phpdbg_help.c -> phpdbg_help.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "630: \"**Examples**\" CR CR",
          "631: \"    $P frame 2\" CR",
          "633: \"    Go to frame 2 and print out variable **$count** in that frame\" CR CR",
          "635: \"Note that this frame scope is discarded when execution continues, with the execution frame \"",
          "",
          "[Removed Lines]",
          "632: \"    $P E $count\" CR",
          "",
          "[Added Lines]",
          "632: \"    $P ev $count\" CR",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7cfe696371374430f7da8ef61e14b2f4f4b9e53f",
      "candidate_info": {
        "commit_hash": "7cfe696371374430f7da8ef61e14b2f4f4b9e53f",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/7cfe696371374430f7da8ef61e14b2f4f4b9e53f",
        "files": [
          "phpdbg_lexer.c",
          "phpdbg_lexer.l",
          "phpdbg_parser.c",
          "phpdbg_parser.h",
          "phpdbg_parser.y",
          "phpdbg_prompt.c"
        ],
        "message": "Fix ZTS build",
        "before_after_code_files": [
          "phpdbg_lexer.c||phpdbg_lexer.c",
          "phpdbg_lexer.l||phpdbg_lexer.l",
          "phpdbg_parser.c||phpdbg_parser.c",
          "phpdbg_parser.h||phpdbg_parser.h",
          "phpdbg_parser.y||phpdbg_parser.y",
          "phpdbg_prompt.c||phpdbg_prompt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "phpdbg_lexer.c||phpdbg_lexer.c": [
          "File: phpdbg_lexer.c -> phpdbg_lexer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "2: #line 1 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "",
          "[Added Lines]",
          "2: #line 1 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26: #define RAW 1",
          "27: #define INITIAL 2",
          "31: void phpdbg_init_lexer (phpdbg_param_t *stack, char *input TSRMLS_DC) {",
          "32:  PHPDBG_G(parser_stack) = stack;",
          "",
          "[Removed Lines]",
          "29: ZEND_DECLARE_MODULE_GLOBALS(phpdbg);",
          "",
          "[Added Lines]",
          "29: ZEND_EXTERN_MODULE_GLOBALS(phpdbg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:  LEX(text) = YYCURSOR;",
          "48: {",
          "49:  YYCTYPE yych;",
          "50:  unsigned int yyaccept = 0;",
          "",
          "[Removed Lines]",
          "47: #line 48 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "47: #line 48 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "126: yy3:",
          "127:   YYDEBUG(3, *YYCURSOR);",
          "128:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "130:   {",
          "131:  YYSETCONDITION(NORMAL);",
          "133:  YYCURSOR = LEX(text);",
          "134:  goto restart;",
          "135: }",
          "137: yy4:",
          "138:   YYDEBUG(4, *YYCURSOR);",
          "139:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "129: #line 161 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "136: #line 137 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "129: #line 161 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "136: #line 137 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "142:   }",
          "143:   YYDEBUG(5, *YYCURSOR);",
          "144:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "146:   {",
          "147:  return 0;",
          "148: }",
          "150: yy6:",
          "151:   YYDEBUG(6, *YYCURSOR);",
          "152:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "145: #line 68 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "149: #line 150 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "145: #line 68 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "149: #line 150 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "165: yy9:",
          "166:   YYDEBUG(9, *YYCURSOR);",
          "167:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "169:   {",
          "170:  YYSETCONDITION(RAW);",
          "171:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "172:  return T_RUN;",
          "173: }",
          "175: yy10:",
          "176:   YYDEBUG(10, *YYCURSOR);",
          "177:   yych = *++YYCURSOR;",
          "",
          "[Removed Lines]",
          "168: #line 155 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "174: #line 175 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "168: #line 155 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "174: #line 175 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "192:   ++YYCURSOR;",
          "193:   YYDEBUG(15, *YYCURSOR);",
          "194:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "196:   {",
          "197:  YYSETCONDITION(RAW);",
          "198:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "199:  return T_SHELL;",
          "200: }",
          "202: yy16:",
          "203:   YYDEBUG(16, *YYCURSOR);",
          "204:   ++YYCURSOR;",
          "205:   YYDEBUG(17, *YYCURSOR);",
          "206:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "208:   {",
          "209:  YYSETCONDITION(RAW);",
          "210:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "211:  return T_EVAL;",
          "212: }",
          "214: yy18:",
          "215:   YYDEBUG(18, *YYCURSOR);",
          "216:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "195: #line 150 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "201: #line 202 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "207: #line 145 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "213: #line 214 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "195: #line 150 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "201: #line 202 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "207: #line 145 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "213: #line 214 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "222:   }",
          "223:   YYDEBUG(20, *YYCURSOR);",
          "224:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "226:   {",
          "229:  goto restart;",
          "230: }",
          "232:  }",
          "234: yyc_NORMAL:",
          "",
          "[Removed Lines]",
          "225: #line 139 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "231: #line 232 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "225: #line 139 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "231: #line 232 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "330:   }",
          "331:   YYDEBUG(25, *YYCURSOR);",
          "332:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "334:   {",
          "337:  goto restart;",
          "338: }",
          "340: yy26:",
          "341:   YYDEBUG(26, *YYCURSOR);",
          "342:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "333: #line 139 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "339: #line 340 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "333: #line 139 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "339: #line 340 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "345:   }",
          "346:   YYDEBUG(27, *YYCURSOR);",
          "347:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "349:   {",
          "350:  return 0;",
          "351: }",
          "353: yy28:",
          "354:   YYDEBUG(28, *YYCURSOR);",
          "355:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "348: #line 68 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "352: #line 353 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "348: #line 68 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "352: #line 353 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "359: yy29:",
          "360:   YYDEBUG(29, *YYCURSOR);",
          "361:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "363:   {",
          "364:  phpdbg_init_param(yylval, STR_PARAM);",
          "365:  yylval->str = zend_strndup(yytext, yyleng);",
          "366:  yylval->len = yyleng;",
          "367:  return T_ID;",
          "368: }",
          "370: yy30:",
          "371:   YYDEBUG(30, *YYCURSOR);",
          "372:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "362: #line 125 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "369: #line 370 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "362: #line 125 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "369: #line 370 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "408: yy34:",
          "409:   YYDEBUG(34, *YYCURSOR);",
          "410:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "412:   {",
          "413:  phpdbg_init_param(yylval, NUMERIC_PARAM);",
          "414:  yylval->num = atoi(yytext);",
          "415:  return T_DIGITS;",
          "416: }",
          "418: yy35:",
          "419:   YYDEBUG(35, *YYCURSOR);",
          "420:   yyaccept = 1;",
          "",
          "[Removed Lines]",
          "411: #line 106 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "417: #line 418 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "411: #line 106 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "417: #line 418 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "500:   ++YYCURSOR;",
          "501:   YYDEBUG(46, *YYCURSOR);",
          "502:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "504:   {",
          "505:  return T_POUND;",
          "506: }",
          "508: yy47:",
          "509:   YYDEBUG(47, *YYCURSOR);",
          "510:   ++YYCURSOR;",
          "511:   if ((yych = *YYCURSOR) == ':') goto yy49;",
          "512:   YYDEBUG(48, *YYCURSOR);",
          "513:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "515:   {",
          "516:  return T_COLON;",
          "517: }",
          "519: yy49:",
          "520:   YYDEBUG(49, *YYCURSOR);",
          "521:   ++YYCURSOR;",
          "522:   YYDEBUG(50, *YYCURSOR);",
          "523:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "525:   {",
          "526:  return T_DCOLON;",
          "527: }",
          "529: yy51:",
          "530:   YYDEBUG(51, *YYCURSOR);",
          "531:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "503: #line 84 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "507: #line 508 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "514: #line 90 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "518: #line 519 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "524: #line 87 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "528: #line 529 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "503: #line 84 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "507: #line 508 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "514: #line 90 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "518: #line 519 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "524: #line 87 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "528: #line 529 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "572:   ++YYCURSOR;",
          "573:   YYDEBUG(56, *YYCURSOR);",
          "574:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "576:   {",
          "577:  phpdbg_init_param(yylval, STR_PARAM);",
          "578:  yylval->str = zend_strndup(yytext, yyleng);",
          "579:  yylval->len = yyleng;",
          "580:  return T_PROTO;",
          "581: }",
          "583: yy57:",
          "584:   YYDEBUG(57, *YYCURSOR);",
          "585:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "575: #line 78 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "582: #line 583 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "575: #line 78 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "582: #line 583 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "625: yy62:",
          "626:   YYDEBUG(62, *YYCURSOR);",
          "627:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "629:   {",
          "630:  phpdbg_init_param(yylval, OP_PARAM);",
          "631:  yylval->str = zend_strndup(yytext, yyleng);",
          "632:  yylval->len = yyleng;",
          "633:  return T_OPCODE;",
          "634: }",
          "636: yy63:",
          "637:   YYDEBUG(63, *YYCURSOR);",
          "638:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "628: #line 118 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "635: #line 636 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "628: #line 118 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "635: #line 636 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "656: yy65:",
          "657:   YYDEBUG(65, *YYCURSOR);",
          "658:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "660:   {",
          "661:  phpdbg_init_param(yylval, NUMERIC_PARAM);",
          "662:  yylval->num = 1;",
          "663:  return T_TRUTHY;",
          "664: }",
          "666: yy66:",
          "667:   YYDEBUG(66, *YYCURSOR);",
          "668:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "659: #line 94 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "665: #line 666 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "659: #line 94 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "665: #line 666 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "696: yy70:",
          "697:   YYDEBUG(70, *YYCURSOR);",
          "698:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "700:   {",
          "701:  phpdbg_init_param(yylval, NUMERIC_PARAM);",
          "702:  yylval->num = 0;",
          "703:  return T_FALSY;",
          "704: }",
          "706: yy71:",
          "707:   YYDEBUG(71, *YYCURSOR);",
          "708:   yyaccept = 0;",
          "",
          "[Removed Lines]",
          "699: #line 100 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "705: #line 706 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "699: #line 100 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "705: #line 706 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "815: yy91:",
          "816:   YYDEBUG(91, *YYCURSOR);",
          "817:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "819:   {",
          "820:  phpdbg_init_param(yylval, ADDR_PARAM);",
          "821:  yylval->addr = strtoul(yytext, 0, 16);",
          "822:  return T_ADDR;",
          "823: }",
          "825: yy92:",
          "826:   YYDEBUG(92, *YYCURSOR);",
          "827:   yyaccept = 6;",
          "",
          "[Removed Lines]",
          "818: #line 112 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "824: #line 825 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "818: #line 112 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "824: #line 825 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "840: yy93:",
          "841:   YYDEBUG(93, *YYCURSOR);",
          "842:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "844:   {",
          "845:  YYSETCONDITION(RAW);",
          "846:  phpdbg_init_param(yylval, EMPTY_PARAM);",
          "847:  return T_IF;",
          "848: }",
          "850:  }",
          "852: yyc_RAW:",
          "",
          "[Removed Lines]",
          "843: #line 72 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "849: #line 850 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "843: #line 72 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "849: #line 850 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "907: yy98:",
          "908:   YYDEBUG(98, *YYCURSOR);",
          "909:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "911:   {",
          "912:  phpdbg_init_param(yylval, STR_PARAM);",
          "913:  yylval->str = zend_strndup(yytext, yyleng);",
          "914:  yylval->len = yyleng;",
          "915:  return T_INPUT;",
          "916: }",
          "918: yy99:",
          "919:   YYDEBUG(99, *YYCURSOR);",
          "920:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "910: #line 132 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "917: #line 918 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "910: #line 132 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "917: #line 918 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "923:   }",
          "924:   YYDEBUG(100, *YYCURSOR);",
          "925:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "927:   {",
          "928:  return 0;",
          "929: }",
          "931: yy101:",
          "932:   YYDEBUG(101, *YYCURSOR);",
          "933:   ++YYCURSOR;",
          "",
          "[Removed Lines]",
          "926: #line 68 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "930: #line 931 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "[Added Lines]",
          "926: #line 68 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "930: #line 931 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "949:   }",
          "950:   YYDEBUG(105, *YYCURSOR);",
          "951:   yyleng = (size_t) YYCURSOR - (size_t) yytext;",
          "953:   {",
          "956:  goto restart;",
          "957: }",
          "959:  }",
          "960: }",
          "963: }",
          "",
          "[Removed Lines]",
          "952: #line 139 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "958: #line 959 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "961: #line 168 \"/home/pi/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "",
          "[Added Lines]",
          "952: #line 139 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "958: #line 959 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.c\"",
          "961: #line 168 \"/var/root/php-src/sapi/phpdbg/phpdbg_lexer.l\"",
          "",
          "---------------"
        ],
        "phpdbg_lexer.l||phpdbg_lexer.l": [
          "File: phpdbg_lexer.l -> phpdbg_lexer.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: #define RAW 1",
          "25: #define INITIAL 2",
          "29: void phpdbg_init_lexer (phpdbg_param_t *stack, char *input TSRMLS_DC) {",
          "30:  PHPDBG_G(parser_stack) = stack;",
          "",
          "[Removed Lines]",
          "27: ZEND_DECLARE_MODULE_GLOBALS(phpdbg);",
          "",
          "[Added Lines]",
          "27: ZEND_EXTERN_MODULE_GLOBALS(phpdbg);",
          "",
          "---------------"
        ],
        "phpdbg_parser.c||phpdbg_parser.c": [
          "File: phpdbg_parser.c -> phpdbg_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:    This program is free software: you can redistribute it and/or modify",
          "8:    it under the terms of the GNU General Public License as published by",
          "",
          "[Removed Lines]",
          "5:       Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.",
          "",
          "[Added Lines]",
          "5:       Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44: #define YYBISON 1",
          "50: #define YYSKELETON_NAME \"yacc.c\"",
          "",
          "[Removed Lines]",
          "47: #define YYBISON_VERSION \"2.5\"",
          "",
          "[Added Lines]",
          "47: #define YYBISON_VERSION \"2.6.2\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59: #define YYPULL 1",
          "65: #define yyparse         phpdbg_parse",
          "",
          "[Removed Lines]",
          "62: #define YYLSP_NEEDED 0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70: #define yydebug         phpdbg_debug",
          "71: #define yynerrs         phpdbg_nerrs",
          "",
          "[Removed Lines]",
          "77: #line 1 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "73: #line 1 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "96: #include \"phpdbg_lexer.h\"",
          "98: #undef yyerror",
          "101: ZEND_EXTERN_MODULE_GLOBALS(phpdbg);",
          "114: #ifdef YYERROR_VERBOSE",
          "",
          "[Removed Lines]",
          "99: static int yyerror(const char *msg);",
          "106: #line 107 \"sapi/phpdbg/phpdbg_parser.c\"",
          "109: #ifndef YYDEBUG",
          "110: # define YYDEBUG 0",
          "111: #endif",
          "",
          "[Added Lines]",
          "95: static int yyerror(void ***tsrm_ls, const char *msg);",
          "101: #line 102 \"sapi/phpdbg/phpdbg_parser.c\"",
          "103: # ifndef YY_NULL",
          "104: #  if defined __cplusplus && 201103L <= __cplusplus",
          "105: #   define YY_NULL nullptr",
          "106: #  else",
          "107: #   define YY_NULL 0",
          "108: #  endif",
          "109: # endif",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "118: # define YYERROR_VERBOSE 1",
          "119: #endif",
          "124: #endif",
          "131: #include \"phpdbg.h\"",
          "132: #ifndef YY_TYPEDEF_YY_SCANNER_T",
          "",
          "[Removed Lines]",
          "122: #ifndef YYTOKEN_TABLE",
          "123: # define YYTOKEN_TABLE 0",
          "129: #line 31 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "121: #ifndef PHPDBG_SAPI_PHPDBG_PHPDBG_PARSER_H",
          "122: # define PHPDBG_SAPI_PHPDBG_PHPDBG_PARSER_H",
          "124: #ifndef YYDEBUG",
          "125: # define YYDEBUG 0",
          "126: #endif",
          "127: #if YYDEBUG",
          "128: extern int phpdbg_debug;",
          "132: #line 31 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "135: #endif",
          "143: #ifndef YYTOKENTYPE",
          "",
          "[Removed Lines]",
          "140: #line 141 \"sapi/phpdbg/phpdbg_parser.c\"",
          "",
          "[Added Lines]",
          "142: #line 143 \"sapi/phpdbg/phpdbg_parser.c\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "196: #endif",
          "205: #ifdef short",
          "206: # undef short",
          "",
          "[Removed Lines]",
          "203: #line 204 \"sapi/phpdbg/phpdbg_parser.c\"",
          "",
          "[Added Lines]",
          "200: #ifdef YYPARSE_PARAM",
          "201: #if defined __STDC__ || defined __cplusplus",
          "202: int phpdbg_parse (void *YYPARSE_PARAM);",
          "203: #else",
          "204: int phpdbg_parse ();",
          "205: #endif",
          "207: #if defined __STDC__ || defined __cplusplus",
          "208: int phpdbg_parse (void *tsrm_ls);",
          "209: #else",
          "210: int phpdbg_parse ();",
          "211: #endif",
          "219: #line 220 \"sapi/phpdbg/phpdbg_parser.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "397: #endif",
          "399: #if defined YYCOPY_NEEDED && YYCOPY_NEEDED",
          "402: # ifndef YYCOPY",
          "403: #  if defined __GNUC__ && 1 < __GNUC__",
          "406: #  else",
          "414:       while (YYID (0))",
          "415: #  endif",
          "416: # endif",
          "",
          "[Removed Lines]",
          "404: #   define YYCOPY(To, From, Count) \\",
          "405:       __builtin_memcpy (To, From, (Count) * sizeof (*(From)))",
          "407: #   define YYCOPY(To, From, Count)  \\",
          "408:       do     \\",
          "409:  {     \\",
          "410:    YYSIZE_T yyi;    \\",
          "411:    for (yyi = 0; yyi < (Count); yyi++) \\",
          "412:      (To)[yyi] = (From)[yyi];  \\",
          "413:  }     \\",
          "",
          "[Added Lines]",
          "421: #   define YYCOPY(Dst, Src, Count) \\",
          "422:       __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))",
          "424: #   define YYCOPY(Dst, Src, Count)              \\",
          "425:       do                                        \\",
          "426:         {                                       \\",
          "427:           YYSIZE_T yyi;                         \\",
          "428:           for (yyi = 0; yyi < (Count); yyi++)   \\",
          "429:             (Dst)[yyi] = (Src)[yyi];            \\",
          "430:         }                                       \\",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "497: static const yytype_uint8 yyrline[] =",
          "498: {",
          "502: };",
          "503: #endif",
          "508: static const char *const yytname[] =",
          "",
          "[Removed Lines]",
          "499:        0,    64,    64,    65,    66,    70,    71,    75,    80,    85,",
          "500:       95,   105,   110,   116,   122,   123,   124,   125,   126,   127,",
          "501:      128,   132,   137,   142,   147,   151",
          "505: #if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE",
          "",
          "[Added Lines]",
          "516:        0,    66,    66,    67,    68,    72,    73,    77,    82,    87,",
          "517:       97,   107,   112,   118,   124,   125,   126,   127,   128,   129,",
          "518:      130,   134,   139,   144,   149,   153",
          "522: #if YYDEBUG || YYERROR_VERBOSE || 1",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "515:   \"\\\"digits (numbers)\\\"\", \"\\\"literal (string)\\\"\", \"\\\"address\\\"\",",
          "516:   \"\\\"opcode\\\"\", \"\\\"identifier (command or function name)\\\"\",",
          "517:   \"\\\"input (input string or data)\\\"\", \"\\\"input\\\"\", \"$accept\", \"input\",",
          "519: };",
          "520: #endif",
          "",
          "[Removed Lines]",
          "518:   \"parameters\", \"parameter\", \"full_expression\", 0",
          "",
          "[Added Lines]",
          "535:   \"parameters\", \"parameter\", \"full_expression\", YY_NULL",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "646: #define YYRECOVERING()  (!!yyerrstatus)",
          "660:       YYERROR;       \\",
          "661:     }        \\",
          "662: while (YYID (0))",
          "",
          "[Removed Lines]",
          "648: #define YYBACKUP(Token, Value)     \\",
          "649: do        \\",
          "650:   if (yychar == YYEMPTY && yylen == 1)    \\",
          "651:     {        \\",
          "652:       yychar = (Token);      \\",
          "653:       yylval = (Value);      \\",
          "654:       YYPOPSTACK (1);      \\",
          "655:       goto yybackup;      \\",
          "656:     }        \\",
          "657:   else        \\",
          "658:     {        \\",
          "659:       yyerror (YY_(\"syntax error: cannot back up\")); \\",
          "",
          "[Added Lines]",
          "665: #define YYBACKUP(Token, Value)                                  \\",
          "666: do                                                              \\",
          "667:   if (yychar == YYEMPTY)                                        \\",
          "668:     {                                                           \\",
          "669:       yychar = (Token);                                         \\",
          "670:       yylval = (Value);                                         \\",
          "671:       YYPOPSTACK (yylen);                                       \\",
          "672:       yystate = *yyssp;                                         \\",
          "673:       goto yybackup;                                            \\",
          "674:     }                                                           \\",
          "675:   else                                                          \\",
          "676:     {                                                           \\",
          "677:       yyerror (tsrm_ls, YY_(\"syntax error: cannot back up\")); \\",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "665: #define YYTERROR 1",
          "666: #define YYERRCODE 256",
          "670:    If N is 0, then set CURRENT to the empty location which ends",
          "674: #ifndef YYLLOC_DEFAULT",
          "691:     while (YYID (0))",
          "692: #endif",
          "",
          "[Removed Lines]",
          "673: #define YYRHSLOC(Rhs, K) ((Rhs)[K])",
          "675: # define YYLLOC_DEFAULT(Current, Rhs, N)    \\",
          "676:     do         \\",
          "677:       if (YYID (N))                                                    \\",
          "678:  {        \\",
          "679:    (Current).first_line   = YYRHSLOC (Rhs, 1).first_line; \\",
          "680:    (Current).first_column = YYRHSLOC (Rhs, 1).first_column; \\",
          "681:    (Current).last_line    = YYRHSLOC (Rhs, N).last_line;  \\",
          "682:    (Current).last_column  = YYRHSLOC (Rhs, N).last_column; \\",
          "683:  }        \\",
          "684:       else        \\",
          "685:  {        \\",
          "686:    (Current).first_line   = (Current).last_line   =  \\",
          "687:      YYRHSLOC (Rhs, 0).last_line;    \\",
          "688:    (Current).first_column = (Current).last_column =  \\",
          "689:      YYRHSLOC (Rhs, 0).last_column;    \\",
          "690:  }        \\",
          "",
          "[Added Lines]",
          "691: # define YYLLOC_DEFAULT(Current, Rhs, N)                                \\",
          "692:     do                                                                  \\",
          "693:       if (YYID (N))                                                     \\",
          "694:         {                                                               \\",
          "695:           (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \\",
          "696:           (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \\",
          "697:           (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \\",
          "698:           (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \\",
          "699:         }                                                               \\",
          "700:       else                                                              \\",
          "701:         {                                                               \\",
          "702:           (Current).first_line   = (Current).last_line   =              \\",
          "703:             YYRHSLOC (Rhs, 0).last_line;                                \\",
          "704:           (Current).first_column = (Current).last_column =              \\",
          "705:             YYRHSLOC (Rhs, 0).last_column;                              \\",
          "706:         }                                                               \\",
          "710: #define YYRHSLOC(Rhs, K) ((Rhs)[K])",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "727:     {           \\",
          "728:       YYFPRINTF (stderr, \"%s \", Title);       \\",
          "729:       yy_symbol_print (stderr,        \\",
          "731:       YYFPRINTF (stderr, \"\\n\");        \\",
          "732:     }           \\",
          "733: } while (YYID (0))",
          "",
          "[Removed Lines]",
          "730:     Type, Value); \\",
          "",
          "[Added Lines]",
          "749:     Type, Value, tsrm_ls); \\",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "741: #if (defined __STDC__ || defined __C99__FUNC__ \\",
          "742:      || defined __cplusplus || defined _MSC_VER)",
          "743: static void",
          "745: #else",
          "746: static void",
          "748:     FILE *yyoutput;",
          "749:     int yytype;",
          "750:     YYSTYPE const * const yyvaluep;",
          "751: #endif",
          "752: {",
          "753:   if (!yyvaluep)",
          "754:     return;",
          "755: # ifdef YYPRINT",
          "756:   if (yytype < YYNTOKENS)",
          "757:     YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);",
          "",
          "[Removed Lines]",
          "744: yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)",
          "747: yy_symbol_value_print (yyoutput, yytype, yyvaluep)",
          "",
          "[Added Lines]",
          "763: yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, void *tsrm_ls)",
          "766: yy_symbol_value_print (yyoutput, yytype, yyvaluep, tsrm_ls)",
          "770:     void *tsrm_ls;",
          "773:   FILE *yyo = yyoutput;",
          "774:   YYUSE (yyo);",
          "777:   YYUSE (tsrm_ls);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "773: #if (defined __STDC__ || defined __C99__FUNC__ \\",
          "774:      || defined __cplusplus || defined _MSC_VER)",
          "775: static void",
          "777: #else",
          "778: static void",
          "780:     FILE *yyoutput;",
          "781:     int yytype;",
          "782:     YYSTYPE const * const yyvaluep;",
          "783: #endif",
          "784: {",
          "785:   if (yytype < YYNTOKENS)",
          "",
          "[Removed Lines]",
          "776: yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)",
          "779: yy_symbol_print (yyoutput, yytype, yyvaluep)",
          "",
          "[Added Lines]",
          "799: yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, void *tsrm_ls)",
          "802: yy_symbol_print (yyoutput, yytype, yyvaluep, tsrm_ls)",
          "806:     void *tsrm_ls;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "787:   else",
          "788:     YYFPRINTF (yyoutput, \"nterm %s (\", yytname[yytype]);",
          "791:   YYFPRINTF (yyoutput, \")\");",
          "792: }",
          "",
          "[Removed Lines]",
          "790:   yy_symbol_value_print (yyoutput, yytype, yyvaluep);",
          "",
          "[Added Lines]",
          "814:   yy_symbol_value_print (yyoutput, yytype, yyvaluep, tsrm_ls);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "830: #if (defined __STDC__ || defined __C99__FUNC__ \\",
          "831:      || defined __cplusplus || defined _MSC_VER)",
          "832: static void",
          "834: #else",
          "835: static void",
          "837:     YYSTYPE *yyvsp;",
          "838:     int yyrule;",
          "839: #endif",
          "840: {",
          "841:   int yynrhs = yyr2[yyrule];",
          "",
          "[Removed Lines]",
          "833: yy_reduce_print (YYSTYPE *yyvsp, int yyrule)",
          "836: yy_reduce_print (yyvsp, yyrule)",
          "",
          "[Added Lines]",
          "857: yy_reduce_print (YYSTYPE *yyvsp, int yyrule, void *tsrm_ls)",
          "860: yy_reduce_print (yyvsp, yyrule, tsrm_ls)",
          "863:     void *tsrm_ls;",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "849:       YYFPRINTF (stderr, \"   $%d = \", yyi + 1);",
          "850:       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],",
          "851:          &(yyvsp[(yyi + 1) - (yynrhs)])",
          "853:       YYFPRINTF (stderr, \"\\n\");",
          "854:     }",
          "855: }",
          "",
          "[Removed Lines]",
          "852:                   );",
          "",
          "[Added Lines]",
          "877:                   , tsrm_ls);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "857: # define YY_REDUCE_PRINT(Rule)  \\",
          "858: do {     \\",
          "859:   if (yydebug)    \\",
          "861: } while (YYID (0))",
          "",
          "[Removed Lines]",
          "860:     yy_reduce_print (yyvsp, Rule); \\",
          "",
          "[Added Lines]",
          "885:     yy_reduce_print (yyvsp, Rule, tsrm_ls); \\",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1001: yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,",
          "1002:                 yytype_int16 *yyssp, int yytoken)",
          "1003: {",
          "1005:   YYSIZE_T yysize = yysize0;",
          "1006:   YYSIZE_T yysize1;",
          "1007:   enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };",
          "1011:   char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];",
          "",
          "[Removed Lines]",
          "1004:   YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);",
          "1009:   const char *yyformat = 0;",
          "",
          "[Added Lines]",
          "1029:   YYSIZE_T yysize0 = yytnamerr (YY_NULL, yytname[yytoken]);",
          "1034:   const char *yyformat = YY_NULL;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1066:                     break;",
          "1067:                   }",
          "1068:                 yyarg[yycount++] = yytname[yyx];",
          "1070:                 if (! (yysize <= yysize1",
          "1071:                        && yysize1 <= YYSTACK_ALLOC_MAXIMUM))",
          "1072:                   return 2;",
          "",
          "[Removed Lines]",
          "1069:                 yysize1 = yysize + yytnamerr (0, yytname[yyx]);",
          "",
          "[Added Lines]",
          "1094:                 yysize1 = yysize + yytnamerr (YY_NULL, yytname[yyx]);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1134: #if (defined __STDC__ || defined __C99__FUNC__ \\",
          "1135:      || defined __cplusplus || defined _MSC_VER)",
          "1136: static void",
          "1138: #else",
          "1139: static void",
          "1141:     const char *yymsg;",
          "1142:     int yytype;",
          "1143:     YYSTYPE *yyvaluep;",
          "1144: #endif",
          "1145: {",
          "1146:   YYUSE (yyvaluep);",
          "1148:   if (!yymsg)",
          "1149:     yymsg = \"Deleting\";",
          "",
          "[Removed Lines]",
          "1137: yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)",
          "1140: yydestruct (yymsg, yytype, yyvaluep)",
          "",
          "[Added Lines]",
          "1162: yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, void *tsrm_ls)",
          "1165: yydestruct (yymsg, yytype, yyvaluep, tsrm_ls)",
          "1169:     void *tsrm_ls;",
          "1173:   YYUSE (tsrm_ls);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1158: }",
          "",
          "[Removed Lines]",
          "1162: #ifdef YYPARSE_PARAM",
          "1163: #if defined __STDC__ || defined __cplusplus",
          "1164: int yyparse (void *YYPARSE_PARAM);",
          "1165: #else",
          "1166: int yyparse ();",
          "1167: #endif",
          "1169: #if defined __STDC__ || defined __cplusplus",
          "1170: int yyparse (void);",
          "1171: #else",
          "1172: int yyparse ();",
          "1173: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1192: #if (defined __STDC__ || defined __C99__FUNC__ \\",
          "1193:      || defined __cplusplus || defined _MSC_VER)",
          "1194: int",
          "1196: #else",
          "1197: int",
          "1200: #endif",
          "1201: #endif",
          "1202: {",
          "",
          "[Removed Lines]",
          "1195: yyparse (void)",
          "1198: yyparse ()",
          "",
          "[Added Lines]",
          "1208: yyparse (void *tsrm_ls)",
          "1211: yyparse (tsrm_ls)",
          "1212:     void *tsrm_ls;",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1217:        `yyss': related to states.",
          "1218:        `yyvs': related to semantic values.",
          "",
          "[Removed Lines]",
          "1220:        Refer to the stacks thru separate pointers, to allow yyoverflow",
          "",
          "[Added Lines]",
          "1233:        Refer to the stacks through separate pointers, to allow yyoverflow",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1449:   switch (yyn)",
          "1450:     {",
          "1451:         case 3:",
          "1455:     { phpdbg_stack_push(PHPDBG_G(parser_stack), &(yyvsp[(1) - (1)])); }",
          "1456:     break;",
          "1458:   case 5:",
          "1462:     { phpdbg_stack_push(PHPDBG_G(parser_stack), &(yyvsp[(1) - (1)])); }",
          "1463:     break;",
          "1465:   case 6:",
          "1469:     { phpdbg_stack_push(PHPDBG_G(parser_stack), &(yyvsp[(2) - (2)])); }",
          "1470:     break;",
          "1472:   case 7:",
          "1476:     {",
          "1477:   (yyval).type = FILE_PARAM;",
          "1478:   (yyval).file.name = (yyvsp[(2) - (3)]).str;",
          "",
          "[Removed Lines]",
          "1454: #line 65 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1461: #line 70 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1468: #line 71 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1475: #line 75 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1465: #line 67 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1471: #line 72 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1477: #line 73 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1483: #line 77 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1481:     break;",
          "1483:   case 8:",
          "1487:     {",
          "1488:   (yyval).type = NUMERIC_FILE_PARAM;",
          "1489:   (yyval).file.name = (yyvsp[(1) - (4)]).str;",
          "",
          "[Removed Lines]",
          "1486: #line 80 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1493: #line 82 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1492:     break;",
          "1494:   case 9:",
          "1498:     {",
          "1499:   (yyval).type = FILE_PARAM;",
          "1500:   (yyval).file.name = malloc((yyvsp[(1) - (4)]).len + (yyvsp[(2) - (4)]).len + 1);",
          "",
          "[Removed Lines]",
          "1497: #line 85 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1503: #line 87 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1508:     break;",
          "1510:   case 10:",
          "1514:     {",
          "1515:   (yyval).type = NUMERIC_FILE_PARAM;",
          "1516:   (yyval).file.name = malloc((yyvsp[(1) - (5)]).len + (yyvsp[(2) - (5)]).len + 1);",
          "",
          "[Removed Lines]",
          "1513: #line 95 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1518: #line 97 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1524:     break;",
          "1526:   case 11:",
          "1530:     {",
          "1531:   (yyval).type = METHOD_PARAM;",
          "1532:   (yyval).method.class = (yyvsp[(1) - (3)]).str;",
          "",
          "[Removed Lines]",
          "1529: #line 105 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1533: #line 107 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1535:     break;",
          "1537:   case 12:",
          "1541:     {",
          "1542:   (yyval).type = NUMERIC_METHOD_PARAM;",
          "1543:   (yyval).method.class = (yyvsp[(1) - (5)]).str;",
          "",
          "[Removed Lines]",
          "1540: #line 110 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1543: #line 112 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1547:     break;",
          "1549:   case 13:",
          "1553:     {",
          "1554:   (yyval).type = NUMERIC_FUNCTION_PARAM;",
          "1555:   (yyval).str = (yyvsp[(1) - (3)]).str;",
          "",
          "[Removed Lines]",
          "1552: #line 116 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1554: #line 118 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1559:     break;",
          "1561:   case 14:",
          "1565:     { (yyval) = (yyvsp[(1) - (1)]); }",
          "1566:     break;",
          "1568:   case 15:",
          "1572:     { (yyval) = (yyvsp[(1) - (1)]); }",
          "1573:     break;",
          "1575:   case 16:",
          "1579:     { (yyval) = (yyvsp[(1) - (1)]); }",
          "1580:     break;",
          "1582:   case 17:",
          "1586:     { (yyval) = (yyvsp[(1) - (1)]); }",
          "1587:     break;",
          "1589:   case 18:",
          "1593:     { (yyval) = (yyvsp[(1) - (1)]); }",
          "1594:     break;",
          "1596:   case 19:",
          "1600:     { (yyval) = (yyvsp[(1) - (1)]); }",
          "1601:     break;",
          "1603:   case 20:",
          "1607:     { (yyval) = (yyvsp[(1) - (1)]); }",
          "1608:     break;",
          "1610:   case 21:",
          "1614:     {",
          "1615:   (yyval).type = COND_PARAM;",
          "1616:   (yyval).str = (yyvsp[(2) - (2)]).str;",
          "",
          "[Removed Lines]",
          "1564: #line 122 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1571: #line 123 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1578: #line 124 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1585: #line 125 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1592: #line 126 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1599: #line 127 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1606: #line 128 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1613: #line 132 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1565: #line 124 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1571: #line 125 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1577: #line 126 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1583: #line 127 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1589: #line 128 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1595: #line 129 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1601: #line 130 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1607: #line 134 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1619:     break;",
          "1621:   case 22:",
          "1625:     {",
          "1626:   (yyval).type = EVAL_PARAM;",
          "1627:   (yyval).str = (yyvsp[(2) - (2)]).str;",
          "",
          "[Removed Lines]",
          "1624: #line 137 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1617: #line 139 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1630:     break;",
          "1632:   case 23:",
          "1636:     {",
          "1637:   (yyval).type = SHELL_PARAM;",
          "1638:   (yyval).str = (yyvsp[(2) - (2)]).str;",
          "",
          "[Removed Lines]",
          "1635: #line 142 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1627: #line 144 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1641:     break;",
          "1643:   case 24:",
          "1647:     {",
          "1648:   (yyval).type = RUN_PARAM;",
          "1649:   (yyval).len = 0;",
          "",
          "[Removed Lines]",
          "1646: #line 147 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1637: #line 149 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1651:     break;",
          "1653:   case 25:",
          "1657:     {",
          "1658:   (yyval).type = RUN_PARAM;",
          "1659:   (yyval).str = (yyvsp[(2) - (2)]).str;",
          "",
          "[Removed Lines]",
          "1656: #line 151 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "1646: #line 153 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1662:     break;",
          "1668:       default: break;",
          "1669:     }",
          "",
          "[Removed Lines]",
          "1667: #line 1668 \"sapi/phpdbg/phpdbg_parser.c\"",
          "",
          "[Added Lines]",
          "1656: #line 1657 \"sapi/phpdbg/phpdbg_parser.c\"",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1714:     {",
          "1715:       ++yynerrs;",
          "1716: #if ! YYERROR_VERBOSE",
          "1718: #else",
          "1719: # define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \\",
          "1720:                                         yyssp, yytoken)",
          "",
          "[Removed Lines]",
          "1717:       yyerror (YY_(\"syntax error\"));",
          "",
          "[Added Lines]",
          "1706:       yyerror (tsrm_ls, YY_(\"syntax error\"));",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1741:                 yymsgp = yymsg;",
          "1742:               }",
          "1743:           }",
          "1745:         if (yysyntax_error_status == 2)",
          "1746:           goto yyexhaustedlab;",
          "1747:       }",
          "",
          "[Removed Lines]",
          "1744:         yyerror (yymsgp);",
          "",
          "[Added Lines]",
          "1733:         yyerror (tsrm_ls, yymsgp);",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1765:       else",
          "1766:  {",
          "1767:    yydestruct (\"Error: discarding\",",
          "1769:    yychar = YYEMPTY;",
          "1770:  }",
          "1771:     }",
          "",
          "[Removed Lines]",
          "1768:         yytoken, &yylval);",
          "",
          "[Added Lines]",
          "1757:         yytoken, &yylval, tsrm_ls);",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1823:       yydestruct (\"Error: popping\",",
          "1825:       YYPOPSTACK (1);",
          "1826:       yystate = *yyssp;",
          "1827:       YY_STACK_PRINT (yyss, yyssp);",
          "",
          "[Removed Lines]",
          "1824:     yystos[yystate], yyvsp);",
          "",
          "[Added Lines]",
          "1813:     yystos[yystate], yyvsp, tsrm_ls);",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1851:   yyresult = 1;",
          "1852:   goto yyreturn;",
          "1856: | yyexhaustedlab -- memory exhaustion comes here.  |",
          "1858: yyexhaustedlab:",
          "1860:   yyresult = 2;",
          "1862: #endif",
          "",
          "[Removed Lines]",
          "1854: #if !defined(yyoverflow) || YYERROR_VERBOSE",
          "1859:   yyerror (YY_(\"memory exhausted\"));",
          "",
          "[Added Lines]",
          "1843: #if !defined yyoverflow || YYERROR_VERBOSE",
          "1848:   yyerror (tsrm_ls, YY_(\"memory exhausted\"));",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1869:       yytoken = YYTRANSLATE (yychar);",
          "1870:       yydestruct (\"Cleanup: discarding lookahead\",",
          "1872:     }",
          "",
          "[Removed Lines]",
          "1871:                   yytoken, &yylval);",
          "",
          "[Added Lines]",
          "1860:                   yytoken, &yylval, tsrm_ls);",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1877:   while (yyssp != yyss)",
          "1878:     {",
          "1879:       yydestruct (\"Cleanup: popping\",",
          "1881:       YYPOPSTACK (1);",
          "1882:     }",
          "1883: #ifndef yyoverflow",
          "",
          "[Removed Lines]",
          "1880:     yystos[*yyssp], yyvsp);",
          "",
          "[Added Lines]",
          "1869:     yystos[*yyssp], yyvsp, tsrm_ls);",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "1893: }",
          "1904:  phpdbg_error(\"Parse Error: %s\", msg);",
          "1906:  {",
          "",
          "[Removed Lines]",
          "1898: #line 158 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1901: static int yyerror(const char *msg) {",
          "1902:  TSRMLS_FETCH();",
          "",
          "[Added Lines]",
          "1886: #line 160 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "1889: static int yyerror(void ***tsrm_ls, const char *msg) {",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "1917: int phpdbg_do_parse(phpdbg_param_t *stack, char *input TSRMLS_DC) {",
          "1918:  phpdbg_init_lexer(stack, input TSRMLS_CC);",
          "1921: }",
          "",
          "[Removed Lines]",
          "1920:  return yyparse();",
          "",
          "[Added Lines]",
          "1906: #ifdef ZTS",
          "1907:  return yyparse(TSRMLS_C);",
          "1908: #else",
          "1909:  return yyparse(NULL);",
          "1910: #endif",
          "",
          "---------------"
        ],
        "phpdbg_parser.h||phpdbg_parser.h": [
          "File: phpdbg_parser.h -> phpdbg_parser.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:    This program is free software: you can redistribute it and/or modify",
          "8:    it under the terms of the GNU General Public License as published by",
          "",
          "[Removed Lines]",
          "5:       Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.",
          "",
          "[Added Lines]",
          "5:       Copyright (C) 1984, 1989-1990, 2000-2012 Free Software Foundation, Inc.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:    This special exception was added by the Free Software Foundation in",
          "38: #include \"phpdbg.h\"",
          "39: #ifndef YY_TYPEDEF_YY_SCANNER_T",
          "",
          "[Removed Lines]",
          "36: #line 31 \"/home/pi/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "[Added Lines]",
          "33: #ifndef PHPDBG_SAPI_PHPDBG_PHPDBG_PARSER_H",
          "34: # define PHPDBG_SAPI_PHPDBG_PHPDBG_PARSER_H",
          "36: #ifndef YYDEBUG",
          "37: # define YYDEBUG 0",
          "38: #endif",
          "39: #if YYDEBUG",
          "40: extern int phpdbg_debug;",
          "41: #endif",
          "44: #line 31 \"/var/root/php-src/sapi/phpdbg/phpdbg_parser.y\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "42: #endif",
          "50: #ifndef YYTOKENTYPE",
          "",
          "[Removed Lines]",
          "47: #line 48 \"sapi/phpdbg/phpdbg_parser.h\"",
          "",
          "[Added Lines]",
          "54: #line 55 \"sapi/phpdbg/phpdbg_parser.h\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "103: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112: #ifdef YYPARSE_PARAM",
          "113: #if defined __STDC__ || defined __cplusplus",
          "114: int phpdbg_parse (void *YYPARSE_PARAM);",
          "115: #else",
          "116: int phpdbg_parse ();",
          "117: #endif",
          "119: #if defined __STDC__ || defined __cplusplus",
          "120: int phpdbg_parse (void *tsrm_ls);",
          "121: #else",
          "122: int phpdbg_parse ();",
          "123: #endif",
          "",
          "---------------"
        ],
        "phpdbg_parser.y||phpdbg_parser.y": [
          "File: phpdbg_parser.y -> phpdbg_parser.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include \"phpdbg_lexer.h\"",
          "21: #undef yyerror",
          "24: ZEND_EXTERN_MODULE_GLOBALS(phpdbg);",
          "",
          "[Removed Lines]",
          "22: static int yyerror(const char *msg);",
          "",
          "[Added Lines]",
          "22: static int yyerror(void ***tsrm_ls, const char *msg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36: #endif",
          "37: }",
          "39: %output  \"sapi/phpdbg/phpdbg_parser.c\"",
          "40: %defines \"sapi/phpdbg/phpdbg_parser.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: %parse-param { void *tsrm_ls }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "158: %%",
          "163:  phpdbg_error(\"Parse Error: %s\", msg);",
          "165:  {",
          "",
          "[Removed Lines]",
          "160: static int yyerror(const char *msg) {",
          "161:  TSRMLS_FETCH();",
          "",
          "[Added Lines]",
          "162: static int yyerror(void ***tsrm_ls, const char *msg) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "176: int phpdbg_do_parse(phpdbg_param_t *stack, char *input TSRMLS_DC) {",
          "177:  phpdbg_init_lexer(stack, input TSRMLS_CC);",
          "180: }",
          "",
          "[Removed Lines]",
          "179:  return yyparse();",
          "",
          "[Added Lines]",
          "179: #ifdef ZTS",
          "180:  return yyparse(TSRMLS_C);",
          "181: #else",
          "182:  return yyparse(NULL);",
          "183: #endif",
          "",
          "---------------"
        ],
        "phpdbg_prompt.c||phpdbg_prompt.c": [
          "File: phpdbg_prompt.c -> phpdbg_prompt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: #include \"phpdbg_lexer.h\"",
          "39: #include \"phpdbg_parser.h\"",
          "44: const phpdbg_command_t phpdbg_prompt_commands[] = {",
          "45:  PHPDBG_COMMAND_D(exec,    \"set execution context\",                    'e', NULL, \"s\"),",
          "",
          "[Removed Lines]",
          "41: int yyparse(phpdbg_param_t *stack, yyscan_t scanner);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "252:       phpdbg_init_param(&stack, STACK_PARAM);",
          "255:        switch (phpdbg_stack_execute(&stack, &why TSRMLS_CC)) {",
          "256:         case FAILURE:",
          "",
          "[Removed Lines]",
          "254:       if (phpdbg_do_parse(&stack, input) <= 0) {",
          "",
          "[Added Lines]",
          "252:       if (phpdbg_do_parse(&stack, input TSRMLS_CC) <= 0) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1003:   do {",
          "1004:    phpdbg_init_param(&stack, STACK_PARAM);",
          "1007:     switch (ret = phpdbg_stack_execute(&stack, &why TSRMLS_CC)) {",
          "1008:      case FAILURE:",
          "1009:       if (!(PHPDBG_G(flags) & PHPDBG_IS_QUITTING)) {",
          "",
          "[Removed Lines]",
          "1006:    if (phpdbg_do_parse(&stack, input) <= 0) {",
          "",
          "[Added Lines]",
          "1004:    if (phpdbg_do_parse(&stack, input TSRMLS_CC) <= 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f201bf23052738ee096cf76367609a37df1fe326",
      "candidate_info": {
        "commit_hash": "f201bf23052738ee096cf76367609a37df1fe326",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/f201bf23052738ee096cf76367609a37df1fe326",
        "files": [
          "ext/mysqli/tests/mysqli_change_user_new.phpt"
        ],
        "message": "Fix another problem with MySQL 5.7",
        "before_after_code_files": [
          "ext/mysqli/tests/mysqli_change_user_new.phpt||ext/mysqli/tests/mysqli_change_user_new.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/mysqli/tests/mysqli_change_user_new.phpt||ext/mysqli/tests/mysqli_change_user_new.phpt": [
          "File: ext/mysqli/tests/mysqli_change_user_new.phpt -> ext/mysqli/tests/mysqli_change_user_new.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: Warning: mysqli_query(): Error reading result set's header in %s on line %d",
          "42: [003] [2006] MySQL server has gone away",
          "",
          "[Removed Lines]",
          "44: Fatal error: Call to a member function fetch_assoc() on a non-object in %s on line %d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "78c3ca105b0e4d7429f5381a667973810b7be86e",
      "candidate_info": {
        "commit_hash": "78c3ca105b0e4d7429f5381a667973810b7be86e",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/78c3ca105b0e4d7429f5381a667973810b7be86e",
        "files": [
          "ext/standard/tests/serialize/bug67072_2.phpt"
        ],
        "message": "remove bug67072_2 test for 5.6+ since we'd have cleaner solution",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug67072_2.phpt||ext/standard/tests/serialize/bug67072_2.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug67072_2.phpt||ext/standard/tests/serialize/bug67072_2.phpt": [
          "File: ext/standard/tests/serialize/bug67072_2.phpt -> ext/standard/tests/serialize/bug67072_2.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d1885342c1504a8697b41e075844b082f7b335f",
      "candidate_info": {
        "commit_hash": "6d1885342c1504a8697b41e075844b082f7b335f",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/6d1885342c1504a8697b41e075844b082f7b335f",
        "files": [
          "NEWS",
          "Zend/zend_execute.c"
        ],
        "message": "Fix bug #67392: dtrace breaks argument unpack",
        "before_after_code_files": [
          "Zend/zend_execute.c||Zend/zend_execute.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/php/php-src/pull/745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Zend/zend_execute.c||Zend/zend_execute.c": [
          "File: Zend/zend_execute.c -> Zend/zend_execute.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1490:  } else {",
          "1491:   zval **return_value_ptr = &EX_TMP_VAR(execute_data_ptr, execute_data_ptr->opline->result.var)->var.ptr;",
          "1492:   execute_data_ptr->function_state.function->internal_function.handler(",
          "1494:    execute_data_ptr->object, return_value_used TSRMLS_CC",
          "1495:   );",
          "1496:  }",
          "",
          "[Removed Lines]",
          "1493:    execute_data_ptr->opline->extended_value, *return_value_ptr, return_value_ptr,",
          "",
          "[Added Lines]",
          "1493:    execute_data_ptr->opline->extended_value + execute_data_ptr->call->num_additional_args,",
          "",
          "---------------"
        ]
      }
    }
  ]
}