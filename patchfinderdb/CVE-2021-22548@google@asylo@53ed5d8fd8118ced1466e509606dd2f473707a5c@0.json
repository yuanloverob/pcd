{
  "cve_id": "CVE-2021-22548",
  "cve_desc": "An attacker can change the pointer to untrusted memory to point to trusted memory region which causes copying trusted memory to trusted memory, if the latter is later copied out, it allows for reading of memory regions from the trusted region. It is recommended to update past 0.6.2 or git commit https://github.com/google/asylo/commit/53ed5d8fd8118ced1466e509606dd2f473707a5c",
  "repo": "google/asylo",
  "patch_hash": "53ed5d8fd8118ced1466e509606dd2f473707a5c",
  "patch_info": {
    "commit_hash": "53ed5d8fd8118ced1466e509606dd2f473707a5c",
    "repo": "google/asylo",
    "commit_url": "https://github.com/google/asylo/commit/53ed5d8fd8118ced1466e509606dd2f473707a5c",
    "files": [
      "asylo/platform/primitives/sgx/trusted_sgx.cc"
    ],
    "message": "Store untrusted output pointer in enclave\n\nValidate the pointer after it's stored in enclave to avoid unexpected\nmodifications after it's validated.\n\nPiperOrigin-RevId: 365648810\nChange-Id: I3079128040c142e86bab8255b07d03562a6fcb61",
    "before_after_code_files": [
      "asylo/platform/primitives/sgx/trusted_sgx.cc||asylo/platform/primitives/sgx/trusted_sgx.cc"
    ]
  },
  "patch_diff": {
    "asylo/platform/primitives/sgx/trusted_sgx.cc||asylo/platform/primitives/sgx/trusted_sgx.cc": [
      "File: asylo/platform/primitives/sgx/trusted_sgx.cc -> asylo/platform/primitives/sgx/trusted_sgx.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "306:   if (sgx_params->input) {",
      "307:     untrusted_cache->Free(const_cast<void *>(sgx_params->input));",
      "308:   }",
      "311:     TrustedPrimitives::BestEffortAbort(",
      "312:         \"UntrustedCall: sgx_param output should be in untrusted memory\");",
      "313:   }",
      "314:   if (sgx_params->output) {",
      "318:     TrustedPrimitives::UntrustedLocalFree(sgx_params->output);",
      "319:   }",
      "320:   return PrimitiveStatus::OkStatus();",
      "",
      "[Removed Lines]",
      "309:   if (!TrustedPrimitives::IsOutsideEnclave(sgx_params->output,",
      "310:                                            sgx_params->output_size)) {",
      "317:     output->Deserialize(sgx_params->output, sgx_params->output_size);",
      "",
      "[Added Lines]",
      "309:   const void *output_pointer = sgx_params->output;",
      "310:   uint64_t output_size = sgx_params->output_size;",
      "311:   if (!TrustedPrimitives::IsOutsideEnclave(output_pointer, output_size)) {",
      "318:     output->Deserialize(output_pointer, output_size);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "83036fd841d33baa7e039f842d131aa7881fdcc2",
      "candidate_info": {
        "commit_hash": "83036fd841d33baa7e039f842d131aa7881fdcc2",
        "repo": "google/asylo",
        "commit_url": "https://github.com/google/asylo/commit/83036fd841d33baa7e039f842d131aa7881fdcc2",
        "files": [
          "asylo/platform/primitives/sgx/trusted_sgx.cc"
        ],
        "message": "Verify UntrustedCall output is outside enclave\n\nPiperOrigin-RevId: 333781703\nChange-Id: I9df55c04dc8b04f4bf0bda8e68cc32bca81b933a",
        "before_after_code_files": [
          "asylo/platform/primitives/sgx/trusted_sgx.cc||asylo/platform/primitives/sgx/trusted_sgx.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "asylo/platform/primitives/sgx/trusted_sgx.cc||asylo/platform/primitives/sgx/trusted_sgx.cc"
          ],
          "candidate": [
            "asylo/platform/primitives/sgx/trusted_sgx.cc||asylo/platform/primitives/sgx/trusted_sgx.cc"
          ]
        }
      },
      "candidate_diff": {
        "asylo/platform/primitives/sgx/trusted_sgx.cc||asylo/platform/primitives/sgx/trusted_sgx.cc": [
          "File: asylo/platform/primitives/sgx/trusted_sgx.cc -> asylo/platform/primitives/sgx/trusted_sgx.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "288:   if (sgx_params->input) {",
          "289:     untrusted_cache->Free(const_cast<void *>(sgx_params->input));",
          "290:   }",
          "291:   if (sgx_params->output) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "291:   if (!TrustedPrimitives::IsOutsideEnclave(sgx_params->output,",
          "292:                                            sgx_params->output_size)) {",
          "293:     TrustedPrimitives::BestEffortAbort(",
          "294:         \"UntrustedCall: sgx_param output should be in untrusted memory\");",
          "295:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}