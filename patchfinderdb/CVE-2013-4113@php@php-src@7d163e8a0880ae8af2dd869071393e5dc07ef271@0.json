{
  "cve_id": "CVE-2013-4113",
  "cve_desc": "ext/xml/xml.c in PHP before 5.3.27 does not properly consider parsing depth, which allows remote attackers to cause a denial of service (heap memory corruption) or possibly have unspecified other impact via a crafted document that is processed by the xml_parse_into_struct function.",
  "repo": "php/php-src",
  "patch_hash": "7d163e8a0880ae8af2dd869071393e5dc07ef271",
  "patch_info": {
    "commit_hash": "7d163e8a0880ae8af2dd869071393e5dc07ef271",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/7d163e8a0880ae8af2dd869071393e5dc07ef271",
    "files": [
      "ext/xml/xml.c"
    ],
    "message": "truncate results at depth of 255 to prevent corruption",
    "before_after_code_files": [
      "ext/xml/xml.c||ext/xml/xml.c"
    ]
  },
  "patch_diff": {
    "ext/xml/xml.c||ext/xml/xml.c": [
      "File: ext/xml/xml.c -> ext/xml/xml.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "427:  }",
      "428:  if (parser->ltags) {",
      "429:   int inx;",
      "431:    efree(parser->ltags[ inx ]);",
      "432:   efree(parser->ltags);",
      "433:  }",
      "",
      "[Removed Lines]",
      "430:   for (inx = 0; inx < parser->level; inx++)",
      "",
      "[Added Lines]",
      "430:   for (inx = 0; ((inx < parser->level) && (inx < XML_MAXLEVEL)); inx++)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "905:   }",
      "907:   if (parser->data) {",
      "947:   }",
      "949:   efree(tag_name);",
      "",
      "[Removed Lines]",
      "908:    zval *tag, *atr;",
      "909:    int atcnt = 0;",
      "911:    MAKE_STD_ZVAL(tag);",
      "912:    MAKE_STD_ZVAL(atr);",
      "914:    array_init(tag);",
      "915:    array_init(atr);",
      "917:    _xml_add_to_info(parser,((char *) tag_name) + parser->toffset);",
      "920:    add_assoc_string(tag,\"type\",\"open\",1);",
      "921:    add_assoc_long(tag,\"level\",parser->level);",
      "923:    parser->ltags[parser->level-1] = estrdup(tag_name);",
      "924:    parser->lastwasopen = 1;",
      "926:    attributes = (const XML_Char **) attrs;",
      "928:    while (attributes && *attributes) {",
      "929:     att = _xml_decode_tag(parser, attributes[0]);",
      "930:     val = xml_utf8_decode(attributes[1], strlen(attributes[1]), &val_len, parser->target_encoding);",
      "932:     add_assoc_stringl(atr,att,val,val_len,0);",
      "934:     atcnt++;",
      "935:     attributes += 2;",
      "937:     efree(att);",
      "938:    }",
      "940:    if (atcnt) {",
      "941:     zend_hash_add(Z_ARRVAL_P(tag),\"attributes\",sizeof(\"attributes\"),&atr,sizeof(zval*),NULL);",
      "942:    } else {",
      "943:     zval_ptr_dtor(&atr);",
      "944:    }",
      "946:    zend_hash_next_index_insert(Z_ARRVAL_P(parser->data),&tag,sizeof(zval*),(void *) &parser->ctag);",
      "",
      "[Added Lines]",
      "908:    if (parser->level <= XML_MAXLEVEL)  {",
      "909:     zval *tag, *atr;",
      "910:     int atcnt = 0;",
      "912:     MAKE_STD_ZVAL(tag);",
      "913:     MAKE_STD_ZVAL(atr);",
      "915:     array_init(tag);",
      "916:     array_init(atr);",
      "918:     _xml_add_to_info(parser,((char *) tag_name) + parser->toffset);",
      "921:     add_assoc_string(tag,\"type\",\"open\",1);",
      "922:     add_assoc_long(tag,\"level\",parser->level);",
      "924:     parser->ltags[parser->level-1] = estrdup(tag_name);",
      "925:     parser->lastwasopen = 1;",
      "927:     attributes = (const XML_Char **) attrs;",
      "929:     while (attributes && *attributes) {",
      "930:      att = _xml_decode_tag(parser, attributes[0]);",
      "931:      val = xml_utf8_decode(attributes[1], strlen(attributes[1]), &val_len, parser->target_encoding);",
      "933:      add_assoc_stringl(atr,att,val,val_len,0);",
      "935:      atcnt++;",
      "936:      attributes += 2;",
      "938:      efree(att);",
      "939:     }",
      "941:     if (atcnt) {",
      "942:      zend_hash_add(Z_ARRVAL_P(tag),\"attributes\",sizeof(\"attributes\"),&atr,sizeof(zval*),NULL);",
      "943:     } else {",
      "944:      zval_ptr_dtor(&atr);",
      "945:     }",
      "947:     zend_hash_next_index_insert(Z_ARRVAL_P(parser->data),&tag,sizeof(zval*),(void *) &parser->ctag);",
      "948:    } else if (parser->level == (XML_MAXLEVEL + 1)) {",
      "949:     TSRMLS_FETCH();",
      "950:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Maximum depth exceeded - Results truncated\");",
      "951:    }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "996:   efree(tag_name);",
      "999:    efree(parser->ltags[parser->level-1]);",
      "1000:   }",
      "",
      "[Removed Lines]",
      "998:   if (parser->ltags) {",
      "",
      "[Added Lines]",
      "1003:   if ((parser->ltags) && (parser->level <= XML_MAXLEVEL)) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1079:       }",
      "1080:      }",
      "1094:     }",
      "1095:    } else {",
      "1096:     efree(decoded_value);",
      "",
      "[Removed Lines]",
      "1082:      MAKE_STD_ZVAL(tag);",
      "1084:      array_init(tag);",
      "1086:      _xml_add_to_info(parser,parser->ltags[parser->level-1] + parser->toffset);",
      "1088:      add_assoc_string(tag,\"tag\",parser->ltags[parser->level-1] + parser->toffset,1);",
      "1089:      add_assoc_string(tag,\"value\",decoded_value,0);",
      "1090:      add_assoc_string(tag,\"type\",\"cdata\",1);",
      "1091:      add_assoc_long(tag,\"level\",parser->level);",
      "1093:      zend_hash_next_index_insert(Z_ARRVAL_P(parser->data),&tag,sizeof(zval*),NULL);",
      "",
      "[Added Lines]",
      "1087:      if (parser->level <= XML_MAXLEVEL) {",
      "1088:       MAKE_STD_ZVAL(tag);",
      "1090:       array_init(tag);",
      "1092:       _xml_add_to_info(parser,parser->ltags[parser->level-1] + parser->toffset);",
      "1094:       add_assoc_string(tag,\"tag\",parser->ltags[parser->level-1] + parser->toffset,1);",
      "1095:       add_assoc_string(tag,\"value\",decoded_value,0);",
      "1096:       add_assoc_string(tag,\"type\",\"cdata\",1);",
      "1097:       add_assoc_long(tag,\"level\",parser->level);",
      "1099:       zend_hash_next_index_insert(Z_ARRVAL_P(parser->data),&tag,sizeof(zval*),NULL);",
      "1100:      } else if (parser->level == (XML_MAXLEVEL + 1)) {",
      "1101:       TSRMLS_FETCH();",
      "1102:       php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Maximum depth exceeded - Results truncated\");",
      "1103:      }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5984f95d8f8d75007fff4963d67ebe65e572efea",
      "candidate_info": {
        "commit_hash": "5984f95d8f8d75007fff4963d67ebe65e572efea",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/5984f95d8f8d75007fff4963d67ebe65e572efea",
        "files": [
          "ext/xml/php_xml.h",
          "ext/xml/xml.c"
        ],
        "message": "Refactor XML (incompleted)",
        "before_after_code_files": [
          "ext/xml/php_xml.h||ext/xml/php_xml.h",
          "ext/xml/xml.c||ext/xml/xml.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/xml/xml.c||ext/xml/xml.c"
          ],
          "candidate": [
            "ext/xml/xml.c||ext/xml/xml.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/xml/php_xml.h||ext/xml/php_xml.h": [
          "File: ext/xml/php_xml.h -> ext/xml/php_xml.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: ZEND_END_MODULE_GLOBALS(xml)",
          "46: typedef struct {",
          "48:  int case_folding;",
          "49:  XML_Parser parser;",
          "50:  XML_Char *target_encoding;",
          "64:  zend_function *startElementPtr;",
          "65:  zend_function *endElementPtr;",
          "",
          "[Removed Lines]",
          "47:  int index;",
          "52:  zval *startElementHandler;",
          "53:  zval *endElementHandler;",
          "54:  zval *characterDataHandler;",
          "55:  zval *processingInstructionHandler;",
          "56:  zval *defaultHandler;",
          "57:  zval *unparsedEntityDeclHandler;",
          "58:  zval *notationDeclHandler;",
          "59:  zval *externalEntityRefHandler;",
          "60:  zval *unknownEncodingHandler;",
          "61:  zval *startNamespaceDeclHandler;",
          "62:  zval *endNamespaceDeclHandler;",
          "",
          "[Added Lines]",
          "51:  zval index;",
          "52:  zval startElementHandler;",
          "53:  zval endElementHandler;",
          "54:  zval characterDataHandler;",
          "55:  zval processingInstructionHandler;",
          "56:  zval defaultHandler;",
          "57:  zval unparsedEntityDeclHandler;",
          "58:  zval notationDeclHandler;",
          "59:  zval externalEntityRefHandler;",
          "60:  zval unknownEncodingHandler;",
          "61:  zval startNamespaceDeclHandler;",
          "62:  zval endNamespaceDeclHandler;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:  zend_function *startNamespaceDeclPtr;",
          "74:  zend_function *endNamespaceDeclPtr;",
          "80:  int level;",
          "81:  int toffset;",
          "82:  int curtag;",
          "84:  char **ltags;",
          "85:  int lastwasopen;",
          "86:  int skipwhite;",
          "",
          "[Removed Lines]",
          "76:  zval *object;",
          "78:  zval *data;",
          "79:  zval *info;",
          "83:  zval **ctag;",
          "",
          "[Added Lines]",
          "76:  zval object;",
          "78:  zval data;",
          "79:  zval info;",
          "83:  zval *ctag;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "133: PHP_FUNCTION(utf8_decode);",
          "134: PHP_FUNCTION(xml_parse_into_struct);",
          "",
          "[Removed Lines]",
          "136: PHPAPI char *_xml_zval_strdup(zval *val);",
          "137: PHPAPI char *xml_utf8_decode(const XML_Char *, int, int *, const XML_Char *);",
          "138: PHPAPI char *xml_utf8_encode(const char *s, int len, int *newlen, const XML_Char *encoding);",
          "",
          "[Added Lines]",
          "136: PHPAPI char *_xml_zval_strdup(zval *);",
          "137: PHPAPI zend_string *xml_utf8_decode(const XML_Char *, int, const XML_Char *);",
          "138: PHPAPI zend_string *xml_utf8_encode(const char *, int, const XML_Char *);",
          "",
          "---------------"
        ],
        "ext/xml/xml.c||ext/xml/xml.c": [
          "File: ext/xml/xml.c -> ext/xml/xml.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71: PHP_MINFO_FUNCTION(xml);",
          "72: static PHP_GINIT_FUNCTION(xml);",
          "76: inline static unsigned short xml_encode_iso_8859_1(unsigned char);",
          "77: inline static char xml_decode_iso_8859_1(unsigned short);",
          "78: inline static unsigned short xml_encode_us_ascii(unsigned char);",
          "79: inline static char xml_decode_us_ascii(unsigned short);",
          "82: static int _xml_xmlcharlen(const XML_Char *);",
          "83: static void _xml_add_to_info(xml_parser *parser,char *name);",
          "86: void _xml_startElementHandler(void *, const XML_Char *, const XML_Char **);",
          "87: void _xml_endElementHandler(void *, const XML_Char *);",
          "",
          "[Removed Lines]",
          "74: static void xml_parser_dtor(zend_rsrc_list_entry *rsrc TSRMLS_DC);",
          "75: static void xml_set_handler(zval **, zval **);",
          "80: static zval *xml_call_handler(xml_parser *, zval *, zend_function *, int, zval **);",
          "81: static zval *_xml_xmlchar_zval(const XML_Char *, int, const XML_Char *);",
          "84: inline static char *_xml_decode_tag(xml_parser *parser, const char *tag);",
          "",
          "[Added Lines]",
          "74: static void xml_parser_dtor(zend_resource *rsrc TSRMLS_DC);",
          "75: static void xml_set_handler(zval *, zval *);",
          "80: static void xml_call_handler(xml_parser *, zval *, zend_function *, int, zval *, zval *);",
          "81: static void _xml_xmlchar_zval(const XML_Char *, int, const XML_Char *, zval *);",
          "84: inline static zend_string *_xml_decode_tag(xml_parser *parser, const char *tag);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "404: {",
          "408:  if (s == NULL) {",
          "409:   ZVAL_FALSE(ret);",
          "411:  }",
          "412:  if (len == 0) {",
          "413:   len = _xml_xmlcharlen(s);",
          "414:  }",
          "418: }",
          "423: {",
          "424:  xml_parser *parser = (xml_parser *)rsrc->ptr;",
          "",
          "[Removed Lines]",
          "376: static zval *_xml_resource_zval(long value)",
          "377: {",
          "378:  zval *ret;",
          "379:  TSRMLS_FETCH();",
          "381:  MAKE_STD_ZVAL(ret);",
          "383:  Z_TYPE_P(ret) = IS_RESOURCE;",
          "384:  Z_LVAL_P(ret) = value;",
          "386:  zend_list_addref(value);",
          "388:  return ret;",
          "389: }",
          "391: static zval *_xml_string_zval(const char *str)",
          "392: {",
          "393:  zval *ret;",
          "394:  int len = strlen(str);",
          "395:  MAKE_STD_ZVAL(ret);",
          "397:  Z_TYPE_P(ret) = IS_STRING;",
          "398:  Z_STRLEN_P(ret) = len;",
          "399:  Z_STRVAL_P(ret) = estrndup(str, len);",
          "400:  return ret;",
          "401: }",
          "403: static zval *_xml_xmlchar_zval(const XML_Char *s, int len, const XML_Char *encoding)",
          "405:  zval *ret;",
          "406:  MAKE_STD_ZVAL(ret);",
          "410:   return ret;",
          "415:  Z_TYPE_P(ret) = IS_STRING;",
          "416:  Z_STRVAL_P(ret) = xml_utf8_decode(s, len, &Z_STRLEN_P(ret), encoding);",
          "417:  return ret;",
          "422: static void xml_parser_dtor(zend_rsrc_list_entry *rsrc TSRMLS_DC)",
          "",
          "[Added Lines]",
          "377: static void _xml_xmlchar_zval(const XML_Char *s, int len, const XML_Char *encoding, zval *ret)",
          "385:  ZVAL_STRINGL(ret, (char *)s, len);",
          "390: static void xml_parser_dtor(zend_resource *rsrc TSRMLS_DC)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "432:    efree(parser->ltags[ inx ]);",
          "433:   efree(parser->ltags);",
          "434:  }",
          "436:   zval_ptr_dtor(&parser->startElementHandler);",
          "437:  }",
          "439:   zval_ptr_dtor(&parser->endElementHandler);",
          "440:  }",
          "442:   zval_ptr_dtor(&parser->characterDataHandler);",
          "443:  }",
          "445:   zval_ptr_dtor(&parser->processingInstructionHandler);",
          "446:  }",
          "448:   zval_ptr_dtor(&parser->defaultHandler);",
          "449:  }",
          "451:   zval_ptr_dtor(&parser->unparsedEntityDeclHandler);",
          "452:  }",
          "454:   zval_ptr_dtor(&parser->notationDeclHandler);",
          "455:  }",
          "457:   zval_ptr_dtor(&parser->externalEntityRefHandler);",
          "458:  }",
          "460:   zval_ptr_dtor(&parser->unknownEncodingHandler);",
          "461:  }",
          "463:   zval_ptr_dtor(&parser->startNamespaceDeclHandler);",
          "464:  }",
          "466:   zval_ptr_dtor(&parser->endNamespaceDeclHandler);",
          "467:  }",
          "468:  if (parser->baseURI) {",
          "469:   efree(parser->baseURI);",
          "470:  }",
          "472:   zval_ptr_dtor(&parser->object);",
          "473:  }",
          "",
          "[Removed Lines]",
          "435:  if (parser->startElementHandler) {",
          "438:  if (parser->endElementHandler) {",
          "441:  if (parser->characterDataHandler) {",
          "444:  if (parser->processingInstructionHandler) {",
          "447:  if (parser->defaultHandler) {",
          "450:  if (parser->unparsedEntityDeclHandler) {",
          "453:  if (parser->notationDeclHandler) {",
          "456:  if (parser->externalEntityRefHandler) {",
          "459:  if (parser->unknownEncodingHandler) {",
          "462:  if (parser->startNamespaceDeclHandler) {",
          "465:  if (parser->endNamespaceDeclHandler) {",
          "471:  if (parser->object) {",
          "",
          "[Added Lines]",
          "403:  if (!ZVAL_IS_UNDEF(&parser->startElementHandler)) {",
          "406:  if (!ZVAL_IS_UNDEF(&parser->endElementHandler)) {",
          "409:  if (!ZVAL_IS_UNDEF(&parser->characterDataHandler)) {",
          "412:  if (!ZVAL_IS_UNDEF(&parser->processingInstructionHandler)) {",
          "415:  if (!ZVAL_IS_UNDEF(&parser->defaultHandler)) {",
          "418:  if (!ZVAL_IS_UNDEF(&parser->unparsedEntityDeclHandler)) {",
          "421:  if (!ZVAL_IS_UNDEF(&parser->notationDeclHandler)) {",
          "424:  if (!ZVAL_IS_UNDEF(&parser->externalEntityRefHandler)) {",
          "427:  if (!ZVAL_IS_UNDEF(&parser->unknownEncodingHandler)) {",
          "430:  if (!ZVAL_IS_UNDEF(&parser->startNamespaceDeclHandler)) {",
          "433:  if (!ZVAL_IS_UNDEF(&parser->endNamespaceDeclHandler)) {",
          "439:  if (!ZVAL_IS_UNDEF(&parser->object)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "481: {",
          "484:   zval_ptr_dtor(handler);",
          "485:  }",
          "490:   convert_to_string_ex(data);",
          "493:    return;",
          "494:   }",
          "495:  }",
          "500: }",
          "505: {",
          "506:  int i;",
          "507:  TSRMLS_FETCH();",
          "509:  if (parser && handler && !EG(exception)) {",
          "512:   int result;",
          "513:   zend_fcall_info fci;",
          "520:   fci.size = sizeof(fci);",
          "521:   fci.function_table = EG(function_table);",
          "523:   fci.symbol_table = NULL;",
          "526:   fci.param_count = argc;",
          "528:   fci.no_separation = 0;",
          "531:   result = zend_call_function(&fci, NULL TSRMLS_CC);",
          "532:   if (result == FAILURE) {",
          "536:    if (Z_TYPE_P(handler) == IS_STRING) {",
          "537:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unable to call handler %s()\", Z_STRVAL_P(handler));",
          "543:    } else",
          "544:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unable to call handler\");",
          "545:   }",
          "562:  }",
          "563: }",
          "",
          "[Removed Lines]",
          "480: static void xml_set_handler(zval **handler, zval **data)",
          "483:  if (*handler) {",
          "488:  if (Z_TYPE_PP(data) != IS_ARRAY && Z_TYPE_PP(data) != IS_OBJECT) {",
          "491:   if (Z_STRLEN_PP(data) == 0) {",
          "497:  zval_add_ref(data);",
          "504: static zval *xml_call_handler(xml_parser *parser, zval *handler, zend_function *function_ptr, int argc, zval **argv)",
          "510:   zval ***args;",
          "511:   zval *retval;",
          "515:   args = safe_emalloc(sizeof(zval **), argc, 0);",
          "516:   for (i = 0; i < argc; i++) {",
          "517:    args[i] = &argv[i];",
          "518:   }",
          "522:   fci.function_name = handler;",
          "524:   fci.object_ptr = parser->object;",
          "525:   fci.retval_ptr_ptr = &retval;",
          "527:   fci.params = args;",
          "533:    zval **method;",
          "534:    zval **obj;",
          "538:    } else if (zend_hash_index_find(Z_ARRVAL_P(handler), 0, (void **) &obj) == SUCCESS &&",
          "539:         zend_hash_index_find(Z_ARRVAL_P(handler), 1, (void **) &method) == SUCCESS &&",
          "540:         Z_TYPE_PP(obj) == IS_OBJECT &&",
          "541:         Z_TYPE_PP(method) == IS_STRING) {",
          "542:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unable to call handler %s::%s()\", Z_OBJCE_PP(obj)->name, Z_STRVAL_PP(method));",
          "547:   for (i = 0; i < argc; i++) {",
          "548:    zval_ptr_dtor(args[i]);",
          "549:   }",
          "550:   efree(args);",
          "552:   if (result == FAILURE) {",
          "553:    return NULL;",
          "554:   } else {",
          "555:    return EG(exception) ? NULL : retval;",
          "556:   }",
          "557:  } else {",
          "558:   for (i = 0; i < argc; i++) {",
          "559:    zval_ptr_dtor(&argv[i]);",
          "560:   }",
          "561:   return NULL;",
          "",
          "[Added Lines]",
          "448: static void xml_set_handler(zval *handler, zval *data)",
          "451:  if (handler) {",
          "456:  if (Z_TYPE_P(data) != IS_ARRAY && Z_TYPE_P(data) != IS_OBJECT) {",
          "458:   if (Z_STRLEN_P(data) == 0) {",
          "459:    ZVAL_UNDEF(handler);",
          "464:  ZVAL_COPY(handler, data);",
          "469: static void xml_call_handler(xml_parser *parser, zval *handler, zend_function *function_ptr, int argc, zval *argv, zval *retval)",
          "480:   ZVAL_COPY_VALUE(&fci.function_name, handler);",
          "482:   fci.object = Z_OBJ(parser->object);",
          "483:   fci.retval = retval;",
          "485:   fci.params = argv;",
          "491:    zval *method;",
          "492:    zval *obj;",
          "496:    } else if ((obj = zend_hash_index_find(Z_ARRVAL_P(handler), 0)) != NULL &&",
          "497:         (method = zend_hash_index_find(Z_ARRVAL_P(handler), 1)) != NULL &&",
          "498:         Z_TYPE_P(obj) == IS_OBJECT &&",
          "499:         Z_TYPE_P(method) == IS_STRING) {",
          "500:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unable to call handler %s::%s()\", Z_OBJCE_P(obj)->name->val, Z_STRVAL_P(method));",
          "504:  }",
          "505:  for (i = 0; i < argc; i++) {",
          "506:   zval_ptr_dtor(&argv[i]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "597:  xml_encoding *enc = &xml_encodings[0];",
          "599:  while (enc && enc->name) {",
          "601:    return enc;",
          "602:   }",
          "603:   enc++;",
          "",
          "[Removed Lines]",
          "600:   if (strcasecmp(name, enc->name) == 0) {",
          "",
          "[Added Lines]",
          "545:   if (strcasecmp((char *)name, (char *)enc->name) == 0) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "606: }",
          "611: {",
          "612:  int pos = len;",
          "614:  unsigned int c;",
          "615:  unsigned short (*encoder)(unsigned char) = NULL;",
          "616:  xml_encoding *enc = xml_get_encoding(encoding);",
          "619:  if (enc) {",
          "620:   encoder = enc->encoding_function;",
          "621:  } else {",
          "",
          "[Removed Lines]",
          "610: PHPAPI char *xml_utf8_encode(const char *s, int len, int *newlen, const XML_Char *encoding)",
          "613:  char *newbuf;",
          "",
          "[Added Lines]",
          "555: PHPAPI zend_string *xml_utf8_encode(const char *s, int len, const XML_Char *encoding)",
          "558:  zend_string *str;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "625:  if (encoder == NULL) {",
          "633:  }",
          "637:  while (pos > 0) {",
          "638:   c = encoder ? encoder((unsigned char)(*s)) : (unsigned short)(*s);",
          "639:   if (c < 0x80) {",
          "641:   } else if (c < 0x800) {",
          "644:   } else if (c < 0x10000) {",
          "648:   } else if (c < 0x200000) {",
          "653:   }",
          "654:   pos--;",
          "655:   s++;",
          "656:  }",
          "660: }",
          "665: {",
          "666:  size_t pos = 0;",
          "668:  unsigned int c;",
          "669:  char (*decoder)(unsigned short) = NULL;",
          "670:  xml_encoding *enc = xml_get_encoding(encoding);",
          "673:  if (enc) {",
          "674:   decoder = enc->decoding_function;",
          "675:  }",
          "676:  if (decoder == NULL) {",
          "684:  }",
          "686:  while (pos < (size_t)len) {",
          "687:   int status = FAILURE;",
          "688:   c = php_next_utf8_char((const unsigned char*)s, (size_t) len, &pos, &status);",
          "",
          "[Removed Lines]",
          "628:   newbuf = emalloc(len + 1);",
          "629:   memcpy(newbuf, s, len);",
          "631:   newbuf[*newlen] = '\\0';",
          "632:   return newbuf;",
          "636:  newbuf = safe_emalloc(len, 4, 1);",
          "640:    newbuf[(*newlen)++] = (char) c;",
          "642:    newbuf[(*newlen)++] = (0xc0 | (c >> 6));",
          "643:    newbuf[(*newlen)++] = (0x80 | (c & 0x3f));",
          "645:    newbuf[(*newlen)++] = (0xe0 | (c >> 12));",
          "646:    newbuf[(*newlen)++] = (0xc0 | ((c >> 6) & 0x3f));",
          "647:    newbuf[(*newlen)++] = (0x80 | (c & 0x3f));",
          "649:    newbuf[(*newlen)++] = (0xf0 | (c >> 18));",
          "650:    newbuf[(*newlen)++] = (0xe0 | ((c >> 12) & 0x3f));",
          "651:    newbuf[(*newlen)++] = (0xc0 | ((c >> 6) & 0x3f));",
          "652:    newbuf[(*newlen)++] = (0x80 | (c & 0x3f));",
          "657:  newbuf[*newlen] = 0;",
          "658:  newbuf = erealloc(newbuf, (*newlen)+1);",
          "659:  return newbuf;",
          "664: PHPAPI char *xml_utf8_decode(const XML_Char *s, int len, int *newlen, const XML_Char *encoding)",
          "667:  char *newbuf = emalloc(len + 1);",
          "680:   memcpy(newbuf, s, len);",
          "682:   newbuf[*newlen] = '\\0';",
          "683:   return newbuf;",
          "",
          "[Added Lines]",
          "572:   str = STR_INIT(s, len, 0);",
          "573:   return str;",
          "577:  str = STR_ALLOC(len * 4, 0);",
          "578:  str->len = 0;",
          "582:    str->val[str->len++] = (char) c;",
          "584:    str->val[str->len++] = (0xc0 | (c >> 6));",
          "585:    str->val[str->len++] = (0x80 | (c & 0x3f));",
          "587:    str->val[str->len++] = (0xe0 | (c >> 12));",
          "588:    str->val[str->len++] = (0xc0 | ((c >> 6) & 0x3f));",
          "589:    str->val[str->len++] = (0x80 | (c & 0x3f));",
          "591:    str->val[str->len++] = (0xf0 | (c >> 18));",
          "592:    str->val[str->len++] = (0xe0 | ((c >> 12) & 0x3f));",
          "593:    str->val[str->len++] = (0xc0 | ((c >> 6) & 0x3f));",
          "594:    str->val[str->len++] = (0x80 | (c & 0x3f));",
          "599:  str->val[str->len] = '\\0';",
          "600:  str = STR_REALLOC(str, str->len, 0);",
          "601:  return str;",
          "606: PHPAPI zend_string *xml_utf8_decode(const XML_Char *s, int len, const XML_Char *encoding)",
          "612:  zend_string *str;",
          "622:   str = STR_INIT((char *)s, len, 0);",
          "623:   return str;",
          "626:  str = STR_ALLOC(len, 0);",
          "627:  str->len = 0;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "691:    c = '?';",
          "692:   }",
          "696:  }",
          "699:  }",
          "702: }",
          "",
          "[Removed Lines]",
          "694:   newbuf[*newlen] = decoder ? decoder(c) : c;",
          "695:   ++*newlen;",
          "697:  if (*newlen < len) {",
          "698:   newbuf = erealloc(newbuf, *newlen + 1);",
          "700:  newbuf[*newlen] = '\\0';",
          "701:  return newbuf;",
          "",
          "[Added Lines]",
          "636:   str->val[str->len++] = decoder ? decoder(c) : c;",
          "638:  str->val[str->len] = '\\0';",
          "639:  if (str->len < len) {",
          "640:   str = STR_REALLOC(str, str->len, 0);",
          "643:  return str;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "728: }",
          "732: static void _xml_add_to_info(xml_parser *parser,char *name)",
          "733: {",
          "737:   return;",
          "738:  }",
          "746:  }",
          "750:  parser->curtag++;",
          "751: }",
          "756: {",
          "762:  if (parser->case_folding) {",
          "764:  }",
          "767: }",
          "",
          "[Removed Lines]",
          "734:  zval **element, *values;",
          "736:  if (! parser->info) {",
          "740:  if (zend_hash_find(Z_ARRVAL_P(parser->info),name,strlen(name) + 1,(void **) &element) == FAILURE) {",
          "741:   MAKE_STD_ZVAL(values);",
          "743:   array_init(values);",
          "745:   zend_hash_update(Z_ARRVAL_P(parser->info), name, strlen(name)+1, (void *) &values, sizeof(zval*), (void **) &element);",
          "748:  add_next_index_long(*element,parser->curtag);",
          "755: static char *_xml_decode_tag(xml_parser *parser, const char *tag)",
          "757:  char *newstr;",
          "758:  int out_len;",
          "760:  newstr = xml_utf8_decode(tag, strlen(tag), &out_len, parser->target_encoding);",
          "763:   php_strtoupper(newstr, out_len);",
          "766:  return newstr;",
          "",
          "[Added Lines]",
          "676:  zval *element;",
          "678:  if (ZVAL_IS_UNDEF(&parser->info)) {",
          "682:  if ((element = zend_hash_str_find(Z_ARRVAL(parser->info),name, strlen(name))) == NULL) {",
          "683:   zval values;",
          "684:   array_init(&values);",
          "685:   element = zend_hash_str_update(Z_ARRVAL(parser->info), name, strlen(name), &values);",
          "688:  add_next_index_long(element, parser->curtag);",
          "695: static zend_string *_xml_decode_tag(xml_parser *parser, const char *tag)",
          "697:  zend_string *str;",
          "699:  str = xml_utf8_decode((const XML_Char *)tag, strlen(tag), parser->target_encoding);",
          "702:   php_strtoupper(str->val, str->len);",
          "705:  return str;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "772: {",
          "773:  xml_parser *parser = (xml_parser *)userData;",
          "774:  const char **attrs = (const char **) attributes;",
          "780:  if (parser) {",
          "781:   parser->level++;",
          "791:    while (attributes && *attributes) {",
          "799:     attributes += 2;",
          "802:    }",
          "805:     zval_ptr_dtor(&retval);",
          "806:    }",
          "807:   }",
          "810:    if (parser->level <= XML_MAXLEVEL)  {",
          "812:     int atcnt = 0;",
          "827:     parser->lastwasopen = 1;",
          "829:     attributes = (const XML_Char **) attrs;",
          "831:     while (attributes && *attributes) {",
          "839:      atcnt++;",
          "840:      attributes += 2;",
          "843:     }",
          "845:     if (atcnt) {",
          "847:     } else {",
          "848:      zval_ptr_dtor(&atr);",
          "849:     }",
          "852:    } else if (parser->level == (XML_MAXLEVEL + 1)) {",
          "853:     TSRMLS_FETCH();",
          "854:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Maximum depth exceeded - Results truncated\");",
          "855:    }",
          "856:   }",
          "859:  }",
          "860: }",
          "",
          "[Removed Lines]",
          "775:  char *tag_name;",
          "776:  char *att, *val;",
          "777:  int val_len;",
          "778:  zval *retval, *args[3];",
          "783:   tag_name = _xml_decode_tag(parser, name);",
          "785:   if (parser->startElementHandler) {",
          "786:    args[0] = _xml_resource_zval(parser->index);",
          "787:    args[1] = _xml_string_zval(((char *) tag_name) + parser->toffset);",
          "788:    MAKE_STD_ZVAL(args[2]);",
          "789:    array_init(args[2]);",
          "792:     att = _xml_decode_tag(parser, attributes[0]);",
          "793:     val = xml_utf8_decode(attributes[1], strlen(attributes[1]), &val_len, parser->target_encoding);",
          "796:     add_assoc_stringl(args[2], att, val, val_len);",
          "797:     efree(val);",
          "801:     efree(att);",
          "804:    if ((retval = xml_call_handler(parser, parser->startElementHandler, parser->startElementPtr, 3, args))) {",
          "809:   if (parser->data) {",
          "811:     zval *tag, *atr;",
          "814:     MAKE_STD_ZVAL(tag);",
          "815:     MAKE_STD_ZVAL(atr);",
          "817:     array_init(tag);",
          "818:     array_init(atr);",
          "820:     _xml_add_to_info(parser,((char *) tag_name) + parser->toffset);",
          "823:     add_assoc_string(tag,\"type\",\"open\");",
          "824:     add_assoc_long(tag,\"level\",parser->level);",
          "826:     parser->ltags[parser->level-1] = estrdup(tag_name);",
          "832:      att = _xml_decode_tag(parser, attributes[0]);",
          "833:      val = xml_utf8_decode(attributes[1], strlen(attributes[1]), &val_len, parser->target_encoding);",
          "836:      add_assoc_stringl(atr,att,val,val_len);",
          "837:      efree(val);",
          "842:      efree(att);",
          "846:      zend_hash_add(Z_ARRVAL_P(tag),\"attributes\",sizeof(\"attributes\"),&atr,sizeof(zval*),NULL);",
          "851:     zend_hash_next_index_insert(Z_ARRVAL_P(parser->data),&tag,sizeof(zval*),(void *) &parser->ctag);",
          "858:   efree(tag_name);",
          "",
          "[Added Lines]",
          "714:  zend_string *att, *tag_name, *val;",
          "715:  zval retval, args[3];",
          "720:   tag_name = _xml_decode_tag(parser, (const char *)name);",
          "722:   if (!ZVAL_IS_UNDEF(&parser->startElementHandler)) {",
          "723:    ZVAL_COPY(&args[0], &parser->index);",
          "724:    ZVAL_STRING(&args[1], tag_name->val + parser->toffset);",
          "725:    array_init(&args[2]);",
          "728:     att = _xml_decode_tag(parser, (const char *)attributes[0]);",
          "729:     val = xml_utf8_decode(attributes[1], strlen((char *)attributes[1]), parser->target_encoding);",
          "732:     add_assoc_str(&args[2], att->val, val);",
          "736:     STR_RELEASE(att);",
          "739:    xml_call_handler(parser, &parser->startElementHandler, parser->startElementPtr, 3, args, &retval);",
          "740:    if (!ZVAL_IS_UNDEF(&retval)) {",
          "745:   if (!ZVAL_IS_UNDEF(&parser->data)) {",
          "747:     zval tag, atr;",
          "750:     array_init(&tag);",
          "751:     array_init(&atr);",
          "753:     _xml_add_to_info(parser, tag_name->val + parser->toffset);",
          "756:     add_assoc_string(&tag, \"type\", \"open\");",
          "757:     add_assoc_long(&tag, \"level\", parser->level);",
          "759:     parser->ltags[parser->level-1] = estrdup(tag_name->val);",
          "765:      att = _xml_decode_tag(parser, (const char *)attributes[0]);",
          "766:      val = xml_utf8_decode(attributes[1], strlen((char *)attributes[1]), parser->target_encoding);",
          "769:      add_assoc_str(&atr, att->val, val);",
          "774:      STR_RELEASE(att);",
          "778:      zend_hash_str_add(Z_ARRVAL(tag), \"attributes\", sizeof(\"attributes\") - 1, &atr);",
          "783:     parser->ctag = zend_hash_next_index_insert(Z_ARRVAL(parser->data), &tag);",
          "790:   STR_RELEASE(tag_name);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "864: void _xml_endElementHandler(void *userData, const XML_Char *name)",
          "865: {",
          "866:  xml_parser *parser = (xml_parser *)userData;",
          "869:  if (parser) {",
          "879:     zval_ptr_dtor(&retval);",
          "880:    }",
          "881:   }",
          "886:    if (parser->lastwasopen) {",
          "888:    } else {",
          "900:    }",
          "902:    parser->lastwasopen = 0;",
          "903:   }",
          "907:   if ((parser->ltags) && (parser->level <= XML_MAXLEVEL)) {",
          "908:    efree(parser->ltags[parser->level-1]);",
          "",
          "[Removed Lines]",
          "867:  char *tag_name;",
          "870:   zval *retval, *args[2];",
          "872:   tag_name = _xml_decode_tag(parser, name);",
          "874:   if (parser->endElementHandler) {",
          "875:    args[0] = _xml_resource_zval(parser->index);",
          "876:    args[1] = _xml_string_zval(((char *) tag_name) + parser->toffset);",
          "878:    if ((retval = xml_call_handler(parser, parser->endElementHandler, parser->endElementPtr, 2, args))) {",
          "883:   if (parser->data) {",
          "884:    zval *tag;",
          "887:     add_assoc_string(*(parser->ctag),\"type\",\"complete\");",
          "889:     MAKE_STD_ZVAL(tag);",
          "891:     array_init(tag);",
          "893:     _xml_add_to_info(parser,((char *) tag_name) + parser->toffset);",
          "896:     add_assoc_string(tag,\"type\",\"close\");",
          "897:     add_assoc_long(tag,\"level\",parser->level);",
          "899:     zend_hash_next_index_insert(Z_ARRVAL_P(parser->data),&tag,sizeof(zval*),NULL);",
          "905:   efree(tag_name);",
          "",
          "[Added Lines]",
          "799:  zend_string *tag_name;",
          "802:   zval retval, args[2];",
          "804:   tag_name = _xml_decode_tag(parser, (const char *)name);",
          "806:   if (!ZVAL_IS_UNDEF(&parser->endElementHandler)) {",
          "807:    ZVAL_COPY(&args[0], &parser->index);",
          "808:    ZVAL_STRING(&args[1], (tag_name->val) + parser->toffset);",
          "810:    xml_call_handler(parser, &parser->endElementHandler, parser->endElementPtr, 2, args, &retval);",
          "811:    if (ZVAL_IS_UNDEF(&retval)) {",
          "816:   if (!ZVAL_IS_UNDEF(&parser->data)) {",
          "817:    zval tag;",
          "820:     add_assoc_string(parser->ctag, \"type\", \"complete\");",
          "822:     array_init(&tag);",
          "824:     _xml_add_to_info(parser, tag_name->val + parser->toffset);",
          "827:     add_assoc_string(&tag, \"type\", \"close\");",
          "828:     add_assoc_long(&tag, \"level\", parser->level);",
          "830:     zend_hash_next_index_insert(Z_ARRVAL(parser->data), &tag);",
          "836:   STR_RELEASE(tag_name);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "919:  xml_parser *parser = (xml_parser *)userData;",
          "921:  if (parser) {",
          "928:     zval_ptr_dtor(&retval);",
          "929:    }",
          "930:   }",
          "933:    int i;",
          "934:    int doprint = 0;",
          "949:     }",
          "950:     if (doprint) {",
          "951:      break;",
          "",
          "[Removed Lines]",
          "922:   zval *retval, *args[2];",
          "924:   if (parser->characterDataHandler) {",
          "925:    args[0] = _xml_resource_zval(parser->index);",
          "926:    args[1] = _xml_xmlchar_zval(s, len, parser->target_encoding);",
          "927:    if ((retval = xml_call_handler(parser, parser->characterDataHandler, parser->characterDataPtr, 2, args))) {",
          "932:   if (parser->data) {",
          "936:    char *decoded_value;",
          "937:    int decoded_len;",
          "939:    decoded_value = xml_utf8_decode(s,len,&decoded_len,parser->target_encoding);",
          "940:    for (i = 0; i < decoded_len; i++) {",
          "941:     switch (decoded_value[i]) {",
          "942:     case ' ':",
          "943:     case '\\t':",
          "944:     case '\\n':",
          "945:      continue;",
          "946:     default:",
          "947:      doprint = 1;",
          "948:      break;",
          "",
          "[Added Lines]",
          "853:   zval retval, args[2];",
          "855:   if (!ZVAL_IS_UNDEF(&parser->characterDataHandler)) {",
          "856:    ZVAL_COPY(&args[0], &parser->index);",
          "857:    _xml_xmlchar_zval(s, len, parser->target_encoding, &args[1]);",
          "858:    xml_call_handler(parser, &parser->characterDataHandler, parser->characterDataPtr, 2, args, &retval);",
          "859:    if (!ZVAL_IS_UNDEF(&retval)) {",
          "864:   if (!ZVAL_IS_UNDEF(&parser->data)) {",
          "867:    zend_string *decoded_value;",
          "869:    decoded_value = xml_utf8_decode(s, len, parser->target_encoding);",
          "870:    for (i = 0; i < decoded_value->len; i++) {",
          "871:     switch (decoded_value->val[i]) {",
          "872:      case ' ':",
          "873:      case '\\t':",
          "874:      case '\\n':",
          "875:       continue;",
          "876:      default:",
          "877:       doprint = 1;",
          "878:       break;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "953:    }",
          "954:    if (doprint || (! parser->skipwhite)) {",
          "955:     if (parser->lastwasopen) {",
          "965:      } else {",
          "969:      }",
          "971:     } else {",
          "987:          return;",
          "988:         }",
          "989:        }",
          "990:       }",
          "993:      if (parser->level <= XML_MAXLEVEL) {",
          "998:       _xml_add_to_info(parser,parser->ltags[parser->level-1] + parser->toffset);",
          "1008:      } else if (parser->level == (XML_MAXLEVEL + 1)) {",
          "1009:       TSRMLS_FETCH();",
          "1010:       php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Maximum depth exceeded - Results truncated\");",
          "1011:      }",
          "1012:     }",
          "1013:    } else {",
          "1015:    }",
          "1016:   }",
          "1017:  }",
          "",
          "[Removed Lines]",
          "956:      zval **myval;",
          "959:      if (zend_hash_find(Z_ARRVAL_PP(parser->ctag),\"value\",sizeof(\"value\"),(void **) &myval) == SUCCESS) {",
          "960:       int newlen = Z_STRLEN_PP(myval) + decoded_len;",
          "961:       Z_STRVAL_PP(myval) = erealloc(Z_STRVAL_PP(myval),newlen+1);",
          "962:       strncpy(Z_STRVAL_PP(myval) + Z_STRLEN_PP(myval), decoded_value, decoded_len + 1);",
          "963:       Z_STRLEN_PP(myval) += decoded_len;",
          "964:       efree(decoded_value);",
          "967:       add_assoc_string(*(parser->ctag),\"value\",decoded_value);",
          "968:       efree(decoded_value);",
          "972:      zval *tag;",
          "973:      zval **curtag, **mytype, **myval;",
          "974:      HashPosition hpos=NULL;",
          "976:      zend_hash_internal_pointer_end_ex(Z_ARRVAL_P(parser->data), &hpos);",
          "978:      if (hpos && (zend_hash_get_current_data_ex(Z_ARRVAL_P(parser->data), (void **) &curtag, &hpos) == SUCCESS)) {",
          "979:       if (zend_hash_find(Z_ARRVAL_PP(curtag),\"type\",sizeof(\"type\"),(void **) &mytype) == SUCCESS) {",
          "980:        if (!strcmp(Z_STRVAL_PP(mytype), \"cdata\")) {",
          "981:         if (zend_hash_find(Z_ARRVAL_PP(curtag),\"value\",sizeof(\"value\"),(void **) &myval) == SUCCESS) {",
          "982:          int newlen = Z_STRLEN_PP(myval) + decoded_len;",
          "983:          Z_STRVAL_PP(myval) = erealloc(Z_STRVAL_PP(myval),newlen+1);",
          "984:          strncpy(Z_STRVAL_PP(myval) + Z_STRLEN_PP(myval), decoded_value, decoded_len + 1);",
          "985:          Z_STRLEN_PP(myval) += decoded_len;",
          "986:          efree(decoded_value);",
          "991:      }",
          "994:       MAKE_STD_ZVAL(tag);",
          "996:       array_init(tag);",
          "1000:       add_assoc_string(tag,\"tag\",parser->ltags[parser->level-1] + parser->toffset);",
          "1002:       add_assoc_string(tag,\"value\",decoded_value);",
          "1003:       efree(decoded_value);",
          "1004:       add_assoc_string(tag,\"type\",\"cdata\");",
          "1005:       add_assoc_long(tag,\"level\",parser->level);",
          "1007:       zend_hash_next_index_insert(Z_ARRVAL_P(parser->data),&tag,sizeof(zval*),NULL);",
          "1014:     efree(decoded_value);",
          "",
          "[Added Lines]",
          "886:      zval *myval;",
          "889:      if ((myval = zend_hash_str_find(Z_ARRVAL_P(parser->ctag), \"value\", sizeof(\"value\") - 1))) {",
          "890:       int newlen = Z_STRLEN_P(myval) + decoded_value->len;",
          "891:       Z_STR_P(myval) = STR_REALLOC(Z_STR_P(myval), newlen, 0);",
          "892:       strncpy(Z_STRVAL_P(myval) + Z_STRLEN_P(myval) - decoded_value->len,",
          "893:         decoded_value->val, decoded_value->len + 1);",
          "894:       STR_RELEASE(decoded_value);",
          "897:       add_assoc_str(parser->ctag, \"value\", decoded_value);",
          "901:      zval tag;",
          "902:      zval *curtag, *mytype, *myval;",
          "904:      ZEND_HASH_FOREACH_VAL(Z_ARRVAL(parser->data), curtag) {",
          "905:       if ((mytype = zend_hash_str_find(Z_ARRVAL_P(curtag),\"type\", sizeof(\"type\") - 1))) {",
          "906:        if (!strcmp(Z_STRVAL_P(mytype), \"cdata\")) {",
          "907:         if ((myval = zend_hash_str_find(Z_ARRVAL_P(curtag), \"value\", sizeof(\"value\") - 1))) {",
          "908:          int newlen = Z_STRLEN_P(myval) + decoded_value->len;",
          "909:          Z_STR_P(myval) = STR_REALLOC(Z_STR_P(myval), newlen, 0);",
          "910:          strncpy(Z_STRVAL_P(myval) + Z_STRLEN_P(myval) - decoded_value->len,",
          "911:            decoded_value->val, decoded_value->len + 1);",
          "912:          STR_RELEASE(decoded_value);",
          "917:      } ZEND_HASH_FOREACH_END();",
          "920:       array_init(&tag);",
          "924:       add_assoc_string(&tag, \"tag\", parser->ltags[parser->level-1] + parser->toffset);",
          "926:       add_assoc_str(&tag, \"value\", decoded_value);",
          "927:       add_assoc_string(&tag, \"type\", \"cdata\");",
          "928:       add_assoc_long(&tag, \"level\", parser->level);",
          "930:       zend_hash_next_index_insert(Z_ARRVAL(parser->data), &tag);",
          "937:     STR_RELEASE(decoded_value);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1023: {",
          "1024:  xml_parser *parser = (xml_parser *)userData;",
          "1033:    zval_ptr_dtor(&retval);",
          "1034:   }",
          "1035:  }",
          "",
          "[Removed Lines]",
          "1026:  if (parser && parser->processingInstructionHandler) {",
          "1027:   zval *retval, *args[3];",
          "1029:   args[0] = _xml_resource_zval(parser->index);",
          "1030:   args[1] = _xml_xmlchar_zval(target, 0, parser->target_encoding);",
          "1031:   args[2] = _xml_xmlchar_zval(data, 0, parser->target_encoding);",
          "1032:   if ((retval = xml_call_handler(parser, parser->processingInstructionHandler, parser->processingInstructionPtr, 3, args))) {",
          "",
          "[Added Lines]",
          "949:  if (parser && !ZVAL_IS_UNDEF(&parser->processingInstructionHandler)) {",
          "950:   zval retval, args[3];",
          "952:   ZVAL_COPY(&args[0], &parser->index);",
          "953:   _xml_xmlchar_zval(target, 0, parser->target_encoding, &args[1]);",
          "954:   _xml_xmlchar_zval(data, 0, parser->target_encoding, &args[2]);",
          "955:   xml_call_handler(parser, &parser->processingInstructionHandler, parser->processingInstructionPtr, 3, args, &retval);",
          "956:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1041: {",
          "1042:  xml_parser *parser = (xml_parser *)userData;",
          "1050:    zval_ptr_dtor(&retval);",
          "1051:   }",
          "1052:  }",
          "",
          "[Removed Lines]",
          "1044:  if (parser && parser->defaultHandler) {",
          "1045:   zval *retval, *args[2];",
          "1047:   args[0] = _xml_resource_zval(parser->index);",
          "1048:   args[1] = _xml_xmlchar_zval(s, len, parser->target_encoding);",
          "1049:   if ((retval = xml_call_handler(parser, parser->defaultHandler, parser->defaultPtr, 2, args))) {",
          "",
          "[Added Lines]",
          "968:  if (parser && !ZVAL_IS_UNDEF(&parser->defaultHandler)) {",
          "969:   zval retval, args[2];",
          "971:   ZVAL_COPY(&args[0], &parser->index);",
          "972:   _xml_xmlchar_zval(s, len, parser->target_encoding, &args[1]);",
          "973:   xml_call_handler(parser, &parser->defaultHandler, parser->defaultPtr, 2, args, &retval);",
          "974:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1063: {",
          "1064:  xml_parser *parser = (xml_parser *)userData;",
          "1076:    zval_ptr_dtor(&retval);",
          "1077:   }",
          "1078:  }",
          "",
          "[Removed Lines]",
          "1066:  if (parser && parser->unparsedEntityDeclHandler) {",
          "1067:   zval *retval, *args[6];",
          "1069:   args[0] = _xml_resource_zval(parser->index);",
          "1070:   args[1] = _xml_xmlchar_zval(entityName, 0, parser->target_encoding);",
          "1071:   args[2] = _xml_xmlchar_zval(base, 0, parser->target_encoding);",
          "1072:   args[3] = _xml_xmlchar_zval(systemId, 0, parser->target_encoding);",
          "1073:   args[4] = _xml_xmlchar_zval(publicId, 0, parser->target_encoding);",
          "1074:   args[5] = _xml_xmlchar_zval(notationName, 0, parser->target_encoding);",
          "1075:   if ((retval = xml_call_handler(parser, parser->unparsedEntityDeclHandler, parser->unparsedEntityDeclPtr, 6, args))) {",
          "",
          "[Added Lines]",
          "991:  if (parser && !ZVAL_IS_UNDEF(&parser->unparsedEntityDeclHandler)) {",
          "992:   zval retval, args[6];",
          "994:   ZVAL_COPY(&args[0], &parser->index);",
          "995:   _xml_xmlchar_zval(entityName, 0, parser->target_encoding, &args[1]);",
          "996:   _xml_xmlchar_zval(base, 0, parser->target_encoding, &args[2]);",
          "997:   _xml_xmlchar_zval(systemId, 0, parser->target_encoding, &args[3]);",
          "998:   _xml_xmlchar_zval(publicId, 0, parser->target_encoding, &args[4]);",
          "999:   _xml_xmlchar_zval(notationName, 0, parser->target_encoding, &args[5]);",
          "1000:   xml_call_handler(parser, &parser->unparsedEntityDeclHandler, parser->unparsedEntityDeclPtr, 6, args, &retval);",
          "1001:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1088: {",
          "1089:  xml_parser *parser = (xml_parser *)userData;",
          "1100:    zval_ptr_dtor(&retval);",
          "1101:   }",
          "1102:  }",
          "",
          "[Removed Lines]",
          "1091:  if (parser && parser->notationDeclHandler) {",
          "1092:   zval *retval, *args[5];",
          "1094:   args[0] = _xml_resource_zval(parser->index);",
          "1095:   args[1] = _xml_xmlchar_zval(notationName, 0, parser->target_encoding);",
          "1096:   args[2] = _xml_xmlchar_zval(base, 0, parser->target_encoding);",
          "1097:   args[3] = _xml_xmlchar_zval(systemId, 0, parser->target_encoding);",
          "1098:   args[4] = _xml_xmlchar_zval(publicId, 0, parser->target_encoding);",
          "1099:   if ((retval = xml_call_handler(parser, parser->notationDeclHandler, parser->notationDeclPtr, 5, args))) {",
          "",
          "[Added Lines]",
          "1017:  if (parser && !ZVAL_IS_UNDEF(&parser->notationDeclHandler)) {",
          "1018:   zval retval, args[5];",
          "1020:   ZVAL_COPY(&args[0], &parser->index);",
          "1021:   _xml_xmlchar_zval(notationName, 0, parser->target_encoding, &args[1]);",
          "1022:   _xml_xmlchar_zval(base, 0, parser->target_encoding, &args[2]);",
          "1023:   _xml_xmlchar_zval(systemId, 0, parser->target_encoding, &args[3]);",
          "1024:   _xml_xmlchar_zval(publicId, 0, parser->target_encoding, &args[4]);",
          "1025:   xml_call_handler(parser, &parser->notationDeclHandler, parser->notationDeclPtr, 5, args, &retval);",
          "1026:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1113:  xml_parser *parser = XML_GetUserData(parserPtr);",
          "1128:   } else {",
          "1129:    ret = 0;",
          "1130:   }",
          "",
          "[Removed Lines]",
          "1116:  if (parser && parser->externalEntityRefHandler) {",
          "1117:   zval *retval, *args[5];",
          "1119:   args[0] = _xml_resource_zval(parser->index);",
          "1120:   args[1] = _xml_xmlchar_zval(openEntityNames, 0, parser->target_encoding);",
          "1121:   args[2] = _xml_xmlchar_zval(base, 0, parser->target_encoding);",
          "1122:   args[3] = _xml_xmlchar_zval(systemId, 0, parser->target_encoding);",
          "1123:   args[4] = _xml_xmlchar_zval(publicId, 0, parser->target_encoding);",
          "1124:   if ((retval = xml_call_handler(parser, parser->externalEntityRefHandler, parser->externalEntityRefPtr, 5, args))) {",
          "1125:    convert_to_long(retval);",
          "1126:    ret = Z_LVAL_P(retval);",
          "1127:    efree(retval);",
          "",
          "[Added Lines]",
          "1043:  if (parser && !ZVAL_IS_UNDEF(&parser->externalEntityRefHandler)) {",
          "1044:   zval retval, args[5];",
          "1046:   ZVAL_COPY(&args[0], &parser->index);",
          "1047:   _xml_xmlchar_zval(openEntityNames, 0, parser->target_encoding, &args[1]);",
          "1048:   _xml_xmlchar_zval(base, 0, parser->target_encoding, &args[2]);",
          "1049:   _xml_xmlchar_zval(systemId, 0, parser->target_encoding, &args[3]);",
          "1050:   _xml_xmlchar_zval(publicId, 0, parser->target_encoding, &args[4]);",
          "1051:   xml_call_handler(parser, &parser->externalEntityRefHandler, parser->externalEntityRefPtr, 5, args, &retval);",
          "1052:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "1053:    convert_to_long(&retval);",
          "1054:    ret = Z_LVAL(retval);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1138: {",
          "1139:  xml_parser *parser = (xml_parser *)userData;",
          "1148:    zval_ptr_dtor(&retval);",
          "1149:   }",
          "1150:  }",
          "",
          "[Removed Lines]",
          "1141:  if (parser && parser->startNamespaceDeclHandler) {",
          "1142:   zval *retval, *args[3];",
          "1144:   args[0] = _xml_resource_zval(parser->index);",
          "1145:   args[1] = _xml_xmlchar_zval(prefix, 0, parser->target_encoding);",
          "1146:   args[2] = _xml_xmlchar_zval(uri, 0, parser->target_encoding);",
          "1147:   if ((retval = xml_call_handler(parser, parser->startNamespaceDeclHandler, parser->startNamespaceDeclPtr, 3, args))) {",
          "",
          "[Added Lines]",
          "1068:  if (parser && !ZVAL_IS_UNDEF(&parser->startNamespaceDeclHandler)) {",
          "1069:   zval retval, args[3];",
          "1071:   ZVAL_COPY(&args[0], &parser->index);",
          "1072:   _xml_xmlchar_zval(prefix, 0, parser->target_encoding, &args[1]);",
          "1073:   _xml_xmlchar_zval(uri, 0, parser->target_encoding, &args[2]);",
          "1074:   xml_call_handler(parser, &parser->startNamespaceDeclHandler, parser->startNamespaceDeclPtr, 3, args, &retval);",
          "1075:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1156: {",
          "1157:  xml_parser *parser = (xml_parser *)userData;",
          "1165:    zval_ptr_dtor(&retval);",
          "1166:   }",
          "1167:  }",
          "",
          "[Removed Lines]",
          "1159:  if (parser && parser->endNamespaceDeclHandler) {",
          "1160:   zval *retval, *args[2];",
          "1162:   args[0] = _xml_resource_zval(parser->index);",
          "1163:   args[1] = _xml_xmlchar_zval(prefix, 0, parser->target_encoding);",
          "1164:   if ((retval = xml_call_handler(parser, parser->endNamespaceDeclHandler, parser->endNamespaceDeclPtr, 2, args))) {",
          "",
          "[Added Lines]",
          "1087:  if (parser && !ZVAL_IS_UNDEF(&parser->endNamespaceDeclHandler)) {",
          "1088:   zval retval, args[2];",
          "1090:   ZVAL_COPY(&args[0], &parser->index);",
          "1091:   _xml_xmlchar_zval(prefix, 0, parser->target_encoding, &args[1]);",
          "1092:   xml_call_handler(parser, &parser->endNamespaceDeclHandler, parser->endNamespaceDeclPtr, 2, args, &retval);",
          "1093:   if (!ZVAL_IS_UNDEF(&retval)) {",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1219:  parser->target_encoding = encoding;",
          "1220:  parser->case_folding = 1;",
          "1222:  parser->isparsing = 0;",
          "1224:  XML_SetUserData(parser->parser, parser);",
          "1228: }",
          "",
          "[Removed Lines]",
          "1221:  parser->object = NULL;",
          "1226:  ZEND_REGISTER_RESOURCE(return_value, parser,le_xml_parser);",
          "1227:  parser->index = Z_LVAL_P(return_value);",
          "",
          "[Added Lines]",
          "1154:  ZEND_REGISTER_RESOURCE(return_value, parser, le_xml_parser);",
          "1155:  ZVAL_COPY(&parser->index, return_value);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1255:   return;",
          "1256:  }",
          "1262:   zval_ptr_dtor(&parser->object);",
          "1263:  }",
          "",
          "[Removed Lines]",
          "1258:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "1261:  if (parser->object) {",
          "",
          "[Added Lines]",
          "1186:  ZEND_FETCH_RESOURCE(parser,xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "1189:  if (!ZVAL_IS_UNDEF(&parser->object)) {",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1267:  zval_add_ref(&parser->object);",
          "1273:  RETVAL_TRUE;",
          "1274: }",
          "",
          "[Removed Lines]",
          "1270:  ALLOC_ZVAL(parser->object);",
          "1271:  MAKE_COPY_ZVAL(&mythis, parser->object);",
          "",
          "[Added Lines]",
          "1198:  ZVAL_COPY(&parser->object, mythis);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1279: PHP_FUNCTION(xml_set_element_handler)",
          "1280: {",
          "1281:  xml_parser *parser;",
          "1285:   return;",
          "1286:  }",
          "1290:  xml_set_handler(&parser->startElementHandler, shdl);",
          "1291:  xml_set_handler(&parser->endElementHandler, ehdl);",
          "",
          "[Removed Lines]",
          "1282:  zval *pind, **shdl, **ehdl;",
          "1284:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rZZ\", &pind, &shdl, &ehdl) == FAILURE) {",
          "1288:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1209:  zval *pind, *shdl, *ehdl;",
          "1211:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rzz\", &pind, &shdl, &ehdl) == FAILURE) {",
          "1215:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1299: PHP_FUNCTION(xml_set_character_data_handler)",
          "1300: {",
          "1301:  xml_parser *parser;",
          "1305:   return;",
          "1306:  }",
          "1310:  xml_set_handler(&parser->characterDataHandler, hdl);",
          "1311:  XML_SetCharacterDataHandler(parser->parser, _xml_characterDataHandler);",
          "",
          "[Removed Lines]",
          "1302:  zval *pind, **hdl;",
          "1304:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rZ\", &pind, &hdl) == FAILURE) {",
          "1308:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1229:  zval *pind, *hdl;",
          "1231:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rz\", &pind, &hdl) == FAILURE) {",
          "1235:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1318: PHP_FUNCTION(xml_set_processing_instruction_handler)",
          "1319: {",
          "1320:  xml_parser *parser;",
          "1324:   return;",
          "1325:  }",
          "1329:  xml_set_handler(&parser->processingInstructionHandler, hdl);",
          "1330:  XML_SetProcessingInstructionHandler(parser->parser, _xml_processingInstructionHandler);",
          "",
          "[Removed Lines]",
          "1321:  zval *pind, **hdl;",
          "1323:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rZ\", &pind, &hdl) == FAILURE) {",
          "1327:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1248:  zval *pind, *hdl;",
          "1250:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rz\", &pind, &hdl) == FAILURE) {",
          "1254:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1337: PHP_FUNCTION(xml_set_default_handler)",
          "1338: {",
          "1339:  xml_parser *parser;",
          "1343:   return;",
          "1344:  }",
          "1347:  xml_set_handler(&parser->defaultHandler, hdl);",
          "1348:  XML_SetDefaultHandler(parser->parser, _xml_defaultHandler);",
          "",
          "[Removed Lines]",
          "1340:  zval *pind, **hdl;",
          "1342:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rZ\", &pind, &hdl) == FAILURE) {",
          "1345:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1267:  zval *pind, *hdl;",
          "1269:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rz\", &pind, &hdl) == FAILURE) {",
          "1273:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1355: PHP_FUNCTION(xml_set_unparsed_entity_decl_handler)",
          "1356: {",
          "1357:  xml_parser *parser;",
          "1361:   return;",
          "1362:  }",
          "1366:  xml_set_handler(&parser->unparsedEntityDeclHandler, hdl);",
          "1367:  XML_SetUnparsedEntityDeclHandler(parser->parser, _xml_unparsedEntityDeclHandler);",
          "",
          "[Removed Lines]",
          "1358:  zval *pind, **hdl;",
          "1360:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rZ\", &pind, &hdl) == FAILURE) {",
          "1364:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1286:  zval *pind, *hdl;",
          "1288:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rz\", &pind, &hdl) == FAILURE) {",
          "1292:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1374: PHP_FUNCTION(xml_set_notation_decl_handler)",
          "1375: {",
          "1376:  xml_parser *parser;",
          "1380:   return;",
          "1381:  }",
          "1384:  xml_set_handler(&parser->notationDeclHandler, hdl);",
          "1385:  XML_SetNotationDeclHandler(parser->parser, _xml_notationDeclHandler);",
          "",
          "[Removed Lines]",
          "1377:  zval *pind, **hdl;",
          "1379:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rZ\", &pind, &hdl) == FAILURE) {",
          "1382:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1305:  zval *pind, *hdl;",
          "1307:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rz\", &pind, &hdl) == FAILURE) {",
          "1310:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1392: PHP_FUNCTION(xml_set_external_entity_ref_handler)",
          "1393: {",
          "1394:  xml_parser *parser;",
          "1398:   return;",
          "1399:  }",
          "1402:  xml_set_handler(&parser->externalEntityRefHandler, hdl);",
          "1403:  XML_SetExternalEntityRefHandler(parser->parser, (void *) _xml_externalEntityRefHandler);",
          "",
          "[Removed Lines]",
          "1395:  zval *pind, **hdl;",
          "1397:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rZ\", &pind, &hdl) == FAILURE) {",
          "1400:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1323:  zval *pind, *hdl;",
          "1325:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rz\", &pind, &hdl) == FAILURE) {",
          "1328:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1410: PHP_FUNCTION(xml_set_start_namespace_decl_handler)",
          "1411: {",
          "1412:  xml_parser *parser;",
          "1416:   return;",
          "1417:  }",
          "1421:  xml_set_handler(&parser->startNamespaceDeclHandler, hdl);",
          "1422:  XML_SetStartNamespaceDeclHandler(parser->parser, _xml_startNamespaceDeclHandler);",
          "",
          "[Removed Lines]",
          "1413:  zval *pind, **hdl;",
          "1415:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rZ\", &pind, &hdl) == FAILURE) {",
          "1419:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1341:  zval *pind, *hdl;",
          "1343:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rz\", &pind, &hdl) == FAILURE) {",
          "1347:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1429: PHP_FUNCTION(xml_set_end_namespace_decl_handler)",
          "1430: {",
          "1431:  xml_parser *parser;",
          "1435:   return;",
          "1436:  }",
          "1440:  xml_set_handler(&parser->endNamespaceDeclHandler, hdl);",
          "1441:  XML_SetEndNamespaceDeclHandler(parser->parser, _xml_endNamespaceDeclHandler);",
          "",
          "[Removed Lines]",
          "1432:  zval *pind, **hdl;",
          "1434:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rZ\", &pind, &hdl) == FAILURE) {",
          "1438:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1360:  zval *pind, *hdl;",
          "1362:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rz\", &pind, &hdl) == FAILURE) {",
          "1366:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1456:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rs|l\", &pind, &data, &data_len, &isFinal) == FAILURE) {",
          "1457:   return;",
          "1458:  }",
          "1461:  parser->isparsing = 1;",
          "1462:  ret = XML_Parse(parser->parser, data, data_len, isFinal);",
          "",
          "[Removed Lines]",
          "1459:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1387:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1472: PHP_FUNCTION(xml_parse_into_struct)",
          "1473: {",
          "1474:  xml_parser *parser;",
          "1476:  char *data;",
          "1477:  int data_len, ret;",
          "1480:   return;",
          "1481:  }",
          "1483:  if (info) {",
          "1486:  }",
          "1495:  if (info) {",
          "1497:  }",
          "1499:  parser->level = 0;",
          "",
          "[Removed Lines]",
          "1475:  zval *pind, **xdata, **info = NULL;",
          "1479:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rsZ|Z\", &pind, &data, &data_len, &xdata, &info) == FAILURE) {",
          "1484:   zval_dtor(*info);",
          "1485:   array_init(*info);",
          "1488:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "1490:  zval_dtor(*xdata);",
          "1491:  array_init(*xdata);",
          "1493:  parser->data = *xdata;",
          "1496:   parser->info = *info;",
          "",
          "[Added Lines]",
          "1403:  zval *pind, *xdata, *info = NULL;",
          "1407:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rsz|z\", &pind, &data, &data_len, &xdata, &info) == FAILURE) {",
          "1412:   zval_ptr_dtor(info);",
          "1413:   array_init(info);",
          "1416:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "1418:  ZVAL_DEREF(xdata);",
          "1419:  zval_ptr_dtor(xdata);",
          "1420:  array_init(xdata);",
          "1422:  ZVAL_COPY_VALUE(&parser->data, xdata);",
          "1425:   ZVAL_COPY_VALUE(&parser->info, info);",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1521:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"r\", &pind) == FAILURE) {",
          "1522:   return;",
          "1523:  }",
          "1527: }",
          "",
          "[Removed Lines]",
          "1524:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "1526:  RETVAL_LONG((long)XML_GetErrorCode(parser->parser));",
          "",
          "[Added Lines]",
          "1454:  ZEND_FETCH_RESOURCE(parser,xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "1456:  RETURN_LONG((long)XML_GetErrorCode(parser->parser));",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1541:  str = (char *)XML_ErrorString((int)code);",
          "1542:  if (str) {",
          "1544:  }",
          "1545: }",
          "",
          "[Removed Lines]",
          "1543:   RETVAL_STRING(str, 1);",
          "",
          "[Added Lines]",
          "1473:   RETVAL_STRING(str);",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1555:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"r\", &pind) == FAILURE) {",
          "1556:   return;",
          "1557:  }",
          "1560:  RETVAL_LONG(XML_GetCurrentLineNumber(parser->parser));",
          "1561: }",
          "",
          "[Removed Lines]",
          "1558:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1489:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1571:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"r\", &pind) == FAILURE) {",
          "1572:   return;",
          "1573:  }",
          "1576:  RETVAL_LONG(XML_GetCurrentColumnNumber(parser->parser));",
          "1577: }",
          "",
          "[Removed Lines]",
          "1574:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1506:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1587:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"r\", &pind) == FAILURE) {",
          "1588:   return;",
          "1589:  }",
          "1592:  RETVAL_LONG(XML_GetCurrentByteIndex(parser->parser));",
          "1593: }",
          "",
          "[Removed Lines]",
          "1590:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "[Added Lines]",
          "1523:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1604:   return;",
          "1605:  }",
          "1609:  if (parser->isparsing == 1) {",
          "1610:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Parser cannot be freed while it is parsing.\");",
          "1611:   RETURN_FALSE;",
          "1612:  }",
          "1619: }",
          "",
          "[Removed Lines]",
          "1607:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "1614:  if (zend_list_delete(parser->index) == FAILURE) {",
          "1615:   RETURN_FALSE;",
          "1616:  }",
          "1618:  RETVAL_TRUE;",
          "",
          "[Added Lines]",
          "1540:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "1547:  zend_list_close(Z_RES(parser->index));",
          "1548:  ZVAL_UNDEF(&parser->index);",
          "1549:  RETURN_TRUE;",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1624: PHP_FUNCTION(xml_parser_set_option)",
          "1625: {",
          "1626:  xml_parser *parser;",
          "1628:  long opt;",
          "1631:   return;",
          "1632:  }",
          "1635:  switch (opt) {",
          "1636:   case PHP_XML_OPTION_CASE_FOLDING:",
          "1637:    convert_to_long_ex(val);",
          "1639:    break;",
          "1640:   case PHP_XML_OPTION_SKIP_TAGSTART:",
          "1641:    convert_to_long_ex(val);",
          "1643:    break;",
          "1644:   case PHP_XML_OPTION_SKIP_WHITE:",
          "1645:    convert_to_long_ex(val);",
          "1647:    break;",
          "1648:   case PHP_XML_OPTION_TARGET_ENCODING: {",
          "1649:    xml_encoding *enc;",
          "1650:    convert_to_string_ex(val);",
          "1652:    if (enc == NULL) {",
          "1654:     RETURN_FALSE;",
          "1655:    }",
          "1656:    parser->target_encoding = enc->name;",
          "",
          "[Removed Lines]",
          "1627:  zval *pind, **val;",
          "1630:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rlZ\", &pind, &opt, &val) == FAILURE) {",
          "1633:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "1638:    parser->case_folding = Z_LVAL_PP(val);",
          "1642:    parser->toffset = Z_LVAL_PP(val);",
          "1646:    parser->skipwhite = Z_LVAL_PP(val);",
          "1651:    enc = xml_get_encoding(Z_STRVAL_PP(val));",
          "1653:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unsupported target encoding \\\"%s\\\"\", Z_STRVAL_PP(val));",
          "",
          "[Added Lines]",
          "1558:  zval *pind, *val;",
          "1561:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rlz\", &pind, &opt, &val) == FAILURE) {",
          "1565:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "1570:    parser->case_folding = Z_LVAL_P(val);",
          "1574:    parser->toffset = Z_LVAL_P(val);",
          "1578:    parser->skipwhite = Z_LVAL_P(val);",
          "1583:    enc = xml_get_encoding(Z_STRVAL_P(val));",
          "1585:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unsupported target encoding \\\"%s\\\"\", Z_STRVAL_P(val));",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1676:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"rl\", &pind, &opt) == FAILURE) {",
          "1677:   return;",
          "1678:  }",
          "1681:  switch (opt) {",
          "1682:   case PHP_XML_OPTION_CASE_FOLDING:",
          "1683:    RETURN_LONG(parser->case_folding);",
          "1684:    break;",
          "1685:   case PHP_XML_OPTION_TARGET_ENCODING:",
          "1687:    break;",
          "1688:   default:",
          "1689:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unknown option\");",
          "",
          "[Removed Lines]",
          "1679:  ZEND_FETCH_RESOURCE(parser,xml_parser *, &pind, -1, \"XML Parser\", le_xml_parser);",
          "1686:    RETURN_STRING(parser->target_encoding, 1);",
          "",
          "[Added Lines]",
          "1611:  ZEND_FETCH_RESOURCE(parser, xml_parser *, pind, -1, \"XML Parser\", le_xml_parser);",
          "1618:    RETURN_STRING((char *)parser->target_encoding);",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1700: PHP_FUNCTION(utf8_encode)",
          "1701: {",
          "1702:  char *arg;",
          "1706:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &arg, &arg_len) == FAILURE) {",
          "1707:   return;",
          "1708:  }",
          "1711:  if (encoded == NULL) {",
          "1712:   RETURN_FALSE;",
          "1713:  }",
          "1715: }",
          "",
          "[Removed Lines]",
          "1703:  XML_Char *encoded;",
          "1704:  int arg_len, len;",
          "1710:  encoded = xml_utf8_encode(arg, arg_len, &len, \"ISO-8859-1\");",
          "1714:  RETVAL_STRINGL(encoded, len, 0);",
          "",
          "[Added Lines]",
          "1635:  int arg_len;",
          "1636:  zend_string *encoded;",
          "1642:  encoded = xml_utf8_encode(arg, arg_len, \"ISO-8859-1\");",
          "1646:  RETURN_STR(encoded);",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1720: PHP_FUNCTION(utf8_decode)",
          "1721: {",
          "1722:  char *arg;",
          "1726:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &arg, &arg_len) == FAILURE) {",
          "1727:   return;",
          "1728:  }",
          "1731:  if (decoded == NULL) {",
          "1732:   RETURN_FALSE;",
          "1733:  }",
          "1735: }",
          "",
          "[Removed Lines]",
          "1723:  XML_Char *decoded;",
          "1724:  int arg_len, len;",
          "1730:  decoded = xml_utf8_decode(arg, arg_len, &len, \"ISO-8859-1\");",
          "1734:  RETVAL_STRINGL(decoded, len, 0);",
          "",
          "[Added Lines]",
          "1655:  int arg_len;",
          "1656:  zend_string *decoded;",
          "1662:  decoded = xml_utf8_decode(arg, arg_len, \"ISO-8859-1\");",
          "1666:  RETURN_STR(decoded);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd803718df0aa413fd8c47eaa030fcc61f3feb28",
      "candidate_info": {
        "commit_hash": "fd803718df0aa413fd8c47eaa030fcc61f3feb28",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/fd803718df0aa413fd8c47eaa030fcc61f3feb28",
        "files": [
          "ext/xml/xml.c"
        ],
        "message": "truncate results at depth of 255 to prevent corruption",
        "before_after_code_files": [
          "ext/xml/xml.c||ext/xml/xml.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/xml/xml.c||ext/xml/xml.c"
          ],
          "candidate": [
            "ext/xml/xml.c||ext/xml/xml.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/xml/xml.c||ext/xml/xml.c": [
          "File: ext/xml/xml.c -> ext/xml/xml.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "427:  }",
          "428:  if (parser->ltags) {",
          "429:   int inx;",
          "431:    efree(parser->ltags[ inx ]);",
          "432:   efree(parser->ltags);",
          "433:  }",
          "",
          "[Removed Lines]",
          "430:   for (inx = 0; inx < parser->level; inx++)",
          "",
          "[Added Lines]",
          "430:   for (inx = 0; ((inx < parser->level) && (inx < XML_MAXLEVEL)); inx++)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "905:   }",
          "907:   if (parser->data) {",
          "947:   }",
          "949:   efree(tag_name);",
          "",
          "[Removed Lines]",
          "908:    zval *tag, *atr;",
          "909:    int atcnt = 0;",
          "911:    MAKE_STD_ZVAL(tag);",
          "912:    MAKE_STD_ZVAL(atr);",
          "914:    array_init(tag);",
          "915:    array_init(atr);",
          "917:    _xml_add_to_info(parser,((char *) tag_name) + parser->toffset);",
          "920:    add_assoc_string(tag,\"type\",\"open\",1);",
          "921:    add_assoc_long(tag,\"level\",parser->level);",
          "923:    parser->ltags[parser->level-1] = estrdup(tag_name);",
          "924:    parser->lastwasopen = 1;",
          "926:    attributes = (const XML_Char **) attrs;",
          "928:    while (attributes && *attributes) {",
          "929:     att = _xml_decode_tag(parser, attributes[0]);",
          "930:     val = xml_utf8_decode(attributes[1], strlen(attributes[1]), &val_len, parser->target_encoding);",
          "932:     add_assoc_stringl(atr,att,val,val_len,0);",
          "934:     atcnt++;",
          "935:     attributes += 2;",
          "937:     efree(att);",
          "938:    }",
          "940:    if (atcnt) {",
          "941:     zend_hash_add(Z_ARRVAL_P(tag),\"attributes\",sizeof(\"attributes\"),&atr,sizeof(zval*),NULL);",
          "942:    } else {",
          "943:     zval_ptr_dtor(&atr);",
          "944:    }",
          "946:    zend_hash_next_index_insert(Z_ARRVAL_P(parser->data),&tag,sizeof(zval*),(void *) &parser->ctag);",
          "",
          "[Added Lines]",
          "908:    if (parser->level <= XML_MAXLEVEL)  {",
          "909:     zval *tag, *atr;",
          "910:     int atcnt = 0;",
          "912:     MAKE_STD_ZVAL(tag);",
          "913:     MAKE_STD_ZVAL(atr);",
          "915:     array_init(tag);",
          "916:     array_init(atr);",
          "918:     _xml_add_to_info(parser,((char *) tag_name) + parser->toffset);",
          "921:     add_assoc_string(tag,\"type\",\"open\",1);",
          "922:     add_assoc_long(tag,\"level\",parser->level);",
          "924:     parser->ltags[parser->level-1] = estrdup(tag_name);",
          "925:     parser->lastwasopen = 1;",
          "927:     attributes = (const XML_Char **) attrs;",
          "929:     while (attributes && *attributes) {",
          "930:      att = _xml_decode_tag(parser, attributes[0]);",
          "931:      val = xml_utf8_decode(attributes[1], strlen(attributes[1]), &val_len, parser->target_encoding);",
          "933:      add_assoc_stringl(atr,att,val,val_len,0);",
          "935:      atcnt++;",
          "936:      attributes += 2;",
          "938:      efree(att);",
          "939:     }",
          "941:     if (atcnt) {",
          "942:      zend_hash_add(Z_ARRVAL_P(tag),\"attributes\",sizeof(\"attributes\"),&atr,sizeof(zval*),NULL);",
          "943:     } else {",
          "944:      zval_ptr_dtor(&atr);",
          "945:     }",
          "947:     zend_hash_next_index_insert(Z_ARRVAL_P(parser->data),&tag,sizeof(zval*),(void *) &parser->ctag);",
          "948:    } else if (parser->level == (XML_MAXLEVEL + 1)) {",
          "949:     TSRMLS_FETCH();",
          "950:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Maximum depth exceeded - Results truncated\");",
          "951:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "996:   efree(tag_name);",
          "999:    efree(parser->ltags[parser->level-1]);",
          "1000:   }",
          "",
          "[Removed Lines]",
          "998:   if (parser->ltags) {",
          "",
          "[Added Lines]",
          "1003:   if ((parser->ltags) && (parser->level <= XML_MAXLEVEL)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1079:       }",
          "1080:      }",
          "1094:     }",
          "1095:    } else {",
          "1096:     efree(decoded_value);",
          "",
          "[Removed Lines]",
          "1082:      MAKE_STD_ZVAL(tag);",
          "1084:      array_init(tag);",
          "1086:      _xml_add_to_info(parser,parser->ltags[parser->level-1] + parser->toffset);",
          "1088:      add_assoc_string(tag,\"tag\",parser->ltags[parser->level-1] + parser->toffset,1);",
          "1089:      add_assoc_string(tag,\"value\",decoded_value,0);",
          "1090:      add_assoc_string(tag,\"type\",\"cdata\",1);",
          "1091:      add_assoc_long(tag,\"level\",parser->level);",
          "1093:      zend_hash_next_index_insert(Z_ARRVAL_P(parser->data),&tag,sizeof(zval*),NULL);",
          "",
          "[Added Lines]",
          "1087:      if (parser->level <= XML_MAXLEVEL) {",
          "1088:       MAKE_STD_ZVAL(tag);",
          "1090:       array_init(tag);",
          "1092:       _xml_add_to_info(parser,parser->ltags[parser->level-1] + parser->toffset);",
          "1094:       add_assoc_string(tag,\"tag\",parser->ltags[parser->level-1] + parser->toffset,1);",
          "1095:       add_assoc_string(tag,\"value\",decoded_value,0);",
          "1096:       add_assoc_string(tag,\"type\",\"cdata\",1);",
          "1097:       add_assoc_long(tag,\"level\",parser->level);",
          "1099:       zend_hash_next_index_insert(Z_ARRVAL_P(parser->data),&tag,sizeof(zval*),NULL);",
          "1100:      } else if (parser->level == (XML_MAXLEVEL + 1)) {",
          "1101:       TSRMLS_FETCH();",
          "1102:       php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Maximum depth exceeded - Results truncated\");",
          "1103:      }",
          "",
          "---------------"
        ]
      }
    }
  ]
}