{
  "cve_id": "CVE-2016-9436",
  "cve_desc": "parsetagx.c in w3m before 0.5.3+git20161009 does not properly initialize values, which allows remote attackers to crash the application via a crafted html file, related to a <i> tag.",
  "repo": "tats/w3m",
  "patch_hash": "33509cc81ec5f2ba44eb6fd98bd5c1b5873e46bd",
  "patch_info": {
    "commit_hash": "33509cc81ec5f2ba44eb6fd98bd5c1b5873e46bd",
    "repo": "tats/w3m",
    "commit_url": "https://github.com/tats/w3m/commit/33509cc81ec5f2ba44eb6fd98bd5c1b5873e46bd",
    "files": [
      "file.c",
      "parsetagx.c"
    ],
    "message": "Fix uninitialised values for <i> and <dd>\n\nBug-Debian: https://github.com/tats/w3m/issues/16",
    "before_after_code_files": [
      "file.c||file.c",
      "parsetagx.c||parsetagx.c"
    ]
  },
  "patch_diff": {
    "file.c||file.c": [
      "File: file.c -> file.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4686:     case HTML_DD:",
      "4687:  CLOSE_A;",
      "4688:  CLOSE_DT;",
      "4689:  if (envs[h_env->envc].env == HTML_DL_COMPACT) {",
      "4690:      if (obuf->pos > envs[h_env->envc].indent)",
      "4691:   flushline(h_env, obuf, envs[h_env->envc].indent, 0,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4689:  if (h_env->envc == 0 ||",
      "4690:      (h_env->envc_real < h_env->nenv &&",
      "4691:       envs[h_env->envc].env != HTML_DL &&",
      "4692:       envs[h_env->envc].env != HTML_DL_COMPACT)) {",
      "4693:      PUSH_ENV(HTML_DL);",
      "4694:  }",
      "",
      "---------------"
    ],
    "parsetagx.c||parsetagx.c": [
      "File: parsetagx.c -> parsetagx.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "120:     int i, attr_id = 0, nattr;",
      "123:     q = (*s) + 1;",
      "124:     p = tagname;",
      "125:     if (*q == '/') {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "123:     tagname[0] = '\\0';",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0fba2f1a6eb6861206ad120a02af2643938082cd",
      "candidate_info": {
        "commit_hash": "0fba2f1a6eb6861206ad120a02af2643938082cd",
        "repo": "tats/w3m",
        "commit_url": "https://github.com/tats/w3m/commit/0fba2f1a6eb6861206ad120a02af2643938082cd",
        "files": [
          "file.c",
          "parsetagx.c"
        ],
        "message": "Fix uninitialised values for <i> and <dd>\n\nBug-Debian: https://github.com/tats/w3m/issues/16",
        "before_after_code_files": [
          "file.c||file.c",
          "parsetagx.c||parsetagx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "file.c||file.c",
            "parsetagx.c||parsetagx.c"
          ],
          "candidate": [
            "file.c||file.c",
            "parsetagx.c||parsetagx.c"
          ]
        }
      },
      "candidate_diff": {
        "file.c||file.c": [
          "File: file.c -> file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4686:     case HTML_DD:",
          "4687:  CLOSE_A;",
          "4688:  CLOSE_DT;",
          "4689:  if (envs[h_env->envc].env == HTML_DL_COMPACT) {",
          "4690:      if (obuf->pos > envs[h_env->envc].indent)",
          "4691:   flushline(h_env, obuf, envs[h_env->envc].indent, 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4689:  if (h_env->envc == 0 ||",
          "4690:      (h_env->envc_real < h_env->nenv &&",
          "4691:       envs[h_env->envc].env != HTML_DL &&",
          "4692:       envs[h_env->envc].env != HTML_DL_COMPACT)) {",
          "4693:      PUSH_ENV(HTML_DL);",
          "4694:  }",
          "",
          "---------------"
        ],
        "parsetagx.c||parsetagx.c": [
          "File: parsetagx.c -> parsetagx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:  SKIP_BLANKS(q);",
          "128:     }",
          "129:     while (*q && !IS_SPACE(*q) && !(tagname[0] != '/' && *q == '/') &&",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:     tagname[0] = '\\0';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aaa4ef6a72821aea697b0d18c911c352240bedd9",
      "candidate_info": {
        "commit_hash": "aaa4ef6a72821aea697b0d18c911c352240bedd9",
        "repo": "tats/w3m",
        "commit_url": "https://github.com/tats/w3m/commit/aaa4ef6a72821aea697b0d18c911c352240bedd9",
        "files": [
          "file.c"
        ],
        "message": "Mitigate issue #16 found by @kcwu",
        "before_after_code_files": [
          "file.c||file.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "file.c||file.c"
          ],
          "candidate": [
            "file.c||file.c"
          ]
        }
      },
      "candidate_diff": {
        "file.c||file.c": [
          "File: file.c -> file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #define min(a,b)        ((a) > (b) ? (b) : (a))",
          "29: static int frame_source = 0;",
          "31: static char *guess_filename(char *file);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: #define MAX_INPUT_SIZE 80 // TODO - max should be screen line length",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3562: Str",
          "3563: process_input(struct parsed_tag *tag)",
          "3564: {",
          "3566:     char *q, *p, *r, *p2, *s;",
          "3567:     Str tmp = NULL;",
          "3568:     char *qq = \"\";",
          "",
          "[Removed Lines]",
          "3565:     int i, w, v, x, y, z, iw, ih;",
          "",
          "[Added Lines]",
          "3567:     int i = 20, v, x, y, z, iw, ih, size = 20;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3581:     parsedtag_get_value(tag, ATTR_VALUE, &q);",
          "3582:     r = \"\";",
          "3583:     parsedtag_get_value(tag, ATTR_NAME, &r);",
          "3587:     parsedtag_get_value(tag, ATTR_MAXLENGTH, &i);",
          "3588:     p2 = NULL;",
          "3589:     parsedtag_get_value(tag, ATTR_ALT, &p2);",
          "",
          "[Removed Lines]",
          "3584:     w = 20;",
          "3585:     parsedtag_get_value(tag, ATTR_SIZE, &w);",
          "3586:     i = 20;",
          "",
          "[Added Lines]",
          "3586:     parsedtag_get_value(tag, ATTR_SIZE, &size);",
          "3587:     if (size > MAX_INPUT_SIZE)",
          "3588:      size = MAX_INPUT_SIZE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3639:     }",
          "3640:     Strcat(tmp, Sprintf(\"<input_alt hseq=\\\"%d\\\" fid=\\\"%d\\\" type=%s \"",
          "3641:    \"name=\\\"%s\\\" width=%d maxlength=%d value=\\\"%s\\\"\",",
          "3643:     if (x)",
          "3644:  Strcat_charp(tmp, \" checked\");",
          "3645:     if (y)",
          "",
          "[Removed Lines]",
          "3642:    cur_hseq++, cur_form_id, p, html_quote(r), w, i, qq));",
          "",
          "[Added Lines]",
          "3644:    cur_hseq++, cur_form_id, p, html_quote(r), size, i, qq));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3684:  case FORM_INPUT_PASSWORD:",
          "3685:      i = 0;",
          "3686:      if (q) {",
          "3688:       Strcat_char(tmp, '*');",
          "3689:      }",
          "3691:   Strcat_char(tmp, ' ');",
          "3692:      break;",
          "3693:  case FORM_INPUT_TEXT:",
          "3694:  case FORM_INPUT_FILE:",
          "3695:      if (q)",
          "3697:      else {",
          "3699:       Strcat_char(tmp, ' ');",
          "3700:      }",
          "3701:      break;",
          "",
          "[Removed Lines]",
          "3687:   for (; i < qlen && i < w; i++)",
          "3690:      for (; i < w; i++)",
          "3696:   Strcat(tmp, textfieldrep(Strnew_charp(q), w));",
          "3698:   for (i = 0; i < w; i++)",
          "",
          "[Added Lines]",
          "3689:   for (; i < qlen && i < size; i++)",
          "3692:      for (; i < size; i++)",
          "3698:   Strcat(tmp, textfieldrep(Strnew_charp(q), size));",
          "3700:   for (i = 0; i < size; i++)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ffc052b4dfddbb57ae69cfdba254afb8be46eb87",
      "candidate_info": {
        "commit_hash": "ffc052b4dfddbb57ae69cfdba254afb8be46eb87",
        "repo": "tats/w3m",
        "commit_url": "https://github.com/tats/w3m/commit/ffc052b4dfddbb57ae69cfdba254afb8be46eb87",
        "files": [
          "file.c",
          "parsetagx.c"
        ],
        "message": "Fix uninitialised values for <i> and <dd>\n\nBug-Debian: https://github.com/tats/w3m/issues/16\n[CVE-2016-9435] [CVE-2016-9436]\nOrigin: https://anonscm.debian.org/cgit/collab-maint/w3m.git/commit/?id=33509cc81ec5f2ba44eb6fd98bd5c1b5873e46bd",
        "before_after_code_files": [
          "file.c||file.c",
          "parsetagx.c||parsetagx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "file.c||file.c",
            "parsetagx.c||parsetagx.c"
          ],
          "candidate": [
            "file.c||file.c",
            "parsetagx.c||parsetagx.c"
          ]
        }
      },
      "candidate_diff": {
        "file.c||file.c": [
          "File: file.c -> file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4669:     case HTML_DD:",
          "4670:  CLOSE_A;",
          "4671:  CLOSE_DT;",
          "4672:  if (envs[h_env->envc].env == HTML_DL_COMPACT) {",
          "4673:      if (obuf->pos > envs[h_env->envc].indent)",
          "4674:   flushline(h_env, obuf, envs[h_env->envc].indent, 0,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4672:  if (h_env->envc == 0 ||",
          "4673:      (h_env->envc_real < h_env->nenv &&",
          "4674:       envs[h_env->envc].env != HTML_DL &&",
          "4675:       envs[h_env->envc].env != HTML_DL_COMPACT)) {",
          "4676:      PUSH_ENV(HTML_DL);",
          "4677:  }",
          "",
          "---------------"
        ],
        "parsetagx.c||parsetagx.c": [
          "File: parsetagx.c -> parsetagx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:     int i, attr_id = 0, nattr;",
          "123:     q = (*s) + 1;",
          "124:     p = tagname;",
          "125:     if (*q == '/') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:     tagname[0] = '\\0';",
          "",
          "---------------"
        ]
      }
    }
  ]
}