{
  "cve_id": "CVE-2015-1810",
  "cve_desc": "The HudsonPrivateSecurityRealm class in Jenkins before 1.600 and LTS before 1.596.1 does not restrict access to reserved names when using the \"Jenkins' own user database\" setting, which allows remote attackers to gain privileges by creating a reserved name.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "01a087d127d7a871eac02b03143464e2f4c6d48c",
  "patch_info": {
    "commit_hash": "01a087d127d7a871eac02b03143464e2f4c6d48c",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/01a087d127d7a871eac02b03143464e2f4c6d48c",
    "files": [
      "core/src/main/java/hudson/model/User.java",
      "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java",
      "core/src/main/resources/hudson/model/Messages.properties",
      "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java",
      "test/src/test/java/hudson/security/pages/SignupPage.java"
    ],
    "message": "[SECURITY-166] Prevent the creation of anonymous, system or unknown users.\n\nThese users can still be instantiated, as would happen if there is no security and an anonymous user triggers a build -- the anonymous user would correctly be created and added to the User list. This fix merely prevents the saving of that user, and therefore prevents them from logging in.\n\nThere may be some plugins which trigger a build as the SYSTEM user, and that is not prohibited here.\n\nAlso prevent full names of 'anonymous', 'system' or 'uknown'. As discussed on SECURITY-166 this may encumber auditing since full names are used in most places in the UI",
    "before_after_code_files": [
      "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java",
      "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java||core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java",
      "core/src/main/resources/hudson/model/Messages.properties||core/src/main/resources/hudson/model/Messages.properties",
      "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java",
      "test/src/test/java/hudson/security/pages/SignupPage.java||test/src/test/java/hudson/security/pages/SignupPage.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java": [
      "File: core/src/main/java/hudson/model/User.java -> core/src/main/java/hudson/model/User.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "34: import hudson.security.Permission;",
      "35: import hudson.security.SecurityRealm;",
      "36: import hudson.util.FormApply;",
      "37: import hudson.util.RunList;",
      "38: import hudson.util.XStream2;",
      "39: import jenkins.model.Jenkins;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37: import hudson.util.FormValidation;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "46: import org.acegisecurity.providers.anonymous.AnonymousAuthenticationToken;",
      "47: import org.acegisecurity.userdetails.UserDetails;",
      "48: import org.acegisecurity.userdetails.UsernameNotFoundException;",
      "49: import org.springframework.dao.DataAccessException;",
      "50: import org.kohsuke.stapler.StaplerRequest;",
      "51: import org.kohsuke.stapler.StaplerResponse;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "50: import org.kohsuke.accmod.Restricted;",
      "51: import org.kohsuke.accmod.restrictions.NoExternalUse;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "103: @ExportedBean",
      "104: public class User extends AbstractModelObject implements AccessControlled, DescriptorByNameOwner, Saveable, Comparable<User>, ModelObjectWithContextMenu {",
      "106:     private transient final String id;",
      "108:     private volatile String fullName;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "113:     public static final String[] ILLEGAL_PERSISTED_USERNAMES = new String[]{\"anonymous\", \"system\", \"unknown\"};",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "500:         return new File(Jenkins.getInstance().getRootDir(), \"users\");",
      "501:     }",
      "507:         if(BulkChange.contains(this))   return;",
      "508:         getConfigFile().write(this);",
      "509:         SaveableListener.fireOnChange(this, getConfigFile());",
      "",
      "[Removed Lines]",
      "506:     public synchronized void save() throws IOException {",
      "",
      "[Added Lines]",
      "522:     @Restricted(NoExternalUse.class)",
      "523:     public static boolean isIdOrFullnameAllowed(String id) {",
      "524:         for (String invalidId : ILLEGAL_PERSISTED_USERNAMES) {",
      "525:             if (id.equalsIgnoreCase(invalidId))",
      "526:                 return false;",
      "527:         }",
      "528:         return true;",
      "529:     }",
      "534:     public synchronized void save() throws IOException, FormValidation {",
      "535:         if (! isIdOrFullnameAllowed(id)) {",
      "536:             throw FormValidation.error(Messages.User_IllegalUsername(id));",
      "537:         }",
      "538:         if (! isIdOrFullnameAllowed(fullName)) {",
      "539:             throw FormValidation.error(Messages.User_IllegalFullname(fullName));",
      "540:         }",
      "",
      "---------------"
    ],
    "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java||core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java": [
      "File: core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java -> core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "329:         if(si.email==null || !si.email.contains(\"@\"))",
      "330:             si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_InvalidEmailAddress();",
      "332:         if(si.errorMessage!=null) {",
      "334:             req.setAttribute(\"data\",si);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "332:         if (! User.isIdOrFullnameAllowed(si.username)) {",
      "333:             si.errorMessage = hudson.model.Messages.User_IllegalUsername(si.username);",
      "334:         }",
      "336:         if (! User.isIdOrFullnameAllowed(si.fullname)) {",
      "337:             si.errorMessage = hudson.model.Messages.User_IllegalFullname(si.fullname);",
      "338:         }",
      "",
      "---------------"
    ],
    "core/src/main/resources/hudson/model/Messages.properties||core/src/main/resources/hudson/model/Messages.properties": [
      "File: core/src/main/resources/hudson/model/Messages.properties -> core/src/main/resources/hudson/model/Messages.properties",
      "--- Hunk 1 ---",
      "[Context before]",
      "357: Jenkins.CheckDisplayName.DisplayNameNotUniqueWarning=The display name, \"{0}\", is already in use by another job and could cause confusion and delay.",
      "359: Jenkins.NotAllowedName=\"{0}\" is not allowed name",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "361: User.IllegalUsername=\"{0}\" is prohibited as a username for security reasons.",
      "362: User.IllegalFullname=\"{0}\" is prohibited as a full name for security reasons.",
      "",
      "---------------"
    ],
    "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java": [
      "File: test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java -> test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package hudson.security;",
      "3: import com.gargoylesoftware.htmlunit.html.HtmlPage;",
      "4: import hudson.model.User;",
      "5: import hudson.security.pages.SignupPage;",
      "6: import org.junit.Rule;",
      "7: import org.junit.Test;",
      "8: import org.jvnet.hudson.test.JenkinsRule;",
      "10: import java.util.Collections;",
      "12: import static org.hamcrest.Matchers.containsString;",
      "13: import static org.junit.Assert.*;",
      "19: public class HudsonPrivateSecurityRealm2Test {",
      "22:     @Rule",
      "23:     public JenkinsRule rule = new JenkinsRule();",
      "25:     @Test",
      "26:     public void signup() throws Exception {",
      "27:         HudsonPrivateSecurityRealm securityRealm = new HudsonPrivateSecurityRealm(true, false, null);",
      "28:         rule.jenkins.setSecurityRealm(securityRealm);",
      "29:         JenkinsRule.WebClient wc = rule.createWebClient();",
      "30:         SignupPage signup = new SignupPage(wc.goTo(\"signup\"));",
      "31:         signup.enterUsername(\"alice\");",
      "32:         signup.enterPassword(\"alice\");",
      "33:         signup.enterFullName(\"Alice User\");",
      "34:         signup.enterEmail(\"alice@nowhere.com\");",
      "35:         HtmlPage success = signup.submit(rule);",
      "36:         assertThat(success.getElementById(\"main-panel\").getTextContent(), containsString(\"Success\"));",
      "37:         assertThat(success.getElementById(\"login-field\").getTextContent(), containsString(\"Alice User\"));",
      "39:         assertEquals(\"Alice User\", securityRealm.getUser(\"alice\").getDisplayName());",
      "41:     }",
      "44:     @Test",
      "45:     public void anonymousCantSignup() throws Exception {",
      "46:         HudsonPrivateSecurityRealm securityRealm = new HudsonPrivateSecurityRealm(true, false, null);",
      "47:         rule.jenkins.setSecurityRealm(securityRealm);",
      "48:         JenkinsRule.WebClient wc = rule.createWebClient();",
      "49:         SignupPage signup = new SignupPage(wc.goTo(\"signup\"));",
      "50:         signup.enterUsername(\"anonymous\");",
      "51:         signup.enterFullName(\"Bob\");",
      "52:         signup.enterPassword(\"nothing\");",
      "53:         signup.enterEmail(\"noone@nowhere.com\");",
      "54:         signup = new SignupPage(signup.submit(rule));",
      "55:         signup.assertErrorContains(\"prohibited as a username\");",
      "56:         assertNull(User.get(\"anonymous\", false, Collections.emptyMap()));",
      "57:     }",
      "60:     @Test",
      "61:     public void systemCantSignup() throws Exception {",
      "62:         HudsonPrivateSecurityRealm securityRealm = new HudsonPrivateSecurityRealm(true, false, null);",
      "63:         rule.jenkins.setSecurityRealm(securityRealm);",
      "64:         JenkinsRule.WebClient wc = rule.createWebClient();",
      "65:         SignupPage signup = new SignupPage(wc.goTo(\"signup\"));",
      "66:         signup.enterUsername(\"system\");",
      "67:         signup.enterFullName(\"Bob\");",
      "68:         signup.enterPassword(\"nothing\");",
      "69:         signup.enterEmail(\"noone@nowhere.com\");",
      "70:         signup = new SignupPage(signup.submit(rule));",
      "71:         signup.assertErrorContains(\"prohibited as a username\");",
      "72:         assertNull(User.get(\"system\",false, Collections.emptyMap()));",
      "73:     }",
      "79:     @Test",
      "80:     public void fullNameOfUnknownCantSignup() throws Exception {",
      "81:         HudsonPrivateSecurityRealm securityRealm = new HudsonPrivateSecurityRealm(true, false, null);",
      "82:         rule.jenkins.setSecurityRealm(securityRealm);",
      "83:         JenkinsRule.WebClient wc = rule.createWebClient();",
      "84:         SignupPage signup = new SignupPage(wc.goTo(\"signup\"));",
      "85:         signup.enterUsername(\"unknown2\");",
      "86:         signup.enterPassword(\"unknown2\");",
      "87:         signup.enterFullName(\"unknown\");",
      "88:         signup.enterEmail(\"noone@nowhere.com\");",
      "89:         signup = new SignupPage(signup.submit(rule));",
      "90:         signup.assertErrorContains(\"prohibited as a full name\");",
      "91:         assertNull(User.get(\"unknown2\",false, Collections.emptyMap()));",
      "92:     }",
      "93: }",
      "",
      "---------------"
    ],
    "test/src/test/java/hudson/security/pages/SignupPage.java||test/src/test/java/hudson/security/pages/SignupPage.java": [
      "File: test/src/test/java/hudson/security/pages/SignupPage.java -> test/src/test/java/hudson/security/pages/SignupPage.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package hudson.security.pages;",
      "3: import com.gargoylesoftware.htmlunit.html.HtmlForm;",
      "4: import com.gargoylesoftware.htmlunit.html.HtmlPage;",
      "5: import org.jvnet.hudson.test.JenkinsRule;",
      "7: import static org.hamcrest.Matchers.containsString;",
      "8: import static org.junit.Assert.*;",
      "13: public class SignupPage {",
      "15:     public HtmlForm signupForm;",
      "16:     public final HtmlPage signupPage;",
      "18:     public SignupPage(HtmlPage signupPage) {",
      "19:         this.signupPage = signupPage;",
      "21:         assertNotNull(\"The sign up page has a username field.\", this.signupPage.getElementById(\"username\"));",
      "22:         for (HtmlForm signupForm : this.signupPage.getForms()) {",
      "23:             if (signupForm.getInputsByName(\"username\").size() == 0)",
      "24:                 continue;",
      "25:             this.signupForm = signupForm;",
      "26:         }",
      "28:     }",
      "32:     public void enterUsername(String username) {",
      "33:         signupForm.getInputByName(\"username\").setValueAttribute(username);",
      "34:     }",
      "41:     public void enterPassword(String password) {",
      "42:         signupForm.getInputByName(\"password1\").setValueAttribute(password);",
      "43:         signupForm.getInputByName(\"password2\").setValueAttribute(password);",
      "44:     }",
      "46:     public void enterPassword2(String password2) {",
      "47:         signupForm.getInputByName(\"password2\").setValueAttribute(password2);",
      "48:     }",
      "50:     public void enterFullName(String fullName) {",
      "51:         signupForm.getInputByName(\"fullname\").setValueAttribute(fullName);",
      "52:     }",
      "54:     public void enterEmail(String email) {",
      "55:         signupForm.getInputByName(\"email\").setValueAttribute(email);",
      "56:     }",
      "58:     public HtmlPage submit(JenkinsRule rule) throws Exception {",
      "59:         return rule.submit(signupForm);",
      "60:     }",
      "62:     public void assertErrorContains(String msg) {",
      "63:         assertThat(signupForm.getElementById(\"main-panel\").getTextContent(),containsString(msg));",
      "64:     }",
      "65: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "29f59e42ae35693756573e324d0f5bbeefa749bc",
      "candidate_info": {
        "commit_hash": "29f59e42ae35693756573e324d0f5bbeefa749bc",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/29f59e42ae35693756573e324d0f5bbeefa749bc",
        "files": [
          "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
        ],
        "message": "[SECURITY-166] Make UI tests work across Jenkins versions",
        "before_after_code_files": [
          "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
          ],
          "candidate": [
            "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
          ]
        }
      },
      "candidate_diff": {
        "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java": [
          "File: test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java -> test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:         signup.enterEmail(\"alice@nowhere.com\");",
          "58:         HtmlPage success = signup.submit(rule);",
          "59:         assertThat(success.getElementById(\"main-panel\").getTextContent(), containsString(\"Success\"));",
          "62:         assertEquals(\"Alice User\", securityRealm.getUser(\"alice\").getDisplayName());",
          "",
          "[Removed Lines]",
          "60:         assertThat(success.getElementById(\"login-field\").getTextContent(), containsString(\"Alice User\"));",
          "",
          "[Added Lines]",
          "60:         assertThat(success.getAnchorByHref(\"/jenkins/user/alice\").getTextContent(), containsString(\"Alice User\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71f9d5ebf4a46ceb5c906df3bf693cc5cc05f1c7",
      "candidate_info": {
        "commit_hash": "71f9d5ebf4a46ceb5c906df3bf693cc5cc05f1c7",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/71f9d5ebf4a46ceb5c906df3bf693cc5cc05f1c7",
        "files": [
          "core/src/main/java/hudson/model/User.java",
          "core/src/main/java/hudson/security/ACL.java"
        ],
        "message": "[SECURITY-165] Add constants for system-wide usernames",
        "before_after_code_files": [
          "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java",
          "core/src/main/java/hudson/security/ACL.java||core/src/main/java/hudson/security/ACL.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java": [
          "File: core/src/main/java/hudson/model/User.java -> core/src/main/java/hudson/model/User.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "106: @ExportedBean",
          "107: public class User extends AbstractModelObject implements AccessControlled, DescriptorByNameOwner, Saveable, Comparable<User>, ModelObjectWithContextMenu {",
          "114:     private transient final String id;",
          "116:     private volatile String fullName;",
          "",
          "[Removed Lines]",
          "113:     private static final String[] ILLEGAL_PERSISTED_USERNAMES = new String[]{\"anonymous\", \"system\", \"unknown\"};",
          "",
          "[Added Lines]",
          "112:     private static final String UKNOWN_USERNAME = \"unknown\";",
          "118:     private static final String[] ILLEGAL_PERSISTED_USERNAMES = new String[]{ACL.ANONYMOUS_USERNAME,",
          "119:             ACL.SYSTEM_USERNAME, UKNOWN_USERNAME};",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "293:     public static @Nonnull User getUnknown() {",
          "295:     }",
          "",
          "[Removed Lines]",
          "294:         return get(\"unknown\");",
          "",
          "[Added Lines]",
          "300:         return get(UKNOWN_USERNAME);",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/security/ACL.java||core/src/main/java/hudson/security/ACL.java": [
          "File: core/src/main/java/hudson/security/ACL.java -> core/src/main/java/hudson/security/ACL.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: import org.acegisecurity.providers.UsernamePasswordAuthenticationToken;",
          "33: import org.acegisecurity.acls.sid.PrincipalSid;",
          "34: import org.acegisecurity.acls.sid.Sid;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: import org.kohsuke.accmod.Restricted;",
          "36: import org.kohsuke.accmod.restrictions.NoExternalUse;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:         }",
          "93:     };",
          "103:     protected static final Sid[] AUTOMATIC_SIDS = new Sid[]{EVERYONE,ANONYMOUS};",
          "",
          "[Removed Lines]",
          "101:     public static final Sid ANONYMOUS = new PrincipalSid(\"anonymous\");",
          "111:     public static final Authentication SYSTEM = new UsernamePasswordAuthenticationToken(\"SYSTEM\",\"SYSTEM\");",
          "",
          "[Added Lines]",
          "100:     @Restricted(NoExternalUse.class)",
          "101:     public static final String ANONYMOUS_USERNAME = \"anonymous\";",
          "108:     public static final Sid ANONYMOUS = new PrincipalSid(ANONYMOUS_USERNAME);",
          "115:     @Restricted(NoExternalUse.class)",
          "116:     public static final String SYSTEM_USERNAME = \"SYSTEM\";",
          "124:     public static final Authentication SYSTEM = new UsernamePasswordAuthenticationToken(SYSTEM_USERNAME,\"SYSTEM\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "09c04e3b666ef0832201d4433326b35b4bf84991",
      "candidate_info": {
        "commit_hash": "09c04e3b666ef0832201d4433326b35b4bf84991",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/09c04e3b666ef0832201d4433326b35b4bf84991",
        "files": [
          "core/src/main/java/hudson/model/User.java",
          "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
        ],
        "message": "Resolve feedback on SECURITY-165",
        "before_after_code_files": [
          "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java",
          "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java",
            "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java",
            "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java": [
          "File: core/src/main/java/hudson/model/User.java -> core/src/main/java/hudson/model/User.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     private transient final String id;",
          "116:     private volatile String fullName;",
          "",
          "[Removed Lines]",
          "113:     public static final String[] ILLEGAL_PERSISTED_USERNAMES = new String[]{\"anonymous\", \"system\", \"unknown\"};",
          "",
          "[Added Lines]",
          "113:     private static final String[] ILLEGAL_PERSISTED_USERNAMES = new String[]{\"anonymous\", \"system\", \"unknown\"};",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java": [
          "File: test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java -> test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
        ]
      }
    },
    {
      "candidate_hash": "10fbe7f1cb4aa82020aae394677765065d4d8cad",
      "candidate_info": {
        "commit_hash": "10fbe7f1cb4aa82020aae394677765065d4d8cad",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/10fbe7f1cb4aa82020aae394677765065d4d8cad",
        "files": [
          "core/src/main/java/hudson/model/User.java",
          "core/src/test/java/jenkins/xml/XMLUtilsTest.java",
          "test/src/test/java/hudson/model/AbstractItemSecurityTest.java",
          "test/src/test/java/hudson/model/DownloadService2Test.java",
          "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
        ],
        "message": "Miscellaneous updates in preparation for merge to trunk.",
        "before_after_code_files": [
          "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java",
          "core/src/test/java/jenkins/xml/XMLUtilsTest.java||core/src/test/java/jenkins/xml/XMLUtilsTest.java",
          "test/src/test/java/hudson/model/AbstractItemSecurityTest.java||test/src/test/java/hudson/model/AbstractItemSecurityTest.java",
          "test/src/test/java/hudson/model/DownloadService2Test.java||test/src/test/java/hudson/model/DownloadService2Test.java",
          "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java",
            "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java",
            "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java": [
          "File: core/src/main/java/hudson/model/User.java -> core/src/main/java/hudson/model/User.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: import org.acegisecurity.providers.anonymous.AnonymousAuthenticationToken;",
          "52: import org.acegisecurity.userdetails.UserDetails;",
          "53: import org.acegisecurity.userdetails.UsernameNotFoundException;",
          "56: import org.springframework.dao.DataAccessException;",
          "57: import org.kohsuke.stapler.StaplerRequest;",
          "58: import org.kohsuke.stapler.StaplerResponse;",
          "",
          "[Removed Lines]",
          "54: import org.kohsuke.accmod.Restricted;",
          "55: import org.kohsuke.accmod.restrictions.NoExternalUse;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "665:     public static boolean isIdOrFullnameAllowed(String id) {",
          "666:         for (String invalidId : ILLEGAL_PERSISTED_USERNAMES) {",
          "667:             if (id.equalsIgnoreCase(invalidId))",
          "",
          "[Removed Lines]",
          "664:     @Restricted(NoExternalUse.class)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "core/src/test/java/jenkins/xml/XMLUtilsTest.java||core/src/test/java/jenkins/xml/XMLUtilsTest.java": [
          "File: core/src/test/java/jenkins/xml/XMLUtilsTest.java -> core/src/test/java/jenkins/xml/XMLUtilsTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import jenkins.util.xml.XMLUtils;",
          "30: import org.junit.Test;",
          "32: import java.io.StringReader;",
          "",
          "[Removed Lines]",
          "29: import org.apache.commons.io.output.NullOutputStream;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: import static org.hamcrest.core.StringContains.containsString;",
          "39: import static org.junit.Assert.assertThat;",
          "42: public class XMLUtilsTest {",
          "44:     @Test()",
          "46:     public void testSafeTransformDoesNotProcessForeignResources() throws Exception {",
          "47:         final String xml = \"<?xml version='1.0' encoding='UTF-8'?>\\n\" +",
          "48:                 \"<!DOCTYPE project[\\n\" +",
          "",
          "[Removed Lines]",
          "40: import static org.junit.Assert.fail;",
          "",
          "[Added Lines]",
          "39: import org.jvnet.hudson.test.Issue;",
          "43:     @Issue(\"SECURITY-167\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74:     }",
          "77:     @Test()",
          "79:     public void testUpdateByXmlIDoesNotFail() throws Exception {",
          "80:         final String xml = \"<?xml version='1.0' encoding='UTF-8'?>\\n\" +",
          "81:                 \"<project>\\n\" +",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     @Issue(\"SECURITY-167\")",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/model/AbstractItemSecurityTest.java||test/src/test/java/hudson/model/AbstractItemSecurityTest.java": [
          "File: test/src/test/java/hudson/model/AbstractItemSecurityTest.java -> test/src/test/java/hudson/model/AbstractItemSecurityTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: package hudson.model;",
          "28: import org.junit.Rule;",
          "29: import org.junit.Test;",
          "30: import org.jvnet.hudson.test.JenkinsRule;",
          "39: import javax.xml.transform.stream.StreamSource;",
          "41: import java.io.IOException;",
          "42: import java.io.StringReader;",
          "",
          "[Removed Lines]",
          "27: import hudson.model.FreeStyleProject;",
          "31: import org.w3c.dom.Document;",
          "32: import org.w3c.dom.Node;",
          "33: import org.w3c.dom.NodeList;",
          "34: import org.w3c.dom.Text;",
          "36: import javax.xml.parsers.DocumentBuilder;",
          "37: import javax.xml.parsers.DocumentBuilderFactory;",
          "38: import javax.xml.transform.dom.DOMSource;",
          "40: import java.io.ByteArrayInputStream;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47: import static org.hamcrest.core.StringContains.containsString;",
          "48: import static org.hamcrest.text.IsEmptyString.isEmptyOrNullString;",
          "49: import static org.junit.Assert.assertThat;",
          "52: public class AbstractItemSecurityTest {",
          "54:     @Rule",
          "55:     public JenkinsRule jenkinsRule = new JenkinsRule();",
          "57:     @Test()",
          "59:     public void testUpdateByXmlIDoesNotProcessForeignResources() throws Exception {",
          "60:         final String xml = \"<?xml version='1.0' encoding='UTF-8'?>\\n\" +",
          "61:                 \"<!DOCTYPE project[\\n\" +",
          "",
          "[Removed Lines]",
          "50: import static org.junit.Assert.fail;",
          "",
          "[Added Lines]",
          "40: import org.jvnet.hudson.test.Issue;",
          "47:     @Issue(\"SECURITY-167\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:     }",
          "91:     @Test()",
          "93:     public void testhamyXmlIDoesNotFail() throws Exception {",
          "94:         final String xml = \"<?xml version='1.0' encoding='UTF-8'?>\\n\" +",
          "95:                 \"<project>\\n\" +",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:     @Issue(\"SECURITY-167\")",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/model/DownloadService2Test.java||test/src/test/java/hudson/model/DownloadService2Test.java": [
          "File: test/src/test/java/hudson/model/DownloadService2Test.java -> test/src/test/java/hudson/model/DownloadService2Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: import org.junit.Test;",
          "33: import static org.junit.Assert.*;",
          "34: import org.junit.Rule;",
          "35: import org.jvnet.hudson.test.JenkinsRule;",
          "36: import org.jvnet.hudson.test.WithoutJenkins;",
          "39: public class DownloadService2Test {",
          "41:     @Rule public JenkinsRule r = new JenkinsRule();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: import org.jvnet.hudson.test.Issue;",
          "39: @Issue(\"SECURITY-163\")",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java": [
          "File: test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java -> test/src/test/java/hudson/security/HudsonPrivateSecurityRealm2Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: import static org.hamcrest.Matchers.containsString;",
          "13: import static org.junit.Assert.*;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: import org.jvnet.hudson.test.Issue;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:     }",
          "44:     @Test",
          "45:     public void anonymousCantSignup() throws Exception {",
          "46:         HudsonPrivateSecurityRealm securityRealm = new HudsonPrivateSecurityRealm(true, false, null);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     @Issue(\"SECURITY-166\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "56:         assertNull(User.get(\"anonymous\", false, Collections.emptyMap()));",
          "57:     }",
          "60:     @Test",
          "61:     public void systemCantSignup() throws Exception {",
          "62:         HudsonPrivateSecurityRealm securityRealm = new HudsonPrivateSecurityRealm(true, false, null);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:     @Issue(\"SECURITY-166\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "79:     @Test",
          "80:     public void fullNameOfUnknownCantSignup() throws Exception {",
          "81:         HudsonPrivateSecurityRealm securityRealm = new HudsonPrivateSecurityRealm(true, false, null);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:     @Issue(\"SECURITY-166\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f189af856bddaa6db678e5ac4350bd285d2edfd6",
      "candidate_info": {
        "commit_hash": "f189af856bddaa6db678e5ac4350bd285d2edfd6",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f189af856bddaa6db678e5ac4350bd285d2edfd6",
        "files": [
          "test/src/test/java/hudson/security/pages/SignupPage.java"
        ],
        "message": "SignupPage compiling against HtmlUnit 2.17",
        "before_after_code_files": [
          "test/src/test/java/hudson/security/pages/SignupPage.java||test/src/test/java/hudson/security/pages/SignupPage.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/src/test/java/hudson/security/pages/SignupPage.java||test/src/test/java/hudson/security/pages/SignupPage.java"
          ],
          "candidate": [
            "test/src/test/java/hudson/security/pages/SignupPage.java||test/src/test/java/hudson/security/pages/SignupPage.java"
          ]
        }
      },
      "candidate_diff": {
        "test/src/test/java/hudson/security/pages/SignupPage.java||test/src/test/java/hudson/security/pages/SignupPage.java": [
          "File: test/src/test/java/hudson/security/pages/SignupPage.java -> test/src/test/java/hudson/security/pages/SignupPage.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:     }",
          "62:     public void assertErrorContains(String msg) {",
          "64:     }",
          "65: }",
          "",
          "[Removed Lines]",
          "63:         assertThat(signupForm.getElementById(\"main-panel\").getTextContent(),containsString(msg));",
          "",
          "[Added Lines]",
          "63:         assertThat(signupForm.getPage().getElementById(\"main-panel\").getTextContent(),containsString(msg));",
          "",
          "---------------"
        ]
      }
    }
  ]
}