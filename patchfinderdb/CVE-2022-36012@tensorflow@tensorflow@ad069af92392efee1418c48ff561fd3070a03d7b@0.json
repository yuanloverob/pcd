{
  "cve_id": "CVE-2022-36012",
  "cve_desc": "TensorFlow is an open source platform for machine learning. When `mlir::tfg::ConvertGenericFunctionToFunctionDef` is given empty function attributes, it crashes. We have patched the issue in GitHub commit ad069af92392efee1418c48ff561fd3070a03d7b. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "ad069af92392efee1418c48ff561fd3070a03d7b",
  "patch_info": {
    "commit_hash": "ad069af92392efee1418c48ff561fd3070a03d7b",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/ad069af92392efee1418c48ff561fd3070a03d7b",
    "files": [
      "tensorflow/core/ir/importexport/functiondef_import.cc",
      "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
      "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
      "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt"
    ],
    "message": "[tfg][functiondef_import] Error on empty edge names\n\nReturn an error in the generic function importer if an edge name is empty.\n\nPiperOrigin-RevId: 449953062",
    "before_after_code_files": [
      "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc",
      "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
      "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
      "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt"
    ]
  },
  "patch_diff": {
    "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc": [
      "File: tensorflow/core/ir/importexport/functiondef_import.cc -> tensorflow/core/ir/importexport/functiondef_import.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "33: #include \"tensorflow/core/ir/ops.h\"",
      "34: #include \"tensorflow/core/platform/errors.h\"",
      "35: #include \"tensorflow/core/platform/status.h\"",
      "37: using tensorflow::AttrValue;",
      "38: using tensorflow::FunctionDef;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "36: #include \"tensorflow/core/platform/statusor.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "40: using tensorflow::OpDef;",
      "41: using tensorflow::OpDef_AttrDef;",
      "42: using tensorflow::Status;",
      "43: using tensorflow::errors::InvalidArgument;",
      "44: using tensorflow::protobuf::RepeatedPtrField;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "44: using tensorflow::StatusOr;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "166:     if (node.op().empty()) return InvalidArgument(\"empty op type\");",
      "167:     OperationState state(unknown_loc, absl::StrCat(\"tfg.\", node.op()));",
      "170:       state.operands.push_back(",
      "171:           value_manager.GetValueOrCreatePlaceholder(input));",
      "174:     state.types.push_back(placeholder_ty);",
      "",
      "[Removed Lines]",
      "169:     for (const std::string& input : node.input())",
      "",
      "[Added Lines]",
      "171:     for (const std::string& input : node.input()) {",
      "172:       if (input.empty())",
      "173:         return InvalidArgument(\"Node '\", node.name(), \"' has an empty input\");",
      "176:     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "461:                               Value());",
      "462:   for (const auto& ret_val : func.ret()) {",
      "463:     auto position = output_name_to_position.find(ret_val.first);",
      "465:       return InvalidArgument(",
      "466:           \"Can't import function, returned value references unknown output \"",
      "467:           \"argument \",",
      "468:           ret_val.first);",
      "469:     ret_vals[position->second] =",
      "470:         value_manager.GetValueOrCreatePlaceholder(ret_val.second);",
      "471:   }",
      "472:   for (const auto& ret_val : func.control_ret()) {",
      "473:     auto position = control_output_to_position.find(ret_val.first);",
      "475:       return InvalidArgument(",
      "476:           \"Can't import function, returned value references unknown output \"",
      "477:           \"argument \",",
      "478:           ret_val.first);",
      "479:     Value result = value_manager.GetValueOrCreatePlaceholder(",
      "480:         (Twine(\"^\") + ret_val.second).str());",
      "481:     if (!result.getType().isa<ControlType>())",
      "",
      "[Removed Lines]",
      "464:     if (position == output_name_to_position.end())",
      "474:     if (position == control_output_to_position.end())",
      "",
      "[Added Lines]",
      "469:     if (position == output_name_to_position.end()) {",
      "474:     }",
      "475:     if (ret_val.second.empty()) {",
      "476:       return InvalidArgument(\"Function '\", func.signature().name(),",
      "477:                              \"' has empty result name\");",
      "478:     }",
      "484:     if (position == control_output_to_position.end()) {",
      "489:     }",
      "490:     if (ret_val.second.empty()) {",
      "491:       return InvalidArgument(\"Function '\", func.signature().name(),",
      "492:                              \"' has empty control result name\");",
      "493:     }",
      "",
      "---------------"
    ],
    "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt": [
      "File: tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
      "3: # CHECK: Function 'foo' has empty control result name",
      "5: library {",
      "6:   function {",
      "7:     signature {",
      "8:       name: \"foo\"",
      "9:       control_output: \"output\"",
      "10:     }",
      "11:     node_def {",
      "12:       name: \"y\"",
      "13:       op: \"NoOp\"",
      "14:       attr {",
      "15:         key: \"T\"",
      "16:         value {",
      "17:           placeholder: \"T\"",
      "18:         }",
      "19:       }",
      "20:     }",
      "21:     control_ret {",
      "22:       key: \"output\"",
      "23:       value: \"\"",
      "24:     }",
      "25:   }",
      "26: }",
      "",
      "---------------"
    ],
    "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt": [
      "File: tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
      "3: # CHECK: Node 'y' has an empty input",
      "5: library {",
      "6:   function {",
      "7:     signature {",
      "8:       name: \"foo\"",
      "9:     }",
      "10:     node_def {",
      "11:       name: \"y\"",
      "12:       input: \"\"",
      "13:       op: \"Identity\"",
      "14:       attr {",
      "15:         key: \"T\"",
      "16:         value {",
      "17:           placeholder: \"T\"",
      "18:         }",
      "19:       }",
      "20:     }",
      "21:   }",
      "22: }",
      "",
      "---------------"
    ],
    "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt": [
      "File: tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
      "3: # CHECK: Function 'foo' has empty result name",
      "5: library {",
      "6:   function {",
      "7:     signature {",
      "8:       name: \"foo\"",
      "9:       output_arg {",
      "10:         name: \"output\"",
      "11:         type: DT_INT32",
      "12:       }",
      "13:     }",
      "14:     node_def {",
      "15:       name: \"y\"",
      "16:       op: \"NoOp\"",
      "17:       attr {",
      "18:         key: \"T\"",
      "19:         value {",
      "20:           placeholder: \"T\"",
      "21:         }",
      "22:       }",
      "23:     }",
      "24:     ret {",
      "25:       key: \"output\"",
      "26:       value: \"\"",
      "27:     }",
      "28:   }",
      "29: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9faf68af3605c6f24783e49412f19a930badd36b",
      "candidate_info": {
        "commit_hash": "9faf68af3605c6f24783e49412f19a930badd36b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/9faf68af3605c6f24783e49412f19a930badd36b",
        "files": [
          "tensorflow/core/ir/importexport/functiondef_import.cc",
          "tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_control_result.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_input.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_result.pbtxt"
        ],
        "message": "[tfg][functiondef_import] Error on empty edge names\n\nReturn an error in the generic function importer if an edge name is empty.\n\nPiperOrigin-RevId: 449953062",
        "before_after_code_files": [
          "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc",
          "tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_control_result.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_input.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_result.pbtxt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc"
          ],
          "candidate": [
            "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc": [
          "File: tensorflow/core/ir/importexport/functiondef_import.cc -> tensorflow/core/ir/importexport/functiondef_import.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: #include \"tensorflow/core/platform/protobuf.h\"",
          "37: #include \"tensorflow/core/platform/status.h\"",
          "38: #include \"tensorflow/core/protobuf/graph_debug_info.pb.h\"",
          "40: using tensorflow::AttrValue;",
          "41: using tensorflow::FunctionDef;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: #include \"tensorflow/core/platform/statusor.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: using tensorflow::OpDef;",
          "44: using tensorflow::OpDef_AttrDef;",
          "45: using tensorflow::Status;",
          "46: using tensorflow::errors::InvalidArgument;",
          "47: using tensorflow::protobuf::RepeatedPtrField;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: using tensorflow::StatusOr;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "168:     if (node.op().empty()) return InvalidArgument(\"empty op type\");",
          "169:     OperationState state(unknown_loc, absl::StrCat(\"tfg.\", node.op()));",
          "172:       state.operands.push_back(",
          "173:           value_manager.GetValueOrCreatePlaceholder(input));",
          "176:     state.types.push_back(placeholder_ty);",
          "",
          "[Removed Lines]",
          "171:     for (const std::string& input : node.input())",
          "",
          "[Added Lines]",
          "173:     for (const std::string& input : node.input()) {",
          "174:       if (input.empty())",
          "175:         return InvalidArgument(\"Node '\", node.name(), \"' has an empty input\");",
          "178:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "448:   ret_vals.resize(func.ret_size() + func.control_ret_size(), Value());",
          "449:   for (const auto& ret_val : func.ret()) {",
          "450:     auto position = output_name_to_position.find(ret_val.first);",
          "452:       return InvalidArgument(",
          "453:           \"Can't import function, returned value references unknown output \"",
          "454:           \"argument \",",
          "455:           ret_val.first);",
          "456:     ret_vals[position->second] =",
          "457:         value_manager.GetValueOrCreatePlaceholder(ret_val.second);",
          "458:   }",
          "459:   for (const auto& ret_val : func.control_ret()) {",
          "460:     auto position = control_output_to_position.find(ret_val.first);",
          "462:       return InvalidArgument(",
          "463:           \"Can't import function, returned value references unknown output \"",
          "464:           \"argument \",",
          "465:           ret_val.first);",
          "466:     Value result = value_manager.GetValueOrCreatePlaceholder(",
          "467:         (Twine(\"^\") + ret_val.second).str());",
          "468:     if (!result.getType().isa<ControlType>())",
          "",
          "[Removed Lines]",
          "451:     if (position == output_name_to_position.end())",
          "461:     if (position == control_output_to_position.end())",
          "",
          "[Added Lines]",
          "456:     if (position == output_name_to_position.end()) {",
          "461:     }",
          "462:     if (ret_val.second.empty()) {",
          "463:       return InvalidArgument(\"Function '\", func.signature().name(),",
          "464:                              \"' has empty result name\");",
          "465:     }",
          "471:     if (position == control_output_to_position.end()) {",
          "476:     }",
          "477:     if (ret_val.second.empty()) {",
          "478:       return InvalidArgument(\"Function '\", func.signature().name(),",
          "479:                              \"' has empty control result name\");",
          "480:     }",
          "",
          "---------------"
        ],
        "tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_control_result.pbtxt": [
          "File: tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_control_result.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_control_result.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
          "3: # CHECK: Function 'foo' has empty control result name",
          "5: library {",
          "6:   function {",
          "7:     signature {",
          "8:       name: \"foo\"",
          "9:       control_output: \"output\"",
          "10:     }",
          "11:     node_def {",
          "12:       name: \"y\"",
          "13:       op: \"NoOp\"",
          "14:       attr {",
          "15:         key: \"T\"",
          "16:         value {",
          "17:           placeholder: \"T\"",
          "18:         }",
          "19:       }",
          "20:     }",
          "21:     control_ret {",
          "22:       key: \"output\"",
          "23:       value: \"\"",
          "24:     }",
          "25:   }",
          "26: }",
          "",
          "---------------"
        ],
        "tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_input.pbtxt": [
          "File: tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_input.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_input.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
          "3: # CHECK: Node 'y' has an empty input",
          "5: library {",
          "6:   function {",
          "7:     signature {",
          "8:       name: \"foo\"",
          "9:     }",
          "10:     node_def {",
          "11:       name: \"y\"",
          "12:       input: \"\"",
          "13:       op: \"Identity\"",
          "14:       attr {",
          "15:         key: \"T\"",
          "16:         value {",
          "17:           placeholder: \"T\"",
          "18:         }",
          "19:       }",
          "20:     }",
          "21:   }",
          "22: }",
          "",
          "---------------"
        ],
        "tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_result.pbtxt": [
          "File: tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_result.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef-to-mlir/invalid_generic_func_with_empty_result.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
          "3: # CHECK: Function 'foo' has empty result name",
          "5: library {",
          "6:   function {",
          "7:     signature {",
          "8:       name: \"foo\"",
          "9:       output_arg {",
          "10:         name: \"output\"",
          "11:         type: DT_INT32",
          "12:       }",
          "13:     }",
          "14:     node_def {",
          "15:       name: \"y\"",
          "16:       op: \"NoOp\"",
          "17:       attr {",
          "18:         key: \"T\"",
          "19:         value {",
          "20:           placeholder: \"T\"",
          "21:         }",
          "22:       }",
          "23:     }",
          "24:     ret {",
          "25:       key: \"output\"",
          "26:       value: \"\"",
          "27:     }",
          "28:   }",
          "29: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "74daac56d4a2c0def9484adb3f01dd09dcd16993",
      "candidate_info": {
        "commit_hash": "74daac56d4a2c0def9484adb3f01dd09dcd16993",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/74daac56d4a2c0def9484adb3f01dd09dcd16993",
        "files": [
          "tensorflow/core/ir/importexport/functiondef_import.cc",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt"
        ],
        "message": "[tfg][functiondef_import] Error on empty edge names\n\nReturn an error in the generic function importer if an edge name is empty.\n\nPiperOrigin-RevId: 449953062",
        "before_after_code_files": [
          "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt"
          ],
          "candidate": [
            "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc": [
          "File: tensorflow/core/ir/importexport/functiondef_import.cc -> tensorflow/core/ir/importexport/functiondef_import.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: #include \"tensorflow/core/platform/protobuf.h\"",
          "39: #include \"tensorflow/core/platform/status.h\"",
          "40: #include \"tensorflow/core/protobuf/graph_debug_info.pb.h\"",
          "42: using tensorflow::AttrValue;",
          "43: using tensorflow::FunctionDef;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: #include \"tensorflow/core/platform/statusor.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: using tensorflow::OpDef;",
          "46: using tensorflow::OpDef_AttrDef;",
          "47: using tensorflow::Status;",
          "48: using tensorflow::errors::InvalidArgument;",
          "49: using tensorflow::protobuf::RepeatedPtrField;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: using tensorflow::StatusOr;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "171:     if (node.op().empty()) return InvalidArgument(\"empty op type\");",
          "172:     OperationState state(unknown_loc, absl::StrCat(\"tfg.\", node.op()));",
          "175:       state.operands.push_back(",
          "176:           value_manager.GetValueOrCreatePlaceholder(input));",
          "179:     state.types.push_back(placeholder_ty);",
          "",
          "[Removed Lines]",
          "174:     for (const std::string& input : node.input())",
          "",
          "[Added Lines]",
          "176:     for (const std::string& input : node.input()) {",
          "177:       if (input.empty())",
          "178:         return InvalidArgument(\"Node '\", node.name(), \"' has an empty input\");",
          "181:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "465:                               Value());",
          "466:   for (const auto& ret_val : func.ret()) {",
          "467:     auto position = output_name_to_position.find(ret_val.first);",
          "469:       return InvalidArgument(",
          "470:           \"Can't import function, returned value references unknown output \"",
          "471:           \"argument \",",
          "472:           ret_val.first);",
          "473:     ret_vals[position->second] =",
          "474:         value_manager.GetValueOrCreatePlaceholder(ret_val.second);",
          "475:   }",
          "476:   for (const auto& ret_val : func.control_ret()) {",
          "477:     auto position = control_output_to_position.find(ret_val.first);",
          "479:       return InvalidArgument(",
          "480:           \"Can't import function, returned value references unknown output \"",
          "481:           \"argument \",",
          "482:           ret_val.first);",
          "483:     Value result = value_manager.GetValueOrCreatePlaceholder(",
          "484:         (Twine(\"^\") + ret_val.second).str());",
          "485:     if (!result.getType().isa<ControlType>())",
          "",
          "[Removed Lines]",
          "468:     if (position == output_name_to_position.end())",
          "478:     if (position == control_output_to_position.end())",
          "",
          "[Added Lines]",
          "473:     if (position == output_name_to_position.end()) {",
          "478:     }",
          "479:     if (ret_val.second.empty()) {",
          "480:       return InvalidArgument(\"Function '\", func.signature().name(),",
          "481:                              \"' has empty result name\");",
          "482:     }",
          "488:     if (position == control_output_to_position.end()) {",
          "493:     }",
          "494:     if (ret_val.second.empty()) {",
          "495:       return InvalidArgument(\"Function '\", func.signature().name(),",
          "496:                              \"' has empty control result name\");",
          "497:     }",
          "",
          "---------------"
        ],
        "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt": [
          "File: tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
          "3: # CHECK: Function 'foo' has empty control result name",
          "5: library {",
          "6:   function {",
          "7:     signature {",
          "8:       name: \"foo\"",
          "9:       control_output: \"output\"",
          "10:     }",
          "11:     node_def {",
          "12:       name: \"y\"",
          "13:       op: \"NoOp\"",
          "14:       attr {",
          "15:         key: \"T\"",
          "16:         value {",
          "17:           placeholder: \"T\"",
          "18:         }",
          "19:       }",
          "20:     }",
          "21:     control_ret {",
          "22:       key: \"output\"",
          "23:       value: \"\"",
          "24:     }",
          "25:   }",
          "26: }",
          "",
          "---------------"
        ],
        "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt": [
          "File: tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
          "3: # CHECK: Node 'y' has an empty input",
          "5: library {",
          "6:   function {",
          "7:     signature {",
          "8:       name: \"foo\"",
          "9:     }",
          "10:     node_def {",
          "11:       name: \"y\"",
          "12:       input: \"\"",
          "13:       op: \"Identity\"",
          "14:       attr {",
          "15:         key: \"T\"",
          "16:         value {",
          "17:           placeholder: \"T\"",
          "18:         }",
          "19:       }",
          "20:     }",
          "21:   }",
          "22: }",
          "",
          "---------------"
        ],
        "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt": [
          "File: tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
          "3: # CHECK: Function 'foo' has empty result name",
          "5: library {",
          "6:   function {",
          "7:     signature {",
          "8:       name: \"foo\"",
          "9:       output_arg {",
          "10:         name: \"output\"",
          "11:         type: DT_INT32",
          "12:       }",
          "13:     }",
          "14:     node_def {",
          "15:       name: \"y\"",
          "16:       op: \"NoOp\"",
          "17:       attr {",
          "18:         key: \"T\"",
          "19:         value {",
          "20:           placeholder: \"T\"",
          "21:         }",
          "22:       }",
          "23:     }",
          "24:     ret {",
          "25:       key: \"output\"",
          "26:       value: \"\"",
          "27:     }",
          "28:   }",
          "29: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4793245ae176f1e79ac1c6d011ffc4e84f660fc6",
      "candidate_info": {
        "commit_hash": "4793245ae176f1e79ac1c6d011ffc4e84f660fc6",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/4793245ae176f1e79ac1c6d011ffc4e84f660fc6",
        "files": [
          "tensorflow/core/ir/importexport/functiondef_import.cc",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt"
        ],
        "message": "[tfg][functiondef_import] Error on empty edge names\n\nReturn an error in the generic function importer if an edge name is empty.\n\nPiperOrigin-RevId: 449953062",
        "before_after_code_files": [
          "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
          "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt"
          ],
          "candidate": [
            "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
            "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ir/importexport/functiondef_import.cc||tensorflow/core/ir/importexport/functiondef_import.cc": [
          "File: tensorflow/core/ir/importexport/functiondef_import.cc -> tensorflow/core/ir/importexport/functiondef_import.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: #include \"tensorflow/core/platform/protobuf.h\"",
          "37: #include \"tensorflow/core/platform/status.h\"",
          "38: #include \"tensorflow/core/protobuf/graph_debug_info.pb.h\"",
          "40: using tensorflow::AttrValue;",
          "41: using tensorflow::FunctionDef;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: #include \"tensorflow/core/platform/statusor.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: using tensorflow::OpDef;",
          "44: using tensorflow::OpDef_AttrDef;",
          "45: using tensorflow::Status;",
          "46: using tensorflow::errors::InvalidArgument;",
          "47: using tensorflow::protobuf::RepeatedPtrField;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: using tensorflow::StatusOr;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "168:     if (node.op().empty()) return InvalidArgument(\"empty op type\");",
          "169:     OperationState state(unknown_loc, absl::StrCat(\"tfg.\", node.op()));",
          "172:       state.operands.push_back(",
          "173:           value_manager.GetValueOrCreatePlaceholder(input));",
          "176:     state.types.push_back(placeholder_ty);",
          "",
          "[Removed Lines]",
          "171:     for (const std::string& input : node.input())",
          "",
          "[Added Lines]",
          "173:     for (const std::string& input : node.input()) {",
          "174:       if (input.empty())",
          "175:         return InvalidArgument(\"Node '\", node.name(), \"' has an empty input\");",
          "178:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "450:   ret_vals.resize(func.ret_size() + func.control_ret_size(), Value());",
          "451:   for (const auto& ret_val : func.ret()) {",
          "452:     auto position = output_name_to_position.find(ret_val.first);",
          "454:       return InvalidArgument(",
          "455:           \"Can't import function, returned value references unknown output \"",
          "456:           \"argument \",",
          "457:           ret_val.first);",
          "458:     ret_vals[position->second] =",
          "459:         value_manager.GetValueOrCreatePlaceholder(ret_val.second);",
          "460:   }",
          "461:   for (const auto& ret_val : func.control_ret()) {",
          "462:     auto position = control_output_to_position.find(ret_val.first);",
          "464:       return InvalidArgument(",
          "465:           \"Can't import function, returned value references unknown output \"",
          "466:           \"argument \",",
          "467:           ret_val.first);",
          "468:     Value result = value_manager.GetValueOrCreatePlaceholder(",
          "469:         (Twine(\"^\") + ret_val.second).str());",
          "470:     if (!result.getType().isa<ControlType>())",
          "",
          "[Removed Lines]",
          "453:     if (position == output_name_to_position.end())",
          "463:     if (position == control_output_to_position.end())",
          "",
          "[Added Lines]",
          "458:     if (position == output_name_to_position.end()) {",
          "463:     }",
          "464:     if (ret_val.second.empty()) {",
          "465:       return InvalidArgument(\"Function '\", func.signature().name(),",
          "466:                              \"' has empty result name\");",
          "467:     }",
          "473:     if (position == control_output_to_position.end()) {",
          "478:     }",
          "479:     if (ret_val.second.empty()) {",
          "480:       return InvalidArgument(\"Function '\", func.signature().name(),",
          "481:                              \"' has empty control result name\");",
          "482:     }",
          "",
          "---------------"
        ],
        "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt": [
          "File: tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_control_result.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
          "3: # CHECK: Function 'foo' has empty control result name",
          "5: library {",
          "6:   function {",
          "7:     signature {",
          "8:       name: \"foo\"",
          "9:       control_output: \"output\"",
          "10:     }",
          "11:     node_def {",
          "12:       name: \"y\"",
          "13:       op: \"NoOp\"",
          "14:       attr {",
          "15:         key: \"T\"",
          "16:         value {",
          "17:           placeholder: \"T\"",
          "18:         }",
          "19:       }",
          "20:     }",
          "21:     control_ret {",
          "22:       key: \"output\"",
          "23:       value: \"\"",
          "24:     }",
          "25:   }",
          "26: }",
          "",
          "---------------"
        ],
        "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt": [
          "File: tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_input.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
          "3: # CHECK: Node 'y' has an empty input",
          "5: library {",
          "6:   function {",
          "7:     signature {",
          "8:       name: \"foo\"",
          "9:     }",
          "10:     node_def {",
          "11:       name: \"y\"",
          "12:       input: \"\"",
          "13:       op: \"Identity\"",
          "14:       attr {",
          "15:         key: \"T\"",
          "16:         value {",
          "17:           placeholder: \"T\"",
          "18:         }",
          "19:       }",
          "20:     }",
          "21:   }",
          "22: }",
          "",
          "---------------"
        ],
        "tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt||tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt": [
          "File: tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt -> tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_generic_func_with_empty_result.pbtxt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s",
          "3: # CHECK: Function 'foo' has empty result name",
          "5: library {",
          "6:   function {",
          "7:     signature {",
          "8:       name: \"foo\"",
          "9:       output_arg {",
          "10:         name: \"output\"",
          "11:         type: DT_INT32",
          "12:       }",
          "13:     }",
          "14:     node_def {",
          "15:       name: \"y\"",
          "16:       op: \"NoOp\"",
          "17:       attr {",
          "18:         key: \"T\"",
          "19:         value {",
          "20:           placeholder: \"T\"",
          "21:         }",
          "22:       }",
          "23:     }",
          "24:     ret {",
          "25:       key: \"output\"",
          "26:       value: \"\"",
          "27:     }",
          "28:   }",
          "29: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}