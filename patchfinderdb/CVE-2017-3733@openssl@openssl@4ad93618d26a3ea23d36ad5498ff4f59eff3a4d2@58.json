{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "722d42e1ea710ba036563a68dc7c4e987bf4991b",
      "candidate_info": {
        "commit_hash": "722d42e1ea710ba036563a68dc7c4e987bf4991b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/722d42e1ea710ba036563a68dc7c4e987bf4991b",
        "files": [
          "ssl/statem/statem_srvr.c"
        ],
        "message": "Do not overallocate for tmp.ciphers_raw\n\nWell, not as much, at least.\n\nCommit 07afdf3c3ac97af4f2b4eec22a97f7230f8227e0 changed things so\nthat for SSLv2 format ClientHellos we store the cipher list in the\nTLS format, i.e., with two bytes per cipher, to be consistent with\nhistorical behavior.\n\nHowever, the space allocated for the array still performed the computation\nwith three bytes per cipher, a needless over-allocation (though a relatively\nsmall one, all things considered).\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2281)\n(cherry picked from commit f1429b85c5821e55224e5878da9d0fa420a41f71)",
        "before_after_code_files": [
          "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/statem/statem_srvr.c||ssl/statem/statem_srvr.c": [
          "File: ssl/statem/statem_srvr.c -> ssl/statem/statem_srvr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3280:         if (raw == NULL) {",
          "3282:             goto err;",
          "",
          "[Removed Lines]",
          "3279:         raw = s->s3->tmp.ciphers_raw = OPENSSL_malloc(numciphers * n);",
          "",
          "[Added Lines]",
          "3279:         raw = OPENSSL_malloc(numciphers * TLS_CIPHER_LEN);",
          "3280:         s->s3->tmp.ciphers_raw = raw;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b651a05d261530923c4d1f8f464a91c50602d3ea",
      "candidate_info": {
        "commit_hash": "b651a05d261530923c4d1f8f464a91c50602d3ea",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b651a05d261530923c4d1f8f464a91c50602d3ea",
        "files": [
          "crypto/bio/bss_dgram.c"
        ],
        "message": "Fix problem with SCTP close_notify alerts\n\nIn SCTP the code was only allowing a send of a close_notify alert if the\nsocket is dry. If the socket isn't dry then it was attempting to save away\nthe close_notify alert to resend later when it is dry and then it returned\nsuccess. However because the application then thinks that the close_notify\nalert has been successfully sent it never re-enters the DTLS code to\nactually resend the alert. A much simpler solution is to just fail with a\nretryable error in the event that the socket isn't dry. That way the\napplication knows to retry sending the close_notify alert.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3287)",
        "before_after_code_files": [
          "crypto/bio/bss_dgram.c||crypto/bio/bss_dgram.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/bss_dgram.c||crypto/bio/bss_dgram.c": [
          "File: crypto/bio/bss_dgram.c -> crypto/bio/bss_dgram.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:     int ccs_sent;",
          "131:     int save_shutdown;",
          "132:     int peer_auth_tested;",
          "134: } bio_dgram_sctp_data;",
          "135: # endif",
          "",
          "[Removed Lines]",
          "133:     bio_dgram_sctp_save_message saved_message;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "962:         return 0;",
          "964:     data = (bio_dgram_sctp_data *) a->ptr;",
          "967:         OPENSSL_free(data);",
          "970:     return (1);",
          "971: }",
          "",
          "[Removed Lines]",
          "965:     if (data != NULL) {",
          "966:         OPENSSL_free(data->saved_message.data);",
          "968:     }",
          "",
          "[Added Lines]",
          "964:     if (data != NULL)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1067:                     struct sctp_event_subscribe event;",
          "1068:                     socklen_t eventsize;",
          "1069: #  endif",
          "1088: #  ifdef SCTP_EVENT",
          "",
          "[Removed Lines]",
          "1074:                     if (data->saved_message.length > 0) {",
          "1075:                         i = dgram_sctp_write(data->saved_message.bio,",
          "1076:                                          data->saved_message.data,",
          "1077:                                          data->saved_message.length);",
          "1078:                         if (i < 0) {",
          "1079:                             ret = i;",
          "1080:                             break;",
          "1081:                         }",
          "1082:                         OPENSSL_free(data->saved_message.data);",
          "1083:                         data->saved_message.data = NULL;",
          "1084:                         data->saved_message.length = 0;",
          "1085:                     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1265:         sinfo = &handshake_sinfo;",
          "1266:     }",
          "1272:     if (data->save_shutdown) {",
          "1273:         ret = BIO_dgram_sctp_wait_for_dry(b);",
          "1275:             return -1;",
          "1277:         if (ret == 0) {",
          "1289:         }",
          "1290:     }",
          "",
          "[Removed Lines]",
          "1274:         if (ret < 0) {",
          "1276:         }",
          "1278:             char *tmp;",
          "1279:             data->saved_message.bio = b;",
          "1280:             if ((tmp = OPENSSL_malloc(inl)) == NULL) {",
          "1281:                 BIOerr(BIO_F_DGRAM_SCTP_WRITE, ERR_R_MALLOC_FAILURE);",
          "1282:                 return -1;",
          "1283:             }",
          "1284:             OPENSSL_free(data->saved_message.data);",
          "1285:             data->saved_message.data = tmp;",
          "1286:             memcpy(data->saved_message.data, in, inl);",
          "1287:             data->saved_message.length = inl;",
          "1288:             return inl;",
          "",
          "[Added Lines]",
          "1252:         if (ret < 0)",
          "1255:             BIO_clear_retry_flags(b);",
          "1256:             BIO_set_retry_write(b);",
          "1257:             return -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d17628067daef233f2196a822775af083ec1660",
      "candidate_info": {
        "commit_hash": "0d17628067daef233f2196a822775af083ec1660",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0d17628067daef233f2196a822775af083ec1660",
        "files": [
          "crypto/x509v3/v3_cpols.c"
        ],
        "message": "Fix a crash with malformed user notice policy numbers\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2352)\n(cherry picked from commit fe4075f25962dbd302d856c11ac47adb84edc9ca)",
        "before_after_code_files": [
          "crypto/x509v3/v3_cpols.c||crypto/x509v3/v3_cpols.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509v3/v3_cpols.c||crypto/x509v3/v3_cpols.c": [
          "File: crypto/x509v3/v3_cpols.c -> crypto/x509v3/v3_cpols.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "345:     return 1;",
          "347:  merr:",
          "348:     X509V3err(X509V3_F_NREF_NOS, ERR_R_MALLOC_FAILURE);",
          "350:  err:",
          "352:     return 0;",
          "353: }",
          "",
          "[Removed Lines]",
          "351:     sk_ASN1_INTEGER_pop_free(nnums, ASN1_STRING_free);",
          "",
          "[Added Lines]",
          "348:     ASN1_INTEGER_free(aint);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1968ea9850f7e50609284756ca78e465e5ee4fb9",
      "candidate_info": {
        "commit_hash": "1968ea9850f7e50609284756ca78e465e5ee4fb9",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1968ea9850f7e50609284756ca78e465e5ee4fb9",
        "files": [
          "test/evp_test.c"
        ],
        "message": "test/evp_test.c: If no algorithm was specified, don't try to check for DES\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2319)\n(cherry picked from commit 31b69e9a26c5b127ce273bc5834b9e13e5e25556)",
        "before_after_code_files": [
          "test/evp_test.c||test/evp_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/evp_test.c||test/evp_test.c": [
          "File: test/evp_test.c -> test/evp_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1245:     size_t mac_len;",
          "1247: #ifdef OPENSSL_NO_DES",
          "1250:         err = NULL;",
          "1251:         goto err;",
          "",
          "[Removed Lines]",
          "1248:     if (strstr(mdata->alg, \"DES\") != NULL) {",
          "",
          "[Added Lines]",
          "1248:     if (mdata->alg != NULL && strstr(mdata->alg, \"DES\") != NULL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "078fdfc446ecdc4df65f519c8afdad2153c4a348",
      "candidate_info": {
        "commit_hash": "078fdfc446ecdc4df65f519c8afdad2153c4a348",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/078fdfc446ecdc4df65f519c8afdad2153c4a348",
        "files": [
          "test/recipes/15-test_rsapss.t"
        ],
        "message": "Rather use -out parameter than redirect stdout\n\nOn some platforms, setting stdout to binary mode isn't quite enough,\nwhich makes the result unusable.  With -out, we have better control.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2939)\n(cherry picked from commit d8f9213ae2f0c59198fe56eeb70c34d735422254)",
        "before_after_code_files": [
          "test/recipes/15-test_rsapss.t||test/recipes/15-test_rsapss.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/15-test_rsapss.t||test/recipes/15-test_rsapss.t": [
          "File: test/recipes/15-test_rsapss.t -> test/recipes/15-test_rsapss.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #using test/testrsa.pem which happens to be a 512 bit RSA",
          "22: ok(run(app(['openssl', 'dgst', '-sign', srctop_file('test', 'testrsa.pem'), '-sha1',",
          "23:             '-sigopt', 'rsa_padding_mode:pss', '-sigopt', 'rsa_pss_saltlen:-2',",
          "26:    \"openssl dgst -sign\");",
          "28: with({ exit_checker => sub { return shift == 1; } },",
          "",
          "[Removed Lines]",
          "24:             '-sigopt', 'rsa_mgf1_md:sha512', srctop_file('test', 'testrsa.pem')],",
          "25:            stdout => 'testrsapss.sig')),",
          "",
          "[Added Lines]",
          "24:             '-sigopt', 'rsa_mgf1_md:sha512', '-out', 'testrsapss.sig',",
          "25:             srctop_file('test', 'testrsa.pem')])),",
          "",
          "---------------"
        ]
      }
    }
  ]
}