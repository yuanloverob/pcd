{
  "cve_id": "CVE-2016-5701",
  "cve_desc": "setup/frames/index.inc.php in phpMyAdmin 4.0.10.x before 4.0.10.16, 4.4.15.x before 4.4.15.7, and 4.6.x before 4.6.3 allows remote attackers to conduct BBCode injection attacks against HTTP sessions via a crafted URI.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "5633b1d57b23ddaa5a9a976a323c90c18d9be03d",
  "patch_info": {
    "commit_hash": "5633b1d57b23ddaa5a9a976a323c90c18d9be03d",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/5633b1d57b23ddaa5a9a976a323c90c18d9be03d",
    "files": [
      "setup/frames/index.inc.php"
    ],
    "message": "Use javascript for redirection to https\n\nThe current approach is broken since whitelisting is active in url.php\nand also allows potential bbcode injection.\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
    "before_after_code_files": [
      "setup/frames/index.inc.php||setup/frames/index.inc.php"
    ]
  },
  "patch_diff": {
    "setup/frames/index.inc.php||setup/frames/index.inc.php": [
      "File: setup/frames/index.inc.php -> setup/frames/index.inc.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "76:         . 'sensitive information, like passwords) is transferred unencrypted!'",
      "77:     );",
      "94:     PMA_messagesSet('notice', 'no_https', __('Insecure connection'), $text);",
      "95: }",
      "",
      "[Removed Lines]",
      "79:     if (!empty($_SERVER['REQUEST_URI']) && !empty($_SERVER['HTTP_HOST'])) {",
      "80:         $link = htmlspecialchars(",
      "81:             'https://' .  $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']",
      "82:         );",
      "83:         $text .= ' ';",
      "84:         $text .= PMA_sanitize(",
      "85:             sprintf(",
      "86:                 __(",
      "87:                     'If your server is also configured to accept HTTPS requests '",
      "88:                     . 'follow [a@%s]this link[/a] to use a secure connection.'",
      "89:                 ),",
      "90:                 $link",
      "91:             )",
      "92:         );",
      "93:     }",
      "",
      "[Added Lines]",
      "79:     $text .= ' <a href=\"#\" onclick=\"window.location.href = \\'https:\\' + window.location.href.substring(window.location.protocol.length);\">';",
      "82:     $text .= str_replace(",
      "83:         array('[a@%s]', '[/a]'),",
      "84:         array('', ''),",
      "85:         __(",
      "86:             'If your server is also configured to accept HTTPS requests '",
      "87:             . 'follow [a@%s]this link[/a] to use a secure connection.'",
      "88:         )",
      "89:     );",
      "90:     $text .= '</a>';",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "90e4325bcf57d2a7d4f8ae9b1ac96d370a4c7c97",
      "candidate_info": {
        "commit_hash": "90e4325bcf57d2a7d4f8ae9b1ac96d370a4c7c97",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/90e4325bcf57d2a7d4f8ae9b1ac96d370a4c7c97",
        "files": [
          "setup/frames/index.inc.php",
          "setup/lib/index.lib.php",
          "setup/scripts.js"
        ],
        "message": "Rewrite https in setup and messages handling\n\n- The client side check is more reliable\n- Does not depend on server setup\n- Removed related inline javascript (see #12261)\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "setup/frames/index.inc.php||setup/frames/index.inc.php",
          "setup/lib/index.lib.php||setup/liindex.lib.php",
          "setup/scripts.js||setup/scripts.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "setup/frames/index.inc.php||setup/frames/index.inc.php"
          ],
          "candidate": [
            "setup/frames/index.inc.php||setup/frames/index.inc.php"
          ]
        }
      },
      "candidate_diff": {
        "setup/frames/index.inc.php||setup/frames/index.inc.php": [
          "File: setup/frames/index.inc.php -> setup/frames/index.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     );",
          "67: }",
          "94: echo '<form id=\"select_lang\" method=\"post\" action=\"'",
          "95:     , htmlspecialchars($_SERVER['REQUEST_URI']) , '\">';",
          "",
          "[Removed Lines]",
          "71: $is_https = !empty($_SERVER['HTTPS'])",
          "72:     && mb_strtolower($_SERVER['HTTPS']) == 'on';",
          "73: if (!$is_https) {",
          "74:     $text = __(",
          "75:         'You are not using a secure connection; all data (including potentially '",
          "76:         . 'sensitive information, like passwords) is transferred unencrypted!'",
          "77:     );",
          "79:     $text .= ' <a href=\"#\" onclick=\"window.location.href = \\'https:\\' + window.location.href.substring(window.location.protocol.length);\">';",
          "82:     $text .= str_replace(",
          "83:         array('[a@%s]', '[/a]'),",
          "84:         array('', ''),",
          "85:         __(",
          "86:             'If your server is also configured to accept HTTPS requests '",
          "87:             . 'follow [a@%s]this link[/a] to use a secure connection.'",
          "88:         )",
          "89:     );",
          "90:     $text .= '</a>';",
          "91:     PMA_messagesSet('notice', 'no_https', __('Insecure connection'), $text);",
          "92: }",
          "",
          "[Added Lines]",
          "71: $text = __(",
          "72:     'You are not using a secure connection; all data (including potentially '",
          "73:     . 'sensitive information, like passwords) is transferred unencrypted!'",
          "74: );",
          "75: $text .= ' <a href=\"#\">';",
          "76: $text .= __(",
          "77:     'If your server is also configured to accept HTTPS requests '",
          "78:     . 'follow this link to use a secure connection.'",
          "79: );",
          "80: $text .= '</a>';",
          "81: PMA_messagesSet('notice', 'no_https', __('Insecure connection'), $text);",
          "",
          "---------------"
        ],
        "setup/lib/index.lib.php||setup/liindex.lib.php": [
          "File: setup/lib/index.lib.php -> setup/liindex.lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "80: function PMA_messagesShowHtml()",
          "81: {",
          "83:     foreach ($_SESSION['messages'] as $type => $messages) {",
          "84:         foreach ($messages as $id => $msg) {",
          "86:                 , '<h4>' , $msg['title'] , '</h4>'",
          "87:                 , $msg['message'] , '</div>';",
          "91:         }",
          "92:     }",
          "99: }",
          "",
          "[Removed Lines]",
          "82:     $old_ids = array();",
          "85:             echo '<div class=\"' , $type , '\" id=\"' , $id , '\">'",
          "88:             if (!$msg['fresh'] && $type != 'error') {",
          "89:                 $old_ids[] = $id;",
          "90:             }",
          "94:     echo \"\\n\" , '<script type=\"text/javascript\">';",
          "95:     foreach ($old_ids as $id) {",
          "96:         echo \"\\nhiddenMessages.push('$id');\";",
          "97:     }",
          "98:     echo \"\\n</script>\\n\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "setup/scripts.js||setup/scripts.js": [
          "File: setup/scripts.js -> setup/scripts.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: $(function () {",
          "22:     }",
          "24:         var link = $('#show_hidden_messages');",
          "25:         link.click(function (e) {",
          "26:             e.preventDefault();",
          "30:             $(this).remove();",
          "31:         });",
          "33:         link.css('display', '');",
          "34:     }",
          "35: });",
          "",
          "[Removed Lines]",
          "16: var hiddenMessages = [];",
          "19:     var hidden = hiddenMessages.length;",
          "20:     for (var i = 0; i < hidden; i++) {",
          "21:         $('#' + hiddenMessages[i]).css('display', 'none');",
          "23:     if (hidden > 0) {",
          "27:             for (var i = 0; i < hidden; i++) {",
          "28:                 $('#' + hiddenMessages[i]).show(500);",
          "29:             }",
          "32:         link.html(link.html().replace('#MSG_COUNT', hidden));",
          "",
          "[Added Lines]",
          "17:     if (window.location.protocol === 'https:') {",
          "18:         $('#no_https').remove();",
          "19:     } else {",
          "20:         $('#no_https a').click(function () {",
          "21:             var old_location = window.location;",
          "22:             window.location.href = 'https:' + old_location.href.substring(old_location.protocol.length);",
          "23:             return false;",
          "24:         });",
          "27:     var hiddenmessages = $('.hiddenmessage');",
          "29:     if (hiddenmessages.length > 0) {",
          "30:         hiddenmessages.hide();",
          "34:             hiddenmessages.show();",
          "37:         link.html(link.html().replace('#MSG_COUNT', hiddenmessages.length));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1dca386505f396f0c2035112a403cc80768a141f",
      "candidate_info": {
        "commit_hash": "1dca386505f396f0c2035112a403cc80768a141f",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/1dca386505f396f0c2035112a403cc80768a141f",
        "files": [
          "setup/frames/index.inc.php"
        ],
        "message": "Use javascript for redirection to https\n\nThe current approach is broken since whitelisting is active in url.php\nand also allows potential bbcode injection.\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "setup/frames/index.inc.php||setup/frames/index.inc.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "setup/frames/index.inc.php||setup/frames/index.inc.php"
          ],
          "candidate": [
            "setup/frames/index.inc.php||setup/frames/index.inc.php"
          ]
        }
      },
      "candidate_diff": {
        "setup/frames/index.inc.php||setup/frames/index.inc.php": [
          "File: setup/frames/index.inc.php -> setup/frames/index.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:         . 'sensitive information, like passwords) is transferred unencrypted!'",
          "74:     );",
          "91:     PMA_messagesSet('notice', 'no_https', __('Insecure connection'), $text);",
          "92: }",
          "",
          "[Removed Lines]",
          "76:     if (!empty($_SERVER['REQUEST_URI']) && !empty($_SERVER['HTTP_HOST'])) {",
          "77:         $link = htmlspecialchars(",
          "78:             'https://' .  $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']",
          "79:         );",
          "80:         $text .= ' ';",
          "81:         $text .= PMA_sanitize(",
          "82:             sprintf(",
          "83:                 __(",
          "84:                     'If your server is also configured to accept HTTPS requests '",
          "85:                     . 'follow [a@%s]this link[/a] to use a secure connection.'",
          "86:                 ),",
          "87:                 $link",
          "88:             )",
          "89:         );",
          "90:     }",
          "",
          "[Added Lines]",
          "76:     $text .= ' <a href=\"#\" onclick=\"window.location.href = \\'https:\\' + window.location.href.substring(window.location.protocol.length);\">';",
          "79:     $text .= str_replace(",
          "80:         array('[a@%s]', '[/a]'),",
          "81:         array('', ''),",
          "82:         __(",
          "83:             'If your server is also configured to accept HTTPS requests '",
          "84:             . 'follow [a@%s]this link[/a] to use a secure connection.'",
          "85:         )",
          "86:     );",
          "87:     $text .= '</a>';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf7379771f4b32e01f4af3b36f8ec6900288688e",
      "candidate_info": {
        "commit_hash": "bf7379771f4b32e01f4af3b36f8ec6900288688e",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/bf7379771f4b32e01f4af3b36f8ec6900288688e",
        "files": [
          "setup/frames/index.inc.php"
        ],
        "message": "Use javascript for redirection to https\n\nThe current approach is broken since whitelisting is active in url.php\nand also allows potential bbcode injection.\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "setup/frames/index.inc.php||setup/frames/index.inc.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "setup/frames/index.inc.php||setup/frames/index.inc.php"
          ],
          "candidate": [
            "setup/frames/index.inc.php||setup/frames/index.inc.php"
          ]
        }
      },
      "candidate_diff": {
        "setup/frames/index.inc.php||setup/frames/index.inc.php": [
          "File: setup/frames/index.inc.php -> setup/frames/index.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: if (!$is_https) {",
          "60:     $text = __('You are not using a secure connection; all data (including potentially sensitive information, like passwords) is transferred unencrypted!');",
          "68:     messages_set('notice', 'no_https', __('Insecure connection'), $text);",
          "69: }",
          "70: ?>",
          "",
          "[Removed Lines]",
          "62:     if (!empty($_SERVER['REQUEST_URI']) && !empty($_SERVER['HTTP_HOST'])) {",
          "63:         $link = 'https://' . htmlspecialchars($_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']);",
          "64:         $strInsecureConnectionMsg2 = __('If your server is also configured to accept HTTPS requests follow [a@%s]this link[/a] to use a secure connection.');",
          "65:         $strInsecureConnectionMsg2 = sprintf($strInsecureConnectionMsg2, $link);",
          "66:         $text .= ' ' . PMA_lang($strInsecureConnectionMsg2);",
          "67:     }",
          "",
          "[Added Lines]",
          "62:     $text .= ' <a href=\"#\" onclick=\"window.location.href = \\'https:\\' + window.location.href.substring(window.location.protocol.length);\">';",
          "65:     $text .= str_replace(",
          "66:         array('[a@%s]', '[/a]'),",
          "67:         array('', ''),",
          "68:         __('If your server is also configured to accept HTTPS requests follow [a@%s]this link[/a] to use a secure connection.')",
          "69:     );",
          "70:     $text .= '</a>';",
          "",
          "---------------"
        ]
      }
    }
  ]
}