{
  "cve_id": "CVE-2021-41226",
  "cve_desc": "TensorFlow is an open source platform for machine learning. In affected versions the implementation of `SparseBinCount` is vulnerable to a heap OOB access. This is because of missing validation between the elements of the `values` argument and the shape of the sparse output. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "f410212e373eb2aec4c9e60bf3702eba99a38aba",
  "patch_info": {
    "commit_hash": "f410212e373eb2aec4c9e60bf3702eba99a38aba",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/f410212e373eb2aec4c9e60bf3702eba99a38aba",
    "files": [
      "tensorflow/core/kernels/bincount_op.cc"
    ],
    "message": "Prevent out-of-bound accesses in SparseBincount.\n\nPiperOrigin-RevId: 399918616\nChange-Id: I11d154f4444d3fde1f09c5c40628b8671791a30d",
    "before_after_code_files": [
      "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc": [
      "File: tensorflow/core/kernels/bincount_op.cc -> tensorflow/core/kernels/bincount_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "405:       for (int64_t i = 0; i < indices_mat.dimension(0); ++i) {",
      "406:         const int64_t batch = indices_mat(i, 0);",
      "407:         const Tidx bin = values(i);",
      "408:         if (bin < size) {",
      "409:           if (binary_output_) {",
      "410:             out(batch, bin) = T(1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "408:         OP_REQUIRES(",
      "409:             ctx, batch < out.dimension(0),",
      "410:             errors::InvalidArgument(\"Index out of bound. `batch` (\", batch,",
      "411:                                     \") must be less than the dimension size (\",",
      "412:                                     out.dimension(0), \").\"));",
      "413:         OP_REQUIRES(",
      "414:             ctx, bin < out.dimension(1),",
      "415:             errors::InvalidArgument(\"Index out ouf bound. `bin` (\", bin,",
      "416:                                     \") must be less then the dimension size (\",",
      "417:                                     out.dimension(1), \").\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "50b76e46e1483dffcdfb3f5a055484a9690ff487",
      "candidate_info": {
        "commit_hash": "50b76e46e1483dffcdfb3f5a055484a9690ff487",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/50b76e46e1483dffcdfb3f5a055484a9690ff487",
        "files": [
          "tensorflow/core/kernels/bincount_op.cc"
        ],
        "message": "Prevent out-of-bound accesses in SparseBincount.\n\nPiperOrigin-RevId: 399918616\nChange-Id: I11d154f4444d3fde1f09c5c40628b8671791a30d",
        "before_after_code_files": [
          "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc": [
          "File: tensorflow/core/kernels/bincount_op.cc -> tensorflow/core/kernels/bincount_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "364:       for (int64 i = 0; i < indices_mat.dimension(0); ++i) {",
          "365:         const int64 batch = indices_mat(i, 0);",
          "366:         const Tidx bin = values(i);",
          "367:         if (bin < size) {",
          "368:           if (binary_output_) {",
          "369:             out(batch, bin) = T(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "367:         OP_REQUIRES(",
          "368:             ctx, batch < out.dimension(0),",
          "369:             errors::InvalidArgument(\"Index out of bound. `batch` (\", batch,",
          "370:                                     \") must be less than the dimension size (\",",
          "371:                                     out.dimension(0), \").\"));",
          "372:         OP_REQUIRES(",
          "373:             ctx, bin < out.dimension(1),",
          "374:             errors::InvalidArgument(\"Index out ouf bound. `bin` (\", bin,",
          "375:                                     \") must be less then the dimension size (\",",
          "376:                                     out.dimension(1), \").\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "217027189d92017937b892b415418fada474f2f0",
      "candidate_info": {
        "commit_hash": "217027189d92017937b892b415418fada474f2f0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/217027189d92017937b892b415418fada474f2f0",
        "files": [
          "tensorflow/core/kernels/bincount_op.cc"
        ],
        "message": "Prevent out-of-bound accesses in SparseBincount.\n\nPiperOrigin-RevId: 399918616\nChange-Id: I11d154f4444d3fde1f09c5c40628b8671791a30d",
        "before_after_code_files": [
          "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc": [
          "File: tensorflow/core/kernels/bincount_op.cc -> tensorflow/core/kernels/bincount_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "397:       for (int64_t i = 0; i < indices_mat.dimension(0); ++i) {",
          "398:         const int64_t batch = indices_mat(i, 0);",
          "399:         const Tidx bin = values(i);",
          "400:         if (bin < size) {",
          "401:           if (binary_output_) {",
          "402:             out(batch, bin) = T(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "400:         OP_REQUIRES(",
          "401:             ctx, batch < out.dimension(0),",
          "402:             errors::InvalidArgument(\"Index out of bound. `batch` (\", batch,",
          "403:                                     \") must be less than the dimension size (\",",
          "404:                                     out.dimension(0), \").\"));",
          "405:         OP_REQUIRES(",
          "406:             ctx, bin < out.dimension(1),",
          "407:             errors::InvalidArgument(\"Index out ouf bound. `bin` (\", bin,",
          "408:                                     \") must be less then the dimension size (\",",
          "409:                                     out.dimension(1), \").\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "553aaa7d49ba9b8d8b3c77b407c4a43724b91f59",
      "candidate_info": {
        "commit_hash": "553aaa7d49ba9b8d8b3c77b407c4a43724b91f59",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/553aaa7d49ba9b8d8b3c77b407c4a43724b91f59",
        "files": [
          "tensorflow/core/kernels/bincount_op.cc"
        ],
        "message": "Prevent out-of-bound accesses in SparseBincount.\n\nPiperOrigin-RevId: 399918616\nChange-Id: I11d154f4444d3fde1f09c5c40628b8671791a30d",
        "before_after_code_files": [
          "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc": [
          "File: tensorflow/core/kernels/bincount_op.cc -> tensorflow/core/kernels/bincount_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "364:       for (int64 i = 0; i < indices_mat.dimension(0); ++i) {",
          "365:         const int64 batch = indices_mat(i, 0);",
          "366:         const Tidx bin = values(i);",
          "367:         if (bin < size) {",
          "368:           if (binary_output_) {",
          "369:             out(batch, bin) = T(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "367:         OP_REQUIRES(",
          "368:             ctx, batch < out.dimension(0),",
          "369:             errors::InvalidArgument(\"Index out of bound. `batch` (\", batch,",
          "370:                                     \") must be less than the dimension size (\",",
          "371:                                     out.dimension(0), \").\"));",
          "372:         OP_REQUIRES(",
          "373:             ctx, bin < out.dimension(1),",
          "374:             errors::InvalidArgument(\"Index out ouf bound. `bin` (\", bin,",
          "375:                                     \") must be less then the dimension size (\",",
          "376:                                     out.dimension(1), \").\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ac819150930248dee040c6d1599b9404deb9dccd",
      "candidate_info": {
        "commit_hash": "ac819150930248dee040c6d1599b9404deb9dccd",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ac819150930248dee040c6d1599b9404deb9dccd",
        "files": [
          "tensorflow/core/kernels/bincount_op.cc"
        ],
        "message": "Prevent out-of-bound accesses in SparseBincount.\n\nPiperOrigin-RevId: 399918616\nChange-Id: I11d154f4444d3fde1f09c5c40628b8671791a30d",
        "before_after_code_files": [
          "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc": [
          "File: tensorflow/core/kernels/bincount_op.cc -> tensorflow/core/kernels/bincount_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "405:       for (int64_t i = 0; i < indices_mat.dimension(0); ++i) {",
          "406:         const int64_t batch = indices_mat(i, 0);",
          "407:         const Tidx bin = values(i);",
          "408:         if (bin < size) {",
          "409:           if (binary_output_) {",
          "410:             out(batch, bin) = T(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408:         OP_REQUIRES(",
          "409:             ctx, batch < out.dimension(0),",
          "410:             errors::InvalidArgument(\"Index out of bound. `batch` (\", batch,",
          "411:                                     \") must be less than the dimension size (\",",
          "412:                                     out.dimension(0), \").\"));",
          "413:         OP_REQUIRES(",
          "414:             ctx, bin < out.dimension(1),",
          "415:             errors::InvalidArgument(\"Index out ouf bound. `bin` (\", bin,",
          "416:                                     \") must be less then the dimension size (\",",
          "417:                                     out.dimension(1), \").\"));",
          "",
          "---------------"
        ]
      }
    }
  ]
}