{
  "cve_id": "CVE-2018-9264",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.5 and 2.2.0 to 2.2.13, the ADB dissector could crash with a heap-based buffer overflow. This was addressed in epan/dissectors/packet-adb.c by checking for a length inconsistency.",
  "repo": "wireshark/wireshark",
  "patch_hash": "1653ea5fcedf369452c0cf41e09e57666525615c",
  "patch_info": {
    "commit_hash": "1653ea5fcedf369452c0cf41e09e57666525615c",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/1653ea5fcedf369452c0cf41e09e57666525615c",
    "files": [
      "epan/dissectors/packet-adb.c"
    ],
    "message": "adb: fix buffer overflow while processing message payload\n\nFix a heap buffer overflow (write) when the message header length is\nsmaller than the actual message payload length. Add expert info to\ndetect this since it can also occur when the header is wrongly matched\nwith a data fragment (this dissector issue is not fixed here).\n\nBug: 14460\nChange-Id: I12f411a5189809a0931dfcdb2797997d5e19efc1\nReviewed-on: https://code.wireshark.org/review/26104\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-adb.c||epan/dissectors/packet-adb.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-adb.c||epan/dissectors/packet-adb.c": [
      "File: epan/dissectors/packet-adb.c -> epan/dissectors/packet-adb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "66: static expert_field ei_invalid_magic                                  = EI_INIT;",
      "67: static expert_field ei_invalid_crc                                    = EI_INIT;",
      "69: static dissector_handle_t  adb_handle;",
      "70: static dissector_handle_t  adb_service_handle;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "68: static expert_field ei_invalid_data                                   = EI_INIT;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "102:     guint32   completed_in_frame;",
      "103:     guint32   reassemble_data_length;",
      "104:     guint8   *reassemble_data;",
      "105: } command_data_t;",
      "107: static guint32 max_in_frame = G_MAXUINT32;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "106:     guint32   reassemble_error_in_frame;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "258:         command_data->completed_in_frame = max_in_frame;",
      "259:     command_data->reassemble_data_length = 0;",
      "260:     command_data->reassemble_data = (guint8 *) wmem_alloc(wmem_file_scope(), command_data->data_length);",
      "262:     key[3].length = 1;",
      "263:     key[3].key = &frame_number;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "263:     command_data->reassemble_error_in_frame = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "626:         guint32 crc = 0;",
      "627:         guint32 i_offset;",
      "636:             }",
      "638:             proto_tree_add_item(main_tree, hf_data_fragment, tvb, offset, -1, ENC_NA);",
      "639:             col_append_str(pinfo->cinfo, COL_INFO, \"Data Fragment\");",
      "640:             offset = tvb_captured_length(tvb);",
      "",
      "[Removed Lines]",
      "630:             if (!pinfo->fd->flags.visited && command_data && command_data->reassemble_data_length < command_data->data_length) {",
      "631:                 tvb_memcpy(tvb, command_data->reassemble_data + command_data->reassemble_data_length, offset, tvb_captured_length_remaining(tvb, offset));",
      "632:                 command_data->reassemble_data_length += tvb_captured_length_remaining(tvb, offset);",
      "634:                 if (command_data->reassemble_data_length >= command_data->data_length)",
      "635:                     command_data->completed_in_frame = frame_number;",
      "",
      "[Added Lines]",
      "634:         if (!pinfo->fd->flags.visited && command_data && command_data->reassemble_data_length < command_data->data_length) {",
      "635:             guint chunklen = tvb_captured_length_remaining(tvb, offset);",
      "636:             if (chunklen > command_data->data_length - command_data->reassemble_data_length) {",
      "637:                 chunklen = command_data->data_length - command_data->reassemble_data_length;",
      "641:                 command_data->reassemble_error_in_frame = frame_number;",
      "644:             tvb_memcpy(tvb, command_data->reassemble_data + command_data->reassemble_data_length, offset, chunklen);",
      "645:             command_data->reassemble_data_length += chunklen;",
      "647:             if (command_data->reassemble_data_length >= command_data->data_length)",
      "648:                 command_data->completed_in_frame = frame_number;",
      "649:         }",
      "651:         if (frame_number == command_data->reassemble_error_in_frame) {",
      "653:             proto_tree_add_expert(main_tree, pinfo, &ei_invalid_data, tvb, offset, -1);",
      "654:         }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "879:     static ei_register_info ei[] = {",
      "880:         { &ei_invalid_magic,          { \"adb.expert.invalid_magic\", PI_PROTOCOL, PI_WARN, \"Invalid Magic\", EXPFILL }},",
      "881:         { &ei_invalid_crc,            { \"adb.expert.crc_error\", PI_PROTOCOL, PI_ERROR, \"CRC32 Error\", EXPFILL }},",
      "882:     };",
      "884:     command_info         = wmem_tree_new_autoreset(wmem_epan_scope(), wmem_file_scope());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "901:         { &ei_invalid_data,           { \"adb.expert.data_error\", PI_PROTOCOL, PI_ERROR, \"Mismatch between message payload size and data length\", EXPFILL }},",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "23c0a41442e8e926b4d1f0aa8a887a83261e64ee",
      "candidate_info": {
        "commit_hash": "23c0a41442e8e926b4d1f0aa8a887a83261e64ee",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/23c0a41442e8e926b4d1f0aa8a887a83261e64ee",
        "files": [
          "epan/dissectors/packet-adb.c"
        ],
        "message": "adb: fix buffer overflow while processing message payload\n\nFix a heap buffer overflow (write) when the message header length is\nsmaller than the actual message payload length. Add expert info to\ndetect this since it can also occur when the header is wrongly matched\nwith a data fragment (this dissector issue is not fixed here).\n\nBug: 14460\nChange-Id: I12f411a5189809a0931dfcdb2797997d5e19efc1\nReviewed-on: https://code.wireshark.org/review/26104\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 1653ea5fcedf369452c0cf41e09e57666525615c)\nReviewed-on: https://code.wireshark.org/review/26172\nReviewed-by: Peter Wu <peter@lekensteyn.nl>",
        "before_after_code_files": [
          "epan/dissectors/packet-adb.c||epan/dissectors/packet-adb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-adb.c||epan/dissectors/packet-adb.c"
          ],
          "candidate": [
            "epan/dissectors/packet-adb.c||epan/dissectors/packet-adb.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-adb.c||epan/dissectors/packet-adb.c": [
          "File: epan/dissectors/packet-adb.c -> epan/dissectors/packet-adb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: static expert_field ei_invalid_magic                                  = EI_INIT;",
          "67: static expert_field ei_invalid_crc                                    = EI_INIT;",
          "69: static dissector_handle_t  adb_handle;",
          "70: static dissector_handle_t  adb_service_handle;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: static expert_field ei_invalid_data                                   = EI_INIT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:     guint32   completed_in_frame;",
          "103:     guint32   reassemble_data_length;",
          "104:     guint8   *reassemble_data;",
          "105: } command_data_t;",
          "107: static guint32 max_in_frame = G_MAXUINT32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:     guint32   reassemble_error_in_frame;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "258:         command_data->completed_in_frame = max_in_frame;",
          "259:     command_data->reassemble_data_length = 0;",
          "260:     command_data->reassemble_data = (guint8 *) wmem_alloc(wmem_file_scope(), command_data->data_length);",
          "262:     key[3].length = 1;",
          "263:     key[3].key = &frame_number;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263:     command_data->reassemble_error_in_frame = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "626:         guint32 crc = 0;",
          "627:         guint32 i_offset;",
          "636:             }",
          "638:             proto_tree_add_item(main_tree, hf_data_fragment, tvb, offset, -1, ENC_NA);",
          "639:             col_append_str(pinfo->cinfo, COL_INFO, \"Data Fragment\");",
          "640:             offset = tvb_captured_length(tvb);",
          "",
          "[Removed Lines]",
          "630:             if (!pinfo->fd->flags.visited && command_data && command_data->reassemble_data_length < command_data->data_length) {",
          "631:                 tvb_memcpy(tvb, command_data->reassemble_data + command_data->reassemble_data_length, offset, tvb_captured_length_remaining(tvb, offset));",
          "632:                 command_data->reassemble_data_length += tvb_captured_length_remaining(tvb, offset);",
          "634:                 if (command_data->reassemble_data_length >= command_data->data_length)",
          "635:                     command_data->completed_in_frame = frame_number;",
          "",
          "[Added Lines]",
          "634:         if (!pinfo->fd->flags.visited && command_data && command_data->reassemble_data_length < command_data->data_length) {",
          "635:             guint chunklen = tvb_captured_length_remaining(tvb, offset);",
          "636:             if (chunklen > command_data->data_length - command_data->reassemble_data_length) {",
          "637:                 chunklen = command_data->data_length - command_data->reassemble_data_length;",
          "641:                 command_data->reassemble_error_in_frame = frame_number;",
          "644:             tvb_memcpy(tvb, command_data->reassemble_data + command_data->reassemble_data_length, offset, chunklen);",
          "645:             command_data->reassemble_data_length += chunklen;",
          "647:             if (command_data->reassemble_data_length >= command_data->data_length)",
          "648:                 command_data->completed_in_frame = frame_number;",
          "649:         }",
          "651:         if (frame_number == command_data->reassemble_error_in_frame) {",
          "653:             proto_tree_add_expert(main_tree, pinfo, &ei_invalid_data, tvb, offset, -1);",
          "654:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "874:     static ei_register_info ei[] = {",
          "875:         { &ei_invalid_magic,          { \"adb.expert.invalid_magic\", PI_PROTOCOL, PI_WARN, \"Invalid Magic\", EXPFILL }},",
          "876:         { &ei_invalid_crc,            { \"adb.expert.crc_error\", PI_PROTOCOL, PI_ERROR, \"CRC32 Error\", EXPFILL }},",
          "877:     };",
          "879:     command_info         = wmem_tree_new_autoreset(wmem_epan_scope(), wmem_file_scope());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "896:         { &ei_invalid_data,           { \"adb.expert.data_error\", PI_PROTOCOL, PI_ERROR, \"Mismatch between message payload size and data length\", EXPFILL }},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0290a62be0fca8da9bb190f59dc1fe26c1d65024",
      "candidate_info": {
        "commit_hash": "0290a62be0fca8da9bb190f59dc1fe26c1d65024",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/0290a62be0fca8da9bb190f59dc1fe26c1d65024",
        "files": [
          "epan/dissectors/packet-adb.c"
        ],
        "message": "adb: fix buffer overflow while processing message payload\n\nFix a heap buffer overflow (write) when the message header length is\nsmaller than the actual message payload length. Add expert info to\ndetect this since it can also occur when the header is wrongly matched\nwith a data fragment (this dissector issue is not fixed here).\n\nBug: 14460\nChange-Id: I12f411a5189809a0931dfcdb2797997d5e19efc1\nReviewed-on: https://code.wireshark.org/review/26104\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 1653ea5fcedf369452c0cf41e09e57666525615c)\nReviewed-on: https://code.wireshark.org/review/26173\nReviewed-by: Peter Wu <peter@lekensteyn.nl>",
        "before_after_code_files": [
          "epan/dissectors/packet-adb.c||epan/dissectors/packet-adb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-adb.c||epan/dissectors/packet-adb.c"
          ],
          "candidate": [
            "epan/dissectors/packet-adb.c||epan/dissectors/packet-adb.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-adb.c||epan/dissectors/packet-adb.c": [
          "File: epan/dissectors/packet-adb.c -> epan/dissectors/packet-adb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: static expert_field ei_invalid_magic                                  = EI_INIT;",
          "67: static expert_field ei_invalid_crc                                    = EI_INIT;",
          "69: static dissector_handle_t  adb_handle;",
          "70: static dissector_handle_t  adb_service_handle;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68: static expert_field ei_invalid_data                                   = EI_INIT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:     guint32   completed_in_frame;",
          "103:     guint32   reassemble_data_length;",
          "104:     guint8   *reassemble_data;",
          "105: } command_data_t;",
          "107: static guint32 max_in_frame = G_MAXUINT32;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:     guint32   reassemble_error_in_frame;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "258:         command_data->completed_in_frame = max_in_frame;",
          "259:     command_data->reassemble_data_length = 0;",
          "260:     command_data->reassemble_data = (guint8 *) wmem_alloc(wmem_file_scope(), command_data->data_length);",
          "262:     key[3].length = 1;",
          "263:     key[3].key = &frame_number;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263:     command_data->reassemble_error_in_frame = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "628:         guint32 crc = 0;",
          "629:         guint32 i_offset;",
          "638:             }",
          "640:             proto_tree_add_item(main_tree, hf_data_fragment, tvb, offset, -1, ENC_NA);",
          "641:             col_append_str(pinfo->cinfo, COL_INFO, \"Data Fragment\");",
          "642:             offset = tvb_captured_length(tvb);",
          "",
          "[Removed Lines]",
          "632:             if (!pinfo->fd->flags.visited && command_data && command_data->reassemble_data_length < command_data->data_length) {",
          "633:                 tvb_memcpy(tvb, command_data->reassemble_data + command_data->reassemble_data_length, offset, tvb_captured_length_remaining(tvb, offset));",
          "634:                 command_data->reassemble_data_length += tvb_captured_length_remaining(tvb, offset);",
          "636:                 if (command_data->reassemble_data_length >= command_data->data_length)",
          "637:                     command_data->completed_in_frame = frame_number;",
          "",
          "[Added Lines]",
          "636:         if (!pinfo->fd->flags.visited && command_data && command_data->reassemble_data_length < command_data->data_length) {",
          "637:             guint chunklen = tvb_captured_length_remaining(tvb, offset);",
          "638:             if (chunklen > command_data->data_length - command_data->reassemble_data_length) {",
          "639:                 chunklen = command_data->data_length - command_data->reassemble_data_length;",
          "643:                 command_data->reassemble_error_in_frame = frame_number;",
          "646:             tvb_memcpy(tvb, command_data->reassemble_data + command_data->reassemble_data_length, offset, chunklen);",
          "647:             command_data->reassemble_data_length += chunklen;",
          "649:             if (command_data->reassemble_data_length >= command_data->data_length)",
          "650:                 command_data->completed_in_frame = frame_number;",
          "651:         }",
          "653:         if (frame_number == command_data->reassemble_error_in_frame) {",
          "655:             proto_tree_add_expert(main_tree, pinfo, &ei_invalid_data, tvb, offset, -1);",
          "656:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "876:     static ei_register_info ei[] = {",
          "877:         { &ei_invalid_magic,          { \"adb.expert.invalid_magic\", PI_PROTOCOL, PI_WARN, \"Invalid Magic\", EXPFILL }},",
          "878:         { &ei_invalid_crc,            { \"adb.expert.crc_error\", PI_PROTOCOL, PI_ERROR, \"CRC32 Error\", EXPFILL }},",
          "879:     };",
          "881:     command_info         = wmem_tree_new_autoreset(wmem_epan_scope(), wmem_file_scope());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "898:         { &ei_invalid_data,           { \"adb.expert.data_error\", PI_PROTOCOL, PI_ERROR, \"Mismatch between message payload size and data length\", EXPFILL }},",
          "",
          "---------------"
        ]
      }
    }
  ]
}