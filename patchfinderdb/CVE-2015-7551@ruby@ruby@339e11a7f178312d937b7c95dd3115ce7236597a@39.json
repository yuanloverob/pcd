{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ce094d1d73c46e90319ad4dcbd504c33740b710b",
      "candidate_info": {
        "commit_hash": "ce094d1d73c46e90319ad4dcbd504c33740b710b",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ce094d1d73c46e90319ad4dcbd504c33740b710b",
        "files": [
          "ChangeLog",
          "test/ruby/test_process.rb",
          "version.h"
        ],
        "message": "merge revision(s) 47837: [Backport #12155]\n\n\t* test/ruby/test_process.rb (TestProcess#test_setsid): AIX\n\t  does not allow Process::getsid(pid) when pid is in a\n\t  different session.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54270 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_process.rb||test/ruby/test_process.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_process.rb||test/ruby/test_process.rb": [
          "File: test/ruby/test_process.rb -> test/ruby/test_process.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1689:   def test_setsid",
          "1690:     return unless Process.respond_to?(:setsid)",
          "1691:     return unless Process.respond_to?(:getsid)",
          "1693:     # different session.",
          "1696:     IO.popen([RUBY, \"-e\", <<EOS]) do|io|",
          "1697:  Marshal.dump(Process.getsid, STDOUT)",
          "",
          "[Removed Lines]",
          "1692:     # OpenBSD doesn't allow Process::getsid(pid) when pid is in",
          "1694:     return if /openbsd/ =~ RUBY_PLATFORM",
          "",
          "[Added Lines]",
          "1692:     # OpenBSD and AIX don't allow Process::getsid(pid) when pid is in",
          "1694:     return if /openbsd|aix/ =~ RUBY_PLATFORM",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-03-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 467",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 468",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "116ec560bde5402a5fa6a508376c4e988c583b64",
      "candidate_info": {
        "commit_hash": "116ec560bde5402a5fa6a508376c4e988c583b64",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/116ec560bde5402a5fa6a508376c4e988c583b64",
        "files": [
          "ChangeLog",
          "version.h"
        ],
        "message": "* version.h (RUBY_VERSION): bump RUBY_VERSION to 2.1.7.\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50312 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 4",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "1: #define RUBY_VERSION \"2.1.6\"",
          "2: #define RUBY_RELEASE_DATE \"2015-04-13\"",
          "3: #define RUBY_PATCHLEVEL 336",
          "7: #define RUBY_RELEASE_DAY 13",
          "",
          "[Added Lines]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-04-14\"",
          "3: #define RUBY_PATCHLEVEL 337",
          "7: #define RUBY_RELEASE_DAY 14",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "997f821a58a7295436e64443ab4bd1d550cd6919",
      "candidate_info": {
        "commit_hash": "997f821a58a7295436e64443ab4bd1d550cd6919",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/997f821a58a7295436e64443ab4bd1d550cd6919",
        "files": [
          "ChangeLog",
          "proc.c",
          "test/ruby/test_proc.rb",
          "version.h"
        ],
        "message": "merge revision(s) r48160: [Backport #10432]\n\n\t* proc.c (method_proc): the receiver of binding from method should\n\t  be same as the receiver of the method.\n\t  [ruby-core:65917] [Bug #10432]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49472 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "proc.c||proc.c",
          "test/ruby/test_proc.rb||test/ruby/test_proc.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "proc.c||proc.c": [
          "File: proc.c -> proc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2317: method_proc(VALUE method)",
          "2318: {",
          "2319:     VALUE procval;",
          "2320:     rb_proc_t *proc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2320:     struct METHOD *meth;",
          "2322:     rb_env_t *env;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2330:     procval = rb_iterate(mlambda, 0, bmcall, method);",
          "2331:     GetProcPtr(procval, proc);",
          "2332:     proc->is_from_method = 1;",
          "2333:     return procval;",
          "2334: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2333:     TypedData_Get_Struct(method, struct METHOD, &method_data_type, meth);",
          "2337:     proc->block.self = meth->recv;",
          "2338:     proc->block.klass = meth->defined_class;",
          "2339:     GetEnvPtr(proc->envval, env);",
          "2340:     env->block.self = meth->recv;",
          "2341:     env->block.klass = meth->defined_class;",
          "2342:     env->block.iseq = method_get_iseq(meth->me->def);",
          "",
          "---------------"
        ],
        "test/ruby/test_proc.rb||test/ruby/test_proc.rb": [
          "File: test/ruby/test_proc.rb -> test/ruby/test_proc.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "202:   def test_method_to_proc",
          "203:     b = block()",
          "204:     assert_equal \"OK\", b.call",
          "206:   end",
          "208:   def test_block_given_method",
          "",
          "[Removed Lines]",
          "205:     assert_instance_of(Binding, b.binding, '[ruby-core:25589]')",
          "",
          "[Added Lines]",
          "205:     b = b.binding",
          "206:     assert_instance_of(Binding, b, '[ruby-core:25589]')",
          "207:     bug10432 = '[ruby-core:65919] [Bug #10432]'",
          "208:     assert_same(self, b.eval(\"self\"), bug10432)",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-02-02\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 288",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 289",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53ce4da09078335f5481b5dbb642420684d6ad8b",
      "candidate_info": {
        "commit_hash": "53ce4da09078335f5481b5dbb642420684d6ad8b",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/53ce4da09078335f5481b5dbb642420684d6ad8b",
        "files": [
          "ChangeLog",
          "ext/bigdecimal/README",
          "ext/bigdecimal/bigdecimal.c",
          "ext/bigdecimal/bigdecimal.gemspec",
          "ext/bigdecimal/bigdecimal.h",
          "version.h"
        ],
        "message": "merge revision(s) 50185: [Backport #10952]\n\n\t* bigdecimal: conform to ruby's license.  [ruby-core:68466] [Bug #10952]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50574 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/bigdecimal/bigdecimal.c||ext/bigdecimal/bigdecimal.c",
          "ext/bigdecimal/bigdecimal.gemspec||ext/bigdecimal/bigdecimal.gemspec",
          "ext/bigdecimal/bigdecimal.h||ext/bigdecimal/bigdecimal.h",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/bigdecimal/bigdecimal.c||ext/bigdecimal/bigdecimal.c": [
          "File: ext/bigdecimal/bigdecimal.c -> ext/bigdecimal/bigdecimal.c"
        ],
        "ext/bigdecimal/bigdecimal.gemspec||ext/bigdecimal/bigdecimal.gemspec": [
          "File: ext/bigdecimal/bigdecimal.gemspec -> ext/bigdecimal/bigdecimal.gemspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:   s.name = \"bigdecimal\"",
          "7:   s.version = _VERSION",
          "8:   s.date = date",
          "9:   s.summary = \"Arbitrary-precision decimal floating-point number library.\"",
          "10:   s.homepage = \"http://www.ruby-lang.org\"",
          "11:   s.email = \"mrkn@mrkn.jp\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:   s.license = 'ruby'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:     bigdecimal.gemspec",
          "17:     bigdecimal.c",
          "18:     bigdecimal.h",
          "20:     depend extconf.rb",
          "21:     lib/bigdecimal/jacobian.rb",
          "22:     lib/bigdecimal/ludcmp.rb",
          "",
          "[Removed Lines]",
          "19:     README",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/bigdecimal/bigdecimal.h||ext/bigdecimal/bigdecimal.h": [
          "File: ext/bigdecimal/bigdecimal.h -> ext/bigdecimal/bigdecimal.h"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-05-21\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 5",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 347",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 348",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "936a27758f02aad434aee2f40e216c96091bd671",
      "candidate_info": {
        "commit_hash": "936a27758f02aad434aee2f40e216c96091bd671",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/936a27758f02aad434aee2f40e216c96091bd671",
        "files": [
          "ChangeLog",
          "ext/openssl/extconf.rb",
          "ext/openssl/ossl_ssl.c",
          "test/openssl/test_ssl.rb",
          "version.h"
        ],
        "message": "merge revision(s) 51722,51724: [Backport #11376]\n\n\t* ext/openssl/ossl_ssl.c (static const struct): Only add SSLv3 support\n\t  if the SSL library supports it.  Thanks Kurt Roeckx <kurt@roeckx.be>\n\t  [Bug #11376]\n\n\t* ext/openssl/extconf.rb: check for SSLv3 support in the SSL\n\t  implementation.\n\n\t* test/openssl/test_ssl.rb (class OpenSSL): Skip tests that need SSLv3\n\t  if there is no support.\n\n\t* ext/openssl/ossl_ssl.c (ossl_ssl_method_tab): Only add SSLv3 support\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@52642 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/openssl/extconf.rb||ext/openssl/extconf.rb",
          "ext/openssl/ossl_ssl.c||ext/openssl/ossl_ssl.c",
          "test/openssl/test_ssl.rb||test/openssl/test_ssl.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/openssl/extconf.rb||ext/openssl/extconf.rb": [
          "File: ext/openssl/extconf.rb -> ext/openssl/extconf.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: have_func(\"SSLv2_method\")",
          "104: have_func(\"SSLv2_server_method\")",
          "105: have_func(\"SSLv2_client_method\")",
          "106: have_func(\"TLSv1_1_method\")",
          "107: have_func(\"TLSv1_1_server_method\")",
          "108: have_func(\"TLSv1_1_client_method\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106: have_func(\"SSLv3_method\")",
          "107: have_func(\"SSLv3_server_method\")",
          "108: have_func(\"SSLv3_client_method\")",
          "",
          "---------------"
        ],
        "ext/openssl/ossl_ssl.c||ext/openssl/ossl_ssl.c": [
          "File: ext/openssl/ossl_ssl.c -> ext/openssl/ossl_ssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:     OSSL_SSL_METHOD_ENTRY(SSLv2_server),",
          "135:     OSSL_SSL_METHOD_ENTRY(SSLv2_client),",
          "136: #endif",
          "137:     OSSL_SSL_METHOD_ENTRY(SSLv3),",
          "138:     OSSL_SSL_METHOD_ENTRY(SSLv3_server),",
          "139:     OSSL_SSL_METHOD_ENTRY(SSLv3_client),",
          "140:     OSSL_SSL_METHOD_ENTRY(SSLv23),",
          "141:     OSSL_SSL_METHOD_ENTRY(SSLv23_server),",
          "142:     OSSL_SSL_METHOD_ENTRY(SSLv23_client),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137: #if defined(HAVE_SSLV3_METHOD) && defined(HAVE_SSLV3_SERVER_METHOD) && \\",
          "138:         defined(HAVE_SSLV3_CLIENT_METHOD)",
          "142: #endif",
          "",
          "---------------"
        ],
        "test/openssl/test_ssl.rb||test/openssl/test_ssl.rb": [
          "File: test/openssl/test_ssl.rb -> test/openssl/test_ssl.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "623:   # that has been marked as forbidden, therefore either of these may be raised",
          "624:   HANDSHAKE_ERRORS = [OpenSSL::SSL::SSLError, Errno::ECONNRESET]",
          "628:   def test_forbid_ssl_v3_for_client",
          "629:     ctx_proc = Proc.new { |ctx| ctx.options = OpenSSL::SSL::OP_ALL | OpenSSL::SSL::OP_NO_SSLv3 }",
          "",
          "[Removed Lines]",
          "626: if OpenSSL::SSL::SSLContext::METHODS.include? :TLSv1",
          "",
          "[Added Lines]",
          "626: if OpenSSL::SSL::SSLContext::METHODS.include?(:TLSv1) && OpenSSL::SSL::SSLContext::METHODS.include?(:SSLv3)",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-11-18\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 417",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 418",
          "",
          "---------------"
        ]
      }
    }
  ]
}