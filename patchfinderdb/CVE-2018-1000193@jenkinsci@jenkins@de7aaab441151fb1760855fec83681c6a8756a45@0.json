{
  "cve_id": "CVE-2018-1000193",
  "cve_desc": "A improper neutralization of control sequences vulnerability exists in Jenkins 2.120 and older, LTS 2.107.2 and older in HudsonPrivateSecurityRealm.java that allows users to sign up using user names containing control characters that can then appear to have the same name as other users, and cannot be deleted via the UI.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "de7aaab441151fb1760855fec83681c6a8756a45",
  "patch_info": {
    "commit_hash": "de7aaab441151fb1760855fec83681c6a8756a45",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/de7aaab441151fb1760855fec83681c6a8756a45",
    "files": [
      "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java",
      "core/src/main/resources/hudson/security/Messages.properties",
      "test/src/test/java/hudson/security/HudsonPrivateSecurityRealmTest.java"
    ],
    "message": "[SECURITY-786]",
    "before_after_code_files": [
      "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java||core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java",
      "core/src/main/resources/hudson/security/Messages.properties||core/src/main/resources/hudson/security/Messages.properties",
      "test/src/test/java/hudson/security/HudsonPrivateSecurityRealmTest.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealmTest.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java||core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java": [
      "File: core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java -> core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "64: import org.mindrot.jbcrypt.BCrypt;",
      "65: import org.springframework.dao.DataAccessException;",
      "67: import javax.servlet.Filter;",
      "68: import javax.servlet.FilterChain;",
      "69: import javax.servlet.FilterConfig;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "67: import javax.annotation.Nonnull;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "97: public class HudsonPrivateSecurityRealm extends AbstractPasswordBasedSecurityRealm implements ModelObject, AccessControlled {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "99:     private static /* not final */ String ID_REGEX = System.getProperty(HudsonPrivateSecurityRealm.class.getName() + \".ID_REGEX\");",
      "106:     private static final String DEFAULT_ID_REGEX = \"^[\\\\w-]+$\";",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "339:         if(si.username==null || si.username.length()==0)",
      "340:             si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameRequired();",
      "341:         else {",
      "343:             User user = User.getById(si.username, false);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "351:         else if(!containsOnlyAcceptableCharacters(si.username))",
      "352:             if(ID_REGEX == null){",
      "353:                 si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameInvalidCharacters();",
      "354:             }else{",
      "355:                 si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameInvalidCharactersCustom(ID_REGEX);",
      "356:             }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "385:         return user;",
      "386:     }",
      "388:     @Restricted(NoExternalUse.class)",
      "389:     public boolean isMailerPluginPresent() {",
      "390:         try {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "404:     private boolean containsOnlyAcceptableCharacters(@Nonnull String value){",
      "405:         if(ID_REGEX == null){",
      "406:             return value.matches(DEFAULT_ID_REGEX);",
      "407:         }else{",
      "408:             return value.matches(ID_REGEX);",
      "409:         }",
      "410:     }",
      "",
      "---------------"
    ],
    "core/src/main/resources/hudson/security/Messages.properties||core/src/main/resources/hudson/security/Messages.properties": [
      "File: core/src/main/resources/hudson/security/Messages.properties -> core/src/main/resources/hudson/security/Messages.properties",
      "--- Hunk 1 ---",
      "[Context before]",
      "37: HudsonPrivateSecurityRealm.CreateAccount.PasswordNotMatch=Password didn't match",
      "38: HudsonPrivateSecurityRealm.CreateAccount.PasswordRequired=Password is required",
      "39: HudsonPrivateSecurityRealm.CreateAccount.UserNameRequired=User name is required",
      "40: HudsonPrivateSecurityRealm.CreateAccount.InvalidEmailAddress=Invalid e-mail address",
      "41: HudsonPrivateSecurityRealm.CreateAccount.UserNameAlreadyTaken=User name is already taken",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "40: HudsonPrivateSecurityRealm.CreateAccount.UserNameInvalidCharacters=User name must only contain alphanumeric characters, underscore and dash",
      "41: HudsonPrivateSecurityRealm.CreateAccount.UserNameInvalidCharactersCustom=User name must match the following expression: {0}",
      "",
      "---------------"
    ],
    "test/src/test/java/hudson/security/HudsonPrivateSecurityRealmTest.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealmTest.java": [
      "File: test/src/test/java/hudson/security/HudsonPrivateSecurityRealmTest.java -> test/src/test/java/hudson/security/HudsonPrivateSecurityRealmTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: import static hudson.security.HudsonPrivateSecurityRealm.CLASSIC;",
      "4: import static hudson.security.HudsonPrivateSecurityRealm.PASSWORD_ENCODER;",
      "5: import static org.junit.Assert.assertEquals;",
      "6: import static org.junit.Assert.assertFalse;",
      "7: import static org.junit.Assert.assertTrue;",
      "8: import static org.junit.Assert.assertThat;",
      "9: import static org.hamcrest.Matchers.is;",
      "10: import static org.hamcrest.xml.HasXPath.hasXPath;",
      "12: import java.io.UnsupportedEncodingException;",
      "14: import org.junit.Rule;",
      "15: import org.junit.Test;",
      "16: import org.jvnet.hudson.test.Issue;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5: import static org.hamcrest.Matchers.containsString;",
      "6: import static org.hamcrest.Matchers.not;",
      "9: import static org.junit.Assert.assertNotNull;",
      "16: import java.lang.reflect.Field;",
      "18: import hudson.security.pages.SignupPage;",
      "19: import org.junit.Before;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "34:     @Rule",
      "35:     public JenkinsRule j = new JenkinsRule();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "43:     @Before",
      "44:     public void setup() throws Exception {",
      "45:         Field field = HudsonPrivateSecurityRealm.class.getDeclaredField(\"ID_REGEX\");",
      "46:         field.setAccessible(true);",
      "47:         field.set(null, null);",
      "48:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "170:         String authHeader = \"Basic \" + auth;",
      "171:         return authHeader;",
      "172:     }",
      "174: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "187:     @Issue(\"SECURITY-786\")",
      "188:     @Test",
      "189:     public void controlCharacterAreNoMoreValid() throws Exception {",
      "190:         HudsonPrivateSecurityRealm securityRealm = new HudsonPrivateSecurityRealm(true, false, null);",
      "191:         j.jenkins.setSecurityRealm(securityRealm);",
      "193:         String password = \"testPwd\";",
      "194:         String email = \"test@test.com\";",
      "195:         int i = 0;",
      "198:         checkUserCanBeCreatedWith(securityRealm, \"test\" + i, password, \"Test\" + i, email);",
      "199:         assertNotNull(User.getById(\"test\" + i, false));",
      "200:         i++;",
      "201:         checkUserCanBeCreatedWith(securityRealm, \"te-st_123\" + i, password, \"Test\" + i, email);",
      "202:         assertNotNull(User.getById(\"te-st_123\" + i, false));",
      "203:         i++;",
      "204:         {// user id that contains invalid characters",
      "205:             checkUserCannotBeCreatedWith(securityRealm, \"test \" + i, password, \"Test\" + i, email);",
      "206:             i++;",
      "207:             checkUserCannotBeCreatedWith(securityRealm, \"te@st\" + i, password, \"Test\" + i, email);",
      "208:             i++;",
      "209:             checkUserCannotBeCreatedWith(securityRealm, \"test.com\" + i, password, \"Test\" + i, email);",
      "210:             i++;",
      "211:             checkUserCannotBeCreatedWith(securityRealm, \"test,com\" + i, password, \"Test\" + i, email);",
      "212:             i++;",
      "213:             checkUserCannotBeCreatedWith(securityRealm, \"test,com\" + i, password, \"Test\" + i, email);",
      "214:             i++;",
      "215:             checkUserCannotBeCreatedWith(securityRealm, \"test\u00e9com\" + i, password, \"Test\" + i, email);",
      "216:             i++;",
      "217:             checkUserCannotBeCreatedWith(securityRealm, \"Starg\u00e5te\" + i, password, \"Test\" + i, email);",
      "218:             i++;",
      "219:             checkUserCannotBeCreatedWith(securityRealm, \"te\\u0000st\" + i, password, \"Test\" + i, email);",
      "220:             i++;",
      "221:         }",
      "222:     }",
      "224:     @Issue(\"SECURITY-786\")",
      "225:     @Test",
      "226:     public void controlCharacterAreNoMoreValid_CustomRegex() throws Exception {",
      "227:         HudsonPrivateSecurityRealm securityRealm = new HudsonPrivateSecurityRealm(true, false, null);",
      "228:         j.jenkins.setSecurityRealm(securityRealm);",
      "230:         String currentRegex = \"^[A-Z]+[0-9]*$\";",
      "232:         Field field = HudsonPrivateSecurityRealm.class.getDeclaredField(\"ID_REGEX\");",
      "233:         field.setAccessible(true);",
      "234:         field.set(null, currentRegex);",
      "236:         String password = \"testPwd\";",
      "237:         String email = \"test@test.com\";",
      "238:         int i = 0;",
      "241:         checkUserCanBeCreatedWith(securityRealm, \"TEST\" + i, password, \"Test\" + i, email);",
      "242:         assertNotNull(User.getById(\"TEST\" + i, false));",
      "243:         i++;",
      "244:         checkUserCanBeCreatedWith(securityRealm, \"TEST123\" + i, password, \"Test\" + i, email);",
      "245:         assertNotNull(User.getById(\"TEST123\" + i, false));",
      "246:         i++;",
      "247:         {// user id that do not follow custom regex",
      "248:             checkUserCannotBeCreatedWith_custom(securityRealm, \"test \" + i, password, \"Test\" + i, email, currentRegex);",
      "249:             i++;",
      "250:             checkUserCannotBeCreatedWith_custom(securityRealm, \"@\" + i, password, \"Test\" + i, email, currentRegex);",
      "251:             i++;",
      "252:             checkUserCannotBeCreatedWith_custom(securityRealm, \"T2A\" + i, password, \"Test\" + i, email, currentRegex);",
      "253:             i++;",
      "254:         }",
      "255:         { // we can even change regex on the fly",
      "256:             currentRegex = \"^[0-9]*$\";",
      "257:             field.set(null, currentRegex);",
      "259:             checkUserCanBeCreatedWith(securityRealm, \"125213\" + i, password, \"Test\" + i, email);",
      "260:             assertNotNull(User.getById(\"125213\" + i, false));",
      "261:             i++;",
      "262:             checkUserCannotBeCreatedWith_custom(securityRealm, \"TEST12\" + i, password, \"Test\" + i, email, currentRegex);",
      "263:             i++;",
      "264:         }",
      "265:     }",
      "267:     private void checkUserCanBeCreatedWith(HudsonPrivateSecurityRealm securityRealm, String id, String password, String fullName, String email) throws Exception {",
      "268:         JenkinsRule.WebClient wc = j.createWebClient();",
      "269:         SignupPage signup = new SignupPage(wc.goTo(\"signup\"));",
      "270:         signup.enterUsername(id);",
      "271:         signup.enterPassword(password);",
      "272:         signup.enterFullName(fullName);",
      "273:         signup.enterEmail(email);",
      "274:         HtmlPage success = signup.submit(j);",
      "275:         assertThat(success.getElementById(\"main-panel\").getTextContent(), containsString(\"Success\"));",
      "276:     }",
      "278:     private void checkUserCannotBeCreatedWith(HudsonPrivateSecurityRealm securityRealm, String id, String password, String fullName, String email) throws Exception {",
      "279:         JenkinsRule.WebClient wc = j.createWebClient();",
      "280:         SignupPage signup = new SignupPage(wc.goTo(\"signup\"));",
      "281:         signup.enterUsername(id);",
      "282:         signup.enterPassword(password);",
      "283:         signup.enterFullName(fullName);",
      "284:         signup.enterEmail(email);",
      "285:         HtmlPage success = signup.submit(j);",
      "286:         assertThat(success.getElementById(\"main-panel\").getTextContent(), not(containsString(\"Success\")));",
      "287:         assertThat(success.getElementById(\"main-panel\").getTextContent(), containsString(Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameInvalidCharacters()));",
      "288:     }",
      "290:     private void checkUserCannotBeCreatedWith_custom(HudsonPrivateSecurityRealm securityRealm, String id, String password, String fullName, String email, String regex) throws Exception {",
      "291:         JenkinsRule.WebClient wc = j.createWebClient();",
      "292:         SignupPage signup = new SignupPage(wc.goTo(\"signup\"));",
      "293:         signup.enterUsername(id);",
      "294:         signup.enterPassword(password);",
      "295:         signup.enterFullName(fullName);",
      "296:         signup.enterEmail(email);",
      "297:         HtmlPage success = signup.submit(j);",
      "298:         assertThat(success.getElementById(\"main-panel\").getTextContent(), not(containsString(\"Success\")));",
      "299:         assertThat(success.getElementById(\"main-panel\").getTextContent(), containsString(regex));",
      "300:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "90670e05c17b34270cda9436eaf877cc72a341ec",
      "candidate_info": {
        "commit_hash": "90670e05c17b34270cda9436eaf877cc72a341ec",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/90670e05c17b34270cda9436eaf877cc72a341ec",
        "files": [
          "core/src/main/java/hudson/Functions.java",
          "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java",
          "core/src/main/java/jenkins/model/DefaultSimplePageDecorator.java",
          "core/src/main/java/jenkins/model/SimplePageDecorator.java",
          "core/src/main/resources/hudson/security/HudsonPrivateSecurityRealm/signup.jelly",
          "core/src/main/resources/hudson/util/HudsonIsLoading/index.jelly",
          "core/src/main/resources/hudson/util/HudsonIsRestarting/index.jelly",
          "core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-head.jelly",
          "core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-header.jelly",
          "core/src/main/resources/jenkins/model/Jenkins/login.jelly",
          "core/src/main/resources/jenkins/model/Jenkins/login.properties",
          "core/src/main/resources/jenkins/model/Jenkins/loginError.jelly",
          "war/src/main/webapp/css/loading.css",
          "war/src/main/webapp/css/signup.css",
          "war/src/main/webapp/css/simple-page-forms.css",
          "war/src/main/webapp/css/simple-page.css",
          "war/src/main/webapp/css/simple-page.theme.css",
          "war/src/main/webapp/images/jenkins.svg",
          "war/src/main/webapp/scripts/loading.js"
        ],
        "message": "[JENKINS-50447] New design and slim down of login page (#3380)\n\n* [JENKINS-50447] New design and slim down of login page\n\nThe change will provide a new designed login page that is using no external deps to prevent any possible malvious javascript.\nWe still allow the user to use the legacy login page, which has not changed the behaviour.\n\n[JENKINS-50447] Implement error case and use final svg jenkins logo\n\n[JENKINS-50447] remove mock up logo\n\n[JENKINS-50447] Fix feet back from jlong\n\n[JENKINS-50447_squash] Use theme css which only contains values to be overriden. Drop ie js since with the theme css it is not needed anymore\n\n* [JENKINS-50447_squash] Fix expression to evaluate when to show an error and when to simply redirect\n\n* eslint - formating changes and fix offences\n\n* [JENKINS-50447_squash] Use system property to controll whether or not to use the legacy login\n\n* [JENKINS-50447_squash] prevent that the jsessionId appears in the url which should fix most tests\n\n* [JENKINS-50447_squash] Fix cli test by adding pageDecorators magic from layout.jelly\n\n* [JENKINS-50447_squash] remove pageDecorators because they assume existence of js that we do not have\n\n* [JENKINS-50447] New design and slim down of login page\n\nThe change will provide a new designed login page that is using no external deps to prevent any possible malvious javascript.\nWe still allow the user to use the legacy login page, which has not changed the behaviour.\n\n[JENKINS-50447] Implement error case and use final svg jenkins logo\n\n[JENKINS-50447] remove mock up logo\n\n[JENKINS-50447] Fix feet back from jlong\n\n[JENKINS-50447_squash] Use theme css which only contains values to be overriden. Drop ie js since with the theme css it is not needed anymore\n\n[JENKINS-50447_squash] Fix expression to evaluate when to show an error and when to simply redirect\n\neslint - formating changes and fix offences\n\n[JENKINS-50447_squash] Use system property to controll whether or not to use the legacy login\n\n[JENKINS-50447_squash] prevent that the jsessionId appears in the url which should fix most tests\n\n[JENKINS-50447_squash] Fix cli test by adding pageDecorators magic from layout.jelly\n\n[JENKINS-50447_squash] remove pageDecorators because they assume existence of js that we do not have\n\n[JENKINS-50447_squash] make login page extensible with pagedecorators\n\n[JENKINS-50447_squash] drop legacy support\n\n* Make theme customisable by using a magic package for css and header. Limiting the implemetation of those to one.\n\n* [JENKINS-50447_squash] Creating a specific decorator for login which only returns one instance\n\n* [JENKINS-50447_squash] using rounded corner\n\n* JENKINS-50447 remove legacy code\n\n* [JENKINS-50447_squash] Fix comments from @amuniz about javadoc and uniqueness of css for login\n\n* [JENKINS-50447_squash] Fix click on label span to toggle the select of the checkbox\n\n* [JENKINS-50447_squash] fix comments from @daniel-beck\n\n* [JENKINS-50447_squash] Fix license headers\n\n* [JENKINS-50447_squash] Implement loading/restarting and signup with same design\n\n* [JENKINS-50447_squash] Implement the loading/restarting view and signup with same design as the login page\n\n* [JENKINS-50447_squash] Remove limitation that only one validation error can be shown at a time\n\n* [JENKINS-50447_squash] implement password strength checker\n\n* [JENKINS-50447_squash] Fix different comments from @daniel-beck regarding titles. Further enhanced spacing of label and input\n\n* [JENKINS-50447_squash] Fix restart screen css. Fix comments regarding signup page.\n\n* [JENKINS-50447_squash] fix tabindex flow\n\n* harmonize design\n- of checkboxes using jdl styles.\n- distance of headers\n\n* [JENKINS-50447] Fix comments from @daniel-beck\n- fix some accessibility issues\n-- html has now a lang tag\n-- define main region\n- fix missplaced }\n- fix when server down for real that we still show the loading page\n\n* [JENKINS-50447_squash] should never ended up here",
        "before_after_code_files": [
          "core/src/main/java/hudson/Functions.java||core/src/main/java/hudson/Functions.java",
          "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java||core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java",
          "core/src/main/java/jenkins/model/DefaultSimplePageDecorator.java||core/src/main/java/jenkins/model/DefaultSimplePageDecorator.java",
          "core/src/main/java/jenkins/model/SimplePageDecorator.java||core/src/main/java/jenkins/model/SimplePageDecorator.java",
          "core/src/main/resources/hudson/security/HudsonPrivateSecurityRealm/signup.jelly||core/src/main/resources/hudson/security/HudsonPrivateSecurityRealm/signup.jelly",
          "core/src/main/resources/hudson/util/HudsonIsLoading/index.jelly||core/src/main/resources/hudson/util/HudsonIsLoading/index.jelly",
          "core/src/main/resources/hudson/util/HudsonIsRestarting/index.jelly||core/src/main/resources/hudson/util/HudsonIsRestarting/index.jelly",
          "core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-head.jelly||core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-head.jelly",
          "core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-header.jelly||core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-header.jelly",
          "core/src/main/resources/jenkins/model/Jenkins/login.jelly||core/src/main/resources/jenkins/model/Jenkins/login.jelly",
          "core/src/main/resources/jenkins/model/Jenkins/login.properties||core/src/main/resources/jenkins/model/Jenkins/login.properties",
          "core/src/main/resources/jenkins/model/Jenkins/loginError.jelly||core/src/main/resources/jenkins/model/Jenkins/loginError.jelly",
          "war/src/main/webapp/css/loading.css||war/src/main/webapp/css/loading.css",
          "war/src/main/webapp/css/signup.css||war/src/main/webapp/css/signup.css",
          "war/src/main/webapp/css/simple-page-forms.css||war/src/main/webapp/css/simple-page-forms.css",
          "war/src/main/webapp/css/simple-page.css||war/src/main/webapp/css/simple-page.css",
          "war/src/main/webapp/css/simple-page.theme.css||war/src/main/webapp/css/simple-page.theme.css",
          "war/src/main/webapp/scripts/loading.js||war/src/main/webapp/scripts/loading.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java||core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java||core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/Functions.java||core/src/main/java/hudson/Functions.java": [
          "File: core/src/main/java/hudson/Functions.java -> core/src/main/java/hudson/Functions.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: import hudson.model.ModelObject;",
          "48: import hudson.model.Node;",
          "49: import hudson.model.PageDecorator;",
          "50: import hudson.model.PaneStatusProperties;",
          "51: import hudson.model.ParameterDefinition;",
          "52: import hudson.model.ParameterDefinition.ParameterDescriptor;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: import jenkins.model.SimplePageDecorator;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133: import jenkins.model.ModelObjectWithChildren;",
          "134: import jenkins.model.ModelObjectWithContextMenu;",
          "138: import org.apache.commons.jelly.JellyContext;",
          "139: import org.apache.commons.jelly.JellyTagException;",
          "140: import org.apache.commons.jelly.Script;",
          "",
          "[Removed Lines]",
          "136: import org.acegisecurity.Authentication;",
          "137: import org.acegisecurity.providers.anonymous.AnonymousAuthenticationToken;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1772:         if(Jenkins.getInstanceOrNull()==null)  return Collections.emptyList();",
          "1773:         return PageDecorator.all();",
          "1774:     }",
          "1776:     public static List<Descriptor<Cloud>> getCloudDescriptors() {",
          "1777:         return Cloud.all();",
          "1778:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1778:     public static SimplePageDecorator getSimplePageDecorator() {",
          "1779:         return SimplePageDecorator.first();",
          "1780:     }",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java||core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java": [
          "File: core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java -> core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "78: import java.io.IOException;",
          "79: import java.lang.reflect.Constructor;",
          "80: import java.security.SecureRandom;",
          "86: import java.util.logging.Logger;",
          "87: import org.kohsuke.accmod.Restricted;",
          "88: import org.kohsuke.accmod.restrictions.NoExternalUse;",
          "",
          "[Removed Lines]",
          "81: import java.util.ArrayList;",
          "82: import java.util.Collections;",
          "83: import java.util.List;",
          "84: import java.util.MissingResourceException;",
          "85: import java.util.ResourceBundle;",
          "",
          "[Added Lines]",
          "81: import java.util.*;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "312:     public User createAccountFromSetupWizard(StaplerRequest req) throws IOException, AccountCreationFailedException {",
          "313:         checkPermission(Jenkins.ADMINISTER);",
          "314:         SignupInfo si = validateAccountCreationForm(req, false);",
          "317:         } else {",
          "318:             return createAccount(si);",
          "319:         }",
          "320:     }",
          "",
          "[Removed Lines]",
          "315:         if (si.errorMessage != null) {",
          "316:             throw new AccountCreationFailedException(si.errorMessage);",
          "",
          "[Added Lines]",
          "311:         if (!si.errors.isEmpty()) {",
          "312:             String messages = getErrorMessages(si);",
          "313:             throw new AccountCreationFailedException(messages);",
          "319:     private String getErrorMessages(SignupInfo si) {",
          "320:         StringBuilder messages = new StringBuilder();",
          "321:         for (String message : si.errors.values()) {",
          "322:             messages.append(message).append(\" | \");",
          "323:         }",
          "324:         return messages.toString();",
          "325:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "363:     private User createAccount(StaplerRequest req, StaplerResponse rsp, boolean validateCaptcha, String formView) throws ServletException, IOException {",
          "364:         SignupInfo si = validateAccountCreationForm(req, validateCaptcha);",
          "368:             req.getView(this, formView).forward(req, rsp);",
          "369:             return null;",
          "",
          "[Removed Lines]",
          "366:         if (si.errorMessage != null) {",
          "",
          "[Added Lines]",
          "371:         if (!si.errors.isEmpty()) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "385:         SignupInfo si = new SignupInfo(req);",
          "387:         if (validateCaptcha && !validateCaptcha(si.captcha)) {",
          "397:         }",
          "399:         if (si.username == null || si.username.length() == 0) {",
          "401:         } else if(!containsOnlyAcceptableCharacters(si.username)) {",
          "402:             if (ID_REGEX == null) {",
          "404:             } else {",
          "406:             }",
          "407:         } else {",
          "",
          "[Removed Lines]",
          "388:             si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_TextNotMatchWordInImage();",
          "389:         }",
          "391:         if (si.password1 != null && !si.password1.equals(si.password2)) {",
          "392:             si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_PasswordNotMatch();",
          "393:         }",
          "395:         if (!(si.password1 != null && si.password1.length() != 0)) {",
          "396:             si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_PasswordRequired();",
          "400:             si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameRequired();",
          "403:                 si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameInvalidCharacters();",
          "405:                 si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameInvalidCharactersCustom(ID_REGEX);",
          "",
          "[Added Lines]",
          "393:             si.errors.put(\"captcha\", Messages.HudsonPrivateSecurityRealm_CreateAccount_TextNotMatchWordInImage());",
          "397:             si.errors.put(\"username\", Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameRequired());",
          "400:                 si.errors.put(\"username\", Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameInvalidCharacters());",
          "402:                 si.errors.put(\"username\", Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameInvalidCharactersCustom(ID_REGEX));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "410:             if (null != user)",
          "412:                 if (user.getProperty(Details.class) != null)",
          "414:         }",
          "416:         if (si.fullname == null || si.fullname.length() == 0) {",
          "",
          "[Removed Lines]",
          "413:                     si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameAlreadyTaken();",
          "",
          "[Added Lines]",
          "410:                     si.errors.put(\"username\", Messages.HudsonPrivateSecurityRealm_CreateAccount_UserNameAlreadyTaken());",
          "411:         }",
          "413:         if (si.password1 != null && !si.password1.equals(si.password2)) {",
          "414:             si.errors.put(\"password1\", Messages.HudsonPrivateSecurityRealm_CreateAccount_PasswordNotMatch());",
          "415:         }",
          "417:         if (!(si.password1 != null && si.password1.length() != 0)) {",
          "418:             si.errors.put(\"password1\", Messages.HudsonPrivateSecurityRealm_CreateAccount_PasswordRequired());",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "418:         }",
          "420:         if (isMailerPluginPresent() && (si.email == null || !si.email.contains(\"@\"))) {",
          "422:         }",
          "424:         if (!User.isIdOrFullnameAllowed(si.username)) {",
          "426:         }",
          "428:         if (!User.isIdOrFullnameAllowed(si.fullname)) {",
          "430:         }",
          "431:         req.setAttribute(\"data\", si); // for error messages in the view",
          "432:         return si;",
          "433:     }",
          "443:     private User createAccount(SignupInfo si) throws IOException {",
          "446:         }",
          "448:         User user = createAccount(si.username, si.password1);",
          "",
          "[Removed Lines]",
          "421:             si.errorMessage = Messages.HudsonPrivateSecurityRealm_CreateAccount_InvalidEmailAddress();",
          "425:             si.errorMessage = hudson.model.Messages.User_IllegalUsername(si.username);",
          "429:             si.errorMessage = hudson.model.Messages.User_IllegalFullname(si.fullname);",
          "444:         if (si.errorMessage != null) {",
          "445:             throw new IllegalArgumentException(\"invalid signup info passed to createAccount(si): \" + si.errorMessage);",
          "",
          "[Added Lines]",
          "426:             si.errors.put(\"email\", Messages.HudsonPrivateSecurityRealm_CreateAccount_InvalidEmailAddress());",
          "430:             si.errors.put(\"username\", hudson.model.Messages.User_IllegalUsername(si.username));",
          "434:             si.errors.put(\"fullname\", hudson.model.Messages.User_IllegalFullname(si.fullname));",
          "449:         if (!si.errors.isEmpty()) {",
          "450:             String messages = getErrorMessages(si);",
          "451:             throw new IllegalArgumentException(\"invalid signup info passed to createAccount(si): \" + messages);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "542:         public String errorMessage;",
          "544:         public SignupInfo() {",
          "545:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "550:         public HashMap<String, String> errors = new HashMap<String, String>();",
          "",
          "---------------"
        ],
        "core/src/main/java/jenkins/model/DefaultSimplePageDecorator.java||core/src/main/java/jenkins/model/DefaultSimplePageDecorator.java": [
          "File: core/src/main/java/jenkins/model/DefaultSimplePageDecorator.java -> core/src/main/java/jenkins/model/DefaultSimplePageDecorator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: package jenkins.model;",
          "26: import hudson.Extension;",
          "34: @Extension(ordinal=-9999)",
          "35: public class DefaultSimplePageDecorator extends SimplePageDecorator {",
          "36: }",
          "",
          "---------------"
        ],
        "core/src/main/java/jenkins/model/SimplePageDecorator.java||core/src/main/java/jenkins/model/SimplePageDecorator.java": [
          "File: core/src/main/java/jenkins/model/SimplePageDecorator.java -> core/src/main/java/jenkins/model/SimplePageDecorator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: package jenkins.model;",
          "26: import hudson.DescriptorExtensionList;",
          "27: import hudson.ExtensionPoint;",
          "28: import hudson.model.Describable;",
          "29: import hudson.model.Descriptor;",
          "38: public class SimplePageDecorator extends Descriptor<SimplePageDecorator> implements ExtensionPoint, Describable<SimplePageDecorator> {",
          "40:     protected SimplePageDecorator()  {",
          "41:         super(self());",
          "42:     }",
          "44:     @Override",
          "45:     public final Descriptor<SimplePageDecorator> getDescriptor() {",
          "46:         return this;",
          "47:     }",
          "55:     public final String getUrl() {",
          "56:         return \"descriptor/\"+clazz.getName();",
          "57:     }",
          "63:     public static SimplePageDecorator first(){",
          "64:         DescriptorExtensionList<SimplePageDecorator, SimplePageDecorator> descriptorList = Jenkins.getInstanceOrNull().<SimplePageDecorator, SimplePageDecorator>getDescriptorList(SimplePageDecorator.class);",
          "65:         if (descriptorList.size() >= 1) {",
          "66:             return descriptorList.get(0);",
          "67:         } else {",
          "68:             return null;",
          "69:         }",
          "70:     }",
          "72: }",
          "",
          "---------------"
        ],
        "core/src/main/resources/hudson/security/HudsonPrivateSecurityRealm/signup.jelly||core/src/main/resources/hudson/security/HudsonPrivateSecurityRealm/signup.jelly": [
          "File: core/src/main/resources/hudson/security/HudsonPrivateSecurityRealm/signup.jelly -> core/src/main/resources/hudson/security/HudsonPrivateSecurityRealm/signup.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:   User self sign up page.",
          "27: -->",
          "28: <?jelly escape-by-default='true'?>",
          "31: </j:jelly>",
          "",
          "[Removed Lines]",
          "29: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "30:   <local:_entryFormPage host=\"${app}\" title=\"${%Sign up}\" action=\"createAccount\" captcha=\"${it.isEnableCaptcha()}\" xmlns:local=\"/hudson/security/HudsonPrivateSecurityRealm\" />",
          "",
          "[Added Lines]",
          "29: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:x=\"jelly:xml\" xmlns:f=\"/lib/form\">",
          "31:     <st:setHeader name=\"Expires\" value=\"0\"/>",
          "32:     <st:setHeader name=\"Cache-Control\" value=\"no-cache,no-store,must-revalidate\"/>",
          "33:     <j:new var=\"h\" className=\"hudson.Functions\"/><!-- instead of JSP functions -->",
          "34:     <!-- response contentType header -->",
          "35:     <st:contentType value=\"text/html;charset=UTF-8\"/>",
          "36:     <!--",
          "37:     needed to generate a session if non exists,",
          "38:     without it we would add \";jsessionid=\" to the url which will result in a 404",
          "39:   -->",
          "40:     <j:set var=\"_\" value=\"${request.getSession()}\"/>",
          "41:     <!-- get default/commong page variable -->",
          "42:     ${h.initPageVariables(context)}",
          "43:     <x:doctype name=\"html\"/>",
          "44:     <!-- in case of error we want to surround the form elements with an error hint -->",
          "45:     <j:set var=\"inputClass\" value=\"${data.errorMessage!=null ? 'danger' : 'normal'}\"/>",
          "46:     <j:set var=\"simpleDecorator\" value=\"${h.simplePageDecorator}\"/>",
          "47:     <html lang=\"${request.getLocale().toLanguageTag()}\">",
          "48:         <head data-rooturl=\"${rootURL}\" data-resurl=\"${resURL}\" resURL=\"${resURL}\">",
          "49:             <title>${%Create an account! [Jenkins]}</title>",
          "50:             <!-- we do not want bots on this page -->",
          "51:             <meta name=\"ROBOTS\" content=\"NOFOLLOW\"/>",
          "52:             <!-- css styling, will fallback to default implementation -->",
          "53:             <st:include it=\"${simpleDecorator}\" page=\"simple-head.jelly\" optional=\"true\"/>",
          "54:             <link rel=\"stylesheet\" href=\"${resURL}/css/signup.css\" type=\"text/css\"/>",
          "55:         </head>",
          "56:         <body>",
          "57:             <div class=\"simple-page\" role=\"main\">",
          "58:                 <div class=\"modal signup\">",
          "59:                     <div class=\"signupIntroDefault\">",
          "60:                         <h1>${%Create an account!}</h1>",
          "61:                         <div>",
          "62:                             ${%If you already have a Jenkins account,}&#160;<a href=\"${rootURL}/login\" tabindex=\"1\">${%please sign in.}</a>",
          "63:                         </div>",
          "64:                     </div>",
          "65:                     <form class=\"signup\" action=\"${rootURL}/securityRealm/createAccount\" method=\"post\" id=\"main-panel\">",
          "66:                         <div class=\"formRow\">",
          "67:                             <div class=\"inputHeader\">",
          "68:                                 <label",
          "69:                                     class=\"${data.errors.containsKey('username') ? 'alert' : 'normal'}\"",
          "70:                                     for=\"username\"",
          "71:                                 >",
          "72:                                     ${%Username}${data.errors.containsKey('username') ? ' - ' +  data.errors.get('username') : ''}",
          "73:                                 </label>",
          "74:                             </div>",
          "75:                             <input",
          "76:                                 class=\"${data.errors.containsKey('username') ? 'danger' : 'normal'}\"",
          "77:                                 value=\"${data.username}\"",
          "78:                                 tabindex=\"2\"",
          "79:                                 type=\"text\"",
          "80:                                 name=\"username\"",
          "81:                                 id=\"username\"",
          "82:                             />",
          "83:                         </div>",
          "84:                         <div class=\"formRow\">",
          "85:                             <div class=\"inputHeader\">",
          "86:                                 <label",
          "87:                                     class=\"${data.errors.containsKey('fullname') ? 'alert' : 'normal'}\"",
          "88:                                     for=\"fullname\"",
          "89:                                 >",
          "90:                                     ${%Full name}${data.errors.containsKey('fullname') ? ' - ' + data.errors.get('fullname') : ''}",
          "91:                                 </label>",
          "92:                             </div>",
          "93:                             <input",
          "94:                                 tabindex=\"3\"",
          "95:                                 class=\"${data.errors.containsKey('fullname') ? 'danger' : 'normal'}\"",
          "96:                                 value=\"${data.fullname}\"",
          "97:                                 type=\"text\"",
          "98:                                 name=\"fullname\"",
          "99:                                 id=\"fullname\"",
          "100:                             />",
          "101:                         </div>",
          "102:                         <j:if test=\"${it.mailerPluginPresent}\">",
          "103:                             <div class=\"formRow\">",
          "104:                                 <div class=\"inputHeader\">",
          "105:                                     <label",
          "106:                                         class=\"${data.errors.containsKey('email') ? 'alert' : 'normal'}\"",
          "107:                                         for=\"email\"",
          "108:                                     >",
          "109:                                         ${%Email}${data.errors.containsKey('email') ? ' - ' +  data.errors.get('email') : ''}",
          "110:                                     </label>",
          "111:                                 </div>",
          "112:                                 <input",
          "113:                                     tabindex=\"4\"",
          "114:                                     class=\"${data.errors.containsKey('email') ? 'danger' : 'normal'}\"",
          "115:                                     value=\"${data.email}\"",
          "116:                                     type=\"text\"",
          "117:                                     name=\"email\"",
          "118:                                     id=\"email\"",
          "119:                                 />",
          "120:                             </div>",
          "121:                         </j:if>",
          "122:                         <j:if test=\"${it.isEnableCaptcha()}\">",
          "123:                             <div class=\"formRow\">",
          "124:                                 <div class=\"inputHeader\">",
          "125:                                     <label",
          "126:                                         class=\"${data.errors.containsKey('captcha') ? 'alert' : 'normal'}\"",
          "127:                                         for=\"captcha\"",
          "128:                                     >${%Enter text as shown}</label>",
          "129:                                 </div>",
          "131:                                 <input",
          "132:                                     class=\"${data.errors.containsKey('captcha') ? 'danger' : 'normal'}\"",
          "133:                                     type=\"text\"",
          "134:                                     name=\"captcha\"",
          "135:                                     id=\"captcha\"",
          "136:                                     tabindex=\"5\"",
          "137:                                     autocomplete=\"off\"",
          "138:                                 />",
          "139:                                 <img src=\"${rootURL}/securityRealm/captcha\" alt=\"[captcha]\"/>",
          "140:                             </div>",
          "141:                         </j:if>",
          "142:                         <div class=\"formRow\">",
          "143:                             <div class=\"inputHeader\">",
          "144:                                 <label",
          "145:                                         class=\"${data.errors.containsKey('password1') ? 'alert' : 'normal'}\"",
          "146:                                         for=\"password1\"",
          "147:                                 >",
          "148:                                     ${%Password}${data.errors.containsKey('password1') ? ' - ' +  data.errors.get('password1') : ''}",
          "149:                                 </label>",
          "150:                                 <script type=\"text/javascript\">",
          "151:                                     const togglePasswordType = function(event) {",
          "152:                                         const passwordField = document.getElementById('password1');",
          "153:                                         const showPass = document.getElementById('showPassword');",
          "154:                                         if (showPass.checked) {",
          "155:                                             passwordField.type = 'text';",
          "156:                                         } else {",
          "157:                                             passwordField.type = 'password';",
          "158:                                         }",
          "159:                                     };",
          "161:                                     const passwordScore = function(password) {",
          "162:                                         var score = 0;",
          "163:                                         if (!password) {",
          "164:                                             return score",
          "165:                                         }",
          "167:                                         var letters = {};",
          "168:                                         for (var i = 0; i &lt; password.length; i++) {",
          "169:                                             letters[password[i]] = (letters[password[i]] || 0) + 1",
          "170:                                             score += 5.0 / letters[password[i]]",
          "171:                                         }",
          "174:                                         var variations = {",
          "175:                                             digits: /\\d/.test(password),",
          "176:                                             lower: /[a-z]/.test(password),",
          "177:                                             upper: /[A-Z]/.test(password),",
          "178:                                             nonWords: /\\W/.test(password)",
          "179:                                         };",
          "181:                                         var variationCount = 0;",
          "182:                                         for (var check in variations) {",
          "183:                                             variationCount += variations[check] === true ? 1 : 0;",
          "184:                                         }",
          "185:                                         score += (variationCount - 1) * 10;",
          "186:                                         return parseInt(score);",
          "187:                                     };",
          "189:                                     const passwordStrength = function(score) {",
          "190:                                         if (score > 80) {",
          "191:                                             return \"Strong\";",
          "192:                                         }",
          "193:                                         if (score > 60) {",
          "194:                                             return \"Moderate\";",
          "195:                                         }",
          "196:                                         if (score >= 30) {",
          "197:                                             return \"Weak\";",
          "198:                                         }",
          "199:                                         return \"Poor\";",
          "200:                                     };",
          "202:                                     const passwordStrengthColor = function(score) {",
          "203:                                         if (score > 80) {",
          "204:                                             return \"#3a7911\"",
          "205:                                         }",
          "206:                                         if (score > 60) {",
          "207:                                             return \"#c6810e\"",
          "208:                                         }",
          "209:                                         if (score >= 30) {",
          "210:                                             return \"#de5912\"",
          "211:                                         }",
          "212:                                         return \"#c4000a\"",
          "213:                                     };",
          "215:                                     const validatePassword = function() {",
          "216:                                         const password = document.getElementById('password1');",
          "217:                                         if (password) {",
          "218:                                             const passwordStrengthWrapper =",
          "219:                                                     document.getElementById('passwordStrengthWrapper');",
          "220:                                             passwordStrengthWrapper.hidden = false;",
          "221:                                             const score = passwordScore(password.value);",
          "222:                                             const passwordStrengthIndicator = document.getElementById('passwordStrength');",
          "223:                                             passwordStrengthIndicator.innerText = passwordStrength(score);",
          "224:                                             passwordStrengthIndicator.setAttribute('style', 'color: ' +",
          "225:                                                 passwordStrengthColor(score));",
          "226:                                             document.getElementById('password2').value = password.value;",
          "227:                                         }",
          "228:                                     }",
          "229:                                 </script>",
          "230:                                 <div class=\"Checkbox Checkbox-small\">",
          "231:                                     <label class=\"Checkbox-wrapper\">",
          "232:                                         <input",
          "233:                                             type=\"checkbox\"",
          "234:                                             id=\"showPassword\"",
          "235:                                             onClick=\"togglePasswordType(this)\"",
          "236:                                             name=\"remember_me\"",
          "237:                                             tabindex=\"7\"",
          "238:                                         />",
          "239:                                         <div class=\"Checkbox-indicator\">",
          "240:                                             <svg",
          "241:                                                 xmlns=\"http://www.w3.org/2000/svg\"",
          "242:                                                 focusable=\"false\"",
          "243:                                                 width=\"20\"",
          "244:                                                 height=\"20\"",
          "245:                                                 class=\"svg-icon check\"",
          "246:                                                 viewBox=\"0 0 24 24\">",
          "247:                                                 <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"></path>",
          "248:                                             </svg>",
          "249:                                         </div>",
          "250:                                         <div class=\"Checkbox-text\">",
          "251:                                             ${%Show}",
          "252:                                         </div>",
          "253:                                     </label>",
          "254:                                 </div>",
          "255:                             </div>",
          "256:                             <input",
          "257:                                 onKeyUp=\"validatePassword()\"",
          "258:                                 class=\"${data.errors.containsKey('password1') ? 'danger' : 'normal'}\"",
          "259:                                 value=\"${data.password1}\"",
          "260:                                 type=\"password\"",
          "261:                                 tabindex=\"6\"",
          "262:                                 name=\"password1\"",
          "263:                                 id=\"password1\"",
          "264:                             />",
          "265:                             <div id=\"passwordStrengthWrapper\">Strength: <span id=\"passwordStrength\">&#160;</span> </div>",
          "266:                             <script type=\"text/javascript\">",
          "267:                                 if (document.getElementById('passwordStrengthWrapper')) {",
          "268:                                     document.getElementById('passwordStrengthWrapper').hidden = true;",
          "269:                                 }",
          "270:                             </script>",
          "272:                         </div>",
          "273:                         <div class=\"formRow\">",
          "274:                             A strong password is a long password that's unique for every site. Try using a phrase with 5-6 words for the best security.",
          "275:                         </div>",
          "276:                         <input",
          "277:                             class=\"${data.errors.containsKey('password1') ? 'danger' : 'normal'}\"",
          "278:                             value=\"${data.password2}\"",
          "279:                             type=\"hidden\"",
          "280:                             name=\"password2\"",
          "281:                             id=\"password2\"",
          "282:                         />",
          "283:                         <div class=\"submit formRow\">",
          "284:                             <f:submit value=\"${%Create account}\"/>",
          "285:                         </div>",
          "286:                         <input type=\"hidden\" name=\"${h.getCrumbRequestField()}\" value=\"${h.getCrumb(request)}\"/>",
          "287:                         <j:if test=\"${data.errorField != null}\">",
          "288:                             <script type=\"text/javascript\">",
          "289:                                 const errorField = document.getElementById('${data.errorField}');",
          "290:                                 if(errorField &amp;&amp; errorField.focus) {",
          "291:                                     errorField.focus();",
          "292:                                 }",
          "293:                             </script>",
          "294:                         </j:if>",
          "295:                     </form>",
          "296:                 </div>",
          "297:             </div>",
          "298:         </body>",
          "299:     </html>",
          "",
          "---------------"
        ],
        "core/src/main/resources/hudson/util/HudsonIsLoading/index.jelly||core/src/main/resources/hudson/util/HudsonIsLoading/index.jelly": [
          "File: core/src/main/resources/hudson/util/HudsonIsLoading/index.jelly -> core/src/main/resources/hudson/util/HudsonIsLoading/index.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: -->",
          "25: <?jelly escape-by-default='true'?>",
          "44: </j:jelly>",
          "",
          "[Removed Lines]",
          "26: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\" xmlns:i=\"jelly:fmt\">",
          "27:   <st:statusCode value=\"503\" /><!-- SERVICE NOT AVAILABLE -->",
          "28:   <l:layout title=\"Jenkins\">",
          "29:     <l:header>",
          "30:       <!--meta http-equiv=\"refresh\" content=\"5\" /-->",
          "31:     </l:header>",
          "32:     <l:side-panel />",
          "33:     <l:main-panel>",
          "34:       <h1 style=\"margin-top:4em\">",
          "35:         ${%Please wait while Jenkins is getting ready to work}<span id=\"progress\">...</span>",
          "36:       </h1>",
          "37:       <p style=\"color:gray\">",
          "38:         ${%Your browser will reload automatically when Jenkins is ready.}",
          "39:       </p>",
          "41:       <script>applySafeRedirector(window.location.href)</script>",
          "42:     </l:main-panel>",
          "43:   </l:layout>",
          "",
          "[Added Lines]",
          "27: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:x=\"jelly:xml\" xmlns:f=\"/lib/form\">",
          "29:     <st:statusCode value=\"503\"/><!-- SERVICE NOT AVAILABLE -->",
          "30:     <st:setHeader name=\"Expires\" value=\"0\"/>",
          "31:     <st:setHeader name=\"Cache-Control\" value=\"no-cache,no-store,must-revalidate\"/>",
          "32:     <!-- response contentType header -->",
          "33:     <st:contentType value=\"text/html;charset=UTF-8\"/>",
          "34:     <x:doctype name=\"html\"/>",
          "35:     <html lang=\"${request.getLocale().toLanguageTag()}\">",
          "36:         <head data-rooturl=\"${rootURL}\" data-resurl=\"${resURL}\" resURL=\"${resURL}\">",
          "37:             <title>${%Starting Jenkins}</title>",
          "38:             <!-- we do not want bots on this page -->",
          "39:             <meta name=\"ROBOTS\" content=\"NOFOLLOW\"/>",
          "40:             <link rel=\"stylesheet\" href=\"${resURL}/css/simple-page.css\" type=\"text/css\" />",
          "41:             <link rel=\"stylesheet\" href=\"${resURL}/css/simple-page.theme.css\" type=\"text/css\" />",
          "42:             <link rel=\"stylesheet\" href=\"${resURL}/css/loading.css\" type=\"text/css\" />",
          "43:         </head>",
          "44:         <body>",
          "45:             <div class=\"simple-page\" role=\"main\">",
          "46:                 <div class=\"modal signup\">",
          "47:                     <div class=\"signupIntroDefault\">",
          "48:                         <div class=\"logo\"></div>",
          "49:                         <h1 class=\"loading\">",
          "50:                             ${%Please wait while Jenkins is getting ready to work}",
          "51:                             <span>.</span><span>.</span><span>.</span>",
          "52:                         </h1>",
          "53:                         <p>",
          "54:                             ${%Your browser will reload automatically when Jenkins is ready.}",
          "55:                         </p>",
          "56:                     </div>",
          "57:                 </div>",
          "58:             </div>",
          "59:             <script src=\"${resURL}/scripts/loading.js\" type=\"text/javascript\"></script>",
          "60:             <script>safeRedirector(window.location.href);</script>",
          "61:         </body>",
          "62:     </html>",
          "",
          "---------------"
        ],
        "core/src/main/resources/hudson/util/HudsonIsRestarting/index.jelly||core/src/main/resources/hudson/util/HudsonIsRestarting/index.jelly": [
          "File: core/src/main/resources/hudson/util/HudsonIsRestarting/index.jelly -> core/src/main/resources/hudson/util/HudsonIsRestarting/index.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: -->",
          "25: <?jelly escape-by-default='true'?>",
          "",
          "[Removed Lines]",
          "26: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\" xmlns:i=\"jelly:fmt\">",
          "27:   <st:statusCode value=\"503\" /><!-- SERVICE NOT AVAILABLE -->",
          "28:   <l:layout>",
          "29:     <l:header title=\"Jenkins\">",
          "30:       <!--meta http-equiv=\"refresh\" content=\"5\" /-->",
          "31:     </l:header>",
          "32:     <l:side-panel />",
          "33:     <l:main-panel>",
          "34:       <h1 style=\"margin-top:4em\">",
          "35:         ${%Please wait while Jenkins is restarting}<span id=\"progress\">...</span>",
          "36:       </h1>",
          "37:       <p style=\"color:grey\">",
          "38:         ${%Your browser will reload automatically when Jenkins is ready.}",
          "39:       </p>",
          "41:       <script>applySafeRedirector(window.location.href)</script>",
          "42:     </l:main-panel>",
          "43:   </l:layout>",
          "44: </j:jelly>",
          "",
          "[Added Lines]",
          "29:     <st:statusCode value=\"503\"/><!-- SERVICE NOT AVAILABLE -->",
          "30:     <st:setHeader name=\"Expires\" value=\"0\"/>",
          "31:     <st:setHeader name=\"Cache-Control\" value=\"no-cache,no-store,must-revalidate\"/>",
          "32:     <!-- response contentType header -->",
          "33:     <st:contentType value=\"text/html;charset=UTF-8\"/>",
          "34:     <x:doctype name=\"html\"/>",
          "35:     <html lang=\"${request.getLocale().toLanguageTag()}\">",
          "36:         <head data-rooturl=\"${rootURL}\" data-resurl=\"${resURL}\" resURL=\"${resURL}\">",
          "37:             <title>${%Restarting Jenkins}</title>",
          "38:             <!-- we do not want bots on this page -->",
          "39:             <meta name=\"ROBOTS\" content=\"NOFOLLOW\"/>",
          "40:             <link rel=\"stylesheet\" href=\"${resURL}/css/simple-page.css\" type=\"text/css\" />",
          "41:             <link rel=\"stylesheet\" href=\"${resURL}/css/simple-page.theme.css\" type=\"text/css\" />",
          "42:             <link rel=\"stylesheet\" href=\"${resURL}/css/loading.css\" type=\"text/css\" />",
          "43:         </head>",
          "44:         <body>",
          "45:             <div class=\"simple-page\" role=\"main\">",
          "46:                 <div class=\"modal signup\">",
          "47:                     <div class=\"signupIntroDefault\">",
          "48:                         <div class=\"logo\"></div>",
          "49:                         <h1 class=\"loading\">",
          "50:                             ${%Please wait while Jenkins is restarting}",
          "51:                             <span>.</span><span>.</span><span>.</span>",
          "52:                         </h1>",
          "53:                         <p>",
          "54:                             ${%Your browser will reload automatically when Jenkins is ready.}",
          "55:                         </p>",
          "56:                     </div>",
          "57:                 </div>",
          "58:             </div>",
          "59:             <script src=\"${resURL}/scripts/loading.js\" type=\"text/javascript\"></script>",
          "60:             <script>safeRedirector(window.location.href);</script>",
          "61:         </body>",
          "62:     </html>",
          "63: </j:jelly>",
          "",
          "---------------"
        ],
        "core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-head.jelly||core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-head.jelly": [
          "File: core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-head.jelly -> core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-head.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!--",
          "2: The MIT License",
          "4: Copyright (c) 2018, CloudBees, Inc.",
          "6: Permission is hereby granted, free of charge, to any person obtaining a copy",
          "7: of this software and associated documentation files (the \"Software\"), to deal",
          "8: in the Software without restriction, including without limitation the rights",
          "9: to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",
          "10: copies of the Software, and to permit persons to whom the Software is",
          "11: furnished to do so, subject to the following conditions:",
          "13: The above copyright notice and this permission notice shall be included in",
          "14: all copies or substantial portions of the Software.",
          "16: THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",
          "17: IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",
          "18: FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE",
          "19: AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",
          "20: LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",
          "21: OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN",
          "22: THE SOFTWARE.",
          "23: -->",
          "24: <?jelly escape-by-default='true'?>",
          "25: <j:jelly xmlns:j=\"jelly:core\">",
          "26:   <link rel=\"stylesheet\" href=\"${resURL}/css/simple-page.css\" type=\"text/css\" />",
          "27:   <link rel=\"stylesheet\" href=\"${resURL}/css/simple-page.theme.css\" type=\"text/css\" />",
          "28:   <link rel=\"stylesheet\" href=\"${resURL}/css/simple-page-forms.css\" type=\"text/css\" />",
          "29: </j:jelly>",
          "",
          "---------------"
        ],
        "core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-header.jelly||core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-header.jelly": [
          "File: core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-header.jelly -> core/src/main/resources/jenkins/model/DefaultSimplePageDecorator/simple-header.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!--",
          "2: The MIT License",
          "4: Copyright (c) 2018, CloudBees, Inc.",
          "6: Permission is hereby granted, free of charge, to any person obtaining a copy",
          "7: of this software and associated documentation files (the \"Software\"), to deal",
          "8: in the Software without restriction, including without limitation the rights",
          "9: to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",
          "10: copies of the Software, and to permit persons to whom the Software is",
          "11: furnished to do so, subject to the following conditions:",
          "13: The above copyright notice and this permission notice shall be included in",
          "14: all copies or substantial portions of the Software.",
          "16: THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",
          "17: IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",
          "18: FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE",
          "19: AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",
          "20: LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",
          "21: OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN",
          "22: THE SOFTWARE.",
          "23: -->",
          "24: <?jelly escape-by-default='true'?>",
          "25: <j:jelly xmlns:j=\"jelly:core\">",
          "26:     <div id=\"loginIntroDefault\">",
          "27:         <div class=\"logo\"> </div>",
          "28:         <h1>${%Welcome to Jenkins!}</h1>",
          "29:     </div>",
          "30: </j:jelly>",
          "",
          "---------------"
        ],
        "core/src/main/resources/jenkins/model/Jenkins/login.jelly||core/src/main/resources/jenkins/model/Jenkins/login.jelly": [
          "File: core/src/main/resources/jenkins/model/Jenkins/login.jelly -> core/src/main/resources/jenkins/model/Jenkins/login.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: -->",
          "25: <?jelly escape-by-default='true'?>",
          "73:           </div>",
          "80: </j:jelly>",
          "",
          "[Removed Lines]",
          "26: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "27:   <j:choose>",
          "28:   <j:when test=\"${it.setupWizard.isUsingSecurityToken()}\">",
          "29:     <st:include it=\"${it.setupWizard}\" page=\"authenticate-security-token\"/>",
          "30:   </j:when>",
          "31:   <j:otherwise>",
          "32:   <l:layout norefresh=\"true\">",
          "33:     <l:hasPermission permission=\"${app.READ}\">",
          "34:       <st:include page=\"sidepanel.jelly\" />",
          "35:     </l:hasPermission>",
          "36:     <l:main-panel>",
          "37:       <div style=\"margin: 2em;\">",
          "38:         <!-- login form -->",
          "39:         <form name=\"login\" action=\"${it.securityRealm.authenticationGatewayUrl}\" method=\"post\" style=\"text-size:smaller\">",
          "40:           <table>",
          "41:             <tr>",
          "42:               <td>${%User}:</td>",
          "43:               <td><input type=\"text\" name=\"j_username\" id=\"j_username\" autocorrect=\"off\" autocapitalize=\"off\" /></td>",
          "44:             </tr>",
          "45:             <tr>",
          "46:               <td>${%Password}:</td>",
          "47:               <td><input type=\"password\" name=\"j_password\" /></td>",
          "48:             </tr>",
          "49:             <j:if test=\"${app.security.name()=='SECURED' and !app.disableRememberMe}\">",
          "50:               <!-- remember me service only available for Acegi -->",
          "51:               <tr>",
          "52:                 <td align=\"right\"><input id=\"remember_me\" type=\"checkbox\" name=\"remember_me\" /></td>",
          "53:                 <td><label for=\"remember_me\">${%Remember me on this computer}</label></td>",
          "54:               </tr>",
          "55:             </j:if>",
          "56:           </table>",
          "57:           <input type=\"hidden\" name=\"from\" value=\"${request.getParameter('from')}\" />",
          "58:           <f:submit value=\"${%login}\" />",
          "59:           <script>",
          "60:             $('j_username').focus();",
          "61:           </script>",
          "62:         </form>",
          "64:         <j:forEach var=\"fls\" items=\"${it.getFederatedLoginServices()}\">",
          "65:           <div>",
          "66:             <st:include page=\"loginFragment.jelly\" it=\"${fls}\"/>",
          "67:           </div>",
          "68:         </j:forEach>",
          "70:         <j:if test=\"${it.securityRealm.allowsSignup()}\">",
          "71:           <div style=\"margin-top:2em\">",
          "72:             ${%signUp}",
          "74:         </j:if>",
          "75:       </div>",
          "76:     </l:main-panel>",
          "77:   </l:layout>",
          "78:   </j:otherwise>",
          "79:   </j:choose>",
          "",
          "[Added Lines]",
          "26: <j:jelly xmlns:j=\"jelly:core\" xmlns:f=\"/lib/form\" xmlns:x=\"jelly:xml\" xmlns:st=\"jelly:stapler\">",
          "27:   <!-- deactivate all caching -->",
          "28:   <st:setHeader name=\"Expires\" value=\"0\" />",
          "29:   <st:setHeader name=\"Cache-Control\" value=\"no-cache,no-store,must-revalidate\" />",
          "30:   <j:new var=\"h\" className=\"hudson.Functions\" /><!-- instead of JSP functions -->",
          "31:   <!-- needed for cli -->",
          "32:   <j:if test=\"${request.servletPath=='/' || request.servletPath==''}\">",
          "33:     ${h.advertiseHeaders(response)}",
          "34:     <j:forEach var=\"pd\" items=\"${h.pageDecorators}\">",
          "35:       <st:include it=\"${pd}\" page=\"httpHeaders.jelly\" optional=\"true\"/>",
          "36:     </j:forEach>",
          "37:   </j:if>",
          "38:   <!-- response contentType header -->",
          "39:   <st:contentType value=\"text/html;charset=UTF-8\" />",
          "40:   <!--",
          "41:     needed to generate a session if non exists,",
          "42:     without it we would add \";jsessionid=\" to the url which will result in a 404",
          "43:   -->",
          "44:   <j:set var=\"_\" value=\"${request.getSession()}\"/>",
          "45:   <!-- get default/commong page variable -->",
          "46:   ${h.initPageVariables(context)}",
          "47:   <x:doctype name=\"html\" />",
          "48:   <!-- needed for the redirect after login -->",
          "49:   <j:set var=\"from\" value=\"${error ? request.session.getAttribute('from') : request.getParameter('from')}\"/>",
          "50:   <!-- in case of error we want to surround the form elements with an error hint -->",
          "51:   <j:set var=\"inputClass\" value=\"${error ? 'danger' : 'normal'}\"/>",
          "52:   <j:set var=\"simpleDecorator\" value=\"${h.simplePageDecorator}\"/>",
          "53:   <!-- real deal starting here -->",
          "54:   <html lang=\"${request.getLocale().toLanguageTag()}\">",
          "55:     <head data-rooturl=\"${rootURL}\" data-resurl=\"${resURL}\" resURL=\"${resURL}\">",
          "56:       <title>${%signIn} [Jenkins]</title>",
          "57:       <!-- we do not want bots on this page -->",
          "58:       <meta name=\"ROBOTS\" content=\"NOFOLLOW\" />",
          "59:       <!-- css styling, will fallback to default implementation -->",
          "60:       <st:include it=\"${simpleDecorator}\" page=\"simple-head.jelly\" optional=\"true\"/>",
          "61:     </head>",
          "62:     <body>",
          "63:       <j:choose>",
          "64:         <j:when test=\"${it.setupWizard.isUsingSecurityToken()}\">",
          "65:           <st:include it=\"${it.setupWizard}\" page=\"authenticate-security-token\"/>",
          "66:         </j:when>",
          "67:         <j:otherwise>",
          "68:           <div class=\"simple-page\" role=\"main\">",
          "69:             <div class=\"modal login\">",
          "70:               <st:include it=\"${simpleDecorator}\" page=\"simple-header.jelly\" optional=\"true\"/>",
          "71:               <!-- login form -->",
          "72:               <form name=\"login\" action=\"${it.securityRealm.authenticationGatewayUrl}\" method=\"post\">",
          "73:                 <j:if test=\"${it.securityRealm.allowsSignup()}\">",
          "74:                   <div class=\"signupTag\">",
          "75:                     ${%signUp}",
          "76:                   </div>",
          "77:                 </j:if>",
          "78:                 <j:if test=\"${error}\">",
          "79:                   <div class=\"alert alert-danger\">",
          "80:                     ${%Invalid username or password}",
          "81:                   </div>",
          "82:                 </j:if>",
          "83:                 <div class=\"formRow\">",
          "84:                   <input",
          "85:                     class=\"${inputClass}\"",
          "86:                     type=\"text\"",
          "87:                     name=\"j_username\"",
          "88:                     id=\"j_username\"",
          "89:                     autocorrect=\"off\"",
          "90:                     autocapitalize=\"off\"",
          "91:                     placeholder=\"${%Username}\"",
          "92:                   />",
          "93:                 </div>",
          "94:                 <div class=\"formRow\">",
          "95:                   <input",
          "96:                     class=\"${inputClass}\"",
          "97:                     type=\"password\"",
          "98:                     name=\"j_password\"",
          "99:                     placeholder=\"${%Password}\"",
          "100:                   />",
          "101:                 </div>",
          "102:                 <input type=\"hidden\" name=\"from\" value=\"${from}\" />",
          "103:                 <div class=\"submit formRow\"><f:submit value=\"${%signIn}\" /></div>",
          "104:                 <!-- focus the username field -->",
          "105:                 <script type=\"text/javascript\">",
          "106:                   document.getElementById('j_username').focus();",
          "107:                   var checkBoxClick = function(event) {",
          "108:                     document.getElementById('remember_me').click();",
          "109:                   }",
          "110:                 </script>",
          "112:                 <j:if test=\"${app.security.name()=='SECURED' and !app.disableRememberMe}\">",
          "113:                   <!-- remember me service only available for Acegi -->",
          "114:                   <div class=\"Checkbox Checkbox-medium\">",
          "115:                     <label class=\"Checkbox-wrapper\">",
          "116:                       <input",
          "117:                         type=\"checkbox\"",
          "118:                         id=\"remember_me\"",
          "119:                         name=\"remember_me\"",
          "120:                       />",
          "121:                       <div class=\"Checkbox-indicator\">",
          "122:                         <svg",
          "123:                           xmlns=\"http://www.w3.org/2000/svg\"",
          "124:                           focusable=\"false\"",
          "125:                           width=\"25\"",
          "126:                           height=\"25\"",
          "127:                           class=\"svg-icon check\"",
          "128:                           viewBox=\"0 0 24 24\">",
          "129:                           <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"></path>",
          "130:                         </svg>",
          "131:                       </div>",
          "132:                       <div class=\"Checkbox-text\">",
          "133:                         ${%Keep me signed in}",
          "134:                       </div>",
          "135:                     </label>",
          "136:                   </div>",
          "137:                 </j:if>",
          "139:               </form>",
          "141:               <j:forEach var=\"fls\" items=\"${it.getFederatedLoginServices()}\">",
          "142:                 <div>",
          "143:                   <st:include page=\"loginFragment.jelly\" it=\"${fls}\"/>",
          "144:                 </div>",
          "145:               </j:forEach>",
          "147:               <div class=\"footer\">",
          "149:                 <st:include it=\"${simpleDecorator}\" page=\"simple-footer.jelly\" optional=\"true\"/>",
          "150:               </div>",
          "152:             </div>",
          "154:         </j:otherwise>",
          "155:       </j:choose>",
          "156:     </body>",
          "157:   </html>",
          "",
          "---------------"
        ],
        "core/src/main/resources/jenkins/model/Jenkins/login.properties||core/src/main/resources/jenkins/model/Jenkins/login.properties": [
          "File: core/src/main/resources/jenkins/model/Jenkins/login.properties -> core/src/main/resources/jenkins/model/Jenkins/login.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN",
          "21: # THE SOFTWARE.",
          "24: login=log in",
          "",
          "[Removed Lines]",
          "23: signUp=<a href=\"signup\">Create an account</a> if you are not a member yet.",
          "",
          "[Added Lines]",
          "23: signUp=Please sign in below or <a href=\"signup\">create an account</a>.",
          "25: signIn=Sign in",
          "26: loginWelcome=Welcome to Jenkins!",
          "",
          "---------------"
        ],
        "core/src/main/resources/jenkins/model/Jenkins/loginError.jelly||core/src/main/resources/jenkins/model/Jenkins/loginError.jelly": [
          "File: core/src/main/resources/jenkins/model/Jenkins/loginError.jelly -> core/src/main/resources/jenkins/model/Jenkins/loginError.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: <!-- report a login error -->",
          "26: <?jelly escape-by-default='true'?>",
          "28:   <j:choose>",
          "29:     <j:new var=\"h\" className=\"hudson.Functions\" />",
          "30:     <j:when test=\"${app.setupWizard.isUsingSecurityToken()}\">",
          "",
          "[Removed Lines]",
          "27: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "",
          "[Added Lines]",
          "27: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:       <st:include it=\"${app.setupWizard}\" page=\"authenticate-security-token\"/>",
          "33:     </j:when>",
          "34:     <j:when test=\"${app.isUseSecurity() and h.isAnonymous()}\">",
          "39:       <st:statusCode value=\"401\" />",
          "57:     </j:when>",
          "58:     <j:otherwise>",
          "59:       <st:redirect url=\".\" />",
          "",
          "[Removed Lines]",
          "35:       <!--",
          "36:         The only time the error message makes sense is when Jenkins is protected and the user failed to authenticate.",
          "37:         If the user accidentally comes to this page (by back button, etc), redirect away to prevent a confusion.",
          "38:       -->",
          "40:       <l:layout title=\"${%Login Error}\">",
          "41:         <l:hasPermission permission=\"${app.READ}\">",
          "42:           <st:include page=\"sidepanel.jelly\" />",
          "43:         </l:hasPermission>",
          "44:         <l:main-panel>",
          "45:           <div style=\"margin: 2em; text-align:center; color:red; font-weight:bold\">",
          "46:             ${%Invalid login information. Please try again.}",
          "47:             <br/>",
          "48:             <a href=\"login?from=${request.session.getAttribute('from')}\">${%Try again}</a>",
          "49:           </div>",
          "50:           <div align=\"middle\">",
          "51:             <div style=\"margin-top:2em; color:gray; width:20em\">",
          "52:               ${%If you are a system administrator and suspect this to be a configuration problem, see the server console output for more details.}",
          "53:             </div>",
          "54:           </div>",
          "55:         </l:main-panel>",
          "56:       </l:layout>",
          "",
          "[Added Lines]",
          "36:       <j:set var=\"error\" value=\"true\"/>",
          "37:       <st:include it=\"${it}\" page=\"login.jelly\"/>",
          "",
          "---------------"
        ],
        "war/src/main/webapp/css/loading.css||war/src/main/webapp/css/loading.css": [
          "File: war/src/main/webapp/css/loading.css -> war/src/main/webapp/css/loading.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: @keyframes blink {",
          "29:     0% {",
          "30:       opacity: .2;",
          "31:     }",
          "36:     20% {",
          "37:       opacity: 1;",
          "38:     }",
          "43:     100% {",
          "44:       opacity: .2;",
          "45:     }",
          "46: }",
          "47: .loading span {",
          "51:     animation-name: blink;",
          "55:     animation-duration: 1.4s;",
          "59:     animation-iteration-count: infinite;",
          "67:     animation-fill-mode: both;",
          "68: }",
          "70: .loading span:nth-child(2) {",
          "76:     animation-delay: .2s;",
          "77: }",
          "79: .loading span:nth-child(3) {",
          "85:     animation-delay: .4s;",
          "86: }",
          "",
          "---------------"
        ],
        "war/src/main/webapp/css/signup.css||war/src/main/webapp/css/signup.css": [
          "File: war/src/main/webapp/css/signup.css -> war/src/main/webapp/css/signup.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: .signup{",
          "25:   min-width: 480px;",
          "26:   max-width: 480px;",
          "27:   width: 480px;",
          "28: }",
          "29: .signupIntroDefault {",
          "30:   text-align: center;",
          "31: }",
          "32: form.signup{",
          "33:   min-width: 480px;",
          "34:   max-width: 480px;",
          "35:   width: 480px;",
          "36:   text-align: left;",
          "37: }",
          "38: .inputHeader {",
          "39:   display: flex;",
          "40:   justify-content: space-between;",
          "41:   align-items: center;",
          "42: }",
          "43: #showPassword {",
          "44:   width: unset;",
          "45:   margin-right: 5px;",
          "46: }",
          "47: .combinedElement{",
          "48:   display: flex;",
          "49:   align-items: center;",
          "50: }",
          "51: label {",
          "52:   margin-bottom: 7px;",
          "53: }",
          "54: #passwordStrengthWrapper {",
          "55:   margin-top: 4px;",
          "56: }",
          "",
          "---------------"
        ],
        "war/src/main/webapp/css/simple-page-forms.css||war/src/main/webapp/css/simple-page-forms.css": [
          "File: war/src/main/webapp/css/simple-page-forms.css -> war/src/main/webapp/css/simple-page-forms.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: .Checkbox {",
          "2:   display: inline-block;",
          "3: }",
          "4: .Checkbox .svg-icon {",
          "5:   width: 20px;",
          "6:   height: 20px;",
          "7: }",
          "8: .Checkbox .Checkbox-wrapper {",
          "9:   display: flex;",
          "10:   align-items: center;",
          "11: }",
          "12: .Checkbox input[type=\"checkbox\"] {",
          "13:   border: 0;",
          "14:   clip: rect(0, 0, 0, 0);",
          "15:   height: 1px;",
          "16:   margin: -1px;",
          "17:   overflow: hidden;",
          "18:   padding: 0;",
          "19:   position: absolute;",
          "20:   width: 1px;",
          "21: }",
          "22: .Checkbox .Checkbox-indicator {",
          "23:   display: flex;",
          "24:   border: 1px solid rgba(73, 73, 73, 0.5);",
          "25:   border-radius: 3px;",
          "26:   cursor: pointer;",
          "27: }",
          "28: .Checkbox .Checkbox-text {",
          "29:   margin-left: 5px;",
          "30:   cursor: pointer;",
          "31: }",
          "32: .Checkbox .svg-icon {",
          "33:   opacity: 0;",
          "34:   fill: #fff;",
          "35:   transition: opacity 0.1s linear;",
          "36: }",
          "37: .Checkbox input[type=\"checkbox\"]:checked + .Checkbox-indicator {",
          "38:   background-color: #4A90E2;",
          "39:   border-color: #4A90E2;",
          "40: }",
          "41: .Checkbox input[type=\"checkbox\"]:checked + .Checkbox-indicator .svg-icon {",
          "42:   opacity: 1;",
          "43: }",
          "44: .Checkbox input[type=\"checkbox\"]:focus + .Checkbox-indicator,",
          "45: .Checkbox.focus .Checkbox-indicator {",
          "46:   outline: 0;",
          "47:   box-shadow: inset 0 0 2px 3px rgba(0, 0, 0, 0.2);",
          "48: }",
          "49: .Checkbox input[disabled] + .Checkbox-indicator,",
          "50: fieldset[disabled] .Checkbox input + .Checkbox-indicator,",
          "51: .Checkbox input[disabled] ~ .Checkbox-text,",
          "52: fieldset[disabled] .Checkbox input ~ .Checkbox-text {",
          "53:   opacity: 0.4;",
          "54:   cursor: auto;",
          "55: }",
          "56: @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {",
          "57:   .Checkbox input[type=\"checkbox\"]:focus + .Checkbox-indicator,",
          "58:   .Checkbox.focus .Checkbox-indicator {",
          "59:     box-shadow: inset 0 0 1px 3px rgba(0, 0, 0, 0.2);",
          "60:   }",
          "61: }",
          "62: @supports (-ms-ime-align:auto) {",
          "63:   .Checkbox input[type=\"checkbox\"]:focus + .Checkbox-indicator,",
          "64:   .Checkbox.focus .Checkbox-indicator {",
          "65:     box-shadow: inset 0 0 1px 3px rgba(0, 0, 0, 0.2);",
          "66:   }",
          "67: }",
          "68: .Checkbox-small .svg-icon {",
          "69:   width: 16px;",
          "70:   height: 16px;",
          "71: }",
          "72: .Checkbox-medium .svg-icon {",
          "73:   width: 20px;",
          "74:   height: 20px;",
          "75: }",
          "76: .Checkbox-large .svg-icon {",
          "77:   width: 24px;",
          "78:   height: 24px;",
          "79: }",
          "",
          "---------------"
        ],
        "war/src/main/webapp/css/simple-page.css||war/src/main/webapp/css/simple-page.css": [
          "File: war/src/main/webapp/css/simple-page.css -> war/src/main/webapp/css/simple-page.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: html {",
          "25:   height: 100vh;",
          "26:   font-family: \"LatoLatinWeb\", \"Lato\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;",
          "27:   font-size: 14px;",
          "28:   line-height: 18px;",
          "29: }",
          "31: .simple-page h1 {",
          "32:   font-size: 24px;",
          "33: }",
          "35: .simple-page {",
          "36:   text-align: center;",
          "37:   display: -webkit-box;",
          "38:   display: -moz-box;",
          "39:   display: -ms-flexbox;",
          "40:   display: -webkit-flex;",
          "41:   display: flex;",
          "42:   -webkit-box-align: center;",
          "43:   -moz-box-align: center;",
          "44:   -ms-flex-align: center;",
          "45:   -webkit-align-items: center;",
          "46:   align-items: center;",
          "47:   -webkit-box-pack: center;",
          "48:   -moz-box-pack: center;",
          "49:   -ms-flex-pack: center;",
          "50:   -webkit-justify-content: center;",
          "51:   justify-content: center;",
          "52:   min-height: 90vh;",
          "53: }",
          "55: .simple-page form {",
          "56:   min-width: 300px;",
          "57:   max-width: 300px;",
          "58:   width: 300px;",
          "59: }",
          "61: .simple-page input {",
          "62:   padding: 6px 8px;",
          "63:   display: inline-block;",
          "64:   text-align: left;",
          "65:   text-decoration: none;",
          "66:   font-size: 18px;",
          "67:   border-radius: 3px;",
          "68:   border: 1px solid rgba(74,74,74,0.25);",
          "69: }",
          "71: .simple-page input[type=text],",
          "72: .simple-page input[type=password],",
          "73: .simple-page input[type=submit] {",
          "74:   width: 100%;",
          "75:   box-sizing: border-box;",
          "76: }",
          "78: .simple-page .formRow {",
          "79:   margin-top: 27px;",
          "80: }",
          "81: .simple-page .formRow ~ .formRow {",
          "82:   margin-top: 16px;",
          "83: }",
          "85: .simple-page input[type=submit] {",
          "86:   text-align: center;",
          "87: }",
          "89: .simple-page form .submit input {",
          "90:   border-radius: 3px;",
          "91:   color: #fff;",
          "92:   cursor: pointer;",
          "93: }",
          "95: .simple-page .alert {",
          "96:   text-align: center;",
          "97:   font-size: 14px;",
          "98:   line-height: 18px;",
          "99: }",
          "101: .simple-page .Checkbox-wrapper {",
          "102:   justify-content: center;",
          "103: }",
          "104: .simple-page .login .Checkbox-wrapper {",
          "105:   margin-top: 20px;",
          "106: }",
          "107: #remember_me{",
          "108:   width: unset;",
          "109:   margin-right: 5px;",
          "110: }",
          "119: [type=\"checkbox\"],",
          "120: [type=\"radio\"] {",
          "123: }",
          "125: .layout-small {",
          "126:     font-size: 12px;",
          "127: }",
          "129: .layout-medium {",
          "130:     font-size: 14px;",
          "131: }",
          "133: .layout-large {",
          "134:     font-size: 18px;",
          "135: }",
          "",
          "---------------"
        ],
        "war/src/main/webapp/css/simple-page.theme.css||war/src/main/webapp/css/simple-page.theme.css": [
          "File: war/src/main/webapp/css/simple-page.theme.css -> war/src/main/webapp/css/simple-page.theme.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: :root {",
          "29:   --main-bg-color-focus: #2171ce;",
          "30:   --main-bg-color: #4A90E2;",
          "31:   --danger-color: #C4000A;",
          "32: }",
          "34: html {",
          "35:   color: #4A4A4A;",
          "36: }",
          "38: .simple-page .logo {",
          "39:   background-image: url('../images/jenkins.svg');",
          "40:   background-repeat: no-repeat;",
          "41:   background-position: 50% 0;",
          "42:   height: 130px;",
          "43: }",
          "45: .simple-page form .submit input:focus {",
          "48: }",
          "50: .simple-page form .submit input {",
          "53: }",
          "55: .simple-page input.normal:focus {",
          "57: }",
          "59:  .simple-page .danger {",
          "62: }",
          "64: .simple-page .alert {",
          "66: }",
          "",
          "---------------"
        ],
        "war/src/main/webapp/scripts/loading.js||war/src/main/webapp/scripts/loading.js": [
          "File: war/src/main/webapp/scripts/loading.js -> war/src/main/webapp/scripts/loading.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: const Fetch = {",
          "25:     get: function (url, callback) {",
          "26:         const xhr = new XMLHttpRequest();",
          "27:         xhr.open('GET', url, true);",
          "28:         xhr.onload = function () {",
          "29:             const status = xhr.status;",
          "30:             if(callback) {",
          "31:                 callback(null, status);",
          "32:             }",
          "33:         };",
          "34:         xhr.onerror = function(){",
          "35:             const message = xhr.responseText;",
          "36:             const status = xhr.status;",
          "37:             if(callback) {",
          "38:                 callback(message, status);",
          "39:             }",
          "40:         };",
          "41:         xhr.send();",
          "42:     }",
          "43: };",
          "45: function safeRedirector(url) {",
          "46:     const timeout = 5000;",
          "47:     window.setTimeout(function() {",
          "48:         const statusChecker = arguments.callee;",
          "49:         Fetch.get(url, function(error, status) {",
          "50:             if(status === 503 || status === 0) {",
          "51:                 window.setTimeout(statusChecker, timeout)",
          "52:             } else {",
          "53:                 window.location.replace(url);",
          "54:             }",
          "55:             if(error) {",
          "56:                 console.error(error);",
          "57:             }",
          "58:         })",
          "59:     }, timeout);",
          "60: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}