{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4a757e129f69e720ee75d6c756df15c9a553e31f",
      "candidate_info": {
        "commit_hash": "4a757e129f69e720ee75d6c756df15c9a553e31f",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/4a757e129f69e720ee75d6c756df15c9a553e31f",
        "files": [
          "arch/X86/X86GenAsmWriter1.inc",
          "arch/X86/X86GenAsmWriter1_reduce.inc",
          "arch/X86/X86GenRegisterInfo.inc",
          "arch/X86/X86IntelInstPrinter.c",
          "arch/X86/X86Mapping.c",
          "cs.c",
          "include/capstone.h"
        ],
        "message": "Several changes for size reduction (#929)\n\n* Support CAPSTONE_STATIC with __GNUC__ compilers\n\n* Allow custom export rules\n\n* Make CAPSTONE_SHARED the default visibility option with GNUC (avoids behaviour changes)\n\n* Reduce capstone static build size (mainly for kernel usage)\n\n* Allow basic cs_detail support in diet mode\n\n* Fixed valid_bnd unused function warning\n\n* Do not disable cs_detail generation in CAPSTONE_DIET, use CAPSTONE_NO_DETAIL for that.\n\n* Reverted CAPSTONE_NO_DETAIL at least until capstone supports more flexible configuration\n\n* Added a missing endif\n\n* Disallow custom export rules",
        "before_after_code_files": [
          "arch/X86/X86GenAsmWriter1.inc||arch/X86/X86GenAsmWriter1.inc",
          "arch/X86/X86GenAsmWriter1_reduce.inc||arch/X86/X86GenAsmWriter1_reduce.inc",
          "arch/X86/X86GenRegisterInfo.inc||arch/X86/X86GenRegisterInfo.inc",
          "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c",
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c",
          "cs.c||cs.c",
          "include/capstone.h||include/capstone.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86GenAsmWriter1.inc||arch/X86/X86GenAsmWriter1.inc": [
          "File: arch/X86/X86GenAsmWriter1.inc -> arch/X86/X86GenAsmWriter1.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "15029: #ifdef PRINT_ALIAS_INSTR",
          "15030: #undef PRINT_ALIAS_INSTR",
          "15032: static void printCustomAliasOperand(MCInst *MI, unsigned OpIdx,",
          "15033:   unsigned PrintMethodIdx, SStream *OS)",
          "15034: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15032: #ifndef CAPSTONE_DIET",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15118:   return tmp;",
          "15119: }",
          "15121: #endif // PRINT_ALIAS_INSTR",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15123: #endif",
          "",
          "---------------"
        ],
        "arch/X86/X86GenAsmWriter1_reduce.inc||arch/X86/X86GenAsmWriter1_reduce.inc": [
          "File: arch/X86/X86GenAsmWriter1_reduce.inc -> arch/X86/X86GenAsmWriter1_reduce.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2761: #ifdef PRINT_ALIAS_INSTR",
          "2762: #undef PRINT_ALIAS_INSTR",
          "2764: static void printCustomAliasOperand(MCInst *MI, unsigned OpIdx,",
          "2765:   unsigned PrintMethodIdx, SStream *OS)",
          "2766: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2764: #ifndef CAPSTONE_DIET",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2832:   return tmp;",
          "2833: }",
          "2835: #endif // PRINT_ALIAS_INSTR",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2837: #endif",
          "",
          "---------------"
        ],
        "arch/X86/X86GenRegisterInfo.inc||arch/X86/X86GenRegisterInfo.inc": [
          "File: arch/X86/X86GenRegisterInfo.inc -> arch/X86/X86GenRegisterInfo.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1424:     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x03,",
          "1425:   };",
          "1427: static MCRegisterClass X86MCRegisterClasses[] = {",
          "1507: };",
          "1509: #endif // GET_REGINFO_MC_DESC",
          "",
          "[Removed Lines]",
          "1428:   { \"GR8\", GR8, GR8Bits, 20, sizeof(GR8Bits), X86_GR8RegClassID, 1, 1, 1, 1 },",
          "1429:   { \"GR8_NOREX\", GR8_NOREX, GR8_NOREXBits, 8, sizeof(GR8_NOREXBits), X86_GR8_NOREXRegClassID, 1, 1, 1, 1 },",
          "1430:   { \"GR8_ABCD_H\", GR8_ABCD_H, GR8_ABCD_HBits, 4, sizeof(GR8_ABCD_HBits), X86_GR8_ABCD_HRegClassID, 1, 1, 1, 1 },",
          "1431:   { \"GR8_ABCD_L\", GR8_ABCD_L, GR8_ABCD_LBits, 4, sizeof(GR8_ABCD_LBits), X86_GR8_ABCD_LRegClassID, 1, 1, 1, 1 },",
          "1432:   { \"GR16\", GR16, GR16Bits, 16, sizeof(GR16Bits), X86_GR16RegClassID, 2, 2, 1, 1 },",
          "1433:   { \"GR16_NOREX\", GR16_NOREX, GR16_NOREXBits, 8, sizeof(GR16_NOREXBits), X86_GR16_NOREXRegClassID, 2, 2, 1, 1 },",
          "1434:   { \"VK1\", VK1, VK1Bits, 8, sizeof(VK1Bits), X86_VK1RegClassID, 2, 2, 1, 1 },",
          "1435:   { \"VK16\", VK16, VK16Bits, 8, sizeof(VK16Bits), X86_VK16RegClassID, 2, 2, 1, 1 },",
          "1436:   { \"VK2\", VK2, VK2Bits, 8, sizeof(VK2Bits), X86_VK2RegClassID, 2, 2, 1, 1 },",
          "1437:   { \"VK4\", VK4, VK4Bits, 8, sizeof(VK4Bits), X86_VK4RegClassID, 2, 2, 1, 1 },",
          "1438:   { \"VK8\", VK8, VK8Bits, 8, sizeof(VK8Bits), X86_VK8RegClassID, 2, 2, 1, 1 },",
          "1439:   { \"VK16WM\", VK16WM, VK16WMBits, 7, sizeof(VK16WMBits), X86_VK16WMRegClassID, 2, 2, 1, 1 },",
          "1440:   { \"VK1WM\", VK1WM, VK1WMBits, 7, sizeof(VK1WMBits), X86_VK1WMRegClassID, 2, 2, 1, 1 },",
          "1441:   { \"VK2WM\", VK2WM, VK2WMBits, 7, sizeof(VK2WMBits), X86_VK2WMRegClassID, 2, 2, 1, 1 },",
          "1442:   { \"VK4WM\", VK4WM, VK4WMBits, 7, sizeof(VK4WMBits), X86_VK4WMRegClassID, 2, 2, 1, 1 },",
          "1443:   { \"VK8WM\", VK8WM, VK8WMBits, 7, sizeof(VK8WMBits), X86_VK8WMRegClassID, 2, 2, 1, 1 },",
          "1444:   { \"SEGMENT_REG\", SEGMENT_REG, SEGMENT_REGBits, 6, sizeof(SEGMENT_REGBits), X86_SEGMENT_REGRegClassID, 2, 2, 1, 1 },",
          "1445:   { \"GR16_ABCD\", GR16_ABCD, GR16_ABCDBits, 4, sizeof(GR16_ABCDBits), X86_GR16_ABCDRegClassID, 2, 2, 1, 1 },",
          "1446:   { \"FPCCR\", FPCCR, FPCCRBits, 1, sizeof(FPCCRBits), X86_FPCCRRegClassID, 2, 2, -1, 0 },",
          "1447:   { \"FR32X\", FR32X, FR32XBits, 32, sizeof(FR32XBits), X86_FR32XRegClassID, 4, 4, 1, 1 },",
          "1448:   { \"FR32\", FR32, FR32Bits, 16, sizeof(FR32Bits), X86_FR32RegClassID, 4, 4, 1, 1 },",
          "1449:   { \"GR32\", GR32, GR32Bits, 16, sizeof(GR32Bits), X86_GR32RegClassID, 4, 4, 1, 1 },",
          "1450:   { \"GR32_NOAX\", GR32_NOAX, GR32_NOAXBits, 15, sizeof(GR32_NOAXBits), X86_GR32_NOAXRegClassID, 4, 4, 1, 1 },",
          "1451:   { \"GR32_NOSP\", GR32_NOSP, GR32_NOSPBits, 15, sizeof(GR32_NOSPBits), X86_GR32_NOSPRegClassID, 4, 4, 1, 1 },",
          "1452:   { \"GR32_NOAX_and_GR32_NOSP\", GR32_NOAX_and_GR32_NOSP, GR32_NOAX_and_GR32_NOSPBits, 14, sizeof(GR32_NOAX_and_GR32_NOSPBits), X86_GR32_NOAX_and_GR32_NOSPRegClassID, 4, 4, 1, 1 },",
          "1453:   { \"DEBUG_REG\", DEBUG_REG, DEBUG_REGBits, 8, sizeof(DEBUG_REGBits), X86_DEBUG_REGRegClassID, 4, 4, 1, 1 },",
          "1454:   { \"GR32_NOREX\", GR32_NOREX, GR32_NOREXBits, 8, sizeof(GR32_NOREXBits), X86_GR32_NOREXRegClassID, 4, 4, 1, 1 },",
          "1455:   { \"VK32\", VK32, VK32Bits, 8, sizeof(VK32Bits), X86_VK32RegClassID, 4, 4, 1, 1 },",
          "1456:   { \"GR32_NOAX_and_GR32_NOREX\", GR32_NOAX_and_GR32_NOREX, GR32_NOAX_and_GR32_NOREXBits, 7, sizeof(GR32_NOAX_and_GR32_NOREXBits), X86_GR32_NOAX_and_GR32_NOREXRegClassID, 4, 4, 1, 1 },",
          "1457:   { \"GR32_NOREX_NOSP\", GR32_NOREX_NOSP, GR32_NOREX_NOSPBits, 7, sizeof(GR32_NOREX_NOSPBits), X86_GR32_NOREX_NOSPRegClassID, 4, 4, 1, 1 },",
          "1458:   { \"RFP32\", RFP32, RFP32Bits, 7, sizeof(RFP32Bits), X86_RFP32RegClassID, 4, 4, 1, 1 },",
          "1459:   { \"VK32WM\", VK32WM, VK32WMBits, 7, sizeof(VK32WMBits), X86_VK32WMRegClassID, 4, 4, 1, 1 },",
          "1460:   { \"GR32_NOAX_and_GR32_NOREX_NOSP\", GR32_NOAX_and_GR32_NOREX_NOSP, GR32_NOAX_and_GR32_NOREX_NOSPBits, 6, sizeof(GR32_NOAX_and_GR32_NOREX_NOSPBits), X86_GR32_NOAX_and_GR32_NOREX_NOSPRegClassID, 4, 4, 1, 1 },",
          "1461:   { \"GR32_ABCD\", GR32_ABCD, GR32_ABCDBits, 4, sizeof(GR32_ABCDBits), X86_GR32_ABCDRegClassID, 4, 4, 1, 1 },",
          "1462:   { \"GR32_ABCD_and_GR32_NOAX\", GR32_ABCD_and_GR32_NOAX, GR32_ABCD_and_GR32_NOAXBits, 3, sizeof(GR32_ABCD_and_GR32_NOAXBits), X86_GR32_ABCD_and_GR32_NOAXRegClassID, 4, 4, 1, 1 },",
          "1463:   { \"GR32_TC\", GR32_TC, GR32_TCBits, 3, sizeof(GR32_TCBits), X86_GR32_TCRegClassID, 4, 4, 1, 1 },",
          "1464:   { \"GR32_AD\", GR32_AD, GR32_ADBits, 2, sizeof(GR32_ADBits), X86_GR32_ADRegClassID, 4, 4, 1, 1 },",
          "1465:   { \"GR32_NOAX_and_GR32_TC\", GR32_NOAX_and_GR32_TC, GR32_NOAX_and_GR32_TCBits, 2, sizeof(GR32_NOAX_and_GR32_TCBits), X86_GR32_NOAX_and_GR32_TCRegClassID, 4, 4, 1, 1 },",
          "1466:   { \"CCR\", CCR, CCRBits, 1, sizeof(CCRBits), X86_CCRRegClassID, 4, 4, -1, 0 },",
          "1467:   { \"GR32_AD_and_GR32_NOAX\", GR32_AD_and_GR32_NOAX, GR32_AD_and_GR32_NOAXBits, 1, sizeof(GR32_AD_and_GR32_NOAXBits), X86_GR32_AD_and_GR32_NOAXRegClassID, 4, 4, 1, 1 },",
          "1468:   { \"RFP64\", RFP64, RFP64Bits, 7, sizeof(RFP64Bits), X86_RFP64RegClassID, 8, 4, 1, 1 },",
          "1469:   { \"FR64X\", FR64X, FR64XBits, 32, sizeof(FR64XBits), X86_FR64XRegClassID, 8, 8, 1, 1 },",
          "1470:   { \"GR64\", GR64, GR64Bits, 17, sizeof(GR64Bits), X86_GR64RegClassID, 8, 8, 1, 1 },",
          "1471:   { \"CONTROL_REG\", CONTROL_REG, CONTROL_REGBits, 16, sizeof(CONTROL_REGBits), X86_CONTROL_REGRegClassID, 8, 8, 1, 1 },",
          "1472:   { \"FR64\", FR64, FR64Bits, 16, sizeof(FR64Bits), X86_FR64RegClassID, 8, 8, 1, 1 },",
          "1473:   { \"GR64_with_sub_8bit\", GR64_with_sub_8bit, GR64_with_sub_8bitBits, 16, sizeof(GR64_with_sub_8bitBits), X86_GR64_with_sub_8bitRegClassID, 8, 8, 1, 1 },",
          "1474:   { \"GR64_NOSP\", GR64_NOSP, GR64_NOSPBits, 15, sizeof(GR64_NOSPBits), X86_GR64_NOSPRegClassID, 8, 8, 1, 1 },",
          "1475:   { \"GR64_with_sub_32bit_in_GR32_NOAX\", GR64_with_sub_32bit_in_GR32_NOAX, GR64_with_sub_32bit_in_GR32_NOAXBits, 15, sizeof(GR64_with_sub_32bit_in_GR32_NOAXBits), X86_GR64_with_sub_32bit_in_GR32_NOAXRegClassID, 8, 8, 1, 1 },",
          "1476:   { \"GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSP\", GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSP, GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSPBits, 14, sizeof(GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSPBits), X86_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSPRegClassID, 8, 8, 1, 1 },",
          "1477:   { \"GR64_NOREX\", GR64_NOREX, GR64_NOREXBits, 9, sizeof(GR64_NOREXBits), X86_GR64_NOREXRegClassID, 8, 8, 1, 1 },",
          "1478:   { \"GR64_TC\", GR64_TC, GR64_TCBits, 9, sizeof(GR64_TCBits), X86_GR64_TCRegClassID, 8, 8, 1, 1 },",
          "1479:   { \"GR64_NOSP_and_GR64_TC\", GR64_NOSP_and_GR64_TC, GR64_NOSP_and_GR64_TCBits, 8, sizeof(GR64_NOSP_and_GR64_TCBits), X86_GR64_NOSP_and_GR64_TCRegClassID, 8, 8, 1, 1 },",
          "1480:   { \"GR64_with_sub_16bit_in_GR16_NOREX\", GR64_with_sub_16bit_in_GR16_NOREX, GR64_with_sub_16bit_in_GR16_NOREXBits, 8, sizeof(GR64_with_sub_16bit_in_GR16_NOREXBits), X86_GR64_with_sub_16bit_in_GR16_NOREXRegClassID, 8, 8, 1, 1 },",
          "1481:   { \"VK64\", VK64, VK64Bits, 8, sizeof(VK64Bits), X86_VK64RegClassID, 8, 8, 1, 1 },",
          "1482:   { \"VR64\", VR64, VR64Bits, 8, sizeof(VR64Bits), X86_VR64RegClassID, 8, 8, 1, 1 },",
          "1483:   { \"GR64_NOREX_NOSP\", GR64_NOREX_NOSP, GR64_NOREX_NOSPBits, 7, sizeof(GR64_NOREX_NOSPBits), X86_GR64_NOREX_NOSPRegClassID, 8, 8, 1, 1 },",
          "1484:   { \"GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX\", GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX, GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAXBits, 7, sizeof(GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAXBits), X86_GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAXRegClassID, 8, 8, 1, 1 },",
          "1485:   { \"GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX\", GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX, GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXBits, 7, sizeof(GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXBits), X86_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXRegClassID, 8, 8, 1, 1 },",
          "1486:   { \"VK64WM\", VK64WM, VK64WMBits, 7, sizeof(VK64WMBits), X86_VK64WMRegClassID, 8, 8, 1, 1 },",
          "1487:   { \"GR64_NOREX_and_GR64_TC\", GR64_NOREX_and_GR64_TC, GR64_NOREX_and_GR64_TCBits, 6, sizeof(GR64_NOREX_and_GR64_TCBits), X86_GR64_NOREX_and_GR64_TCRegClassID, 8, 8, 1, 1 },",
          "1488:   { \"GR64_TCW64\", GR64_TCW64, GR64_TCW64Bits, 6, sizeof(GR64_TCW64Bits), X86_GR64_TCW64RegClassID, 8, 8, 1, 1 },",
          "1489:   { \"GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSP\", GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSP, GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSPBits, 6, sizeof(GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSPBits), X86_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSPRegClassID, 8, 8, 1, 1 },",
          "1490:   { \"GR64_NOREX_NOSP_and_GR64_TC\", GR64_NOREX_NOSP_and_GR64_TC, GR64_NOREX_NOSP_and_GR64_TCBits, 5, sizeof(GR64_NOREX_NOSP_and_GR64_TCBits), X86_GR64_NOREX_NOSP_and_GR64_TCRegClassID, 8, 8, 1, 1 },",
          "1491:   { \"GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAX\", GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAX, GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAXBits, 5, sizeof(GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAXBits), X86_GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAXRegClassID, 8, 8, 1, 1 },",
          "1492:   { \"GR64_ABCD\", GR64_ABCD, GR64_ABCDBits, 4, sizeof(GR64_ABCDBits), X86_GR64_ABCDRegClassID, 8, 8, 1, 1 },",
          "1493:   { \"GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX\", GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX, GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXBits, 4, sizeof(GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXBits), X86_GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXRegClassID, 8, 8, 1, 1 },",
          "1494:   { \"GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAX\", GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAX, GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAXBits, 3, sizeof(GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAXBits), X86_GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAXRegClassID, 8, 8, 1, 1 },",
          "1495:   { \"GR64_with_sub_32bit_in_GR32_TC\", GR64_with_sub_32bit_in_GR32_TC, GR64_with_sub_32bit_in_GR32_TCBits, 3, sizeof(GR64_with_sub_32bit_in_GR32_TCBits), X86_GR64_with_sub_32bit_in_GR32_TCRegClassID, 8, 8, 1, 1 },",
          "1496:   { \"GR64_with_sub_32bit_in_GR32_AD\", GR64_with_sub_32bit_in_GR32_AD, GR64_with_sub_32bit_in_GR32_ADBits, 2, sizeof(GR64_with_sub_32bit_in_GR32_ADBits), X86_GR64_with_sub_32bit_in_GR32_ADRegClassID, 8, 8, 1, 1 },",
          "1497:   { \"GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TC\", GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TC, GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TCBits, 2, sizeof(GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TCBits), X86_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TCRegClassID, 8, 8, 1, 1 },",
          "1498:   { \"GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAX\", GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAX, GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAXBits, 1, sizeof(GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAXBits), X86_GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAXRegClassID, 8, 8, 1, 1 },",
          "1499:   { \"RST\", RST, RSTBits, 8, sizeof(RSTBits), X86_RSTRegClassID, 10, 4, 1, 0 },",
          "1500:   { \"RFP80\", RFP80, RFP80Bits, 7, sizeof(RFP80Bits), X86_RFP80RegClassID, 10, 4, 1, 1 },",
          "1501:   { \"VR128X\", VR128X, VR128XBits, 32, sizeof(VR128XBits), X86_VR128XRegClassID, 16, 16, 1, 1 },",
          "1502:   { \"VR128\", VR128, VR128Bits, 16, sizeof(VR128Bits), X86_VR128RegClassID, 16, 16, 1, 1 },",
          "1503:   { \"VR256X\", VR256X, VR256XBits, 32, sizeof(VR256XBits), X86_VR256XRegClassID, 32, 32, 1, 1 },",
          "1504:   { \"VR256\", VR256, VR256Bits, 16, sizeof(VR256Bits), X86_VR256RegClassID, 32, 32, 1, 1 },",
          "1505:   { \"VR512\", VR512, VR512Bits, 32, sizeof(VR512Bits), X86_VR512RegClassID, 64, 64, 1, 1 },",
          "1506:   { \"VR512_with_sub_xmm_in_FR32\", VR512_with_sub_xmm_in_FR32, VR512_with_sub_xmm_in_FR32Bits, 16, sizeof(VR512_with_sub_xmm_in_FR32Bits), X86_VR512_with_sub_xmm_in_FR32RegClassID, 64, 64, 1, 1 },",
          "",
          "[Added Lines]",
          "1427: #ifdef CAPSTONE_DIET",
          "1428: #define CAPSTONE_REGISTER_CLASS(x) NULL",
          "1429: #else",
          "1430: #define CAPSTONE_REGISTER_CLASS(x) x",
          "1431: #endif",
          "1434:   { CAPSTONE_REGISTER_CLASS(\"GR8\"), GR8, GR8Bits, 20, sizeof(GR8Bits), X86_GR8RegClassID, 1, 1, 1, 1 },",
          "1435:   { CAPSTONE_REGISTER_CLASS(\"GR8_NOREX\"), GR8_NOREX, GR8_NOREXBits, 8, sizeof(GR8_NOREXBits), X86_GR8_NOREXRegClassID, 1, 1, 1, 1 },",
          "1436:   { CAPSTONE_REGISTER_CLASS(\"GR8_ABCD_H\"), GR8_ABCD_H, GR8_ABCD_HBits, 4, sizeof(GR8_ABCD_HBits), X86_GR8_ABCD_HRegClassID, 1, 1, 1, 1 },",
          "1437:   { CAPSTONE_REGISTER_CLASS(\"GR8_ABCD_L\"), GR8_ABCD_L, GR8_ABCD_LBits, 4, sizeof(GR8_ABCD_LBits), X86_GR8_ABCD_LRegClassID, 1, 1, 1, 1 },",
          "1438:   { CAPSTONE_REGISTER_CLASS(\"GR16\"), GR16, GR16Bits, 16, sizeof(GR16Bits), X86_GR16RegClassID, 2, 2, 1, 1 },",
          "1439:   { CAPSTONE_REGISTER_CLASS(\"GR16_NOREX\"), GR16_NOREX, GR16_NOREXBits, 8, sizeof(GR16_NOREXBits), X86_GR16_NOREXRegClassID, 2, 2, 1, 1 },",
          "1440:   { CAPSTONE_REGISTER_CLASS(\"VK1\"), VK1, VK1Bits, 8, sizeof(VK1Bits), X86_VK1RegClassID, 2, 2, 1, 1 },",
          "1441:   { CAPSTONE_REGISTER_CLASS(\"VK16\"), VK16, VK16Bits, 8, sizeof(VK16Bits), X86_VK16RegClassID, 2, 2, 1, 1 },",
          "1442:   { CAPSTONE_REGISTER_CLASS(\"VK2\"), VK2, VK2Bits, 8, sizeof(VK2Bits), X86_VK2RegClassID, 2, 2, 1, 1 },",
          "1443:   { CAPSTONE_REGISTER_CLASS(\"VK4\"), VK4, VK4Bits, 8, sizeof(VK4Bits), X86_VK4RegClassID, 2, 2, 1, 1 },",
          "1444:   { CAPSTONE_REGISTER_CLASS(\"VK8\"), VK8, VK8Bits, 8, sizeof(VK8Bits), X86_VK8RegClassID, 2, 2, 1, 1 },",
          "1445:   { CAPSTONE_REGISTER_CLASS(\"VK16WM\"), VK16WM, VK16WMBits, 7, sizeof(VK16WMBits), X86_VK16WMRegClassID, 2, 2, 1, 1 },",
          "1446:   { CAPSTONE_REGISTER_CLASS(\"VK1WM\"), VK1WM, VK1WMBits, 7, sizeof(VK1WMBits), X86_VK1WMRegClassID, 2, 2, 1, 1 },",
          "1447:   { CAPSTONE_REGISTER_CLASS(\"VK2WM\"), VK2WM, VK2WMBits, 7, sizeof(VK2WMBits), X86_VK2WMRegClassID, 2, 2, 1, 1 },",
          "1448:   { CAPSTONE_REGISTER_CLASS(\"VK4WM\"), VK4WM, VK4WMBits, 7, sizeof(VK4WMBits), X86_VK4WMRegClassID, 2, 2, 1, 1 },",
          "1449:   { CAPSTONE_REGISTER_CLASS(\"VK8WM\"), VK8WM, VK8WMBits, 7, sizeof(VK8WMBits), X86_VK8WMRegClassID, 2, 2, 1, 1 },",
          "1450:   { CAPSTONE_REGISTER_CLASS(\"SEGMENT_REG\"), SEGMENT_REG, SEGMENT_REGBits, 6, sizeof(SEGMENT_REGBits), X86_SEGMENT_REGRegClassID, 2, 2, 1, 1 },",
          "1451:   { CAPSTONE_REGISTER_CLASS(\"GR16_ABCD\"), GR16_ABCD, GR16_ABCDBits, 4, sizeof(GR16_ABCDBits), X86_GR16_ABCDRegClassID, 2, 2, 1, 1 },",
          "1452:   { CAPSTONE_REGISTER_CLASS(\"FPCCR\"), FPCCR, FPCCRBits, 1, sizeof(FPCCRBits), X86_FPCCRRegClassID, 2, 2, -1, 0 },",
          "1453:   { CAPSTONE_REGISTER_CLASS(\"FR32X\"), FR32X, FR32XBits, 32, sizeof(FR32XBits), X86_FR32XRegClassID, 4, 4, 1, 1 },",
          "1454:   { CAPSTONE_REGISTER_CLASS(\"FR32\"), FR32, FR32Bits, 16, sizeof(FR32Bits), X86_FR32RegClassID, 4, 4, 1, 1 },",
          "1455:   { CAPSTONE_REGISTER_CLASS(\"GR32\"), GR32, GR32Bits, 16, sizeof(GR32Bits), X86_GR32RegClassID, 4, 4, 1, 1 },",
          "1456:   { CAPSTONE_REGISTER_CLASS(\"GR32_NOAX\"), GR32_NOAX, GR32_NOAXBits, 15, sizeof(GR32_NOAXBits), X86_GR32_NOAXRegClassID, 4, 4, 1, 1 },",
          "1457:   { CAPSTONE_REGISTER_CLASS(\"GR32_NOSP\"), GR32_NOSP, GR32_NOSPBits, 15, sizeof(GR32_NOSPBits), X86_GR32_NOSPRegClassID, 4, 4, 1, 1 },",
          "1458:   { CAPSTONE_REGISTER_CLASS(\"GR32_NOAX_and_GR32_NOSP\"), GR32_NOAX_and_GR32_NOSP, GR32_NOAX_and_GR32_NOSPBits, 14, sizeof(GR32_NOAX_and_GR32_NOSPBits), X86_GR32_NOAX_and_GR32_NOSPRegClassID, 4, 4, 1, 1 },",
          "1459:   { CAPSTONE_REGISTER_CLASS(\"DEBUG_REG\"), DEBUG_REG, DEBUG_REGBits, 8, sizeof(DEBUG_REGBits), X86_DEBUG_REGRegClassID, 4, 4, 1, 1 },",
          "1460:   { CAPSTONE_REGISTER_CLASS(\"GR32_NOREX\"), GR32_NOREX, GR32_NOREXBits, 8, sizeof(GR32_NOREXBits), X86_GR32_NOREXRegClassID, 4, 4, 1, 1 },",
          "1461:   { CAPSTONE_REGISTER_CLASS(\"VK32\"), VK32, VK32Bits, 8, sizeof(VK32Bits), X86_VK32RegClassID, 4, 4, 1, 1 },",
          "1462:   { CAPSTONE_REGISTER_CLASS(\"GR32_NOAX_and_GR32_NOREX\"), GR32_NOAX_and_GR32_NOREX, GR32_NOAX_and_GR32_NOREXBits, 7, sizeof(GR32_NOAX_and_GR32_NOREXBits), X86_GR32_NOAX_and_GR32_NOREXRegClassID, 4, 4, 1, 1 },",
          "1463:   { CAPSTONE_REGISTER_CLASS(\"GR32_NOREX_NOSP\"), GR32_NOREX_NOSP, GR32_NOREX_NOSPBits, 7, sizeof(GR32_NOREX_NOSPBits), X86_GR32_NOREX_NOSPRegClassID, 4, 4, 1, 1 },",
          "1464:   { CAPSTONE_REGISTER_CLASS(\"RFP32\"), RFP32, RFP32Bits, 7, sizeof(RFP32Bits), X86_RFP32RegClassID, 4, 4, 1, 1 },",
          "1465:   { CAPSTONE_REGISTER_CLASS(\"VK32WM\"), VK32WM, VK32WMBits, 7, sizeof(VK32WMBits), X86_VK32WMRegClassID, 4, 4, 1, 1 },",
          "1466:   { CAPSTONE_REGISTER_CLASS(\"GR32_NOAX_and_GR32_NOREX_NOSP\"), GR32_NOAX_and_GR32_NOREX_NOSP, GR32_NOAX_and_GR32_NOREX_NOSPBits, 6, sizeof(GR32_NOAX_and_GR32_NOREX_NOSPBits), X86_GR32_NOAX_and_GR32_NOREX_NOSPRegClassID, 4, 4, 1, 1 },",
          "1467:   { CAPSTONE_REGISTER_CLASS(\"GR32_ABCD\"), GR32_ABCD, GR32_ABCDBits, 4, sizeof(GR32_ABCDBits), X86_GR32_ABCDRegClassID, 4, 4, 1, 1 },",
          "1468:   { CAPSTONE_REGISTER_CLASS(\"GR32_ABCD_and_GR32_NOAX\"), GR32_ABCD_and_GR32_NOAX, GR32_ABCD_and_GR32_NOAXBits, 3, sizeof(GR32_ABCD_and_GR32_NOAXBits), X86_GR32_ABCD_and_GR32_NOAXRegClassID, 4, 4, 1, 1 },",
          "1469:   { CAPSTONE_REGISTER_CLASS(\"GR32_TC\"), GR32_TC, GR32_TCBits, 3, sizeof(GR32_TCBits), X86_GR32_TCRegClassID, 4, 4, 1, 1 },",
          "1470:   { CAPSTONE_REGISTER_CLASS(\"GR32_AD\"), GR32_AD, GR32_ADBits, 2, sizeof(GR32_ADBits), X86_GR32_ADRegClassID, 4, 4, 1, 1 },",
          "1471:   { CAPSTONE_REGISTER_CLASS(\"GR32_NOAX_and_GR32_TC\"), GR32_NOAX_and_GR32_TC, GR32_NOAX_and_GR32_TCBits, 2, sizeof(GR32_NOAX_and_GR32_TCBits), X86_GR32_NOAX_and_GR32_TCRegClassID, 4, 4, 1, 1 },",
          "1472:   { CAPSTONE_REGISTER_CLASS(\"CCR\"), CCR, CCRBits, 1, sizeof(CCRBits), X86_CCRRegClassID, 4, 4, -1, 0 },",
          "1473:   { CAPSTONE_REGISTER_CLASS(\"GR32_AD_and_GR32_NOAX\"), GR32_AD_and_GR32_NOAX, GR32_AD_and_GR32_NOAXBits, 1, sizeof(GR32_AD_and_GR32_NOAXBits), X86_GR32_AD_and_GR32_NOAXRegClassID, 4, 4, 1, 1 },",
          "1474:   { CAPSTONE_REGISTER_CLASS(\"RFP64\"), RFP64, RFP64Bits, 7, sizeof(RFP64Bits), X86_RFP64RegClassID, 8, 4, 1, 1 },",
          "1475:   { CAPSTONE_REGISTER_CLASS(\"FR64X\"), FR64X, FR64XBits, 32, sizeof(FR64XBits), X86_FR64XRegClassID, 8, 8, 1, 1 },",
          "1476:   { CAPSTONE_REGISTER_CLASS(\"GR64\"), GR64, GR64Bits, 17, sizeof(GR64Bits), X86_GR64RegClassID, 8, 8, 1, 1 },",
          "1477:   { CAPSTONE_REGISTER_CLASS(\"CONTROL_REG\"), CONTROL_REG, CONTROL_REGBits, 16, sizeof(CONTROL_REGBits), X86_CONTROL_REGRegClassID, 8, 8, 1, 1 },",
          "1478:   { CAPSTONE_REGISTER_CLASS(\"FR64\"), FR64, FR64Bits, 16, sizeof(FR64Bits), X86_FR64RegClassID, 8, 8, 1, 1 },",
          "1479:   { CAPSTONE_REGISTER_CLASS(\"GR64_with_sub_8bit\"), GR64_with_sub_8bit, GR64_with_sub_8bitBits, 16, sizeof(GR64_with_sub_8bitBits), X86_GR64_with_sub_8bitRegClassID, 8, 8, 1, 1 },",
          "1480:   { CAPSTONE_REGISTER_CLASS(\"GR64_NOSP\"), GR64_NOSP, GR64_NOSPBits, 15, sizeof(GR64_NOSPBits), X86_GR64_NOSPRegClassID, 8, 8, 1, 1 },",
          "1481:   { CAPSTONE_REGISTER_CLASS(\"GR64_with_sub_32bit_in_GR32_NOAX\"), GR64_with_sub_32bit_in_GR32_NOAX, GR64_with_sub_32bit_in_GR32_NOAXBits, 15, sizeof(GR64_with_sub_32bit_in_GR32_NOAXBits), X86_GR64_with_sub_32bit_in_GR32_NOAXRegClassID, 8, 8, 1, 1 },",
          "1482:   { CAPSTONE_REGISTER_CLASS(\"GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSP\"), GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSP, GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSPBits, 14, sizeof(GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSPBits), X86_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSPRegClassID, 8, 8, 1, 1 },",
          "1483:   { CAPSTONE_REGISTER_CLASS(\"GR64_NOREX\"), GR64_NOREX, GR64_NOREXBits, 9, sizeof(GR64_NOREXBits), X86_GR64_NOREXRegClassID, 8, 8, 1, 1 },",
          "1484:   { CAPSTONE_REGISTER_CLASS(\"GR64_TC\"), GR64_TC, GR64_TCBits, 9, sizeof(GR64_TCBits), X86_GR64_TCRegClassID, 8, 8, 1, 1 },",
          "1485:   { CAPSTONE_REGISTER_CLASS(\"GR64_NOSP_and_GR64_TC\"), GR64_NOSP_and_GR64_TC, GR64_NOSP_and_GR64_TCBits, 8, sizeof(GR64_NOSP_and_GR64_TCBits), X86_GR64_NOSP_and_GR64_TCRegClassID, 8, 8, 1, 1 },",
          "1486:   { CAPSTONE_REGISTER_CLASS(\"GR64_with_sub_16bit_in_GR16_NOREX\"), GR64_with_sub_16bit_in_GR16_NOREX, GR64_with_sub_16bit_in_GR16_NOREXBits, 8, sizeof(GR64_with_sub_16bit_in_GR16_NOREXBits), X86_GR64_with_sub_16bit_in_GR16_NOREXRegClassID, 8, 8, 1, 1 },",
          "1487:   { CAPSTONE_REGISTER_CLASS(\"VK64\"), VK64, VK64Bits, 8, sizeof(VK64Bits), X86_VK64RegClassID, 8, 8, 1, 1 },",
          "1488:   { CAPSTONE_REGISTER_CLASS(\"VR64\"), VR64, VR64Bits, 8, sizeof(VR64Bits), X86_VR64RegClassID, 8, 8, 1, 1 },",
          "1489:   { CAPSTONE_REGISTER_CLASS(\"GR64_NOREX_NOSP\"), GR64_NOREX_NOSP, GR64_NOREX_NOSPBits, 7, sizeof(GR64_NOREX_NOSPBits), X86_GR64_NOREX_NOSPRegClassID, 8, 8, 1, 1 },",
          "1490:   { CAPSTONE_REGISTER_CLASS(\"GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX\"), GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX, GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAXBits, 7, sizeof(GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAXBits), X86_GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAXRegClassID, 8, 8, 1, 1 },",
          "1491:   { CAPSTONE_REGISTER_CLASS(\"GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX\"), GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX, GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXBits, 7, sizeof(GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXBits), X86_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXRegClassID, 8, 8, 1, 1 },",
          "1492:   { CAPSTONE_REGISTER_CLASS(\"VK64WM\"), VK64WM, VK64WMBits, 7, sizeof(VK64WMBits), X86_VK64WMRegClassID, 8, 8, 1, 1 },",
          "1493:   { CAPSTONE_REGISTER_CLASS(\"GR64_NOREX_and_GR64_TC\"), GR64_NOREX_and_GR64_TC, GR64_NOREX_and_GR64_TCBits, 6, sizeof(GR64_NOREX_and_GR64_TCBits), X86_GR64_NOREX_and_GR64_TCRegClassID, 8, 8, 1, 1 },",
          "1494:   { CAPSTONE_REGISTER_CLASS(\"GR64_TCW64\"), GR64_TCW64, GR64_TCW64Bits, 6, sizeof(GR64_TCW64Bits), X86_GR64_TCW64RegClassID, 8, 8, 1, 1 },",
          "1495:   { CAPSTONE_REGISTER_CLASS(\"GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSP\"), GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSP, GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSPBits, 6, sizeof(GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSPBits), X86_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSPRegClassID, 8, 8, 1, 1 },",
          "1496:   { CAPSTONE_REGISTER_CLASS(\"GR64_NOREX_NOSP_and_GR64_TC\"), GR64_NOREX_NOSP_and_GR64_TC, GR64_NOREX_NOSP_and_GR64_TCBits, 5, sizeof(GR64_NOREX_NOSP_and_GR64_TCBits), X86_GR64_NOREX_NOSP_and_GR64_TCRegClassID, 8, 8, 1, 1 },",
          "1497:   { CAPSTONE_REGISTER_CLASS(\"GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAX\"), GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAX, GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAXBits, 5, sizeof(GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAXBits), X86_GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAXRegClassID, 8, 8, 1, 1 },",
          "1498:   { CAPSTONE_REGISTER_CLASS(\"GR64_ABCD\"), GR64_ABCD, GR64_ABCDBits, 4, sizeof(GR64_ABCDBits), X86_GR64_ABCDRegClassID, 8, 8, 1, 1 },",
          "1499:   { CAPSTONE_REGISTER_CLASS(\"GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX\"), GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX, GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXBits, 4, sizeof(GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXBits), X86_GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREXRegClassID, 8, 8, 1, 1 },",
          "1500:   { CAPSTONE_REGISTER_CLASS(\"GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAX\"), GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAX, GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAXBits, 3, sizeof(GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAXBits), X86_GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAXRegClassID, 8, 8, 1, 1 },",
          "1501:   { CAPSTONE_REGISTER_CLASS(\"GR64_with_sub_32bit_in_GR32_TC\"), GR64_with_sub_32bit_in_GR32_TC, GR64_with_sub_32bit_in_GR32_TCBits, 3, sizeof(GR64_with_sub_32bit_in_GR32_TCBits), X86_GR64_with_sub_32bit_in_GR32_TCRegClassID, 8, 8, 1, 1 },",
          "1502:   { CAPSTONE_REGISTER_CLASS(\"GR64_with_sub_32bit_in_GR32_AD\"), GR64_with_sub_32bit_in_GR32_AD, GR64_with_sub_32bit_in_GR32_ADBits, 2, sizeof(GR64_with_sub_32bit_in_GR32_ADBits), X86_GR64_with_sub_32bit_in_GR32_ADRegClassID, 8, 8, 1, 1 },",
          "1503:   { CAPSTONE_REGISTER_CLASS(\"GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TC\"), GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TC, GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TCBits, 2, sizeof(GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TCBits), X86_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TCRegClassID, 8, 8, 1, 1 },",
          "1504:   { CAPSTONE_REGISTER_CLASS(\"GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAX\"), GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAX, GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAXBits, 1, sizeof(GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAXBits), X86_GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAXRegClassID, 8, 8, 1, 1 },",
          "1505:   { CAPSTONE_REGISTER_CLASS(\"RST\"), RST, RSTBits, 8, sizeof(RSTBits), X86_RSTRegClassID, 10, 4, 1, 0 },",
          "1506:   { CAPSTONE_REGISTER_CLASS(\"RFP80\"), RFP80, RFP80Bits, 7, sizeof(RFP80Bits), X86_RFP80RegClassID, 10, 4, 1, 1 },",
          "1507:   { CAPSTONE_REGISTER_CLASS(\"VR128X\"), VR128X, VR128XBits, 32, sizeof(VR128XBits), X86_VR128XRegClassID, 16, 16, 1, 1 },",
          "1508:   { CAPSTONE_REGISTER_CLASS(\"VR128\"), VR128, VR128Bits, 16, sizeof(VR128Bits), X86_VR128RegClassID, 16, 16, 1, 1 },",
          "1509:   { CAPSTONE_REGISTER_CLASS(\"VR256X\"), VR256X, VR256XBits, 32, sizeof(VR256XBits), X86_VR256XRegClassID, 32, 32, 1, 1 },",
          "1510:   { CAPSTONE_REGISTER_CLASS(\"VR256\"), VR256, VR256Bits, 16, sizeof(VR256Bits), X86_VR256RegClassID, 32, 32, 1, 1 },",
          "1511:   { CAPSTONE_REGISTER_CLASS(\"VR512\"), VR512, VR512Bits, 32, sizeof(VR512Bits), X86_VR512RegClassID, 64, 64, 1, 1 },",
          "1512:   { CAPSTONE_REGISTER_CLASS(\"VR512_with_sub_xmm_in_FR32\"), VR512_with_sub_xmm_in_FR32, VR512_with_sub_xmm_in_FR32Bits, 16, sizeof(VR512_with_sub_xmm_in_FR32Bits), X86_VR512_with_sub_xmm_in_FR32RegClassID, 64, 64, 1, 1 },",
          "",
          "---------------"
        ],
        "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c": [
          "File: arch/X86/X86IntelInstPrinter.c -> arch/X86/X86IntelInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "486:  printMemOffset(MI, OpNo, O);",
          "487: }",
          "489: static char *printAliasInstr(MCInst *MI, SStream *OS, void *info);",
          "490: static void printInstruction(MCInst *MI, SStream *O, MCRegisterInfo *MRI);",
          "491: void X86_Intel_printInst(MCInst *MI, SStream *O, void *Info)",
          "492: {",
          "494:  x86_reg reg, reg2;",
          "497:  mnem = printAliasInstr(MI, O, Info);",
          "498:  if (mnem)",
          "499:   cs_mem_free(mnem);",
          "500:  else",
          "501:   printInstruction(MI, O, Info);",
          "503:  reg = X86_insn_reg_intel(MCInst_getOpcode(MI));",
          "",
          "[Removed Lines]",
          "493:  char *mnem;",
          "",
          "[Added Lines]",
          "489: #ifndef CAPSTONE_DIET",
          "491: #endif",
          "497: #ifndef CAPSTONE_DIET",
          "498:  char *mnem;",
          "505: #endif",
          "",
          "---------------"
        ],
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47614: static bool valid_bnd(cs_struct *h, unsigned int opcode)",
          "47615: {",
          "47616:  unsigned int id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47614: #ifndef CAPSTONE_DIET",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47654:  return false;",
          "47655: }",
          "47658: static bool valid_rep(cs_struct *h, unsigned int opcode)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47657: #endif",
          "",
          "---------------"
        ],
        "cs.c||cs.c": [
          "File: cs.c -> cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: #endif",
          "48: #define SKIPDATA_MNEM \".byte\"",
          "50: cs_err (*arch_init[MAX_ARCH])(cs_struct *) = { NULL };",
          "51: cs_err (*arch_option[MAX_ARCH]) (cs_struct *, cs_opt_type, size_t value) = { NULL };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: #ifndef CAPSTONE_DIET",
          "50: #else // No printing is available in diet mode",
          "51: #define SKIPDATA_MNEM NULL",
          "52: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "431: }",
          "434: static void skipdata_opstr(char *opstr, const uint8_t *buffer, size_t size)",
          "435: {",
          "436:  char *p = opstr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "438: #ifndef CAPSTONE_DIET",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "459:   available -= len;",
          "460:  }",
          "461: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "467: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "584:    insn_cache->address = offset;",
          "585:    insn_cache->size = (uint16_t)skipdata_bytes;",
          "586:    memcpy(insn_cache->bytes, buffer, skipdata_bytes);",
          "587:    strncpy(insn_cache->mnemonic, handle->skipdata_setup.mnemonic,",
          "590:    insn_cache->detail = NULL;",
          "592:    next_offset = skipdata_bytes;",
          "",
          "[Removed Lines]",
          "588:      sizeof(insn_cache->mnemonic) - 1);",
          "589:    skipdata_opstr(insn_cache->op_str, buffer, skipdata_bytes);",
          "",
          "[Added Lines]",
          "594: #ifdef CAPSTONE_DIET",
          "595:     insn_cache->mnemonic[0] = '\\0';",
          "596:    insn_cache->op_str[0] = '\\0';",
          "597: #else",
          "599:        sizeof(insn_cache->mnemonic) - 1);",
          "600:      skipdata_opstr(insn_cache->op_str, buffer, skipdata_bytes);",
          "601: #endif",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "785:   insn->address = *address;",
          "786:   insn->size = (uint16_t)skipdata_bytes;",
          "787:   memcpy(insn->bytes, *code, skipdata_bytes);",
          "788:   strncpy(insn->mnemonic, handle->skipdata_setup.mnemonic,",
          "789:     sizeof(insn->mnemonic) - 1);",
          "790:   skipdata_opstr(insn->op_str, *code, skipdata_bytes);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "800: #ifdef CAPSTONE_DIET",
          "801:   insn->mnemonic[0] = '\\0';",
          "802:   insn->op_str[0] = '\\0';",
          "803: #else",
          "807: #endif",
          "",
          "---------------"
        ],
        "include/capstone.h||include/capstone.h": [
          "File: include/capstone.h -> include/capstone.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: #endif",
          "35: #else",
          "36: #define CAPSTONE_API",
          "38: #define CAPSTONE_EXPORT __attribute__((visibility(\"default\")))",
          "40: #define CAPSTONE_EXPORT",
          "41: #endif",
          "42: #endif",
          "",
          "[Removed Lines]",
          "37: #ifdef __GNUC__",
          "39: #else",
          "",
          "[Added Lines]",
          "37: #if defined(__GNUC__) && !defined(CAPSTONE_STATIC)",
          "39: #else    // defined(CAPSTONE_STATIC)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eba27eb5712d14c0cc5d4f4d1bc94ad3163bfa19",
      "candidate_info": {
        "commit_hash": "eba27eb5712d14c0cc5d4f4d1bc94ad3163bfa19",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/eba27eb5712d14c0cc5d4f4d1bc94ad3163bfa19",
        "files": [
          "arch/X86/X86ATTInstPrinter.c",
          "arch/X86/X86IntelInstPrinter.c",
          "arch/X86/X86Mapping.c"
        ],
        "message": "x86: indentation",
        "before_after_code_files": [
          "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c",
          "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c",
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c": [
          "File: arch/X86/X86ATTInstPrinter.c -> arch/X86/X86ATTInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "849: {",
          "850:  char *mnem;",
          "851:  x86_reg reg, reg2;",
          "853:  int i;",
          "",
          "[Removed Lines]",
          "852:     enum cs_ac_type access1, access2;",
          "",
          "[Added Lines]",
          "852:  enum cs_ac_type access1, access2;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "980:    MI->flat_insn->detail->x86.operands[0].type = X86_OP_REG;",
          "981:    MI->flat_insn->detail->x86.operands[0].reg = reg;",
          "982:    MI->flat_insn->detail->x86.operands[0].size = MI->csh->regsize_map[reg];",
          "985:    MI->flat_insn->detail->x86.op_count++;",
          "986:   } else {",
          "",
          "[Removed Lines]",
          "983:             MI->flat_insn->detail->x86.operands[0].access = access1;",
          "",
          "[Added Lines]",
          "983:    MI->flat_insn->detail->x86.operands[0].access = access1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "989:     MI->flat_insn->detail->x86.operands[0].type = X86_OP_REG;",
          "990:     MI->flat_insn->detail->x86.operands[0].reg = reg;",
          "991:     MI->flat_insn->detail->x86.operands[0].size = MI->csh->regsize_map[reg];",
          "993:     MI->flat_insn->detail->x86.operands[1].type = X86_OP_REG;",
          "994:     MI->flat_insn->detail->x86.operands[1].reg = reg2;",
          "995:     MI->flat_insn->detail->x86.operands[1].size = MI->csh->regsize_map[reg2];",
          "997:     MI->flat_insn->detail->x86.op_count = 2;",
          "998:    }",
          "999:   }",
          "",
          "[Removed Lines]",
          "992:                 MI->flat_insn->detail->x86.operands[0].access = access1;",
          "996:                 MI->flat_insn->detail->x86.operands[0].access = access2;",
          "",
          "[Added Lines]",
          "992:     MI->flat_insn->detail->x86.operands[0].access = access1;",
          "996:     MI->flat_insn->detail->x86.operands[0].access = access2;",
          "",
          "---------------"
        ],
        "arch/X86/X86IntelInstPrinter.c||arch/X86/X86IntelInstPrinter.c": [
          "File: arch/X86/X86IntelInstPrinter.c -> arch/X86/X86IntelInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "697: {",
          "698:  char *mnem;",
          "699:  x86_reg reg, reg2;",
          "703:  mnem = printAliasInstr(MI, O, Info);",
          "",
          "[Removed Lines]",
          "700:     enum cs_ac_type access1, access2;",
          "",
          "[Added Lines]",
          "700:  enum cs_ac_type access1, access2;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "721:    MI->flat_insn->detail->x86.operands[0].type = X86_OP_REG;",
          "722:    MI->flat_insn->detail->x86.operands[0].reg = reg;",
          "723:    MI->flat_insn->detail->x86.operands[0].size = MI->csh->regsize_map[reg];",
          "725:    MI->flat_insn->detail->x86.op_count++;",
          "726:   } else {",
          "727:    if (X86_insn_reg_intel2(MCInst_getOpcode(MI), &reg, &access1, &reg2, &access2)) {",
          "728:     MI->flat_insn->detail->x86.operands[0].type = X86_OP_REG;",
          "729:     MI->flat_insn->detail->x86.operands[0].reg = reg;",
          "730:     MI->flat_insn->detail->x86.operands[0].size = MI->csh->regsize_map[reg];",
          "732:     MI->flat_insn->detail->x86.operands[1].type = X86_OP_REG;",
          "733:     MI->flat_insn->detail->x86.operands[1].reg = reg2;",
          "734:     MI->flat_insn->detail->x86.operands[1].size = MI->csh->regsize_map[reg2];",
          "736:     MI->flat_insn->detail->x86.op_count = 2;",
          "737:    }",
          "738:   }",
          "",
          "[Removed Lines]",
          "724:             MI->flat_insn->detail->x86.operands[0].access = access1;",
          "731:                 MI->flat_insn->detail->x86.operands[0].access = access1;",
          "735:                 MI->flat_insn->detail->x86.operands[1].access = access2;",
          "",
          "[Added Lines]",
          "724:    MI->flat_insn->detail->x86.operands[0].access = access1;",
          "731:     MI->flat_insn->detail->x86.operands[0].access = access1;",
          "735:     MI->flat_insn->detail->x86.operands[1].access = access2;",
          "",
          "---------------"
        ],
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2624:  { X86_MOV64ao32, X86_REG_RAX, CS_AC_WRITE },   // 64-bit 48 8B04 10203040         // mov     rax, qword ptr [0x40302010]",
          "2625:  { X86_MOV64ao64, X86_REG_RAX, CS_AC_WRITE },   // 64-bit 48 A1 1020304050607080   // movabs  rax, qword ptr [0x8070605040302010]",
          "2711: #ifndef CAPSTONE_X86_REDUCE",
          "2738: #endif",
          "2739: };",
          "",
          "[Removed Lines]",
          "2627:     { X86_LODSQ, X86_REG_RAX, CS_AC_WRITE },",
          "2628:     { X86_OR32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2629:     { X86_SUB32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2630:     { X86_TEST32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2631:     { X86_ADD32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2632:     { X86_XCHG64ar, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2633:     { X86_LODSB, X86_REG_AL, CS_AC_WRITE },",
          "2634:     { X86_AND32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2635:     { X86_IN16ri, X86_REG_AX, CS_AC_WRITE },",
          "2636:     { X86_CMP64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2637:     { X86_XOR32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2638:     { X86_XCHG16ar, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2639:     { X86_LODSW, X86_REG_AX, CS_AC_WRITE },",
          "2640:     { X86_AND16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2641:     { X86_ADC16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2642:     { X86_XCHG32ar64, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2643:     { X86_ADC8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2644:     { X86_CMP32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2645:     { X86_AND8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2646:     { X86_SCASW, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2647:     { X86_XOR8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2648:     { X86_SUB16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2649:     { X86_OR16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2650:     { X86_XCHG32ar, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2651:     { X86_SBB8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2652:     { X86_SCASQ, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2653:     { X86_SBB32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2654:     { X86_XOR64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2655:     { X86_SUB64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2656:     { X86_ADD64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2657:     { X86_OR8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2658:     { X86_TEST64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2659:     { X86_SBB16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2660:     { X86_TEST8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2661:     { X86_IN8ri, X86_REG_AL, CS_AC_WRITE },",
          "2662:     { X86_TEST16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2663:     { X86_SCASL, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2664:     { X86_SUB8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2665:     { X86_ADD8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2666:     { X86_OR64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2667:     { X86_SCASB, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2668:     { X86_SBB64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2669:     { X86_ADD16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2670:     { X86_XOR16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2671:     { X86_AND64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2672:     { X86_LODSL, X86_REG_EAX, CS_AC_WRITE },",
          "2673:     { X86_CMP8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2674:     { X86_ADC64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2675:     { X86_CMP16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2676:     { X86_ADC32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2677:     { X86_IN32ri, X86_REG_EAX, CS_AC_WRITE },",
          "2679:     { X86_PUSHCS32, X86_REG_CS, CS_AC_READ },",
          "2680:     { X86_PUSHDS32, X86_REG_DS, CS_AC_READ },",
          "2681:     { X86_PUSHES32, X86_REG_ES, CS_AC_READ },",
          "2682:     { X86_PUSHFS32, X86_REG_FS, CS_AC_READ },",
          "2683:     { X86_PUSHGS32, X86_REG_GS, CS_AC_READ },",
          "2684:     { X86_PUSHSS32, X86_REG_SS, CS_AC_READ },",
          "2686:     { X86_PUSHFS64, X86_REG_FS, CS_AC_READ },",
          "2687:     { X86_PUSHGS64, X86_REG_GS, CS_AC_READ },",
          "2689:     { X86_PUSHCS16, X86_REG_CS, CS_AC_READ },",
          "2690:     { X86_PUSHDS16, X86_REG_DS, CS_AC_READ },",
          "2691:     { X86_PUSHES16, X86_REG_ES, CS_AC_READ },",
          "2692:     { X86_PUSHFS16, X86_REG_FS, CS_AC_READ },",
          "2693:     { X86_PUSHGS16, X86_REG_GS, CS_AC_READ },",
          "2694:     { X86_PUSHSS16, X86_REG_SS, CS_AC_READ },",
          "2696:     { X86_POPDS32, X86_REG_DS, CS_AC_WRITE },",
          "2697:     { X86_POPES32, X86_REG_ES, CS_AC_WRITE },",
          "2698:     { X86_POPFS32, X86_REG_FS, CS_AC_WRITE },",
          "2699:     { X86_POPGS32, X86_REG_GS, CS_AC_WRITE },",
          "2700:     { X86_POPSS32, X86_REG_SS, CS_AC_WRITE },",
          "2702:     { X86_POPFS64, X86_REG_FS, CS_AC_WRITE },",
          "2703:     { X86_POPGS64, X86_REG_GS, CS_AC_WRITE },",
          "2705:     { X86_POPDS16, X86_REG_DS, CS_AC_WRITE },",
          "2706:     { X86_POPES16, X86_REG_ES, CS_AC_WRITE },",
          "2707:     { X86_POPFS16, X86_REG_FS, CS_AC_WRITE },",
          "2708:     { X86_POPGS16, X86_REG_GS, CS_AC_WRITE },",
          "2709:     { X86_POPSS16, X86_REG_SS, CS_AC_WRITE },",
          "2712:     { X86_SKINIT, X86_REG_EAX, CS_AC_WRITE },",
          "2713:     { X86_VMRUN32, X86_REG_EAX, CS_AC_WRITE },",
          "2714:     { X86_VMRUN64, X86_REG_RAX, CS_AC_WRITE },",
          "2715:     { X86_VMLOAD32, X86_REG_EAX, CS_AC_WRITE },",
          "2716:     { X86_VMLOAD64, X86_REG_RAX, CS_AC_WRITE },",
          "2717:     { X86_VMSAVE32, X86_REG_EAX, CS_AC_READ },",
          "2718:     { X86_VMSAVE64, X86_REG_RAX, CS_AC_READ },",
          "2720:     { X86_FNSTSW16r, X86_REG_AX, CS_AC_WRITE },",
          "2722:     { X86_CMOVB_F, X86_REG_ST0, CS_AC_WRITE },",
          "2723:     { X86_CMOVBE_F, X86_REG_ST0, CS_AC_WRITE },",
          "2724:     { X86_CMOVE_F, X86_REG_ST0, CS_AC_WRITE },",
          "2725:     { X86_CMOVP_F, X86_REG_ST0, CS_AC_WRITE },",
          "2726:     { X86_CMOVNB_F, X86_REG_ST0, CS_AC_WRITE },",
          "2727:     { X86_CMOVNBE_F, X86_REG_ST0, CS_AC_WRITE },",
          "2728:     { X86_CMOVNE_F, X86_REG_ST0, CS_AC_WRITE },",
          "2729:     { X86_CMOVNP_F, X86_REG_ST0, CS_AC_WRITE },",
          "2730:     { X86_ST_FXCHST0r, X86_REG_ST0, CS_AC_WRITE },",
          "2731:     { X86_ST_FXCHST0r_alt, X86_REG_ST0, CS_AC_WRITE },",
          "2732:     { X86_ST_FCOMST0r, X86_REG_ST0, CS_AC_WRITE },",
          "2733:     { X86_ST_FCOMPST0r, X86_REG_ST0, CS_AC_WRITE },",
          "2734:     { X86_ST_FCOMPST0r_alt, X86_REG_ST0, CS_AC_WRITE },",
          "2735:     { X86_ST_FPST0r, X86_REG_ST0, CS_AC_WRITE },",
          "2736:     { X86_ST_FPST0r_alt, X86_REG_ST0, CS_AC_WRITE },",
          "2737:     { X86_ST_FPNCEST0r, X86_REG_ST0, CS_AC_WRITE },",
          "",
          "[Added Lines]",
          "2627:  { X86_LODSQ, X86_REG_RAX, CS_AC_WRITE },",
          "2628:  { X86_OR32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2629:  { X86_SUB32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2630:  { X86_TEST32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2631:  { X86_ADD32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2632:  { X86_XCHG64ar, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2633:  { X86_LODSB, X86_REG_AL, CS_AC_WRITE },",
          "2634:  { X86_AND32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2635:  { X86_IN16ri, X86_REG_AX, CS_AC_WRITE },",
          "2636:  { X86_CMP64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2637:  { X86_XOR32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2638:  { X86_XCHG16ar, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2639:  { X86_LODSW, X86_REG_AX, CS_AC_WRITE },",
          "2640:  { X86_AND16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2641:  { X86_ADC16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2642:  { X86_XCHG32ar64, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2643:  { X86_ADC8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2644:  { X86_CMP32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2645:  { X86_AND8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2646:  { X86_SCASW, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2647:  { X86_XOR8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2648:  { X86_SUB16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2649:  { X86_OR16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2650:  { X86_XCHG32ar, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2651:  { X86_SBB8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2652:  { X86_SCASQ, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2653:  { X86_SBB32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2654:  { X86_XOR64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2655:  { X86_SUB64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2656:  { X86_ADD64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2657:  { X86_OR8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2658:  { X86_TEST64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2659:  { X86_SBB16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2660:  { X86_TEST8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2661:  { X86_IN8ri, X86_REG_AL, CS_AC_WRITE },",
          "2662:  { X86_TEST16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2663:  { X86_SCASL, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2664:  { X86_SUB8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2665:  { X86_ADD8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2666:  { X86_OR64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2667:  { X86_SCASB, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2668:  { X86_SBB64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2669:  { X86_ADD16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2670:  { X86_XOR16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2671:  { X86_AND64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2672:  { X86_LODSL, X86_REG_EAX, CS_AC_WRITE },",
          "2673:  { X86_CMP8i8, X86_REG_AL, CS_AC_WRITE | CS_AC_READ },",
          "2674:  { X86_ADC64i32, X86_REG_RAX, CS_AC_WRITE | CS_AC_READ },",
          "2675:  { X86_CMP16i16, X86_REG_AX, CS_AC_WRITE | CS_AC_READ },",
          "2676:  { X86_ADC32i32, X86_REG_EAX, CS_AC_WRITE | CS_AC_READ },",
          "2677:  { X86_IN32ri, X86_REG_EAX, CS_AC_WRITE },",
          "2679:  { X86_PUSHCS32, X86_REG_CS, CS_AC_READ },",
          "2680:  { X86_PUSHDS32, X86_REG_DS, CS_AC_READ },",
          "2681:  { X86_PUSHES32, X86_REG_ES, CS_AC_READ },",
          "2682:  { X86_PUSHFS32, X86_REG_FS, CS_AC_READ },",
          "2683:  { X86_PUSHGS32, X86_REG_GS, CS_AC_READ },",
          "2684:  { X86_PUSHSS32, X86_REG_SS, CS_AC_READ },",
          "2686:  { X86_PUSHFS64, X86_REG_FS, CS_AC_READ },",
          "2687:  { X86_PUSHGS64, X86_REG_GS, CS_AC_READ },",
          "2689:  { X86_PUSHCS16, X86_REG_CS, CS_AC_READ },",
          "2690:  { X86_PUSHDS16, X86_REG_DS, CS_AC_READ },",
          "2691:  { X86_PUSHES16, X86_REG_ES, CS_AC_READ },",
          "2692:  { X86_PUSHFS16, X86_REG_FS, CS_AC_READ },",
          "2693:  { X86_PUSHGS16, X86_REG_GS, CS_AC_READ },",
          "2694:  { X86_PUSHSS16, X86_REG_SS, CS_AC_READ },",
          "2696:  { X86_POPDS32, X86_REG_DS, CS_AC_WRITE },",
          "2697:  { X86_POPES32, X86_REG_ES, CS_AC_WRITE },",
          "2698:  { X86_POPFS32, X86_REG_FS, CS_AC_WRITE },",
          "2699:  { X86_POPGS32, X86_REG_GS, CS_AC_WRITE },",
          "2700:  { X86_POPSS32, X86_REG_SS, CS_AC_WRITE },",
          "2702:  { X86_POPFS64, X86_REG_FS, CS_AC_WRITE },",
          "2703:  { X86_POPGS64, X86_REG_GS, CS_AC_WRITE },",
          "2705:  { X86_POPDS16, X86_REG_DS, CS_AC_WRITE },",
          "2706:  { X86_POPES16, X86_REG_ES, CS_AC_WRITE },",
          "2707:  { X86_POPFS16, X86_REG_FS, CS_AC_WRITE },",
          "2708:  { X86_POPGS16, X86_REG_GS, CS_AC_WRITE },",
          "2709:  { X86_POPSS16, X86_REG_SS, CS_AC_WRITE },",
          "2712:  { X86_SKINIT, X86_REG_EAX, CS_AC_WRITE },",
          "2713:  { X86_VMRUN32, X86_REG_EAX, CS_AC_WRITE },",
          "2714:  { X86_VMRUN64, X86_REG_RAX, CS_AC_WRITE },",
          "2715:  { X86_VMLOAD32, X86_REG_EAX, CS_AC_WRITE },",
          "2716:  { X86_VMLOAD64, X86_REG_RAX, CS_AC_WRITE },",
          "2717:  { X86_VMSAVE32, X86_REG_EAX, CS_AC_READ },",
          "2718:  { X86_VMSAVE64, X86_REG_RAX, CS_AC_READ },",
          "2720:  { X86_FNSTSW16r, X86_REG_AX, CS_AC_WRITE },",
          "2722:  { X86_CMOVB_F, X86_REG_ST0, CS_AC_WRITE },",
          "2723:  { X86_CMOVBE_F, X86_REG_ST0, CS_AC_WRITE },",
          "2724:  { X86_CMOVE_F, X86_REG_ST0, CS_AC_WRITE },",
          "2725:  { X86_CMOVP_F, X86_REG_ST0, CS_AC_WRITE },",
          "2726:  { X86_CMOVNB_F, X86_REG_ST0, CS_AC_WRITE },",
          "2727:  { X86_CMOVNBE_F, X86_REG_ST0, CS_AC_WRITE },",
          "2728:  { X86_CMOVNE_F, X86_REG_ST0, CS_AC_WRITE },",
          "2729:  { X86_CMOVNP_F, X86_REG_ST0, CS_AC_WRITE },",
          "2730:  { X86_ST_FXCHST0r, X86_REG_ST0, CS_AC_WRITE },",
          "2731:  { X86_ST_FXCHST0r_alt, X86_REG_ST0, CS_AC_WRITE },",
          "2732:  { X86_ST_FCOMST0r, X86_REG_ST0, CS_AC_WRITE },",
          "2733:  { X86_ST_FCOMPST0r, X86_REG_ST0, CS_AC_WRITE },",
          "2734:  { X86_ST_FCOMPST0r_alt, X86_REG_ST0, CS_AC_WRITE },",
          "2735:  { X86_ST_FPST0r, X86_REG_ST0, CS_AC_WRITE },",
          "2736:  { X86_ST_FPST0r_alt, X86_REG_ST0, CS_AC_WRITE },",
          "2737:  { X86_ST_FPNCEST0r, X86_REG_ST0, CS_AC_WRITE },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2778:   if (insn_regs_intel2[i].insn == id) {",
          "2785:    return true;",
          "2786:   }",
          "2787:  }",
          "",
          "[Removed Lines]",
          "2781:             if (access1)",
          "2783:             if (access2)",
          "",
          "[Added Lines]",
          "2781:    if (access1)",
          "2783:    if (access2)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "342f50b423ebd70a4b28b2f9bf078c3179d8d43e",
      "candidate_info": {
        "commit_hash": "342f50b423ebd70a4b28b2f9bf078c3179d8d43e",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/342f50b423ebd70a4b28b2f9bf078c3179d8d43e",
        "files": [
          "capstone.pc.in"
        ],
        "message": "CMake: fix pkgconfig file",
        "before_after_code_files": [
          "capstone.pc.in||capstone.pc.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "capstone.pc.in||capstone.pc.in": [
          "File: capstone.pc.in -> capstone.pc.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: Name: capstone",
          "2: Description: Capstone disassembly engine",
          "4: URL: http://www.capstone-engine.org",
          "5: Libs: -L@CMAKE_INSTALL_PREFIX@/lib -lcapstone",
          "6: Cflags: -I@CMAKE_INSTALL_PREFIX@/include/capstone",
          "",
          "[Removed Lines]",
          "3: Version: @VERSION_MAJOR@.@VERSION_MAJOR@.@VERSION_PATCH@",
          "",
          "[Added Lines]",
          "3: Version: @VERSION_MAJOR@.@VERSION_MINOR@.@VERSION_PATCH@",
          "5: archive=@CMAKE_INSTALL_PREFIX@/lib/libcapstone.a",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3b3713f7d6a2ed7e5120e727cbb426e179f3a14c",
      "candidate_info": {
        "commit_hash": "3b3713f7d6a2ed7e5120e727cbb426e179f3a14c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/3b3713f7d6a2ed7e5120e727cbb426e179f3a14c",
        "files": [
          "include/windowsce/intrin.h",
          "include/windowsce/stdint.h",
          "windowsce/.gitignore",
          "windowsce/make_windowsce7-armv7.bat",
          "windowsce/make_windowsce8-armv7.bat"
        ],
        "message": "Added support for building binaries for Windows CE 7 on ARMv7 (a.k.a., Windows Embedded Compact 7) and for Windows CE 8 on ARMv7 (a.k.a., Windows Embedded Compact 2013).",
        "before_after_code_files": [
          "include/windowsce/intrin.h||include/windowsce/intrin.h",
          "include/windowsce/stdint.h||include/windowsce/stdint.h",
          "windowsce/make_windowsce7-armv7.bat||windowsce/make_windowsce7-armv7.bat",
          "windowsce/make_windowsce8-armv7.bat||windowsce/make_windowsce8-armv7.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/windowsce/intrin.h||include/windowsce/intrin.h": [
          "File: include/windowsce/intrin.h -> include/windowsce/intrin.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #if defined(_MSC_VER) && defined(_WIN32_WCE) && (_WIN32_WCE < 0x800) && !defined(__INTRIN_H_) && !defined(_INTRIN)",
          "3: #define _STDINT",
          "5: #ifdef _M_ARM",
          "6: #include <armintr.h>",
          "7: #if (_WIN32_WCE >= 0x700) && defined(__ARM_ARCH_7__) || defined(__ARM_ARCH_7A__)",
          "8: #include <arm_neon.h>",
          "9: #endif",
          "10: #endif // _M_ARM",
          "12: #endif",
          "",
          "---------------"
        ],
        "include/windowsce/stdint.h||include/windowsce/stdint.h": [
          "File: include/windowsce/stdint.h -> include/windowsce/stdint.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #if defined(_MSC_VER) && defined(_WIN32_WCE) && (_WIN32_WCE < 0x800) && !defined(_STDINT_H_) && !defined(_STDINT)",
          "3: #define _STDINT",
          "5: typedef __int8",
          "6:  int8_t,",
          "7:  int_least8_t;",
          "9: typedef __int16",
          "10:  int16_t,",
          "11:  int_least16_t;",
          "13: typedef __int32",
          "14:  int32_t,",
          "15:  int_least32_t,",
          "16:  int_fast8_t,",
          "17:  int_fast16_t,",
          "18:  int_fast32_t;",
          "20: typedef __int64",
          "21:  int64_t,",
          "22:  intmax_t,",
          "23:  int_least64_t,",
          "24:  int_fast64_t;",
          "26: typedef unsigned __int8",
          "27:  uint8_t,",
          "28:  uint_least8_t;",
          "30: typedef unsigned __int16",
          "31:  uint16_t,",
          "32:  uint_least16_t;",
          "34: typedef unsigned __int32",
          "35:  uint32_t,",
          "36:  uint_least32_t,",
          "37:  uint_fast8_t,",
          "38:  uint_fast16_t,",
          "39:  uint_fast32_t;",
          "41: typedef unsigned __int64",
          "42:  uint64_t,",
          "43:  uintmax_t,",
          "44:  uint_least64_t,",
          "45:  uint_fast64_t;",
          "47: #ifndef _INTPTR_T_DEFINED",
          "48: #define _INTPTR_T_DEFINED",
          "49: typedef __int32 intptr_t;",
          "50: #endif",
          "52: #ifndef _UINTPTR_T_DEFINED",
          "53: #define _UINTPTR_T_DEFINED",
          "54: typedef unsigned __int32 uintptr_t;",
          "55: #endif",
          "57: #define INT8_MIN         (-127i8 - 1)",
          "58: #define INT16_MIN        (-32767i16 - 1)",
          "59: #define INT32_MIN        (-2147483647i32 - 1)",
          "60: #define INT64_MIN        (-9223372036854775807i64 - 1)",
          "61: #define INT8_MAX         127i8",
          "62: #define INT16_MAX        32767i16",
          "63: #define INT32_MAX        2147483647i32",
          "64: #define INT64_MAX        9223372036854775807i64",
          "65: #define UINT8_MAX        0xffui8",
          "66: #define UINT16_MAX       0xffffui16",
          "67: #define UINT32_MAX       0xffffffffui32",
          "68: #define UINT64_MAX       0xffffffffffffffffui64",
          "70: #define INT_LEAST8_MIN   INT8_MIN",
          "71: #define INT_LEAST16_MIN  INT16_MIN",
          "72: #define INT_LEAST32_MIN  INT32_MIN",
          "73: #define INT_LEAST64_MIN  INT64_MIN",
          "74: #define INT_LEAST8_MAX   INT8_MAX",
          "75: #define INT_LEAST16_MAX  INT16_MAX",
          "76: #define INT_LEAST32_MAX  INT32_MAX",
          "77: #define INT_LEAST64_MAX  INT64_MAX",
          "78: #define UINT_LEAST8_MAX  UINT8_MAX",
          "79: #define UINT_LEAST16_MAX UINT16_MAX",
          "80: #define UINT_LEAST32_MAX UINT32_MAX",
          "81: #define UINT_LEAST64_MAX UINT64_MAX",
          "83: #define INT_FAST8_MIN    INT8_MIN",
          "84: #define INT_FAST16_MIN   INT32_MIN",
          "85: #define INT_FAST32_MIN   INT32_MIN",
          "86: #define INT_FAST64_MIN   INT64_MIN",
          "87: #define INT_FAST8_MAX    INT8_MAX",
          "88: #define INT_FAST16_MAX   INT32_MAX",
          "89: #define INT_FAST32_MAX   INT32_MAX",
          "90: #define INT_FAST64_MAX   INT64_MAX",
          "91: #define UINT_FAST8_MAX   UINT8_MAX",
          "92: #define UINT_FAST16_MAX  UINT32_MAX",
          "93: #define UINT_FAST32_MAX  UINT32_MAX",
          "94: #define UINT_FAST64_MAX  UINT64_MAX",
          "96: #define INTPTR_MIN      INT32_MIN",
          "97: #define INTPTR_MAX      INT32_MAX",
          "98: #define UINTPTR_MAX     UINT32_MAX",
          "100: #define INTMAX_MIN       INT64_MIN",
          "101: #define INTMAX_MAX       INT64_MAX",
          "102: #define UINTMAX_MAX      UINT64_MAX",
          "104: #define PTRDIFF_MIN      INTPTR_MIN",
          "105: #define PTRDIFF_MAX      INTPTR_MAX",
          "107: #ifndef SIZE_MAX",
          "108: #define SIZE_MAX        UINTPTR_MAX",
          "109: #endif",
          "111: #define SIG_ATOMIC_MIN   INT32_MIN",
          "112: #define SIG_ATOMIC_MAX   INT32_MAX",
          "114: #define WCHAR_MIN        0x0000",
          "115: #define WCHAR_MAX        0xffff",
          "117: #define WINT_MIN         0x0000",
          "118: #define WINT_MAX         0xffff",
          "120: #define INT8_C(x)    (x)",
          "121: #define INT16_C(x)   (x)",
          "122: #define INT32_C(x)   (x)",
          "123: #define INT64_C(x)   (x ## LL)",
          "125: #define UINT8_C(x)   (x)",
          "126: #define UINT16_C(x)  (x)",
          "127: #define UINT32_C(x)  (x ## U)",
          "128: #define UINT64_C(x)  (x ## ULL)",
          "130: #define INTMAX_C(x)  INT64_C(x)",
          "131: #define UINTMAX_C(x) UINT64_C(x)",
          "133: #endif",
          "",
          "---------------"
        ],
        "windowsce/make_windowsce7-armv7.bat||windowsce/make_windowsce7-armv7.bat": [
          "File: windowsce/make_windowsce7-armv7.bat -> windowsce/make_windowsce7-armv7.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @echo off",
          "3: rem ***************************************************************************",
          "4: rem *                       VARIABLES TO SET FOR BUILDING                     *",
          "5: rem ***************************************************************************",
          "7: set WINCE_TOOLCHAIN_ROOT=C:\\WINCE700\\sdk",
          "8: set TOOLCHAIN=%WINCE_TOOLCHAIN_ROOT%\\Bin\\i386\\Arm;%WINCE_TOOLCHAIN_ROOT%\\Bin\\i386",
          "9: set INCLUDE=C:\\Program Files (x86)\\Windows CE Tools\\SDKs\\Symbol MC3200c70 Windows CE 7.0 PSDK\\Include\\Armv4i;C:\\WINCE700\\public\\common\\sdk\\inc",
          "10: set LIBPATH=C:\\Program Files (x86)\\Windows CE Tools\\SDKs\\Symbol MC3200c70 Windows CE 7.0 PSDK\\Lib\\ARMv4I",
          "11: set LIBS=-nodefaultlib:oldnames.lib -nodefaultlib:libcmtd.lib -nodefaultlib:libcmt.lib coredll.lib corelibc.lib",
          "13: rem ***************************************************************************",
          "14: rem *                           CAPSTONE CONFIGURATION                        *",
          "15: rem ***************************************************************************",
          "17: set SHARED=1",
          "18: set DIET_MODE=0",
          "19: set X86_REDUCE=0",
          "20: set X86_ATT_DISABLE=0",
          "21: set USE_SYS_DYN_MEM=0",
          "22: set DISASM_ARCH_LIST=ARM ARM64 M68K MIPS POWERPC SPARC SYSZ X86 XCORE",
          "23: set DISASM_ARCH_DIRS=ARM AARCH64 M68K MIPS POWERPC SPARC SystemZ X86 XCORE",
          "24: rem set DISASM_ARCH_LIST=ARM",
          "25: rem set DISASM_ARCH_DIRS=ARM",
          "27: rem ***************************************************************************",
          "28: rem *                              SANITY CHECKS                              *",
          "29: rem ***************************************************************************",
          "31: setlocal ENABLEDELAYEDEXPANSION",
          "33: if \"%WINCE_TOOLCHAIN_ROOT%\"==\"\" goto check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "34: if not exist \"%WINCE_TOOLCHAIN_ROOT%\" goto check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "36: if \"%TOOLCHAIN%\"==\"\" goto check_dir_exist_TOOLCHAIN",
          "38: set CC=",
          "39: set LD=",
          "40: set AR=",
          "41: for /f \"tokens=1-8 delims=;\" %%a in (\"%TOOLCHAIN%\") do (",
          "42:   for %%i in (%%a %%b %%c %%d %%e %%f %%g %%h) do (",
          "43:     if not \"%%i\"==\"\" (",
          "44:       if not exist \"%%i\" goto check_dir_exist_TOOLCHAIN",
          "45:       if \"%CC%\"==\"\" if exist \"%%i\\cl.exe\" set CC=%%i\\cl.exe",
          "46:       if \"%LD%\"==\"\" if exist \"%%i\\link.exe\" set LD=%%i\\link.exe",
          "47:       if \"%AR%\"==\"\" if exist \"%%i\\lib.exe\" set AR=%%i\\lib.exe",
          "48:     )",
          "49:   )",
          "50: )",
          "52: if \"%CC%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "53: if \"%LD%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "54: if \"%AR%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "56: if \"%INCLUDE%\"==\"\" goto check_dir_exist_INCLUDE",
          "58: set WINDOWS_H=",
          "60: set INCLUDE_SC=%INCLUDE%",
          "61: set INCLUDE=",
          "62: for /f \"tokens=1-8 delims=;\" %%a in (\"%INCLUDE_SC%\") do (",
          "63:   for %%i in (\"%%a\" \"%%b\" \"%%c\" \"%%d\" \"%%e\" \"%%f\" \"%%g\" \"%%h\") do (",
          "64:     if not %%i==\"\" (",
          "65:       set INCLUDE=!INCLUDE! -I %%i",
          "66:     )",
          "67:   )",
          "68: )",
          "70: if \"%LIBPATH%\"==\"\" goto check_dir_exist_LIBPATH",
          "72: set LIBPATH_SC=%LIBPATH%",
          "73: set LIBPATH=",
          "74: for /f \"tokens=1-8 delims=;\" %%a in (\"%LIBPATH_SC%\") do (",
          "75:   for %%i in (\"%%a\" \"%%b\" \"%%c\" \"%%d\" \"%%e\" \"%%f\" \"%%g\" \"%%h\") do (",
          "76:     if not %%i==\"\" (",
          "77:       set LIBPATH=!LIBPATH! -libpath:%%i",
          "78:     )",
          "79:   )",
          "80: )",
          "82: rem ***************************************************************************",
          "83: rem *                            COMPILATION OPTIONS                          *",
          "84: rem ***************************************************************************",
          "86: set OS=windowsce",
          "87: set OS_VERSION=7.0",
          "88: set OS_VERSION_NUMBER=0x700",
          "89: set LIBARCH=arm",
          "90: set MACH=THUMB",
          "92: for /f \"delims=\" %%i in ('cd') do set THIS_DIR=%%i",
          "94: set SOURCES_ROOT=%THIS_DIR%\\..",
          "95: set TARGET_DIR=%THIS_DIR%\\bin\\%OS%_%OS_VERSION%_%LIBARCH%",
          "97: for /f \"tokens=3\" %%i in ('findstr /c:\"#define CS_API_MAJOR\" \"%SOURCES_ROOT%\\include\\capstone\\capstone.h\"') do set CS_API_MAJOR=%%i",
          "98: for /f \"tokens=3\" %%i in ('findstr /c:\"#define CS_API_MINOR\" \"%SOURCES_ROOT%\\include\\capstone\\capstone.h\"') do set CS_API_MINOR=%%i",
          "100: set TARGET_VERSION=%CS_API_MAJOR%.%CS_API_MINOR%",
          "101: set TAREGET_NAME=capstone-%TARGET_VERSION%",
          "103: set CPPFLAGS=-D LIBARCH_%LIBARCH% -D LIBARCH=L\\\"%LIBARCH%\\\"",
          "104: set CPPFLAGS=%CPPFLAGS% -D _CRT_SECURE_NO_DEPRECATE -D _WINDOWS -D WINVER=%OS_VERSION_NUMBER% -D UNDER_CE=%OS_VERSION_NUMBER% -D _WIN32_WCE=%OS_VERSION_NUMBER% -D WINCE -D _UNICODE -D UNICODE -D STANDARDSHELL_UI_MODEL -D _USE_MATH_DEFINES -D ARM -D _ARM -D _ARM_ -D __ARM_ARCH_7__ -D __ARM_ARCH_7A__ -D __VFP_FP__=1",
          "106: for %%a in (%DISASM_ARCH_LIST%) do set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_HAS_%%a",
          "108: if %SHARED%==0 (",
          "109:   set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_STATIC -D LIB_EXT=L\\\".lib\\\"",
          "110: ) else (",
          "111:   set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_SHARED -D LIB_EXT=L\\\".dll\\\"",
          "112: )",
          "114: if not %USE_SYS_DYN_MEM%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_USE_SYS_DYN_MEM )",
          "115: if not %DIET_MODE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_DIET )",
          "116: if not %X86_REDUCE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_X86_REDUCE )",
          "117: if not %X86_ATT_DISABLE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_X86_ATT_DISABLE )",
          "119: set INCLUDE=-I %SOURCES_ROOT%\\include -I %SOURCES_ROOT% %INCLUDE%",
          "120: set INCLUDE=%INCLUDE% -I %SOURCES_ROOT%\\include\\windowsce",
          "122: set CFLAGS=%CPPFLAGS% %INCLUDE% -nologo -Zi -MT -Oi -GS -GF -QRarch7 -arch:VFPv3-D32 -QRfpe- -fp:fast -Oy- -W3 -WX",
          "124: set LDFLAGS=-nologo -debug -incremental:no -manifest:no -version:%TARGET_VERSION% -machine:%MACH% -subsystem:WINDOWSCE,%OS_VERSION% %LIBPATH% %LIBS%",
          "126: set ARFLAGS=-nologo -machine:%MACH% -subsystem:WINDOWSCE,%OS_VERSION% %LIBPATH% %LIBS%",
          "128: set SOURCES=",
          "129: for %%f in (%SOURCES_ROOT%\\*.c) do set SOURCES=!SOURCES! %%f",
          "130: for %%a in (%DISASM_ARCH_DIRS%) do for %%f in (%SOURCES_ROOT%\\arch\\%%a\\*.c) do set SOURCES=!SOURCES! %%f",
          "132: rem ***************************************************************************",
          "133: rem *                           COMPILATION COMMANDS                          *",
          "134: rem ***************************************************************************",
          "136: rd /q /s \"%TARGET_DIR%\"",
          "137: md \"%TARGET_DIR%\"",
          "139: set PATH=%TOOLCHAIN%;%PATH%",
          "141: rem %CC% -c %CFLAGS% -D DEBUG -D _DEBUG -Od -Fo\"%TARGET_DIR%\\\\\" -Fd\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %SOURCES%",
          "142: %CC% -c %CFLAGS% -D NDEBUG -Ox -Fo\"%TARGET_DIR%\\\\\" -Fd\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %SOURCES%",
          "143: if errorlevel 1 goto compilation_failed",
          "145: if %SHARED%==0 (",
          "146:   %AR% -out:%TARGET_DIR%\\%TAREGET_NAME%.lib %ARFLAGS% %TARGET_DIR%\\*.obj",
          "147: ) else (",
          "148:   %LD% -dll -out:%TARGET_DIR%\\%TAREGET_NAME%.dll -map:\"%TARGET_DIR%\\%TAREGET_NAME%.map\" -pdb:\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %LDFLAGS% -opt:REF -opt:ICF %TARGET_DIR%\\*.obj",
          "149: )",
          "151: endlocal",
          "152: goto done",
          "154: rem ***************************************************************************",
          "155: rem *                             ERROR REPORTING                             *",
          "156: rem ***************************************************************************",
          "158: :check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "159: echo ERROR: WINCE_TOOLCHAIN_ROOT does not specify an existing directory.",
          "160: goto done",
          "162: :check_dir_exist_TOOLCHAIN",
          "163: echo ERROR: TOOLCHAIN does not specify an existing directory.",
          "164: goto done",
          "166: :check_dir_exist_CC_LD_AR",
          "167: echo ERROR: TOOLCHAIN does not specify a valid toolchain directory.",
          "168: goto done",
          "170: :check_dir_exist_INCLUDE",
          "171: echo ERROR: INCLUDE does not specify an existing directory.",
          "172: goto done",
          "174: :check_dir_exist_LIBPATH",
          "175: echo ERROR: LIBPATH does not specify an existing directory.",
          "176: goto done",
          "178: :compilation_failed",
          "179: echo ERROR: Compilation failed.",
          "180: goto done",
          "182: :done",
          "183: pause",
          "",
          "---------------"
        ],
        "windowsce/make_windowsce8-armv7.bat||windowsce/make_windowsce8-armv7.bat": [
          "File: windowsce/make_windowsce8-armv7.bat -> windowsce/make_windowsce8-armv7.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @echo off",
          "3: rem ***************************************************************************",
          "4: rem *                       VARIABLES TO SET FOR BUILDING                     *",
          "5: rem ***************************************************************************",
          "7: set WINCE_TOOLCHAIN_ROOT=C:\\Windows_CE_Tools\\SDKs\\SDK_HW90270\\Sdk",
          "8: set TOOLCHAIN=%WINCE_TOOLCHAIN_ROOT%\\Bin\\i386\\Arm;%WINCE_TOOLCHAIN_ROOT%\\Bin\\i386",
          "9: set INCLUDE=%WINCE_TOOLCHAIN_ROOT%\\Inc;%WINCE_TOOLCHAIN_ROOT%\\crt\\Include",
          "10: set LIBPATH=%WINCE_TOOLCHAIN_ROOT%\\Lib\\ARMV7\\retail;%WINCE_TOOLCHAIN_ROOT%\\Crt\\Lib\\ARM",
          "11: set LIBS=coredll.lib",
          "13: rem ***************************************************************************",
          "14: rem *                           CAPSTONE CONFIGURATION                        *",
          "15: rem ***************************************************************************",
          "17: set SHARED=1",
          "18: set DIET_MODE=0",
          "19: set X86_REDUCE=0",
          "20: set X86_ATT_DISABLE=0",
          "21: set USE_SYS_DYN_MEM=0",
          "22: set DISASM_ARCH_LIST=ARM ARM64 M68K MIPS POWERPC SPARC SYSZ X86 XCORE",
          "23: set DISASM_ARCH_DIRS=ARM AARCH64 M68K MIPS POWERPC SPARC SystemZ X86 XCORE",
          "24: rem set DISASM_ARCH_LIST=ARM",
          "25: rem set DISASM_ARCH_DIRS=ARM",
          "27: rem ***************************************************************************",
          "28: rem *                              SANITY CHECKS                              *",
          "29: rem ***************************************************************************",
          "31: setlocal ENABLEDELAYEDEXPANSION",
          "33: if \"%WINCE_TOOLCHAIN_ROOT%\"==\"\" goto check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "34: if not exist \"%WINCE_TOOLCHAIN_ROOT%\" goto check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "36: if \"%TOOLCHAIN%\"==\"\" goto check_dir_exist_TOOLCHAIN",
          "38: set CC=",
          "39: set LD=",
          "40: set AR=",
          "41: for /f \"tokens=1-8 delims=;\" %%a in (\"%TOOLCHAIN%\") do (",
          "42:   for %%i in (%%a %%b %%c %%d %%e %%f %%g %%h) do (",
          "43:     if not \"%%i\"==\"\" (",
          "44:       if not exist \"%%i\" goto check_dir_exist_TOOLCHAIN",
          "45:       if \"%CC%\"==\"\" if exist \"%%i\\cl.exe\" set CC=%%i\\cl.exe",
          "46:       if \"%LD%\"==\"\" if exist \"%%i\\link.exe\" set LD=%%i\\link.exe",
          "47:       if \"%AR%\"==\"\" if exist \"%%i\\lib.exe\" set AR=%%i\\lib.exe",
          "48:     )",
          "49:   )",
          "50: )",
          "52: if \"%CC%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "53: if \"%LD%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "54: if \"%AR%\"==\"\" goto check_dir_exist_CC_LD_AR",
          "56: if \"%INCLUDE%\"==\"\" goto check_dir_exist_INCLUDE",
          "58: set WINDOWS_H=",
          "60: set INCLUDE_SC=%INCLUDE%",
          "61: set INCLUDE=",
          "62: for /f \"tokens=1-8 delims=;\" %%a in (\"%INCLUDE_SC%\") do (",
          "63:   for %%i in (\"%%a\" \"%%b\" \"%%c\" \"%%d\" \"%%e\" \"%%f\" \"%%g\" \"%%h\") do (",
          "64:     if not %%i==\"\" (",
          "65:       set INCLUDE=!INCLUDE! -I %%i",
          "66:     )",
          "67:   )",
          "68: )",
          "70: if \"%LIBPATH%\"==\"\" goto check_dir_exist_LIBPATH",
          "72: set LIBPATH_SC=%LIBPATH%",
          "73: set LIBPATH=",
          "74: for /f \"tokens=1-8 delims=;\" %%a in (\"%LIBPATH_SC%\") do (",
          "75:   for %%i in (\"%%a\" \"%%b\" \"%%c\" \"%%d\" \"%%e\" \"%%f\" \"%%g\" \"%%h\") do (",
          "76:     if not %%i==\"\" (",
          "77:       set LIBPATH=!LIBPATH! -libpath:%%i",
          "78:     )",
          "79:   )",
          "80: )",
          "82: rem ***************************************************************************",
          "83: rem *                            COMPILATION OPTIONS                          *",
          "84: rem ***************************************************************************",
          "86: set OS=windowsce",
          "87: set OS_VERSION=8.0",
          "88: set OS_VERSION_NUMBER=0x800",
          "89: set LIBARCH=arm",
          "90: set MACH=ARM",
          "92: for /f \"delims=\" %%i in ('cd') do set THIS_DIR=%%i",
          "94: set SOURCES_ROOT=%THIS_DIR%\\..",
          "95: set TARGET_DIR=%THIS_DIR%\\bin\\%OS%_%OS_VERSION%_%LIBARCH%",
          "97: for /f \"tokens=3\" %%i in ('findstr /c:\"#define CS_API_MAJOR\" \"%SOURCES_ROOT%\\include\\capstone\\capstone.h\"') do set CS_API_MAJOR=%%i",
          "98: for /f \"tokens=3\" %%i in ('findstr /c:\"#define CS_API_MINOR\" \"%SOURCES_ROOT%\\include\\capstone\\capstone.h\"') do set CS_API_MINOR=%%i",
          "100: set TARGET_VERSION=%CS_API_MAJOR%.%CS_API_MINOR%",
          "101: set TAREGET_NAME=capstone-%TARGET_VERSION%",
          "103: set CPPFLAGS=-D LIBARCH_%LIBARCH% -D LIBARCH=L\\\"%LIBARCH%\\\"",
          "104: set CPPFLAGS=%CPPFLAGS% -D _CRT_SECURE_NO_DEPRECATE -D _WINDOWS -D WINVER=%OS_VERSION_NUMBER% -D UNDER_CE=%OS_VERSION_NUMBER% -D _WIN32_WCE=%OS_VERSION_NUMBER% -D WINCE -D _UNICODE -D UNICODE -D STANDARDSHELL_UI_MODEL -D _USE_MATH_DEFINES -D ARM -D _ARM -D _ARM_ -D __ARM_ARCH_7__ -D __ARM_ARCH_7A__ -D __VFP_FP__=1",
          "106: for %%a in (%DISASM_ARCH_LIST%) do set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_HAS_%%a",
          "108: if %SHARED%==0 (",
          "109:   set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_STATIC -D LIB_EXT=L\\\".lib\\\"",
          "110: ) else (",
          "111:   set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_SHARED -D LIB_EXT=L\\\".dll\\\"",
          "112: )",
          "114: if not %USE_SYS_DYN_MEM%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_USE_SYS_DYN_MEM )",
          "115: if not %DIET_MODE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_DIET )",
          "116: if not %X86_REDUCE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_X86_REDUCE )",
          "117: if not %X86_ATT_DISABLE%==0 ( set CPPFLAGS=!CPPFLAGS! -D CAPSTONE_X86_ATT_DISABLE )",
          "119: set INCLUDE=-I %SOURCES_ROOT%\\include -I %SOURCES_ROOT% %INCLUDE%",
          "121: set CFLAGS=%CPPFLAGS% %INCLUDE% -nologo -MP -Zi -MT -Oi -GS -fp:fast -Oy- -W3 -WX",
          "123: set LDFLAGS=-nologo -debug -incremental:no -manifest:no -version:%TARGET_VERSION% -machine:%MACH% -subsystem:WINDOWSCE,%OS_VERSION% %LIBPATH% %LIBS%",
          "125: set ARFLAGS=-nologo -machine:%MACH% -subsystem:WINDOWSCE,%OS_VERSION% %LIBPATH% %LIBS%",
          "127: set SOURCES=",
          "128: for %%f in (%SOURCES_ROOT%\\*.c) do set SOURCES=!SOURCES! %%f",
          "129: for %%a in (%DISASM_ARCH_DIRS%) do for %%f in (%SOURCES_ROOT%\\arch\\%%a\\*.c) do set SOURCES=!SOURCES! %%f",
          "131: rem ***************************************************************************",
          "132: rem *                           COMPILATION COMMANDS                          *",
          "133: rem ***************************************************************************",
          "135: rd /q /s \"%TARGET_DIR%\"",
          "136: md \"%TARGET_DIR%\"",
          "138: set PATH=%TOOLCHAIN%;%PATH%",
          "140: rem %CC% -c %CFLAGS% -D DEBUG -D _DEBUG -Od -Fo\"%TARGET_DIR%\\\\\" -Fd\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %SOURCES%",
          "141: %CC% -c %CFLAGS% -D NDEBUG -Ox -Fo\"%TARGET_DIR%\\\\\" -Fd\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %SOURCES%",
          "142: if errorlevel 1 goto compilation_failed",
          "144: if %SHARED%==0 (",
          "145:   %AR% -out:%TARGET_DIR%\\%TAREGET_NAME%.lib %ARFLAGS% %TARGET_DIR%\\*.obj",
          "146: ) else (",
          "147:   %LD% -dll -out:%TARGET_DIR%\\%TAREGET_NAME%.dll -map:\"%TARGET_DIR%\\%TAREGET_NAME%.map\" -pdb:\"%TARGET_DIR%\\%TAREGET_NAME%.pdb\" %LDFLAGS% -opt:REF -opt:ICF %TARGET_DIR%\\*.obj",
          "148: )",
          "150: endlocal",
          "151: goto done",
          "153: rem ***************************************************************************",
          "154: rem *                             ERROR REPORTING                             *",
          "155: rem ***************************************************************************",
          "157: :check_dir_exist_WINCE_TOOLCHAIN_ROOT",
          "158: echo ERROR: WINCE_TOOLCHAIN_ROOT does not specify an existing directory.",
          "159: goto done",
          "161: :check_dir_exist_TOOLCHAIN",
          "162: echo ERROR: TOOLCHAIN does not specify an existing directory.",
          "163: goto done",
          "165: :check_dir_exist_CC_LD_AR",
          "166: echo ERROR: TOOLCHAIN does not specify a valid toolchain directory.",
          "167: goto done",
          "169: :check_dir_exist_INCLUDE",
          "170: echo ERROR: INCLUDE does not specify an existing directory.",
          "171: goto done",
          "173: :check_dir_exist_LIBPATH",
          "174: echo ERROR: LIBPATH does not specify an existing directory.",
          "175: goto done",
          "177: :compilation_failed",
          "178: echo ERROR: Compilation failed.",
          "179: goto done",
          "181: :done",
          "182: pause",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c86e78fce7831116f7ee912db1d652e83651a165",
      "candidate_info": {
        "commit_hash": "c86e78fce7831116f7ee912db1d652e83651a165",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/c86e78fce7831116f7ee912db1d652e83651a165",
        "files": [
          "arch/X86/X86ATTInstPrinter.c",
          "arch/X86/X86GenAsmWriter.inc",
          "cstool/Makefile"
        ],
        "message": "x86: fix movw instruction in #789",
        "before_after_code_files": [
          "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c",
          "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86ATTInstPrinter.c||arch/X86/X86ATTInstPrinter.c": [
          "File: arch/X86/X86ATTInstPrinter.c -> arch/X86/X86ATTInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "728:     }",
          "729:    }",
          "730:   } else {",
          "732:   }",
          "733:  }",
          "",
          "[Removed Lines]",
          "731:    SStream_concat0(O, \"0\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "arch/X86/X86GenAsmWriter.inc||arch/X86/X86GenAsmWriter.inc": [
          "File: arch/X86/X86GenAsmWriter.inc -> arch/X86/X86GenAsmWriter.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "14168:   uint64_t Bits2 = OpInfo2[opcode];",
          "14169:   uint64_t Bits = (Bits2 << 32) | Bits1;",
          "14172: #ifndef CAPSTONE_DIET",
          "14176: #endif",
          "",
          "[Removed Lines]",
          "14171:   if (!X86_lockrep(MI, O))",
          "14173:     SStream_concat0(O, AsmStrs+(Bits & 16383)-1);",
          "14174: #else",
          "14175:  ;",
          "",
          "[Added Lines]",
          "14171:   if (!X86_lockrep(MI, O)) {",
          "14174:     if (opcode == X86_MOV32sm) {",
          "14175:       SStream_concat0(O, \"movw\\t\");",
          "14176:     } else",
          "14177:       SStream_concat0(O, AsmStrs+(Bits & 16383)-1);",
          "14179:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}