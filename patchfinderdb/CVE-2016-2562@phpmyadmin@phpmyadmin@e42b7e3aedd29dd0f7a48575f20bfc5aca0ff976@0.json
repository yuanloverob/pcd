{
  "cve_id": "CVE-2016-2562",
  "cve_desc": "The checkHTTP function in libraries/Config.class.php in phpMyAdmin 4.5.x before 4.5.5.1 does not verify X.509 certificates from api.github.com SSL servers, which allows man-in-the-middle attackers to spoof these servers and obtain sensitive information via a crafted certificate.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "e42b7e3aedd29dd0f7a48575f20bfc5aca0ff976",
  "patch_info": {
    "commit_hash": "e42b7e3aedd29dd0f7a48575f20bfc5aca0ff976",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/e42b7e3aedd29dd0f7a48575f20bfc5aca0ff976",
    "files": [
      "libraries/Config.class.php",
      "test/classes/PMA_Config_test.php"
    ],
    "message": "Bring back SSL certificate validation\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
    "before_after_code_files": [
      "libraries/Config.class.php||libraries/Config.class.php",
      "test/classes/PMA_Config_test.php||test/classes/PMA_Config_test.php"
    ]
  },
  "patch_diff": {
    "libraries/Config.class.php||libraries/Config.class.php": [
      "File: libraries/Config.class.php -> libraries/Config.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "774:         PMA_Util::configureCurl($handle);",
      "775:         curl_setopt($handle, CURLOPT_FOLLOWLOCATION, 0);",
      "776:         curl_setopt($handle, CURLOPT_RETURNTRANSFER, 1);",
      "779:         curl_setopt($handle, CURLOPT_CONNECTTIMEOUT, 5);",
      "780:         curl_setopt($handle, CURLOPT_TIMEOUT, 5);",
      "781:         curl_setopt($handle, CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4);",
      "",
      "[Removed Lines]",
      "777:         curl_setopt($handle, CURLOPT_SSL_VERIFYHOST, 0);",
      "778:         curl_setopt($handle, CURLOPT_SSL_VERIFYPEER, 0);",
      "",
      "[Added Lines]",
      "777:         curl_setopt($handle, CURLOPT_SSL_VERIFYHOST, '2');",
      "778:         curl_setopt($handle, CURLOPT_SSL_VERIFYPEER, '1');",
      "",
      "---------------"
    ],
    "test/classes/PMA_Config_test.php||test/classes/PMA_Config_test.php": [
      "File: test/classes/PMA_Config_test.php -> test/classes/PMA_Config_test.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:         $GLOBALS['server'] = 0;",
      "54:         $_SESSION['is_git_revision'] = true;",
      "55:         $GLOBALS['PMA_Config'] = new PMA_Config(CONFIG_FILE);",
      "58:         $this->permTestObj = new PMA_Config(\"./config.sample.inc.php\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "56:         $GLOBALS['cfg']['ProxyUrl'] = '';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1038:             $this->markTestSkipped('Missing curl extension!');",
      "1039:         }",
      "1040:         $this->assertTrue(",
      "1042:         );",
      "1043:         $this->assertContains(",
      "1044:             \"TEST DATA\",",
      "1046:         );",
      "1047:         $this->assertFalse(",
      "1049:         );",
      "1050:     }",
      "",
      "[Removed Lines]",
      "1041:             $this->object->checkHTTP(\"http://www.phpmyadmin.net/test/data\")",
      "1045:             $this->object->checkHTTP(\"http://www.phpmyadmin.net/test/data\", true)",
      "1048:             $this->object->checkHTTP(\"http://www.phpmyadmin.net/test/nothing\")",
      "",
      "[Added Lines]",
      "1042:             $this->object->checkHTTP(\"https://www.phpmyadmin.net/test/data\")",
      "1046:             $this->object->checkHTTP(\"https://www.phpmyadmin.net/test/data\", true)",
      "1049:             $this->object->checkHTTP(\"https://www.phpmyadmin.net/test/nothing\")",
      "1050:         );",
      "1052:         $this->assertContains(",
      "1053:             '\"resources\"',",
      "1054:             $this->object->checkHTTP(\"https://api.github.com/rate_limit\", true)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4c6181dbf1146ff929bdedc5488f68fa6ca9a7ff",
      "candidate_info": {
        "commit_hash": "4c6181dbf1146ff929bdedc5488f68fa6ca9a7ff",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/4c6181dbf1146ff929bdedc5488f68fa6ca9a7ff",
        "files": [
          "libraries/Config.class.php",
          "libraries/DBQbe.class.php"
        ],
        "message": "Fix some PMD ShortVariable warnings\n\nSigned-off-by: Marc Delisle <marc@infomarc.info>",
        "before_after_code_files": [
          "libraries/Config.class.php||libraries/Config.class.php",
          "libraries/DBQbe.class.php||libraries/DBQbe.class.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/Config.class.php||libraries/Config.class.php"
          ],
          "candidate": [
            "libraries/Config.class.php||libraries/Config.class.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/Config.class.php||libraries/Config.class.php": [
          "File: libraries/Config.class.php -> libraries/Config.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "755:         if (! function_exists('curl_init')) {",
          "756:             return null;",
          "757:         }",
          "767:         if (! defined('TESTSUITE')) {",
          "768:             session_write_close();",
          "769:         }",
          "771:         if (! defined('TESTSUITE')) {",
          "772:             ini_set('session.use_only_cookies', '0');",
          "773:             ini_set('session.use_cookies', '0');",
          "",
          "[Removed Lines]",
          "758:         $ch = curl_init($link);",
          "759:         curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 0);",
          "760:         curl_setopt($ch, CURLOPT_HEADER, 1);",
          "761:         curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);",
          "762:         curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);",
          "763:         curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);",
          "764:         curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 5);",
          "765:         curl_setopt($ch, CURLOPT_USERAGENT, 'phpMyAdmin/' . PMA_VERSION);",
          "766:         curl_setopt($ch, CURLOPT_TIMEOUT, 5);",
          "770:         $data = @curl_exec($ch);",
          "",
          "[Added Lines]",
          "758:         $handle = curl_init($link);",
          "759:         curl_setopt($handle, CURLOPT_FOLLOWLOCATION, 0);",
          "760:         curl_setopt($handle, CURLOPT_HEADER, 1);",
          "761:         curl_setopt($handle, CURLOPT_RETURNTRANSFER, 1);",
          "762:         curl_setopt($handle, CURLOPT_SSL_VERIFYHOST, 0);",
          "763:         curl_setopt($handle, CURLOPT_SSL_VERIFYPEER, 0);",
          "764:         curl_setopt($handle, CURLOPT_CONNECTTIMEOUT, 5);",
          "765:         curl_setopt($handle, CURLOPT_USERAGENT, 'phpMyAdmin/' . PMA_VERSION);",
          "766:         curl_setopt($handle, CURLOPT_TIMEOUT, 5);",
          "770:         $data = @curl_exec($handle);",
          "",
          "---------------"
        ],
        "libraries/DBQbe.class.php||libraries/DBQbe.class.php": [
          "File: libraries/DBQbe.class.php -> libraries/DBQbe.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1199:             return $candidate_columns;",
          "1200:         }",
          "1204:         foreach ($candidate_columns as $column => $is_where) {",
          "1205:             $table = explode('.', $column);",
          "1206:             $table = $table[0];",
          "1207:             if ($is_where == 'Y') {",
          "1209:             } else {",
          "1211:             }",
          "1212:         }",
          "1216:         } else {",
          "1219:         }",
          "",
          "[Removed Lines]",
          "1202:         $vg = array();",
          "1203:         $sg = array();",
          "1208:                 $vg[$column] = $table;",
          "1210:                 $sg[$column] = $table;",
          "1213:         if (count($vg) > 0) {",
          "1214:             $candidate_columns = $vg;",
          "1217:             $candidate_columns = $sg;",
          "",
          "[Added Lines]",
          "1202:         $very_good = array();",
          "1203:         $still_good = array();",
          "1208:                 $very_good[$column] = $table;",
          "1210:                 $still_good[$column] = $table;",
          "1213:         if (count($very_good) > 0) {",
          "1214:             $candidate_columns = $very_good;",
          "1217:             $candidate_columns = $still_good;",
          "",
          "---------------"
        ]
      }
    }
  ]
}