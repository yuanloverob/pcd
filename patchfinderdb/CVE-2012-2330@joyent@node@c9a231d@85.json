{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "36761b2055040f670085eec070a74184762f3fd7",
      "candidate_info": {
        "commit_hash": "36761b2055040f670085eec070a74184762f3fd7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/36761b2055040f670085eec070a74184762f3fd7",
        "files": [
          "src/node.cc",
          "src/node_http_parser.cc",
          "src/node_http_parser.h"
        ],
        "message": "process: expose the http_parser version in process.versions",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "src/node_http_parser.cc||src/node_http_parser.cc",
          "src/node_http_parser.h||src/node_http_parser.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "src/node_http_parser.cc||src/node_http_parser.cc"
          ],
          "candidate": [
            "src/node_http_parser.cc||src/node_http_parser.cc"
          ]
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2079:   Local<Object> versions = Object::New();",
          "2080:   char buf[20];",
          "2081:   process->Set(String::NewSymbol(\"versions\"), versions);",
          "2083:   versions->Set(String::NewSymbol(\"node\"), String::New(NODE_VERSION+1));",
          "2084:   versions->Set(String::NewSymbol(\"v8\"), String::New(V8::GetVersion()));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2082:   versions->Set(String::NewSymbol(\"http_parser\"), String::New(",
          "2083:                NODE_STRINGIFY(HTTP_PARSER_VERSION_MAJOR) \".\"",
          "2084:                NODE_STRINGIFY(HTTP_PARSER_VERSION_MINOR)));",
          "",
          "---------------"
        ],
        "src/node_http_parser.cc||src/node_http_parser.cc": [
          "File: src/node_http_parser.cc -> src/node_http_parser.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include \"node.h\"",
          "26: #include \"node_buffer.h\"",
          "31: #if !defined(_MSC_VER)",
          "",
          "[Removed Lines]",
          "28: #include \"http_parser.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/node_http_parser.h||src/node_http_parser.h": [
          "File: src/node_http_parser.h -> src/node_http_parser.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include \"v8.h\"",
          "27: namespace node {",
          "29: void InitHttpParser(v8::Handle<v8::Object> target);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include \"http_parser.h\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5756d7916a1f6dfb9d0a7fc544b4a7fcc4e99a50",
      "candidate_info": {
        "commit_hash": "5756d7916a1f6dfb9d0a7fc544b4a7fcc4e99a50",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5756d7916a1f6dfb9d0a7fc544b4a7fcc4e99a50",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.6.10",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 6",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "31: #define NODE_PATCH_VERSION 9",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "31: #define NODE_PATCH_VERSION 10",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a27320e00f12d26dad1b464bf89484faf429a688",
      "candidate_info": {
        "commit_hash": "a27320e00f12d26dad1b464bf89484faf429a688",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a27320e00f12d26dad1b464bf89484faf429a688",
        "files": [
          "deps/uv/AUTHORS",
          "deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h",
          "deps/uv/src/unix/eio/config_linux.h",
          "deps/uv/src/unix/eio/eio.c",
          "deps/uv/src/unix/error.c",
          "deps/uv/src/unix/stream.c",
          "deps/uv/src/win/error.c",
          "deps/uv/src/win/internal.h",
          "deps/uv/src/win/pipe.c",
          "deps/uv/src/win/stream.c",
          "deps/uv/src/win/tcp.c",
          "deps/uv/src/win/tty.c",
          "deps/uv/src/win/winsock.h",
          "deps/uv/test/run-tests.c",
          "deps/uv/test/test-fs.c",
          "deps/uv/test/test-ipc-threads.c",
          "deps/uv/test/test-list.h",
          "deps/uv/test/test-ping-pong.c",
          "deps/uv/test/test-udp-multicast-ttl.c",
          "deps/uv/uv.gyp"
        ],
        "message": "uv: upgrade to 4e1f2b1",
        "before_after_code_files": [
          "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h",
          "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/unix/eio/config_linux.h||deps/uv/src/unix/eio/config_linux.h",
          "deps/uv/src/unix/eio/eio.c||deps/uv/src/unix/eio/eio.c",
          "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c",
          "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c",
          "deps/uv/src/win/error.c||deps/uv/src/win/error.c",
          "deps/uv/src/win/internal.h||deps/uv/src/win/internal.h",
          "deps/uv/src/win/pipe.c||deps/uv/src/win/pipe.c",
          "deps/uv/src/win/stream.c||deps/uv/src/win/stream.c",
          "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c",
          "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c",
          "deps/uv/src/win/winsock.h||deps/uv/src/win/winsock.h",
          "deps/uv/test/run-tests.c||deps/uv/test/run-tests.c",
          "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c",
          "deps/uv/test/test-ipc-threads.c||deps/uv/test/test-ipc-threads.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/test/test-ping-pong.c||deps/uv/test/test-ping-pong.c",
          "deps/uv/test/test-udp-multicast-ttl.c||deps/uv/test/test-udp-multicast-ttl.c",
          "deps/uv/uv.gyp||deps/uv/uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv-private/uv-unix.h||deps/uv/include/uv-private/uv-unix.h": [
          "File: deps/uv/include/uv-private/uv-unix.h -> deps/uv/include/uv-private/uv-unix.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:   struct termios orig_termios; \\",
          "193:   int mode;",
          "199: #if defined(__linux__)",
          "",
          "[Removed Lines]",
          "195: #define UV_STREAM_INFO_PRIVATE_FIELDS \\",
          "196:   int fd;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h": [
          "File: deps/uv/include/uv-private/uv-win.h -> deps/uv/include/uv-private/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "450:   wchar_t* dirw;                          \\",
          "451:   char* buffer;",
          "458: int uv_utf16_to_utf8(const wchar_t* utf16Buffer, size_t utf16Size,",
          "459:     char* utf8Buffer, size_t utf8Size);",
          "460: int uv_utf8_to_utf16(const char* utf8Buffer, wchar_t* utf16Buffer,",
          "",
          "[Removed Lines]",
          "453: #define UV_STREAM_INFO_PRIVATE_FIELDS     \\",
          "454:   union {                                 \\",
          "455:     WSAPROTOCOL_INFOW socket_info;        \\",
          "456:   };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: #   define CARES_STATICLIB 1",
          "43: # endif",
          "44: #else",
          "47: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: #elif __GNUC__ >= 4",
          "45: # define UV_EXTERN __attribute__((visibility(\"default\")))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117:   XX( 47, EEXIST, \"file already exists\") \\",
          "118:   XX( 48, ESRCH, \"no such process\") \\",
          "119:   XX( 49, ENAMETOOLONG, \"name too long\") \\",
          "123: #define UV_ERRNO_GEN(val, name, s) UV_##name = val,",
          "",
          "[Removed Lines]",
          "120:   XX( 50, EPERM, \"operation not permitted\")",
          "",
          "[Added Lines]",
          "121:   XX( 50, EPERM, \"operation not permitted\") \\",
          "122:   XX( 51, ELOOP, \"too many symbolic links encountered\") \\",
          "123:   XX( 52, EXDEV, \"cross-device link not permitted\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "181: typedef struct uv_counters_s uv_counters_t;",
          "182: typedef struct uv_cpu_info_s uv_cpu_info_t;",
          "183: typedef struct uv_interface_address_s uv_interface_address_t;",
          "186: typedef struct uv_req_s uv_req_t;",
          "187: typedef struct uv_shutdown_s uv_shutdown_t;",
          "",
          "[Removed Lines]",
          "184: typedef struct uv_stream_info_s uv_stream_info_t;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "532: UV_EXTERN int uv_tcp_getpeername(uv_tcp_t* handle, struct sockaddr* name,",
          "533:     int* namelen);",
          "",
          "[Removed Lines]",
          "540: struct uv_stream_info_s {",
          "541:   uv_handle_type type;",
          "542:   UV_STREAM_INFO_PRIVATE_FIELDS",
          "543: };",
          "549: UV_EXTERN int uv_export(uv_stream_t* stream, uv_stream_info_t* info);",
          "555: UV_EXTERN int uv_import(uv_stream_t* stream, uv_stream_info_t* info);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/eio/config_linux.h||deps/uv/src/unix/eio/config_linux.h": [
          "File: deps/uv/src/unix/eio/config_linux.h -> deps/uv/src/unix/eio/config_linux.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: #define HAVE_UTIMES 1",
          "20: #define HAVE_INTTYPES_H 1",
          "",
          "[Removed Lines]",
          "17: #define HAVE_FUTIMES 1",
          "",
          "[Added Lines]",
          "17: #undef HAVE_FUTIMES",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57: #define HAVE_SYS_TYPES_H 1",
          "60: #define HAVE_UNISTD_H 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60: #define HAVE_SYS_SYSCALL_H 1",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/eio/eio.c||deps/uv/src/unix/eio/eio.c": [
          "File: deps/uv/src/unix/eio/eio.c -> deps/uv/src/unix/eio/eio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1039: static int",
          "1040: eio__futimes (int fd, const struct timeval tv[2])",
          "1041: {",
          "1042:   errno = ENOSYS;",
          "1043:   return -1;",
          "1044: }",
          "1046: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1042: #if defined(__linux) && defined(__NR_utimensat)",
          "1043:   struct timespec ts[2];",
          "1044:   ts[0].tv_sec = tv[0].tv_sec, ts[0].tv_nsec = tv[0].tv_usec * 1000;",
          "1045:   ts[1].tv_sec = tv[1].tv_sec, ts[1].tv_nsec = tv[1].tv_usec * 1000;",
          "1046:   return syscall(__NR_utimensat, fd, NULL, ts, 0);",
          "1047: #else",
          "1050: #endif",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c": [
          "File: deps/uv/src/unix/error.c -> deps/uv/src/unix/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     case EMSGSIZE: return UV_EMSGSIZE;",
          "75:     case ENAMETOOLONG: return UV_ENAMETOOLONG;",
          "76:     case EINVAL: return UV_EINVAL;",
          "77:     case ECONNREFUSED: return UV_ECONNREFUSED;",
          "78:     case EADDRINUSE: return UV_EADDRINUSE;",
          "79:     case EADDRNOTAVAIL: return UV_EADDRNOTAVAIL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     case ECONNABORTED: return UV_ECONNABORTED;",
          "78:     case ELOOP: return UV_ELOOP;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:     case EAI_NONAME: return UV_ENOENT;",
          "86:     case ESRCH: return UV_ESRCH;",
          "87:     case ETIMEDOUT: return UV_ETIMEDOUT;",
          "88:     default: return UV_UNKNOWN;",
          "89:   }",
          "90:   UNREACHABLE();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:     case EXDEV: return UV_EXDEV;",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c": [
          "File: deps/uv/src/unix/stream.c -> deps/uv/src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "966: }",
          "988: }",
          "1005: }",
          "",
          "[Removed Lines]",
          "969: int uv_export(uv_stream_t* stream, uv_stream_info_t* info) {",
          "970:   int fd;",
          "972:   if (stream->type != UV_TCP) {",
          "973:     uv__set_artificial_error(stream->loop, UV_EINVAL);",
          "974:     return -1;",
          "975:   }",
          "977:   fd = uv__dup(stream->fd);",
          "979:   if (fd == -1) {",
          "980:     uv__set_sys_error(stream->loop, errno);",
          "981:     return -1;",
          "982:   }",
          "984:   info->type = stream->type;",
          "985:   info->fd = fd;",
          "987:   return 0;",
          "991: int uv_import(uv_stream_t* stream, uv_stream_info_t* info) {",
          "992:   if (info->type != UV_TCP) {",
          "993:     uv__set_artificial_error(stream->loop, UV_EINVAL);",
          "994:     return -1;",
          "995:   }",
          "997:   if (stream->fd != -1) {",
          "998:     uv__set_artificial_error(stream->loop, UV_EALREADY);",
          "999:     return -1;",
          "1000:   }",
          "1002:   stream->fd = info->fd;",
          "1004:   return 0;",
          "",
          "[Added Lines]",
          "971: int uv_is_readable(uv_stream_t* stream) {",
          "972:   return stream->flags & UV_READABLE;",
          "976: int uv_is_writable(uv_stream_t* stream) {",
          "977:   return stream->flags & UV_WRITABLE;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/error.c||deps/uv/src/win/error.c": [
          "File: deps/uv/src/win/error.c -> deps/uv/src/win/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     case WSAEHOSTUNREACH:                   return UV_EHOSTUNREACH;",
          "90:     case ERROR_INVALID_DATA:                return UV_EINVAL;",
          "91:     case WSAEINVAL:                         return UV_EINVAL;",
          "92:     case ERROR_TOO_MANY_OPEN_FILES:         return UV_EMFILE;",
          "93:     case WSAEMFILE:                         return UV_EMFILE;",
          "94:     case WSAEMSGSIZE:                       return UV_EMSGSIZE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:     case ERROR_CANT_RESOLVE_FILENAME:       return UV_ELOOP;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/internal.h||deps/uv/src/win/internal.h": [
          "File: deps/uv/src/win/internal.h -> deps/uv/src/win/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "144: void uv_tcp_endgame(uv_loop_t* loop, uv_tcp_t* handle);",
          "148: int uv_tcp_duplicate_socket(uv_tcp_t* handle, int pid,",
          "149:     LPWSAPROTOCOL_INFOW protocol_info);",
          "",
          "[Removed Lines]",
          "146: int uv__tcp_import(uv_tcp_t* tcp, WSAPROTOCOL_INFOW* socket_protocol_info);",
          "151: int uv_tcp_export(uv_tcp_t* tcp, uv_stream_info_t* info);",
          "152: int uv_tcp_import(uv_tcp_t* tcp, uv_stream_info_t* info);",
          "",
          "[Added Lines]",
          "146: int uv_tcp_import(uv_tcp_t* tcp, WSAPROTOCOL_INFOW* socket_protocol_info);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/pipe.c||deps/uv/src/win/pipe.c": [
          "File: deps/uv/src/win/pipe.c -> deps/uv/src/win/pipe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98: }",
          "101: int uv_stdio_pipe_server(uv_loop_t* loop, uv_pipe_t* handle, DWORD access,",
          "102:     char* name, size_t nameSize) {",
          "103:   HANDLE pipeHandle;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101: static int open_named_pipe(uv_pipe_t* handle) {",
          "106:   handle->handle = CreateFileW(handle->name,",
          "107:                                GENERIC_READ | GENERIC_WRITE,",
          "108:                                0,",
          "109:                                NULL,",
          "110:                                OPEN_EXISTING,",
          "111:                                FILE_FLAG_OVERLAPPED,",
          "112:                                NULL);",
          "114:   if (handle->handle != INVALID_HANDLE_VALUE) {",
          "115:     return 0;",
          "116:   }",
          "123:   if (GetLastError() == ERROR_ACCESS_DENIED) {",
          "124:     handle->handle = CreateFileW(handle->name,",
          "125:                                  GENERIC_READ | FILE_WRITE_ATTRIBUTES,",
          "126:                                  0,",
          "127:                                  NULL,",
          "128:                                  OPEN_EXISTING,",
          "129:                                  FILE_FLAG_OVERLAPPED,",
          "130:                                  NULL);",
          "132:     if (handle->handle != INVALID_HANDLE_VALUE) {",
          "133:       handle->flags |= UV_HANDLE_SHUT;",
          "134:       return 0;",
          "135:     }",
          "136:   }",
          "138:   if (GetLastError() == ERROR_ACCESS_DENIED) {",
          "139:     handle->handle = CreateFileW(handle->name,",
          "140:                                  GENERIC_WRITE | FILE_READ_ATTRIBUTES,",
          "141:                                  0,",
          "142:                                  NULL,",
          "143:                                  OPEN_EXISTING,",
          "144:                                  FILE_FLAG_OVERLAPPED,",
          "145:                                  NULL);",
          "147:     if (handle->handle != INVALID_HANDLE_VALUE) {",
          "148:       handle->flags |= UV_HANDLE_EOF;",
          "149:       return 0;",
          "150:     }",
          "151:   }",
          "153:   return -1;",
          "154: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "438:   while (WaitNamedPipeW(handle->name, 30000)) {",
          "449:       break;",
          "450:     }",
          "",
          "[Removed Lines]",
          "440:     pipeHandle = CreateFileW(handle->name,",
          "441:                             GENERIC_READ | GENERIC_WRITE,",
          "442:                             0,",
          "443:                             NULL,",
          "444:                             OPEN_EXISTING,",
          "445:                             FILE_FLAG_OVERLAPPED,",
          "446:                             NULL);",
          "448:     if (pipeHandle != INVALID_HANDLE_VALUE) {",
          "",
          "[Added Lines]",
          "496:     if (open_named_pipe(handle) == 0) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "471:     const char* name, uv_connect_cb cb) {",
          "472:   uv_loop_t* loop = handle->loop;",
          "473:   int errno, nameSize;",
          "476:   handle->handle = INVALID_HANDLE_VALUE;",
          "",
          "[Removed Lines]",
          "474:   HANDLE pipeHandle;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "492:     goto error;",
          "493:   }",
          "504:     if (GetLastError() == ERROR_PIPE_BUSY) {",
          "506:       if (!QueueUserWorkItem(&pipe_connect_thread_proc,",
          "",
          "[Removed Lines]",
          "495:   pipeHandle = CreateFileW(handle->name,",
          "496:                           GENERIC_READ | GENERIC_WRITE,",
          "497:                           0,",
          "498:                           NULL,",
          "499:                           OPEN_EXISTING,",
          "500:                           FILE_FLAG_OVERLAPPED,",
          "501:                           NULL);",
          "503:   if (pipeHandle == INVALID_HANDLE_VALUE) {",
          "",
          "[Added Lines]",
          "542:   if (open_named_pipe(handle) != 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "519:     goto error;",
          "520:   }",
          "523:     errno = GetLastError();",
          "524:     goto error;",
          "525:   }",
          "529:   SET_REQ_SUCCESS(req);",
          "530:   uv_insert_pending_req(loop, (uv_req_t*) req);",
          "531:   handle->reqs_pending++;",
          "",
          "[Removed Lines]",
          "522:   if (uv_set_pipe_handle(loop, (uv_pipe_t*)req->handle, pipeHandle)) {",
          "527:   handle->handle = pipeHandle;",
          "",
          "[Added Lines]",
          "561:   assert(handle->handle != INVALID_HANDLE_VALUE);",
          "563:   if (uv_set_pipe_handle(loop, (uv_pipe_t*)req->handle, handle->handle)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "537:     handle->name = NULL;",
          "538:   }",
          "542:   }",
          "",
          "[Removed Lines]",
          "540:   if (pipeHandle != INVALID_HANDLE_VALUE) {",
          "541:     CloseHandle(pipeHandle);",
          "",
          "[Added Lines]",
          "579:   if (handle->handle != INVALID_HANDLE_VALUE) {",
          "580:     CloseHandle(handle->handle);",
          "581:     handle->handle = INVALID_HANDLE_VALUE;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "649:       return -1;",
          "650:     }",
          "653:   } else {",
          "654:     pipe_client = (uv_pipe_t*)client;",
          "",
          "[Removed Lines]",
          "652:     return uv__tcp_import((uv_tcp_t*)client, server->pending_socket_info);",
          "",
          "[Added Lines]",
          "692:     return uv_tcp_import((uv_tcp_t*)client, server->pending_socket_info);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/stream.c||deps/uv/src/win/stream.c": [
          "File: deps/uv/src/win/stream.c -> deps/uv/src/win/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "188: }",
          "200: }",
          "",
          "[Removed Lines]",
          "191: int uv_export(uv_stream_t* stream, uv_stream_info_t* info) {",
          "192:   switch (stream->type) {",
          "193:     case UV_TCP:",
          "194:       return uv_tcp_export((uv_tcp_t*)stream, info);",
          "195:     default:",
          "196:       assert(0);",
          "197:       uv__set_sys_error(stream->loop, WSAEINVAL);",
          "198:       return -1;",
          "199:   }",
          "203: int uv_import(uv_stream_t* stream, uv_stream_info_t* info) {",
          "204:   switch (stream->type) {",
          "205:     case UV_TCP:",
          "206:       return uv_tcp_import((uv_tcp_t*)stream, info);",
          "207:     default:",
          "208:       assert(0);",
          "209:       uv__set_sys_error(stream->loop, WSAEINVAL);",
          "210:       return -1;",
          "211:   }",
          "212: }",
          "",
          "[Added Lines]",
          "191: int uv_is_readable(uv_stream_t* handle) {",
          "192:   return !(handle->flags & UV_HANDLE_EOF);",
          "197:   return !(handle->flags & UV_HANDLE_SHUT);",
          "198: }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c": [
          "File: deps/uv/src/win/tcp.c -> deps/uv/src/win/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1019: }",
          "1023:   SOCKET socket = WSASocketW(AF_INET,",
          "1024:                              SOCK_STREAM,",
          "1025:                              IPPROTO_IP,",
          "",
          "[Removed Lines]",
          "1022: int uv__tcp_import(uv_tcp_t* tcp, WSAPROTOCOL_INFOW* socket_protocol_info) {",
          "",
          "[Added Lines]",
          "1022: int uv_tcp_import(uv_tcp_t* tcp, WSAPROTOCOL_INFOW* socket_protocol_info) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1140:   }",
          "1142:   return 0;",
          "",
          "[Removed Lines]",
          "1143: }",
          "1146: int uv_tcp_export(uv_tcp_t* tcp, uv_stream_info_t* info) {",
          "1147:   if (uv_tcp_duplicate_socket(tcp, GetCurrentProcessId(),",
          "1148:       &info->socket_info) == -1) {",
          "1149:     return -1;",
          "1150:   }",
          "1152:   info->type = UV_TCP;",
          "1153:   return 0;",
          "1154: }",
          "1157: int uv_tcp_import(uv_tcp_t* tcp, uv_stream_info_t* info) {",
          "1158:   if (info->type != UV_TCP) {",
          "1159:     uv__set_sys_error(tcp->loop, WSAEINVAL);",
          "1160:     return -1;",
          "1161:   }",
          "1163:   return uv__tcp_import(tcp, &info->socket_info);",
          "1164: }",
          "",
          "[Added Lines]",
          "1143: }",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c": [
          "File: deps/uv/src/win/tty.c -> deps/uv/src/win/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1096:     } else if (arg == 39) {",
          "1098:       fg_color = 7;",
          "1100:     } else if (arg >= 40 && arg <= 47) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1099:       fg_bright = 0;",
          "",
          "---------------"
        ],
        "deps/uv/src/win/winsock.h||deps/uv/src/win/winsock.h": [
          "File: deps/uv/src/win/winsock.h -> deps/uv/src/win/winsock.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:   #define IPV6_V6ONLY 27",
          "47: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: #ifndef IPV6_HOPLIMIT",
          "50:   #define IPV6_HOPLIMIT 21",
          "51: #endif",
          "",
          "---------------"
        ],
        "deps/uv/test/run-tests.c||deps/uv/test/run-tests.c": [
          "File: deps/uv/test/run-tests.c -> deps/uv/test/run-tests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:   uv_pipe_open(&channel, 0);",
          "134:   r = uv_tcp_init(uv_default_loop(), &tcp_server);",
          "135:   ASSERT(r == 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:   ASSERT(uv_is_readable(&channel));",
          "135:   ASSERT(uv_is_writable(&channel));",
          "",
          "---------------"
        ],
        "deps/uv/test/test-fs.c||deps/uv/test/test-fs.c": [
          "File: deps/uv/test/test-fs.c -> deps/uv/test/test-fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "432:   uv_fs_req_cleanup(req);",
          "433: }",
          "436: TEST_IMPL(fs_file_noent) {",
          "437:   uv_fs_t req;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "435: static void open_loop_cb(uv_fs_t* req) {",
          "436:   ASSERT(req->fs_type == UV_FS_OPEN);",
          "437:   ASSERT(req->errorno == UV_ELOOP);",
          "438:   ASSERT(req->result == -1);",
          "439:   open_cb_count++;",
          "440:   uv_fs_req_cleanup(req);",
          "441: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "483:   return 0;",
          "484: }",
          "486: static void check_utime(const char* path, double atime, double mtime) {",
          "487:   struct stat* s;",
          "488:   uv_fs_t req;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "494: TEST_IMPL(fs_file_loop) {",
          "495:   uv_fs_t req;",
          "496:   int r;",
          "498:   loop = uv_default_loop();",
          "500:   unlink(\"test_symlink\");",
          "501:   uv_fs_symlink(loop, &req, \"test_symlink\", \"test_symlink\", 0, NULL);",
          "502:   uv_fs_req_cleanup(&req);",
          "504:   r = uv_fs_open(loop, &req, \"test_symlink\", O_RDONLY, 0, NULL);",
          "505:   ASSERT(r == -1);",
          "506:   ASSERT(req.result == -1);",
          "507:   ASSERT(uv_last_error(loop).code == UV_ELOOP);",
          "508:   uv_fs_req_cleanup(&req);",
          "510:   r = uv_fs_open(loop, &req, \"test_symlink\", O_RDONLY, 0, open_loop_cb);",
          "511:   ASSERT(r == 0);",
          "513:   ASSERT(open_cb_count == 0);",
          "514:   uv_run(loop);",
          "515:   ASSERT(open_cb_count == 1);",
          "517:   unlink(\"test_symlink\");",
          "519:   return 0;",
          "520: }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-ipc-threads.c||deps/uv/test/test-ipc-threads.c": [
          "File: deps/uv/test/test-ipc-threads.c -> deps/uv/test/test-ipc-threads.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: TEST_DECLARE   (stdio_over_pipes)",
          "25: TEST_DECLARE   (ipc_listen_before_write)",
          "26: TEST_DECLARE   (ipc_listen_after_write)",
          "29: TEST_DECLARE   (tcp_ping_pong)",
          "30: TEST_DECLARE   (tcp_ping_pong_v6)",
          "31: TEST_DECLARE   (pipe_ping_pong)",
          "",
          "[Removed Lines]",
          "27: TEST_DECLARE   (ipc_threads_listen_after_write)",
          "28: TEST_DECLARE   (ipc_threads_listen_before_write)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50: TEST_DECLARE   (tcp_bind6_localhost_ok)",
          "51: TEST_DECLARE   (udp_send_and_recv)",
          "52: TEST_DECLARE   (udp_multicast_join)",
          "53: TEST_DECLARE   (udp_dgram_too_big)",
          "54: TEST_DECLARE   (udp_dual_stack)",
          "55: TEST_DECLARE   (udp_ipv6_only)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: TEST_DECLARE   (udp_multicast_ttl)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "110: TEST_DECLARE   (kill)",
          "111: TEST_DECLARE   (fs_file_noent)",
          "112: TEST_DECLARE   (fs_file_nametoolong)",
          "113: TEST_DECLARE   (fs_file_async)",
          "114: TEST_DECLARE   (fs_file_sync)",
          "115: TEST_DECLARE   (fs_async_dir)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112: TEST_DECLARE   (fs_file_loop)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "164:   TEST_ENTRY  (stdio_over_pipes)",
          "165:   TEST_ENTRY  (ipc_listen_before_write)",
          "166:   TEST_ENTRY  (ipc_listen_after_write)",
          "170:   TEST_ENTRY  (tcp_ping_pong)",
          "171:   TEST_HELPER (tcp_ping_pong, tcp4_echo_server)",
          "",
          "[Removed Lines]",
          "167:   TEST_ENTRY  (ipc_threads_listen_after_write)",
          "168:   TEST_ENTRY  (ipc_threads_listen_before_write)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "206:   TEST_ENTRY  (udp_ipv6_only)",
          "207:   TEST_ENTRY  (udp_options)",
          "208:   TEST_ENTRY  (udp_multicast_join)",
          "210:   TEST_ENTRY  (pipe_bind_error_addrinuse)",
          "211:   TEST_ENTRY  (pipe_bind_error_addrnotavail)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207:   TEST_ENTRY  (udp_multicast_ttl)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "295:   TEST_ENTRY  (fs_file_noent)",
          "296:   TEST_ENTRY  (fs_file_nametoolong)",
          "297:   TEST_ENTRY  (fs_file_async)",
          "298:   TEST_ENTRY  (fs_file_sync)",
          "299:   TEST_ENTRY  (fs_async_dir)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "296:   TEST_ENTRY  (fs_file_loop)",
          "",
          "---------------"
        ],
        "deps/uv/test/test-ping-pong.c||deps/uv/test/test-ping-pong.c": [
          "File: deps/uv/test/test-ping-pong.c -> deps/uv/test/test-ping-pong.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:   ASSERT(status == 0);",
          "141:   pinger_write_ping(pinger);",
          "143:   uv_read_start((uv_stream_t*)(req->handle), alloc_cb, pinger_read_cb);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141:   ASSERT(uv_is_readable(req->handle));",
          "142:   ASSERT(uv_is_writable(req->handle));",
          "",
          "---------------"
        ],
        "deps/uv/test/test-udp-multicast-ttl.c||deps/uv/test/test-udp-multicast-ttl.c": [
          "File: deps/uv/test/test-udp-multicast-ttl.c -> deps/uv/test/test-udp-multicast-ttl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"uv.h\"",
          "23: #include \"task.h\"",
          "25: #include <stdio.h>",
          "26: #include <stdlib.h>",
          "27: #include <string.h>",
          "29: #define CHECK_HANDLE(handle) \\",
          "30:   ASSERT((uv_udp_t*)(handle) == &server || (uv_udp_t*)(handle) == &client)",
          "32: static uv_udp_t server;",
          "33: static uv_udp_t client;",
          "35: static int cl_recv_cb_called;",
          "37: static int sv_send_cb_called;",
          "39: static int close_cb_called;",
          "42: static void close_cb(uv_handle_t* handle) {",
          "43:   CHECK_HANDLE(handle);",
          "44:   close_cb_called++;",
          "45: }",
          "48: static void sv_send_cb(uv_udp_send_t* req, int status) {",
          "49:   ASSERT(req != NULL);",
          "50:   ASSERT(status == 0);",
          "51:   CHECK_HANDLE(req->handle);",
          "53:   sv_send_cb_called++;",
          "55:   uv_close((uv_handle_t*) req->handle, close_cb);",
          "56: }",
          "59: TEST_IMPL(udp_multicast_ttl) {",
          "60:   int r;",
          "61:   uv_udp_send_t req;",
          "62:   uv_buf_t buf;",
          "63:   struct sockaddr_in addr = uv_ip4_addr(\"239.255.0.1\", TEST_PORT);",
          "65:   r = uv_udp_init(uv_default_loop(), &server);",
          "66:   ASSERT(r == 0);",
          "68:   r = uv_udp_bind(&server, uv_ip4_addr(\"0.0.0.0\", 0), 0);",
          "69:   ASSERT(r == 0);",
          "71:   r = uv_udp_set_multicast_ttl(&server, 32);",
          "72:   ASSERT(r == 0);",
          "75:   buf = uv_buf_init(\"PING\", 4);",
          "76:   r = uv_udp_send(&req, &server, &buf, 1, addr, sv_send_cb);",
          "77:   ASSERT(r == 0);",
          "79:   ASSERT(close_cb_called == 0);",
          "80:   ASSERT(sv_send_cb_called == 0);",
          "83:   uv_run(uv_default_loop());",
          "85:   ASSERT(sv_send_cb_called == 1);",
          "86:   ASSERT(close_cb_called == 1);",
          "88:   return 0;",
          "89: }",
          "",
          "---------------"
        ],
        "deps/uv/uv.gyp||deps/uv/uv.gyp": [
          "File: deps/uv/uv.gyp -> deps/uv/uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:             'src/ares/config_win32'",
          "116:           ],",
          "117:           'defines': [",
          "119:             'EIO_STACKSIZE=262144',",
          "120:             '_GNU_SOURCE',",
          "121:           ],",
          "",
          "[Removed Lines]",
          "118:             '_WIN32_WINNT=0x0502',",
          "",
          "[Added Lines]",
          "118:             '_WIN32_WINNT=0x0600',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "301:         'test/test-hrtime.c',",
          "302:         'test/test-idle.c',",
          "303:         'test/test-ipc.c',",
          "305:         'test/test-list.h',",
          "306:         'test/test-loop-handles.c',",
          "307:         'test/test-multiple-listen.c',",
          "",
          "[Removed Lines]",
          "304:         'test/test-ipc-threads.c',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "336:         'test/test-udp-send-and-recv.c',",
          "337:         'test/test-udp-multicast-join.c',",
          "338:         'test/test-counters-init.c',",
          "339:       ],",
          "340:       'conditions': [",
          "341:         [ 'OS==\"win\"', {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "338:         'test/test-udp-multicast-ttl.c',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "04271a5e9394e6dadf6c5172bcfac1d5f086db8f",
      "candidate_info": {
        "commit_hash": "04271a5e9394e6dadf6c5172bcfac1d5f086db8f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/04271a5e9394e6dadf6c5172bcfac1d5f086db8f",
        "files": [
          "tools/gyp/pylib/gyp/generator/make.py"
        ],
        "message": "gyp: Apply 'argument too long' fix in another place\n\nFor some reason, aa5961a445acbd2b533ef870eb19733be7b7ede5 caused\n'make test' to rebuild the entire project every time.  Applying\nthe fix to the other place where gyp chops up the argument list\nmakes it behave properly.",
        "before_after_code_files": [
          "tools/gyp/pylib/gyp/generator/make.py||tools/gyp/pyligyp/generator/make.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/gyp/pylib/gyp/generator/make.py||tools/gyp/pyligyp/generator/make.py": [
          "File: tools/gyp/pylib/gyp/generator/make.py -> tools/gyp/pyligyp/generator/make.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2128:   if generator_flags.get('auto_regeneration', True):",
          "2129:     WriteAutoRegenerationRule(params, root_makefile, makefile_name, build_files)",
          "2132:   # avoid overflowing the command line.",
          "2133:   all_deps = \"\"",
          "2135:     all_deps += (\"\"\"",
          "2136:   ifneq ($(word %(start)d,$(d_files)),)",
          "2137:     $(shell cat $(wordlist %(start)d,%(end)d,$(d_files)) >> $(depsdir)/all.deps)",
          "",
          "[Removed Lines]",
          "2131:   # Write the rule to load dependencies.  We batch 1000 files at a time to",
          "2134:   for i in range(1001, num_outputs, 1000):",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2142:   ifneq ($(word %(last)d,$(d_files)),)",
          "2143:     $(error Found unprocessed dependency files (gyp didn't generate enough rules!))",
          "2144:   endif",
          "2147:   root_makefile.write(SHARED_FOOTER % { 'generate_all_deps': all_deps })",
          "",
          "[Removed Lines]",
          "2145: \"\"\" % { 'last': ((num_outputs / 1000) + 1) * 1000 + 1 }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "916832cd2c46edc498c3f71d0031cfa23a79f5c4",
      "candidate_info": {
        "commit_hash": "916832cd2c46edc498c3f71d0031cfa23a79f5c4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/916832cd2c46edc498c3f71d0031cfa23a79f5c4",
        "files": [
          "test/simple/test-domain-timers.js"
        ],
        "message": "test: fix function name typo\n\nIt doesn't affect the semantics of the test because it checks if that\nparticular bit of code throws an exception. It does, only it's a SyntaxError.",
        "before_after_code_files": [
          "test/simple/test-domain-timers.js||test/simple/test-domain-timers.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-domain-timers.js||test/simple/test-domain-timers.js": [
          "File: test/simple/test-domain-timers.js -> test/simple/test-domain-timers.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: });",
          "47: immediated.run(function() {",
          "49:     throw new Error('Immediate Error');",
          "50:   });",
          "51: });",
          "",
          "[Removed Lines]",
          "48:   setImmedaite(function() {",
          "",
          "[Added Lines]",
          "48:   setImmediate(function() {",
          "",
          "---------------"
        ]
      }
    }
  ]
}