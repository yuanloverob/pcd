{
  "cve_id": "CVE-2019-19603",
  "cve_desc": "SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW, leading to an application crash.",
  "repo": "sqlite/sqlite",
  "patch_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
  "patch_info": {
    "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab.test"
    ],
    "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab.test||test/altertab.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "856:       }",
      "857:     }",
      "858:   }else{",
      "861:     ){",
      "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
      "863:                       zName);",
      "864:       return SQLITE_ERROR;",
      "865:     }",
      "866:   }",
      "867:   return SQLITE_OK;",
      "868: }",
      "",
      "[Removed Lines]",
      "859:     if( pParse->nested==0",
      "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
      "",
      "[Added Lines]",
      "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
      "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
      "",
      "[Added Lines]",
      "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
      "2148:   return pMod->pModule->xShadowName(zTail+1);",
      "2149: }",
      "",
      "[Removed Lines]",
      "2150: #else",
      "2151: # define isShadowTableName(x,y) 0",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2190:   p = pParse->pNewTable;",
      "2191:   if( p==0 ) return;",
      "2194:     p->tabFlags |= TF_Shadow;",
      "2195:   }",
      "",
      "[Removed Lines]",
      "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
      "",
      "[Added Lines]",
      "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
      "4549: #endif",
      "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
      "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
      "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
      "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
      "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
      "4553: #else",
      "4554: # define sqlite3ShadowTableName(A,B) 0",
      "4555: #endif",
      "",
      "---------------"
    ],
    "test/altertab.test||test/altertab.test": [
      "File: test/altertab.test -> test/altertab.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "547:   } {1 {table y1_segments may not be modified}}",
      "549:   do_catchsql_test 16.20 {",
      "554:     DROP TABLE y1_segments;",
      "555:   } {1 {table y1_segments may not be dropped}}",
      "557:   do_execsql_test 16.30 {",
      "558:     ALTER TABLE y1 RENAME TO z1;",
      "559:   }",
      "",
      "[Removed Lines]",
      "550:     ALTER TABLE y1_segments RENAME TO abc;",
      "551:   } {1 {table y1_segments may not be altered}}",
      "553:   do_catchsql_test 16.21 {",
      "",
      "[Added Lines]",
      "553:   do_catchsql_test 16.20 {",
      "554:     ALTER TABLE y1_segments RENAME TO abc;",
      "555:   } {1 {table y1_segments may not be altered}}",
      "556:   sqlite3_db_config db DEFENSIVE 0",
      "557:   do_catchsql_test 16.22 {",
      "558:     ALTER TABLE y1_segments RENAME TO abc;",
      "559:   } {0 {}}",
      "560:   sqlite3_db_config db DEFENSIVE 1",
      "561:   do_catchsql_test 16.23 {",
      "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
      "563:   } {1 {object name reserved for internal use: y1_segments}}",
      "564:   do_catchsql_test 16.24 {",
      "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
      "566:   } {1 {object name reserved for internal use: y1_segments}}",
      "567:   sqlite3_db_config db DEFENSIVE 0",
      "568:   do_catchsql_test 16.25 {",
      "569:     ALTER TABLE abc RENAME TO y1_segments;",
      "570:   } {0 {}}",
      "571:   sqlite3_db_config db DEFENSIVE 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f9c7c4b1f25fa5692d2a5154ed3f148021189c1f",
      "candidate_info": {
        "commit_hash": "f9c7c4b1f25fa5692d2a5154ed3f148021189c1f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f9c7c4b1f25fa5692d2a5154ed3f148021189c1f",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "In the CLI, add a small delay (0.1 seconds) after launching the output command for \".once\" before deleting the temporary file.\n\nFossilOrigin-Name: 4979f138e8c8bef7dd6b5921fb9ca9fea86bbf7ec1419934bb2d1a0d74e77183",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 873aa46da3d0f97784cad94828fc367bb2ceb13d5ece2e105320f404b3971c85",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "4849:       sqlite3_free(zCmd);",
          "4850:       outputModePop(p);",
          "4851:       p->doXdgOpen = 0;",
          "4852:     }",
          "4854:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4852:       sqlite3_sleep(100);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39b30a7d6bfcf46cd24688006b1106c6ea313da2",
      "candidate_info": {
        "commit_hash": "39b30a7d6bfcf46cd24688006b1106c6ea313da2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/39b30a7d6bfcf46cd24688006b1106c6ea313da2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/delete.c",
          "test/index6.test"
        ],
        "message": "In sqlite3GenerateIndexKey(), do not attempt to reuse column values from the previous index if the current index is a partial index as the partial index test may have corrupted those values.  Ticket [a9efb42811fa41ee]\n\nFossilOrigin-Name: 17e9f65814264de9c35bc5ba94e0a66fbbf1200c00d33ab9a19a0b6f92bc685a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/delete.c||src/delete.c",
          "test/index6.test||test/index6.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 28b8f1036d569bccce56b4e7042348024b5dd1ffa04850cbeddab1e35c49e5b7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/delete.c||src/delete.c": [
          "File: src/delete.c -> src/delete.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "918:       sqlite3ExprIfFalseDup(pParse, pIdx->pPartIdxWhere, *piPartIdxLabel,",
          "919:                             SQLITE_JUMPIFNULL);",
          "920:       pParse->iSelfTab = 0;",
          "921:     }else{",
          "923:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "921:       pPrior = 0; /* Ticket a9efb42811fa41ee 2019-11-02;",
          "",
          "---------------"
        ],
        "test/index6.test||test/index6.test": [
          "File: test/index6.test -> test/index6.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "478:   SELECT 3 FROM t0 WHERE c1 <= c0;",
          "479: } {3}",
          "484: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "481: # 2019-11-02",
          "482: # Ticket https://sqlite.org/src/tktview/a9efb42811fa41ee286e8",
          "483: db close",
          "484: sqlite3 db :memory:",
          "485: do_execsql_test index6-17.1 {",
          "486:   CREATE TABLE t0(c0);",
          "487:   CREATE INDEX i0 ON t0(0) WHERE c0 GLOB c0;",
          "488:   INSERT INTO t0 VALUES (0);",
          "489:   CREATE UNIQUE INDEX i1 ON t0(0);",
          "490:   PRAGMA integrity_check;",
          "491: } {ok}",
          "492: do_execsql_test index6-17.2 {",
          "493:   CREATE UNIQUE INDEX i2 ON t0(0);",
          "494:   REPLACE INTO t0 VALUES(0);",
          "495:   PRAGMA integrity_check;",
          "496: } {ok}",
          "497: do_execsql_test index6-17.3 {",
          "498:   SELECT COUNT(*) FROM t0 WHERE t0.c0 GLOB t0.c0;",
          "499: } {1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3fda0aaf00198e05cfbccc6cb8b9fd1827b5343e",
      "candidate_info": {
        "commit_hash": "3fda0aaf00198e05cfbccc6cb8b9fd1827b5343e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3fda0aaf00198e05cfbccc6cb8b9fd1827b5343e",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/mkkeywordhash.c"
        ],
        "message": "Put the list of keywords in mkkeywordhash.c into alphabetical order.\n\nFossilOrigin-Name: ac98b23b34632fbc654a34a8b3d842ce65603e4c04d89c589b46f4d48a61152d",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/mkkeywordhash.c||tool/mkkeywordhash.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f7ba2daf91c96ba16958188d6084a0ff129310d348932de493d326f1d24679cd",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/mkkeywordhash.c||tool/mkkeywordhash.c": [
          "File: tool/mkkeywordhash.c -> tool/mkkeywordhash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "293:   { \"VALUES\",           \"TK_VALUES\",       ALWAYS                 },",
          "294:   { \"VIEW\",             \"TK_VIEW\",         VIEW                   },",
          "295:   { \"VIRTUAL\",          \"TK_VIRTUAL\",      VTAB                   },",
          "296:   { \"WINDOW\",           \"TK_WINDOW\",       WINDOWFUNC             },",
          "297:   { \"WITH\",             \"TK_WITH\",         CTE                    },",
          "298:   { \"WITHOUT\",          \"TK_WITHOUT\",      ALWAYS                 },",
          "301: };",
          "",
          "[Removed Lines]",
          "299:   { \"WHEN\",             \"TK_WHEN\",         ALWAYS                 },",
          "300:   { \"WHERE\",            \"TK_WHERE\",        ALWAYS                 },",
          "",
          "[Added Lines]",
          "296:   { \"WHEN\",             \"TK_WHEN\",         ALWAYS                 },",
          "297:   { \"WHERE\",            \"TK_WHERE\",        ALWAYS                 },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0e3c50c5dc156fd5f05d7284510c5905494f04db",
      "candidate_info": {
        "commit_hash": "0e3c50c5dc156fd5f05d7284510c5905494f04db",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/0e3c50c5dc156fd5f05d7284510c5905494f04db",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/window9.test"
        ],
        "message": "Eliminate some more cases of redundant sorting in window-function queries.\n\nFossilOrigin-Name: 8158d2aca68c5a253054376fdf1b8eaab2db874f4b93524742be7340e9c50dd5",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/window9.test||test/window9.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 193c87fc96f964984a144c1a4506ef9db033ab2b80e64dd4d09d820fef466407",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "935:     pSort = sqlite3ExprListDup(db, pMWin->pPartition, 0);",
          "936:     pSort = exprListAppendList(pParse, pSort, pMWin->pOrderBy, 1);",
          "938:       if( sqlite3ExprListCompare(pSort, p->pOrderBy, -1)==0 ){",
          "939:         sqlite3ExprListDelete(db, p->pOrderBy);",
          "940:         p->pOrderBy = 0;",
          "941:       }",
          "942:     }",
          "",
          "[Removed Lines]",
          "937:     if( pSort && p->pOrderBy ){",
          "",
          "[Added Lines]",
          "937:     if( pSort && p->pOrderBy && p->pOrderBy->nExpr<=pSort->nExpr ){",
          "938:       int nSave = pSort->nExpr;",
          "939:       pSort->nExpr = p->pOrderBy->nExpr;",
          "944:       pSort->nExpr = nSave;",
          "",
          "---------------"
        ],
        "test/window9.test||test/window9.test": [
          "File: test/window9.test -> test/window9.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:   SELECT b, b=count(*), group_concat(b) OVER () FROM t1 GROUP BY b;",
          "146: } {1 0 1,2 2 1 1,2}",
          "150: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148: #--------------------------------------------------------------------------",
          "149: reset_db",
          "150: do_execsql_test 5.0 {",
          "151:   CREATE TABLE t1(a, b, c, d, e);",
          "152:   CREATE INDEX i1 ON t1(a, b, c, d, e);",
          "153: }",
          "155: foreach {tn sql} {",
          "156:   1 {",
          "157:     SELECT",
          "158:       sum(e) OVER (),",
          "159:       sum(e) OVER (ORDER BY a),",
          "160:       sum(e) OVER (PARTITION BY a ORDER BY b),",
          "161:       sum(e) OVER (PARTITION BY a, b ORDER BY c),",
          "162:       sum(e) OVER (PARTITION BY a, b, c ORDER BY d)",
          "163:     FROM t1;",
          "164:   }",
          "165:   2 {",
          "166:     SELECT sum(e) OVER (PARTITION BY a ORDER BY b) FROM t1 ORDER BY a;",
          "167:   }",
          "168: } {",
          "169:   do_test 5.1.$tn {",
          "170:     execsql \"EXPLAIN QUERY PLAN $sql\"",
          "171:   } {~/ORDER/}",
          "172: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "57b1a3e30309c1b5f96aa1308722ac1dc3a5a29e",
      "candidate_info": {
        "commit_hash": "57b1a3e30309c1b5f96aa1308722ac1dc3a5a29e",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/57b1a3e30309c1b5f96aa1308722ac1dc3a5a29e",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/sqlite.h.in",
          "src/test_func.c",
          "src/vdbe.c",
          "src/vdbeInt.h",
          "src/vdbeapi.c",
          "test/func.test"
        ],
        "message": "Initial implementation of the sqlite3_value_frombind() interface.\n\nFossilOrigin-Name: 98da62dfdacc6b3c490c387d1f8a74cc5daa978776967e264ad4800c380b0ddf",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/sqlite.h.in||src/sqlite.h.in",
          "src/test_func.c||src/test_func.c",
          "src/vdbe.c||src/vdbe.c",
          "src/vdbeInt.h||src/vdbeInt.h",
          "src/vdbeapi.c||src/vdbeapi.c",
          "test/func.test||test/func.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 965cbcea117835d2c6d2ec58c8025b227f491c35805e282cb31228436bc6bec1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqlite.h.in||src/sqlite.h.in": [
          "File: src/sqlite.h.in -> src/sqlite.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "5085: int sqlite3_value_type(sqlite3_value*);",
          "5086: int sqlite3_value_numeric_type(sqlite3_value*);",
          "5087: int sqlite3_value_nochange(sqlite3_value*);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5095: int sqlite3_value_frombind(sqlite3_value*);",
          "",
          "---------------"
        ],
        "src/test_func.c||src/test_func.c": [
          "File: src/test_func.c -> src/test_func.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "630:   sqlite3_result_int(context, (int)sqlite3_value_subtype(argv[0]));",
          "631: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "638: static void test_frombind(",
          "639:   sqlite3_context *context,",
          "640:   int argc,",
          "641:   sqlite3_value **argv",
          "642: ){",
          "643:   sqlite3_uint64 m = 0;",
          "644:   int i;",
          "645:   for(i=0; i<argc && i<63; i++){",
          "646:     if( sqlite3_value_frombind(argv[i]) ) m |= ((sqlite3_uint64)1)<<i;",
          "647:   }",
          "648:   sqlite3_result_int64(context, (sqlite3_int64)m);",
          "649: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "675:     { \"test_zeroblob\",  1, SQLITE_UTF8|SQLITE_DETERMINISTIC, test_zeroblob},",
          "676:     { \"test_getsubtype\",       1, SQLITE_UTF8, test_getsubtype},",
          "677:     { \"test_setsubtype\",       2, SQLITE_UTF8, test_setsubtype},",
          "678:   };",
          "679:   int i;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "696:     { \"test_frombind\",        -1, SQLITE_UTF8, test_frombind},",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1237:   }",
          "1238:   pOut = &aMem[pOp->p2];",
          "1239:   sqlite3VdbeMemShallowCopy(pOut, pVar, MEM_Static);",
          "1240:   UPDATE_MAX_BLOBSIZE(pOut);",
          "1241:   break;",
          "1242: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1240:   pOut->flags |= MEM_FromBind;",
          "",
          "---------------"
        ],
        "src/vdbeInt.h||src/vdbeInt.h": [
          "File: src/vdbeInt.h -> src/vdbeInt.h"
        ],
        "src/vdbeapi.c||src/vdbeapi.c": [
          "File: src/vdbeapi.c -> src/vdbeapi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "275:   return (pVal->flags&(MEM_Null|MEM_Zero))==(MEM_Null|MEM_Zero);",
          "276: }",
          "280: sqlite3_value *sqlite3_value_dup(const sqlite3_value *pOrig){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "279: int sqlite3_value_frombind(sqlite3_value *pVal){",
          "280:   return (pVal->flags&MEM_FromBind)!=0;",
          "281: }",
          "",
          "---------------"
        ],
        "test/func.test||test/func.test": [
          "File: test/func.test -> test/func.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1391: do_execsql_test func-31.1 {",
          "1392:   SELECT char(), length(char()), typeof(char())",
          "1393: } {{} 0 text}",
          "1394: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1395: # sqlite3_value_frombind()",
          "1396: #",
          "1397: do_execsql_test func-32.100 {",
          "1398:   SELECT test_frombind(1,2,3,4);",
          "1399: } {0}",
          "1400: do_execsql_test func-32.110 {",
          "1401:   SELECT test_frombind(1,2,?,4);",
          "1402: } {4}",
          "1403: do_execsql_test func-32.120 {",
          "1404:   SELECT test_frombind(1,(?),4,?+7);",
          "1405: } {2}",
          "1406: do_execsql_test func-32.130 {",
          "1407:   DROP TABLE IF EXISTS t1;",
          "1408:   CREATE TABLE t1(a,b,c,e,f);",
          "1409:   INSERT INTO t1 VALUES(1,2.5,'xyz',x'e0c1b2a3',null);",
          "1410:   SELECT test_frombind(a,b,c,e,f,$xyz) FROM t1;",
          "1411: } {32}",
          "1412: do_execsql_test func-32.140 {",
          "1413:   SELECT test_frombind(a,b,c,e,f,$xyz+f) FROM t1;",
          "1414: } {0}",
          "1415: do_execsql_test func-32.150 {",
          "1416:   SELECT test_frombind(x.a,y.b,x.c,:123,y.e,x.f,$xyz+y.f) FROM t1 x, t1 y;",
          "1417: } {8}",
          "",
          "---------------"
        ]
      }
    }
  ]
}