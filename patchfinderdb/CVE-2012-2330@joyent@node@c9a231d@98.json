{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "43ff46becfd3b16869b20c3aa9ffabb8b45fb043",
      "candidate_info": {
        "commit_hash": "43ff46becfd3b16869b20c3aa9ffabb8b45fb043",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/43ff46becfd3b16869b20c3aa9ffabb8b45fb043",
        "files": [
          "deps/v8/build/common.gypi"
        ],
        "message": "v8: Floating patches",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "336:             'cflags': [ '-I/usr/pkg/include' ],",
          "337:           }],",
          "338:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "340:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "341:           }],",
          "342:         ],",
          "",
          "[Removed Lines]",
          "339:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "339:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "debf552ed2d4a53957446e82ff3c52a8182d5ff4",
      "candidate_info": {
        "commit_hash": "debf552ed2d4a53957446e82ff3c52a8182d5ff4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/debf552ed2d4a53957446e82ff3c52a8182d5ff4",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "src/node_version.h"
        ],
        "message": "2012.06.06 Version 0.6.19 (stable)\n\n* npm: upgrade to 1.1.24\n\n* fs: no end emit after createReadStream.pause() (Andreas Madsen)\n\n* vm: cleanup module memory leakage (Marcel Laverdet)\n\n* unix: fix loop starvation under high network load (Ben Noordhuis)\n\n* unix: remove abort() in ev_unref() (Ben Noordhuis)\n\n* windows/tty: never report error after forcibly aborting line-buffered read (Bert Belder)\n\n* windows: skip GetFileAttributes call when opening a file (Bert Belder)",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 6",
          "31: #define NODE_PATCH_VERSION 19",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67705555514d6f40fbb9a989c400f824f764e5f7",
      "candidate_info": {
        "commit_hash": "67705555514d6f40fbb9a989c400f824f764e5f7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/67705555514d6f40fbb9a989c400f824f764e5f7",
        "files": [
          "test/pummel/test-net-throttle.js"
        ],
        "message": "test: raise pummel/test-net-throttle write req size\n\npummel/test-net-throttle assumes that a couple of big write requests result in\nsome of them getting queued because the kernel's send buffer fills up.\n\nSaid assumption breaks on systems with large send buffers. Raise the size of\nthe write request to ameliorate the issue.",
        "before_after_code_files": [
          "test/pummel/test-net-throttle.js||test/pummel/test-net-throttle.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/pummel/test-net-throttle.js||test/pummel/test-net-throttle.js": [
          "File: test/pummel/test-net-throttle.js -> test/pummel/test-net-throttle.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: var assert = require('assert');",
          "27: var net = require('net');",
          "30: var part_N = N / 3;",
          "31: var chars_recved = 0;",
          "32: var npauses = 0;",
          "",
          "[Removed Lines]",
          "29: var N = 160 * 1024;",
          "",
          "[Added Lines]",
          "29: var N = 1024 * 1024;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1c1ad9bcf440e137d5d09e5a188653ad136c1a5f",
      "candidate_info": {
        "commit_hash": "1c1ad9bcf440e137d5d09e5a188653ad136c1a5f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1c1ad9bcf440e137d5d09e5a188653ad136c1a5f",
        "files": [
          "deps/v8/build/common.gypi"
        ],
        "message": "v8: reapply floating patches",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:           'WIN32',",
          "240:         ],",
          "241:         'msvs_configuration_attributes': {",
          "243:           'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "244:           'CharacterSet': '1',",
          "245:         },",
          "",
          "[Removed Lines]",
          "242:           'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "271:         'target_conditions': [",
          "272:           ['_toolset==\"host\"', {",
          "273:             'variables': {",
          "275:             },",
          "276:             'cflags': [ '<(m32flag)' ],",
          "277:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "274:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "273:               'm32flag': '<!((echo | $(echo ${CXX_host:-$(which g++)}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "281:           }],",
          "282:           ['_toolset==\"target\"', {",
          "283:             'variables': {",
          "285:             },",
          "286:             'cflags': [ '<(m32flag)' ],",
          "287:             'ldflags': [ '<(m32flag)' ],",
          "",
          "[Removed Lines]",
          "284:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo -n \"-m32\" || true)',",
          "",
          "[Added Lines]",
          "283:               'm32flag': '<!((echo | $(echo ${CXX_target:-${CXX:-$(which g++)}}) -m32 -E - > /dev/null 2>&1) && echo \"-m32\" || true)',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "324:         },",
          "325:         'conditions': [",
          "326:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "328:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "329:           }],",
          "330:         ],",
          "",
          "[Removed Lines]",
          "327:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "326:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "08032efed00bb798cb9e1b4aaa0b626fc87d78cc",
      "candidate_info": {
        "commit_hash": "08032efed00bb798cb9e1b4aaa0b626fc87d78cc",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/08032efed00bb798cb9e1b4aaa0b626fc87d78cc",
        "files": [
          "node.gyp",
          "src/slab_allocator.cc",
          "src/slab_allocator.h"
        ],
        "message": "core: add reusable slab allocator",
        "before_after_code_files": [
          "node.gyp||node.gyp",
          "src/slab_allocator.cc||src/slab_allocator.cc",
          "src/slab_allocator.h||src/slab_allocator.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:         'src/node_zlib.cc',",
          "85:         'src/pipe_wrap.cc',",
          "86:         'src/stream_wrap.cc',",
          "87:         'src/tcp_wrap.cc',",
          "88:         'src/timer_wrap.cc',",
          "89:         'src/tty_wrap.cc',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:         'src/slab_allocator.cc',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:         'src/node_version.h',",
          "108:         'src/pipe_wrap.h',",
          "109:         'src/req_wrap.h',",
          "110:         'src/stream_wrap.h',",
          "111:         'src/v8_typed_array.h',",
          "112:         'deps/http_parser/http_parser.h',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:         'src/slab_allocator.h',",
          "",
          "---------------"
        ],
        "src/slab_allocator.cc||src/slab_allocator.cc": [
          "File: src/slab_allocator.cc -> src/slab_allocator.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"v8.h\"",
          "23: #include \"node.h\"",
          "24: #include \"node_buffer.h\"",
          "25: #include \"slab_allocator.h\"",
          "26: #include <stdio.h>",
          "27: #include <stdlib.h>",
          "28: #include <assert.h>",
          "31: using v8::Handle;",
          "32: using v8::HandleScope;",
          "33: using v8::Integer;",
          "34: using v8::Local;",
          "35: using v8::Null;",
          "36: using v8::Object;",
          "37: using v8::Persistent;",
          "38: using v8::String;",
          "39: using v8::Value;",
          "42: namespace node {",
          "44: SlabAllocator::SlabAllocator(unsigned int size) {",
          "45:   size_ = ROUND_UP(size ? size : 1, 8192);",
          "46:   initialized_ = false;",
          "47: }",
          "50: SlabAllocator::~SlabAllocator() {",
          "51:   if (!initialized_) return;",
          "52:   slab_sym_.Clear();",
          "53:   slab_sym_.Dispose();",
          "54:   slab_.Clear();",
          "55:   slab_.Dispose();",
          "56: }",
          "59: void SlabAllocator::Initialize() {",
          "60:   HandleScope scope;",
          "61:   char sym[256];",
          "62:   snprintf(sym, sizeof(sym), \"slab_%p\", this); // namespace object key",
          "63:   offset_ = 0;",
          "64:   last_ptr_ = NULL;",
          "65:   initialized_ = true;",
          "66:   slab_sym_ = Persistent<String>::New(String::New(sym));",
          "67: }",
          "70: static Local<Object> NewSlab(unsigned int size) {",
          "71:   HandleScope scope;",
          "72:   Local<Value> arg = Integer::NewFromUnsigned(ROUND_UP(size, 16));",
          "73:   Local<Object> buf = Buffer::constructor_template",
          "74:                       ->GetFunction()",
          "75:                       ->NewInstance(1, &arg);",
          "76:   return scope.Close(buf);",
          "77: }",
          "80: char* SlabAllocator::Allocate(Handle<Object> obj, unsigned int size) {",
          "81:   HandleScope scope;",
          "83:   assert(!obj.IsEmpty());",
          "85:   if (size == 0) return NULL;",
          "86:   if (!initialized_) Initialize();",
          "88:   if (size > size_) {",
          "89:     Local<Object> buf = NewSlab(size);",
          "90:     obj->SetHiddenValue(slab_sym_, buf);",
          "91:     return Buffer::Data(buf);",
          "92:   }",
          "94:   if (slab_.IsEmpty() || offset_ + size > size_) {",
          "95:     slab_.Clear();",
          "96:     slab_.Dispose();",
          "97:     slab_ = Persistent<Object>::New(NewSlab(size_));",
          "98:     offset_ = 0;",
          "99:     last_ptr_ = NULL;",
          "100:   }",
          "102:   obj->SetHiddenValue(slab_sym_, slab_);",
          "103:   last_ptr_ = Buffer::Data(slab_) + offset_;",
          "104:   offset_ += size;",
          "106:   return last_ptr_;",
          "107: }",
          "110: Local<Object> SlabAllocator::Shrink(Handle<Object> obj,",
          "111:                                     char* ptr,",
          "112:                                     unsigned int size) {",
          "113:   HandleScope scope;",
          "114:   Local<Value> slab_v = obj->GetHiddenValue(slab_sym_);",
          "115:   obj->SetHiddenValue(slab_sym_, Null());",
          "116:   assert(!slab_v.IsEmpty());",
          "117:   assert(slab_v->IsObject());",
          "118:   Local<Object> slab = slab_v->ToObject();",
          "119:   if (ptr && ptr == last_ptr_) {",
          "120:     last_ptr_ = NULL;",
          "121:     offset_ = ptr - Buffer::Data(slab) + ROUND_UP(size, 16);",
          "122:   }",
          "123:   return scope.Close(slab);",
          "124: }",
          "127: } // namespace node",
          "",
          "---------------"
        ],
        "src/slab_allocator.h||src/slab_allocator.h": [
          "File: src/slab_allocator.h -> src/slab_allocator.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"v8.h\"",
          "24: namespace node {",
          "26: class SlabAllocator {",
          "27: public:",
          "28:   SlabAllocator(unsigned int size = 10485760); // default to 10M",
          "29:   ~SlabAllocator();",
          "32:   char* Allocate(v8::Handle<v8::Object> obj, unsigned int size);",
          "35:   v8::Local<v8::Object> Shrink(v8::Handle<v8::Object> obj,",
          "36:                                char* ptr,",
          "37:                                unsigned int size);",
          "39: private:",
          "40:   void Initialize();",
          "41:   bool initialized_;",
          "42:   v8::Persistent<v8::Object> slab_;",
          "43:   v8::Persistent<v8::String> slab_sym_;",
          "44:   unsigned int offset_;",
          "45:   unsigned int size_;",
          "46:   char* last_ptr_;",
          "47: };",
          "49: } // namespace node",
          "",
          "---------------"
        ]
      }
    }
  ]
}