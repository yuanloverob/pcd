{
  "cve_id": "CVE-2015-0562",
  "cve_desc": "Multiple use-after-free vulnerabilities in epan/dissectors/packet-dec-dnart.c in the DEC DNA Routing Protocol dissector in Wireshark 1.10.x before 1.10.12 and 1.12.x before 1.12.3 allow remote attackers to cause a denial of service (application crash) via a crafted packet, related to the use of packet-scope memory instead of pinfo-scope memory.",
  "repo": "wireshark/wireshark",
  "patch_hash": "a559f2a050947f793c00159c0cd4d30f403f217c",
  "patch_info": {
    "commit_hash": "a559f2a050947f793c00159c0cd4d30f403f217c",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/a559f2a050947f793c00159c0cd4d30f403f217c",
    "files": [
      "epan/dissectors/packet-dec-dnart.c"
    ],
    "message": "dec-dnart: use pinfo-scoped memory for addresses\n\nThey may be accessed during the print phase, at which point packet-scope memory\nhas already been freed.\n\nBug: 10724\nChange-Id: Ifcf5fc0c0857614edf85349b12dfe605abf6fef7\nReviewed-on: https://code.wireshark.org/review/5497\nReviewed-by: Evan Huus <eapache@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c": [
      "File: epan/dissectors/packet-dec-dnart.c -> epan/dissectors/packet-dec-dnart.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350: }",
      "352: static void",
      "354: {",
      "355:     if (paddr_tgt->type != AT_STRINGZ && paddr_src->type == AT_ETHER) {",
      "356:         char *addr = dnet_ntoa((const guint8 *)paddr_src->data);",
      "357:         if (addr != NULL)",
      "359:     }",
      "360: }",
      "",
      "[Removed Lines]",
      "353: set_dnet_address(address *paddr_src, address *paddr_tgt)",
      "358:             SET_ADDRESS(paddr_tgt, AT_STRINGZ, 1, addr);",
      "",
      "[Added Lines]",
      "353: set_dnet_address(packet_info *pinfo, address *paddr_src, address *paddr_tgt)",
      "358:             SET_ADDRESS(paddr_tgt, AT_STRINGZ, 1,",
      "359:                     wmem_strdup(pinfo->pool, addr));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "376:     col_set_str(pinfo->cinfo, COL_PROTOCOL, \"DEC DNA\");",
      "377:     col_clear(pinfo->cinfo, COL_INFO);",
      "384:     offset += 2;",
      "385:     msg_flags = tvb_get_guint8(tvb, offset);",
      "",
      "[Removed Lines]",
      "379:     set_dnet_address(&pinfo->dl_src, &pinfo->net_src);",
      "380:     set_dnet_address(&pinfo->dl_src, &pinfo->src);",
      "381:     set_dnet_address(&pinfo->dl_dst, &pinfo->net_dst);",
      "382:     set_dnet_address(&pinfo->dl_dst, &pinfo->dst);",
      "",
      "[Added Lines]",
      "380:     set_dnet_address(pinfo, &pinfo->dl_src, &pinfo->net_src);",
      "381:     set_dnet_address(pinfo, &pinfo->dl_src, &pinfo->src);",
      "382:     set_dnet_address(pinfo, &pinfo->dl_dst, &pinfo->net_dst);",
      "383:     set_dnet_address(pinfo, &pinfo->dl_dst, &pinfo->dst);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1bc3b8adb2ef850a0b90542bfac5f4b90f051e92",
      "candidate_info": {
        "commit_hash": "1bc3b8adb2ef850a0b90542bfac5f4b90f051e92",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1bc3b8adb2ef850a0b90542bfac5f4b90f051e92",
        "files": [
          "epan/dissectors/packet-dec-dnart.c"
        ],
        "message": "dec-dnart: use pinfo-scoped memory for addresses\n\nThey may be accessed during the print phase, at which point packet-scope memory\nhas already been freed.\n\nBug: 10724\nChange-Id: Ifcf5fc0c0857614edf85349b12dfe605abf6fef7\nReviewed-on: https://code.wireshark.org/review/5498\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 8ae9b5363ef210813767bb0cf3af2603092f914c)\nReviewed-on: https://code.wireshark.org/review/6427",
        "before_after_code_files": [
          "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c": [
          "File: epan/dissectors/packet-dec-dnart.c -> epan/dissectors/packet-dec-dnart.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350: }",
          "352: static void",
          "354: {",
          "355:     if (paddr_tgt->type != AT_STRINGZ && paddr_src->type == AT_ETHER) {",
          "356:         char *addr = dnet_ntoa((const guint8 *)paddr_src->data);",
          "357:         if (addr != NULL)",
          "359:     }",
          "360: }",
          "",
          "[Removed Lines]",
          "353: set_dnet_address(address *paddr_src, address *paddr_tgt)",
          "358:             SET_ADDRESS(paddr_tgt, AT_STRINGZ, 1, addr);",
          "",
          "[Added Lines]",
          "353: set_dnet_address(packet_info *pinfo, address *paddr_src, address *paddr_tgt)",
          "358:             SET_ADDRESS(paddr_tgt, AT_STRINGZ, 1,",
          "359:                     wmem_strdup(pinfo->pool, addr));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "376:     col_set_str(pinfo->cinfo, COL_PROTOCOL, \"DEC DNA\");",
          "377:     col_clear(pinfo->cinfo, COL_INFO);",
          "384:     offset += 2;",
          "385:     msg_flags = tvb_get_guint8(tvb, offset);",
          "",
          "[Removed Lines]",
          "379:     set_dnet_address(&pinfo->dl_src, &pinfo->net_src);",
          "380:     set_dnet_address(&pinfo->dl_src, &pinfo->src);",
          "381:     set_dnet_address(&pinfo->dl_dst, &pinfo->net_dst);",
          "382:     set_dnet_address(&pinfo->dl_dst, &pinfo->dst);",
          "",
          "[Added Lines]",
          "380:     set_dnet_address(pinfo, &pinfo->dl_src, &pinfo->net_src);",
          "381:     set_dnet_address(pinfo, &pinfo->dl_src, &pinfo->src);",
          "382:     set_dnet_address(pinfo, &pinfo->dl_dst, &pinfo->net_dst);",
          "383:     set_dnet_address(pinfo, &pinfo->dl_dst, &pinfo->dst);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acd589f115d77b9156975d4f1552c3b14e4fcaf0",
      "candidate_info": {
        "commit_hash": "acd589f115d77b9156975d4f1552c3b14e4fcaf0",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/acd589f115d77b9156975d4f1552c3b14e4fcaf0",
        "files": [
          "epan/dissectors/packet-dec-dnart.c"
        ],
        "message": "dec-dnart: use pinfo-scoped memory for addresses\n\nThey may be accessed during the print phase, at which point packet-scope memory\nhas already been freed.\n\nIn the back-ported fix we use capture-lifetime memory.\n\nBug: 10724\nChange-Id: Ifcf5fc0c0857614edf85349b12dfe605abf6fef7\nReviewed-on: https://code.wireshark.org/review/5499\nReviewed-by: Michael Mann <mmann78@netscape.net>\nReviewed-on: https://code.wireshark.org/review/6432",
        "before_after_code_files": [
          "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c": [
          "File: epan/dissectors/packet-dec-dnart.c -> epan/dissectors/packet-dec-dnart.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "356:     if (paddr_tgt->type != AT_STRINGZ && paddr_src->type == AT_ETHER) {",
          "357:         char *addr = dnet_ntoa(paddr_src->data);",
          "358:         if (addr != NULL)",
          "360:     }",
          "361: }",
          "",
          "[Removed Lines]",
          "359:             SET_ADDRESS(paddr_tgt, AT_STRINGZ, 1, addr);",
          "",
          "[Added Lines]",
          "359:             SET_ADDRESS(paddr_tgt, AT_STRINGZ, 1,",
          "360:                     se_strdup(addr));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8ae9b5363ef210813767bb0cf3af2603092f914c",
      "candidate_info": {
        "commit_hash": "8ae9b5363ef210813767bb0cf3af2603092f914c",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/8ae9b5363ef210813767bb0cf3af2603092f914c",
        "files": [
          "epan/dissectors/packet-dec-dnart.c"
        ],
        "message": "dec-dnart: use pinfo-scoped memory for addresses\n\nThey may be accessed during the print phase, at which point packet-scope memory\nhas already been freed.\n\nBug: 10724\nChange-Id: Ifcf5fc0c0857614edf85349b12dfe605abf6fef7\nReviewed-on: https://code.wireshark.org/review/5498\nReviewed-by: Michael Mann <mmann78@netscape.net>",
        "before_after_code_files": [
          "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c": [
          "File: epan/dissectors/packet-dec-dnart.c -> epan/dissectors/packet-dec-dnart.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350: }",
          "352: static void",
          "354: {",
          "355:     if (paddr_tgt->type != AT_STRINGZ && paddr_src->type == AT_ETHER) {",
          "356:         char *addr = dnet_ntoa((const guint8 *)paddr_src->data);",
          "357:         if (addr != NULL)",
          "359:     }",
          "360: }",
          "",
          "[Removed Lines]",
          "353: set_dnet_address(address *paddr_src, address *paddr_tgt)",
          "358:             SET_ADDRESS(paddr_tgt, AT_STRINGZ, 1, addr);",
          "",
          "[Added Lines]",
          "353: set_dnet_address(packet_info *pinfo, address *paddr_src, address *paddr_tgt)",
          "358:             SET_ADDRESS(paddr_tgt, AT_STRINGZ, 1,",
          "359:                     wmem_strdup(pinfo->pool, addr));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "376:     col_set_str(pinfo->cinfo, COL_PROTOCOL, \"DEC DNA\");",
          "377:     col_clear(pinfo->cinfo, COL_INFO);",
          "384:     offset += 2;",
          "385:     msg_flags = tvb_get_guint8(tvb, offset);",
          "",
          "[Removed Lines]",
          "379:     set_dnet_address(&pinfo->dl_src, &pinfo->net_src);",
          "380:     set_dnet_address(&pinfo->dl_src, &pinfo->src);",
          "381:     set_dnet_address(&pinfo->dl_dst, &pinfo->net_dst);",
          "382:     set_dnet_address(&pinfo->dl_dst, &pinfo->dst);",
          "",
          "[Added Lines]",
          "380:     set_dnet_address(pinfo, &pinfo->dl_src, &pinfo->net_src);",
          "381:     set_dnet_address(pinfo, &pinfo->dl_src, &pinfo->src);",
          "382:     set_dnet_address(pinfo, &pinfo->dl_dst, &pinfo->net_dst);",
          "383:     set_dnet_address(pinfo, &pinfo->dl_dst, &pinfo->dst);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "336ccc11bbf25a56abc10f6c1ba3f1322cbd0add",
      "candidate_info": {
        "commit_hash": "336ccc11bbf25a56abc10f6c1ba3f1322cbd0add",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/336ccc11bbf25a56abc10f6c1ba3f1322cbd0add",
        "files": [
          "epan/dissectors/packet-dec-dnart.c"
        ],
        "message": "dec-dnart: use pinfo-scoped memory for addresses\n\nThey may be accessed during the print phase, at which point packet-scope memory\nhas already been freed.\n\nBug: 10724\nChange-Id: Ifcf5fc0c0857614edf85349b12dfe605abf6fef7\nReviewed-on: https://code.wireshark.org/review/5499\nReviewed-by: Michael Mann <mmann78@netscape.net>",
        "before_after_code_files": [
          "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
          ],
          "candidate": [
            "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-dec-dnart.c||epan/dissectors/packet-dec-dnart.c": [
          "File: epan/dissectors/packet-dec-dnart.c -> epan/dissectors/packet-dec-dnart.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "352: }",
          "354: static void",
          "356: {",
          "357:     if (paddr_tgt->type != AT_STRINGZ && paddr_src->type == AT_ETHER) {",
          "358:         char *addr = dnet_ntoa((const guint8 *)paddr_src->data);",
          "359:         if (addr != NULL)",
          "361:     }",
          "362: }",
          "",
          "[Removed Lines]",
          "355: set_dnet_address(address *paddr_src, address *paddr_tgt)",
          "360:             SET_ADDRESS(paddr_tgt, AT_STRINGZ, 1, addr);",
          "",
          "[Added Lines]",
          "355: set_dnet_address(packet_info *pinfo, address *paddr_src, address *paddr_tgt)",
          "360:             SET_ADDRESS(paddr_tgt, AT_STRINGZ, 1,",
          "361:                     wmem_strdup(pinfo->pool, addr));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "378:     col_set_str(pinfo->cinfo, COL_PROTOCOL, \"DEC DNA\");",
          "379:     col_clear(pinfo->cinfo, COL_INFO);",
          "386:     offset += 2;",
          "387:     msg_flags = tvb_get_guint8(tvb, offset);",
          "",
          "[Removed Lines]",
          "381:     set_dnet_address(&pinfo->dl_src, &pinfo->net_src);",
          "382:     set_dnet_address(&pinfo->dl_src, &pinfo->src);",
          "383:     set_dnet_address(&pinfo->dl_dst, &pinfo->net_dst);",
          "384:     set_dnet_address(&pinfo->dl_dst, &pinfo->dst);",
          "",
          "[Added Lines]",
          "382:     set_dnet_address(pinfo, &pinfo->dl_src, &pinfo->net_src);",
          "383:     set_dnet_address(pinfo, &pinfo->dl_src, &pinfo->src);",
          "384:     set_dnet_address(pinfo, &pinfo->dl_dst, &pinfo->net_dst);",
          "385:     set_dnet_address(pinfo, &pinfo->dl_dst, &pinfo->dst);",
          "",
          "---------------"
        ]
      }
    }
  ]
}