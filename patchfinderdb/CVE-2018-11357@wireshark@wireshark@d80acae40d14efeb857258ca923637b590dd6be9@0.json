{
  "cve_id": "CVE-2018-11357",
  "cve_desc": "In Wireshark 2.6.0, 2.4.0 to 2.4.6, and 2.2.0 to 2.2.14, the LTP dissector and other dissectors could consume excessive memory. This was addressed in epan/tvbuff.c by rejecting negative lengths.",
  "repo": "wireshark/wireshark",
  "patch_hash": "d80acae40d14efeb857258ca923637b590dd6be9",
  "patch_info": {
    "commit_hash": "d80acae40d14efeb857258ca923637b590dd6be9",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/d80acae40d14efeb857258ca923637b590dd6be9",
    "files": [
      "epan/tvbuff.c"
    ],
    "message": "tvbuff: make tvb_bytes_exist fail with negative values\n\ntvb_generic_clone_offset_len uses tvb_bytes_exist to check that the\nrequested tvb data is actually available. It did not expect negative\nvalues, that would result in an overly large memory allocation.\n\nBug: 14678\nChange-Id: Ie80095a381e55ca5dbbd5c9d835243549d0b212e\nLink: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=7179\nReviewed-on: https://code.wireshark.org/review/27526\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/tvbuff.c||epan/tvbuff.c"
    ]
  },
  "patch_diff": {
    "epan/tvbuff.c||epan/tvbuff.c": [
      "File: epan/tvbuff.c -> epan/tvbuff.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "553:  DISSECTOR_ASSERT(tvb && tvb->initialized);",
      "555:  exception = check_offset_length_no_exception(tvb, offset, length, &abs_offset, &abs_length);",
      "556:  if (exception)",
      "557:   return FALSE;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "559:  if (length < 0)",
      "560:   return FALSE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ab8a33ef083b9732c89117747a83a905a676faf6",
      "candidate_info": {
        "commit_hash": "ab8a33ef083b9732c89117747a83a905a676faf6",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/ab8a33ef083b9732c89117747a83a905a676faf6",
        "files": [
          "epan/tvbuff.c"
        ],
        "message": "tvbuff: make tvb_bytes_exist fail with negative values\n\ntvb_generic_clone_offset_len uses tvb_bytes_exist to check that the\nrequested tvb data is actually available. It did not expect negative\nvalues, that would result in an overly large memory allocation.\n\nBug: 14678\nChange-Id: Ie80095a381e55ca5dbbd5c9d835243549d0b212e\nLink: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=7179\nReviewed-on: https://code.wireshark.org/review/27526\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit d80acae40d14efeb857258ca923637b590dd6be9)\nReviewed-on: https://code.wireshark.org/review/27535",
        "before_after_code_files": [
          "epan/tvbuff.c||epan/tvbuff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/tvbuff.c||epan/tvbuff.c"
          ],
          "candidate": [
            "epan/tvbuff.c||epan/tvbuff.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/tvbuff.c||epan/tvbuff.c": [
          "File: epan/tvbuff.c -> epan/tvbuff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "498:  DISSECTOR_ASSERT(tvb && tvb->initialized);",
          "500:  exception = check_offset_length_no_exception(tvb, offset, length, &abs_offset, &abs_length);",
          "501:  if (exception)",
          "502:   return FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "504:  if (length < 0)",
          "505:   return FALSE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b82a9a3f95f244dfbffa932b1b88de6e10157ad8",
      "candidate_info": {
        "commit_hash": "b82a9a3f95f244dfbffa932b1b88de6e10157ad8",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/b82a9a3f95f244dfbffa932b1b88de6e10157ad8",
        "files": [
          "epan/tvbuff.c"
        ],
        "message": "tvbuff: make tvb_bytes_exist fail with negative values\n\ntvb_generic_clone_offset_len uses tvb_bytes_exist to check that the\nrequested tvb data is actually available. It did not expect negative\nvalues, that would result in an overly large memory allocation.\n\nBug: 14678\nChange-Id: Ie80095a381e55ca5dbbd5c9d835243549d0b212e\nLink: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=7179\nReviewed-on: https://code.wireshark.org/review/27526\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit d80acae40d14efeb857258ca923637b590dd6be9)\nReviewed-on: https://code.wireshark.org/review/27533",
        "before_after_code_files": [
          "epan/tvbuff.c||epan/tvbuff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/tvbuff.c||epan/tvbuff.c"
          ],
          "candidate": [
            "epan/tvbuff.c||epan/tvbuff.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/tvbuff.c||epan/tvbuff.c": [
          "File: epan/tvbuff.c -> epan/tvbuff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "486:  DISSECTOR_ASSERT(tvb && tvb->initialized);",
          "488:  exception = check_offset_length_no_exception(tvb, offset, length, &abs_offset, &abs_length);",
          "489:  if (exception)",
          "490:   return FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "492:  if (length < 0)",
          "493:   return FALSE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ac55e80ae466e9dc5ec94dbb0ec0aa7a1f89e918",
      "candidate_info": {
        "commit_hash": "ac55e80ae466e9dc5ec94dbb0ec0aa7a1f89e918",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/ac55e80ae466e9dc5ec94dbb0ec0aa7a1f89e918",
        "files": [
          "epan/tvbuff.c"
        ],
        "message": "tvbuff: make tvb_bytes_exist fail with negative values\n\ntvb_generic_clone_offset_len uses tvb_bytes_exist to check that the\nrequested tvb data is actually available. It did not expect negative\nvalues, that would result in an overly large memory allocation.\n\nBug: 14678\nChange-Id: Ie80095a381e55ca5dbbd5c9d835243549d0b212e\nLink: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=7179\nReviewed-on: https://code.wireshark.org/review/27526\nPetri-Dish: Peter Wu <peter@lekensteyn.nl>\nTested-by: Petri Dish Buildbot\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit d80acae40d14efeb857258ca923637b590dd6be9)\nReviewed-on: https://code.wireshark.org/review/27534",
        "before_after_code_files": [
          "epan/tvbuff.c||epan/tvbuff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/tvbuff.c||epan/tvbuff.c"
          ],
          "candidate": [
            "epan/tvbuff.c||epan/tvbuff.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/tvbuff.c||epan/tvbuff.c": [
          "File: epan/tvbuff.c -> epan/tvbuff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "498:  DISSECTOR_ASSERT(tvb && tvb->initialized);",
          "500:  exception = check_offset_length_no_exception(tvb, offset, length, &abs_offset, &abs_length);",
          "501:  if (exception)",
          "502:   return FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "504:  if (length < 0)",
          "505:   return FALSE;",
          "",
          "---------------"
        ]
      }
    }
  ]
}