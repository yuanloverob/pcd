{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a08ae8fee9539ed1432f4169cea46f6e27990dd5",
      "candidate_info": {
        "commit_hash": "a08ae8fee9539ed1432f4169cea46f6e27990dd5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a08ae8fee9539ed1432f4169cea46f6e27990dd5",
        "files": [
          "crypto/dso/dso_lib.c"
        ],
        "message": "Avoid the call to OPENSSL_malloc with a negative value (then casted to unsigned)\n\nCLA: trivial\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2021)\n(cherry picked from commit 210fe4edee6514e4c1f0677adc9112c4459da02b)",
        "before_after_code_files": [
          "crypto/dso/dso_lib.c||crypto/dso/dso_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dso/dso_lib.c||crypto/dso/dso_lib.c": [
          "File: crypto/dso/dso_lib.c -> crypto/dso/dso_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:     char *filename = NULL;",
          "325:     int len = DSO_pathbyaddr(addr, NULL, 0);",
          "327:     filename = OPENSSL_malloc(len);",
          "328:     if (filename != NULL",
          "329:             && DSO_pathbyaddr(addr, filename, len) == len)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     if (len < 0)",
          "328:         return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f56c786769e13bb06e9855cd426e74a1c9eea3a1",
      "candidate_info": {
        "commit_hash": "f56c786769e13bb06e9855cd426e74a1c9eea3a1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f56c786769e13bb06e9855cd426e74a1c9eea3a1",
        "files": [
          "crypto/init.c"
        ],
        "message": "Stop init loops\n\nUnder certain circumstances, the libcrypto init code would loop,\ncausing a deadlock.  This would typically happen if something in\nossl_init_base() caused an OpenSSL error, and the error stack routines\nwould recurse into the init code before the flag that ossl_init_base()\nhad been run was checked.\n\nThis change makes sure ossl_init_base isn't run once more of the base\nis initiated.\n\nThanks to Dmitry Kostjuchenko for the idea.\n\nFixes Github issue #1899\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1922)\n(cherry picked from commit b7a7f39afeb4748b4c25dbccb8951711b8b70eaf)",
        "before_after_code_files": [
          "crypto/init.c||crypto/init.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/init.c||crypto/init.c": [
          "File: crypto/init.c -> crypto/init.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "503:         return 0;",
          "504:     }",
          "507:         return 0;",
          "509:     if ((opts & OPENSSL_INIT_NO_LOAD_CRYPTO_STRINGS)",
          "",
          "[Removed Lines]",
          "506:     if (!RUN_ONCE(&base, ossl_init_base))",
          "",
          "[Added Lines]",
          "506:     if (!base_inited && !RUN_ONCE(&base, ossl_init_base))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f3a7e57c92b2c9b87dc4b2997f2ebda6781300d0",
      "candidate_info": {
        "commit_hash": "f3a7e57c92b2c9b87dc4b2997f2ebda6781300d0",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f3a7e57c92b2c9b87dc4b2997f2ebda6781300d0",
        "files": [
          "crypto/evp/e_rc4_hmac_md5.c"
        ],
        "message": "crypto/evp: harden RC4_MD5 cipher.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory (or bogus\nMAC value is produced if x86 MD5 assembly module is involved). Since\nhash operation is read-only it is not considered to be exploitable\nbeyond a DoS condition.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "crypto/evp/e_rc4_hmac_md5.c||crypto/evp/e_rc4_hmac_md5.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/e_rc4_hmac_md5.c||crypto/evp/e_rc4_hmac_md5.c": [
          "File: crypto/evp/e_rc4_hmac_md5.c -> crypto/evp/e_rc4_hmac_md5.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "219:             len = p[arg - 2] << 8 | p[arg - 1];",
          "221:             if (!EVP_CIPHER_CTX_encrypting(ctx)) {",
          "222:                 len -= MD5_DIGEST_LENGTH;",
          "223:                 p[arg - 2] = len >> 8;",
          "224:                 p[arg - 1] = len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:                 if (len < MD5_DIGEST_LENGTH)",
          "223:                     return -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "09de9f0435790eefc082253609c8ef0ed66f8233",
      "candidate_info": {
        "commit_hash": "09de9f0435790eefc082253609c8ef0ed66f8233",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/09de9f0435790eefc082253609c8ef0ed66f8233",
        "files": [
          "crypto/aes/asm/aesni-sha1-x86_64.pl",
          "crypto/aes/asm/aesni-sha256-x86_64.pl"
        ],
        "message": "aes/asm/aesni-sha*-x86_64.pl: fix IV handling in SHAEXT paths.\n\nInitial IV was disregarded on SHAEXT-capable processors. Amazingly\nenough bulk AES128-SHA* talk-to-yourself tests were passing.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2992)\n\n(cherry picked from commit 08d09628d2c9f3ef599399d8cad021a07ab98347)",
        "before_after_code_files": [
          "crypto/aes/asm/aesni-sha1-x86_64.pl||crypto/aes/asm/aesni-sha1-x86_64.pl",
          "crypto/aes/asm/aesni-sha256-x86_64.pl||crypto/aes/asm/aesni-sha256-x86_64.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/aesni-sha1-x86_64.pl||crypto/aes/asm/aesni-sha1-x86_64.pl": [
          "File: crypto/aes/asm/aesni-sha1-x86_64.pl -> crypto/aes/asm/aesni-sha1-x86_64.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1711:  mov 240($key),$rounds",
          "1712:  sub $in0,$out",
          "1713:  movups ($key),$rndkey0   # $key[0]",
          "1714:  movups 16($key),$rndkey[0]  # forward reference",
          "1715:  lea 112($key),$key   # size optimization",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1714:  movups ($ivp),$iv   # load IV",
          "",
          "---------------"
        ],
        "crypto/aes/asm/aesni-sha256-x86_64.pl||crypto/aes/asm/aesni-sha256-x86_64.pl": [
          "File: crypto/aes/asm/aesni-sha256-x86_64.pl -> crypto/aes/asm/aesni-sha256-x86_64.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1307:  mov  240($key),$rounds",
          "1308:  sub  $in0,$out",
          "1309:  movups  ($key),$rndkey0  # $key[0]",
          "1310:  movups  16($key),$rndkey[0] # forward reference",
          "1311:  lea  112($key),$key  # size optimization",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1310:  movups  ($ivp),$iv  # load IV",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1bc45dd2cc8b4e18d8fc530f68c8949fab335643",
      "candidate_info": {
        "commit_hash": "1bc45dd2cc8b4e18d8fc530f68c8949fab335643",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1bc45dd2cc8b4e18d8fc530f68c8949fab335643",
        "files": [
          "test/testlib/OpenSSL/Test.pm"
        ],
        "message": "Test framework: Add the possibility to have a test specific data dir\n\nThis data directory is formed automatically by taking the recipe name\nand changing '.t' to '_data'.  Files in there can be reached with the\nnew function data_file()\n\n(Merged from https://github.com/openssl/openssl/pull/2027)\n(cherry picked from commit 6c6a2ae6fc964795304bbe7687e42b2b0cdf81b3)\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2802)",
        "before_after_code_files": [
          "test/testlib/OpenSSL/Test.pm||test/testliOpenSSL/Test.pm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/testlib/OpenSSL/Test.pm||test/testliOpenSSL/Test.pm": [
          "File: test/testlib/OpenSSL/Test.pm -> test/testliOpenSSL/Test.pm",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:                                    run));",
          "21: @EXPORT_OK = (@Test::More::EXPORT_OK, qw(bldtop_dir bldtop_file",
          "22:                                          srctop_dir srctop_file",
          "23:                                          pipe with cmdstr quotify));",
          "25: =head1 NAME",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50: and C<$BLDTOP>.  Without one of the combinations it refuses to work.",
          "51: See L</ENVIRONMENT> below.",
          "53: =cut",
          "55: use File::Copy;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57:                              catdir catfile splitpath catpath devnull abs2rel",
          "58:                              rel2abs/;",
          "59: use File::Path 2.00 qw/rmtree mkpath/;",
          "62: # The name of the test.  This is set by setup() and is used in the other",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "507: =over 4",
          "509: =item B<pipe LIST>",
          "511: LIST is a list of CODEREFs returned by C<app> or C<test>, from which C<pipe>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "705: =cut",
          "707: sub __env {",
          "708:     $directories{SRCTOP}  = $ENV{SRCTOP} || $ENV{TOP};",
          "709:     $directories{BLDTOP}  = $ENV{BLDTOP} || $ENV{TOP};",
          "710:     $directories{BLDAPPS} = $ENV{BIN_D}  || __bldtop_dir(\"apps\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "713:     $directories{SRCFUZZ} =                 __srctop_dir(\"fuzz\");",
          "714:     $directories{BLDTEST} = $ENV{TEST_D} || __bldtop_dir(\"test\");",
          "715:     $directories{SRCTEST} =                 __srctop_dir(\"test\");",
          "716:     $directories{RESULTS} = $ENV{RESULT_D} || $directories{BLDTEST};",
          "718:     push @direnv, \"TOP\"       if $ENV{TOP};",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "806:     return ($^X, $f);",
          "807: }",
          "809: sub __results_file {",
          "810:     BAIL_OUT(\"Must run setup() first\") if (! $test_name);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "887:  print STDERR \"DEBUG: __cwd(), directories and files:\\n\";",
          "888:  print STDERR \"  \\$directories{BLDTEST} = \\\"$directories{BLDTEST}\\\"\\n\";",
          "889:  print STDERR \"  \\$directories{SRCTEST} = \\\"$directories{SRCTEST}\\\"\\n\";",
          "890:  print STDERR \"  \\$directories{RESULTS} = \\\"$directories{RESULTS}\\\"\\n\";",
          "891:  print STDERR \"  \\$directories{BLDAPPS} = \\\"$directories{BLDAPPS}\\\"\\n\";",
          "892:  print STDERR \"  \\$directories{SRCAPPS} = \\\"$directories{SRCAPPS}\\\"\\n\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}