{
  "cve_id": "CVE-2016-9400",
  "cve_desc": "The CClient::ProcessServerPacket method in engine/client/client.cpp in Teeworlds before 0.6.4 allows remote servers to write to arbitrary physical memory locations and possibly execute arbitrary code via vectors involving snap handling.",
  "repo": "teeworlds/teeworlds",
  "patch_hash": "ff254722a2683867fcb3e67569ffd36226c4bc62",
  "patch_info": {
    "commit_hash": "ff254722a2683867fcb3e67569ffd36226c4bc62",
    "repo": "teeworlds/teeworlds",
    "commit_url": "https://github.com/teeworlds/teeworlds/commit/ff254722a2683867fcb3e67569ffd36226c4bc62",
    "files": [
      "src/engine/client/client.cpp",
      "src/engine/shared/snapshot.h"
    ],
    "message": "added some checks to snap handling",
    "before_after_code_files": [
      "src/engine/client/client.cpp||src/engine/client/client.cpp",
      "src/engine/shared/snapshot.h||src/engine/shared/snapshot.h"
    ]
  },
  "patch_diff": {
    "src/engine/client/client.cpp||src/engine/client/client.cpp": [
      "File: src/engine/client/client.cpp -> src/engine/client/client.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1240:    pData = (const char *)Unpacker.GetRaw(PartSize);",
      "1243:     return;",
      "1245:    if(GameTick >= m_CurrentRecvTick)",
      "",
      "[Removed Lines]",
      "1242:    if(Unpacker.Error())",
      "",
      "[Added Lines]",
      "1242:    if(Unpacker.Error() || NumParts < 1 || NumParts > CSnapshot::MAX_PARTS || Part < 0 | Part >= NumParts || PartSize < 0 || PartSize > MAX_SNAPSHOT_PACKSIZE)",
      "",
      "---------------"
    ],
    "src/engine/shared/snapshot.h||src/engine/shared/snapshot.h": [
      "File: src/engine/shared/snapshot.h -> src/engine/shared/snapshot.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "31: public:",
      "32:  enum",
      "33:  {",
      "35:  };",
      "37:  void Clear() { m_DataSize = 0; m_NumItems = 0; }",
      "",
      "[Removed Lines]",
      "34:   MAX_SIZE=64*1024",
      "",
      "[Added Lines]",
      "34:   MAX_PARTS = 64,",
      "35:   MAX_SIZE = MAX_PARTS*1024",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "43c510de5b048970c4a8c2ae71581a31daabfe12",
      "candidate_info": {
        "commit_hash": "43c510de5b048970c4a8c2ae71581a31daabfe12",
        "repo": "teeworlds/teeworlds",
        "commit_url": "https://github.com/teeworlds/teeworlds/commit/43c510de5b048970c4a8c2ae71581a31daabfe12",
        "files": [
          "src/engine/client/client.cpp"
        ],
        "message": "fixed typo",
        "before_after_code_files": [
          "src/engine/client/client.cpp||src/engine/client/client.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/engine/client/client.cpp||src/engine/client/client.cpp"
          ],
          "candidate": [
            "src/engine/client/client.cpp||src/engine/client/client.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/engine/client/client.cpp||src/engine/client/client.cpp": [
          "File: src/engine/client/client.cpp -> src/engine/client/client.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1240:    pData = (const char *)Unpacker.GetRaw(PartSize);",
          "1243:     return;",
          "1245:    if(GameTick >= m_CurrentRecvTick)",
          "",
          "[Removed Lines]",
          "1242:    if(Unpacker.Error() || NumParts < 1 || NumParts > CSnapshot::MAX_PARTS || Part < 0 | Part >= NumParts || PartSize < 0 || PartSize > MAX_SNAPSHOT_PACKSIZE)",
          "",
          "[Added Lines]",
          "1242:    if(Unpacker.Error() || NumParts < 1 || NumParts > CSnapshot::MAX_PARTS || Part < 0 || Part >= NumParts || PartSize < 0 || PartSize > MAX_SNAPSHOT_PACKSIZE)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a09d498bc9bd5274d102f5130f7f65dd14243a77",
      "candidate_info": {
        "commit_hash": "a09d498bc9bd5274d102f5130f7f65dd14243a77",
        "repo": "teeworlds/teeworlds",
        "commit_url": "https://github.com/teeworlds/teeworlds/commit/a09d498bc9bd5274d102f5130f7f65dd14243a77",
        "files": [
          "src/engine/client/client.cpp",
          "src/engine/shared/snapshot.h"
        ],
        "message": "added some checks to snap handling",
        "before_after_code_files": [
          "src/engine/client/client.cpp||src/engine/client/client.cpp",
          "src/engine/shared/snapshot.h||src/engine/shared/snapshot.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/engine/client/client.cpp||src/engine/client/client.cpp",
            "src/engine/shared/snapshot.h||src/engine/shared/snapshot.h"
          ],
          "candidate": [
            "src/engine/client/client.cpp||src/engine/client/client.cpp",
            "src/engine/shared/snapshot.h||src/engine/shared/snapshot.h"
          ]
        }
      },
      "candidate_diff": {
        "src/engine/client/client.cpp||src/engine/client/client.cpp": [
          "File: src/engine/client/client.cpp -> src/engine/client/client.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1235:    pData = (const char *)Unpacker.GetRaw(PartSize);",
          "1238:     return;",
          "1240:    if(GameTick >= m_CurrentRecvTick)",
          "",
          "[Removed Lines]",
          "1237:    if(Unpacker.Error())",
          "",
          "[Added Lines]",
          "1237:    if(Unpacker.Error() || NumParts < 1 || NumParts > CSnapshot::MAX_PARTS || Part < 0 | Part >= NumParts || PartSize < 0 || PartSize > MAX_SNAPSHOT_PACKSIZE)",
          "",
          "---------------"
        ],
        "src/engine/shared/snapshot.h||src/engine/shared/snapshot.h": [
          "File: src/engine/shared/snapshot.h -> src/engine/shared/snapshot.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: public:",
          "32:  enum",
          "33:  {",
          "35:  };",
          "37:  void Clear() { m_DataSize = 0; m_NumItems = 0; }",
          "",
          "[Removed Lines]",
          "34:   MAX_SIZE=64*1024",
          "",
          "[Added Lines]",
          "34:   MAX_PARTS = 64,",
          "35:   MAX_SIZE = MAX_PARTS*1024",
          "",
          "---------------"
        ]
      }
    }
  ]
}