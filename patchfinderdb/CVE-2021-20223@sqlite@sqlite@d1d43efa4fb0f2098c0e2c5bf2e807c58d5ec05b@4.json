{
  "cve_id": "CVE-2021-20223",
  "cve_desc": "",
  "repo": "sqlite/sqlite",
  "patch_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
  "patch_info": {
    "commit_hash": "d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/d1d43efa4fb0f2098c0e2c5bf2e807c58d5ec05b",
    "files": [
      "ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test",
      "manifest",
      "manifest.uuid"
    ],
    "message": "Prevent fts5 tokenizer unicode61 from considering '\\0' to be a token characters, even if other characters of class \"Cc\" are.\n\nFossilOrigin-Name: b7b7bde9b7a03665e3691c6d51118965f216d2dfb1617f138b9f9e60e418ed2f",
    "before_after_code_files": [
      "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c",
      "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test",
      "manifest.uuid||manifest.uuid"
    ]
  },
  "patch_diff": {
    "ext/fts5/fts5_unicode2.c||ext/fts5/fts5_unicode2.c": [
      "File: ext/fts5/fts5_unicode2.c -> ext/fts5/fts5_unicode2.c"
    ],
    "ext/fts5/test/fts5tok1.test||ext/fts5/test/fts5tok1.test": [
      "File: ext/fts5/test/fts5tok1.test -> ext/fts5/test/fts5tok1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:   SELECT * FROM t4;",
      "112: } {1 {SQL logic error}}",
      "115: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114: #-------------------------------------------------------------------------",
      "115: # Embedded 0x00 characters.",
      "116: #",
      "117: reset_db",
      "118: do_execsql_test 3.1.0 {",
      "119:   CREATE VIRTUAL TABLE t1 USING fts5(z);",
      "120:   CREATE VIRTUAL TABLE tt USING fts5vocab(t1, 'instance');",
      "121:   INSERT INTO t1 VALUES('abc' || char(0) || 'def');",
      "122:   SELECT * FROM tt;",
      "123: } { abc 1 z 0 def 1 z 1 }",
      "124: do_execsql_test 3.1.1 {",
      "125:   SELECT hex(z) FROM t1;",
      "126: } {61626300646566}",
      "127: do_execsql_test 3.1.2 {",
      "128:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "129: } {}",
      "131: do_execsql_test 3.2.0 {",
      "132:   CREATE VIRTUAL TABLE t2 USING fts5(z,",
      "133:       tokenize=\"unicode61 categories 'L* N* Co Cc'\"",
      "134:   );",
      "135:   CREATE VIRTUAL TABLE tu USING fts5vocab(t2, 'instance');",
      "137:   INSERT INTO t2 VALUES('abc' || char(0) || 'def');",
      "138:   SELECT * FROM tu;",
      "139: } { abc 1 z 0 def 1 z 1 }",
      "141: do_execsql_test 3.2.1 {",
      "142:   SELECT hex(z) FROM t1;",
      "143: } {61626300646566}",
      "145: do_execsql_test 3.2.2 {",
      "146:   INSERT INTO t1(t1) VALUES('integrity-check');",
      "147: } {}",
      "",
      "---------------"
    ],
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 0e7e113d9f2c929c1f8a85e2cfad8e2e60f0e8770212b5e5320fb2a2c42911f8",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b13c3a33fdd14c66726fb3d6ada2b0a8941e8bd4",
      "candidate_info": {
        "commit_hash": "b13c3a33fdd14c66726fb3d6ada2b0a8941e8bd4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b13c3a33fdd14c66726fb3d6ada2b0a8941e8bd4",
        "files": [
          "configure",
          "configure.ac",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix the --enable-update-limit option to ./configure.\n\nFossilOrigin-Name: d31fd57ea538668238787fde10a6a57bbd8a428c73f2e54b2e95ee9a645bc75b",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "651: # statements.",
          "652: AC_ARG_ENABLE(update-limit, AC_HELP_STRING([--enable-update-limit],",
          "653:       [Enable the UPDATE/DELETE LIMIT clause]))",
          "655:   OPT_FEATURE_FLAGS=\"${OPT_FEATURE_FLAGS} -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT\"",
          "656: fi",
          "",
          "[Removed Lines]",
          "654: if test \"${enable_udlimit}\" = \"yes\" ; then",
          "",
          "[Added Lines]",
          "654: if test \"${enable_update_limit}\" = \"yes\" ; then",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 10fa79d00f8091e5748c245f4cae5b5f499a5f8db20da741c130e05a21ede443",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e40cc16b472071f553700c7208394e6cf73d5688",
      "candidate_info": {
        "commit_hash": "e40cc16b472071f553700c7208394e6cf73d5688",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e40cc16b472071f553700c7208394e6cf73d5688",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "src/select.c",
          "src/sqliteInt.h",
          "src/walker.c"
        ],
        "message": "Move some utility Walker callbacks into the walker.c source file, as they seem to belong there better.\n\nFossilOrigin-Name: dac438236f7c5419d4e7e094e8b3f19f83cd3b1a18bc8acb14aee90d4514fa3c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "src/select.c||src/select.c",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/walker.c||src/walker.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f7e5a68a7ebbb97a5beb050a75b3b4cf2fd6adc54653da993a8950fb3a5799f7",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5867:   }",
          "5868:   return WRC_Continue;",
          "5869: }",
          "",
          "[Removed Lines]",
          "5870: static int analyzeAggregatesInSelect(Walker *pWalker, Select *pSelect){",
          "5871:   UNUSED_PARAMETER(pSelect);",
          "5872:   pWalker->walkerDepth++;",
          "5873:   return WRC_Continue;",
          "5874: }",
          "5875: static void analyzeAggregatesInSelectEnd(Walker *pWalker, Select *pSelect){",
          "5876:   UNUSED_PARAMETER(pSelect);",
          "5877:   pWalker->walkerDepth--;",
          "5878: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5889: void sqlite3ExprAnalyzeAggregates(NameContext *pNC, Expr *pExpr){",
          "5890:   Walker w;",
          "5891:   w.xExprCallback = analyzeAggregate;",
          "5894:   w.walkerDepth = 0;",
          "5895:   w.u.pNC = pNC;",
          "5896:   w.pParse = 0;",
          "",
          "[Removed Lines]",
          "5892:   w.xSelectCallback = analyzeAggregatesInSelect;",
          "5893:   w.xSelectCallback2 = analyzeAggregatesInSelectEnd;",
          "",
          "[Added Lines]",
          "5883:   w.xSelectCallback = sqlite3WalkerDepthIncrease;",
          "5884:   w.xSelectCallback2 = sqlite3WalkerDepthDecrease;",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5229:   return WRC_Continue;",
          "5230: }",
          "5255: #if SQLITE_DEBUG",
          "",
          "[Removed Lines]",
          "5241: int sqlite3ExprWalkNoop(Walker *NotUsed, Expr *NotUsed2){",
          "5242:   UNUSED_PARAMETER2(NotUsed, NotUsed2);",
          "5243:   return WRC_Continue;",
          "5244: }",
          "5250: int sqlite3SelectWalkNoop(Walker *NotUsed, Select *NotUsed2){",
          "5251:   UNUSED_PARAMETER2(NotUsed, NotUsed2);",
          "5252:   return WRC_Continue;",
          "5253: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3725: int sqlite3ExprWalkNoop(Walker*, Expr*);",
          "3726: int sqlite3SelectWalkNoop(Walker*, Select*);",
          "3727: int sqlite3SelectWalkFail(Walker*, Select*);",
          "3728: #ifdef SQLITE_DEBUG",
          "3729: void sqlite3SelectWalkAssert2(Walker*, Select*);",
          "3730: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3728: int sqlite3WalkerDepthIncrease(Walker*,Select*);",
          "3729: void sqlite3WalkerDepthDecrease(Walker*,Select*);",
          "",
          "---------------"
        ],
        "src/walker.c||src/walker.c": [
          "File: src/walker.c -> src/walker.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:   }while( p!=0 );",
          "208:   return WRC_Continue;",
          "209: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214: int sqlite3WalkerDepthIncrease(Walker *pWalker, Select *pSelect){",
          "215:   UNUSED_PARAMETER(pSelect);",
          "216:   pWalker->walkerDepth++;",
          "217:   return WRC_Continue;",
          "218: }",
          "219: void sqlite3WalkerDepthDecrease(Walker *pWalker, Select *pSelect){",
          "220:   UNUSED_PARAMETER(pSelect);",
          "221:   pWalker->walkerDepth--;",
          "222: }",
          "234: int sqlite3ExprWalkNoop(Walker *NotUsed, Expr *NotUsed2){",
          "235:   UNUSED_PARAMETER2(NotUsed, NotUsed2);",
          "236:   return WRC_Continue;",
          "237: }",
          "243: int sqlite3SelectWalkNoop(Walker *NotUsed, Select *NotUsed2){",
          "244:   UNUSED_PARAMETER2(NotUsed, NotUsed2);",
          "245:   return WRC_Continue;",
          "246: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1eac966076301c782811314677edaaa173f7bf83",
      "candidate_info": {
        "commit_hash": "1eac966076301c782811314677edaaa173f7bf83",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1eac966076301c782811314677edaaa173f7bf83",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/main.c"
        ],
        "message": "Fix a problem in sqlite3CodecQueryParameters() that was introduced by the query parameter encoding changes for the 3.31.1 release.\n\nFossilOrigin-Name: cc65ca541265bd7061ed8f5ec9a54f3c384c41019c5ea1c68dcaabeff3495839",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/main.c||src/main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 3bfa9cc97da10598521b342961df8f5f68c7388fa117345eeb516eaa837bb4d6",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2989:   return rc;",
          "2990: }",
          "2992: #if defined(SQLITE_HAS_CODEC)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2996: static const char *uriParameter(const char *zFilename, const char *zParam){",
          "2997:   zFilename += sqlite3Strlen30(zFilename) + 1;",
          "2998:   while( zFilename[0] ){",
          "2999:     int x = strcmp(zFilename, zParam);",
          "3000:     zFilename += sqlite3Strlen30(zFilename) + 1;",
          "3001:     if( x==0 ) return zFilename;",
          "3002:     zFilename += sqlite3Strlen30(zFilename) + 1;",
          "3003:   }",
          "3004:   return 0;",
          "3005: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3002: ){",
          "3003:   const char *zKey;",
          "3005:     u8 iByte;",
          "3006:     int i;",
          "3007:     char zDecoded[40];",
          "",
          "[Removed Lines]",
          "3004:   if( (zKey = sqlite3_uri_parameter(zUri, \"hexkey\"))!=0 && zKey[0] ){",
          "",
          "[Added Lines]",
          "3019:   if( zUri==0 ){",
          "3020:     return 0;",
          "3021:   }else if( (zKey = uriParameter(zUri, \"hexkey\"))!=0 && zKey[0] ){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3011:     }",
          "3012:     sqlite3_key_v2(db, zDb, zDecoded, i/2);",
          "3013:     return 1;",
          "3015:     sqlite3_key_v2(db, zDb, zKey, sqlite3Strlen30(zKey));",
          "3016:     return 1;",
          "3018:     sqlite3_key_v2(db, zDb, zKey, -1);",
          "3019:     return 1;",
          "3020:   }else{",
          "",
          "[Removed Lines]",
          "3014:   }else if( (zKey = sqlite3_uri_parameter(zUri, \"key\"))!=0 ){",
          "3017:   }else if( (zKey = sqlite3_uri_parameter(zUri, \"textkey\"))!=0 ){",
          "",
          "[Added Lines]",
          "3031:   }else if( (zKey = uriParameter(zUri, \"key\"))!=0 ){",
          "3034:   }else if( (zKey = uriParameter(zUri, \"textkey\"))!=0 ){",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4272: const char *sqlite3_uri_parameter(const char *zFilename, const char *zParam){",
          "4273:   if( zFilename==0 || zParam==0 ) return 0;",
          "4274:   zFilename = databaseName(zFilename);",
          "4283: }",
          "",
          "[Removed Lines]",
          "4275:   zFilename += sqlite3Strlen30(zFilename) + 1;",
          "4276:   while( zFilename[0] ){",
          "4277:     int x = strcmp(zFilename, zParam);",
          "4278:     zFilename += sqlite3Strlen30(zFilename) + 1;",
          "4279:     if( x==0 ) return zFilename;",
          "4280:     zFilename += sqlite3Strlen30(zFilename) + 1;",
          "4281:   }",
          "4282:   return 0;",
          "",
          "[Added Lines]",
          "4292:   return uriParameter(zFilename, zParam);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e1f49b88501363222a3f13c25c1ec4e08150811b",
      "candidate_info": {
        "commit_hash": "e1f49b88501363222a3f13c25c1ec4e08150811b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e1f49b88501363222a3f13c25c1ec4e08150811b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/treeview.c"
        ],
        "message": "Fix a problem in sqlite3TreeViewBareExprList() in which the routine was not interpreting the new ExprList format correctly.\n\nFossilOrigin-Name: cd56872afbb4edeff2e8c1cb1c8d47c7a9b333b3fc416c20183250807291fae8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/treeview.c||src/treeview.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 51665bf0f975fb248964a4be205a4f3285d3f3f8cc697977d264efefbbe20dd8",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/treeview.c||src/treeview.c": [
          "File: src/treeview.c -> src/treeview.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "730:       int j = pList->a[i].u.x.iOrderByCol;",
          "731:       char *zName = pList->a[i].zEName;",
          "732:       int moreToFollow = i<pList->nExpr - 1;",
          "733:       if( j || zName ){",
          "734:         sqlite3TreeViewPush(pView, moreToFollow);",
          "735:         moreToFollow = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "733:       if( pList->a[i].eEName!=ENAME_NAME ) zName = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7505123fe5394f54e60fbdc0a4c3d87aadef9bb7",
      "candidate_info": {
        "commit_hash": "7505123fe5394f54e60fbdc0a4c3d87aadef9bb7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7505123fe5394f54e60fbdc0a4c3d87aadef9bb7",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "Two new test cases added to test/fuzzdata8.db.\n\nFossilOrigin-Name: 1be2c18f4021e1d0b8412ecb68a599475c717dd97c7db209fc4203358957fd70",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 315d1f1a503e8c186739658c85b92fa3d12514e5baaa26925c85664b5e85d1c0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}