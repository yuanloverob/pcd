{
  "cve_id": "CVE-2019-14495",
  "cve_desc": "webadmin.c in 3proxy before 0.8.13 has an out-of-bounds write in the admin interface.",
  "repo": "z3APA3A/3proxy",
  "patch_hash": "3b67dc844789dc0f00e934270c7b349bcb547865",
  "patch_info": {
    "commit_hash": "3b67dc844789dc0f00e934270c7b349bcb547865",
    "repo": "z3APA3A/3proxy",
    "commit_url": "https://github.com/z3APA3A/3proxy/commit/3b67dc844789dc0f00e934270c7b349bcb547865",
    "files": [
      "src/webadmin.c"
    ],
    "message": "Fix: out-of-bounds write and few more bugs in 'admin' configuration upload",
    "before_after_code_files": [
      "src/webadmin.c||src/webadmin.c"
    ]
  },
  "patch_diff": {
    "src/webadmin.c||src/webadmin.c": [
      "File: src/webadmin.c -> src/webadmin.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "11: #define RETURN(xxx) { param->res = xxx; goto CLEANRET; }",
      "15: extern FILE *writable;",
      "16: FILE * confopen();",
      "",
      "[Removed Lines]",
      "13: #define LINESIZE 2048",
      "",
      "[Added Lines]",
      "13: #define LINESIZE 65536",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "341:  char *sb;",
      "342:  char *req = NULL;",
      "343:  struct printparam pp;",
      "345:  int isform = 0;",
      "347:  pp.inbuf = 0;",
      "",
      "[Removed Lines]",
      "344:  int contentlen = 0;",
      "",
      "[Added Lines]",
      "344:  unsigned contentlen = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "390:  else if(i > 15 && (!strncasecmp(buf, \"content-length:\", 15))){",
      "391:   sb = buf + 15;",
      "392:   while(isspace(*sb))sb++;",
      "394:  }",
      "395:  else if(i > 13 && (!strncasecmp(buf, \"content-type:\", 13))){",
      "396:   sb = buf + 13;",
      "",
      "[Removed Lines]",
      "393:   contentlen = atoi(sb);",
      "",
      "[Added Lines]",
      "393:   sscanf(sb, \"%u\", &contentlen);",
      "394:   if(contentlen > LINESIZE*1024) contentlen = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "520:     break;",
      "521:    }",
      "522:     printstr(&pp, \"<h3>Please be careful editing config file remotely</h3>\");",
      "524:     while(fgets(buf, 256, fp)){",
      "525:      printstr(&pp, buf);",
      "526:     }",
      "",
      "[Removed Lines]",
      "523:     printstr(&pp, \"<form method=\\\"POST\\\" action=\\\"/U\\\"><textarea cols=\\\"80\\\" rows=\\\"30\\\" name=\\\"conffile\\\">\");",
      "",
      "[Added Lines]",
      "524:     printstr(&pp, \"<form method=\\\"POST\\\" action=\\\"/U\\\" enctype=\\\"application/x-www-form-urlencoded\\\"><textarea cols=\\\"80\\\" rows=\\\"30\\\" name=\\\"conffile\\\">\");",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "530:   }",
      "531:  case 'U':",
      "532:   {",
      "534:    int error = 0;",
      "537:     error = 1;",
      "538:    }",
      "540:     if(i > (contentlen - l)) i = (contentlen - l);",
      "542:     if(!l){",
      "544:     }",
      "545:     if(!error){",
      "546:      decodeurl((unsigned char *)buf, 1);",
      "547:      fprintf(writable, \"%s\", l? buf : buf + 9);",
      "548:     }",
      "549:     l += i;",
      "551:    }",
      "552:    if(writable && !error){",
      "553:     fflush(writable);",
      "",
      "[Removed Lines]",
      "533:    int l=0;",
      "536:    if(!writable || fseek(writable, 0, 0)){",
      "539:    while((i = sockgetlinebuf(param, CLIENT, (unsigned char *)buf, LINESIZE - 1, '+', conf.timeouts[STRING_S])) > 0){",
      "541:     buf[i] = 0;",
      "543:      if(strncasecmp(buf, \"conffile=\", 9)) error = 1;",
      "550:     if(l >= contentlen) break;",
      "",
      "[Added Lines]",
      "534:    unsigned l=0;",
      "537:    if(!writable || !contentlen || fseek(writable, 0, 0)){",
      "540:    while(l < contentlen && (i = sockgetlinebuf(param, CLIENT, (unsigned char *)buf, (contentlen - l) > LINESIZE - 1?LINESIZE - 1:contentlen - l, '+', conf.timeouts[STRING_S])) > 0){",
      "543:      if(i<9 || strncasecmp(buf, \"conffile=\", 9)) error = 1;",
      "546:      buf[i] = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bf4ef2284b4a9a6d97d0c3d075d3b35ef87f7c2c",
      "candidate_info": {
        "commit_hash": "bf4ef2284b4a9a6d97d0c3d075d3b35ef87f7c2c",
        "repo": "z3APA3A/3proxy",
        "commit_url": "https://github.com/z3APA3A/3proxy/commit/bf4ef2284b4a9a6d97d0c3d075d3b35ef87f7c2c",
        "files": [
          "src/webadmin.c"
        ],
        "message": "Fix: out-of-bounds write and few more bugs in 'admin' configuration upload",
        "before_after_code_files": [
          "src/webadmin.c||src/webadmin.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/webadmin.c||src/webadmin.c"
          ],
          "candidate": [
            "src/webadmin.c||src/webadmin.c"
          ]
        }
      },
      "candidate_diff": {
        "src/webadmin.c||src/webadmin.c": [
          "File: src/webadmin.c -> src/webadmin.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: #define RETURN(xxx) { param->res = xxx; goto CLEANRET; }",
          "15: extern FILE *writable;",
          "16: FILE * confopen();",
          "",
          "[Removed Lines]",
          "13: #define LINESIZE 2048",
          "",
          "[Added Lines]",
          "13: #define LINESIZE 65536",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "342:  char *sb;",
          "343:  char *req = NULL;",
          "344:  struct printparam pp;",
          "346:  int isform = 0;",
          "347:  int limited = 0;",
          "",
          "[Removed Lines]",
          "345:  int contentlen = 0;",
          "",
          "[Added Lines]",
          "345:  unsigned contentlen = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "394:  else if(i > 15 && (!strncasecmp(buf, \"content-length:\", 15))){",
          "395:   sb = buf + 15;",
          "396:   while(isspace(*sb))sb++;",
          "398:  }",
          "399:  else if(i > 13 && (!strncasecmp(buf, \"content-type:\", 13))){",
          "400:   sb = buf + 13;",
          "",
          "[Removed Lines]",
          "397:   contentlen = atoi(sb);",
          "",
          "[Added Lines]",
          "397:   sscanf(sb, \"%u\", &contentlen);",
          "398:   if(contentlen > LINESIZE*1024) contentlen = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "525:     break;",
          "526:    }",
          "527:     printstr(&pp, \"<h3>Please be careful editing config file remotely</h3>\");",
          "529:     while(fgets(buf, 256, fp)){",
          "530:      printstr(&pp, buf);",
          "531:     }",
          "",
          "[Removed Lines]",
          "528:     printstr(&pp, \"<form method=\\\"POST\\\" action=\\\"/U\\\"><textarea cols=\\\"80\\\" rows=\\\"30\\\" name=\\\"conffile\\\">\");",
          "",
          "[Added Lines]",
          "529:     printstr(&pp, \"<form method=\\\"POST\\\" action=\\\"/U\\\" enctype=\\\"application/x-www-form-urlencoded\\\"><textarea cols=\\\"80\\\" rows=\\\"30\\\" name=\\\"conffile\\\">\");",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "535:   }",
          "536:  case 'U':",
          "537:   {",
          "539:    int error = 0;",
          "542:     error = 1;",
          "543:    }",
          "545:     if(i > (contentlen - l)) i = (contentlen - l);",
          "547:     if(!l){",
          "549:     }",
          "550:     if(!error){",
          "551:      decodeurl((unsigned char *)buf, 1);",
          "552:      fprintf(writable, \"%s\", l? buf : buf + 9);",
          "553:     }",
          "554:     l += i;",
          "556:    }",
          "557:    if(writable && !error){",
          "558:     fflush(writable);",
          "",
          "[Removed Lines]",
          "538:    int l=0;",
          "541:    if(!writable || fseek(writable, 0, 0)){",
          "544:    while((i = sockgetlinebuf(param, CLIENT, (unsigned char *)buf, LINESIZE - 1, '+', conf.timeouts[STRING_S])) > 0){",
          "546:     buf[i] = 0;",
          "548:      if(strncasecmp(buf, \"conffile=\", 9)) error = 1;",
          "555:     if(l >= contentlen) break;",
          "",
          "[Added Lines]",
          "539:    unsigned l=0;",
          "542:    if(!writable || !contentlen || fseek(writable, 0, 0)){",
          "545:    while(l < contentlen && (i = sockgetlinebuf(param, CLIENT, (unsigned char *)buf, (contentlen - l) > LINESIZE - 1?LINESIZE - 1:contentlen - l, '+', conf.timeouts[STRING_S])) > 0){",
          "548:      if(i<9 || strncasecmp(buf, \"conffile=\", 9)) error = 1;",
          "551:      buf[i] = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}