{
  "cve_id": "CVE-2022-1106",
  "cve_desc": "use after free in mrb_vm_exec in GitHub repository mruby/mruby prior to 3.2.",
  "repo": "mruby/mruby",
  "patch_hash": "7f5a490d09f4d56801ac3a3e4e39e03e1471b44c",
  "patch_info": {
    "commit_hash": "7f5a490d09f4d56801ac3a3e4e39e03e1471b44c",
    "repo": "mruby/mruby",
    "commit_url": "https://github.com/mruby/mruby/commit/7f5a490d09f4d56801ac3a3e4e39e03e1471b44c",
    "files": [
      "src/vm.c"
    ],
    "message": "vm.c: vm.c: stack may be reallocated in functions calls; aaa28a5\n\n`mrb_range_new()` also calls VM recursively.",
    "before_after_code_files": [
      "src/vm.c||src/vm.c"
    ]
  },
  "patch_diff": {
    "src/vm.c||src/vm.c": [
      "File: src/vm.c -> src/vm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2819:     }",
      "2821:     CASE(OP_RANGE_INC, B) {",
      "2823:       mrb_gc_arena_restore(mrb, ai);",
      "2824:       NEXT;",
      "2825:     }",
      "2827:     CASE(OP_RANGE_EXC, B) {",
      "2829:       mrb_gc_arena_restore(mrb, ai);",
      "2830:       NEXT;",
      "2831:     }",
      "",
      "[Removed Lines]",
      "2822:       regs[a] = mrb_range_new(mrb, regs[a], regs[a+1], FALSE);",
      "2828:       regs[a] = mrb_range_new(mrb, regs[a], regs[a+1], TRUE);",
      "",
      "[Added Lines]",
      "2822:       mrb_value v = mrb_range_new(mrb, regs[a], regs[a+1], FALSE);",
      "2823:       regs[a] = v;",
      "2829:       mrb_value v = mrb_range_new(mrb, regs[a], regs[a+1], TRUE);",
      "2830:       regs[a] = v;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b137eb2678cfba8d6ffcddff5326ebe8eb7f6a24",
      "candidate_info": {
        "commit_hash": "b137eb2678cfba8d6ffcddff5326ebe8eb7f6a24",
        "repo": "mruby/mruby",
        "commit_url": "https://github.com/mruby/mruby/commit/b137eb2678cfba8d6ffcddff5326ebe8eb7f6a24",
        "files": [
          "src/vm.c"
        ],
        "message": "vm.c: remove duplicate code in VM.",
        "before_after_code_files": [
          "src/vm.c||src/vm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/vm.c||src/vm.c"
          ],
          "candidate": [
            "src/vm.c||src/vm.c"
          ]
        }
      },
      "candidate_diff": {
        "src/vm.c||src/vm.c": [
          "File: src/vm.c -> src/vm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1395:     }",
          "1397:     CASE(OP_GETCONST, BB) {",
          "1403:       NEXT;",
          "1404:     }",
          "",
          "[Removed Lines]",
          "1398:       mrb_value val;",
          "1399:       mrb_sym sym = syms[b];",
          "1401:       val = mrb_vm_const_get(mrb, sym);",
          "1402:       regs[a] = val;",
          "",
          "[Added Lines]",
          "1398:       regs[a] = mrb_vm_const_get(mrb, syms[b]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1409:     }",
          "1411:     CASE(OP_GETMCNST, BB) {",
          "1416:       NEXT;",
          "1417:     }",
          "",
          "[Removed Lines]",
          "1412:       mrb_value val;",
          "1414:       val = mrb_const_get(mrb, regs[a], syms[b]);",
          "1415:       regs[a] = val;",
          "",
          "[Added Lines]",
          "1408:       regs[a] = mrb_const_get(mrb, regs[a], syms[b]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1705:         pc = ci->pc;",
          "1706:         ci[1].stack[0] = recv;",
          "1707:         irep = mrb->c->ci->proc->body.irep;",
          "1711:       }",
          "1712:       else {",
          "",
          "[Removed Lines]",
          "1708:         pool = irep->pool;",
          "1709:         syms = irep->syms;",
          "1710:         JUMP;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1719:           c = OP_R_NORMAL;",
          "1720:           goto L_OP_RETURN_BODY;",
          "1721:         }",
          "1724:         mrb_int nargs = mrb_ci_bidx(ci)+1;",
          "1725:         if (nargs < irep->nregs) {",
          "1726:           mrb_stack_extend(mrb, irep->nregs);",
          "",
          "[Removed Lines]",
          "1722:         pool = irep->pool;",
          "1723:         syms = irep->syms;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1730:           regs[0] = MRB_PROC_ENV(m)->stack[0];",
          "1731:         }",
          "1732:         pc = irep->iseq;",
          "1734:       }",
          "1735:     }",
          "1737:     CASE(OP_SUPER, BB) {",
          "",
          "[Removed Lines]",
          "1733:         JUMP;",
          "",
          "[Added Lines]",
          "1722:       pool = irep->pool;",
          "1723:       syms = irep->syms;",
          "1724:       JUMP;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1819:         mrb->c->ci->stack[0] = v;",
          "1820:         ci = cipop(mrb);",
          "1821:         pc = ci->pc;",
          "1823:       }",
          "1824:       else {",
          "",
          "[Removed Lines]",
          "1822:         JUMP;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1829:         syms = irep->syms;",
          "1830:         mrb_stack_extend(mrb, (irep->nregs < 4) ? 4 : irep->nregs);",
          "1831:         pc = irep->iseq;",
          "1833:       }",
          "1834:     }",
          "1836:     CASE(OP_ARGARY, BS) {",
          "",
          "[Removed Lines]",
          "1832:         JUMP;",
          "",
          "[Added Lines]",
          "1822:       JUMP;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2625:     }",
          "2627:     CASE(OP_ARRAY, BB) {",
          "2630:       mrb_gc_arena_restore(mrb, ai);",
          "2631:       NEXT;",
          "2632:     }",
          "2633:     CASE(OP_ARRAY2, BBB) {",
          "2636:       mrb_gc_arena_restore(mrb, ai);",
          "2637:       NEXT;",
          "2638:     }",
          "",
          "[Removed Lines]",
          "2628:       mrb_value v = mrb_ary_new_from_values(mrb, b, &regs[a]);",
          "2629:       regs[a] = v;",
          "2634:       mrb_value v = mrb_ary_new_from_values(mrb, c, &regs[b]);",
          "2635:       regs[a] = v;",
          "",
          "[Added Lines]",
          "2617:       regs[a] = mrb_ary_new_from_values(mrb, b, &regs[a]);",
          "2622:       regs[a] = mrb_ary_new_from_values(mrb, c, &regs[b]);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2835:     }",
          "2837:     CASE(OP_RANGE_INC, B) {",
          "2840:       mrb_gc_arena_restore(mrb, ai);",
          "2841:       NEXT;",
          "2842:     }",
          "2844:     CASE(OP_RANGE_EXC, B) {",
          "2847:       mrb_gc_arena_restore(mrb, ai);",
          "2848:       NEXT;",
          "2849:     }",
          "",
          "[Removed Lines]",
          "2838:       mrb_value val = mrb_range_new(mrb, regs[a], regs[a+1], FALSE);",
          "2839:       regs[a] = val;",
          "2845:       mrb_value val = mrb_range_new(mrb, regs[a], regs[a+1], TRUE);",
          "2846:       regs[a] = val;",
          "",
          "[Added Lines]",
          "2825:       regs[a] = mrb_range_new(mrb, regs[a], regs[a+1], FALSE);",
          "2831:       regs[a] = mrb_range_new(mrb, regs[a], regs[a+1], TRUE);",
          "",
          "---------------"
        ]
      }
    }
  ]
}