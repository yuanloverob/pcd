{
  "cve_id": "CVE-2017-7185",
  "cve_desc": "Use-after-free vulnerability in the mg_http_multipart_wait_for_boundary function in mongoose.c in Cesanta Mongoose Embedded Web Server Library 6.7 and earlier and Mongoose OS 1.2 and earlier allows remote attackers to cause a denial of service (crash) via a multipart/form-data POST request without a MIME boundary string.",
  "repo": "cesanta/mongoose",
  "patch_hash": "b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
  "patch_info": {
    "commit_hash": "b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
    "repo": "cesanta/mongoose",
    "commit_url": "https://github.com/cesanta/mongoose/commit/b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
    "files": [
      "mongoose.c"
    ],
    "message": "Fix crash in multipart handling\n\nClose cesanta/dev#6974\n\nPUBLISHED_FROM=4d4e4a46eceba10aec8dacb7f8f58bd078c92307",
    "before_after_code_files": [
      "mongoose.c||mongoose.c"
    ]
  },
  "patch_diff": {
    "mongoose.c||mongoose.c": [
      "File: mongoose.c -> mongoose.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "5961:   struct mbuf *io = &c->recv_mbuf;",
      "5962:   struct mg_http_proto_data *pd = mg_http_get_proto_data(c);",
      "5964:   if ((int) io->len < pd->mp_stream.boundary_len + 2) {",
      "5965:     return 0;",
      "5966:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5964:   if (pd->mp_stream.boundary == NULL) {",
      "5965:     pd->mp_stream.state = MPS_FINALIZE;",
      "5966:     DBG((\"Invalid request: boundary not initilaized\"));",
      "5967:     return 0;",
      "5968:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "39a3bb7e44e29024b7da254884ff0817a412f8f5",
      "candidate_info": {
        "commit_hash": "39a3bb7e44e29024b7da254884ff0817a412f8f5",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/39a3bb7e44e29024b7da254884ff0817a412f8f5",
        "files": [
          "mongoose.c"
        ],
        "message": "Log method and URI in mg_http_handler\n\nPUBLISHED_FROM=34c3e49d523b0f5c7056f91e4b422f21f5694df9",
        "before_after_code_files": [
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5707:     else if (hm->message.len <= io->len) {",
          "5708:       int trigger_ev = nc->listener ? MG_EV_HTTP_REQUEST : MG_EV_HTTP_REPLY;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5709:       char addr[32];",
          "5710:       mg_sock_addr_to_str(&nc->sa, addr, sizeof(addr),",
          "5711:                           MG_SOCK_STRINGIFY_IP | MG_SOCK_STRINGIFY_PORT);",
          "5712:       DBG((\"%p %s %.*s %.*s\", nc, addr, (int) hm->method.len, hm->method.p,",
          "5713:            (int) hm->uri.len, hm->uri.p));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd48bcfd7da3ecaa1a4a537e6903c24ed3688e4a",
      "candidate_info": {
        "commit_hash": "cd48bcfd7da3ecaa1a4a537e6903c24ed3688e4a",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/cd48bcfd7da3ecaa1a4a537e6903c24ed3688e4a",
        "files": [
          "mongoose.c"
        ],
        "message": "Don't ignore userdata in mg_bind\n\nPUBLISHED_FROM=0ffcd770535efa66ff1b6f9201f2caf832bd5055",
        "before_after_code_files": [
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2783:   struct mg_add_sock_opts add_sock_opts;",
          "2784:   char host[MG_MAX_HOST_LEN];",
          "2786:   MG_COPY_COMMON_CONNECTION_OPTIONS(&add_sock_opts, &opts);",
          "2788: #if MG_ENABLE_TUN",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2786: #if MG_ENABLE_CALLBACK_USERDATA",
          "2787:   opts.user_data = user_data;",
          "2788: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2846:   }",
          "2847:   mg_add_conn(nc->mgr, nc);",
          "2852:   return nc;",
          "2853: }",
          "",
          "[Removed Lines]",
          "2849: #if MG_ENABLE_CALLBACK_USERDATA",
          "2850:   (void) user_data;",
          "2851: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0ea3cdd228f727f79301a196e69f3241b105d082",
      "candidate_info": {
        "commit_hash": "0ea3cdd228f727f79301a196e69f3241b105d082",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/0ea3cdd228f727f79301a196e69f3241b105d082",
        "files": [
          "examples/CC3200/cs_dbg.h",
          "mongoose.c"
        ],
        "message": "Implement sending stdout and stderr to MQTT topics\n\nConfigured via `debug.std{out,err}_topic`\n\nPUBLISHED_FROM=66c581c38c5039aa9ecc406f8aac0b7e3c6541fc",
        "before_after_code_files": [
          "examples/CC3200/cs_dbg.h||examples/CC3200/cs_dbg.h",
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "examples/CC3200/cs_dbg.h||examples/CC3200/cs_dbg.h": [
          "File: examples/CC3200/cs_dbg.h -> examples/CC3200/cs_dbg.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: void cs_log_set_file(FILE *file);",
          "44: void cs_log_print_prefix(const char *func);",
          "45: void cs_log_printf(const char *fmt, ...);",
          "47: #define LOG(l, x)                  \\",
          "49:     cs_log_print_prefix(__func__); \\",
          "50:     cs_log_printf x;               \\",
          "51:   }",
          "53: #ifndef CS_NDEBUG",
          "59:   }",
          "",
          "[Removed Lines]",
          "43: extern enum cs_log_level cs_log_level;",
          "48:   if (cs_log_level >= l) {         \\",
          "55: #define DBG(x)                            \\",
          "56:   if (cs_log_level >= LL_VERBOSE_DEBUG) { \\",
          "57:     cs_log_print_prefix(__func__);        \\",
          "58:     cs_log_printf x;                      \\",
          "",
          "[Added Lines]",
          "43: extern enum cs_log_level cs_log_threshold;",
          "48:   if (cs_log_threshold >= l) {     \\",
          "55: #define DBG(x)                                \\",
          "56:   if (cs_log_threshold >= LL_VERBOSE_DEBUG) { \\",
          "57:     cs_log_print_prefix(__func__);            \\",
          "58:     cs_log_printf x;                          \\",
          "",
          "---------------"
        ],
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "228: #if CS_ENABLE_STDIO",
          "230: void cs_log_set_file(FILE *file);",
          "233: void cs_log_printf(const char *fmt, ...);",
          "241:   } while (0)",
          "243: #ifndef CS_NDEBUG",
          "251:   } while (0)",
          "",
          "[Removed Lines]",
          "231: extern enum cs_log_level cs_log_level;",
          "232: void cs_log_print_prefix(const char *func);",
          "235: #define LOG(l, x)                    \\",
          "236:   do {                               \\",
          "237:     if (cs_log_level >= l) {         \\",
          "238:       cs_log_print_prefix(__func__); \\",
          "239:       cs_log_printf x;               \\",
          "240:     }                                \\",
          "245: #define DBG(x)                              \\",
          "246:   do {                                      \\",
          "247:     if (cs_log_level >= LL_VERBOSE_DEBUG) { \\",
          "248:       cs_log_print_prefix(__func__);        \\",
          "249:       cs_log_printf x;                      \\",
          "250:     }                                       \\",
          "",
          "[Added Lines]",
          "231: extern enum cs_log_level cs_log_threshold;",
          "232: void cs_log_print_prefix(enum cs_log_level level, const char *func);",
          "235: #define LOG(l, x)                       \\",
          "236:   do {                                  \\",
          "237:     if (cs_log_threshold >= l) {        \\",
          "238:       cs_log_print_prefix(l, __func__); \\",
          "239:       cs_log_printf x;                  \\",
          "240:     }                                   \\",
          "245: #define DBG(x)                                         \\",
          "246:   do {                                                 \\",
          "247:     if (cs_log_threshold >= LL_VERBOSE_DEBUG) {        \\",
          "248:       cs_log_print_prefix(LL_VERBOSE_DEBUG, __func__); \\",
          "249:       cs_log_printf x;                                 \\",
          "250:     }                                                  \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "288: #if CS_ENABLE_DEBUG",
          "289:     LL_VERBOSE_DEBUG;",
          "290: #else",
          "",
          "[Removed Lines]",
          "287: enum cs_log_level cs_log_level WEAK =",
          "",
          "[Added Lines]",
          "287: enum cs_log_level cs_log_threshold WEAK =",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "299: double cs_log_ts WEAK;",
          "300: #endif",
          "304:   char prefix[21];",
          "305:   strncpy(prefix, func, 20);",
          "306:   prefix[20] = '\\0';",
          "307:   if (cs_log_file == NULL) cs_log_file = stderr;",
          "308:   fprintf(cs_log_file, \"%-20s \", prefix);",
          "309: #if CS_LOG_ENABLE_TS_DIFF",
          "310:   {",
          "",
          "[Removed Lines]",
          "302: void cs_log_print_prefix(const char *func) WEAK;",
          "303: void cs_log_print_prefix(const char *func) {",
          "",
          "[Added Lines]",
          "302: enum cs_log_level cs_log_cur_msg_level WEAK = LL_NONE;",
          "304: void cs_log_print_prefix(enum cs_log_level level, const char *func) WEAK;",
          "305: void cs_log_print_prefix(enum cs_log_level level, const char *func) {",
          "310:   cs_log_cur_msg_level = level;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "323:   va_end(ap);",
          "324:   fputc('\\n', cs_log_file);",
          "325:   fflush(cs_log_file);",
          "326: }",
          "328: void cs_log_set_file(FILE *file) WEAK;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329:   cs_log_cur_msg_level = LL_NONE;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "335: void cs_log_set_level(enum cs_log_level level) WEAK;",
          "336: void cs_log_set_level(enum cs_log_level level) {",
          "338: #if CS_LOG_ENABLE_TS_DIFF && CS_ENABLE_STDIO",
          "339:   cs_log_ts = cs_time();",
          "340: #endif",
          "",
          "[Removed Lines]",
          "337:   cs_log_level = level;",
          "",
          "[Added Lines]",
          "341:   cs_log_threshold = level;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "12797: #define SPIFFS_FD_BASE 10",
          "12798: #define SLFS_FD_BASE 100",
          "12801: #if CS_PLATFORM == CS_P_CC3200",
          "12802: #include <inc/hw_types.h>",
          "12803: #include <inc/hw_memmap.h>",
          "",
          "[Removed Lines]",
          "12800: #ifndef MG_UART_CHAR_PUT",
          "",
          "[Added Lines]",
          "12804: #if !defined(MG_UART_CHAR_PUT) && !defined(MG_UART_WRITE)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "12806: #include <driverlib/uart.h>",
          "12807: #define MG_UART_CHAR_PUT(fd, c) MAP_UARTCharPut(UARTA0_BASE, c);",
          "12808: #else",
          "",
          "[Removed Lines]",
          "12809: #define MG_UART_CHAR_PUT(fd, c)",
          "",
          "[Added Lines]",
          "12813: #define MG_UART_WRITE(fd, buf, len)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "13035: ssize_t _write(int fd, const void *buf, size_t count) {",
          "13036: #endif",
          "13037:   int r = -1;",
          "13039:   switch (fd_type(fd)) {",
          "13040:     case FD_INVALID:",
          "13041:       r = set_errno(EBADF);",
          "",
          "[Removed Lines]",
          "13038:   size_t i = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "13045:         r = set_errno(EACCES);",
          "13046:         break;",
          "13047:       }",
          "13052:       }",
          "13053:       r = count;",
          "13054:       break;",
          "13055:     }",
          "",
          "[Removed Lines]",
          "13048:       for (i = 0; i < count; i++) {",
          "13049:         const char c = ((const char *) buf)[i];",
          "13050:         if (c == '\\n') MG_UART_CHAR_PUT(fd, '\\r');",
          "13051:         MG_UART_CHAR_PUT(fd, c);",
          "",
          "[Added Lines]",
          "13051: #ifdef MG_UART_WRITE",
          "13052:       MG_UART_WRITE(fd, buf, count);",
          "13053: #elif defined(MG_UART_CHAR_PUT)",
          "13054:       {",
          "13055:         size_t i;",
          "13056:         for (i = 0; i < count; i++) {",
          "13057:           const char c = ((const char *) buf)[i];",
          "13058:           if (c == '\\n') MG_UART_CHAR_PUT(fd, '\\r');",
          "13059:           MG_UART_CHAR_PUT(fd, c);",
          "13060:         }",
          "13062: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cfe77a3d5854853f3345c0e14e7bc126860d118f",
      "candidate_info": {
        "commit_hash": "cfe77a3d5854853f3345c0e14e7bc126860d118f",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/cfe77a3d5854853f3345c0e14e7bc126860d118f",
        "files": [
          "docs/c-api/http.h/struct_http_message.md",
          "mongoose.h"
        ],
        "message": "Move struct http_message::body\n\nRationale: this is the optimisation to make JS FFI-ed API\nwork nicer. We don't have strucuture introspection now,\nand do not generate offsets automatially. Thus, using a\nstable well-known location of the parsed message body is\nbetter, in case of number of HTTP headers macro changes.\n\nPUBLISHED_FROM=55bf25ac77060a9c81dfecd6601f037562530801",
        "before_after_code_files": [
          "mongoose.h||mongoose.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "mongoose.h||mongoose.h": [
          "File: mongoose.h -> mongoose.h"
        ]
      }
    },
    {
      "candidate_hash": "41558bbf643dc9efb9ff241894fc84cea2e5e781",
      "candidate_info": {
        "commit_hash": "41558bbf643dc9efb9ff241894fc84cea2e5e781",
        "repo": "cesanta/mongoose",
        "commit_url": "https://github.com/cesanta/mongoose/commit/41558bbf643dc9efb9ff241894fc84cea2e5e781",
        "files": [
          "mongoose.c"
        ],
        "message": "Fix formatting\n\nPUBLISHED_FROM=4d4d49136e13ba8035d452a4f64fcaf48f15bdb3",
        "before_after_code_files": [
          "mongoose.c||mongoose.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cesanta/mongoose/pull/855"
        ],
        "olp_code_files": {
          "patch": [
            "mongoose.c||mongoose.c"
          ],
          "candidate": [
            "mongoose.c||mongoose.c"
          ]
        }
      },
      "candidate_diff": {
        "mongoose.c||mongoose.c": [
          "File: mongoose.c -> mongoose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "14637:   struct udp_pcb *upcb = cs->pcb.udp;",
          "14638:   struct pbuf *p = pbuf_alloc(PBUF_TRANSPORT, len, PBUF_RAM);",
          "14639: #if defined(LWIP_IPV4) && LWIP_IPV4 && defined(LWIP_IPV6) && LWIP_IPV6",
          "14641: #else",
          "14643: #endif",
          "14644:   u16_t port = ntohs(nc->sa.sin.sin_port);",
          "14645:   if (p == NULL) {",
          "",
          "[Removed Lines]",
          "14640:   ip_addr_t ip = { .u_addr.ip4.addr = nc->sa.sin.sin_addr.s_addr, .type = 0 };",
          "14642:   ip_addr_t ip = { .addr = nc->sa.sin.sin_addr.s_addr };",
          "",
          "[Added Lines]",
          "14640:   ip_addr_t ip = {.u_addr.ip4.addr = nc->sa.sin.sin_addr.s_addr, .type = 0};",
          "14642:   ip_addr_t ip = {.addr = nc->sa.sin.sin_addr.s_addr};",
          "",
          "---------------"
        ]
      }
    }
  ]
}