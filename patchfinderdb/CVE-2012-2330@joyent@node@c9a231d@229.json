{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "be67fa7e095d47806983e126ef45639c7d9a2867",
      "candidate_info": {
        "commit_hash": "be67fa7e095d47806983e126ef45639c7d9a2867",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/be67fa7e095d47806983e126ef45639c7d9a2867",
        "files": [
          "src/node_crypto.cc",
          "src/node_crypto.h"
        ],
        "message": "Revert \"crypto: add SecureContext.clearOptions() method\"\n\nAPI addition needs to go in master. Also openssl-0.9.8k doesn't have\nSSL_CTX_clear_options().\n\nThis reverts commit 6f8839d2ac362ced42235a34a023af5e2c656501.",
        "before_after_code_files": [
          "src/node_crypto.cc||src/node_crypto.cc",
          "src/node_crypto.h||src/node_crypto.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:   NODE_SET_PROTOTYPE_METHOD(t, \"addRootCerts\", SecureContext::AddRootCerts);",
          "167:   NODE_SET_PROTOTYPE_METHOD(t, \"setCiphers\", SecureContext::SetCiphers);",
          "168:   NODE_SET_PROTOTYPE_METHOD(t, \"setOptions\", SecureContext::SetOptions);",
          "170:   NODE_SET_PROTOTYPE_METHOD(t, \"setSessionIdContext\",",
          "171:                                SecureContext::SetSessionIdContext);",
          "172:   NODE_SET_PROTOTYPE_METHOD(t, \"close\", SecureContext::Close);",
          "",
          "[Removed Lines]",
          "169:   NODE_SET_PROTOTYPE_METHOD(t, \"clearOptions\", SecureContext::ClearOptions);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "541:   return True();",
          "542: }",
          "554:   }",
          "562: Handle<Value> SecureContext::SetSessionIdContext(const Arguments& args) {",
          "563:   HandleScope scope;",
          "",
          "[Removed Lines]",
          "544: #define X(name, fn)                                                           \\",
          "545:   Handle<Value> name(const Arguments& args) {                                 \\",
          "546:     HandleScope scope;                                                        \\",
          "547:     SecureContext *sc = ObjectWrap::Unwrap<SecureContext>(args.Holder());     \\",
          "548:     if (args.Length() != 1 || !args[0]->IsInt32()) {                          \\",
          "549:       return ThrowException(                                                  \\",
          "550:           Exception::TypeError(String::New(\"Bad parameter\")));                \\",
          "551:     }                                                                         \\",
          "552:     fn(sc->ctx_, args[0]->Int32Value());                                      \\",
          "553:     return True();                                                            \\",
          "557: X(SecureContext::SetOptions,   SSL_CTX_set_options)",
          "558: X(SecureContext::ClearOptions, SSL_CTX_clear_options)",
          "560: #undef X",
          "",
          "[Added Lines]",
          "543: Handle<Value> SecureContext::SetOptions(const Arguments& args) {",
          "544:   HandleScope scope;",
          "546:   SecureContext *sc = ObjectWrap::Unwrap<SecureContext>(args.Holder());",
          "548:   if (args.Length() != 1 || !args[0]->IsUint32()) {",
          "549:     return ThrowException(Exception::TypeError(String::New(\"Bad parameter\")));",
          "552:   unsigned int opts = args[0]->Uint32Value();",
          "554:   SSL_CTX_set_options(sc->ctx_, opts);",
          "556:   return True();",
          "557: }",
          "",
          "---------------"
        ],
        "src/node_crypto.h||src/node_crypto.h": [
          "File: src/node_crypto.h -> src/node_crypto.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:   static v8::Handle<v8::Value> AddRootCerts(const v8::Arguments& args);",
          "67:   static v8::Handle<v8::Value> SetCiphers(const v8::Arguments& args);",
          "68:   static v8::Handle<v8::Value> SetOptions(const v8::Arguments& args);",
          "70:   static v8::Handle<v8::Value> SetSessionIdContext(const v8::Arguments& args);",
          "71:   static v8::Handle<v8::Value> Close(const v8::Arguments& args);",
          "",
          "[Removed Lines]",
          "69:   static v8::Handle<v8::Value> ClearOptions(const v8::Arguments& args);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2ba4cef2af79b89b0b1a201496ee134f4891b7f",
      "candidate_info": {
        "commit_hash": "f2ba4cef2af79b89b0b1a201496ee134f4891b7f",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f2ba4cef2af79b89b0b1a201496ee134f4891b7f",
        "files": [
          "node.gyp"
        ],
        "message": "build: remove the old -DPLATFORM=\"mac\" define\n\nTo prevent redefinition warnings.",
        "before_after_code_files": [
          "node.gyp||node.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:         }],",
          "179:         [ 'OS==\"mac\"', {",
          "180:           'libraries': [ '-framework Carbon' ],",
          "181:           'defines': [",
          "182:             # we need to use node's preferred \"darwin\" rather than gyp's preferred \"mac\"",
          "183:             'PLATFORM=\"darwin\"',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "181:           'defines!': [",
          "182:             'PLATFORM=\"mac\"',",
          "183:           ],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7543c38dca2b4c64711f5667b82d80ffab3fd6a2",
      "candidate_info": {
        "commit_hash": "7543c38dca2b4c64711f5667b82d80ffab3fd6a2",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7543c38dca2b4c64711f5667b82d80ffab3fd6a2",
        "files": [
          "src/node.cc"
        ],
        "message": "Revert \"Add explicit v8 locker\"\n\nThis reverts commit 11d1eca9f3c465045828e3a00b103620c8253258.\n\nIt sporadically (but reproducibly) triggers an assert inside V8:\n\n  Fatal error in /path/to/node/deps/v8/src/isolate.cc, line 1857\n  CHECK(CurrentPerIsolateThreadData()->isolate_ == this) failed\n\nNeeds further investigation.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2633:   argv = Init(argc, argv);",
          "2635:   v8::V8::Initialize();",
          "2637:   v8::HandleScope handle_scope;",
          "",
          "[Removed Lines]",
          "2636:   v8::Locker locker;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "46e86aa80348dd8e31ade16a3b19eeee6baee0de",
      "candidate_info": {
        "commit_hash": "46e86aa80348dd8e31ade16a3b19eeee6baee0de",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/46e86aa80348dd8e31ade16a3b19eeee6baee0de",
        "files": [
          "lib/dgram.js",
          "src/udp_wrap.cc",
          "test/simple/test-dgram-multicast-multi-process.js"
        ],
        "message": "dgram: bring back setMulticastLoopback()",
        "before_after_code_files": [
          "lib/dgram.js||lidgram.js",
          "src/udp_wrap.cc||src/udp_wrap.cc",
          "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/dgram.js||lidgram.js": [
          "File: lib/dgram.js -> lidgram.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "250: Socket.prototype.setMulticastLoopback = function(arg) {",
          "252: };",
          "",
          "[Removed Lines]",
          "251:   throw new Error('not yet implemented');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/udp_wrap.cc||src/udp_wrap.cc": [
          "File: src/udp_wrap.cc -> src/udp_wrap.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:   static Handle<Value> AddMembership(const Arguments& args);",
          "95:   static Handle<Value> DropMembership(const Arguments& args);",
          "96:   static Handle<Value> SetMulticastTTL(const Arguments& args);",
          "97:   static Handle<Value> SetBroadcast(const Arguments& args);",
          "99: private:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:   static Handle<Value> SetMulticastLoopback(const Arguments& args);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156:   NODE_SET_PROTOTYPE_METHOD(t, \"addMembership\", AddMembership);",
          "157:   NODE_SET_PROTOTYPE_METHOD(t, \"dropMembership\", DropMembership);",
          "158:   NODE_SET_PROTOTYPE_METHOD(t, \"setMulticastTTL\", SetMulticastTTL);",
          "159:   NODE_SET_PROTOTYPE_METHOD(t, \"setBroadcast\", SetBroadcast);",
          "161:   target->Set(String::NewSymbol(\"UDP\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "160:   NODE_SET_PROTOTYPE_METHOD(t, \"setMulticastLoopback\", SetMulticastLoopback);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "277:   return scope.Close(Integer::New(r));",
          "278: }",
          "280: Handle<Value> UDPWrap::DoSend(const Arguments& args, int family) {",
          "281:   HandleScope scope;",
          "282:   int r;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "284: Handle<Value> UDPWrap::SetMulticastLoopback(const Arguments& args) {",
          "285:   HandleScope scope;",
          "286:   UNWRAP",
          "288:   assert(args.Length() == 1);",
          "290:   int on = args[0]->Int32Value();",
          "291:   int r = uv_udp_set_multicast_loop(&wrap->handle_, on);",
          "293:   if (r)",
          "294:     SetErrno(uv_last_error(uv_default_loop()));",
          "296:   return scope.Close(Integer::New(r));",
          "297: }",
          "",
          "---------------"
        ],
        "test/simple/test-dgram-multicast-multi-process.js||test/simple/test-dgram-multicast-multi-process.js": [
          "File: test/simple/test-dgram-multicast-multi-process.js -> test/simple/test-dgram-multicast-multi-process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:   }",
          "100:   var sendSocket = dgram.createSocket('udp4');",
          "106:   sendSocket.on('close', function() {",
          "107:     console.error('sendSocket closed');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:   sendSocket.bind(); // FIXME a libuv limitation makes it necessary to bind()",
          "105:   sendSocket.setBroadcast(true);",
          "106:   sendSocket.setMulticastTTL(1);",
          "107:   sendSocket.setMulticastLoopback(true);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1afd0b52fe9bb4642a44b48dabf9d7b26d00e4ab",
      "candidate_info": {
        "commit_hash": "1afd0b52fe9bb4642a44b48dabf9d7b26d00e4ab",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1afd0b52fe9bb4642a44b48dabf9d7b26d00e4ab",
        "files": [
          "tools/addon.gypi",
          "tools/gyp_addon",
          "tools/installer.js",
          "tools/node-gyp"
        ],
        "message": "Revert \"gyp: install node-gyp\"\n\nNo.\n\nThis reverts commit 3d1476a3168effe3edb32510f56cf9b00bce8392.",
        "before_after_code_files": [
          "tools/addon.gypi||tools/addon.gypi",
          "tools/installer.js||tools/installer.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/addon.gypi||tools/addon.gypi": [
          "File: tools/addon.gypi -> tools/addon.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:     'type': 'loadable_module',",
          "4:     'product_extension': 'node',",
          "5:     'product_prefix': '',",
          "7:     'conditions': [",
          "8:       [ 'OS==\"mac\"', {",
          "20:       }]",
          "21:     ]",
          "22:   }",
          "",
          "[Removed Lines]",
          "9:         'libraries': [ '-undefined dynamic_lookup' ]",
          "10:       }],",
          "11:       [ 'OS==\"win\"', {",
          "12:         'include_dirs': [",
          "13:           '../src',",
          "14:           '../deps/uv/include',",
          "15:           '../deps/v8/include'",
          "16:         ],",
          "17:         'libraries': [ '-l<(node_root_dir>/Debug/node.lib' ],",
          "18:       }, {",
          "19:         'include_dirs': ['../../../include/node']",
          "",
          "[Added Lines]",
          "6:     'include_dirs': [",
          "7:       '../src',",
          "8:       '../deps/uv/include',",
          "9:       '../deps/v8/include'",
          "10:     ],",
          "14:         'libraries': [ '-undefined dynamic_lookup' ],",
          "",
          "---------------"
        ],
        "tools/installer.js||tools/installer.js": [
          "File: tools/installer.js -> tools/installer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:   copy([",
          "94:     'deps/uv/include/ares.h',",
          "95:     'deps/uv/include/ares_version.h'",
          "105:   copy('out/Release/node', 'bin/node');",
          "",
          "[Removed Lines]",
          "96:   ], 'include/node/');",
          "99:   copy('common.gypi', 'lib/node/');",
          "100:   copy('tools/*', 'lib/node/tools/');",
          "101:   queue.push('ln -sf ../lib/node/tools/node-gyp ' +",
          "102:              path.join(node_prefix, 'bin/node-gyp'));",
          "",
          "[Added Lines]",
          "96:   ], 'include/node/c-ares/');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:   }",
          "113: } else {",
          "114:   remove([",
          "117:   ]);",
          "118: }",
          "",
          "[Removed Lines]",
          "115:      'bin/node', 'bin/npm', 'bin/node-gyp', 'include/node/*',",
          "116:      'lib/node', 'lib/node_modules'",
          "",
          "[Added Lines]",
          "109:      'bin/node', 'bin/npm', 'include/node/*', 'lib/node_modules'",
          "",
          "---------------"
        ]
      }
    }
  ]
}