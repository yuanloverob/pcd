{
  "cve_id": "CVE-2019-19603",
  "cve_desc": "SQLite 3.30.1 mishandles certain SELECT statements with a nonexistent VIEW, leading to an application crash.",
  "repo": "sqlite/sqlite",
  "patch_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
  "patch_info": {
    "commit_hash": "527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/527cbd4a104cb93bf3994b3dd3619a6299a78b13",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/build.c",
      "src/sqliteInt.h",
      "test/altertab.test"
    ],
    "message": "Do not allow CREATE TABLE or CREATE VIEW of an object with a name that looks like a shadow table name.\n\nFossilOrigin-Name: 6aef58b629d89955f85f65191ba2be67b2adfac4f0327fe9a7141cb2705dbc00",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/build.c||src/build.c",
      "src/sqliteInt.h||src/sqliteInt.h",
      "test/altertab.test||test/altertab.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8ad34d36a141fa8f5d9bd784dfeb892c983897a6dc6b867607cc668508acf944",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/build.c||src/build.c": [
      "File: src/build.c -> src/build.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "856:       }",
      "857:     }",
      "858:   }else{",
      "861:     ){",
      "862:       sqlite3ErrorMsg(pParse, \"object name reserved for internal use: %s\",",
      "863:                       zName);",
      "864:       return SQLITE_ERROR;",
      "865:     }",
      "866:   }",
      "867:   return SQLITE_OK;",
      "868: }",
      "",
      "[Removed Lines]",
      "859:     if( pParse->nested==0",
      "860:      && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7)",
      "",
      "[Added Lines]",
      "859:     if( (pParse->nested==0 && 0==sqlite3StrNICmp(zName, \"sqlite_\", 7))",
      "860:      || (sqlite3ReadOnlyShadowTables(db) && sqlite3ShadowTableName(db, zName))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2132: static int isShadowTableName(sqlite3 *db, char *zName){",
      "",
      "[Added Lines]",
      "2133: int sqlite3ShadowTableName(sqlite3 *db, const char *zName){",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2147:   if( pMod->pModule->xShadowName==0 ) return 0;",
      "2148:   return pMod->pModule->xShadowName(zTail+1);",
      "2149: }",
      "",
      "[Removed Lines]",
      "2150: #else",
      "2151: # define isShadowTableName(x,y) 0",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2190:   p = pParse->pNewTable;",
      "2191:   if( p==0 ) return;",
      "2194:     p->tabFlags |= TF_Shadow;",
      "2195:   }",
      "",
      "[Removed Lines]",
      "2193:   if( pSelect==0 && isShadowTableName(db, p->zName) ){",
      "",
      "[Added Lines]",
      "2192:   if( pSelect==0 && sqlite3ShadowTableName(db, p->zName) ){",
      "",
      "---------------"
    ],
    "src/sqliteInt.h||src/sqliteInt.h": [
      "File: src/sqliteInt.h -> src/sqliteInt.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "4548: #  define sqlite3VtabInSync(db) ((db)->nVTrans>0 && (db)->aVTrans==0)",
      "4549: #endif",
      "4550: int sqlite3ReadOnlyShadowTables(sqlite3 *db);",
      "4551: int sqlite3VtabEponymousTableInit(Parse*,Module*);",
      "4552: void sqlite3VtabEponymousTableClear(sqlite3*,Module*);",
      "4553: void sqlite3VtabMakeWritable(Parse*,Table*);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4551: #ifndef SQLITE_OMIT_VIRTUALTABLE",
      "4552:   int sqlite3ShadowTableName(sqlite3 *db, const char *zName);",
      "4553: #else",
      "4554: # define sqlite3ShadowTableName(A,B) 0",
      "4555: #endif",
      "",
      "---------------"
    ],
    "test/altertab.test||test/altertab.test": [
      "File: test/altertab.test -> test/altertab.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "547:   } {1 {table y1_segments may not be modified}}",
      "549:   do_catchsql_test 16.20 {",
      "554:     DROP TABLE y1_segments;",
      "555:   } {1 {table y1_segments may not be dropped}}",
      "557:   do_execsql_test 16.30 {",
      "558:     ALTER TABLE y1 RENAME TO z1;",
      "559:   }",
      "",
      "[Removed Lines]",
      "550:     ALTER TABLE y1_segments RENAME TO abc;",
      "551:   } {1 {table y1_segments may not be altered}}",
      "553:   do_catchsql_test 16.21 {",
      "",
      "[Added Lines]",
      "553:   do_catchsql_test 16.20 {",
      "554:     ALTER TABLE y1_segments RENAME TO abc;",
      "555:   } {1 {table y1_segments may not be altered}}",
      "556:   sqlite3_db_config db DEFENSIVE 0",
      "557:   do_catchsql_test 16.22 {",
      "558:     ALTER TABLE y1_segments RENAME TO abc;",
      "559:   } {0 {}}",
      "560:   sqlite3_db_config db DEFENSIVE 1",
      "561:   do_catchsql_test 16.23 {",
      "562:     CREATE TABLE y1_segments AS SELECT * FROM abc;",
      "563:   } {1 {object name reserved for internal use: y1_segments}}",
      "564:   do_catchsql_test 16.24 {",
      "565:     CREATE VIEW y1_segments AS SELECT * FROM abc;",
      "566:   } {1 {object name reserved for internal use: y1_segments}}",
      "567:   sqlite3_db_config db DEFENSIVE 0",
      "568:   do_catchsql_test 16.25 {",
      "569:     ALTER TABLE abc RENAME TO y1_segments;",
      "570:   } {0 {}}",
      "571:   sqlite3_db_config db DEFENSIVE 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "94f4f873b2bed7fac3df8e96125d087eb9de9532",
      "candidate_info": {
        "commit_hash": "94f4f873b2bed7fac3df8e96125d087eb9de9532",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/94f4f873b2bed7fac3df8e96125d087eb9de9532",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c",
          "test/misc1.test"
        ],
        "message": "Do not set the Cursor.seekOp test variable in the OP_NotExists opcode. This is a change to test logic only and does not affect deliverable builds.\n\nFossilOrigin-Name: 98f343077887c4d3fc2ca3bbc7f20c80ec37b0e521d70af9c986ab80bb2c7903",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c",
          "test/misc1.test||test/misc1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 16fff05347f42fe9fa0f3150290b98b59a9bb921e49dc07ca397aa1de7a7e17d",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4342:   pC = p->apCsr[pOp->p1];",
          "4343:   assert( pC!=0 );",
          "4344: #ifdef SQLITE_DEBUG",
          "4346: #endif",
          "4347:   assert( pC->isTable );",
          "4348:   assert( pC->eCurType==CURTYPE_BTREE );",
          "",
          "[Removed Lines]",
          "4345:   pC->seekOp = OP_SeekRowid;",
          "",
          "[Added Lines]",
          "4345:   if( pOp->opcode==OP_SeekRowid ) pC->seekOp = OP_SeekRowid;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5250:   assert( pOp->opcode!=OP_Next",
          "5251:        || pC->seekOp==OP_SeekGT || pC->seekOp==OP_SeekGE",
          "5252:        || pC->seekOp==OP_Rewind || pC->seekOp==OP_Found",
          "5254:   assert( pOp->opcode!=OP_Prev",
          "5255:        || pC->seekOp==OP_SeekLT || pC->seekOp==OP_SeekLE",
          "5256:        || pC->seekOp==OP_Last",
          "",
          "[Removed Lines]",
          "5253:        || pC->seekOp==OP_NullRow);",
          "",
          "[Added Lines]",
          "5253:        || pC->seekOp==OP_NullRow|| pC->seekOp==OP_SeekRowid);",
          "",
          "---------------"
        ],
        "test/misc1.test||test/misc1.test": [
          "File: test/misc1.test -> test/misc1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "744:   SELECT a,b,c FROM dup1;",
          "745: } {10 11 12}",
          "748: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "747: # 2018-12-20",
          "748: #",
          "749: # The Cursor.seekOp debugging value set incorrectly",
          "750: # in OP_NotExists.",
          "751: #",
          "752: sqlite3 db :memory:",
          "753: do_execsql_test misc1-28.0 {",
          "754:   CREATE TABLE t1(x);",
          "755:   CREATE UNIQUE INDEX t1x ON t1(x) WHERE x=1;",
          "756:   INSERT OR ABORT INTO t1 DEFAULT VALUES;",
          "757:   UPDATE OR REPLACE t1 SET x = 1;",
          "758:   PRAGMA integrity_check;",
          "759:   SELECT * FROM t1;",
          "760: } {ok 1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "546738f855d8c7e01c1d04b287040938ffeed81c",
      "candidate_info": {
        "commit_hash": "546738f855d8c7e01c1d04b287040938ffeed81c",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/546738f855d8c7e01c1d04b287040938ffeed81c",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/nulls1.test"
        ],
        "message": "Further tests for the special null-handling on this branch.\n\nFossilOrigin-Name: 0dbbb51f4d39cafb01d625d65c12dcb232a9c1da7ed5a9397bf55cfea1b980d2",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/nulls1.test||test/nulls1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 09d660ecde723fb30f3bb3684bbb7f95825d78da6a6f33ddf57846054cd563e0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/nulls1.test||test/nulls1.test": [
          "File: test/nulls1.test -> test/nulls1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "201:   `--SEARCH TABLE t4 USING INDEX t4ab (a=?)",
          "202: }",
          "204: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204: #-------------------------------------------------------------------------",
          "205: #",
          "206: do_execsql_test 6.0 {",
          "207:   CREATE TABLE t5(a, b, c);",
          "208:   WITH s(i) AS (",
          "209:     VALUES(1) UNION ALL SELECT i+1 FROM s WHERE i<200",
          "210:   )",
          "211:   INSERT INTO t5 SELECT i%2, CASE WHEN (i%10)==0 THEN NULL ELSE i END, i FROM s;",
          "212: }",
          "214: set res1 [db eval { SELECT a,b FROM t5 WHERE a=1 ORDER BY b NULLS LAST, c }]",
          "215: set res2 [db eval {",
          "216:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b DESC NULLS FIRST, c DESC",
          "217: }]",
          "219: do_execsql_test 6.1.1 {",
          "220:   CREATE INDEX t5ab ON t5(a, b, c);",
          "221:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b NULLS LAST, c;",
          "222: } $res1",
          "223: do_eqp_test 6.1.2 {",
          "224:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b NULLS LAST, c;",
          "225: } {",
          "226:   QUERY PLAN",
          "227:   `--SEARCH TABLE t5 USING COVERING INDEX t5ab (a=?)",
          "228: }",
          "229: do_execsql_test 6.2.1 {",
          "230:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b DESC NULLS FIRST, c DESC",
          "231: } $res2",
          "232: do_eqp_test 6.2.2 {",
          "233:   SELECT a,b FROM t5 WHERE a=1 ORDER BY b DESC NULLS FIRST, c DESC",
          "234: } {",
          "235:   QUERY PLAN",
          "236:   `--SEARCH TABLE t5 USING COVERING INDEX t5ab (a=?)",
          "237: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3e086d80362607fcee57c3e9d9a5c9eef9fbcfc",
      "candidate_info": {
        "commit_hash": "a3e086d80362607fcee57c3e9d9a5c9eef9fbcfc",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a3e086d80362607fcee57c3e9d9a5c9eef9fbcfc",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/recover.test"
        ],
        "message": "Fix an incompatibility with auto-vacuum mode in new test script recover.test.\n\nFossilOrigin-Name: 36dd5b0804797a35d0dc596b6ca4f71813a155c5a470237ab6e3d1bcd9ccc6be",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/recover.test||test/recover.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 07e527d781838412b2a434e64baaa49cbf7410a51c7393f54adc7b8eaffd5229",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/recover.test||test/recover.test": [
          "File: test/recover.test -> test/recover.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "91: #-------------------------------------------------------------------------",
          "92: reset_db",
          "93: do_execsql_test 2.1.0 {",
          "94:   CREATE TABLE t1(a, b, c, PRIMARY KEY(b, c)) WITHOUT ROWID;",
          "95:   INSERT INTO t1 VALUES(1, 2, 3);",
          "96:   INSERT INTO t1 VALUES(4, 5, 6);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:   PRAGMA auto_vacuum = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7bbdc3c59722b6626efbbfe7ad1a23748477403a",
      "candidate_info": {
        "commit_hash": "7bbdc3c59722b6626efbbfe7ad1a23748477403a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/7bbdc3c59722b6626efbbfe7ad1a23748477403a",
        "files": [
          "README.md",
          "manifest",
          "manifest.uuid",
          "src/parse.y"
        ],
        "message": "Remove some stale references to the addopcodes.tcl script from documentation.\n\nFossilOrigin-Name: c0381b0bc90aa3c2415c4b3ac338cfe6d308bb5d4247bc6f2b6e919f549c254c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d272819298083ebbde57962a2938925b1aaa1caf03e48bb3ea26ad91e0461d84",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y"
        ]
      }
    },
    {
      "candidate_hash": "c0f162020ec27bd7cc93c17f3f7e0e91c72f51e4",
      "candidate_info": {
        "commit_hash": "c0f162020ec27bd7cc93c17f3f7e0e91c72f51e4",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/c0f162020ec27bd7cc93c17f3f7e0e91c72f51e4",
        "files": [
          "ext/rtree/rtree.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a possible memory leak when trying to UPDATE a corrupt RTREE index.\n\nFossilOrigin-Name: 63eb803dbc27077007dbee8def659d1523724eb73f1def1cdb68027e5c20843a",
        "before_after_code_files": [
          "ext/rtree/rtree.c||ext/rtree/rtree.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtree.c||ext/rtree/rtree.c": [
          "File: ext/rtree/rtree.c -> ext/rtree/rtree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "717:       pNode->pNext = 0;",
          "718:       rc = sqlite3_blob_read(pRtree->pNodeBlob, pNode->zData,",
          "719:                              pRtree->iNodeSize, 0);",
          "721:     }",
          "722:   }",
          "",
          "[Removed Lines]",
          "720:       nodeReference(pParent);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "749:   if( rc==SQLITE_OK ){",
          "750:     if( pNode!=0 ){",
          "751:       nodeHashInsert(pRtree, pNode);",
          "752:     }else{",
          "753:       rc = SQLITE_CORRUPT_VTAB;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "750:       nodeReference(pParent);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 673a7dd698eca05bb2909fa01f962a0667361732a6d0e61cf7780ead4a07c967",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}