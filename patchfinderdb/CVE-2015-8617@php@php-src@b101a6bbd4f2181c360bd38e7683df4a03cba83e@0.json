{
  "cve_id": "CVE-2015-8617",
  "cve_desc": "Format string vulnerability in the zend_throw_or_error function in Zend/zend_execute_API.c in PHP 7.x before 7.0.1 allows remote attackers to execute arbitrary code via format string specifiers in a string that is misused as a class name, leading to incorrect error handling.",
  "repo": "php/php-src",
  "patch_hash": "b101a6bbd4f2181c360bd38e7683df4a03cba83e",
  "patch_info": {
    "commit_hash": "b101a6bbd4f2181c360bd38e7683df4a03cba83e",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/b101a6bbd4f2181c360bd38e7683df4a03cba83e",
    "files": [
      "Zend/zend_execute_API.c"
    ],
    "message": "Use format string",
    "before_after_code_files": [
      "Zend/zend_execute_API.c||Zend/zend_execute_API.c"
    ]
  },
  "patch_diff": {
    "Zend/zend_execute_API.c||Zend/zend_execute_API.c": [
      "File: Zend/zend_execute_API.c -> Zend/zend_execute_API.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "218:  zend_vspprintf(&message, 0, format, va);",
      "220:  if (fetch_type & ZEND_FETCH_CLASS_EXCEPTION) {",
      "222:  } else {",
      "223:   zend_error(E_ERROR, \"%s\", message);",
      "224:  }",
      "",
      "[Removed Lines]",
      "221:   zend_throw_error(exception_ce, message);",
      "",
      "[Added Lines]",
      "221:   zend_throw_error(exception_ce, \"%s\", message);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "02623ddb828689d3eb4e60bba9124cccbf65ec6b",
      "candidate_info": {
        "commit_hash": "02623ddb828689d3eb4e60bba9124cccbf65ec6b",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/02623ddb828689d3eb4e60bba9124cccbf65ec6b",
        "files": [
          "Zend/zend_execute_API.c"
        ],
        "message": "Switch macro with __VA_ARGS__ to function",
        "before_after_code_files": [
          "Zend/zend_execute_API.c||Zend/zend_execute_API.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_execute_API.c||Zend/zend_execute_API.c"
          ],
          "candidate": [
            "Zend/zend_execute_API.c||Zend/zend_execute_API.c"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_execute_API.c||Zend/zend_execute_API.c": [
          "File: Zend/zend_execute_API.c -> Zend/zend_execute_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "211: }",
          "215: {",
          "216:  if (CG(unclean_shutdown)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215: {",
          "216:  va_list va;",
          "217:  char *message = NULL;",
          "219:  va_start(va, format);",
          "220:  zend_vspprintf(&message, 0, format, va);",
          "222:  if (fetch_type & ZEND_FETCH_CLASS_EXCEPTION) {",
          "223:   zend_throw_error(exception_ce, message);",
          "224:  } else {",
          "225:   zend_error(E_ERROR, message);",
          "226:  }",
          "228:  efree(message);",
          "229:  va_end(va);",
          "230: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "527: #define MARK_CONSTANT_VISITED(p) Z_TYPE_INFO_P(p) |= IS_VISITED_CONSTANT",
          "528: #define RESET_CONSTANT_VISITED(p) Z_TYPE_INFO_P(p) &= ~IS_VISITED_CONSTANT",
          "538: {",
          "539:  zval *const_value;",
          "",
          "[Removed Lines]",
          "530: #define THROW_OR_ERROR(fetch_type, ce, message, ...)               \\",
          "531:  if (fetch_type & ZEND_FETCH_CLASS_EXCEPTION) {                 \\",
          "532:   zend_throw_error(ce, message, ##__VA_ARGS__); \\",
          "533:  } else {                                                       \\",
          "534:   zend_error(E_ERROR, message, ##__VA_ARGS__);               \\",
          "535:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1321:  switch (fetch_sub_type) {",
          "1322:   case ZEND_FETCH_CLASS_SELF:",
          "1323:    if (UNEXPECTED(!EG(scope))) {",
          "1325:    }",
          "1326:    return EG(scope);",
          "1327:   case ZEND_FETCH_CLASS_PARENT:",
          "1328:    if (UNEXPECTED(!EG(scope))) {",
          "1330:     return NULL;",
          "1331:    }",
          "1332:    if (UNEXPECTED(!EG(scope)->parent)) {",
          "1334:    }",
          "1335:    return EG(scope)->parent;",
          "1336:   case ZEND_FETCH_CLASS_STATIC:",
          "1337:    ce = zend_get_called_scope(EG(current_execute_data));",
          "1338:    if (UNEXPECTED(!ce)) {",
          "1340:     return NULL;",
          "1341:    }",
          "1342:    return ce;",
          "",
          "[Removed Lines]",
          "1324:     THROW_OR_ERROR(fetch_type, zend_ce_error, \"Cannot access self:: when no class scope is active\")",
          "1329:     THROW_OR_ERROR(fetch_type, zend_ce_error, \"Cannot access parent:: when no class scope is active\");",
          "1333:     THROW_OR_ERROR(fetch_type, zend_ce_error, \"Cannot access parent:: when current class scope has no parent\");",
          "1339:     THROW_OR_ERROR(fetch_type, zend_ce_error, \"Cannot access static:: when no class scope is active\");",
          "",
          "[Added Lines]",
          "1336:     zend_throw_or_error(fetch_type, zend_ce_error, \"Cannot access self:: when no class scope is active\");",
          "1341:     zend_throw_or_error(fetch_type, zend_ce_error, \"Cannot access parent:: when no class scope is active\");",
          "1345:     zend_throw_or_error(fetch_type, zend_ce_error, \"Cannot access parent:: when current class scope has no parent\");",
          "1351:     zend_throw_or_error(fetch_type, zend_ce_error, \"Cannot access static:: when no class scope is active\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1354:  } else if ((ce = zend_lookup_class_ex(class_name, NULL, 1)) == NULL) {",
          "1355:   if (!(fetch_type & ZEND_FETCH_CLASS_SILENT) && !EG(exception)) {",
          "1356:    if (fetch_sub_type == ZEND_FETCH_CLASS_INTERFACE) {",
          "1358:    } else if (fetch_sub_type == ZEND_FETCH_CLASS_TRAIT) {",
          "1360:    } else {",
          "1362:    }",
          "1363:   }",
          "1364:   return NULL;",
          "",
          "[Removed Lines]",
          "1357:     THROW_OR_ERROR(fetch_type, zend_ce_error, \"Interface '%s' not found\", ZSTR_VAL(class_name));",
          "1359:     THROW_OR_ERROR(fetch_type, zend_ce_error, \"Trait '%s' not found\", ZSTR_VAL(class_name));",
          "1361:     THROW_OR_ERROR(fetch_type, zend_ce_error, \"Class '%s' not found\", ZSTR_VAL(class_name));",
          "",
          "[Added Lines]",
          "1369:     zend_throw_or_error(fetch_type, zend_ce_error, \"Interface '%s' not found\", ZSTR_VAL(class_name));",
          "1371:     zend_throw_or_error(fetch_type, zend_ce_error, \"Trait '%s' not found\", ZSTR_VAL(class_name));",
          "1373:     zend_throw_or_error(fetch_type, zend_ce_error, \"Class '%s' not found\", ZSTR_VAL(class_name));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1376:  } else if ((ce = zend_lookup_class_ex(class_name, key, 1)) == NULL) {",
          "1377:   if ((fetch_type & ZEND_FETCH_CLASS_SILENT) == 0 && !EG(exception)) {",
          "1378:    if ((fetch_type & ZEND_FETCH_CLASS_MASK) == ZEND_FETCH_CLASS_INTERFACE) {",
          "1380:    } else if ((fetch_type & ZEND_FETCH_CLASS_MASK) == ZEND_FETCH_CLASS_TRAIT) {",
          "1382:    } else {",
          "1384:    }",
          "1385:   }",
          "1386:   return NULL;",
          "",
          "[Removed Lines]",
          "1379:     THROW_OR_ERROR(fetch_type, zend_ce_error, \"Interface '%s' not found\", ZSTR_VAL(class_name));",
          "1381:     THROW_OR_ERROR(fetch_type, zend_ce_error, \"Trait '%s' not found\", ZSTR_VAL(class_name));",
          "1383:     THROW_OR_ERROR(fetch_type, zend_ce_error, \"Class '%s' not found\", ZSTR_VAL(class_name));",
          "",
          "[Added Lines]",
          "1391:     zend_throw_or_error(fetch_type, zend_ce_error, \"Interface '%s' not found\", ZSTR_VAL(class_name));",
          "1393:     zend_throw_or_error(fetch_type, zend_ce_error, \"Trait '%s' not found\", ZSTR_VAL(class_name));",
          "1395:     zend_throw_or_error(fetch_type, zend_ce_error, \"Class '%s' not found\", ZSTR_VAL(class_name));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9374ba35c4fc9cd9dda3d2e7edfe3d690d4733d3",
      "candidate_info": {
        "commit_hash": "9374ba35c4fc9cd9dda3d2e7edfe3d690d4733d3",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/9374ba35c4fc9cd9dda3d2e7edfe3d690d4733d3",
        "files": [
          "Zend/zend_execute_API.c"
        ],
        "message": "Use format string",
        "before_after_code_files": [
          "Zend/zend_execute_API.c||Zend/zend_execute_API.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "Zend/zend_execute_API.c||Zend/zend_execute_API.c"
          ],
          "candidate": [
            "Zend/zend_execute_API.c||Zend/zend_execute_API.c"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_execute_API.c||Zend/zend_execute_API.c": [
          "File: Zend/zend_execute_API.c -> Zend/zend_execute_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "218:  zend_vspprintf(&message, 0, format, va);",
          "220:  if (fetch_type & ZEND_FETCH_CLASS_EXCEPTION) {",
          "222:  } else {",
          "223:   zend_error(E_ERROR, \"%s\", message);",
          "224:  }",
          "",
          "[Removed Lines]",
          "221:   zend_throw_error(exception_ce, message);",
          "",
          "[Added Lines]",
          "221:   zend_throw_error(exception_ce, \"%s\", message);",
          "",
          "---------------"
        ]
      }
    }
  ]
}