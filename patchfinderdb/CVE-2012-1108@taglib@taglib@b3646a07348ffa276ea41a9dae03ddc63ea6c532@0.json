{
  "cve_id": "CVE-2012-1108",
  "cve_desc": "The parse function in ogg/xiphcomment.cpp in TagLib 1.7 and earlier allows remote attackers to cause a denial of service (crash) via a crafted vendorLength field in an ogg file.",
  "repo": "taglib/taglib",
  "patch_hash": "b3646a07348ffa276ea41a9dae03ddc63ea6c532",
  "patch_info": {
    "commit_hash": "b3646a07348ffa276ea41a9dae03ddc63ea6c532",
    "repo": "taglib/taglib",
    "commit_url": "https://github.com/taglib/taglib/commit/b3646a07348ffa276ea41a9dae03ddc63ea6c532",
    "files": [
      "taglib/ogg/xiphcomment.cpp"
    ],
    "message": "Be more careful when parsing Vorbis Comments",
    "before_after_code_files": [
      "taglib/ogg/xiphcomment.cpp||taglib/ogg/xiphcomment.cpp"
    ]
  },
  "patch_diff": {
    "taglib/ogg/xiphcomment.cpp||taglib/ogg/xiphcomment.cpp": [
      "File: taglib/ogg/xiphcomment.cpp -> taglib/ogg/xiphcomment.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "299:   pos += 4;",
      "307:     pos += 4;",
      "309:     String comment = String(data.mid(pos, commentLength), String::UTF8);",
      "310:     pos += commentLength;",
      "312:     int commentSeparatorPosition = comment.find(\"=\");",
      "314:     String key = comment.substr(0, commentSeparatorPosition);",
      "315:     String value = comment.substr(commentSeparatorPosition + 1);",
      "",
      "[Removed Lines]",
      "298:   int commentFields = data.mid(pos, 4).toUInt(false);",
      "301:   for(int i = 0; i < commentFields; i++) {",
      "306:     int commentLength = data.mid(pos, 4).toUInt(false);",
      "",
      "[Added Lines]",
      "298:   uint commentFields = data.mid(pos, 4).toUInt(false);",
      "301:   if(commentFields > (data.size() - 8) / 4) {",
      "302:     return;",
      "303:   }",
      "305:   for(uint i = 0; i < commentFields; i++) {",
      "310:     uint commentLength = data.mid(pos, 4).toUInt(false);",
      "315:     if(pos > data.size()) {",
      "316:       break;",
      "317:     }",
      "320:     if(commentSeparatorPosition == -1) {",
      "321:       break;",
      "322:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b7ec0d26ab8e474f0ff77875b75158cb4345ed07",
      "candidate_info": {
        "commit_hash": "b7ec0d26ab8e474f0ff77875b75158cb4345ed07",
        "repo": "taglib/taglib",
        "commit_url": "https://github.com/taglib/taglib/commit/b7ec0d26ab8e474f0ff77875b75158cb4345ed07",
        "files": [
          "taglib/ogg/xiphcomment.cpp"
        ],
        "message": "Be more careful when parsing Vorbis Comments",
        "before_after_code_files": [
          "taglib/ogg/xiphcomment.cpp||taglib/ogg/xiphcomment.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "taglib/ogg/xiphcomment.cpp||taglib/ogg/xiphcomment.cpp"
          ],
          "candidate": [
            "taglib/ogg/xiphcomment.cpp||taglib/ogg/xiphcomment.cpp"
          ]
        }
      },
      "candidate_diff": {
        "taglib/ogg/xiphcomment.cpp||taglib/ogg/xiphcomment.cpp": [
          "File: taglib/ogg/xiphcomment.cpp -> taglib/ogg/xiphcomment.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:   pos += 4;",
          "307:     pos += 4;",
          "309:     String comment = String(data.mid(pos, commentLength), String::UTF8);",
          "310:     pos += commentLength;",
          "312:     int commentSeparatorPosition = comment.find(\"=\");",
          "314:     String key = comment.substr(0, commentSeparatorPosition);",
          "315:     String value = comment.substr(commentSeparatorPosition + 1);",
          "",
          "[Removed Lines]",
          "298:   int commentFields = data.mid(pos, 4).toUInt(false);",
          "301:   for(int i = 0; i < commentFields; i++) {",
          "306:     int commentLength = data.mid(pos, 4).toUInt(false);",
          "",
          "[Added Lines]",
          "298:   uint commentFields = data.mid(pos, 4).toUInt(false);",
          "301:   if(commentFields > (data.size() - 8) / 4) {",
          "302:     return;",
          "303:   }",
          "305:   for(uint i = 0; i < commentFields; i++) {",
          "310:     uint commentLength = data.mid(pos, 4).toUInt(false);",
          "315:     if(pos > data.size()) {",
          "316:       break;",
          "317:     }",
          "320:     if(commentSeparatorPosition == -1) {",
          "321:       break;",
          "322:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}