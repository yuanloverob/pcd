{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ca8b2d26f03b5bb5e71a0de6bab1580b6326fe14",
      "candidate_info": {
        "commit_hash": "ca8b2d26f03b5bb5e71a0de6bab1580b6326fe14",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ca8b2d26f03b5bb5e71a0de6bab1580b6326fe14",
        "files": [
          "ChangeLog",
          "marshal.c",
          "test/ruby/test_marshal.rb",
          "version.h"
        ],
        "message": "merge revision(s) 53609: [Backport #12011]\n\n\t* marshal.c (r_object0): honor Marshal.load post proc\n\t  value for TYPE_LINK.  by Hiroshi Nakamura <nahi@ruby-lang.org>\n\t  https://github.com/ruby/ruby/pull/1204 fix GH-1204\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53934 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "marshal.c||marshal.c",
          "test/ruby/test_marshal.rb||test/ruby/test_marshal.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "marshal.c||marshal.c": [
          "File: marshal.c -> marshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1499:      rb_raise(rb_eArgError, \"dump format error (unlinked)\");",
          "1500:  }",
          "1501:  v = (VALUE)link;",
          "1503:  break;",
          "1505:       case TYPE_IVAR:",
          "",
          "[Removed Lines]",
          "1502:  r_post_proc(v, arg);",
          "",
          "[Added Lines]",
          "1502:  v = r_post_proc(v, arg);",
          "",
          "---------------"
        ],
        "test/ruby/test_marshal.rb||test/ruby/test_marshal.rb": [
          "File: test/ruby/test_marshal.rb -> test/ruby/test_marshal.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "606:       Marshal.dump(TestForRespondToFalse.new)",
          "607:     end",
          "608:   end",
          "609: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "610:   def test_marshal_honor_post_proc_value_for_link",
          "611:     str = 'x' # for link",
          "612:     obj = [str, str]",
          "613:     assert_equal(['X', 'X'], Marshal.load(Marshal.dump(obj), ->(v) { v == str ? v.upcase : v }))",
          "614:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-02-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 452",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 453",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bdfd5fd1ab5895efcf933e45af8ef1815ad54a13",
      "candidate_info": {
        "commit_hash": "bdfd5fd1ab5895efcf933e45af8ef1815ad54a13",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/bdfd5fd1ab5895efcf933e45af8ef1815ad54a13",
        "files": [
          "ChangeLog",
          "signal.c",
          "version.h"
        ],
        "message": "merge revision(s) r48884,r48885: [Backport #10615]\n\n\t* signal.c (ruby_signal): since SIGKILL is not supported by MSVCRT,\n\t  should be treated before calling signal(3).\n\t  [Bug #10615]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49370 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "signal.c||signal.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "signal.c||signal.c": [
          "File: signal.c -> signal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "601:     return ruby_signal(signum, handler);",
          "602: }",
          "605: #define ruby_signal(sig,handler) (/* rb_trap_accept_nativethreads[(sig)] = 0,*/ signal((sig),(handler)))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "604: #elif defined _WIN32",
          "605: static inline sighandler_t",
          "606: ruby_signal(int signum, sighandler_t handler)",
          "607: {",
          "608:     if (signum == SIGKILL) {",
          "609:  errno = EINVAL;",
          "610:  return SIG_ERR;",
          "611:     }",
          "612:     return signal(signum, handler);",
          "613: }",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-01-22\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 1",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 283",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 284",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "69e671aa966f7d9ef67513141f593e61be58e2d3",
      "candidate_info": {
        "commit_hash": "69e671aa966f7d9ef67513141f593e61be58e2d3",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/69e671aa966f7d9ef67513141f593e61be58e2d3",
        "files": [
          "ChangeLog",
          "test/openssl/test_ssl_session.rb",
          "version.h"
        ],
        "message": "merge revision(s) 51569,51649: [Backport #11367]\n\n\ttest_ssl_session.rb: check SSL method\n\n\t* test/openssl/test_ssl_session.rb (test_ctx_server_session_cb):\n  ensure the method to be tested is supported.\n\t* test/openssl/test_ssl_session.rb: Fix tests so that they take in to\n\t  account OpenSSL installations that have SSLv3 disabled by default.\n\t  Thanks Jeremy Evans <code@jeremyevans.net> for the patches.\n\t  [Bug #11366] [Bug #11367]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@52638 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/openssl/test_ssl_session.rb||test/openssl/test_ssl_session.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/openssl/test_ssl_session.rb||test/openssl/test_ssl_session.rb": [
          "File: test/openssl/test_ssl_session.rb -> test/openssl/test_ssl_session.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:     ctx_proc = Proc.new { |ctx, ssl|",
          "309:       ctx.session_cache_mode = OpenSSL::SSL::SSLContext::SESSION_CACHE_SERVER",
          "310:       last_server_session = nil",
          "312:       # get_cb is called whenever a client proposed to resume a session but",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "310:       ctx.options = OpenSSL::SSL::OP_NO_TICKET",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "345:       last_client_session = nil",
          "346:       3.times do",
          "347:         sock = TCPSocket.new(\"127.0.0.1\", port)",
          "349:         ssl.sync_close = true",
          "350:         ssl.session = last_client_session if last_client_session",
          "351:         ssl.connect",
          "",
          "[Removed Lines]",
          "348:         ssl = OpenSSL::SSL::SSLSocket.new(sock, OpenSSL::SSL::SSLContext.new(\"SSLv3\"))",
          "",
          "[Added Lines]",
          "349:         ssl = OpenSSL::SSL::SSLSocket.new(sock, OpenSSL::SSL::SSLContext.new())",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-11-18\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 413",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 414",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8715551b9c187f86e16764a6de1af62763eb37f0",
      "candidate_info": {
        "commit_hash": "8715551b9c187f86e16764a6de1af62763eb37f0",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/8715551b9c187f86e16764a6de1af62763eb37f0",
        "files": [
          "ChangeLog",
          "load.c",
          "test/ruby/test_require.rb",
          "version.h"
        ],
        "message": "merge revision(s) r48186: [Backport #10448]\n\n\t* load.c (rb_f_load): path name needs to be transcoded to OS path\n\t  encoding.  [ruby-list:49994]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49366 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "load.c||load.c",
          "test/ruby/test_require.rb||test/ruby/test_require.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "load.c||load.c": [
          "File: load.c -> load.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "683: static VALUE",
          "684: rb_f_load(int argc, VALUE *argv)",
          "685: {",
          "688:     rb_scan_args(argc, argv, \"11\", &fname, &wrap);",
          "",
          "[Removed Lines]",
          "686:     VALUE fname, wrap, path;",
          "",
          "[Added Lines]",
          "686:     VALUE fname, wrap, path, orig_fname;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "693:           rb_sourceline());",
          "694:     }",
          "697:     if (!path) {",
          "698:  if (!rb_file_load_ok(RSTRING_PTR(fname)))",
          "700:  path = fname;",
          "701:     }",
          "702:     rb_load_internal(path, RTEST(wrap));",
          "",
          "[Removed Lines]",
          "696:     path = rb_find_file(FilePathValue(fname));",
          "699:      load_failed(fname);",
          "",
          "[Added Lines]",
          "696:     orig_fname = FilePathValue(fname);",
          "697:     fname = rb_str_encode_ospath(orig_fname);",
          "698:     path = rb_find_file(fname);",
          "701:      load_failed(orig_fname);",
          "",
          "---------------"
        ],
        "test/ruby/test_require.rb||test/ruby/test_require.rb": [
          "File: test/ruby/test_require.rb -> test/ruby/test_require.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "307:     }",
          "308:   end",
          "310:   def test_tainted_loadpath",
          "311:     Tempfile.create([\"test_ruby_test_require\", \".rb\"]) {|t|",
          "312:       abs_dir, file = File.split(t.path)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "310:   def test_load_ospath",
          "311:     bug = '[ruby-list:49994] path in ospath'",
          "312:     base = \"test_load\\u{3042 3044 3046 3048 304a}\".encode(Encoding::Windows_31J)",
          "313:     path = nil",
          "314:     Tempfile.create([base, \".rb\"]) do |t|",
          "315:       path = t.path",
          "317:       assert_raise_with_message(LoadError, /#{base}/) {",
          "318:         load(File.join(File.dirname(path), base))",
          "319:       }",
          "321:       t.puts \"warn 'ok'\"",
          "322:       t.close",
          "323:       assert_include(path, base)",
          "324:       assert_warn(\"ok\\n\", bug) {",
          "325:         assert_nothing_raised(LoadError, bug) {",
          "326:           load(path)",
          "327:         }",
          "328:       }",
          "329:     end",
          "330:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 1",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-01-21\"",
          "3: #define RUBY_PATCHLEVEL 279",
          "7: #define RUBY_RELEASE_DAY 21",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-01-22\"",
          "3: #define RUBY_PATCHLEVEL 280",
          "7: #define RUBY_RELEASE_DAY 22",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed3dedae1b1af09c79cd8041a168e0c0403d0b34",
      "candidate_info": {
        "commit_hash": "ed3dedae1b1af09c79cd8041a168e0c0403d0b34",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ed3dedae1b1af09c79cd8041a168e0c0403d0b34",
        "files": [
          "ChangeLog",
          "version.h"
        ],
        "message": "* version.h: bump to 2.1.10.  welcome to two-digit version!\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54456 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2016-03-30\"",
          "3: #define RUBY_PATCHLEVEL 490",
          "6: #define RUBY_RELEASE_MONTH 3",
          "7: #define RUBY_RELEASE_DAY 30",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2016-04-01\"",
          "3: #define RUBY_PATCHLEVEL 491",
          "6: #define RUBY_RELEASE_MONTH 4",
          "7: #define RUBY_RELEASE_DAY 1",
          "",
          "---------------"
        ]
      }
    }
  ]
}