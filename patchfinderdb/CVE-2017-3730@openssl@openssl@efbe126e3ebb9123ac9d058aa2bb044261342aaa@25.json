{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "12ac28e0928a9cb2b970042b86c0a5ff4476590b",
      "candidate_info": {
        "commit_hash": "12ac28e0928a9cb2b970042b86c0a5ff4476590b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/12ac28e0928a9cb2b970042b86c0a5ff4476590b",
        "files": [
          "crypto/bn/bn_div.c",
          "crypto/bn/bn_mul.c",
          "crypto/bn/bn_shift.c",
          "crypto/bn/bn_word.c"
        ],
        "message": "bn: fix occurances of negative zero\n\nThe BIGNUM behaviour is supposed to be \"consistent\" when going into and\nout of APIs, where \"consistent\" means 'top' is set minimally and that\n'neg' (negative) is not set if the BIGNUM is zero (which is iff 'top' is\nzero, due to the previous point).\n\nThe BN_DEBUG testing (make test) caught the cases that this patch\ncorrects.\n\nNote, bn_correct_top() could have been used instead, but that is intended\nfor where 'top' is expected to (sometimes) require adjustment after direct\nword-array manipulation, and so is heavier-weight. Here, we are just\ncatching the negative-zero case, so we test and correct for that\nexplicitly, in-place.\n\nChange-Id: Iddefbd3c28a13d935648932beebcc765d5b85ae7\nSigned-off-by: Geoff Thorpe <geoff@openssl.org>\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1672)\n(cherry picked from commit 38d1b3cc0271008b8bd130a2c4b442775b028a08)",
        "before_after_code_files": [
          "crypto/bn/bn_div.c||crypto/bn/bn_div.c",
          "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c",
          "crypto/bn/bn_shift.c||crypto/bn/bn_shift.c",
          "crypto/bn/bn_word.c||crypto/bn/bn_word.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bn/bn_div.c||crypto/bn/bn_div.c": [
          "File: crypto/bn/bn_div.c -> crypto/bn/bn_div.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:     wnump = &(snum->d[num_n - 1]);",
          "258:     if (!bn_wexpand(res, (loop + 1)))",
          "259:         goto err;",
          "260:     res->top = loop - no_branch;",
          "261:     resp = &(res->d[loop - 1]);",
          "",
          "[Removed Lines]",
          "257:     res->neg = (num->neg ^ divisor->neg);",
          "",
          "[Added Lines]",
          "259:     res->neg = (num->neg ^ divisor->neg);",
          "",
          "---------------"
        ],
        "crypto/bn/bn_mul.c||crypto/bn/bn_mul.c": [
          "File: crypto/bn/bn_mul.c -> crypto/bn/bn_mul.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "857:             goto err;",
          "858:     } else",
          "859:         rr = r;",
          "862: #if defined(BN_MUL_COMBA) || defined(BN_RECURSION)",
          "863:     i = al - bl;",
          "",
          "[Removed Lines]",
          "860:     rr->neg = a->neg ^ b->neg;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "969: #if defined(BN_MUL_COMBA) || defined(BN_RECURSION)",
          "970:  end:",
          "971: #endif",
          "972:     bn_correct_top(rr);",
          "973:     if (r != rr && BN_copy(r, rr) == NULL)",
          "974:         goto err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "971:     rr->neg = a->neg ^ b->neg;",
          "",
          "---------------"
        ],
        "crypto/bn/bn_shift.c||crypto/bn/bn_shift.c": [
          "File: crypto/bn/bn_shift.c -> crypto/bn/bn_shift.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:         return 0;",
          "93:     }",
          "96:     nw = n / BN_BITS2;",
          "97:     if (bn_wexpand(r, a->top + nw + 1) == NULL)",
          "98:         return (0);",
          "99:     lb = n % BN_BITS2;",
          "100:     rb = BN_BITS2 - lb;",
          "101:     f = a->d;",
          "",
          "[Removed Lines]",
          "95:     r->neg = a->neg;",
          "",
          "[Added Lines]",
          "98:     r->neg = a->neg;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:     }",
          "141:     i = (BN_num_bits(a) - n + (BN_BITS2 - 1)) / BN_BITS2;",
          "142:     if (r != a) {",
          "144:         if (bn_wexpand(r, i) == NULL)",
          "145:             return (0);",
          "146:     } else {",
          "147:         if (n == 0)",
          "",
          "[Removed Lines]",
          "143:         r->neg = a->neg;",
          "",
          "[Added Lines]",
          "145:         r->neg = a->neg;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "166:         if ((l = (l >> rb) & BN_MASK2))",
          "168:     }",
          "169:     bn_check_top(r);",
          "170:     return (1);",
          "171: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "169:     if (!r->top)",
          "",
          "---------------"
        ],
        "crypto/bn/bn_word.c||crypto/bn/bn_word.c": [
          "File: crypto/bn/bn_word.c -> crypto/bn/bn_word.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     if ((a->top > 0) && (a->d[a->top - 1] == 0))",
          "90:         a->top--;",
          "91:     ret >>= j;",
          "92:     bn_check_top(a);",
          "93:     return (ret);",
          "94: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:     if (!a->top)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0140f9d98b31142c81dc1cc35aa153682c1a313a",
      "candidate_info": {
        "commit_hash": "0140f9d98b31142c81dc1cc35aa153682c1a313a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0140f9d98b31142c81dc1cc35aa153682c1a313a",
        "files": [
          "test/ct_test.c"
        ],
        "message": "Make sure things get deleted when test setup fails in ct_test.c\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1548)\n(cherry picked from commit 765731a88899771989a53c72259cacd1c658bb3f)",
        "before_after_code_files": [
          "test/ct_test.c||test/ct_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ct_test.c||test/ct_test.c": [
          "File: test/ct_test.c -> test/ct_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: {",
          "62:     CT_TEST_FIXTURE fixture;",
          "63:     int setup_ok = 1;",
          "66:     memset(&fixture, 0, sizeof(fixture));",
          "71:         setup_ok = 0;",
          "72:         fprintf(stderr, \"Failed to create a new CT log store\\n\");",
          "73:         goto end;",
          "74:     }",
          "77:         setup_ok = 0;",
          "78:         fprintf(stderr, \"Failed to load CT log list\\n\");",
          "79:         goto end;",
          "80:     }",
          "86: end:",
          "87:     if (!setup_ok) {",
          "88:         exit(EXIT_FAILURE);",
          "89:     }",
          "90:     return fixture;",
          "",
          "[Removed Lines]",
          "64:     CTLOG_STORE *ctlog_store;",
          "68:     ctlog_store = CTLOG_STORE_new();",
          "70:     if (ctlog_store == NULL) {",
          "76:     if (CTLOG_STORE_load_default_file(ctlog_store) != 1) {",
          "82:     fixture.test_case_name = test_case_name;",
          "84:     fixture.ctlog_store = ctlog_store;",
          "",
          "[Added Lines]",
          "67:     fixture.test_case_name = test_case_name;",
          "69:     fixture.ctlog_store = CTLOG_STORE_new();",
          "71:     if (fixture.ctlog_store == NULL) {",
          "77:     if (CTLOG_STORE_load_default_file(fixture.ctlog_store) != 1) {",
          "85:         CTLOG_STORE_free(fixture.ctlog_store);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "515:     const char extensions[] = \"\";",
          "516:     const char signature[] = \"BAMARzBAMiBIL2dRrzXbplQ2vh/WZA89v5pBQpSVkkUwKI+j5\"",
          "517:             \"eI+BgIhAOTtwNs6xXKx4vXoq2poBlOYfc9BAn3+/6EFUZ2J7b8I\";",
          "519:     SETUP_CT_TEST_FIXTURE();",
          "526:     if (sct == NULL) {",
          "527:         fprintf(stderr, \"Failed to create SCT from base64-encoded test data\\n\");",
          "528:         return 0;",
          "529:     }",
          "533:     fixture.sct_dir = ct_dir;",
          "534:     fixture.sct_text_file = \"tls1.sct\";",
          "535:     EXECUTE_CT_TEST();",
          "",
          "[Removed Lines]",
          "521:     STACK_OF(SCT) *sct_list = sk_SCT_new_null();",
          "522:     SCT *sct = SCT_new_from_base64(SCT_VERSION_V1, log_id,",
          "523:                                    CT_LOG_ENTRY_TYPE_X509, timestamp,",
          "524:                                    extensions, signature);",
          "531:     sk_SCT_push(sct_list, sct);",
          "532:     fixture.sct_list = sct_list;",
          "",
          "[Added Lines]",
          "516:     SCT *sct = NULL;",
          "520:     fixture.sct_list = sk_SCT_new_null();",
          "521:     sct = SCT_new_from_base64(SCT_VERSION_V1, log_id,",
          "522:                               CT_LOG_ENTRY_TYPE_X509, timestamp,",
          "523:                               extensions, signature);",
          "526:         tear_down(fixture);",
          "531:     sk_SCT_push(fixture.sct_list, sct);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ddb618d93bf6531c28618f1aabfdc064168fdbfc",
      "candidate_info": {
        "commit_hash": "ddb618d93bf6531c28618f1aabfdc064168fdbfc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ddb618d93bf6531c28618f1aabfdc064168fdbfc",
        "files": [
          "crypto/threads_pthread.c"
        ],
        "message": "Removed tab spaces. Reviewed-by: Rich Salz <rsalz@openssl.org> Reviewed-by: Richard Levitte <levitte@openssl.org> (Merged from https://github.com/openssl/openssl/pull/1981) (cherry picked from commit 5d5eed4456ebc035893eedbcc4e32a9d065cecb3)",
        "before_after_code_files": [
          "crypto/threads_pthread.c||crypto/threads_pthread.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/threads_pthread.c||crypto/threads_pthread.c": [
          "File: crypto/threads_pthread.c -> crypto/threads_pthread.c"
        ]
      }
    },
    {
      "candidate_hash": "718951c2f2bd0065425e560584eee89ec65d22a5",
      "candidate_info": {
        "commit_hash": "718951c2f2bd0065425e560584eee89ec65d22a5",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/718951c2f2bd0065425e560584eee89ec65d22a5",
        "files": [
          "crypto/ec/ec_ameth.c"
        ],
        "message": "Fix EC_KEY_print so it prints out private key information even when the public key is not present in an EC_KEY\n\nReviewed-by: Stephen Henson <steve@openssl.org>\n(cherry picked from commit 82f52631b21b021787f344733e08bb53f1e7f0ec)",
        "before_after_code_files": [
          "crypto/ec/ec_ameth.c||crypto/ec/ec_ameth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ec/ec_ameth.c||crypto/ec/ec_ameth.c": [
          "File: crypto/ec/ec_ameth.c -> crypto/ec/ec_ameth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "345:         return 0;",
          "346:     }",
          "349:         publen = EC_KEY_key2buf(x, EC_KEY_get_conv_form(x), &pub, NULL);",
          "350:         if (publen == 0)",
          "351:             goto err;",
          "",
          "[Removed Lines]",
          "348:     if (ktype != EC_KEY_PRINT_PARAM) {",
          "",
          "[Added Lines]",
          "348:     if (ktype != EC_KEY_PRINT_PARAM && EC_KEY_get0_public_key(x) != NULL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c4ee10c0aa231a30977aad47bae1d0dbe6bbef4",
      "candidate_info": {
        "commit_hash": "2c4ee10c0aa231a30977aad47bae1d0dbe6bbef4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2c4ee10c0aa231a30977aad47bae1d0dbe6bbef4",
        "files": [
          "crypto/ui/ui_lib.c"
        ],
        "message": "Remove extra bang\n\nA bang (!) slipped through in the recent UI cleanup\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2051)\n(cherry picked from commit 949320c567811e714216ea987fe24eea1b56da5e)",
        "before_after_code_files": [
          "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c": [
          "File: crypto/ui/ui_lib.c -> crypto/ui/ui_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "483:     }",
          "484:  err:",
          "485:     if (ui->meth->ui_close_session != NULL",
          "487:         if (state == NULL)",
          "488:             state = \"closing session\";",
          "489:         ok = -1;",
          "",
          "[Removed Lines]",
          "486:         && !ui->meth->ui_close_session(ui) <= 0) {",
          "",
          "[Added Lines]",
          "486:         && ui->meth->ui_close_session(ui) <= 0) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}